{"version":3,"file":"common.8fa01e05e0ff3e9f.js","mappings":"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","names":["i0","_r1","ctx_r1","openLightspeedFeatureInfo","params","lightSpeedLink","lightSpeedOwner","LightSpeedActionsComponent_Conditional_1_Conditional_1_Template","LightSpeedActionsComponent_Conditional_1_Conditional_2_Template","appHasLightSpeed","lightSpeed","Title","appLightSpeedEnabled","LightSpeedActionsComponent","constructor","this","input","required","features","inject","FeaturesScopedService","lightSpeedEnabled","isEnabled","FeatureNames","LightSpeed","Id","IsEnabled","selectors","inputs","standalone","decls","vars","consts","template","rf","ctx","LightSpeedActionsComponent_Conditional_0_Template","LightSpeedActionsComponent_Conditional_1_Template","TippyDirective","MatIconModule","i1","MatBadgeModule","i2","MatRippleModule","i3","encapsulation","AppAdminHelpers","getLightSpeedEditParams","appId","items","EditPrep","newMetadata","eavConstants","appMetadata","ContentTypeName","metadata","app","fieldNamePattern","fieldNameError","AgActionsAlwaysRefresh","refresh","AnalyzeSettingsService","HttpServiceBase","getStackSig","part","key","view","stringifyValue","stackSignal","signal","getAndWrite","webApiAppRoot","computed","map","stackItem","_value","JSON","stringify","Value","getStack","getHttp","pipe","stack","__ngFactoryType__","factory","ɵfac","AnalyzeSettingsValueComponent","clipboard","transient","ClipboardService","agInit","value","copy","JsonHelpers","tryParse","copyToClipboard","styles","webApiAppRootApp","AppsListService","getAll","getSignal","zoneId","getInheritable","getPendingApps","create","name","inheritAppId","templateId","http","post","apiUrl","installPendingApps","pendingApps","delete","toString","flushCache","getHttpApiUrl","webApiLicSummary","FeaturesConfigService","saveFeatures","featuresStates","getLicenses","getLicensesSig","uploadLicense","file","formData","FormData","append","info","Success","Messages","MessageType","FileUploadMessageTypes","Error","Text","Message","retrieveLicense","ZoneService","getLanguage","initial","toggleLanguage","code","enable","cultureCode","getSystemInfo","getLanguagesPermissions","importContentItemDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ImportContentItemComponent","Promise","all","__webpack_require__","e","then","bind","contentItemsDialog","ContentItemsComponent","contentItemsRoutes","path","component","DialogEntryComponent","data","dialog","children","GoToMetadata","getRoutes","loadChildren","m","ContentExportRoutes","contentImportRoutes","title","EditRoutes","calculateTypeIcon","typeName","DataTypeCatalog","Boolean","Custom","DateTime","Empty","Entity","Hyperlink","Number","String","calculateTypeLabel","editContentTypeFieldsDialog","EditContentTypeFieldsComponent","contentTypeFieldsRoutes","ContentTypeFieldsComponent","GoToPermissions","route","ReservedNamesValidatorDirective","appReservedNames","validate","control","controlValue","toLocaleLowerCase","reservedName","Object","keys","find","reservedNames","mergeReserved","fields","existingFields","forEach","field","StaticName","provide","NG_VALIDATORS","useExisting","multi","DebugFields","environment","production","logSpecs","markTouched","set","disable","getErrors","pfx","UiControl","moreDisabled","log","classLog","#warningMessages","jsonWarning","formulaWarning","dirty","invalid","touched","disabled","extendName","aIfInList","emptyControl","touchedAndInvalid","setIfChanged","newValue","before","isEqual","#set","markAsTouched","FieldValueHelpers","fieldValuesAreEqual","markAsDirty","patchValue","updateValueAndValidity","errors","l","fnIfInList","r","errorKey","error","formulaMessage","ValidationMsgHelper","messages","getWarnings","_warning","warning","warningKey","x","y","isNaN","Array","isArray","RxHelpers","arraysEqual","getItemValuesChanges","oldValues","newValues","changes","length","undefined","prefix","notValid","long","min","max","minNoItems","maxNoItems","pattern","decimals","jsonError","formulaError","validateForm","form","controlKey","entries","controls","importRoutes","ImportAppComponent","webApiContentGroup","ContentGroupService","getItems","item","guid","index","saveItem","entityId","id","add","removeItem","contentGroup","parent","getList","saveList","resortedList","getHeader","replaceContentDialog","ReplaceContentComponent","replaceContentRoutes","EditRoutesNoHistory","#dialogData","#dialog","matDialog","viewContainerRef","router","context","changeDetectorRef","navigation","getCurrentNavigation","extras","state","ngOnInit","fn","dialogConfig","snapshot","a","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","ngOnDestroy","close","svcId","init","open","autoFocus","backdropClass","closeOnNavigation","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","window","$2sxc","totalPopup","navigate","url","relativeTo","markForCheck","Context","guidRegex","parse","loadScripts","scriptObjects","callback","iteration","newCallback","scrObj","global","test","w","require","src","exportedVar","UpdateEnvVarsFromDialogSettings","appContext","includedApiRoot","Api","new2sxcHeader","env","header","appApi","load","AppScopes","App","Site","Global","DialogService","openCodeFile","isShared","DialogTypeConstants","Develop","Path","editId","hashParams","buildHashParam","keyDialog","keyIsShared","keyItems","buildFullUrl","openQueryDesigner","queryId","PipelineDesigner","keyPipelineId","openAppsManagement","tab","keyZoneId","Zone","keyExtras","openAppAdministration","scope","keyAppId","buildSharedHashParams","keyModuleId","moduleId","keyContentBlockId","contentBlockId","keyPartOfPage","sessionStorage","getItem","keyDebug","rawKey","replace","valueTemp","rawValue","encodeURIComponent","oldHref","keyUrl","oldUrl","URL","newHref","origin","pathname","search","allHashParams","reduce","acc","arrReducer","arr","push","toArray","operate","source","subscriber"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.html","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.ts","./projects/eav-ui/src/app/app-administration/app-admin-helpers.ts","./projects/eav-ui/src/app/app-administration/constants/field-name.patterns.ts","./projects/eav-ui/src/app/app-administration/queries/ag-actions/ag-actions-component.ts","./projects/eav-ui/src/app/app-administration/services/analyze-settings.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.html","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/apps-management/services/features-config.service.ts","./projects/eav-ui/src/app/apps-management/services/zone.service.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items.routing.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.helpers.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.routing.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/reserved-names.directive.ts","./projects/eav-ui/src/app/edit/edit-debug.ts","./projects/eav-ui/src/app/edit/shared/controls/ui-control.ts","./projects/eav-ui/src/app/edit/shared/helpers/field-value.helpers.ts","./projects/eav-ui/src/app/edit/shared/validation/validation-messages.helpers.ts","./projects/eav-ui/src/app/import-app/import-app-dialog.config.ts","./projects/eav-ui/src/app/import-app/import-app.routing.ts","./projects/eav-ui/src/app/manage-content-list/services/content-group.service.ts","./projects/eav-ui/src/app/replace-content/replace-content-dialog.config.ts","./projects/eav-ui/src/app/replace-content/replace-content.routing.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./projects/eav-ui/src/app/shared/constants/guid.constants.ts","./projects/eav-ui/src/app/shared/helpers/json.helpers.ts","./projects/eav-ui/src/app/shared/helpers/load-scripts.helper.ts","./projects/eav-ui/src/app/shared/helpers/update-env-vars-from-dialog-settings.helper.ts","./projects/eav-ui/src/app/shared/models/dialog-context.models.ts","./projects/eav-ui/src/app/shared/services/dialog.service.ts","./node_modules/rxjs/dist/esm/internal/operators/toArray.js"],"sourcesContent":["@if (!lightSpeedEnabled()) {\r\n  <div class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\" (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n  </div>\r\n} @else {\r\n  <div\r\n    class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled' }}\"\r\n    matRipple\r\n    [tippy]=\"appHasLightSpeed ? lightSpeed().Title : 'Not yet configured for LightSpeed'\"\r\n  >\r\n    @if (appLightSpeedEnabled) {\r\n      <a class=\"default-link\" [href]=\"'#' + params().lightSpeedLink(lightSpeedOwner())\">\r\n        <mat-icon matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n      </a>\r\n    } @else {\r\n      <a class=\"default-link\" [href]=\"'#' + params().lightSpeedLink(lightSpeedOwner())\">\r\n        <mat-icon matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n      </a>\r\n    }\r\n  </div>\r\n}\r\n","import { Component, inject, input } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LightSpeedInfo } from '../../apps-management/models/LightSpeedInfo';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { LightSpeedActionsParams } from './lightspeed-actions.models';\r\n\r\n/**\r\n * LightSpeedActionsComponent\r\n *\r\n * Specially meant to be used inside an AGGrid action, and receive the parameters from it.\r\n *\r\n */\r\n@Component({\r\n  selector: 'app-lightspeed-action',\r\n  templateUrl: './lightspeed-action.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class LightSpeedActionsComponent {\r\n  /** App needed for lightspeed checks */\r\n  lightSpeedOwner = input.required<unknown>();\r\n\r\n  params = input.required<LightSpeedActionsParams>();\r\n\r\n  lightSpeed = input.required<LightSpeedInfo | null>();\r\n\r\n  public features = inject(FeaturesScopedService);\r\n\r\n  constructor() { }\r\n\r\n  protected lightSpeedEnabled = this.features.isEnabled[FeatureNames.LightSpeed]\r\n\r\n  public get appHasLightSpeed(): boolean {\r\n    return this.lightSpeed()?.Id != null;\r\n  }\r\n\r\n  public get appLightSpeedEnabled(): boolean {\r\n    return this.lightSpeed()?.IsEnabled == true;\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params().openLightspeedFeatureInfo();\r\n  }\r\n}\r\n","import { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\n\r\nexport class AppAdminHelpers {\r\n  public static getLightSpeedEditParams(appId: number) {\r\n    const form: EditForm = {\r\n      items: [\r\n        EditPrep.newMetadata(appId, eavConstants.appMetadata.LightSpeed.ContentTypeName, eavConstants.metadata.app, true),\r\n      ],\r\n    };\r\n    return form;\r\n  }\r\n}\r\n","export const fieldNamePattern = /^[A-Za-z][A-Za-z0-9]+$/;\r\nexport const fieldNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nexport abstract class AgActionsAlwaysRefresh implements ICellRendererAngularComp {\r\n  abstract agInit(params: any): void;\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { computed, Injectable, signal, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { AnalyzeParts, SettingsStackItem } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\n\r\n@Injectable()\r\nexport class AnalyzeSettingsService extends HttpServiceBase {\r\n\r\n\r\n  // TEMP, not sure if this are correct\r\n  getStackSig(part: Of<typeof AnalyzeParts>, key?: string, view?: string, stringifyValue = false): Signal<SettingsStackItem[]> {\r\n    const stackSignal = signal<SettingsStackItem[]>([]);\r\n\r\n    this.getAndWrite<SettingsStackItem[]>(webApiAppRoot + 'GetStack', {\r\n      params: {\r\n        appId: this.appId,\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }, stackSignal);\r\n\r\n    return computed(() => stringifyValue\r\n      ? stackSignal().map(stackItem => ({ ...stackItem, _value: JSON.stringify(stackItem.Value) }))\r\n      : stackSignal()\r\n    );\r\n  }\r\n\r\n\r\n  getStack(part: Of<typeof AnalyzeParts>, key?: string, view?: string, stringifyValue = false): Observable<SettingsStackItem[]> {\r\n\r\n    return this.getHttp<SettingsStackItem[]>(webApiAppRoot + 'GetStack', {\r\n      params: {\r\n        appId: this.appId,\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }).pipe(\r\n      map(stack => {\r\n\r\n        if (!stringifyValue) { return stack; }\r\n\r\n        for (const stackItem of stack) {\r\n          stackItem._value = JSON.stringify(stackItem.Value);\r\n        }\r\n        return stack;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { JsonHelpers } from '../../../../shared/helpers/json.helpers';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-value',\r\n  templateUrl: './analyze-settings-value.component.html',\r\n  styleUrls: ['./analyze-settings-value.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsValueComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n\r\n  constructor() { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n  \r\n  copy(value: string) {\r\n    value = JsonHelpers.tryParse(value) ?? value;\r\n    this.clipboard.copyToClipboard(value);\r\n  }\r\n}\r\n","<div matRipple class=\"value-box highlight\" [tippy]=\"value\" (click)=\"copy(value)\">\r\n  <span class=\"value\">{{ value }}</span>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { App, PendingApp } from '../models/app.model';\r\n\r\n const webApiAppRootList = 'admin/app/list';\r\n const webApiAppRootInheritableApps = 'admin/app/InheritableApps';\r\n const webApiAppRootPendingApps = 'admin/app/GetPendingApps';\r\n const webApiAppRootApp = 'admin/app/app';\r\n const webApiAppRootInstallPendingApps = 'admin/app/InstallPendingApps';\r\n const webApiAppRootFlushcache = 'admin/app/flushcache';\r\n\r\n@Injectable()\r\nexport class AppsListService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getSignal<App[]>(webApiAppRootList, {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return this.getSignal<App[]>(webApiAppRootInheritableApps, {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getPendingApps() {\r\n    return this.getSignal<PendingApp[]>(webApiAppRootPendingApps, {\r\n      params: { zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootApp), {}, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootInstallPendingApps), pendingApps, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRootApp), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.getHttpApiUrl<null>(webApiAppRootFlushcache, {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { License, LicenseDownloadInfo, LicenseUploadInfo } from '../models/license.model';\r\n\r\nconst webAPiLicenseRetrieve = 'sys/license/Retrieve';\r\nconst webApiFeatSaveNew = 'admin/feature/SaveNew';\r\nconst webApiLicSummary = 'sys/license/Summary';\r\nconst webApiUpload = 'sys/license/Upload';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService extends HttpServiceBase {\r\n\r\n  saveFeatures(featuresStates: FeatureState[]): Observable<null> {\r\n    return this.http.post<null>(this.apiUrl(webApiFeatSaveNew), featuresStates);\r\n  }\r\n\r\n  getLicenses(): Observable<License[]> { // Use new Signals\r\n    return this.getHttpApiUrl<License[]>(webApiLicSummary);\r\n  }\r\n\r\n  getLicensesSig() { // Use new Signals\r\n    return this.getSignal<License[]>(webApiLicSummary);\r\n  }\r\n\r\n  uploadLicense(file: File): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<LicenseUploadInfo>(this.apiUrl(webApiUpload), formData)\r\n      .pipe(\r\n        map(info => ({\r\n          Success: info.Success,\r\n          Messages: [{\r\n            MessageType: info.Success ? FileUploadMessageTypes.Success : FileUploadMessageTypes.Error,\r\n            Text: `License ${info.Success ? 'uploaded' : 'upload failed'}: ${info.Message}`,\r\n          }],\r\n        } satisfies FileUploadResult)),\r\n      );\r\n  }\r\n\r\n  retrieveLicense(): Observable<LicenseDownloadInfo> {\r\n    return this.getHttpApiUrl<LicenseDownloadInfo>(webAPiLicenseRetrieve);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { SiteLanguage, SiteLanguagePermissions } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\n\r\nconst webApiZoneRootGetLanguages = 'admin/zone/GetLanguages';\r\nconst webApiZoneRootSwitchLanguage = 'admin/zone/SwitchLanguage';\r\nconst webApiZoneRootGetSystemInfo = 'admin/zone/GetSystemInfo';\r\nconst webApiAppRootRootlanguages = 'admin/app/languages';\r\n\r\n@Injectable()\r\nexport class ZoneService extends HttpServiceBase {\r\n\r\n  getLanguage(initial: undefined) {\r\n    return this.getSignal<SiteLanguage[]>(webApiZoneRootGetLanguages, {}, initial);\r\n  }\r\n\r\n  toggleLanguage(code: string, enable: boolean) {\r\n    return this.getHttpApiUrl<null>(webApiZoneRootSwitchLanguage, {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  // toggleLanguageSig(code: string, enable: boolean)  {\r\n  //   return this.getSignal<null>(webApiZoneRootSwitchLanguage, {\r\n  //     params: { cultureCode: code, enable: enable.toString() },\r\n  //   });\r\n  // }\r\n\r\n  getSystemInfo(initial: undefined) {\r\n    return this.getSignal<SystemInfoSet>(webApiZoneRootGetSystemInfo, {}, initial);\r\n  }\r\n\r\n  getLanguagesPermissions(initial: undefined) {\r\n    return this.getSignal<SiteLanguagePermissions[]>(webApiAppRootRootlanguages, {\r\n      params: { appId: this.appId },\r\n    }, initial);\r\n  };\r\n}\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const importContentItemDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_ITEM_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentItemComponent: ImportContentItemComponent } = await import('./import-content-item.component');\r\n    return ImportContentItemComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentItemsDialog: DialogConfig = {\r\n  name: 'CONTENT_ITEMS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentItemsComponent } = await import('./content-items.component');\r\n    return ContentItemsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importContentItemDialog } from './import-content-item/import-content-item-dialog.config';\r\nimport { contentItemsDialog } from './content-items-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const contentItemsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentItemsDialog },\r\n    children: [\r\n      ...GoToMetadata.getRoutes(),\r\n      {\r\n        path: 'export/:contentTypeStaticName',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'export/:contentTypeStaticName/:selectedIds',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'import',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: importContentItemDialog }\r\n      },\r\n      {\r\n        path: ':contentTypeStaticName/import',\r\n        loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n        data: { title: 'Import Items' },\r\n      },\r\n      ...EditRoutes,\r\n    ]\r\n  },\r\n];\r\n\r\n","import { DataTypeCatalog } from '../shared/fields/data-type-catalog';\r\n\r\nexport function calculateTypeIcon(typeName: string): string {\r\n  const typeIconMap: Record<string, string> = {\r\n    [DataTypeCatalog.Boolean]: 'toggle_on',\r\n    [DataTypeCatalog.Custom]: 'extension',\r\n    [DataTypeCatalog.DateTime]: 'today',\r\n    [DataTypeCatalog.Empty]: 'crop_free',\r\n    [DataTypeCatalog.Entity]: 'share',\r\n    [DataTypeCatalog.Hyperlink]: 'link',\r\n    [DataTypeCatalog.Number]: 'dialpad',\r\n    [DataTypeCatalog.String]: 'text_fields',\r\n  };\r\n  return typeIconMap[typeName] ?? 'device_unknown';\r\n}\r\n\r\nexport function calculateTypeLabel(typeName: string): string {\r\n  const typeLabelMap: Record<string, string> = {\r\n    [DataTypeCatalog.Boolean]: 'Boolean (yes/no)',\r\n    [DataTypeCatalog.Custom]: 'Custom - ui-tools or custom types',\r\n    [DataTypeCatalog.DateTime]: 'Date and/or time',\r\n    [DataTypeCatalog.Empty]: 'Empty - for form-titles etc.',\r\n    [DataTypeCatalog.Entity]: 'Entity (other content-items)',\r\n    [DataTypeCatalog.Hyperlink]: 'Link / file reference',\r\n    [DataTypeCatalog.Number]: 'Number',\r\n    [DataTypeCatalog.String]: 'Text / string',\r\n  };\r\n  return typeLabelMap[typeName] ?? 'device_unknown';\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentTypeFieldsDialog: DialogConfig = {\r\n  name: 'CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentTypeFieldsComponent } = await import('./content-type-fields.component');\r\n    return ContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeFieldsDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeFieldsComponent } = await import('./edit-content-type-fields.component');\r\n    return EditContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentTypeFieldsDialog } from './content-type-fields-dialog.config';\r\nimport { editContentTypeFieldsDialog } from './edit-content-type-fields/edit-content-type-fields-dialog.config';\r\n\r\nexport const contentTypeFieldsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentTypeFieldsDialog },\r\n    children: [\r\n      {\r\n        path: 'add/:contentTypeStaticName',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog }\r\n      },\r\n      {\r\n        path: 'update/:contentTypeStaticName/:id/:editMode',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog },\r\n      },\r\n      ...GoToMetadata.getRoutes(),\r\n      GoToPermissions.route,\r\n      ...EditRoutes,\r\n    ]\r\n  }\r\n];\r\n","import { Directive, input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\r\nimport { Field } from '../../shared/fields/field.model';\r\n\r\n@Directive({\r\n    selector: '[appReservedNames]',\r\n    providers: [\r\n      { provide: NG_VALIDATORS, useExisting: ReservedNamesValidatorDirective, multi: true },\r\n    ],\r\n    standalone: true,\r\n})\r\nexport class ReservedNamesValidatorDirective implements Validator {\r\n  appReservedNames = input<Record<string, string>>({});\r\n\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    if (!control.value) { return null; }\r\n\r\n    const controlValue = (control.value as string).toLocaleLowerCase();\r\n    const reservedName = Object.keys(this.appReservedNames()).find(name => name.toLocaleLowerCase() === controlValue);\r\n    return reservedName ? { reservedNames: this.appReservedNames()[reservedName] } : null;\r\n  }\r\n\r\n  static mergeReserved(reservedNames: Record<string, string>, fields: Field[]) {\r\n    const existingFields: Record<string, string> = {};\r\n    fields.forEach(field => {\r\n      existingFields[field.StaticName] = 'this field already exists';\r\n    });\r\n    return {\r\n      ...reservedNames,\r\n      ...existingFields,\r\n    };\r\n  }\r\n\r\n}\r\n","import { environment } from '../../environments/environment';\r\n\r\n/**\r\n * List of fields to debug across the entire application.\r\n * \r\n * Change as you need, but after debugging, best set it back to [].\r\n */\r\nexport const DebugFields: string[] = !environment.production\r\n  // ? ['StringPicker']\r\n  // ? ['NumberInputAddUntillDevisibleBy5']\r\n  // ? ['WysiwygConfiguration']\r\n  // ? ['Items']\r\n  ? ['ViewController']\r\n  // ? ['Title']\r\n  // ? [] // no fields\r\n  // ? ['*'] // all fields\r\n  : [];\r\n","import { AbstractControl } from '@angular/forms';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { FieldValueHelpers } from '../helpers/field-value.helpers';\r\nimport { ValidationMsgHelper } from '../validation/validation-messages.helpers';\r\nimport { AbstractControlPro } from '../validation/validation.helpers';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  constructor: false,\r\n  markTouched: false,\r\n  set: false,\r\n  disable: false,\r\n  getErrors: true,\r\n  fields: [...DebugFields, '*'],\r\n};\r\n\r\nconst pfx = 'ValidationMessage.';\r\n\r\n/**\r\n * Provides information about the UI Control, but NOT the value.\r\n * It is used to simplify the logic when interacting with the Angular Virtual Form.\r\n */\r\nexport class UiControl {\r\n\r\n  log = classLog({UiControl}, logSpecs);\r\n\r\n  constructor(\r\n    public control: AbstractControl,\r\n    private name = 'unknown',\r\n    private moreDisabled: boolean = false,\r\n  ) {\r\n    // Patch control with dummy object for the nullable case where we're just creating a fake control...\r\n    this.control ??= { dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl;\r\n    this.log.extendName(`[${name}]`);\r\n    this.log.aIfInList('fields', this.name, { moreDisabled }, 'constructor');\r\n  }\r\n\r\n  static emptyControl() {\r\n    return new UiControl({ dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl);\r\n  }\r\n\r\n  //#region simple direct properties & complex properties\r\n  get dirty() { return this.control.dirty; }\r\n  get invalid() { return this.control.invalid; }\r\n  get touched() { return this.control.touched; }\r\n  get disabled() { return this.control.disabled || this.moreDisabled; }\r\n  get touchedAndInvalid() { return this.control.touched && this.control.invalid; }\r\n  //#endregion\r\n\r\n  //#region methods\r\n\r\n  markTouched(): void {\r\n    this.log.aIfInList('fields', this.name, null, 'markTouched');\r\n    UiControl.markTouched(this.control);\r\n  }\r\n\r\n  setIfChanged(newValue: FieldValue): void {\r\n    const before = this.control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'setIfChanged');\r\n    if (isEqual(newValue, this.control.value)) return;\r\n    this.#set(newValue);\r\n  }\r\n\r\n  /** Use to update form controls value */\r\n  #set(newValue: FieldValue): void {\r\n    const control = this.control;\r\n    const before = control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'set');\r\n\r\n    if (!control.touched)\r\n      control.markAsTouched();\r\n\r\n    if (!control.dirty && !FieldValueHelpers.fieldValuesAreEqual(before, newValue))\r\n      control.markAsDirty();\r\n\r\n    // Note: 2024-10-21 ca. 18.02 we have some timing issues, error always seems to show previous error; maybe fixed now, otherwise revisit\r\n    // Set value must happen at the end, otherwise errors will be late by one cycle\r\n    // for example, they could show \"required\" after the value was\r\n    control.patchValue(newValue);\r\n  }\r\n\r\n  disable(disable: boolean): void {\r\n    this.log.aIfInList('fields', this.name, null, `disable: ${disable}`);\r\n    UiControl.disable(this.control, disable);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region private helpers\r\n\r\n  /** TODO: Try to remove this by assigning controls [formControlName] in [formGroup] */\r\n  static markTouched(control: AbstractControl): void {\r\n    if (control.touched)\r\n      return;\r\n\r\n    control.markAsTouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  /** Disables/enables control if not already disabled/enabled. Use this helper to trigger fewer events on the form */\r\n  static disable(control: AbstractControl, disable: boolean) {\r\n    if (control.disabled === disable)\r\n      return;\r\n\r\n    if (disable)\r\n      control.disable();\r\n    else\r\n      control.enable();\r\n  }\r\n  //#endregion\r\n\r\n  /** Calculates error message */\r\n  getErrors(): string {\r\n    const control = this.control;\r\n    const errors = control.errors;\r\n    const l = this.log.fnIfInList('getErrors', 'fields', this.name, { control, name: this.name });\r\n    if (!control.invalid)\r\n      return l.r('', 'valid');\r\n    if (!control.dirty && !control.touched)\r\n      return l.r('', 'not dirty or touched');\r\n\r\n    for (const errorKey of Object.keys(errors)) {\r\n      const error = (errorKey === 'formulaError')\r\n        ? control.errors['formulaMessage'] ?? ValidationMsgHelper.messages[errorKey]?.(true)\r\n        : ValidationMsgHelper.messages[errorKey]?.(true);\r\n      if (error)\r\n        return l.r(error, 'error found');\r\n    }\r\n\r\n    return l.r('', 'no error');\r\n  }\r\n\r\n  #warningMessages: Record<string, string> = {\r\n    jsonWarning: `${pfx}JsonWarning`,\r\n    formulaWarning: `${pfx}NotValid`,\r\n  };\r\n\r\n  getWarnings(): string {\r\n    const control = this.control as AbstractControlPro;\r\n    if (control._warning == null)\r\n      return '';\r\n    if (!control.dirty && !control.touched)\r\n      return '';\r\n\r\n    let warning = '';\r\n    for (const warningKey of Object.keys(control._warning)) {\r\n      warning = (warningKey === 'formulaWarning')\r\n        ? control._warning['formulaMessage'] ?? this.#warningMessages[warningKey]\r\n        : this.#warningMessages[warningKey];\r\n      if (warning)\r\n        break;\r\n    }\r\n    return warning;\r\n  }\r\n}\r\n","import { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { RxHelpers } from '../../../shared/rxJs/rx.helpers';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\n\r\n\r\nexport class FieldValueHelpers {\r\n  /** Detect if two values are equal, incl. special NaN and Array checks */\r\n  static fieldValuesAreEqual(x: FieldValue, y: FieldValue): boolean {\r\n    if (x === y) return true;\r\n    if (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y)) return true;\r\n    if (Array.isArray(x) && Array.isArray(y) && RxHelpers.arraysEqual(x, y)) return true;\r\n    return false;\r\n  }\r\n\r\n  /** Searches where newValues has values different from oldValues */\r\n  static getItemValuesChanges(oldValues: ItemValuesOfLanguage, newValues: ItemValuesOfLanguage): ItemValuesOfLanguage {\r\n    const changes: ItemValuesOfLanguage = {};\r\n    for (const key of Object.keys(newValues)) {\r\n      const newValue = newValues[key];\r\n      const oldValue = oldValues[key];\r\n      if (FieldValueHelpers.fieldValuesAreEqual(newValue, oldValue))\r\n        continue;\r\n\r\n      changes[key] = newValue;\r\n    }\r\n    return Object.keys(changes).length === 0 ? undefined : changes;\r\n  }\r\n}\r\n","import { UntypedFormGroup } from '@angular/forms';\r\nimport { UiControl } from '../controls/ui-control';\r\n\r\n// prefix for translation keys\r\nconst prefix = 'ValidationMessage.';\r\nconst notValid = 'ValidationMessage.NotValid';\r\n\r\nexport class ValidationMsgHelper {\r\n\r\n  public static messages: Record<string, (long: boolean) => string> = {\r\n    required: (long: boolean) => long ? `${prefix}Required` : `${prefix}RequiredShort` /* short version in snackbar*/,\r\n    min: (long: boolean) => long ? `${prefix}Min` : notValid,\r\n    max: (long: boolean) => long ? `${prefix}Max` : notValid,\r\n    minNoItems: (long: boolean) => long ? `${prefix}MinNoItems` : notValid,\r\n    maxNoItems: (long: boolean) => long ? `${prefix}MaxNoItems` : notValid,\r\n    pattern: (long: boolean) => long ? `${prefix}Pattern` : notValid,\r\n    decimals: (long: boolean) => long ? `${prefix}Decimals` : notValid,\r\n    jsonError: (long: boolean) => long ? `${prefix}JsonError` : notValid,\r\n    formulaError: (long: boolean) => notValid,\r\n  };\r\n\r\n  /** Marks controls as touched to show errors beneath controls and collects error messages */\r\n  static validateForm(form: UntypedFormGroup): Record<string, string> {\r\n    const errors: Record<string, string> = {};\r\n    for (const [controlKey, control] of Object.entries(form.controls)) {\r\n      UiControl.markTouched(control);\r\n\r\n      if (!control.invalid) continue;\r\n\r\n      for (const errorKey of Object.keys(control.errors)) {\r\n        errors[controlKey] = this.messages[errorKey]?.(false);\r\n        if (errors[controlKey]) break;\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const importAppDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppComponent } = await import('./import-app.component');\r\n    return ImportAppComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importAppDialog } from './import-app-dialog.config';\r\n\r\nexport const importRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: importAppDialog }\r\n  }\r\n];\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { ReplaceConfig } from '../../replace-content/replace-config.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService extends HttpServiceBase {\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.getHttpApiUrl<ReplaceConfig>(webApiContentGroup + 'replace', {\r\n      params: { appId: this.appId, guid: item.guid, part: item.part, index: item.index.toString() }\r\n    });\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post<null>(this.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    });\r\n  }\r\n\r\n  removeItem(contentGroup: ContentGroup, index: number) {\r\n    // note: the server checks if the part == 'content' and will automatically treat it as a pair with presentation\r\n    return this.http.delete<null>(this.apiUrl('cms/list/delete'), {\r\n      params: { index: index, parent: contentGroup.guid, fields: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.getHttpApiUrl<GroupHeader[]>(webApiContentGroup + 'itemlist', {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup, initial: GroupHeader) {\r\n    return this.getSignal<GroupHeader>(webApiContentGroup + 'header', {\r\n      params: { appId: this.appId, guid: contentGroup.guid }\r\n    }, initial);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const replaceContentDialog: DialogConfig = {\r\n  name: 'REPLACE_CONTENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ReplaceContentComponent } = await import('./replace-content.component');\r\n    return ReplaceContentComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { replaceContentDialog } from './replace-content-dialog.config';\r\nimport { EditRoutesNoHistory } from '../edit/edit.routing';\r\n\r\nexport const replaceContentRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: replaceContentDialog },\r\n    children: [\r\n      // Note 2024-07-01 2dm - not sure why it is configured without history, but to be safe I'll keep it for now\r\n      ...EditRoutesNoHistory\r\n    ],\r\n  },\r\n];\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/routing/edit-routing.service';\r\nimport { classLog } from '../../logging';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  standalone: true,\r\n  imports: [],\r\n  providers: [\r\n    Context, // this is used in the dialog to get the correct App\r\n  ],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  \r\n  log = classLog({DialogEntryComponent});\r\n  \r\n  #dialogData: Record<string, any>;\r\n  #dialog: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.#dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const l = this.log.fn('ngOnInit');\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null)\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n\r\n    l.a('Open dialog: '+ dialogConfig.name, { id: this.context.id, context: this.context });\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      const dialog = (this.matDialog as any);\r\n      if (dialog._dialogAnimatingOpen && dialog._lastDialogRef)\r\n        (dialog._lastDialogRef as MatDialogRef<any>).afterOpened()\r\n          .subscribe(() => this.openDialogComponent(dialogConfig, component));\r\n      else\r\n        this.openDialogComponent(dialogConfig, component);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#dialog.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    this.log.a(`Open dialog(initContext: ${dialogConfig.initContext})`, { name: dialogConfig.name, 'Contextid:': this.context.log.svcId, 'Context:': this.context });\r\n    if (dialogConfig.initContext)\r\n      this.context.init(this.route);\r\n\r\n    this.#dialog = this.matDialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.#dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.#dialog.afterClosed().subscribe((data: any) => {\r\n      this.log.a('Dialog was closed - name:' + dialogConfig.name, { data });\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0)\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      else\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","/**\r\n * Do not reuse regex:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test#using_test_on_a_regex_with_the_global_flag\r\n */\r\nexport function guidRegex(): RegExp {\r\n  return /^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$/i;\r\n}\r\n","\r\nexport class JsonHelpers {\r\n\r\n  /** Tries to parse string as JSON */\r\n  static tryParse(input: string): any {\r\n    try {\r\n      return JSON.parse(input);\r\n    } catch { }\r\n  }\r\n}\r\n","import { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function loadScripts(scriptObjects: ScriptObject[], callback: () => void, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n  const w = window as Record<string, any>;\r\n\r\n  if (global != null && !!w[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  window.require([scrObj.src], (exportedVar: any) => {\r\n    if (exportedVar && !w[global]) {\r\n      w[global] = exportedVar;\r\n    }\r\n    newCallback();\r\n  });\r\n}\r\n\r\nexport interface ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import { EnvironmentSpecs } from '@2sic.com/2sxc-typings';\r\nimport { DialogContextApp } from '../models/dialog-context.models';\r\nimport { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n/**\r\n * This ensures that $2sxc is fully initialized with parameters which are provided later on\r\n * The appApi is being added in v12\r\n * It's important because in Oqtane the app-api root is different in from the normal admin-apis\r\n */\r\nexport function UpdateEnvVarsFromDialogSettings(appContext: DialogContextApp): void {\r\n  try {\r\n    const includedApiRoot = appContext?.Api;\r\n    if (!includedApiRoot) return;\r\n\r\n    const old2sxcHeader = (window.$2sxc.env as any).header as EnvironmentSpecs;\r\n    const new2sxcHeader = { ...old2sxcHeader, appApi: includedApiRoot } as EnvironmentSpecs;\r\n    window.$2sxc.env.load(new2sxcHeader);\r\n  } catch { /* ignore */ }\r\n}\r\n","import { Of } from '../../../../../core';\r\nimport { PermissionsCount } from '../../app-administration/models/permissions-count.model';\r\nimport { Language } from './language.model';\r\n\r\nexport interface DialogContextApp {\r\n  /** Root for app APIs and content/query */\r\n  Api: string;\r\n  Folder: string;\r\n  GettingStartedUrl: string;\r\n  Id: number;\r\n  Identifier: string;\r\n  IsContentApp: boolean;\r\n  IsGlobalApp: boolean;\r\n  IsInherited: boolean;\r\n  IsShared: boolean;\r\n  IsSiteApp: boolean;\r\n  Name: string;\r\n  Permissions: PermissionsCount;\r\n  SettingsScope: Of<typeof AppScopes>;\r\n  Url: string;\r\n  SharedUrl: string;\r\n\r\n  /** New app icon */\r\n  Icon: string;\r\n}\r\n\r\nexport interface ApiKeySpecs {\r\n  NameId: string;\r\n  ApiKey: string;\r\n  IsDemo: boolean;\r\n}\r\n\r\nexport const AppScopes = {\r\n  App: 'App',\r\n  Site: 'Site',\r\n  Global: 'Global',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\n\r\nexport interface DialogContextEnable {\r\n  /** Determines if app admin should show app-permissions (true for Apps, false for Content and Global) */\r\n  AppPermissions?: boolean;\r\n  /** Determines if Code editing should be enabled (true for super-users) */\r\n  CodeEditor?: boolean;\r\n  DebugMode: boolean;\r\n  /** True if saving of formulas should be enabled (for edit-ui) */\r\n  FormulaSave?: boolean;\r\n  /** While debug is enabled, this allows some Edit Ui actions even when they are disabled in fields settings */\r\n  OverrideEditRestrictions?: boolean;\r\n  /** Determines if Queries should be enabled (true for Apps) */\r\n  Query?: boolean;\r\n}\r\n\r\nexport interface DialogContextLanguage {\r\n  Current: string;\r\n  List: Language[];\r\n  Primary: string;\r\n}\r\n\r\nexport interface DialogContextPage {\r\n  Id: number;\r\n}\r\n\r\nexport interface DialogContextSite {\r\n  DefaultApp: DialogContextSiteApp;\r\n  Id: number;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSystem {\r\n  DefaultApp: DialogContextSiteApp;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSiteApp {\r\n  ZoneId: number;\r\n  AppId: number;\r\n}\r\n\r\nexport interface DialogContextUser {\r\n  Email: string;\r\n  Id: number;\r\n  Guid: string;\r\n  IsAnonymous: boolean;\r\n  IsSiteAdmin: boolean;\r\n  IsContentAdmin: boolean;\r\n  IsSystemAdmin: boolean;\r\n  Name: string;\r\n  Username: string;\r\n}\r\n\r\n// export interface DialogContextFeature {\r\n//   NameId: string;\r\n//   Enabled: boolean;\r\n// }\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyExtras, keyIsShared, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { DialogHashParams, ExtrasParam } from '../models/dialog-url-params.model';\r\nimport { EditForm, EditPrep, ViewOrFileIdentifier } from '../models/edit-form.model';\r\nimport { HttpServiceBase } from './http-service-base';\r\n\r\n@Injectable()\r\nexport class DialogService extends HttpServiceBase {\r\n\r\n  openCodeFile(path: string, isShared: boolean, templateId?: number) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form = {\r\n      items: [{\r\n        Path: path,\r\n        ...(templateId != null && EditPrep.editId(templateId)),\r\n      }] as ViewOrFileIdentifier[]\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyIsShared, isShared.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(queryId)],\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyPipelineId, queryId.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppsManagement(zoneId: number, tab?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.Zone),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppAdministration(zoneId: number, appId: number, tab?: string, scope?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n      ...(scope && { scope }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, appId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.App),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  private buildSharedHashParams() {\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, this.zoneId),\r\n      ...this.buildHashParam(keyAppId, this.appId),\r\n      ...this.buildHashParam(keyModuleId, this.context.moduleId?.toString()),\r\n      ...this.buildHashParam(keyContentBlockId, this.context.contentBlockId?.toString()),\r\n      ...this.buildHashParam(keyPartOfPage),\r\n      ...(sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : {}),\r\n    };\r\n    return hashParams;\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam: DialogHashParams = { [rawKey]: rawValue };\r\n    return hashParam;\r\n  }\r\n\r\n  private buildFullUrl(hashParams: DialogHashParams) {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    const allHashParams: DialogHashParams = {\r\n      ...this.buildSharedHashParams(),\r\n      ...hashParams,\r\n    };\r\n    const hashUrl = Object.entries(allHashParams).reduce((acc, [key, value]) => `${acc}&${key}=${value}`, '').replace('&', '#');\r\n    return newHref + hashUrl;\r\n  }\r\n}\r\n","import { reduce } from './reduce';\nimport { operate } from '../util/lift';\nconst arrReducer = (arr, value) => (arr.push(value), arr);\nexport function toArray() {\n    return operate((source, subscriber) => {\n        reduce(arrReducer, [])(source).subscribe(subscriber);\n    });\n}\n"],"x_google_ignoreList":[35]}