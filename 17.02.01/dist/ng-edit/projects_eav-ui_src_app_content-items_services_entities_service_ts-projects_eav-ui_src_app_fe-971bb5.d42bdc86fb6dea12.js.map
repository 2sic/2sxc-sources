{"version":3,"file":"projects_eav-ui_src_app_content-items_services_entities_service_ts-projects_eav-ui_src_app_fe-971bb5.d42bdc86fb6dea12.js","mappings":"gcAUO,IAAMA,EAAe,MAAtB,MAAOA,EACXC,YAAoBC,EAA0BC,EAA0BC,GAApDC,KAAAH,OAA0BG,KAAAF,UAA0BE,KAAAD,YAA0B,CAElGE,OAAgCC,EAAqBC,GACnD,OAAOH,KAAKH,KAAKO,KAAQ,iBAAiBF,IAAeC,EAAQ,CAC/DE,OAAQ,CAAEC,MAAON,KAAKF,QAAQQ,MAAOC,OAAQP,KAAKF,QAAQS,SAE9D,CAEAC,OAAgCN,EAAqBO,EAAkBN,GACrE,OAAOH,KAAKH,KAAKO,KAAQ,iBAAiBF,KAAeO,IAAYN,EAAQ,CAC3EE,OAAQ,CAAEC,MAAON,KAAKF,QAAQQ,MAAOC,OAAQP,KAAKF,QAAQS,SAE9D,CAEAG,OAAOC,EAAcC,EAAYC,GAC/B,OAAOb,KAAKH,KAAKa,OAAaV,KAAKD,WAAWe,MAAMjB,KAAKkB,OAAOC,KAAmB,UAAW,CAC5FX,OAAQ,CAAEH,YAAaS,EAAMC,GAAIA,EAAGK,WAAYX,MAAON,KAAKF,QAAQQ,MAAMW,WAAYC,MAAOL,EAASI,aAE1G,CAACE,SAAAnB,KAAA,mBAAAoB,iBAnBUzB,GAAe0B,MAAAC,MAAAD,MAAAE,KAAAF,MAAAG,MAAA,EAAAL,SAAAnB,KAAA,WAAAyB,EAAAC,IAAA,OAAf/B,EAAegC,QAAfhC,EAAeiC,mBAAfjC,CAAe,sCCRrB,MAAMkC,EAAe,CAC1BC,qBAAsB,uBACtBC,sBAAuB,wBACvBC,wBAAyB,0BACzBC,gBAAiB,kBACjBC,sBAAuB,wBACvBC,mBAAoB,qBACpBC,0BAA2B,4BAC3BC,WAAY,wBACZC,sBAAuB,wBACvBC,sBAAuB,wBACvBC,2BAA4B,uNCX1BnB,MAAA,WAA+BA,MAAA,mBAAAA,MAAAoB,GAAA,MAAAC,EAAArB,MAAA,UAASA,MAAAqB,EAAAC,aAAY,wBAClDtB,MAAA,cAAwCA,MAAA,GAAaA,QACrDA,MAAA,UAAAA,CAAuC,WACAA,MAAA,wBAAgDA,QACrFA,MAAA,WAAwCA,MAAA,yBAA+CA,oCAJrCA,MAAA,QAAAA,MAAA,uBAAAuB,EAAAC,UAC1CxB,MAAA,GAAAA,MAAA,aAAAuB,EAAAE,KAAA,IAA8BzB,MAAA,GAAAA,MAAAuB,EAAAE,MAEDzB,MAAA,GAAAA,YAAA,sCACGA,MAAA,GAAAA,YAAA,4DAL9CA,MAAA,EAAA0B,EAAA,oBAAA1B,MAAA,EAAA2B,EAAAC,KAAA,4BAUA5B,MAAA,SAAKA,MAAA,gBAAUA,+BAGfA,MAAA,SAAKA,MAAA,gBAAUA,SCFV,IAAM6B,EAAyB,MAAhC,MAAOA,UAAiCC,IAC5C,UACWC,CAAOC,GAAkBrD,KAAKsD,QAAQC,KAAKF,EAAQ,CAK9DzD,YACE4D,EACAC,EACAC,EACAC,GAEAC,MAAMJ,EAAQC,EAAkBE,EAAoBD,GAVtD1D,KAAAsD,QAAU,IAAIO,KAAyB,GAWrC7D,KAAK8D,cAAaC,KAAc,CAAC/D,KAAKgE,SAAUhE,KAAKsD,QAAStD,KAAKiE,QAAQC,QAAKC,KAAI,EAAEtB,EAASO,EAAQH,MAAI,CAEvGJ,UACAC,KAAMM,EAAS,OAAS,UACxBH,UAEN,CAAC9B,SAAAnB,KAAA,mBAAAoB,iBApBU8B,GAAwB7B,MAAAC,MAAAD,mBAAAE,KAAAF,aAAA,EAAAF,SAAAnB,KAAA,UAAAoE,EAAAC,IAAA,MAAxBnB,EAAwBoB,UAAA,4BAAAC,OAAA,CAAAnB,OAAA,UAAAoB,SAAA,CAAAnD,OAAAoD,MAAA,EAAAC,KAAA,EAAAC,OAAA,kMAAAC,SAAA,SAAAC,EAAA7B,MAAA,EAAA6B,IDZrCxD,MAAA,EAAAyD,EAAA,sBAUEzD,MAAA,EAAA0D,EAAA,IAAA1D,CAED,EAAA2D,EAAA,yBAAA3D,mBAZDA,MAAA,GAAA4D,EAAA5D,MAAA,IAAA2B,EAAAc,aAAA,IAAAmB,0uBCYa/B,CAAyB,0NCE9B7B,MAAA,UAAAA,CAA0B,WACSA,MAAA,SAAGA,QACpCA,MAAA,UAAAA,CAA2C,YACtBA,MAAA,yBAAA6D,EAAA7D,MAAA8D,GAAAC,EAAA/D,MAAA,UAASA,MAAA+D,EAAAC,gBAAAH,GAAmB,GAAE7D,MAAA,GAAQA,kBAAnDA,MAAA,GAAAA,MAAA,QAAA2B,GAA2C3B,MAAA,GAAAA,MAAA2B,4CAOrD3B,MAAA,eACiCA,MAAA,yBAAAiE,EAAAjE,MAAAkE,GAAAC,EAAAnE,MAAA,UAASA,MAAAmE,EAAAC,YAAAH,GAAiB,GACzDjE,MAAA,cAAUA,MAAA,iBAAWA,QACrBA,MAAA,wBACFA,cADEA,MAAA,GAAAA,MAAA,IAAAA,MAAA,0EA1BRA,MAAA,aAAAA,CAAU,oBAAVA,CAAU,oBAEUA,MAAA,GAAqBA,UAEvCA,MAAA,sBACEA,MAAA,6BACAA,MAAA,UAAAA,CAA0B,WACSA,MAAA,yBAAoCA,QACrEA,MAAA,WAAAA,CAAiC,WACzBA,MAAA,0BAAmFA,YAG7FA,MAAA,GAAAqE,EAAA,aAQFrE,QACAA,MAAA,yBACEA,MAAA,GAAAsE,EAAA,gBAOAtE,MAAA,eAAyDA,MAAA,mBAAAA,MAAAuE,GAAA,MAAAC,EAAAxE,QAAA,OAASA,MAAAwE,EAAAC,cAAa,GAC7EzE,MAAA,0BACFA,0BA7BgBA,MAAA,GAAAA,MAAA2B,EAAAH,QAAAkD,MAGb1E,MAAA,GAAAA,MAAA,YAAAA,MAAA,IAAA2B,EAAAH,QAAAmD,aAAA3E,OAEgCA,MAAA,GAAAA,MAAA,GAAAA,MAAA,6BAEzBA,MAAA,GAAAA,YAAA,MAAA2B,EAAAH,QAAAoD,UAAA,yCAGV5E,MAAA,GAAAA,MAAA,IAAA6E,EAAAlD,EAAAH,QAAAsD,QAAA,MAAAD,GAUA7E,MAAA,GAAAA,MAAA,IAAA6E,EAAAlD,EAAAH,QAAAuD,MAAA,MAAAF,GAQE7E,MAAA,GAAAA,MAAA,IAAAA,MAAA,8BClBD,IAAMgF,EAA0B,MAAjC,MAAOA,EAGXzG,YACkC0G,EACxBC,EACAC,EACAC,GAHwBzG,KAAAsG,aACxBtG,KAAAuG,YACAvG,KAAAwG,WACAxG,KAAAyG,sBACN,CAEJC,WACE1G,KAAK8D,cAAaC,KAAc,CAC9B/D,KAAKyG,qBAAqBE,kBAAkB3G,KAAKsG,cAChDpC,QAAKC,KAAI,EAAEtB,MAAO,CAASA,aAChC,CAEAwC,gBAAgBuB,IACdvB,OAAgBuB,GAChB5G,KAAKwG,SAASK,KAAK,sBAAuB,KAAM,CAAEC,SAAU,KAC9D,CAEArB,YAAYsB,GACVC,OAAOH,KAAKE,EAAM,SACpB,CAEAjB,cACE9F,KAAKuG,UAAUU,OACjB,CAAC9F,SAAAnB,KAAA,mBAAAoB,iBA3BUiF,GAA0BhF,MAI3B6F,MAAe7F,MAAAC,MAAAD,MAAAE,MAAAF,MAAAG,KAAA,EAAAL,SAAAnB,KAAA,UAAAmH,EAAA9C,IAAA,MAJdgC,EAA0B/B,UAAA,8BAAAG,MAAA,EAAAC,KAAA,EAAAC,OAAA,oZAAAC,SAAA,SAAAC,EAAA7B,MAAA,EAAA6B,IDbvCxD,MAAA,EAAA+F,EAAA,+CAAA/F,MAAA,GAAAgG,EAAAhG,MAAA,IAAA2B,EAAAc,aAAA,KAAAuD,iFCaahB,CAA0B,uCCLhC,IAAMlD,EAAoB,MAA3B,MAAOA,EAEX,iBACWmE,CAAcjE,GAAiBrD,KAAKuH,eAAehE,KAAKF,EAAQ,CAI3E,UACWmE,CAAOnE,GAAkBrD,KAAKyH,QAAQlE,KAAc,GAATF,EAAgB,CAQtEzD,YACU4D,EACAC,EACAE,EACED,GAHF1D,KAAAwD,SACAxD,KAAAyD,mBACAzD,KAAA2D,oBACE3D,KAAA0D,kBAhBF1D,KAAAuH,eAAiB,IAAI1D,IAAwB,MAK7C7D,KAAAyH,QAAU,IAAI5D,KAAyB,GAa/C7D,KAAKgE,SAAWhE,KAAKuH,eAAerD,QAClCwD,KAAUC,GAAY3H,KAAK0D,gBAAgBkE,KAAKD,KAElD3H,KAAKiE,SAAQF,KAAc,CAAC/D,KAAKgE,SAAUhE,KAAKyH,UAAUvD,QAExDC,KAAI,EAAE0D,EAAKL,KAAYA,IAAWK,GAAM5B,YAAa,IAEzD,CAEAtD,aACEQ,EAAqBR,WAAW3C,KAAKwD,OAAQxD,KAAKuH,eAAelE,MAAOrD,KAAKyD,iBAAkBzD,KAAK2D,kBACtG,CAGO,iBAAOhB,CAAWa,EAAmBsE,EAAmBrE,EAAoCE,GACjGH,EAAOqD,KAAKR,EAA4B,CACtC0B,WAAW,EACXC,KAAMF,EACNrE,iBAAkBA,EAClBwE,MAAO,UAGTtE,EAAkBuE,cACpB,CAAC/G,SAAAnB,KAAA,mBAAAoB,iBA7CU+B,GAAoB9B,MAAAC,MAAAD,gCAAAE,KAAA,EAAAJ,SAAAnB,KAAA,UAAAmH,EAAAgB,IAAA,MAApBhF,EAAoBoB,OAAA,CAAA+C,cAAA,gBAAAE,OAAA,mBAApBrE,CAAoB,4FCJzB9B,MAAA,4BADFA,MAAA,cACEA,MAAA,EAAA+G,EAAA,sBACF/G,uCADiBA,MAAA,GAAAA,MAAA,mBAAAgH,yBAKfhH,MAAA,4BADFA,MAAA,eACEA,MAAA,EAAAiH,EAAA,sBACFjH,uCADiBA,MAAA,GAAAA,MAAA,mBAAAgH,yBAOrBhH,MAAA,8CCTK,IAAMkH,EAAkB,MAAzB,MAAOA,EAIX3I,cAHSI,KAAAwI,SAAU,EACnBxI,KAAAyI,SAAU,CAEM,CAEhBC,gBACE1I,KAAKyI,SAAWzI,KAAKyI,OACvB,CAACtH,SAAAnB,KAAA,mBAAAoB,iBARUmH,EAAkB,EAAApH,SAAAnB,KAAA,UAAAoE,EAAAC,IAAA,MAAlBkE,EAAkBjE,UAAA,qBAAAC,OAAA,CAAAiE,QAAA,WAAAG,mBAAAC,EAAAnE,MAAA,EAAAC,KAAA,EAAAC,OAAA,2EAAAC,SAAA,SAAAC,EAAA7B,MAAA,EAAA6B,YDP/BxD,MAAA,WAAsBA,MAAA,0BAAS2B,EAAA0F,eAAe,GAE1CrH,MAAA,EAAAwH,EAAA,IAAAxH,CAIC,EAAAyH,EAAA,KAOLzH,QAEAA,MAAA,EAAA0H,EAAA,yBAAA1H,mBAfgDA,MAAA,UAAAA,MAAA,EAAA2H,EAAAhG,EAAAyF,UAC9CpH,MAAA,GAAAA,MAAA,QAAA4H,EAAAjG,EAAAwF,SAAA,OAAAS,EAAA,igBCMWV,CAAkB,mDCJxB,IAAMW,EAA6B,MAApC,MAAOA,EAEXC,QAAQC,GACNA,EAAMC,iBACR,CAAClI,SAAAnB,KAAA,mBAAAoB,iBAJU8H,EAA6B,EAAA/H,SAAAnB,KAAA,UAAAoE,EAAA+D,IAAA,MAA7Be,EAA6B5E,UAAA,oCAAAgF,aAAA,SAAAzE,EAAA7B,GAAA,EAAA6B,oCAA7B7B,EAAAmG,QAAAI,EAAe,aAAfL,CAA6B,qBCFpC,SAAU7D,EAAgBmE,GAC9B,MAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGpG,MAAQmG,EACXC,EAAGG,aAAa,WAAY,IAC5BH,EAAGI,MAAMC,SAAW,WACpBL,EAAGI,MAAME,KAAO,UAChBL,SAASM,KAAKC,YAAYR,GAC1B,MAAMS,EACJR,SAASS,eAAeC,WAAa,GACjCV,SAASS,eAAeE,WAAW,GAEzCZ,EAAGa,SACHZ,SAASa,YAAY,QACrBb,SAASM,KAAKQ,YAAYf,GACtBS,IACFR,SAASS,eAAeM,kBACxBf,SAASS,eAAeO,SAASR,GAErC,wECfO,IAAMS,EAAY,MAAnB,MAAOA,EAEX/K,YAAoBgL,GAAA5K,KAAA4K,WAA2B,CAE/CC,UAAUC,GACR,OAAO9K,KAAK4K,UAAUG,wBAAwBD,EAChD,CAAC3J,SAAAnB,KAAA,mBAAAoB,iBANUuJ,GAAYtJ,MAAAC,KAAA,MAAAH,SAAAnB,KAAA,WAAAoE,EAAA4G,IAAA,sBAAZL,EAAYM,MAAA,WAAZN,CAAY","names":["EntitiesService","constructor","http","context","dnnContext","this","create","contentType","entity","post","params","appId","zoneId","update","entityId","delete","type","id","tryForce","$2sxc","apiUrl","webApiEntityRoot","toString","force","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","wxM","factory","Éµfac","FeatureNames","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","FieldShareConfigManagement","_r7","ctx_r6","openDialog","vm_r4","feature","icon","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","ctx","show","FeatureTextInfoComponent","FeatureComponentBase","asInfo","value","asInfo$","next","dialog","viewContainerRef","featuresService","changeDetectorRef","super","BehaviorSubject","viewModel$","combineLatest","feature$","show$","pipe","map","_angular_core__WEBPACK_IMPORTED_MODULE_0__","In1","selectors","inputs","features","decls","vars","consts","template","rf","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","FeatureTextInfoComponent_contFlowTmp","id_r4","_r6","ctx_r5","copyToClipboard","link_r7","_r9","ctx_r8","findOutMore","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Conditional_17_Template","_r11","ctx_r10","closeDialog","Name","Description","IsEnabled","FeatureInfoDialogComponent_Conditional_0_contFlowTmp","NameId","Link","FeatureInfoDialogComponent","dialogData","dialogRef","snackBar","featureDetailService","ngOnInit","getFeatureDetails","text","open","duration","link","window","close","MAT_DIALOG_DATA","core","FeatureInfoDialogComponent_Conditional_0_Template","FeatureInfoDialogComponent_contFlowTmp","featureNameId","featureNameId$","showIf","showIf$","switchMap","featName","get$","feat","featureId","autoFocus","data","width","markForCheck","Sc5","FieldHintComponent_Case_1_ng_container_1_Template","_r3","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","ngContentSelectors","_c1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c0","FieldHintComponent_contFlowTmp","ClickStopPropagationDirective","onClick","event","stopPropagation","hostBindings","$event","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","UTH","pure"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/entities.service.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { ItemInListIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n};\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>","import { ChangeDetectorRef, Component, Input, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest, switchMap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss']\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor(\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    featuresService: FeaturesService,\r\n    changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(dialog, viewContainerRef, changeDetectorRef , featuresService);\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(map(([feature, asInfo, show]) => \r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      })));\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ vm.feature.Name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"vm.feature.Description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (vm.feature.IsEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (vm.feature.NameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      @if (vm.feature.Link; as link) {\r\n        <button mat-raised-button color=\"accent\"\r\n          class=\"eav-card-action-button\" (click)=\"findOutMore(link)\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          {{ \"Features.FindOutMore\" | translate }}\r\n        </button>\r\n      }\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, combineLatest, map } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss']\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<FeatureInfoViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.featureDetailService.getFeatureDetails(this.dialogData)\r\n    ]).pipe(map(([feature]) => ({ feature })));\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void { \r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\ninterface FeatureInfoViewModel {\r\n  feature: Feature;\r\n}","import { ChangeDetectorRef, Directive, Input, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    protected featuresService: FeaturesService\r\n  ) {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.IsEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    FeatureComponentBase.openDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  /** Public/Static so it can be called from elsewhere */\r\n  public static openDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n    dialog.open(FeatureInfoDialogComponent, {\r\n      autoFocus: false,\r\n      data: featureId,\r\n      viewContainerRef: viewContainerRef,\r\n      width: '400px',\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}