{"version":3,"file":"projects_eav-ui_src_app_app-administration_app-administration-nav_app-administration-nav_comp-1b3e30.fda2a82bec8370b3.js","mappings":"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","names":["AppsAdministationNavItems","name","path","icon","tippy","eavConstants","scopes","default","value","child","i0","_r12","_r9","opened","vm_r1","dialogSettings","Context","App","Icon","_r15","Name","breadcrumb_r17","AppAdministrationNavComponent_Conditional_0_ng_container_10_Conditional_1_Template","last_r19","AppAdministrationNavComponent_Conditional_0_Conditional_2_Template","AppAdministrationNavComponent_Conditional_0_Conditional_3_Template","AppAdministrationNavComponent_Conditional_0_Conditional_5_Template","AppAdministrationNavComponent_Conditional_0_Conditional_6_Template","AppAdministrationNavComponent_Conditional_0_ng_container_10_Template","AppAdministrationNavComponent_Conditional_0_ng_template_11_Template","_r28","ctx_r27","closeDialog","AppAdministrationNavComponent_Conditional_0_For_21_Template","_forTrack1","ctx","SettingsScope","ctx_r0","AppScopes","Global","_r8","smallScreen","matches","sideNavOpened","navItems","AppAdministrationNavComponent","BaseComponent","constructor","router","route","dialogRef","appDialogConfigService","media","super","this","dialogSettings$","BehaviorSubject","undefined","pathsArray$","currentPath$","combineLatest","events","pipe","filter","event","NavigationEnd","map","snapshot","firstChild","url","startWith","paths","currentPath","viewModel$","matchMedia","ngOnInit","fetchDialogSettings","subscription","add","refreshOnChildClosedShallow","subscribe","addEventListener","c","sidenav","mode","ngOnDestroy","complete","close","getShared$","UpdateEnvVarsFromDialogSettings","next","Enable","Query","item","static","t","i1","i2","i3","i4","core","In1","selectors","viewQuery","rf","AppAdministrationNavComponent_Conditional_0_Template","AppAdministrationNavComponent_contFlowTmp"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/app-administration-nav/administation-nav-items.ts","./projects/eav-ui/src/app/app-administration/app-administration-nav/app-administration-nav.component.html","./projects/eav-ui/src/app/app-administration/app-administration-nav/app-administration-nav.component.ts"],"sourcesContent":["import { NavItem } from \"../../shared/models/nav-item.model\";\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\n\r\nexport const AppsAdministationNavItems: NavItem[] = [\r\n\r\n  { name: 'Info', path: 'home', icon: 'info', tippy: 'App Info' },\r\n  {\r\n    name: 'Data', path: `data/${eavConstants.scopes.default.value}`, icon: 'menu', tippy: 'Data / Content', child: [\r\n      { name: 'Copilot (beta)', path: 'copilot', icon: 'support_agent', tippy: 'Autogenerate content types ' },\r\n    ]\r\n  },\r\n  {\r\n    name: 'Queries',\r\n    path: 'queries',\r\n    icon: 'filter_list',\r\n    tippy: 'Queries / Visual Query Designer',\r\n  },\r\n  {\r\n    name: 'Views',\r\n    path: 'views',\r\n    icon: 'layers',\r\n    tippy: 'Views / Templates',\r\n  },\r\n  { name: 'Web API', path: 'web-api', icon: 'offline_bolt', tippy: 'WebApi' },\r\n  {\r\n    name: 'App',\r\n    path: 'app',\r\n    icon: 'settings_applications',\r\n    tippy: 'App Settings',\r\n  },\r\n  { name: 'Sync', path: 'sync', icon: 'sync', tippy: 'App Export / Import' },\r\n];\r\n","@if (viewModel$ | async; as vm) {\r\n<mat-toolbar>\r\n  <div class=\"toolbar-container\">\r\n    <!-- App Logo -->\r\n    @if (vm.dialogSettings?.Context.App.Icon) {\r\n    <img (click)=\"sidenav.opened = !sidenav.opened\"\r\n      [src]=\"vm.dialogSettings?.Context.App.Icon + '?w=40&h=40&mode=crop'\" />\r\n    } @else {\r\n    <mat-icon class=\"menu-container\" (click)=\"sidenav.opened = !sidenav.opened\">menu</mat-icon>\r\n    }\r\n    <!-- App Name -->\r\n    <div>\r\n      @if (vm.dialogSettings?.Context.App.SettingsScope === AppScopes.Global) {\r\n      Global\r\n      }\r\n      @if (vm.dialogSettings?.Context.App.SettingsScope !== AppScopes.Global) {\r\n      {{ vm.dialogSettings?.Context.App.Name }}\r\n      }\r\n      <span>\r\n        Admin\r\n      </span>\r\n    </div>\r\n    <!-- Breadcrum in the Toolbar after show Img and Aoo Name -->\r\n    <xng-breadcrumb [separator]=\"emptyTemplate\">\r\n      <ng-container *xngBreadcrumbItem=\"let breadcrumb; let info = info; let last = last\">\r\n        @if (last) {\r\n        <mat-icon class=\"breadcrumb-icon\">chevron_right</mat-icon>\r\n        {{ breadcrumb }}\r\n        }\r\n      </ng-container>\r\n    </xng-breadcrumb>\r\n    <ng-template #emptyTemplate></ng-template>\r\n  </div>\r\n  <span class=\"toolbar-spacer\"></span>\r\n  <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<mat-sidenav-container>\r\n\r\n  <mat-sidenav #sidenav [mode]=\"smallScreen.matches ? 'over' : 'side'\" [opened]=\"sideNavOpened\">\r\n    @for (navItem of navItems; track navItem.path) {\r\n    <app-nav-item-list [navItem]=\"navItem\"></app-nav-item-list>\r\n    }\r\n    <div class=\"sideNav-bottom-info\">\r\n      <p>use App logo to show/hide menu</p>\r\n    </div>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, filter, map, startWith, tap } from 'rxjs';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { UpdateEnvVarsFromDialogSettings } from '../../shared/helpers/update-env-vars-from-dialog-settings.helper';\r\nimport { AppScopes } from '../../shared/models/dialog-context.models';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { AppsAdministationNavItems } from './administation-nav-items';\r\n\r\n\r\n@Component({\r\n  selector: 'app-app-administration-nav',\r\n  templateUrl: './app-administration-nav.component.html',\r\n  styleUrls: ['./app-administration-nav.component.scss'],\r\n})\r\nexport class AppAdministrationNavComponent\r\n  extends BaseComponent\r\n  implements OnInit, OnDestroy {\r\n  AppScopes = AppScopes;\r\n\r\n  private dialogSettings$ = new BehaviorSubject<DialogSettings>(undefined);\r\n  private pathsArray$ = new BehaviorSubject<string[]>(undefined);\r\n  private currentPath$ = combineLatest([\r\n    this.pathsArray$,\r\n    this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map(() => this.route.snapshot.firstChild.url[0].path),\r\n      startWith(this.route.snapshot.firstChild.url[0].path)\r\n    ),\r\n  ]).pipe(\r\n    map(([paths, currentPath]) => {\r\n      if (paths == null) return;\r\n      return currentPath;\r\n    })\r\n  );\r\n\r\n  // Generate View Model\r\n  viewModel$ = combineLatest([this.dialogSettings$, this.currentPath$]).pipe(\r\n    map(([dialogSettings, currentPath]) => {\r\n      return {\r\n        dialogSettings,\r\n        currentPath,\r\n      };\r\n    })\r\n  );\r\n\r\n  smallScreen: MediaQueryList = this.media.matchMedia('(max-width: 1000px)');\r\n  @ViewChild('sidenav') sidenav!: MatSidenav;\r\n  sideNavOpened = !this.smallScreen.matches;\r\n\r\n  /** Navigation menu buttons - prefilled; may be modified after settings are loaded */\r\n  navItems = AppsAdministationNavItems;\r\n\r\n  matcher!: MediaQueryList;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<AppAdministrationNavComponent>,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private media: MediaMatcher\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.fetchDialogSettings();\r\n    this.subscription.add(\r\n      this.refreshOnChildClosedShallow().subscribe(() => {\r\n        this.fetchDialogSettings();\r\n      })\r\n    );\r\n\r\n    this.smallScreen.addEventListener(\r\n      'change',\r\n      (c) => (\r\n        this.sidenav.opened = !c.matches,\r\n        this.sidenav.mode = c.matches ? 'over' : 'side'\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogSettings$.complete();\r\n    this.pathsArray$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // @2dg not longer in use with new routing SideNav\r\n  // changeUrl(path: string) {\r\n  //   // if (path === 'data') path = `data/${eavConstants.scopes.default.value}`;\r\n  //   // this.router.navigate([path], { relativeTo: this.route });\r\n  // }\r\n\r\n  private fetchDialogSettings() {\r\n    this.appDialogConfigService.getShared$().subscribe((dialogSettings) => {\r\n      UpdateEnvVarsFromDialogSettings(dialogSettings.Context.App);\r\n      this.dialogSettings$.next(dialogSettings);\r\n\r\n      if (!dialogSettings.Context.Enable.Query)\r\n        this.navItems = this.navItems.filter(\r\n          (item) => item.name !== 'Queries' && item.name !== 'Web API'\r\n        );\r\n\r\n      this.pathsArray$.next(this.navItems.map((item) => item.path));\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}