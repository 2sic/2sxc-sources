{"version":3,"file":"projects_eav-ui_src_app_edit_dialog_entry_edit-entry_component_ts-projects_eav-ui_src_app_sha-ddd80a.42baac2527fe1c95.js","mappings":"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","names":["LoadIconsService","constructor","matIconRegistry","domSanitizer","this","icons","file","folder","sitemap","load","Object","entries","forEach","name","svg","addSvgIconLiteral","bypassSecurityTrustHtml","i0","i1","i2","factory","ɵfac","ComputedAnalyzer","computed","getConsumerNode","SIGNAL","getProducers","producerNode","getDirtyProducers","snapShotProducers","onlyDirty","#getSubInfosOf","producer","filterDirty","#getSubProducers","producerLastReadVersion","subProducers","producerVersions","subInfos","map","idx","dirtyPrd","dirty","verOwn","verPrd","version","dirtyVer","dirtySub","some","d","dirtyDepth","find","debugName","filter","fill","data","fallback","create","textEntry","multiValue","edit","remove","delete","mergePickerFeatures","first","second","convertArrayToString","value","separator","Array","isArray","join","logSpecs","all","setup","addInfosFromSourceForUi","optionsWithMissing","selectedRaw","selectedOverride","selectedState","features","allOptions","fields","DebugFields","PickerData","#translate","log","classLog","inject","TranslateService","closeWatcherAttachedWIP","ready","signalObj","optionsRaw","computedObj","source","optionsOrHints","optionsOverride","optionsAll","getWith","o","optionsAllowsEmpty","pickerItemsAllowsEmpty","dropdownOptions","l","fnIfInList","r","#toSelectedWithUiInfo","state","selectedItems","selectedAll","selectedOne","fnIf","selected","options","missing","s","length","result","concat","#settingsLazy","#featuresFromSettings","EnableTextEntry","AllowMultiValue","EnableCreate","CreateTypes","EnableRemove","EnableDelete","mergeSourceAndState","myFeatures","mergeSettings","showGoToListDialogButton","showAddNewButton","isInFreeTextMode","enabled","specs","effect","raw","override","final","a","settings","set","allowsEmptyLazy","values","initiallySelected","initPrefetch","end","selectedCopy","original","item","addNewlyCreatedItem","newItemGuid","keys","fn","includes","add","forceReloadData","opts","e","createPickerItemFromItem","label","id","tooltip","info","link","noEdit","noDelete","noSelect","instant","createPickerItemFromValue","toString","toggleFreeTextMode","update","p","PickerDataFactory","injector","inputTypeSvc","createPickersForAttributes","attributes","Name","inputType","getSpecs","#createPickersData","it","picker","#createOne","reduce","acc","InputTypeHelpers","isAnyPicker","transient","SignalEquals","bool","equal","RxHelpers","valueEquals","number","string","ref","FormsStateService","#formsValid","#formsDirty","formConfig","itemService","languageService","triggerTrySaveAndMaybeClose","signal","tryToSave","close","formsAreValid","formsAreDirty","readOnly","itemHeaders","config","itemGuids","guid","getItemHeaderSignal","language","getAllSignal","itemsReadOnly","itemHeader","EditInfo","ReadOnly","languageAllowed","NameId","current","IsAllowed","isReadOnly","reason","undefined","formsValidTemp","saveButtonDisabled","entityGuid","init","getFormValid","setFormValid","isValid","allValid","valid","setFormDirty","isDirty","anyDirty","triggerSave","i3","AdamCacheService","SignalStoreBase","super","getId","Guid","loadPrefetch","prefetchAdams","snapshots","Attributes","addMany","getAdamSnapshot","fieldName","cache","providedIn","LinkCacheService","key","trim","toLocaleLowerCase","addPrefetch","prefetchLinks","prefetchAdam","links","linkInfo","adamLinkList","flatMap","_","prefetchFields","__","items","adamToLinks","addAdam","addLink","Adam","IsFolder","ReferenceId","Value","Url","fetchFormData","saveFormData","FormDataService","HttpServiceBase","globalConfigService","context","http","post","apiUrl","params","appId","pipe","formData","Context","Language","List","IsEnabled","tap","allowDebug","Enable","DebugMode","partOfPage","PublishModes","Show","Hide","Branch","FormPublishingService","formId","#signalsPublishModeCache","ComputedCacheHelper","setPublishMode","publishMode","eavService","versioningOptions","DraftShouldBranch","IsPublished","getPublishMode","getOrCreate","toPublishMode","get","publishStatus","importLoadedData","keepInitialValues","initMissingValues","EditInitializerService","route","inputTypeService","contentTypeItemService","contentTypeService","publishStatusService","translate","languageStore","snackBar","adamCacheService","linkCacheService","featuresService","userLanguageSvc","loaded","formDataService","initialFormValues","inbound","convertUrlToForm","snapshot","form","index","clientId","editItems","JSON","stringify","subscribe","dataFromBackend","Items","originalItem","i","Header","Prefill","ClientData","UpdateEnvVarsFromDialogSettings","App","#importLoadedData","#keepInitialValues","#initMissingValues","loadDto","Math","floor","random","isParentDialog","calculateIsParentDialog","editDialogCount","path","pathFromRoot","url","urlSegment","Entity","loadItems","InputTypes","addContentTypeItems","ContentTypeItems","addContentTypes","ContentTypes","Prefetch","Links","getMany","createMode","Id","isCopy","DuplicateEntity","enableHistory","history","settingsAsEav","Settings","Entities","EavEntity","convertMany","EavContentType","initFormConfig","langs","userLangCode","getUiCode","Current","use","sortedLanguages","sortLanguages","primaryLangKey","languages","primaryLang","sameLangs","otherLangs","startsWith","split","push","sort","b","localeCompare","Primary","addForm","allLangs","getAll","primary","currentLang","formValues","EntityReader","currentValues","#initialValuesCacheKey","getInitialValues","updater","eavConfig","inputTypes","switchToDefault","isCreateMode","fss","FieldsSettingsHelpers","contentType","getContentTypeOfItem","ctAttribute","currentName","Type","InputType","isEmptyType","isEmpty","logic","FieldLogicManager","singleton","getOrUnknown","attributeValues","fieldSettings","getDefaultSettings","flatten","Metadata","firstValue","FieldReader","currentOrDefaultOrAny","isValueEmpty","setDefaultValue","disableI18n","DisableI18n","noLanguageValue","currentOrDefault","transactionItem","removeItemAttributeDimension","addItemAttributeValue","defaultLanguageValue","valueIsEmpty","IsEphemeral","setCurrent","message","open","duration","i4","i5","i6","i7","i8","i9","i10","i11","i12","i13","i14","i15","FormulaExecutionSpecsFactory","#features","FeaturesScopedService","languageSvc","globalConfigSvc","editInitializerSvc","settingsSvc","clientData","#entityGuid","#settingsSvc","#clientData","#warningsObsolete","getSharedSpecs","debugEnabled","isDebug","fieldsSettingsSvc","parameters","FormulaPropsParameters","warningsObsolete","FieldPropsPicker","getPickerInfos","filterFormulasIfPickerNotReady","FormulaFieldPickerHelper","fieldConstants","propsBefore","isSpecialPicker","inputTypeSpecs","isNewPicker","infos","#infos","#getInfos","before","picks","f","fieldIsSpecialPicker","formulas","sleep","changed","rSilent","ver","pickerData","dummy","list","listRaw","verBefore","mapper","getVersion","sel","updateFormulaSleep","formula","FormulaSpecialPickerAutoSleep","target","preserveResultsAfterRun","wip","FormulaSettingsHelper","keepSettingIfTypeOk","valueNew","settingsNew","keepSettingIfTypeOkAndStatus","settingName","substring","SettingsFormulaPrefix","prevSetting","isEqual","wasChanged","runFormula","runAllOfField","runOrInitSettings","FormulaRunField","promiseHandler","designerSvc","runOneHelper","settingsCurrent","valueBefore","reuseExecSpecs","setUpdHelper","pickHelp","fAll","untracked","getActive","fGrouped","groupBy","disabled","#showDisabledFormulasWarnings","noPromiseSleep","filterFormulas","finalize","validation","#runAllOfField","settingsInitial","pickerHelper","defaultValueHelper","FieldDefaults","settingsUpdate","correctSettingsAfterChanges","requiredFeatures","FeatureNames","PickerFormulas","console","warn","disabledReason","runParams","reuseObjectsForFormulaDataAndContext","start","performance","now","allRunParams","runParameters","#runFormula","updateStop","handleStopAndPromise","isValue","isValidation","isSetting","afterRun","execSpecs","title","devHelper","valHelper","getPartsFor","showStart","FormulaVersions","V1","v1Raw","experimental","ok","v1Result","valueV1","v1","showResult","error","toFormulaResult","V2","v2Raw","v2Value","v2","promise","Error","showError","getFormulas","runAllFields","runOneFieldOrInitSettings","FormulaEngine","#formulaExecSpecsFactory","logSvc","ctTitle","#promiseHandler","#attributes","#contentTypeTitle","propsEngine","cycle","fieldsProps","valueUpdates","fieldUpdates","attr","lAttr","allAttributes","getFieldConstants","latestSettings","getFieldSettingsInCycle","settingsUpdateHelper","updateHelper","fieldProps","FormulaRunOneHelpersFactory","allResults","fixed","translationState","getTranslationState","DisableTranslation","constants","buildWrappers","formulaValidation","FormulaPromiseResult","addFormulaPromise","defineCallbackHandlerIfMissing","changesFromQueue","promiseComplete","FormulaPromiseHandler","#updateValueQueue","#fieldsSettingsService","fieldsSettingsService","modifiedChecker","#contentType","#modifiedChecker","promiseResult","hasPromise","Promise","newStop","stop","msg","openInDesigner","promises$","next","completed","#defineCallbackHandlerIfMissing","lcb","updateCallback$","#promiseComplete","FormulaValueCorrections","queue","queueItem","fieldQueue","promiseCompleted","retriggerFormulas","toProcess","valueChanges","newFieldProps","dataEntries","field","flat","modifiedValues","getValueUpdates","itemAttributes","getItemAttributes","setting","constantFieldPart","attribute","mergedSettings","updatedSettings","WrappersCatalog","WrappersLocalizationOnly","wrappers","WrapperHelper","getWrappers","isMessage","isGroupStart","InputTypeCatalog","EntityDefault","StringDropdownQuery","EntityQuery","EntityContentBlocks","StringDropdown","EntityPicker","StringPicker","NumberPicker","isExternal","getCycleSettingsAndValues","getLatestSettingsAndValues","FieldsPropsEngineCycle","engine","initialValues","#getLatestSettingsAndValues","mergedValues","props","loopIndex","isFirstRound","formulaPromises","formulaEngine","constFieldPart","cached","ItemFieldVisibility","identifier","defaultIsShow","ruleIsShow","toLowerCase","prev","hasRules","isVisibleDisabled","mergedVisible","Visible","VisibleDisabled","makeParentGroupsVisible","allConstFieldParts","groupField","innerField","endsPreviousGroup","stablePartsOfLanguage","stablePartOfField","constantPartsOfField","constantFieldParts","staticPartsOfField","FieldsSettingsConstantsService","#fieldSettingsHelper","itemForIds","entityReaderCurrent","labelReaderCurrent","#item","#itemFieldVisibility","#entityReaderCurrent","#labelReaderCurrent","#fieldSettingsSvc","stableDataOfLanguage","typeNameId","constParts","#constantPartsOfField","#stablePartsOfLanguage","reader","labelReader","entityReader","constPartOfLanguage","lInner","merged","labelMerged","Placeholder","Notes","withGeneric","mergeGenericSettings","c","inputTypeConfiguration","constPartsWithGroupVisibility","entityId","contentTypeNameId","mdMerger","initial","allPickers","constFieldParts","metadata","initialSettings","initialDisabled","Disabled","dropzonePreviewsClass","isLastInGroup","type","ValidationHelpers","isRequired","#shouldIgnoreValidators","Required","getValidators","validators","HyperlinkLibrary","#required","#requiredAdam","#regEx","#decimals","#numberMin","#numberMax","#listMin","#listMax","#formulaValidate","CustomJsonEditor","#jsonValidator","#ensureWarningsAndGetSettingsIfNoIgnore","control","valueRequired","Validators","required","adamItems","ValidationRegExJavaScript","pattern","Decimals","matchString","match","decimals","Min","min","Max","max","AllowMultiMin","countValues","minNoItems","AllowMultiMax","maxNoItems","warning","jsonMode","JsonValidation","parse","_warning","jsonWarning","jsonError","severity","formulaWarning","formulaMessage","formulaError","pd","convertValueToArray","emptyIsValid","Separator","ValidationHelperSpecs","pickersGet","schemaDisablesTranslation","getDisabledBecauseTranslations","FieldSettingsUpdateHelperFactory","contentTypeMetadata","fieldLogicTools","formReadOnly","slotIsEmpty","FieldSettingsUpdateHelper","formSlotIsEmpty","fieldValue","disableTranslation","#schemaDisablesTranslation","uiDisabledInThisLanguage","#getDisabledBecauseTranslations","uiDisabledForced","uiDisabled","DisableAutoTranslation","tools","attributeMetadata","m","Enabled","Values","v","hasPrimary","attrMd","fieldReader","hasEditableValues","hasCurrentReadonly","FieldsValuesModifiedHelper","valueUpdatesFromSideEffects","originalValues","changes","#findBestValue","FieldValueHelpers","fieldValuesAreEqual","fieldsUpdates","sideEffects","valSideEffect","getPickers","FieldsPropsEngine","#formConfig","#globalConfigService","#formsStateService","#contentTypeItemService","#itemService","#constantsService","#pickerFac","#fieldsValues","FormConfigService","GlobalConfigService","ContentTypeItemService","ItemService","fieldsValues","forceDebug","extendName","forceEnable","ct","#fieldLangConstants","#updateHelper","#getPreparedParts","contentTypeSettings","_itemTitle","#itemAttributes","itemAttributesSignal","fieldLangConstants","readerSig","logicTools","debug","contentTypeItemSvc","FieldsPropertiesUpdates","fieldPropsMixins","hasChanges","updateSetting","queueWasEmpty","after","mergeMixins","mixins","ofField","startSync","filterRelevant","transferPickerData","FieldSettingsPickerUpdater","optsOnly","#filterRelevant","selOnly","#transferPickerData","allowSignalWrites","part","toTransfer","count","logChanges","FieldsSignalsHelper","itemSvc","#itemGuid","#attributesLazy","lChange","difference","object","base","transform","iteratee","accumulator","isArr","isArrLike","isBuffer","isTypedArray","baseIteratee","Ctor","isObject","isFunction","baseCreate","getPrototype","arrayEach","baseForOwn","#reader","itemGuid","#fieldValueSigCache","lGet","#values","sig","#createValuesSignal","attrSig","#fieldValueOrNullSignal","getOrCreateWithInfo","getBestValue","isNew","effectTransferPickerData","regenerateProps","activateAnalyzer","FieldsSettingsService","#languageSvc","#contentTypeSvc","#itemSvc","#usrLangSvc","#propsEngine","#pickerSync","FormLanguageService","ContentTypeService","UserLanguageService","allProps","#startSync","#forceRefresh","#disabled","getEntityReader","#labelReader","lblLang","getLabel","ContentTypeSettingsHelpers","#fieldValues","#fieldPropsCache","buildProxy","#fieldSignalsCache","proxy","allPropsOrNull","#allProps","disableForCleanUp","#fieldsPropsUpdate","debugOnlyCt","deps","idMsg","analyzer","slotWasEmpty","forceRefresh","watchRestart","prevFieldProps","hasRunOnce","setInterval","setTimeout","#regenerateProps","latestFieldProps","FieldTranslationInfo","getFieldsProps","#settings","#_settings","isAutoTranslatable","notForAutoTranslateBecauseOfType","autoTranslateIsDisabledByTypeButNotByConfig","canAutoTranslate","unlock","lock","getInfo","autoTranslate","findAutoTranslatableFields","addItemAttributeValueHelper","FieldsTranslateService","#contentTypeId","ItemHelper","getContentTypeNameId","contentTypeId","isTransaction","#getInfo","rNull","doesFieldHaveExistingDimension","currentEditable","defaultValue","FormLanguage","bothPrimary","#addItemAttributeValueHelper","toggleUnlockOnAll","isUnlock","translatable","findTranslatableFields","showMessageNoTranslatableFields","forAutoTranslate","replace","fieldNames","sourceLanguageKey","isMany","areAllChecksKnown","autoTranslateLanguageKey","apiKeyInfo","EditApiKeyPaths","GoogleTranslate","IsDemo","alert","textsForTranslation","currentText","isAutoTranslationEnabledButWasDisabledByDefault","ApiKey","q","response","fieldsWithExistingDims","translations","translation","elem","document","createElement","innerHTML","translatedText","fieldHasExistingDimension","updateItemAttributeValue","copyFrom","copyFromLanguageKey","valueTranslation","ofLanguage","diffCurrent","isEditableOrReadonlyTranslationExist","linkReadOnly","linkWithLanguageKey","linkToOtherField","linkReadWrite","addItemAttributeDimension","autoTranslateMany","canTranslate","cantTranslateAndEmpty","findAutoTranslatableFieldsThatWereNotAutoTranslatableByDefault","x","ti","currentLanguage","getAttribute","EntityFormStateService","controlsCreated","isSaving","formGroup","UntypedFormGroup","FeatureIconIndicatorComponent","FeatureComponentBase","__ngFactoryType__","selectors","standalone","decls","vars","consts","template","rf","ctx","FeatureIconIndicatorComponent_Conditional_0_Template","show","MatIconModule","TippyDirective","encapsulation","AutoTranslateDisabledWarningDialog","dialog","dialogData","ngOnInit","closeDialog","MAT_DIALOG_DATA","AutoTranslateDisabledWarningDialog_Conditional_5_Template","AutoTranslateDisabledWarningDialog_Conditional_6_Template","isAutoTranslateAll","MatCardModule","MatButtonModule","TranslateModule","MatDivider","_vertical","_inset","vertical","coerceBooleanProperty","inset","ɵcmp","hostAttrs","hostVars","hostBindings","inputs","styles","changeDetection","MatDividerModule","ɵmod","ɵinj","imports","MatCommonModule","_c0","_c1","_c2","_c3","_c4","_c5","LIST_OPTION","InjectionToken","MatListItemTitle","_elementRef","ɵdir","MatListItemLine","MatListItemMeta","_MatListItemGraphicBase","_listOption","_isAlignedAtStart","_getTogglePosition","MatListItemAvatar","ɵMatListItemAvatar_BaseFactory","MatListItemIcon","ɵMatListItemIcon_BaseFactory","MAT_LIST_CONFIG","MatListBase","_isNonInteractive","_disableRipple","_disabled","_defaultOptions","optional","disableRipple","MatListItemBase","lines","_explicitLines","coerceNumberProperty","_updateItemLines","_noopAnimations","_listBase","rippleDisabled","rippleConfig","_ngZone","_platform","globalRippleOptions","animationMode","_subscriptions","Subscription","_rippleRenderer","_hasUnscopedTextContent","_hostElement","nativeElement","_isButtonElement","nodeName","_initInteractiveListItem","hasAttribute","setAttribute","ngAfterViewInit","_monitorProjectedLinesAndTitle","ngOnDestroy","unsubscribe","_removeTriggerEvents","_hasIconOrAvatar","_avatars","_icons","classList","RippleRenderer","setupTriggerEvents","runOutsideAngular","merge","_lines","_titles","recheckUnscopedContent","_unscopedContent","_checkDomForUnscopedTextContent","numberOfLines","_inferLinesFromContent","unscopedContentEl","toggle","treatAsTitle","numOfLines","from","childNodes","node","nodeType","COMMENT_NODE","textContent","MAT_RIPPLE_GLOBAL_OPTIONS","ANIMATION_MODULE_TYPE","contentQueries","dirIndex","_t","MatActionList","arguments","ɵMatActionList_BaseFactory","exportAs","provide","useExisting","ngContentSelectors","MatList","ɵMatList_BaseFactory","MatListItem","activated","_activated","element","ngZone","listBase","platform","_getAriaCurrent","_hasBothLeadingAndTrailing","_meta","viewQuery","_itemText","_r1","dependencies","CdkObserveContent","MatNavList","ɵMatNavList_BaseFactory","MatListModule","ObserversModule","CommonModule","MatRippleModule","MatPseudoCheckboxModule","I18nKeys","NoTranslate","FromPrimary","FromOther","LinkReadOnly","LinkShared","getTemplateLanguages","linkType","lang","TranslationLinks","LinkReadWrite","findI18nKey","translationLink","Translate","DontTranslate","LinkCopyFrom","TranslateHelperComponent","LanguageService","translationStateSignal","translationInfo","noLanguageRequired","showLanguageSelection","i18nRoot","submitDisabled","SnackBarWarningDemoComponent","SafeHtmlPipe","ctx_r2","translatableFields","language_r2","noTranslatableFieldsThatHaveContent","AutoTranslateMenuDialogComponent_For_12_Conditional_5_Conditional_2_Conditional_1_Conditional_1_Template","AutoTranslateMenuDialogComponent_For_12_Conditional_5_Conditional_2_Conditional_1_Conditional_2_Template","noTranslatableFields","AutoTranslateMenuDialogComponent_For_12_Conditional_5_Conditional_2_Conditional_2_Conditional_1_Template","AutoTranslateMenuDialogComponent_For_12_Conditional_5_Conditional_2_Conditional_2_Conditional_2_Template","AutoTranslateMenuDialogComponent_For_12_Conditional_5_Conditional_2_Conditional_1_Template","AutoTranslateMenuDialogComponent_For_12_Conditional_5_Conditional_2_Conditional_2_Template","AutoTranslateMenuDialogComponent_For_12_Conditional_5_Conditional_1_Template","AutoTranslateMenuDialogComponent_For_12_Conditional_5_Conditional_2_Template","$implicit","setLanguage","AutoTranslateMenuDialogComponent_For_12_Conditional_5_Template","isTranslateWithGoogleFeatureEnabled","isTranslateMany","AutoTranslateMenuDialogComponent","fieldsTranslateService","isEnabled","EditUiTranslateWithGoogle","languagesSig","getTemplateLanguagesWithContent","countTranslatableFields","countTranslatableFieldsWithContent","isDisabled","langDefToUse","countEditable","countEditableWithContents","keydownEvents","event","isCtrlS","preventDefault","afterClosed","dismiss","openFromComponent","newTranslationState","AutoTranslateMenuDialogComponent_For_12_Template","FeatureTextInfoComponent","NgClass","TranslateMenuDialogComponent_Conditional_55_For_10_Template","TranslateMenuDialogComponent","setLinkType","run","newState","oldState","TranslateMenuDialogComponent_Conditional_55_Template","ctx_r1","openAutoTranslateMenuDialog","dontTranslate","openTranslateMenuDialog","TranslateMenuComponent_Conditional_0_ng_template_11_Template","translationStateClass","infoLabel","infoMessage","disableTranslateButtonSignal","menu_r3","hideTranslateButton","TranslateMenuComponent","#fieldState","matDialog","viewContainerRef","fieldsTranslate","input","FieldState","ui","TranslateMenuHelpers","getTranslationStateClass","#openDialog","autoFocus","width","component","TranslateMenuComponent_Conditional_0_Template","MatMenuModule","childFormResult","expand","watchToRefreshOnVersionsClosed","EditRoutingService","ServiceBase","#dialogRouter","#route","#router","langInstanceSvc","DialogRoutingService","router","#childFormResult$","Subject","#signalsExpandedCache","complete","#initHideHeader","#watchChildFormResult","#getParams","#getParamsAndPayload","hasDetails","detailsEntityGuid","detailsFieldId","hasUpdate","updateEntityGuid","updateFieldId","fieldId","isExpanded","fieldIndex","isExpanded$","mapUntilChanged","isExpandedSignal","obs","toSignal","cr","childFormClosed","componentTag","pInfo","UrlHelpers","newUrlIfCurrentContainsOldUrl","navigate","formUrl","convertFormToUrl","relativeTo","subscriptions","updateHideHeader","childDialogClosed$","parseInt","getCurrentNavigation","extras","LocalizationWrapperComponent","editRoutingService","formsStateService","translateMenu","toggleTranslateButtonVisibility","hide","ViewContainerRef","tmp_1_0","tmp_3_0","FieldMetadataKey","FieldMetadata","Reflect","defineMetadata","ChangeAnchorTargetDirective","#target","#element","#observer","elementRef","zone","#setAnchorTargets","MutationObserver","observe","childList","subtree","disconnect","anchor","childAnchors","getElementsByTagName","$event","toggleHint","showExpand","notes","FieldHelperTextComponent_Conditional_0_Conditional_1_Template","FieldHelperTextComponent_Conditional_0_Conditional_2_Template","FieldHelperTextComponent_Conditional_0_Conditional_3_Template","fieldState","hyperlinkDefaultWrapperFix","smallGap","showErrors","errorMessage","tmp_4_0","disableError","warningMessage","FieldHelperTextComponent","flatIfEmpty","#invalid","invalid","componentId","uiValue","getErrors","getWarnings","contains","parentNode","FieldHelperTextComponent_Conditional_0_Template","MatFormFieldModule","BooleanBaseComponent","group","basics","changedLabel","settingExt","BooleanDefaultLogic","FieldLogicBase","BooleanDefault","fixedSettings","ReverseToggle","_label","#calculateLabel","TitleTrue","TitleFalse","BooleanDefaultComponent","checkedState","importMe","updateValue","setIfChanged","tmp_5_0","FormsModule","ReactiveFormsModule","MatSlideToggleModule","__decorate","tslib_es6","Sn","BooleanTristateLogic","BooleanTristate","TitleIndeterminate","BooleanTristateComponent","fs","bestLabel","#nextValue","reversed","CustomDefaultComponent","CustomJsonEditorLogic","Rows","JsonSchemaMode","JsonSchemaSource","JsonSchemaUrl","JsonSchemaRaw","JsonCommentsAllowed","StringJsonLogic","StringJson","ctx_r0","placeholder","CustomJsonEditorComponent","#config","#rows","focused","focused$","editorHeight","monacoOptions","lineHeight","jsonSchema","jsonComments","minimap","lineNumbers","lineDecorationsWidth","folding","scrollBeyondLastLine","tabSize","fixedOverflowWidgets","filename","codeChanged","code","onFocused","onBlurred","markTouched","CustomJsonEditorComponent_Conditional_4_Template","touchedAndInvalid","MonacoEditorComponent","NgStyle","_forTrack0","$index","$item","_trackRow","_forTrack1","MatCalendarBody_Conditional_0_Template","_cellPadding","numCols","MatCalendarBody_For_2_Conditional_1_Template","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_For_2_For_3_Template","_r2","item_r3","_cellClicked","_emitActiveDateChange","ɵ$index_14_r4","ɵ$index_7_r5","_cellWidth","_isActiveCell","_isRangeStart","compareValue","_isRangeEnd","_isInRange","_isComparisonBridgeStart","_isComparisonBridgeEnd","_isComparisonStart","_isComparisonEnd","_isInComparisonRange","_isPreviewStart","_isPreviewEnd","_isInPreview","cssClasses","ariaLabel","_isSelected","todayValue","_getDescribedby","_isComparisonIdentical","displayValue","MatCalendarBody_For_2_Template","row_r6","MatMonthView_For_4_Template","day_r1","long","narrow","MatCalendar_ng_template_0_Template","MatCalendar_Case_2_Template","activeDate","_dateSelected","_dragStarted","_dragEnded","dateFilter","maxDate","minDate","dateClass","comparisonStart","comparisonEnd","startDateAccessibleName","endDateAccessibleName","_activeDrag","MatCalendar_Case_3_Template","_r3","_monthSelectedInYearView","_goToDateInView","MatCalendar_Case_4_Template","_r4","_yearSelectedInMultiYearView","MatDatepickerContent_ng_template_2_Template","MatDatepickerToggle_Conditional_2_Template","MatDatepickerIntl","calendarLabel","openCalendarLabel","closeCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","startDateLabel","endDateLabel","formatYearRange","formatYearRangeLabel","ɵprov","token","uniqueIdCounter$1","MatCalendarCell","rawValue","calendarBodyId","activeCapturingEventOptions","normalizePassiveListenerOptions","passive","capture","passiveCapturingEventOptions","passiveEventOptions","MatCalendarBody","ngAfterViewChecked","_focusActiveCellAfterViewChecked","_focusActiveCell","Platform","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","EventEmitter","previewChange","activeDateChange","dragStarted","dragEnded","_didDragSinceMouseDown","_injector","Injector","row","_enterHandler","_skipNextFocus","cell","_getCellFromElement","emit","_touchmoveHandler","getActualTouchTarget","getCellElement","_leaveHandler","relatedTarget","_mousedownHandler","_mouseupHandler","cellElement","closest","_touchendHandler","_id","_startDateLabelId","_endDateLabelId","addEventListener","isBrowser","window","startValue","endValue","ngOnChanges","columnChanges","rows","removeEventListener","rowIndex","colIndex","cellNumber","movePreview","afterNextRender","querySelector","focus","_scheduleFocusActiveCellAfterViewChecked","isStart","isEnd","isInRange","previousCell","previousRow","nextCell","nextRow","col","outputs","attrs","isTableCell","rangeEnabled","touchLocation","changedTouches","elementFromPoint","clientX","clientY","DateRange","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","updateSelection","oldValue","_isValidDateInstance","date","isDateInstance","MatSingleDateSelectionModel","adapter","isComplete","clone","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","Optional","SkipSelf","DateAdapter","useFactory","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","parent","MAT_DATE_RANGE_SELECTION_STRATEGY","uniqueIdCounter","MatMonthView","_activeDate","oldActiveDate","validDate","_dateAdapter","getValidDateOrNull","deserialize","today","clampDate","_hasSameMonthAndYear","_init","_selected","_setRanges","_minDate","_maxDate","_changeDetectorRef","_dateFormats","_dir","_rangeStrategy","_rerenderSubscription","EMPTY","activeDrag","selectedChange","_userSelection","ngAfterContentInit","localeChanges","startWith","comparisonChange","firstChange","_clearPreview","selectedDate","_getDateFromDayOfMonth","rangeStartDate","rangeEndDate","_getDateInCurrentMonth","markForCheck","_updateActiveDate","compareDate","_handleCalendarBodyKeydown","isRtl","_isRtl","keyCode","LEFT_ARROW","addCalendarDays","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","getDate","END","getNumDaysInMonth","PAGE_UP","altKey","addCalendarYears","addCalendarMonths","PAGE_DOWN","ENTER","SPACE","_selectionKeyPressed","_canSelect","ESCAPE","_previewEnd","hasModifierKey","stopPropagation","_handleCalendarBodyKeyup","_todayDate","_getCellCompareValue","_monthLabel","display","monthLabel","format","getMonthNames","getMonth","toLocaleUpperCase","firstOfMonth","createDate","getYear","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","_previewChanged","previewRange","createPreview","_previewStart","dragRange","createDrag","detectChanges","dragDropResult","dayOfMonth","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","weekdays","_weekdays","slice","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","dateA11yLabel","cellClasses","d1","d2","year","month","day","Date","getTime","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","MAT_DATE_FORMATS","yearsPerPage","MatMultiYearView","isSameMultiYearView","_setSelectedYear","yearSelected","_todayYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","_yearSelected","selectedYear","_getDateFromYear","_getActiveCell","activeMonth","yearName","getYearName","_shouldEnableYear","_selectedYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","euclideanModulo","MatYearView","_setSelectedMonth","monthSelected","_monthSelected","selectedMonth","_getDateFromMonth","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","normalizedDate","monthName","monthYearA11yLabel","_shouldEnableMonth","activeYear","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","_selectedMonth","calendarHeaderId","MatCalendarHeader","_intl","calendar","changeDetectorRef","_periodButtonLabelId","stateChanges","periodButtonText","currentView","monthYearLabel","_formatMinAndMaxYearLabels","periodButtonDescription","periodButtonLabel","prevButtonLabel","nextButtonLabel","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","maxYearOfPage","forwardRef","MatCalendar","MatButton","MatIconButton","startAt","_startAt","_clampedActiveDate","_currentView","viewChangedResult","_moveFocusOnNextTick","viewChanged","startView","_userDragDrop","_intlChanges","_calendarHeaderPortal","ComponentPortal","headerComponent","focusActiveCell","minDateChange","sameDate","previousValue","currentValue","maxDateChange","changeRequiringRerender","view","_getCurrentViewComponent","updateTodaysDate","normalizedYear","normalizedMonth","monthView","yearView","multiYearView","CdkPortalOutlet","CdkMonitorFocus","matDatepickerAnimations","transformPanel","trigger","transition","animate","keyframes","style","opacity","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","overlay","Overlay","scrollStrategies","reposition","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","MatDatepickerContent","_globalModel","_rangeSelectionStrategy","intl","_animationDone","_isAnimating","_actionsPortal","_closeButtonText","_animationState","datepicker","touchUi","_calendar","_handleUserSelection","_model","newSelection","selectionFinished","_handleUserDragDrop","_startExitAnimation","_handleAnimationEvent","phaseName","_getSelected","_applyPendingSelection","_assignActions","portal","forceRerender","color","_selectYear","_selectMonth","_viewChanged","_closeButtonFocused","calendarHeaderComponent","_dialogLabelId","panelClass","_getMinDate","_getMaxDate","_getDateFilter","CdkTrapFocus","animation","MatDatepickerBase","datepickerInput","getStartValue","_color","getThemePalette","_panelClass","coerceStringArray","opened","_opened","_overlay","_unusedNgZone","_viewContainerRef","scrollStrategy","_inputStateChanges","_document","DOCUMENT","xPosition","yPosition","restoreFocus","openedStream","closedStream","_focusedElementBeforeOpen","_backdropHarnessClass","ChangeDetectorRef","_scrollStrategy","positionChange","_overlayRef","positionStrategy","getConfig","FlexibleConnectedPositionStrategy","_setConnectedPositions","updatePosition","_destroyOverlay","select","registerInput","registerActions","_componentRef","instance","removeActions","_getFocusedElementPierceShadowDom","_openOverlay","canRestoreFocus","completeClose","location","take","activeElement","_forwardContentValues","getOverlayLabelId","isDialog","overlayRef","OverlayConfig","_getDialogStrategy","_getDropdownStrategy","hasBackdrop","backdropClass","direction","block","_getCloseStream","attach","dispose","position","global","centerHorizontally","centerVertically","strategy","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","primaryX","secondaryX","primaryY","secondaryY","withPositions","originX","originY","overlayX","overlayY","ctrlShiftMetaModifiers","backdropClick","detachments","every","modifier","booleanAttribute","MatDatepicker","ɵMatDatepicker_BaseFactory","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","_getValueFromModel","_pendingValue","_assignValueProgrammatically","_parentDisabled","newValue","_isInitialized","blur","_getValidators","_parseValidator","_minValidator","_maxValidator","_filterValidator","_registerModel","model","_valueChangesSubscription","_assignValue","_shouldHandleChangeEvent","_lastValueValid","_isValidValue","_cvaOnChange","_onTouched","_formatValue","dateInput","dateChange","_validatorOnChange","_localeSubscription","matDatepickerParse","text","controlValue","_matchesFilter","matDatepickerFilter","matDatepickerMin","actual","matDatepickerMax","dateInputsHaveChanged","registerOnValidatorChange","validate","_validator","writeValue","registerOnChange","registerOnTouched","setDisabledState","_onKeydown","_openPopup","_onInput","lastValueWasValid","hasChanged","_onChange","_onBlur","_assignValueToModel","MAT_DATEPICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","MatDatepickerInput","multi","MAT_DATEPICKER_VALIDATORS","NG_VALIDATORS","matDatepicker","_datepicker","_ariaOwns","_closedSubscription","_openedSubscription","_min","validValue","_max","_dateFilter","wasMatchingValue","dateFormats","_formField","compose","getLabelId","modelValue","MAT_FORM_FIELD","toIso8601","MAT_INPUT_VALUE_ACCESSOR","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","_stateChanges","parsedTabIndex","Number","tabIndex","_watchStateChanges","_open","datepickerStateChanged","of","inputStateChanged","datepickerToggled","_customIcon","_button","MatDatepickerModule","providers","OverlayModule","A11yModule","PortalModule","CdkScrollableModule","a0","a1","a2","OwlCalendarBodyComponent_tr_0_td_1_Template","item_r2","selectCell","colIndex_r4","rowIndex_r5","cellClass","cellRatio","isActiveCell","isRangeFrom","isRangeTo","isSelected","out","OwlCalendarBodyComponent_tr_0_Template","OwlMonthViewComponent_ul_0_li_1_Template","week_r1","OwlMonthViewComponent_ul_0_Template","weekNumbers","OwlMonthViewComponent_th_4_Template","weekday_r3","short","OwlCalendarComponent_owl_date_time_month_view_18_Template","handlePickerMomentChange","dateSelected","userSelected","pickerMoment","selecteds","selectMode","showCalendarWeeks","hideOtherMonths","OwlCalendarComponent_owl_date_time_year_view_19_Template","selectMonthInYearView","goToDateInView","DateView","MONTH","OwlCalendarComponent_owl_date_time_multi_year_view_20_Template","selectYearInMultiYearView","YEAR","OwlTimerBoxComponent_div_0_Template","OwlTimerComponent_owl_date_time_timer_box_2_Template","setSecondValue","upSecondButtonLabel","downSecondButtonLabel","upSecondEnabled","downSecondEnabled","secondValue","stepSecond","OwlTimerComponent_div_3_Template","setMeridiem","hour12ButtonLabel","OwlDateTimeContainerComponent_owl_date_time_calendar_1_Template","selectYear","selectMonth","selectDate","minDateTime","maxDateTime","dateTimeFilter","yearOnly","multiyearOnly","OwlDateTimeContainerComponent_owl_date_time_timer_2_Template","timeSelected","showSecondsTimer","hour12Timer","stepHour","stepMinute","OwlDateTimeContainerComponent_div_3_Template","handleClickOnInfoGroup","to_r5","handleKeydownOnInfoGroup","from_r6","activeSelectedIndex","fromLabel","fromFormattedValue","toLabel","toFormattedValue","OwlDateTimeContainerComponent_div_4_Template","_r7","onCancelClicked","onSetClicked","cancelLabel","setLabel","OwlDialogContainerComponent_ng_template_0_Template","OwlDateTimeTriggerDirective","dtPicker","owlDTTriggerDisabledClass","changeDetector","watchStateChanges","handleClickOnHost","inputDisabled","dtInput","disabledChange","pickerDisabled","OWL_DATE_TIME_FORMATS","OWL_DATE_TIME_LOCALE","OWL_DATE_TIME_LOCALE_FACTORY","LOCALE_ID","DateTimeAdapter","_localeChanges","millisecondsInDay","milliseondsInMinute","compare","dateFirst","dateSecond","diff","compareYear","setLocale","locale","getLocale","nextUniqueId","MULTI_YEARS","OwlDateTime","_showSecondsTimer","val","_hour12Timer","_stepHour","_stepMinute","_stepSecond","_firstDayOfWeek","_hideOtherMonths","formatString","pickerType","dateTimeFormats","fullPickerInput","datePickerInput","timePickerInput","dateTimeAdapter","dateTimeChecker","dateTime","getValidDate","obj","OwlDateTimeIntl","upSecondLabel","downSecondLabel","upMinuteLabel","downMinuteLabel","upHourLabel","downHourLabel","cancelBtnLabel","setBtnLabel","rangeFromLabel","rangeToLabel","hour12AMLabel","hour12PMLabel","CalendarCell","OwlCalendarBodyComponent","owlDTCalendarBodyClass","isInSingleMode","isInRangeMode","elmRef","selectedValues","fromValue","toValue","onStable","asObservable","DefaultOptions","multiYear","yearRows","yearsPerRow","OptionsTokens","optionsProviders","defaultOptionsFactory","multiYearOptionsFactory","OwlMultiYearViewComponent","_selectMode","initiated","setSelectedYears","cdRef","oldSelected","isSameDay","_selecteds","_pickerMoment","oldMoment","isSameYearList","generateYearList","todayYear","years","selectedYears","_selectedYears","tableHeader","pickerIntl","owlDTCalendarView","owlDTCalendarMultiYearView","change","pickerMomentChange","keyboardEnter","selectCalendarCell","firstDateOfMonth","getHours","getMinutes","getSeconds","prevYearList","nextYearList","pickerMomentYear","offset","j","yearCell","createYearCell","handleCalendarKeydown","moment","startDateOfYear","isYearEnabled","calendarBodyElm","OwlYearViewComponent","generateMonthList","setSelectedMonths","hasSameYear","months","localeSub","selectedMonths","todayMonth","getMonthInCurrentYear","MONTHS_PER_YEAR","monthCell","createMonthCell","startDateOfMonth","isMonthEnabled","dateLeft","dateRight","OwlMonthViewComponent","isDefaultFirstDayOfWeek","generateWeekDays","generateCalendar","setSelectedDates","isSameMonth","days","_days","firstRowOffset","selectedDates","userSelection","updateFirstDayOfWeek","longWeekdays","shortWeekdays","todayDate","daysDiff","getDay","abs","week","dateCell","createDateCell","weekNumber","getISOWeek","clonedDate","UTC","getFullYear","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","ceil","getLocaleFirstDayOfWeek","dateName","isDateEnabled","dayValue","dayDiff","differenceInCalendarDays","OwlCalendarComponent","isMonthView","moveFocusOnNextTick","showControlArrows","owlDTCalendarClass","dateClicked","intlChangesSub","dateFilterForViews","toggleViews","nextView","prevButtonEnabled","isSameView","nextButtonEnabled","OwlTimerBoxComponent","hasFocus","valueInput","boxValue","isNaN","owlDTTimerBoxClass","showDivider","step","valueChange","inputChange","inputStream","inputStreamSub","onValueInputMouseWheelBind","onValueInputMouseWheel","bind","debounceTime","inputValue","updateValueViaInput","bindValueInputMouseWheel","unbindValueInputMouseWheel","upBtnClicked","downBtnClicked","handleInputChange","focusIn","focusOut","delta","wheelDelta","deltaY","detail","upBtnDisabled","downBtnDisabled","returnValue","upBtnAriaLabel","downBtnAriaLabel","inputLabel","valueInput_r2","OwlTimerComponent","_minDateTime","_maxDateTime","hourValue","hourBoxValue","hours","isPM","minuteValue","upHourButtonLabel","downHourButtonLabel","upMinuteButtonLabel","downMinuteButtonLabel","owlDTTimerClass","owlDTTimeTabIndex","setHourValueViaInput","setHourValue","setHours","setMinuteValue","minutes","setMinutes","seconds","setSeconds","upHourEnabled","compareHours","downHourEnabled","upMinuteEnabled","compareMinutes","downMinuteEnabled","compareSeconds","amount","comparedDate","owlDateTimePickerAnimations","transformPicker","query","animateChild","fadeInPicker","OwlDateTimeContainerComponent","hidePickerStream","hidePicker$","confirmSelectedStream","confirmSelected$","beforePickerOpenedStream","beforePickerOpened$","pickerOpenedStream","pickerOpened$","_clamPickerMoment","showControlButtons","pickerMode","containerElm","owlDTContainerClass","owlDTPopupContainerClass","owlDTDialogContainerClass","owlDTInlineContainerClass","owlDTContainerDisabledClass","owlDTContainerId","owlDTContainerAnimation","retainStartTime","retainEndTime","initPicker","focusPicker","handleContainerAnimationStart","toState","handleContainerAnimationDone","dateSelectedInSingleMode","dateSelectedInRangeMode","time","setActiveSelectedIndex","updateAndCheckCalendarDate","to","endAt","timer","uniqueId","OwlDialogConfig","ariaDescribedBy","disableClose","role","paneClass","closeOnNavigation","height","maxWidth","NoopScrollStrategy","OwlDialogRef","container","_beforeClose$","_beforeOpen$","_afterOpen$","_afterClosed$","locationChanged","animationStateChanged","take$1","componentInstance","dialogResult","detachBackdrop","startExitAnimation","getPositionStrategy","left","right","top","bottom","updateSize","isAnimating","beforeOpen","afterOpen","beforeClose","zoomFadeIn","zoomFadeInFrom","transformOrigin","OwlDialogContainerComponent","BasePortalOutlet","_config","owlDialogContainerClass","owlDialogContainerTabIndex","owlDialogContainerId","owlDialogContainerRole","owlDialogContainerAriaLabelledby","ariaLabelledBy","owlDialogContainerAriaDescribedby","owlDialogContainerAnimation","focusTrapFactory","portalOutlet","y","ox","oy","scale","elementFocusedBeforeDialogWasOpened","attachComponentPortal","hasAttached","savePreviouslyFocusedElement","attachTemplatePortal","setConfig","calculateZoomOrigin","onAnimationStart","onAnimationDone","trapFocus","wh","innerWidth","innerHeight","resolve","then","focusTrap","focusInitialElementWhenReady","toFocus","destroy","OWL_DIALOG_DATA","OWL_DIALOG_SCROLL_STRATEGY","OWL_DIALOG_SCROLL_STRATEGY_PROVIDER","OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","OWL_DIALOG_DEFAULT_OPTIONS","OwlDialogService","openDialogs","parentDialog","_openDialogsAtThisLevel","_beforeOpenAtThisLevel","_afterOpenAtThisLevel","_afterAllClosed","_afterAllClosedAtThisLevel","defaultOptions","overlayContainer","ariaHiddenElements","Map","afterAllClosed","defer","closeAll","componentOrTemplateRef","applyConfigDefaults","extendObject","dest","sources","TypeError","hasOwnProperty","getDialogById","createOverlay","dialogContainer","attachDialogContainer","dialogRef","attachDialogContent","hideNonDialogContentFromAssistiveTechnology","removeOpenDialog","TemplateRef","createInjector","contentRef","userInjector","injectionTokens","WeakMap","PortalInjector","overlayConfig","getOverlayConfig","containerPortal","containerRef","dialogConfig","minWidth","minHeight","maxHeight","indexOf","splice","removeAttribute","clear","getContainerElement","parentElement","siblings","children","sibling","OWL_DTPICKER_SCROLL_STRATEGY","OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER","OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY","OwlDateTimeComponent","_dtInput","_endAt","_pickerType","formatNativeInputValue","_pickerMode","mode","dialogService","defaultScrollStrategy","afterPickerClosed","beforePickerOpen","afterPickerOpen","confirmSelectedChange","dtInputSub","hidePickerStreamSub","confirmSelectedStreamSub","pickerOpenedStreamSub","pickerBeforeOpenedStreamSub","focusedElementBeforeOpen","popupRef","openAsDialog","openAsPopup","pickerContainer","confirmSelect","detach","pickerContainerPortal","isAttached","coerceArray","createPopup","componentRef","createPopupPositionStrategy","filter$1","withPush","offsetY","OWL_DATETIME_VALUE_ACCESSOR$1","OwlDateTimeInputDirective","OWL_DATETIME_VALIDATORS","_required","validatorOnChange","owlDateTime","registerDateTimePicker","owlDateTimeFilter","_dateTimeFilter","_value","lastValueValid","oldDate","_values","owlDateTimeInputAriaHaspopup","owlDateTimeInputAriaOwns","minIso8601","maxIso8601","owlDateTimeInputDisabled","renderer","rangeSeparator","dateTimeChange","dateTimeInput","dtPickerSub","onModelChange","onModelTouched","parseValidator","owlDateTimeParse","minValidator","owlDateTimeMin","controlValueFrom","controlValueTo","maxValidator","owlDateTimeMax","filterValidator","rangeValidator","owlDateTimeRange","requiredRangeValidator","owlRequiredDateTimeRange","validator","handleKeydownOnHost","handleBlurOnHost","handleInputOnHost","changeInputInSingleMode","changeInputInRangeMode","changeInputInRangeFromToMode","handleChangeOnHost","setProperty","fromFormatted","toFormatted","convertTimeStringToDateTimeString","timeString","parseInput","isSameValue","fromString","OWL_DATETIME_VALUE_ACCESSOR","OwlDateTimeInlineComponent","owlDTInlineClass","OwlDialogModule","OwlDateTimeModule","range","valueFunction","valuesArray","String","dayjs","LocalizedFormat","localData","OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS","OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS_FACTORY","useUtc","DayjsDateTimeAdapter","owlDateTimeLocale","dayjsLocalData","localeData","_localeData","longMonths","shortMonths","monthsShort","longDaysOfWeek","weekdaysShort","shortDaysOfWeek","narrowDaysOfWeek","weekdaysMin","dates","hour","minute","valueOf","startOf","toISOString","isSame","NaN","constructedDayjs","createDayjs","trySetUnit","unitType","displayFormat","parseFormat","utc","OWL_DAYJS_DATE_TIME_FORMATS","DayJsDateTimeModule","useClass","OwlDayJsDateTimeModule","useValue","MAT_DAYJS_DATE_ADAPTER_OPTIONS","MatDayjsDateAdapter","dateLocale","_options","shouldUseUtc","localizedFormat","customParseFormat","dayJs","valueIsString","longDateFormat","parsed","formatWithSmallDay","formatWithSmallMonth","formatWithoutSeparators","formatWithSmallDayAndMonth","parts","dayPart","monthPart","isTyped","toDate","setUTCHours","getUTCHours","getTimezoneOffset","MAT_DATE_LOCALE","MAT_DAYJS_DATE_FORMATS","OWL_DAYJS_FORMATS","MatDayjsModule","DateTimeDefaultLogic","picker_r3","owlPicker_r5","valueForTimePicker","DatetimeDefaultComponent","owlDayjsDateAdapter","useTimePicker","matDayjsDateAdapter","toJSON","DatetimeDefaultComponent_Conditional_0_Template","DatetimeDefaultComponent_Conditional_1_Template","MatInputModule","DatetimeDefaultComponent_1","EmptyDefaultComponent","EmptyMessageComponent","EmptyMessageComponent_Conditional_0_Template","visible","EntityContentBlocksLogic","EnableAddExisting","EnableEdit","EntityType","DataSourceHelpers","stripHtml","stringWithHtml","div","innerText","data2PickerItem","getMasks","patchMasks","parseMasks","buildMasks","DataSourceMasksHelper","parentLog","enableLog","#featInfoEnabled","#featInfoWarned","#isDeveloper","#helpers","enableChildren","allowUse","PickerUiMoreInfo","dialogContext","User","IsSystemAdmin","infoEnabled","#masks","entity","streamName","valueMustUseGuid","masks","#getMasks","maybe","maybeTitle","Title","previewValue","hasPlaceholders","sourceStreamName","fromMasks","#parseMasks","finalLabel","useInfos","valueItem","search","RegExp","appUrl","portalRoot","appRoot","#buildMasks","aIf","patch","ItemTooltip","ItemInformation","ItemLink","Label","PreviewValue","DataSourceMoreFieldsHelper","fieldListToRetrieveFromServer","treeConfig","PickerTreeConfiguration","maskSettings","MoreFields","TreeChildIdField","TreeParentIdField","TreeChildParentRefField","TreeParentChildRefField","extractFieldNamesFromTokens","distinct","enableSimpleFields","regex","exec","trimmedMatch","logSpecsDataSourceBase","triggerGetAll","addToRefresh","newIconOptions","fileLoadSettings","DataSourceBase","loading","getAll$","BehaviorSubject","guidsToRefresh","noItemsLoadingFalse","noItemsLoadingTrue","fieldsHelper","helpers","constructorEnd","forField","additionalGuids","createMaskHelper","moreSettings","fieldsToRetrieve","logSpecsDataSourceEntityQueryBase","getFromBackend","loadMoreIntoSignal","DataSourceEntityQueryBase","querySvc","QueryService","#typeOrParams","#typeOrParams$","toObservable","#paramsDebounced$","distinctUntilChanged","#all","combineLatest","switchMap","typeName","initialValue","#prefetchNew","#modified","prefetch","modified","overrides","entityGuids","guids","#loadMoreIntoSignal","setParams","additions","DataSourceAppAssets","_typeName","_guids","purposeForLog","AssetsRootFolder","rootFolder","AssetsFileFilter","fileFilter","AssetsType","typeLower","stream","getFromQuery","fieldMask","PickerItemFactory","i18nLabel","suffix","DataAdapterBase","setupEmpty","connectState","fetchItems","dataSource","dataSourceRaw","deleteCallback","doAfterDelete","onAfterViewInit","syncParams","logSpecsDataAdapterEntityBase","editItem","getPrefill","DataAdapterEntityBase","#editRoutingService","#snackBar","#entityService","MatSnackBar","EntityService","#paramsMaskLazy","FieldMask","initSignal","#createEntityTypes","#deletedItemsGuids","errorOptions","errors","ds","deleted","#prefill","#createParams","#editParams","prefetchGuids","missingData","editParams","entityType","editGuid","formParams","#urlToObject","EditPrep","newFromType","editId","l2","deleteItem","parentId","parentField","confirm","prefill","fromEntries","line","DataAdapterAppAssets","sortByType","insertToDom","ScriptsLoaderService","#loadedFiles","scripts","callback","sortedFiles","#sortByType","#insertToDom","cssFiles","jsFiles","script","_a","resolveUrlTokens","domEl","endsWith","files","increment","sxcVersion","existing","loadedFile","_listener","rel","href","src","appendChild","getUrlPrefix","reRegExpChar","reHasRegExpChar","lodash_es_escapeRegExp","escapeRegExp","test","findAllIconsInCss","cssSelector","showPrefix","regEx","buildRegEx","fallbackRegex","buildRegExFromPrefixAndSuffix","allRules","getAllCssRules","styleSheets","getCssRules","Boolean","foundList","duplicateDetector","rules","allRulesWithSelector","rule","selectorText","selector","lastIndex","groups","ValueRaw","iconClass","Rule","Selector","classPrefix","prefix","buildRegExFromPrefix","startedWithDot","cssSelectorPart","valuePart","sheet","cssRules","DataSourceCss","scriptsLoaderService","#iconEntities","CssSourceFile","CssSelectorFilter","#dataMaskHelper","maskHelper","pickerItem","DataAdapterCss","DataSourceEmpty","#label","notSelectable","preSetup","DataAdapterEmpty","DataSourceEntity","getEntities","contentTypes","itemIds","Default","DataAdapterEntity","DataSourceQuery","formState","#appId","#streamName","StreamName","#isForStringField","isString","sets","queryName","Query","queryUrl","#transformData","valueMustBeGuid","isForStringField","#setDisableEdit","queryEntities","AppId","DataAdapterQuery","DataSourceString","option","DataAdapterString","logSpecsStateAdapter","reorder","sepAndOpts","createEntityTypes","attachCallback","typesForNew","correctStringEmptyValue","StateAdapter","#formConfigSvc","#createTypesRaw","ts","#fieldName","updated","orig","asUi","toUi","pickerAllowsEmpty","uiMapper","#focusOnSearchComponent","focusCallback","#updateValue","operation","flush","reorderIndexes","moveItemInArray","previousIndex","currentIndex","StateUiMapperBase","StateUiMapperNoop","StateUiMapperNumberArray","stringValue","parsedNumber","StateUiMapperStringArray","PickerSourcesCustom","UiPickerSourceCustomList","UiPickerSourceCustomCsv","PickerConfigs","UiPickerSourceQuery","UiPickerSourceEntity","UiPickerSourceAppAssets","UiPickerSourceCss","UiPickerModeIsTree","PickerDataSetup","setupPickerData","pdWithSetupState","alreadyStarted","setupAlreadyStarted","#getStateAdapter","dataSourceType","#getSourceAdapter","uiMapperType","partsMap","stateAdapter","dsType","forcePickerConfig","dataAdapterType","mapNameToDataAdapter","#throwIfSourceAdapterNotAllowed","StringFontIconPicker","NumberDropdown","BaseTreeControl","expansionModel","SelectionModel","dataNode","_trackByValue","collapse","deselect","toggleDescendants","collapseDescendants","expandDescendants","collapseAll","toBeProcessed","getDescendants","trackBy","FlatTreeControl","getLevel","isExpandable","results","dataNodes","expandAll","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","viewContainer","_node","CdkTreeNodeOutletContext","CdkTreeNodeDef","when","getTreeControlMissingError","CdkTree","_dataSource","_switchDataSource","_differs","Directionality","_onDestroy","_levels","_parents","_ariaSets","viewChange","MAX_VALUE","_flattenedNodes","_nodeType","_nodes","_keyManagerNodes","_keyManagerFactory","TREE_KEY_MANAGER","_viewInit","_initializeKeyManager","ngAfterContentChecked","_updateDefaultNodeDefinition","_subscribeToDataChanges","_nodeOutlet","_dataSubscription","_keyManager","_checkTreeControlUsage","_initializeDataDiffer","defaultNodeDefs","_nodeDefs","def","_defaultNodeDef","_setNodeTypeIfUnset","_getExpansionModel","treeControl","_expansionModel","dataStream","isDataSource","connect","isObservable","_getRenderData","takeUntil","renderingData","_renderDataChanges","expansionChanges","_emitExpansionChanges","renderNodes","flattenedNodes","_computeRenderingData","convertedData","_updateCachedData","renderNodeChanges","_updateKeyManagerItems","nodes","added","_emitExpansionState","removed","keyManagerNodes","_getExpansionKey","skipPredicate","typeAheadDebounceInterval","horizontalOrientation","_index","_dataDiffer","dataDiffer","parentData","forEachOperation","adjustedPreviousIndex","insertNode","move","forEachIdentityChange","record","newData","_getNodeDef","nodeData","levelAccessor","_getLevelAccessor","level","has","createEmbeddedView","CdkTreeNode","mostRecentTreeNode","_getDescendants","child","_getChildrenAccessor","getChildren","childrenAccessor","_getDirectChildren","expanded","_findChildrenByLevel","coerceObservable","levelDelta","startIndex","findIndex","dataNodeLevel","expectedLevel","currentLevel","_registerNode","_unregisterNode","_getLevel","_getSetSize","_getAriaSet","_getPositionInSet","_getNodeParent","_getNodeChildren","_sendKeydownToKeyManager","onKeydown","Infinity","_getAllChildrenRecursively","allChildren","nextChildren","concatMap","expansionKey","parentKey","_findParentForNode","cachedNodes","parentIndex","_flattenNestedNodesWithExpansion","childKey","nestedNodes","rootNodes","_calculateParents","_role","_isExpandable","_inputIsExpandable","_inputIsExpanded","_tree","_data","typeaheadLabel","_dataChanges","isLeafNode","_parentNodeAriaLevel","_getAriaExpanded","_tabindex","activation","expandedChange","_destroyed","_shouldFocus","getParentNodeAriaLevel","nodeElement","isNodeElement","numberAttribute","getParent","unfocus","activate","makeFocusable","_focusItem","focusItem","_setActiveItem","cssUnitPattern","CdkTreeNodePadding","_level","_setLevelInput","indent","_indent","_setIndentInput","_treeNode","_element","indentUnits","_setPadding","_paddingIndent","nodeLevel","forceChange","padding","_currentPadding","paddingProp","resetProp","units","CdkTreeNodeToggle","recursive","_toggle","CdkTreeModule","MatTreeNode","tabIndexInputBinding","_tabIndexInputBinding","_getTabindexAttribute","isNoopTreeKeyManager","keyManager","_isNoopTreeKeyManager","tree","MatTreeNodeDef","ɵMatTreeNodeDef_BaseFactory","MatTreeNodePadding","ɵMatTreeNodePadding_BaseFactory","MatTreeNodeOutlet","MatTree","ɵMatTree_BaseFactory","MatTreeNodeToggle","ɵMatTreeNodeToggle_BaseFactory","MatTreeModule","MatTreeFlattener","transformFunction","_flattenNode","resultNodes","parentMap","flatNode","childrenNodes","_flattenChildren","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","currentExpand","MatTreeFlatDataSource","DataSource","_flattenedData","_treeFlattener","_treeControl","initialData","_expandedData","collectionViewer","PickerPartBaseComponent","enableTextEntry","selectedItem","itemCount","expandDialog","openNewEntityDialog","toggleFreeText","removeItem","PickerItemButtonsComponent","uiFeatures","buttons","uif","noRemove","PickerItemButtonsComponent_Conditional_0_Template","PickerItemButtonsComponent_Conditional_1_Template","PickerItemButtonsComponent_Conditional_2_Template","ClickStopPropagationDirective","goToLink","helpLink","PickerIconHelpComponent","PickerIconHelpComponent_Conditional_0_Template","infoBox","PickerIconInfoComponent","PickerIconInfoComponent_Conditional_0_Template","messagesDict","instanceAlreadyExist","instanceNotExist","childrenInstancesNotFoundGrouped","childrenInstancesNotFoundSingleton","singletonInstanceAlreadyExist","tippyFakeInstance","clearDelayTimeouts","disable","enable","hideWithInteractivity","plugins","popper","popperInstance","reference","setContent","setProps","isVisible","isDestroyed","isMounted","isShown","unmount","NGX_TIPPY_MESSAGES","NGX_TIPPY_CONFIG","DevModeService","isDevMode","InstanceChangeReasonEnum","SetInstance","HideWithInteractivity","Disable","SetProps","SetContent","Unmount","ClearDelayTimeouts","Destroy","NgxTippyNamesEnum","TippyName","SingletonName","CompRef","args","compRef","createComponent","getElement","setTemplateVisible","tippyContent","Element","setStyle","TplRef","viewRef","tpl","appRef","attachView","Node","ELEMENT_NODE","append","removeChild","NgxViewService","getViewRefInstance","content","tippyName","tippyContext","isTemplateRef","createTemplate","isComponent","HTMLTemplateElement","isHTMLTemplate","NgxTippyService","rendererFactory","devModeService","ngxViewService","tippyInstances","tippySingletonEntryInstances","tippyInstances$","createRenderer","setInstance","errMessage","getMessage","messageFor","throwError","emitInstancesChange","getInstance","getInstances","size","setSingletonInstance","getSingletonInstance","getSingletonInstances","callNativeTippyMethod","mouseEvent","tippyProps","throwErrorInstanceNotExist","setDefaultProps","tippy","showAll","hideAll","exclude","excludeName","instancesChanges","method","arg","errorConstructor","NgxTippyDirective","tippyEl","ngxTippyService","ngxTippyConfig","cachedInstances","isPlatformServer","initTippy","handleChanges","destroyTippy","tippyTarget","ngxTippy","tippyElement","tInstance","setTippyInstance","setClassName","tippyInstance","tippyClassName","writeInstancesToStorage","_tippy","className","classNames","addClass","firstElementChild","removeClassName","removeClass","handleNameChanges","handleContentChanges","handlePropsChanges","handleClassChanges","handleContextChanges","cachedTippyInstances","deleteEntryInStorage","clearInstance","resetLocalInstance","clearCachedInstances","clearViewRef","destroyTippyInstance","PLATFORM_ID","NgxTippyModule","replaceDot","tippyTemplate_r2","tippyTemplate_r3","imageResize","PickerItemPreviewComponent_Conditional_0_Case_0_Template","PickerItemPreviewComponent_Conditional_0_Case_1_Template","PickerItemPreviewComponent_Conditional_0_Case_2_Template","PickerItemPreviewComponent_Conditional_0_Case_3_Template","PreviewType","PickerItemPreviewComponent","originalImage","optimizedImage","PickerItemPreviewComponent_Conditional_0_Template","MatIcon","PickerPreviewLabelComponent","RelationshipParentChild","PickerTreeDataHelper","#pickerTreeConfiguration","#treeItems","expandable","hasChild","build","updateConfig","pickerConfig","addTreeItems","treeItems","updateSelectedData","selectedData","preConvertAllItems","convertedItems","#preConvertItemToTreeItem","#getChildren","allItems","isParentChild","TreeRelationship","cpRef","pcRef","pId","pStreamName","TreeBranchesStream","itemInCorrectStream","currentId","treeFlattener","cId","itemParentValue","disableOption","enableReselect","TreeAllowSelectRoot","TreeAllowSelectBranch","TreeAllowSelectLeaf","PickerTreeDataService","treeHelper","PickerDisplayMode","relationshipIsParentChild","runInInjectionContext","filteredData","z","isOptionDisabled","PickerSearchComponent_Conditional_14_For_1_Template","filteredItems","item_r4","item_r5","PickerSearchComponent_Conditional_15_mat_tree_node_1_Template","PickerSearchComponent_Conditional_15_mat_tree_node_2_Template","_r6","insertNull","optionSelected","focusOnSearchComponent","PickerSearchComponent","#logItemChecks","#treeDataService","autocomplete","viewChild","showSelectedItem","showItemEditButtons","#newValue","#reFilter","filterInDom","oItem","enableAddExisting","EnableReselect","showAsTree","displaySelected","displayFn","ae","markAsTouched","filterSelectionList","onOpened","isTreeDisplayMode","domElement","onClosed","selectedEntity","getPlaceholder","getSelectedItem","PickerSearchComponent_Conditional_9_Template","PickerSearchComponent_Conditional_14_Template","PickerSearchComponent_Conditional_15_Template","PickerSearchComponent_Conditional_16_Template","auto_r7","labelWithRequired","MatAutocompleteModule","MatOptionModule","PickerInlineBaseComponent","allowMulti","toggled","PickerInlineHeaderComponent","$index_r4","PickerCheckboxesComponent","requireFeature","PickerUiCheckbox","PickerCheckboxesComponent_For_5_Template","MatCheckbox","item_r1","PickerPillsComponent_Conditional_6_For_2_Template","PickerPillsComponent","PickerPillsComponent_Conditional_6_Template","PickerPillsComponent_Conditional_7_Template","PickerPillsComponent_Conditional_8_Template","PickerRadioComponent","PickerUiRadio","PickerRadioComponent_For_5_Template","MatRadioButton","isTextMode","csDisabled","PickerTextToggleComponent_Conditional_0_Conditional_1_Template","PickerTextToggleComponent_Conditional_0_Conditional_2_Template","showBoth","PickerTextToggleComponent","allowText","PickerTextToggleComponent_Conditional_0_Template","PickerTextComponent","useMultiLine","PickerTextComponent_Conditional_2_Template","PickerTextComponent_Conditional_3_Template","PickerPreviewComponent_Case_2_ng_container_1_Template","textToggle_r1","PickerPreviewComponent_Case_3_ng_container_1_Template","PickerPreviewComponent_Case_3_ng_container_2_Template","addNew_r2","PickerPreviewComponent_Case_4_ng_container_1_Template","PickerPreviewComponent_Case_4_ng_container_2_Template","PickerPreviewComponent_Case_5_ng_container_1_Template","PickerPreviewComponent_Case_6_ng_container_1_Template","ctx_r3","PickerPreviewComponent_Conditional_7_ng_container_1_Template","PickerPreviewComponent_Conditional_7_Conditional_2_Template","showBoth_r5","tmp_8_0","ct_r7","PickerPreviewComponent_ng_template_12_Conditional_0_Conditional_0_For_6_Template","entityTypesMenu_r8","_r9","PickerPreviewComponent_ng_template_12_Conditional_0_Conditional_0_Template","PickerPreviewComponent_ng_template_12_Conditional_0_Conditional_1_Template","PickerPreviewComponent_ng_template_12_Conditional_0_Template","PickerPreviewComponent","#pickerMode","skipHelpText","PickerPreviewComponent_Case_2_Template","PickerPreviewComponent_Case_3_Template","PickerPreviewComponent_Case_4_Template","PickerPreviewComponent_Case_5_Template","PickerPreviewComponent_Case_6_Template","PickerPreviewComponent_Conditional_7_Template","PickerPreviewComponent_Conditional_8_Template","PickerPreviewComponent_Conditional_9_Template","PickerPreviewComponent_ng_template_10_Template","PickerPreviewComponent_ng_template_12_Template","tmp_2_0","NgTemplateOutlet","PickerListComponent_Conditional_1_For_2_Conditional_2_Template","ɵ$index_8_r4","drop","PickerListComponent_Conditional_1_For_2_Template","PickerListComponent","PickerListComponent_Conditional_0_Template","PickerListComponent_Conditional_1_Template","CdkDropList","CdkDrag","ct_r2","PickerDialogComponent_Conditional_4_Conditional_1_For_6_Template","entityTypesMenu_r4","_r5","PickerDialogComponent_Conditional_4_Conditional_1_Template","PickerDialogComponent_Conditional_4_Conditional_2_Template","PickerDialogComponent","showAddNewEntityButtonInDialog","PickerDialogComponent_Conditional_1_Template","PickerDialogComponent_Conditional_2_Template","PickerDialogComponent_Conditional_4_Template","PickerComponent","BaseComponent","refreshOnChildClosed","#injector","#pickerData","showPreview","isOpen","#refreshOnChildClosed","PickerComponent_Conditional_0_Template","PickerComponent_Conditional_1_Template","calculateDropdownOptions","dropdownValuesFormat","dropdownValues","dropdownValuesArray","maybeWantedEmptyVal","shift","valueLabel","chars","char","escaped","separatorIndex","DataSourceParserCsv","csv","Papa","header","skipEmptyLines","transformHeader","dynamicTyping","filtered","meta","preEmpty","h","te","empty","getDataSourceAndSetupFieldSettings","PickerLogicShared","setDefaultSettings","noAutoFocus","maybeOverrideEditRestrictions","fsUntyped","removeEditRestrictions","preUpdate","fsDefaults","fsRaw","typeConfig","#getDataSourceAndSetupFieldSettings","fsBasic","dataSources","DataSources","isKnownType","sourceIsQuery","sourceIsEntity","sourceIsCss","sourceIsAppAssets","isCustomSource","specsQuery","UrlParameters","QueryParameters","ContentTypeNames","PickerSourceAppAssets","valuesRaw","Csv","PickerSourceCsv","PickerDisplayConfiguration","#getTreeConfigOnce","pickerDisplayConfigurations","ConfigModel","TreeLeavesStream","TreeShowRoot","TreeDepthMax","EntityDefaultLogic","CreatePrefill","EntityDefaultComponent","EntityDefaultComponent_Conditional_0_Template","EntityDefaultComponent_Conditional_1_Template","EntityContentBlockComponent","EntityContentBlockComponent_Conditional_0_Template","EntityContentBlockComponent_Conditional_1_Template","EntityPickerLogic","EntityPickerComponent","EntityPickerComponent_Conditional_0_Template","EntityPickerComponent_Conditional_1_Template","EntityQueryLogic","updateSpecs","EntityQueryComponent","EntityQueryComponent_Conditional_0_Template","EntityQueryComponent_Conditional_1_Template","AdamService","getHttp","subfolder","usePortalRoot","addFolder","newFolderName","newFolder","SanitizeHelper","sanitizeName","rename","newName","isFolder","getLinkInfo","appid","ConnectorInstance","fieldConfigSignal","field$","#field$","_experimental","_connectorHost","value$","ConnectorDataInstance","ConnectorDialogInstance","loadScript","testOrScripts","srcOrCallback","loadScripts","clientValueChangeListeners","onValueChange","getUrlOfId","updateControl","openFeatureDisabledWarning","ConnectorHelper","#translateService","#contentTypeService","#inputTypeService","#featuresService","#dialog","#zone","#adamService","InputTypeService","MatDialog","NgZone","#value$","#group","#customEl","#viewContainerRef","#changeDetectorRef","customElName","customElContainerRef","connector","#buildConnector","connectorHost","#getCallbacks","#buildExperimentalProps","toFieldConfig","#updateControl","allInputTypeNames","getAttributeInputTypes","lEx","translateService","dropzone","adam","updateField","controls","isFeatureEnabled","setFocused","openPagePicker","PagePicker","featureDisabledWarning","featureNameId","#openFeatureDisabledWarning","#getUrlOfId","getSettings","getFieldMask","mask","UiControl","PasteImageFromClipboard","onAction","openFeatureDialog","ConnectorComponent","connectorCreator","componentTagDialogName","CustomGpsLogic","CustomGps","StringWysiwygLogic","StringWysiwyg","_allowDialog","Dialog","ButtonSource","ButtonAdvanced","ContentCss","InlineInitialHeight","_advanced","findAndMergeAdvanced","WysiwygConfiguration","Mode","Json","processValueOnLoad","doc","DOMParser","parseFromString","body","querySelectorAll","img","dataCmsid","fileName","pop","adamItem","ExternalWebComponentComponent","loadAssets","assets","AngularAssets","assetsLoaded","ExternalWebComponentComponent_Conditional_0_Template","ExternalWebComponentComponent_Conditional_1_Template","MatProgressSpinnerModule","handleImage","PasteClipboardImageDirective","#eventListeners","#pasteImageEnabled","elementType","pasteImageEnabled","pastableTextarea","pastableNonInputable","#handleImage","listener","image","#getFile","uploadFile","newFile","FormData","imageFileName","HyperlinkDefaultBaseComponent","preview","thumbnailUrl","previewUrl","floatingText","isImage","icon","adamService","adamItemId","status","fetchLink","page","openImageConfiguration","_imageConfigurationContentType","_imageConfigurationId","newMetadata","eavConstants","cmsObject","setPreview","isFileOrPage","isResolved","getPreview","lastIndexOf","ThumbnailUrl","buildUrl","PreviewUrl","FileTypeHelpers","getIconClass","cleanValue","HyperlinkDefaultLogic","HyperlinkDefault","Buttons","FileFilter","Paths","ServerResourceMapping","EnableImageConfiguration","toggleAdam","menu_r5","_r8","HyperlinkDefaultComponent_Conditional_0_Conditional_0_ng_template_9_Conditional_0_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_ng_template_9_Conditional_1_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_ng_template_9_Conditional_2_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_ng_template_9_Conditional_3_Template","showAdam","showPagePicker","showImageManager","showFileManager","preV_r10","HyperlinkDefaultComponent_Conditional_0_Conditional_0_Conditional_19_Conditional_1_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_Conditional_19_Conditional_2_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_Conditional_1_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_Conditional_5_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_Conditional_6_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_ng_template_9_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_Conditional_18_Template","HyperlinkDefaultComponent_Conditional_0_Conditional_0_Conditional_19_Template","buttonAdam","tmp_6_0","enableImageConfiguration","buttonPage","buttonMore","HyperlinkDefaultComponent_Conditional_0_Conditional_0_Template","HyperlinkDefaultComponent","adamSettings","rootSubfolder","autoLoad","onItemClick","setValue","onItemUpload","showImagesOnly","HyperlinkDefaultComponent_Conditional_0_Template","tmp_0_0","HyperlinkLibraryLogic","HyperlinkLibraryComponent","updateValueAndValidity","attachAdamConfig","adamConfig","allowAssetsInRoot","AllowAssetsInRoot","enableSelect","folderDepth","FolderDepth","metadataContentTypes","MetadataContentTypes","StringDropdownLogic","DropdownValuesFormat","DropdownValues","NumberDefaultLogic","NumberDefault","NumberDefaultComponent","NumberDropdownLogic","NumberDropdownComponent","NumberDropdownComponent_Conditional_0_Template","NumberDropdownComponent_Conditional_1_Template","NumberPickerLogic","NumberPickerComponent","NumberPickerComponent_Conditional_0_Template","NumberPickerComponent_Conditional_1_Template","StringDefaultLogic","StringDefault","InputFontFamily","RowCount","inputFontFamily","rowCount","textWrap","StringDefaultComponent","rowCountRaw","isMultiline","rc","StringDefaultComponent_Conditional_1_Template","StringDefaultComponent_Conditional_2_Template","StringDropdownQueryLogic","StringDropdownQueryComponent","StringDropdownQueryComponent_Conditional_0_Template","StringDropdownQueryComponent_Conditional_1_Template","StringDropdownComponent","StringDropdownComponent_Conditional_0_Template","StringDropdownComponent_Conditional_1_Template","StringFontIconPickerLogic","Files","CssPrefix","PreviewCss","ShowPrefix","StringFontIconPickerComponent","StringFontIconPickerComponent_Conditional_0_Template","StringFontIconPickerComponent_Conditional_1_Template","StringFontIconPickerComponent_1","StringPickerLogic","StringPickerComponent","StringPickerComponent_Conditional_0_Template","StringPickerComponent_Conditional_1_Template","templateTypes","Token","ext","purpose","file_r1","StringTemplatePickerComponent","#typeMask","#locationMask","#sourceService","#activeSpec","#templates","#global","#resetIfNotFound","FileType","SourceService","#prevLocation","#onLocationChange","#setFileConfig","#setTemplateOptions","Shared","Path","nameMask","CreateFileDialogComponent","templateKey","res","StringTemplatePickerComponent_For_7_Template","MatSelectModule","StringTemplatePickerComponent_1","StringUrlPathLogic","StringUrlPath","AutoGenerateMask","AllowSlashes","StringUrlPathComponent","#maskFromSettings","#lastAutoCopy","#fieldMask","#maskedValueCleaned","initPreClean","stripNonUrlCharacters","clean","#publishFieldMaskResult","cleanedNewValue","lastAutoCopy","allowSlashes","cleaned","trimEnd","StringUrlPathComponent_1","AdamConfigInstance","allowEdit","maxDepthReached","completeConfig","fieldConfig","oldConfig","startDisabled","newConfig","folders","openUploadClick","AdamBrowserComponent_Conditional_1_Conditional_1_Conditional_7_Template","AdamBrowserComponent_Conditional_1_Conditional_1_Conditional_8_Template","openFeatureInfoDialog","isPasteImageFromClipboardEnabled","pasteDiv_r3","goUp","item_r7","del","editItemMetadata","_metadataContentType","_metadataId","goIntoFolder","AdamBrowserComponent_Conditional_1_For_5_Conditional_0_Conditional_6_Template","AdamBrowserComponent_Conditional_1_For_5_Conditional_0_Conditional_10_Template","_icon","_r11","_r12","_r13","_r10","AdamBrowserComponent_Conditional_1_For_5_Conditional_1_Conditional_1_Template","AdamBrowserComponent_Conditional_1_For_5_Conditional_1_Conditional_2_Template","AdamBrowserComponent_Conditional_1_For_5_Conditional_1_Conditional_4_Template","AdamBrowserComponent_Conditional_1_For_5_Conditional_1_Conditional_14_Template","AdamBrowserComponent_Conditional_1_For_5_Conditional_1_Conditional_15_Template","_displaySize","AdamBrowserComponent_Conditional_1_For_5_Conditional_0_Template","AdamBrowserComponent_Conditional_1_For_5_Conditional_1_Template","AdamBrowserComponent_Conditional_1_Conditional_1_Template","AdamBrowserComponent_Conditional_1_Conditional_2_Template","AdamBrowserComponent_Conditional_1_Conditional_3_Template","AdamBrowserComponent_Conditional_1_For_5_Template","allowAddButtons","processFetchedItems","AdamBrowserComponent","dnnContext","openUpload","output","#ui","#firstFetch","cnf","#url","$2sxc","doOnDialogClosed","setBrowser","folderName","prompt","contentTypeName","metadataId","#getImageConfigurationContentType","imageDecorator","#getMetadataContentType","found","firstFetch","clonedItems","#processFetchedItems","extensionsFilter","getExtensionsFilter","extension","_isMaterialIcon","Size","toFixed","AllowEdit","fixDropzone","oldDzConfig","newDzConfig","dzUrlParams","getUrlParams","newUrl","replaceUrlParam","uploadDisabled","AdamBrowserComponent_Conditional_1_Template","MatBadgeModule","overflow","AdamHintComponent","hideAdamSponsor","NoSponsoredByToSic","AdamHintComponent_Conditional_11_Template","AdamWrapperComponent","adamDisabled","fullscreenAdam","invisibleClickableRef","click","DROPZONE_CONFIG","DropzoneEvents","DropzoneConfig","assign","HTMLElement","DropzoneDirective","differs","platformId","defaults","configDiff","DZ_INIT","DZ_ERROR","DZ_SUCCESS","DZ_SENDING","DZ_CANCELED","DZ_COMPLETE","DZ_PROCESSING","DZ_DROP","DZ_DRAGSTART","DZ_DRAGEND","DZ_DRAGENTER","DZ_DRAGOVER","DZ_DRAGLEAVE","DZ_THUMBNAIL","DZ_ADDEDFILE","DZ_ADDEDFILES","DZ_REMOVEDFILE","DZ_UPLOADPROGRESS","DZ_MAXFILESREACHED","DZ_MAXFILESEXCEEDED","DZ_ERRORMULTIPLE","DZ_SUCCESSMULTIPLE","DZ_SENDINGMULTIPLE","DZ_CANCELEDMULTIPLE","DZ_COMPLETEMULTIPLE","DZ_PROCESSINGMULTIPLE","DZ_RESET","DZ_QUEUECOMPLETE","DZ_TOTALUPLOADPROGRESS","Dropzone","autoDiscover","isPlatformBrowser","maxFiles","observers","on","autoReset","reset","errorReset","cancelReset","eventName","emitter","toUpperCase","ngDoCheck","cancel","removeAllFiles","DropzoneModule","DropzoneConfigInstance","headers","acceptedFiles","parallelUploads","maxFilesize","timeout","paramName","maxThumbnailFilesize","dictDefaultMessage","addRemoveLinks","previewsContainer","clickable","WysiwygConstants","classToDetectWysiwyg","DropzoneWysiwyg","isStringWysiwyg","imageTypes","detectWysiwygOnDrop","isParentWysiwyg","toElement","removeFilesHandledByWysiwyg","removeFile","DropzoneWrapperComponent","#wysiwygHelper","dropzoneConfig","dropzoneDisabled","extendFieldConfigWithDropZone","#setConfig","#uploadFile","onDrop","onAddedFile","dropzoneRef","onUploadError","onUploadSuccess","refresh","sxc","webApi","uploadLimit","upload","chunked","chunking","processFile","DropzoneDraggingHelper","eventListeners","htmlEl","dragoverListener","clearTimeouts","timeoutsArray","clearTimeout","windowBodyTimeouts","draggingClass","dropListener","ContentExpandAnimation","bottomPixels","ExtendedFabSpeedDialActionDirective","toggleAttribute","ExtendedFabSpeedDialActionsContentDirective","templateRef","ExtendedFabSpeedDialTriggerContentDirective","ExtendedFabSpeedDialComponent","open$","actionButtons","btn","transitionDuration","setOpen","pointerType","ElementRef","actions","ExtendedFabSpeedDialTriggerDirective","saveAll","DialogPopupComponent","#dropzoneDraggingHelper","#entityFormStateService","applyEmptyClass","#hideAdamSponsor","adamSponsorI18nKey","isSavingStatus","backdropRef","calculateBottomPixels","DialogPopupComponent_ng_template_17_Template","DialogPopupComponent_ng_template_18_Template","ExpandableWrapperComponent","previewHeight","maxHeightInPx","vh","percentage","documentElement","clientHeight","componentTagName","previewContainerRef","dropzoneDraggingHelper","touched","feature_r1","FeatureWarningWrapperComponent_Conditional_3_For_3_Template","FeatureWarningWrapperComponent","req","FeatureWarningWrapperComponent_Conditional_3_Template","FeatureIconComponent","EmptyDefaultLogic","EmptyDefault","Collapsed","CollapsibleWrapperComponent","#fieldsSettingsSvc","collapsed","toggleCollapse","CollapsibleWrapperComponent_Conditional_10_Template","HiddenWrapperComponent","preV_r3","HyperlinkDefaultExpandableWrapperComponent_Conditional_3_Conditional_8_Conditional_4_Template","HyperlinkDefaultExpandableWrapperComponent_Conditional_3_Conditional_8_Conditional_8_Template","_c6","tmp_7_0","_c7","tmp_10_0","HyperlinkDefaultExpandableWrapperComponent_Conditional_3_Conditional_3_Template","HyperlinkDefaultExpandableWrapperComponent_Conditional_3_Conditional_8_Template","HyperlinkDefaultExpandableWrapperComponent_Conditional_3_Conditional_11_Template","HyperlinkDefaultExpandableWrapperComponent_Conditional_3_Conditional_14_Template","HyperlinkDefaultExpandableWrapperComponent","HyperlinkDefaultExpandableWrapperComponent_Conditional_3_Template","FeatureIconTextComponent","HyperlinkLibraryExpandableWrapperComponent_For_10_Conditional_1_Conditional_1_Conditional_1_Template","HyperlinkLibraryExpandableWrapperComponent_For_10_Conditional_1_Conditional_1_Conditional_2_Template","HyperlinkLibraryExpandableWrapperComponent_For_10_Conditional_1_Conditional_1_Template","HyperlinkLibraryExpandableWrapperComponent_For_10_Conditional_1_Conditional_2_Template","HyperlinkLibraryExpandableWrapperComponent_For_10_Conditional_0_Template","HyperlinkLibraryExpandableWrapperComponent_For_10_Conditional_1_Template","HyperlinkLibraryExpandableWrapperComponent","itemsNumber","trackByFn","HyperlinkLibraryExpandableWrapperComponent_For_10_Template","PickerExpandableWrapperComponent","InputComponents","We_AdamWrapper","We_CollapsibleWrapper","We_DropzoneWrapper","We_PickerExpandableWrapper","We_ExpandableWrapper","We_HiddenWrapper","We_FeatureWarningWrapper","We_HyperlinkDefaultExpandableWrapper","We_HyperlinkLibraryExpandableWrapper","We_LocalizationWrapper","CustomDefault","DateTimeDefault","EmptyMessage","ExternalWebComponent","StringTemplatePicker","AdamConnector","#browser","#items","#count","browser","BasicControlSettings","fromSettings","getInjectors","FieldStateInjectorFactory","#envInjector","#entityFormStateSvc","#featuresSvc","EnvironmentInjector","controlStatusChangeSignal","#buildUiSignal","debouncedValue$","mapUntilObjChanged","injectors","#createInjectors","lDetailed","fnCond","settings$","uiStateChange$","uiStatus$","emptyControl","environmentInjector","createEnvironmentInjector","createWrapper","EditControlsBuilderDirective","#firstInputFocused","#fieldInjectorFac","#myContainerRef","formConfigService","el","Renderer2","#fieldConfigSets","onInitReady","createControls","currentContainer","#createGroup","isGroupEnd","#createComponent","wrapperInfo","DynamicControlInfo","#createWrappers","contentsRef","inputSpecs","componentType","#readComponentType","componentMd","getMetadata","#generateAndAttachField","pickerPreviewContainerRef","wrapperRef","previewComponent","previewType","#setAutoFocus","outerWrapper","wrapperName","#createWrapper","fieldComponent","EditForceReloadService","#dialogRef","MatDialogRef","#watcher","refreshEdit","navigateUrl","unlockAll","lockAll","EntityTranslateMenuComponent_Conditional_0_ng_template_10_Template","EntityTranslateMenuComponent","fieldTranslateSvc","fieldSettingsSvc","#autoTranslatableFields","autoTransFields","translationStateAny","EntityTranslateMenuComponent_Conditional_0_Template","UpperCasePipe","noteProps","note","toggleNote","editNote","triggerClass","itemNotSaved","iconName","noteTouched","deleteNote","noteClass","noteHtml","toggleSlotIsEmpty","ctSettings","itemForTooltip","openHistory","editInstructions","fetchNote","noteFormData","EntityFormComponent","#formsStateSvc","#versioningReloader","#editUiShowNotes","#editUiShowMetadataFor","#retriggerNoteProps","#formDataSvc","#entitySvc","editRoutingSvc","EditUiShowNotes","EditUiShowMetadataFor","Features","ctFeatures","buildContentTypeFeatures","contentTypeFeatures","contentTypeFeature","nameAndValue","itemTitle","slotCanBeEmpty","_slotCanBeEmpty","_slotIsEmpty","EditInstructions","showNotes","showMdFor","getItemForTooltip","itemFor","Target","TargetType","getItemFor","getNoteProps","Note","noteType","NoteType","getItemNote","noteRef","_containerInstance","#fetchNote","oldHeader","getItemHeader","newHeader","IsEmpty","updateItemHeader","navRelative","getState","MatDialogState","OPEN","openNote","triggerPosition","noteTriggerRef","getBoundingClientRect","noteTemplateRef","EavItem","convert","updateItemMetadata","EntityFormComponent_Conditional_8_Template","EntityFormComponent_ng_template_9_Template","EntityFormComponent_Conditional_11_Template","EntityFormComponent_Conditional_12_Template","EntityFormComponent_Conditional_13_Template","EntityFormComponent_Conditional_18_Template","CdkDragHandle","MousedownStopPropagationDirective","EntityFormSyncService","entityFormSvc","formsStateSvc","setupSync","formValid$","itemHeader$","getItemHeader$","formValid","getRawValue","previous","getItemValuesChanges","updateItemAttributesValues","FormFieldsBuilderService","adamCacheSvc","formBuilder","entityFormConfigSvc","createFields","allFields","fieldsToCreate","hasControl","fieldsForNgForm","valSpecs","newControl","addControl","keepFieldsAndStateInSync","FormFieldsSyncService","fieldsToProcess","fieldsOnForm","oldValues","newValues","patchValue","getFieldsToProcess","fieldsToProcess$","EntityFormBuilderComponent","#formStateSvc","#formulaDesignerService","#fieldsTranslateSvc","#formFieldsBuilderService","#fieldsSyncSvc","#formSyncSvc","FormulaDesignerService","itemSettingsServices","fields$","#getFieldsToProcess$","EavValuesDto","valuesToDto","eavValues","dtoValue","Dimensions","dimension","EavAttributesDto","attributesToDto","attributesDto","EavEntityDto","entityToDto","metadataDto","entitiesToDto","Owner","Version","For","entities","EavEntityBundleDto","bundleToDto","commonSpecs","unlicensedFeatures","FeaturesUsedButUnlicensedComponent","#featureDetails","FeatureDetailService","getFeatureDetails","FeaturesUsedButUnlicensedComponent_For_17_Template","FeatureDetailsDialogComponent","PublishStatusDialogComponent","EditDialogHeaderComponent_Conditional_5_Defer_0_Template","EditDialogHeaderComponent_Conditional_5_Defer_1_DepsFn","openUnlicensedDialog","EditDialogHeaderComponent","hasLanguages","showLicenseWarning","hasUnlicensedFeatures","openPublishStatusDialog","openFeaturesUsedButUnlicensedDialog","EditDialogHeaderComponent_Conditional_5_Template","EditDialogHeaderComponent_Conditional_6_Template","EditDialogHeaderComponent_Conditional_7_Template","EditDialogHeaderComponent_Conditional_16_Template","classPrevious","animationNames","FormSlideDirective","BaseDirective","language$","pairwise","previousLang","prevIndex","slide","fromEvent","an","animationName","delay","error_r1","SnackBarSaveErrorsComponent","snackBarData","MAT_SNACK_BAR_DATA","SnackBarSaveErrorsComponent_For_6_Template","fieldErrors","SnackBarUnsavedChangesComponent","snackRef","saveChanges","save","dismissWithAction","MatDialogActions","__webpack_require__","EditDialogFooterComponent","ɵ$index_18_r2","EditDialogMainComponent_Conditional_7_For_2_Template","EditDialogMainComponent_Conditional_8_ng_template_1_Template","EditDialogMainComponent_Conditional_8_ng_template_2_Template","footerShow","EditDialogMainComponent_Conditional_9_Defer_0_Template","EditDialogMainComponent_Conditional_9_Defer_1_DepsFn","EditDialogMainComponent","#prefManager","#loadIconsService","#formDataService","formulaDesignerService","UserPreferences","footerPreferences","footerSize","viewInitiated","getManySignal","formsValid","hideHeader","getHideHeaderSignal","#debugWasModified","pinned","footerShowOnceOrMore","computedWithPrev","delayForm","pref","previousState","currentState","#saveResult","#startSubscriptions","#watchKeyboardShortcuts","clearCache","forceClose","#snackBarYouHaveUnsavedChanges","formBuilderRefs","formBuilderRef","eavItem","hasAttributes","saveIfEmpty","updateItemId","err","formErrors","ValidationMsgHelper","validateForm","formError","isEscape","snackBarRef","containerInstance","snackBarConfig","EditDialogMainComponent_Conditional_7_Template","EditDialogMainComponent_Conditional_8_Template","EditDialogMainComponent_Conditional_9_Template","CdkScrollable","i16","i17","i18","i19","i20","i21","i22","ToggleDebugDirective","EditEntryComponent","editInitializerService","temp","LoggingService","EditEntryComponent_Conditional_1_Template","RouterOutlet","tab","ctrlKey","metaKey","#log","inheritingClass","logThis","logicInstance","emptyEntityField","possibleGuid","wysiwygConfig","advanced","UnknownLogic","Unknown","logics","eavFieldLogicManager","inputTypeName","MissingDefaultLangValue","calculateSharedInfoMessage","dimensions","calculateShortDimensions","calculateEditAndReadDimensions","editableDimensions","readOnlyDimensions","editableExist","readOnlyExist","dimMap","langCode","shortNoReadOnly","shortDimension","FormulaSourceCodeHelper","#cleanFormula","cleanFormula","runFormulaPrefix","findFormulaVersion","versionPart","buildFormulaFunction","Function","buildFormulaCache","updateFormulaFromEditor","createPromisedParts","getSharedParts","FormulaCacheBuilder","loggingService","#sharedPartsCache","cacheSvc","formulaCache","shared","#getSharedParts","formulaEntities","Formulas","fEntity","sourceCode","Formula","formulaFunction","cacheResults","getTitle","addLog","LogSeverities","showMessage","formulaCacheItem","isDraft","sourceCodeSaved","sourceCodeGuid","sourceCodeId","#inputTypeSpecsForCacheItem","FormulaSpecialPickerTargets","#createPromisedParts","#targetInfoForCacheItem","FormulaDefaultTargets","Validation","mdFor","user","targetEntity","for","targetType","email","Email","isAnonymous","IsAnonymous","isSiteAdmin","IsSiteAdmin","isContentAdmin","IsContentAdmin","isSystemAdmin","username","Username","app","zoneId","isGlobal","IsGlobalApp","isSite","IsSiteApp","isContent","IsContentApp","getSetting","pageId","tabId","moduleId","_noContextInHttpHeaders","_autoAppIdsInUrl","promiseSpecs","errorLabel","getAttributeOfItem","formulaListIndexAndOriginal","streams","newFormulaItem","FormulaCacheService","#cacheBuilder","#results","#findFormulas","allowDraft","forNewPicker","targets","FormulaDefaultTargetValues","FormulaNewPickerTargetValues","FormulaOptionalTargetValues","unstopped","fOrDs","updateSaved","formulaItem","sourceGuid","sourceId","newCache","resetFormula","#deleteResult","isError","isOnlyPromise","newResult","resultListIndexAndOriginal","newResults","FormulaTargetsService","getTargetOptions","targetOptions","fieldFormulas","targetOption","hasFormula","FormulaOptionalTargets","isOldValuePicker","FormulaNewPickerTargets","t","FormulaV1Helpers","buildDesignerSnippetsContext","getSnippets","fieldOptions","formulaPropsParameters","IntellisenseV2","getTypings","#inputTypeToDataType","allParameters","lower","setDesignerOpen","#targetsService","designerState","editMode","formulaResult","currentTargetOptions","entityOptions","entityFormulas","fieldsOptions","currentFormula","v1ContextSnippets","#currentItemHeader","v2JsTypings","v1DataSnippets","initAfterItemSettingsAreReady","firstFieldName","FormulaTargets","defaultFormula","defaultListItemFormula","FormulaDataObject","#propsData","#params","#valueMapper","#picker","propsData","default","#value","getDefaultOrPrefillValue","#getSelected","#getOptions","FormulaContextObject","partialApp","FormulaContextApp","FormulaContextTarget","culture","Culture","FormulaContextFeatures","FormulaContextForm","FormulaContextEntities","xp","getOfType","guidOrName","nameId","runFormulas","settingPath","isValueOrValidation","FormulaExperimentalObject","#showWarningObsolete","getValues","FormulaDeveloperHelper","formulaProps","#isDesignerOpen","#dataAndCtx","#cache","allValues","oneValue","valueMapper","v1Value","#oneValue","targetIsValue","hasDuplicateValues","ids","uniqueIds","Set","setTime","setMilliseconds","DataTypeCatalog","Hyperlink","Options","Selected","contentTypeItems","converted","ContentTypeName","getSpecsInternal","inputTypeMetadata","EavContentTypeAttribute","convertOne","ctAttributeDto","EavEntityAttributes","IsTitle","ctAttributesDto","attribute1","contentTypeDto","Scope","contentTypesDto","EavDimension","EavField","valueDto","EavValue","attributeDto","attributeName","metadataItems","copy","entityDto","entitiesDto","entityBundleDto","valuesDto","logs$","logLimit","lastSnackBarTime","snackBarDebounce","newLogs","force","nowTime","getLogs$","getLogsSignal","Log","Warn","asWithGenericSettings","SettingsGeneric","genericSettings","defSettings","AllDeprecated","moveDeprecatedSettings","DefaultCollapsed","hasEditable","hasReadonly","#getTranslationStateCore","editableElements","asDeprecated","VisibleInEditUI","FieldWriter","#updateAttribute","oldAttributes","attributeKey","newAttributes","attributeCopy","updateAttributesValues","updateValues","eavAttributes","newItemValue","DimensionReader","hasCurrent","newEavValue","updateAttributeValue","newLanguageValue","addAttributeValue","attributeValue","attributeType","addAttributeDimension","newDimensionValue","existingDimensionValue","defaultLanguage","eavValue","removeAttributeDimension","validDimensions","newAttribute","ItemUpdateHelper","saveResult","oldItem","EntityId","newItem","languageCode","relevantValues","shareWithLanguage","delayUpsert","SignalStoreObservableBase","#itemAttributesCache","#itemHeaderCache","#slotIsEmptyCache","dtoItems","getSignal","getItemAttributes$","list$","IsEmptyAllowed","copyToClipboard","str","getSelection","rangeCount","getRangeAt","execCommand","removeAllRanges","addRange","sanitizer","html","pure","getAvailableEntities","webApiEntityRoot","webApiEntityList","queryService","getEntities$","shareReplay","entitiesFilter","hasParams","urlParams","Guids","#stateManager","StateManagerLocal","fromUrl","sessionStorage","getItem","languageLabels","getLabelStored","#getUi","languageUi","getUiStored","setUi","storeKey","#partCache","local","#local","session","#session","StateManagerSession","longTerm","#getPart","created","UserPreferencesPart","userSettings","#data","asReadonly","M","#save","setAll","setMany","old","module","exports","n","u","$","g","utcOffset","w","D","ms","Q","S","O","$L","$u","$x","$offset","prototype","$d","$y","$M","$D","$W","$H","$m","$s","$ms","getMilliseconds","$utils","endOf","isAfter","isBefore","$g","unix","apply","$locale","weekStart","$set","round","subtract","invalidDate","meridiem","YY","YYYY","MM","MMM","MMMM","DD","dd","ddd","dddd","H","HH","hh","A","mm","ss","SSS","Z","toUTCString","T","extend","$i","isDayjs","en","Ls","relativeTime","future","past","yy","preparse","postformat","ordinal","formats","LT","LTS","L","LL","LLL","LLLL","require","numbers","ll","lll","llll","Y","hh2","dd2","MM2","yy2","afternoon","milliseconds","SS","Do","ZZ","parseTwoDigitYear","parser","call","getUTCMonth","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$localOffset","isUTC","_typeof","Symbol","iterator","_setPrototypeOf","setPrototypeOf","__proto__","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_getPrototypeOf","getPrototypeOf","_createForOfIteratorHelper","allowArrayLike","_unsupportedIterableToArray","minLen","_arrayLikeToArray","F","done","_e","normalCompletion","didErr","_e2","return","arr","len","arr2","_classCallCheck","Constructor","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","Emitter","_callbacks","callbacks","_len","_key","_step","_iterator","_Emitter","_inherits","subClass","superClass","_super","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","construct","sham","Proxy","Super","NewTarget","_this","previewTemplate","clickableElements","listeners","instances","elementOptions","optionsForElement","forceFallback","isBrowserSupported","acceptedMimeTypes","uploadMultiple","renameFilename","renameFile","getExistingFallback","getElements","events","withCredentials","forceChunking","chunkSize","parallelChunkUploads","retryChunks","retryChunksLimit","createImageThumbnails","thumbnailWidth","thumbnailHeight","thumbnailMethod","resizeWidth","resizeHeight","resizeMimeType","resizeQuality","resizeMethod","filesizeBase","ignoreHiddenFiles","autoProcessQueue","autoQueue","hiddenInputContainer","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictInvalidFileType","dictResponseError","dictCancelUpload","dictUploadCanceled","dictCancelUploadConfirmation","dictRemoveFile","dictRemoveFileConfirmation","dictMaxFilesExceeded","dictFileSizeUnits","tb","gb","mb","kb","xhr","chunk","dzuuid","uuid","dzchunkindex","dztotalfilesize","dzchunksize","dztotalchunkcount","totalChunkCount","dzchunkbyteoffset","accept","chunksUploaded","messageElement","_step2","_iterator2","span","getFallbackForm","resize","srcX","srcY","srcWidth","srcHeight","srcRatio","trgRatio","trgWidth","trgHeight","transformFile","resizeImage","dragstart","dragend","dragenter","dragover","dragleave","paste","addedfile","_this2","previewElement","_step3","_iterator3","_step4","_iterator4","filesize","_removeLink","_step5","removeFileEvent","UPLOADING","_iterator5","removedfile","_updateMaxFilesReachedClass","thumbnail","dataUrl","_step6","_iterator6","thumbnailElement","alt","_step7","_iterator7","errormultiple","processing","processingmultiple","uploadprogress","progress","bytesSent","_step8","_iterator8","totaluploadprogress","sending","sendingmultiple","success","successmultiple","canceled","canceledmultiple","completemultiple","maxfilesexceeded","maxfilesreached","queuecomplete","addedfiles","_thumbnailQueue","_processingThumbnail","_len2","objects","_key2","_i","_objects","accepted","getFilesWithStatus","QUEUED","ADDED","_this3","tagName","setupHiddenFileInput","hiddenFileInput","visibility","_step9","_iterator9","addFile","URL","webkitURL","_step10","_iterator10","updateTotalUploadProgress","getAddedFiles","getUploadingFiles","getQueuedFiles","noPropagation","dataTransfer","types","containsFiles","efct","effectAllowed","dropEffect","clickableElement","evt","elementInside","totalUploadProgress","totalBytesSent","totalBytes","getActiveFiles","_step11","_iterator11","total","existingFallback","fieldsString","_getParamName","getFallback","elements","_step12","_iterator12","_i2","_arr","elementListeners","_this4","removeEventListeners","cancelUpload","setupEventListeners","selectedSize","selectedUnit","unit","pow","getAcceptedFiles","webkitGetAsEntry","_addFilesFromItems","handleFiles","__guard__","clipboardData","_step13","_iterator13","_this5","_step14","_iterator14","entry","isFile","getAsFile","isDirectory","_addFilesFromDirectory","kind","directory","_this6","dirReader","createReader","errorHandler","__guardMethod__","methodName","readEntries","_step15","_iterator15","fullPath","isValidFile","_this7","uuidv4","_renameFile","_enqueueThumbnail","_errorProcessing","enqueueFile","_step16","_iterator16","_this8","processQueue","_this9","_processThumbnailQueue","_this10","createThumbnail","without","cancelIfNecessary","_step17","_iterator17","_this11","canvas","resizedDataURL","toDataURL","ExifRestore","restore","dataURL","dataURItoBlob","fixOrientation","_this12","fileReader","FileReader","onload","createThumbnailFromUrl","readAsDataURL","mockFile","imageUrl","crossOrigin","_this13","resizeThumbnail","_this14","getComputedStyle","imageOrientation","loadExif","EXIF","getData","getTag","orientation","resizeInfo","getContext","rotate","PI","drawImageIOSFix","trgX","trgY","onerror","processingLength","queuedFiles","processFiles","_step18","_iterator18","uploadFiles","_step19","groupedFiles","_getFilesWithXhr","_iterator19","CANCELED","abort","_step20","_iterator20","_len3","_key3","_this15","_transformFiles","transformedFiles","transformedFile","_transformedFile","chunks","handleNextChunk","chunkIndex","startedChunkCount","dataBlock","webkitSlice","retries","_uploadData","finishedChunkUpload","allFinished","SUCCESS","_finished","dataBlocks","_i3","_step21","_this16","XMLHttpRequest","_iterator21","resolveOption","_finishedUploading","ontimeout","_handleUploadError","onprogress","_updateFilesUploadProgress","Accept","headerName","headerValue","setRequestHeader","additionalParams","_getChunk","_step22","_iterator22","_addFormElementData","_i4","submitRequest","_this17","doneCounter","_loop","_step23","_iterator23","inputName","_step24","_iterator24","checked","_step25","_iterator25","_file2","_step26","_iterator26","_file3","allFilesFinished","_step27","_iterator27","_file4","_step28","_iterator28","_file5","readyState","responseType","responseText","getResponseHeader","send","_step29","_iterator29","_step30","_iterator30","ERROR","initClass","camelize","forElement","discover","dropzones","checkElements","_step31","_iterator31","_step32","_iterator32","blacklistedBrowsers","capableBrowser","File","FileList","Blob","_step33","_iterator33","navigator","userAgent","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","asc","charCodeAt","rejectedItem","charAt","els","_step34","_iterator34","_step35","_iterator35","question","rejected","_step36","mimeType","baseMimeType","_iterator36","validType","jQuery","each","ACCEPTED","PROCESSING","sx","sy","sw","sh","dx","dy","dw","dh","vertSquashRatio","ih","naturalHeight","drawImage","getImageData","ey","py","ratio","detectVerticalSquash","KEY_STR","chr1","chr2","chr3","enc1","enc2","enc3","enc4","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","encode64","exifArray","getExifArray","newImageArray","insertExif","seg","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","_autoDiscoverFunction","win","root","rem","pre","createEventObject","doScroll","frameElement","poll","contentLoaded","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","postMessage","IS_PAPA_WORKER","J","dynamicTypingFunction","worker","WORKERS_SUPPORTED","BLOB_URL","createObjectURL","Worker","onmessage","userStep","userChunk","userComplete","userError","workerId","download","readable","read","unparse","delimiter","BAD_DELIMITERS","quotes","newline","quoteChar","columns","escapeChar","escapeFormulae","BYTE_ORDER_MARK","NODE_STREAM_INPUT","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","E","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","prop","inputElem","instanceConfig","action","_handle","_completed","_halted","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","streamer","parseChunk","beforeFirstChunk","paused","aborted","cursor","WORKER_ID","finished","_sendError","_readChunk","_chunkLoaded","_chunkError","downloadRequestBody","downloadRequestHeaders","statusText","mozSlice","FileReaderSync","readAsText","encoding","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","k","parseFloat","RECORD_SEP","UNIT_SEP","comments","successful","bestDelimiter","delimitersToGuess","getCharIndex","P","U","N","B","fastMode","K","W","I","R","C","substr","linebreak","truncated","terminate","globalThis","sloppyModeThis","functionThis","indirectEvalThis","eval","exporter","makeExporter","hasOwn","supportsSymbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","supportsCreate","supportsProto","downLevel","HashMap","MakeDictionary","functionPrototype","_Map","CreateMapPolyfill","cacheSentinel","arraySentinel","MapIterator","_keys","_selector","throw","_cacheKey","_cacheIndex","_find","SameValueZero","getKey","getValue","getEntry","insert","_Set","CreateSetPolyfill","_map","_WeakMap","CreateWeakMapPolyfill","UUID_SIZE","rootKey","CreateUniqueKey","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","GenRandomBytes","crypto","getRandomValues","msCrypto","byte","registrySymbol","metadataRegistry","GetOrCreateMetadataRegistry","IsUndefined","IsObject","isExtensible","CreateMetadataRegistry","CreateFallbackProvider","reflect","hasOwnMetadata","getOwnMetadata","getOwnMetadataKeys","deleteMetadata","metadataOwner","isProviderFor","metadataPropertySet","OrdinaryDefineOwnMetadata","OrdinaryHasOwnMetadata","OrdinaryGetOwnMetadata","OrdinaryOwnMetadataKeys","OrdinaryDeleteMetadata","rest","targetProviderMap","registry","registerProvider","getProvider","setProvider","provider","getProviderNoCache","GetIterator","IteratorStep","IteratorValue","IteratorClose","providerMap","hasProvider","existingProvider","metadataProvider","CreateMetadataProvider","targetMetadata","MetadataKey","MetadataValue","GetOrCreateMetadataMap","metadataMap","ToBoolean","nextValue","Create","createdTargetMetadata","OrdinaryHasMetadata","OrdinaryGetPrototypeOf","IsNull","GetMetadataProvider","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","ownKeys_1","parentKeys_1","ToPrimitive","PreferredType","hint","exoticToPrim","GetMethod","OrdinaryToPrimitive","toString_1","IsCallable","toString_2","argument","ToPropertyKey","IsSymbol","ToString","IsArray","IsConstructor","V","func","iterResult","proto","prototypeProto","registeredProvider","decorate","decorators","propertyKey","DecorateConstructor","decorated","decorator","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","hasMetadata","getMetadataKeys","MatProgressSpinner_ng_template_0_Template","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","MatProgressSpinner","_defaultColor","_diameter","_forceAnimations","strokeWidth","_strokeWidth","viewBox","_strokeDashOffset","_determinateCircle","circle_r2","__WEBPACK_DEFAULT_EXPORT__","objectCreate","overArg"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/edit/assets/icons/load-icons.service.ts","./projects/eav-ui/src/app/edit/assets/icons/2sxc/Material-Icon-Adam-48-filled.svg","./projects/eav-ui/src/app/edit/assets/icons/2sxc/Material-Icon-Adam-48-outlined.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/draft-branch.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-archive.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-audio.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-code.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-excel.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-image.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-pdf.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-powerpoint.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-text.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-video.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/file-word.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/folder.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/folder-plus.svg","./projects/eav-ui/src/app/edit/assets/icons/font-awesome/sitemap.svg","./projects/eav-ui/src/app/shared/signals/computed-analyzer.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-features.model.ts","./projects/eav-ui/src/app/edit/fields/picker/picker.helpers.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-data.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-data.factory.ts","./projects/eav-ui/src/app/shared/signals/signal-equals.ts","./projects/eav-ui/src/app/edit/form/forms-state.service.ts","./projects/eav-ui/src/app/edit/shared/adam/adam-cache.service.ts","./projects/eav-ui/src/app/edit/shared/adam/link-cache.service.ts","./projects/eav-ui/src/app/edit/form/form-data.service.ts","./projects/eav-ui/src/app/edit/dialog/main/edit-dialog-main.models.ts","./projects/eav-ui/src/app/edit/form/form-publishing.service.ts","./projects/eav-ui/src/app/edit/form/edit-initializer.service.ts","./projects/eav-ui/src/app/edit/dialog/main/edit-dialog-main.helpers.ts","./projects/eav-ui/src/app/edit/formulas/formula-exec-specs.factory.ts","./projects/eav-ui/src/app/edit/state/fields-configs.model.ts","./projects/eav-ui/src/app/edit/formulas/formula-field-picker.helper.ts","./projects/eav-ui/src/app/edit/formulas/results/formula-settings.helper.ts","./projects/eav-ui/src/app/edit/formulas/formula-run-field.ts","./projects/eav-ui/src/app/edit/formulas/formula-engine.ts","./projects/eav-ui/src/app/edit/formulas/promise/formula-promise-result.model.ts","./projects/eav-ui/src/app/edit/formulas/promise/formula-promise-handler.ts","./projects/eav-ui/src/app/edit/fields/wrappers/wrappers.constants.ts","./projects/eav-ui/src/app/edit/fields/wrappers/wrapper.helper.ts","./projects/eav-ui/src/app/edit/state/fields-properties-engine-cycle.ts","./projects/eav-ui/src/app/edit/state/item-field-visibility.ts","./projects/eav-ui/src/app/edit/state/fields-settings-constants.service.ts","./projects/eav-ui/src/app/edit/shared/validation/validation.helpers.ts","./projects/eav-ui/src/app/edit/state/metadata-decorators.constants.ts","./projects/eav-ui/src/app/edit/state/fields-settings-update.helpers.ts","./projects/eav-ui/src/app/edit/state/fields-values-modified.helper.ts","./projects/eav-ui/src/app/edit/state/fields-properties-engine.ts","./projects/eav-ui/src/app/edit/state/fields-properties-updates.ts","./projects/eav-ui/src/app/edit/state/fields-settings-picker-updater.ts","./node_modules/lodash-es/transform.js","./projects/eav-ui/src/app/edit/state/fields-signals.helper.ts","./projects/eav-ui/src/app/shared/helpers/difference.ts","./projects/eav-ui/src/app/edit/state/fields-settings.service.ts","./projects/eav-ui/src/app/edit/state/field-translation-info.ts","./projects/eav-ui/src/app/edit/state/fields-translate.service.ts","./projects/eav-ui/src/app/edit/entity-form/entity-form-state.service.ts","./projects/eav-ui/src/app/features/feature-icon-indicator/feature-icon-indicator.component.html","./projects/eav-ui/src/app/features/feature-icon-indicator/feature-icon-indicator.component.ts","./projects/eav-ui/src/app/edit/localization/auto-translate-disabled-warning-dialog/auto-translate-disabled-warning-dialog.component.html","./projects/eav-ui/src/app/edit/localization/auto-translate-disabled-warning-dialog/auto-translate-disabled-warning-dialog.component.ts","./node_modules/@angular/material/fesm2022/divider.mjs","./node_modules/@angular/material/fesm2022/list.mjs","./projects/eav-ui/src/app/edit/fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.constants.ts","./projects/eav-ui/src/app/edit/fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.helpers.ts","./projects/eav-ui/src/app/shared/components/translate-helper.component.ts","./projects/eav-ui/src/app/edit/localization/snack-bar-warning-demo/snack-bar-warning-demo.component.ts","./projects/eav-ui/src/app/edit/localization/snack-bar-warning-demo/snack-bar-warning-demo.component.html","./projects/eav-ui/src/app/edit/localization/auto-translate-menu-dialog/auto-translate-menu-dialog.component.html","./projects/eav-ui/src/app/edit/localization/auto-translate-menu-dialog/auto-translate-menu-dialog.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/localization/translate-menu/translate-menu.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/localization/translate-menu/translate-menu.component.ts","./projects/eav-ui/src/app/edit/routing/edit-routing.service.ts","./projects/eav-ui/src/app/edit/fields/wrappers/localization/localization-wrapper.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/localization/localization-wrapper.component.html","./projects/eav-ui/src/app/edit/fields/field-metadata.decorator.ts","./projects/eav-ui/src/app/edit/fields/directives/change-anchor-target.directive.ts","./projects/eav-ui/src/app/edit/fields/help-text/field-help-text.component.html","./projects/eav-ui/src/app/edit/fields/help-text/field-help-text.component.ts","./projects/eav-ui/src/app/edit/fields/basic/boolean-default/boolean-base.component.ts","./projects/eav-ui/src/app/edit/fields/basic/boolean-default/boolean-default-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/boolean-default/boolean-default.component.ts","./projects/eav-ui/src/app/edit/fields/basic/boolean-default/boolean-default.component.html","./projects/eav-ui/src/app/edit/fields/basic/boolean-tristate/boolean-tristate-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/boolean-tristate/boolean-tristate.component.ts","./projects/eav-ui/src/app/edit/fields/basic/boolean-tristate/boolean-tristate.component.html","./projects/eav-ui/src/app/edit/fields/basic/custom-default/custom-default.component.ts","./projects/eav-ui/src/app/edit/fields/basic/custom-default/custom-default.component.html","./projects/eav-ui/src/app/edit/fields/basic/custom-json-editor/custom-json-editor-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/custom-json-editor/custom-json-editor.component.html","./projects/eav-ui/src/app/edit/fields/basic/custom-json-editor/custom-json-editor.component.ts","./node_modules/@angular/material/fesm2022/datepicker.mjs","./node_modules/@danielmoncada/angular-datetime-picker/fesm2022/danielmoncada-angular-datetime-picker.mjs","./node_modules/@danielmoncada/angular-datetime-picker-dayjs-adapter/fesm2022/danielmoncada-angular-datetime-picker-dayjs-adapter.mjs","./projects/eav-ui/src/app/edit/shared/date-adapters/mat-dayjs-date-adapter/mat-dayjs-date-adapter.ts","./projects/eav-ui/src/app/edit/shared/date-adapters/mat-dayjs-date-adapter/mat-dayjs-date-formats.ts","./projects/eav-ui/src/app/edit/shared/date-adapters/mat-dayjs-date-adapter/mat-dayjs-date-adapter.module.ts","./projects/eav-ui/src/app/edit/fields/basic/datetime-default/datetime-default-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/datetime-default/datetime-default.component.html","./projects/eav-ui/src/app/edit/fields/basic/datetime-default/datetime-default.component.ts","./projects/eav-ui/src/app/edit/fields/basic/empty-default/empty-default.component.ts","./projects/eav-ui/src/app/edit/fields/basic/empty-message/empty-message.component.html","./projects/eav-ui/src/app/edit/fields/basic/empty-message/empty-message.component.ts","./projects/eav-ui/src/app/edit/fields/basic/entity-content-blocks/entity-content-blocks-logic.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-helpers.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-masks-helper.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-more-fields-helper.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-base.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-entity-query-base.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-app-assets.ts","./projects/eav-ui/src/app/edit/fields/picker/models/picker-item.model.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/data-adapter-base.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/data-adapter-entity-base.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/data-adapter-app-assets.ts","./projects/eav-ui/src/app/edit/shared/services/scripts-loader.service.ts","./node_modules/lodash-es/escapeRegExp.js","./projects/eav-ui/src/app/edit/fields/picker/data-sources/css/string-font-icon-picker.helpers.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-css.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/data-adapter-css.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-empty.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/data-adapter-empty.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-entity.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/data-adapter-entity.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-query.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/data-adapter-query.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-string.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/data-adapter-string.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/state-adapter.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/state-ui-mapper-base.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/state-ui-mapper-noop.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/state-ui-mapper-number-array.ts","./projects/eav-ui/src/app/edit/fields/picker/adapters/state-ui-mapper-string-array.ts","./projects/eav-ui/src/app/edit/fields/picker/constants/picker-config-model.constants.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-data-setup.ts","./node_modules/@angular/cdk/fesm2022/tree.mjs","./node_modules/@angular/material/fesm2022/tree.mjs","./projects/eav-ui/src/app/edit/fields/picker/picker-part-base.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-item-buttons/picker-item-buttons.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-item-buttons/picker-item-buttons.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-icon-help/picker-icon-help.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-icon-help/picker-icon-help.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-icon-info/picker-icon-info.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-icon-info/picker-icon-info.component.ts","./node_modules/ngx-tippy-wrapper/fesm2020/ngx-tippy-wrapper.mjs","./projects/eav-ui/src/app/edit/fields/picker/picker-item-preview/picker-item-preview.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-item-preview/picker-item-preview.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-item-label/picker-item-label.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-item-label/picker-item-label.component.html","./projects/edit-types/src/PickerModeTree.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-tree/picker-tree-data-helper.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-tree/picker-tree-data-service.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-search/picker-search.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-search/picker-search.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-inline/picker-inline-base.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-inline/picker-inline-header.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-inline/picker-inline-header.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-checkboxes/picker-checkboxes.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-checkboxes/picker-checkboxes.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-pills/picker-pills.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-pills/picker-pills.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-radio/picker-radio.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-radio/picker-radio.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-text-toggle/picker-text-toggle.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-text-toggle/picker-text-toggle.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-text/picker-text.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-text/picker-text.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-preview/picker-preview.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-preview/picker-preview.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-list/picker-list.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-list/picker-list.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-dialog/picker-dialog.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker-dialog/picker-dialog.component.ts","./projects/eav-ui/src/app/edit/fields/picker/picker.component.html","./projects/eav-ui/src/app/edit/fields/picker/picker.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-picker/string-picker.helpers.ts","./projects/eav-ui/src/app/edit/fields/picker/data-sources/data-source-parser-csv.ts","./projects/eav-ui/src/app/edit/fields/picker/picker-logic-shared.ts","./projects/eav-ui/src/app/edit/fields/basic/entity-default/entity-default-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/entity-default/entity-default.component.ts","./projects/eav-ui/src/app/edit/fields/basic/entity-content-blocks/entity-content-blocks.component.ts","./projects/eav-ui/src/app/edit/fields/basic/entity-picker/entity-picker-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/entity-picker/entity-picker.component.ts","./projects/eav-ui/src/app/edit/fields/basic/entity-query/entity-query-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/entity-query/entity-query.component.ts","./projects/eav-ui/src/app/edit/shared/adam/adam.service.ts","./projects/eav-ui/src/app/edit/fields/connector/connector-instance.model.ts","./projects/eav-ui/src/app/edit/fields/connector/connector.helper.ts","./projects/eav-ui/src/app/edit/fields/connector/connector.component.ts","./projects/eav-ui/src/app/edit/fields/connector/connector.component.html","./projects/eav-ui/src/app/edit/fields/basic/external-web-component/custom-gps-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/external-web-component/string-wysiwyg-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/external-web-component/external-web-component.component.html","./projects/eav-ui/src/app/edit/fields/basic/external-web-component/external-web-component.component.ts","./projects/eav-ui/src/app/edit/fields/directives/paste-clipboard-image.directive.ts","./projects/eav-ui/src/app/edit/fields/basic/hyperlink-default/hyperlink-default-base.component.ts","./projects/eav-ui/src/app/edit/fields/basic/hyperlink-default/hyperlink-default-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/hyperlink-default/hyperlink-default.component.html","./projects/eav-ui/src/app/edit/fields/basic/hyperlink-default/hyperlink-default.component.ts","./projects/eav-ui/src/app/edit/fields/basic/hyperlink-library/hyperlink-library-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/hyperlink-library/hyperlink-library.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-dropdown/string-dropdown-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/number-default/number-default-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/number-default/number-default.component.ts","./projects/eav-ui/src/app/edit/fields/basic/number-default/number-default.component.html","./projects/eav-ui/src/app/edit/fields/basic/number-dropdown/number-dropdown-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/number-dropdown/number-dropdown.component.ts","./projects/eav-ui/src/app/edit/fields/basic/number-picker/number-picker-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/number-picker/number-picker.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-default/string-default-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/string-default/string-default.component.html","./projects/eav-ui/src/app/edit/fields/basic/string-default/string-default.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-dropdown-query/string-dropdown-query-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/string-dropdown-query/string-dropdown-query.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-dropdown/string-dropdown.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-font-icon-picker/string-font-icon-picker-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/string-font-icon-picker/string-font-icon-picker.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-picker/string-picker-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/string-picker/string-picker.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-template-picker/string-template-picker.constants.ts","./projects/eav-ui/src/app/edit/fields/basic/string-template-picker/string-template-picker.component.html","./projects/eav-ui/src/app/edit/fields/basic/string-template-picker/string-template-picker.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-url-path/string-url-path-logic.ts","./projects/eav-ui/src/app/edit/fields/basic/string-url-path/string-url-path.component.ts","./projects/eav-ui/src/app/edit/fields/basic/string-url-path/string-url-path.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/adam/adam-browser/adam-browser.models.ts","./projects/eav-ui/src/app/edit/fields/wrappers/adam/adam-browser/adam-browser.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/adam/adam-browser/adam-browser.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/adam/adam-browser/dropzone-helper.ts","./projects/eav-ui/src/app/edit/fields/wrappers/adam/adam-hint/adam-hint.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/adam/adam-hint/adam-hint.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/adam/adam-wrapper.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/adam/adam-wrapper.component.html","./node_modules/ngx-dropzone-wrapper/fesm2020/ngx-dropzone-wrapper.mjs","./projects/eav-ui/src/app/edit/fields/wrappers/dropzone/dropzone-wrapper.models.ts","./projects/field-string-wysiwyg/shared/wysiwyg.constants.ts","./projects/eav-ui/src/app/edit/fields/wrappers/dropzone/dropzone-wysiwyg.ts","./projects/eav-ui/src/app/edit/fields/wrappers/dropzone/dropzone-wrapper.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/dropzone/dropzone-wrapper.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/dropzone-dragging.helper.ts","./projects/eav-ui/src/app/edit/fields/wrappers/expand-dialog/content-expand.animation.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-action.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-actions-content.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-trigger-content.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.component.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.component.html","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-trigger.directive.ts","./projects/eav-ui/src/app/edit/fields/wrappers/dialog-popup/dialog-popup.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/dialog-popup/dialog-popup.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/expand-dialog/expandable-wrapper.component.ts","./projects/eav-ui/src/app/shared/helpers/viewport.helpers.ts","./projects/eav-ui/src/app/edit/fields/wrappers/expand-dialog/expandable-wrapper.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/feature-warning/feature-warning-wrapper.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/feature-warning/feature-warning-wrapper.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/group/collapsible-wrapper-logic.ts","./projects/eav-ui/src/app/edit/fields/wrappers/group/collapsible-wrapper.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/group/collapsible-wrapper.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/hidden/hidden-wrapper.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/hidden/hidden-wrapper.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/hyperlink-dialog/hyperlink-default-expandable-wrapper.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/hyperlink-dialog/hyperlink-default-expandable-wrapper.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/hyperlink-library-dialog/hyperlink-library-expandable-wrapper.component.html","./projects/eav-ui/src/app/edit/fields/wrappers/hyperlink-library-dialog/hyperlink-library-expandable-wrapper.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/picker-dialog/picker-expandable-wrapper.component.ts","./projects/eav-ui/src/app/edit/fields/wrappers/picker-dialog/picker-expandable-wrapper.component.html","./projects/eav-ui/src/app/edit/fields/input-components.constant.ts","./projects/eav-ui/src/app/edit/fields/wrappers/adam/adam-browser/adam-connector.ts","./projects/edit-types/src/BasicControlSettings.ts","./projects/eav-ui/src/app/edit/fields/builder/field-injector.service.ts","./projects/eav-ui/src/app/edit/fields/builder/fields-builder.directive.ts","./projects/eav-ui/src/app/edit/routing/edit-force-reload.service.ts","./projects/eav-ui/src/app/edit/entity-form/entity-translate-menu/entity-translate-menu.component.html","./projects/eav-ui/src/app/edit/entity-form/entity-translate-menu/entity-translate-menu.component.ts","./projects/eav-ui/src/app/edit/entity-form/entity-form-component/entity-form.component.html","./projects/eav-ui/src/app/edit/entity-form/entity-form-component/entity-form.component.ts","./projects/eav-ui/src/app/edit/entity-form/entity-form.helpers.ts","./projects/eav-ui/src/app/edit/entity-form/entity-form-sync.service.ts","./projects/eav-ui/src/app/edit/entity-form/entity-form-builder/form-fields-builder.service.ts","./projects/eav-ui/src/app/edit/entity-form/entity-form-builder/form-fields-sync.service.ts","./projects/eav-ui/src/app/edit/entity-form/entity-form-builder/form-builder.component.ts","./projects/eav-ui/src/app/edit/entity-form/entity-form-builder/form-builder.component.html","./projects/eav-ui/src/app/edit/shared/models/json-format-v1/eav-values-dto.ts","./projects/eav-ui/src/app/edit/shared/models/json-format-v1/eav-attributes-dto.ts","./projects/eav-ui/src/app/edit/shared/models/json-format-v1/eav-entity-dto.ts","./projects/eav-ui/src/app/edit/shared/models/json-format-v1/eav-entity-bundle-dto.ts","./projects/eav-ui/src/app/features/features-used-but-missing-dialog/features-used-but-unlicensed-dialog.component.html","./projects/eav-ui/src/app/features/features-used-but-missing-dialog/features-used-but-unlicensed-dialog.component.ts","./projects/eav-ui/src/app/edit/dialog/header/publish-status-dialog/publish-status-dialog.component.ts","./projects/eav-ui/src/app/edit/dialog/header/publish-status-dialog/publish-status-dialog.component.html","./projects/eav-ui/src/app/edit/dialog/header/edit-dialog-header.component.html","./projects/eav-ui/src/app/edit/dialog/header/edit-dialog-header.component.ts","./projects/eav-ui/src/app/edit/dialog/main/form-slide.directive.ts","./projects/eav-ui/src/app/edit/dialog/main/snack-bar-save-errors/snack-bar-save-errors.component.html","./projects/eav-ui/src/app/edit/dialog/main/snack-bar-save-errors/snack-bar-save-errors.component.ts","./projects/eav-ui/src/app/edit/dialog/main/snack-bar-unsaved-changes/snack-bar-unsaved-changes.component.ts","./projects/eav-ui/src/app/edit/dialog/main/snack-bar-unsaved-changes/snack-bar-unsaved-changes.component.html","./projects/eav-ui/src/app/edit/dialog/main/edit-dialog-main.component.ts","./projects/eav-ui/src/app/edit/dialog/main/edit-dialog-main.component.html","./projects/eav-ui/src/app/edit/dialog/entry/edit-entry.component.html","./projects/eav-ui/src/app/edit/dialog/entry/edit-entry.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/footer-preferences.ts","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./projects/eav-ui/src/app/edit/fields/logic/field-logic-base.ts","./projects/eav-ui/src/app/edit/fields/logic/field-logic-unknown.ts","./projects/eav-ui/src/app/edit/fields/logic/field-logic-manager.ts","./projects/eav-ui/src/app/edit/fields/wrappers/localization/translate-menu/translate-menu.helpers.ts","./projects/eav-ui/src/app/edit/formulas/cache/source-code-helper.ts","./projects/eav-ui/src/app/edit/formulas/cache/formula-cache.builder.ts","./projects/eav-ui/src/app/edit/formulas/cache/formula-cache.service.ts","./projects/eav-ui/src/app/edit/formulas/targets/formula-targets.service.ts","./projects/eav-ui/src/app/edit/formulas/designer/formula-v1-snippets.ts","./projects/eav-ui/src/app/edit/formulas/designer/intellisense-v2.ts","./projects/eav-ui/src/app/edit/formulas/designer/editor-intellisense-function-v2.rawts","./projects/eav-ui/src/app/edit/formulas/designer/formula-designer.service.ts","./projects/eav-ui/src/app/edit/formulas/formula-definitions.ts","./projects/eav-ui/src/app/edit/formulas/run/formula-run-data.ts","./projects/eav-ui/src/app/edit/formulas/run/formula-run-context.ts","./projects/eav-ui/src/app/edit/formulas/run/formula-experimental-object.ts","./projects/eav-ui/src/app/edit/formulas/formula-developer-helper.ts","./projects/eav-ui/src/app/edit/formulas/formula-run-one-helpers.factory.ts","./projects/eav-ui/src/app/edit/formulas/results/formula-value-corrections.helper.ts","./projects/eav-ui/src/app/edit/formulas/targets/formula-targets.ts","./projects/eav-ui/src/app/edit/localization/language.service.ts","./projects/eav-ui/src/app/edit/localization/translation-link.constants.ts","./projects/eav-ui/src/app/edit/shared/content-types/content-type-item.service.ts","./projects/eav-ui/src/app/edit/shared/content-types/content-type.service.ts","./projects/eav-ui/src/app/edit/shared/helpers/item.helper.ts","./projects/eav-ui/src/app/edit/shared/input-types/input-type.service.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-content-type-attribute.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-content-type.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-dimension.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-values.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-entity-attributes.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-entity.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-item.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-value.ts","./projects/eav-ui/src/app/edit/shared/services/logging.service.ts","./projects/eav-ui/src/app/edit/state/field-settings.helper.ts","./projects/eav-ui/src/app/edit/localization/field-writer.ts","./projects/eav-ui/src/app/edit/state/item-updater.helper.ts","./projects/eav-ui/src/app/edit/state/item.service.ts","./projects/eav-ui/src/app/shared/components/base.component.ts","./projects/eav-ui/src/app/shared/directives/base.directive.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./projects/eav-ui/src/app/shared/services/user-language.service.ts","./projects/eav-ui/src/app/shared/user/user-preferences.service.ts","./node_modules/dayjs/dayjs.min.js","./node_modules/dayjs/locale/ar.js","./node_modules/dayjs/locale/bg.js","./node_modules/dayjs/locale/cs.js","./node_modules/dayjs/locale/da.js","./node_modules/dayjs/locale/de-at.js","./node_modules/dayjs/locale/de-ch.js","./node_modules/dayjs/locale/de.js","./node_modules/dayjs/locale/el.js","./node_modules/dayjs/locale/en-au.js","./node_modules/dayjs/locale/en-ca.js","./node_modules/dayjs/locale/en-gb.js","./node_modules/dayjs/locale/en-ie.js","./node_modules/dayjs/locale/en.js","./node_modules/dayjs/locale/es-mx.js","./node_modules/dayjs/locale/es-us.js","./node_modules/dayjs/locale/es.js","./node_modules/dayjs/locale/fa.js","./node_modules/dayjs/locale/fi.js","./node_modules/dayjs/locale/fr-ch.js","./node_modules/dayjs/locale/fr.js","./node_modules/dayjs/locale/he.js","./node_modules/dayjs/locale/hi.js","./node_modules/dayjs/locale/hr.js","./node_modules/dayjs/locale/hu.js","./node_modules/dayjs/locale/id.js","./node_modules/dayjs/locale/it-ch.js","./node_modules/dayjs/locale/it.js","./node_modules/dayjs/locale/ja.js","./node_modules/dayjs/locale/jv.js","./node_modules/dayjs/locale/ko.js","./node_modules/dayjs/locale/lb.js","./node_modules/dayjs/locale/ms-my.js","./node_modules/dayjs/locale/ms.js","./node_modules/dayjs/locale/nl-be.js","./node_modules/dayjs/locale/nl.js","./node_modules/dayjs/locale/pa-in.js","./node_modules/dayjs/locale/pl.js","./node_modules/dayjs/locale/pt-br.js","./node_modules/dayjs/locale/pt.js","./node_modules/dayjs/locale/ru.js","./node_modules/dayjs/locale/sk.js","./node_modules/dayjs/locale/sl.js","./node_modules/dayjs/locale/sv.js","./node_modules/dayjs/locale/th.js","./node_modules/dayjs/locale/tr.js","./node_modules/dayjs/locale/uk.js","./node_modules/dayjs/locale/zh.js","./node_modules/dayjs/plugin/customParseFormat.js","./node_modules/dayjs/plugin/localeData.js","./node_modules/dayjs/plugin/localizedFormat.js","./node_modules/dayjs/plugin/utc.js","./node_modules/dropzone/dist/dropzone.js","./node_modules/papaparse/papaparse.min.js","./node_modules/reflect-metadata/Reflect.js","./node_modules/@angular/material/fesm2022/progress-spinner.mjs","./node_modules/lodash-es/_arrayEach.js","./node_modules/lodash-es/_baseCreate.js","./node_modules/lodash-es/_getPrototype.js"],"sourcesContent":["import appleFilled from '!raw-loader!./2sxc/Material-Icon-Adam-48-filled.svg';\r\nimport appleOutlined from '!raw-loader!./2sxc/Material-Icon-Adam-48-outlined.svg';\r\nimport draftBranch from '!raw-loader!./font-awesome/draft-branch.svg';\r\nimport fileArchive from '!raw-loader!./font-awesome/file-archive.svg';\r\nimport fileAudio from '!raw-loader!./font-awesome/file-audio.svg';\r\nimport fileCode from '!raw-loader!./font-awesome/file-code.svg';\r\nimport fileExcel from '!raw-loader!./font-awesome/file-excel.svg';\r\nimport fileImage from '!raw-loader!./font-awesome/file-image.svg';\r\nimport filePdf from '!raw-loader!./font-awesome/file-pdf.svg';\r\nimport filePowerpoint from '!raw-loader!./font-awesome/file-powerpoint.svg';\r\nimport fileText from '!raw-loader!./font-awesome/file-text.svg';\r\nimport fileVideo from '!raw-loader!./font-awesome/file-video.svg';\r\nimport fileWord from '!raw-loader!./font-awesome/file-word.svg';\r\nimport file from '!raw-loader!./font-awesome/file.svg';\r\nimport folderPlus from '!raw-loader!./font-awesome/folder-plus.svg';\r\nimport folder from '!raw-loader!./font-awesome/folder.svg';\r\nimport sitemap from '!raw-loader!./font-awesome/sitemap.svg';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Injectable()\r\nexport class LoadIconsService {\r\n  private icons: Record<string, string> = {\r\n    'apple-filled': appleFilled,\r\n    'apple-outlined': appleOutlined,\r\n    'draft-branch': draftBranch,\r\n    file,\r\n    'file-archive': fileArchive,\r\n    'file-audio': fileAudio,\r\n    'file-code': fileCode,\r\n    'file-excel': fileExcel,\r\n    'file-image': fileImage,\r\n    'file-pdf': filePdf,\r\n    'file-powerpoint': filePowerpoint,\r\n    'file-text': fileText,\r\n    'file-video': fileVideo,\r\n    'file-word': fileWord,\r\n    folder,\r\n    'folder-plus': folderPlus,\r\n    sitemap,\r\n  };\r\n\r\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) { }\r\n\r\n  load() {\r\n    Object.entries(this.icons).forEach(([name, svg]) => {\r\n      this.matIconRegistry.addSvgIconLiteral(name, this.domSanitizer.bypassSecurityTrustHtml(svg));\r\n    });\r\n  }\r\n}\r\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 48 48\\\">\\r\\n<style type=\\\"text/css\\\">\\r\\n\\t.st0{display:none;}\\r\\n\\t.st1{display:inline;}\\r\\n</style>\\r\\n<g id=\\\"Layer_1\\\">\\r\\n\\t<path d=\\\"M32,4c-6,0-10,4-10,10C28,14,32,10,32,4z\\\"/>\\r\\n</g>\\r\\n<g id=\\\"Layer_3\\\" class=\\\"st0\\\">\\r\\n</g>\\r\\n<g id=\\\"Icon\\\">\\r\\n\\t<path d=\\\"M32,16c-4,0-8,2.06-8,2.06S20,16,16,16c-6,0-10,4.01-10,9.47C6,34.74,12,44,18,44c2,0,4-1.85,6-1.85S28,44,30,44\\r\\n\\t\\tc6,0,12-9.26,12-18.53C42,20.01,38,16,32,16L32,16z\\\"/>\\r\\n</g>\\r\\n</svg>\\r\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 48 48\\\">\\r\\n<style type=\\\"text/css\\\">\\r\\n\\t.st0{display:none;}\\r\\n\\t.st1{display:inline;}\\r\\n</style>\\r\\n<g id=\\\"Layer_1\\\">\\r\\n\\t<path d=\\\"M32,4c-6,0-10,4-10,10C28,14,32,10,32,4z\\\"/>\\r\\n</g>\\r\\n<g id=\\\"Layer_3\\\" class=\\\"st0\\\">\\r\\n</g>\\r\\n<g id=\\\"Icon\\\">\\r\\n\\t<path d=\\\"M32,20c3.7,0,6,2.1,6,5.47C38,33.21,33.01,40,30.06,40c-0.25-0.04-0.93-0.35-1.38-0.56c-1.25-0.58-2.8-1.3-4.68-1.3\\r\\n\\t\\ts-3.43,0.72-4.68,1.3C18.87,39.65,18.19,39.97,18,40c-3.01,0-8-6.79-8-14.53C10,22.1,12.3,20,16,20c2.44,0,5.29,1.17,6.17,1.62\\r\\n\\t\\tL24,22.56l1.83-0.94C26.64,21.2,29.53,20,32,20 M32,16c-4,0-8,2.06-8,2.06S20,16,16,16c-6,0-10,4.01-10,9.47C6,34.74,12,44,18,44\\r\\n\\t\\tc2,0,4-1.85,6-1.85S28,44,30,44c6,0,12-9.26,12-18.53C42,20.01,38,16,32,16L32,16z\\\"/>\\r\\n</g>\\r\\n</svg>\\r\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 39.2 28.2 71.8 65.5 78.7-.8 17.2-5 30.4-12.7 40-17.5 21.8-53.1 25.2-90.7 28.7-28.2 2.6-57.4 5.4-80.4 16.9-3.4 1.7-6.7 3.6-9.7 5.7V158.4c36.5-7.4 64-39.7 64-78.4 0-44.2-35.8-80-80-80S0 35.8 0 80c0 38.7 27.5 71 64 78.4v195.2C27.5 361 0 393.3 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-36.9-24.9-67.9-58.9-77.2 5-9.6 12.3-14.6 19-18 17.5-8.8 42.5-11.2 68.9-13.7 42.6-4 86.7-8.1 112.7-40.5 12.4-15.5 19-35.5 19.8-60.7C357.3 214 384 182.1 384 144zM32 80c0-26.5 21.5-48 48-48s48 21.5 48 48-21.5 48-48 48-48-21.5-48-48zm96 352c0 26.5-21.5 48-48 48s-48-21.5-48-48c0-26.4 21.4-47.9 47.8-48h.6c26.3.2 47.6 21.7 47.6 48zm187.8-241.5L304 192c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48c0 22.4-15.4 41.2-36.2 46.5z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M128 96v32h32V96zm65.9 169.6c-1.1-5.6-6-9.6-11.8-9.6H160v-32h-32v32l-19.4 97.2c-6.5 32.5 18.3 62.8 51.4 62.8s57.9-30.3 51.4-62.8zm-33.6 124.5c-17.9 0-32.4-12.1-32.4-27s14.5-27 32.4-27 32.4 12.1 32.4 27-14.5 27-32.4 27zM128 160v32h32v-32zm64-96h-32v32h32zm177.9 33.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 32.5c2.8.7 5.4 2.1 7.4 4.2l83.9 83.9c2 2 3.5 4.6 4.2 7.4H256zM352 464c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h79.7v32h32V32H224v104c0 13.3 10.7 24 24 24h104zM192 192h-32v32h32zm0-64h-32v32h32z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-77.6-66.6c38.5-26 61.6-69.3 61.6-115.7 0-24.7-6.5-48.9-18.9-70.1-12-20.6-29.1-37.8-49.6-50-7.1-4.2-16.3-1.9-20.6 5.2-4.2 7.1-1.9 16.3 5.2 20.6 33.1 19.7 53.7 55.8 53.7 94.3 0 36.5-18.1 70.4-48.3 90.9-6.9 4.6-8.7 14-4 20.8 2.9 4.3 7.6 6.6 12.4 6.6 3.1 0 6-.8 8.5-2.6zm-26.6-38.3c26-17.3 41.5-46.2 41.5-77.4 0-32.9-17.7-63.7-46.2-80.3-7.2-4.2-16.3-1.7-20.5 5.4-4.2 7.2-1.7 16.3 5.4 20.5 19.3 11.2 31.3 32 31.3 54.3 0 21.1-10.5 40.7-28.1 52.4-6.9 4.6-8.8 13.9-4.2 20.8 2.9 4.4 7.7 6.7 12.5 6.7 2.8.1 5.7-.7 8.3-2.4zm-27-38.2c13.7-8.5 21.8-23.1 21.8-39.2 0-17-9.3-32.5-24.2-40.6-7.3-3.9-16.4-1.2-20.3 6.1-3.9 7.3-1.2 16.4 6.1 20.3 5.2 2.8 8.5 8.3 8.5 14.2 0 5.6-2.9 10.8-7.6 13.7-7 4.4-9.2 13.6-4.8 20.7 2.8 4.6 7.7 7.1 12.8 7.1 2.5 0 5.2-.7 7.7-2.3zM138 266.7v74.7L112 322H94v-36h18l26-19.3m17.9-50.7c-2.9 0-6 1.1-8.4 3.5L104 256H76c-6.6 0-12 5.4-12 12v72c0 6.6 5.4 12 12 12h28l43.5 36.5c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V228c0-7.2-5.9-12-12.1-12z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zm-22.627 22.628a15.89 15.89 0 0 1 4.195 7.431H256V32.491a15.88 15.88 0 0 1 7.431 4.195l83.883 83.883zM336 480H48c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16h176v104c0 13.255 10.745 24 24 24h104v304c0 8.837-7.163 16-16 16zm-161.471-67.404l-25.928-7.527a5.1 5.1 0 0 1-3.476-6.32l58.027-199.869a5.1 5.1 0 0 1 6.32-3.476l25.927 7.527a5.1 5.1 0 0 1 3.476 6.32L180.849 409.12a5.1 5.1 0 0 1-6.32 3.476zm-48.446-47.674l18.492-19.724a5.101 5.101 0 0 0-.351-7.317L105.725 304l38.498-33.881a5.1 5.1 0 0 0 .351-7.317l-18.492-19.724a5.1 5.1 0 0 0-7.209-.233L57.61 300.279a5.1 5.1 0 0 0 0 7.441l61.263 57.434a5.1 5.1 0 0 0 7.21-.232zm139.043.232l61.262-57.434a5.1 5.1 0 0 0 0-7.441l-61.262-57.434a5.1 5.1 0 0 0-7.209.233l-18.492 19.724a5.101 5.101 0 0 0 .351 7.317L278.275 304l-38.499 33.881a5.1 5.1 0 0 0-.351 7.317l18.492 19.724a5.1 5.1 0 0 0 7.209.232z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zM211.7 308l50.5-81.8c4.8-8-.9-18.2-10.3-18.2h-4.1c-4.1 0-7.9 2.1-10.1 5.5-31 48.5-36.4 53.5-45.7 74.5-17.2-32.2-8.4-16-45.8-74.5-2.2-3.4-6-5.5-10.1-5.5H132c-9.4 0-15.1 10.3-10.2 18.2L173 308l-59.1 89.5c-5.1 8 .6 18.5 10.1 18.5h3.5c4.1 0 7.9-2.1 10.1-5.5 37.2-58 45.3-62.5 54.4-82.5 31.5 56.7 44.3 67.2 54.4 82.6 2.2 3.4 6 5.4 10 5.4h3.6c9.5 0 15.2-10.4 10.1-18.4L211.7 308z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M159 336l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0l-39 39L63 448h256V304l-55.5-55.5c-4.7-4.7-12.3-4.7-17 0L159 336zm96-50.7l32 32V416H95.1l.3-67.2 15.6-15.6 48 48c20.3-20.3 77.7-77.6 96-95.9zM127 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm0-96c17.6 0 32 14.4 32 32s-14.4 32-32 32-32-14.4-32-32 14.4-32 32-32zm242.9-62.1L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5zM352 464c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-22-171.2c-13.5-13.3-55-9.2-73.7-6.7-21.2-12.8-35.2-30.4-45.1-56.6 4.3-18 12-47.2 6.4-64.9-4.4-28.1-39.7-24.7-44.6-6.8-5 18.3-.3 44.4 8.4 77.8-11.9 28.4-29.7 66.9-42.1 88.6-20.8 10.7-54.1 29.3-58.8 52.4-3.5 16.8 22.9 39.4 53.1 6.4 9.1-9.9 19.3-24.8 31.3-45.5 26.7-8.8 56.1-19.8 82-24 21.9 12 47.6 19.9 64.6 19.9 27.7.1 28.9-30.2 18.5-40.6zm-229.2 89c5.9-15.9 28.6-34.4 35.5-40.8-22.1 35.3-35.5 41.5-35.5 40.8zM180 175.5c8.7 0 7.8 37.5 2.1 47.6-5.2-16.3-5-47.6-2.1-47.6zm-28.4 159.3c11.3-19.8 21-43.2 28.8-63.7 9.7 17.7 22.1 31.7 35.1 41.5-24.3 4.7-45.4 15.1-63.9 22.2zm153.4-5.9s-5.8 7-43.5-9.1c41-3 47.7 6.4 43.5 9.1z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zM204.3 208H140c-6.6 0-12 5.4-12 12v184c0 6.6 5.4 12 12 12h8c6.6 0 12-5.4 12-12v-60.4h44.3c38.7 0 67.7-27.3 67.7-69 0-38.6-23.8-66.6-67.7-66.6zm26 97.7c-7.5 7.6-17.8 11.4-31 11.4H160V233h39.7c12.9 0 23.1 3.7 30.6 11.1 15.3 15.1 15 46.5 0 61.6z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-48-244v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm0 64v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm0 64v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M224 280.593C224 267.01 212.989 256 199.407 256H88.593C75.011 256 64 267.01 64 280.593v110.815C64 404.99 75.011 416 88.593 416h110.814C212.989 416 224 404.99 224 391.407V381l27.971 27.971a23.998 23.998 0 0 0 16.97 7.029H296c13.255 0 24-10.745 24-24V280c0-13.255-10.745-24-24-24h-27.059a24.003 24.003 0 0 0-16.97 7.029L224 291v-10.407zM192 384H96v-96h96v96zm80.255-96H288v96h-15.745L224 342.826v-13.652L272.255 288zm97.686-190.059l-83.883-83.882A47.996 47.996 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM256 32.491a15.888 15.888 0 0 1 7.432 4.195l83.882 83.882a15.882 15.882 0 0 1 4.195 7.431H256V32.491zM352 464c0 8.837-7.164 16-16 16H48c-8.836 0-16-7.163-16-16V48c0-8.837 7.164-16 16-16h176v104c0 13.255 10.745 24 24 24h104v304z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-53.6-246.5c-6.8 32.8-32.5 139.7-33.4 150.3-5.8-29.1-.7 1.6-41.8-150.9-1.4-5.2-6.2-8.9-11.6-8.9h-6.4c-5.4 0-10.2 3.6-11.6 8.9-38.3 142.3-37.4 140.6-39.4 154.7-4.1-23.9 2.1-2.9-34.4-154.4-1.3-5.4-6.1-9.2-11.7-9.2h-7.2c-7.8 0-13.5 7.3-11.6 14.9 9.5 38 34.5 137.4 42.2 168 1.3 5.3 6.1 9.1 11.6 9.1h17c5.4 0 10.2-3.7 11.6-8.9 34.2-127.7 33.5-123.4 36.7-142.9 6.5 31.1.2 7 36.7 142.9 1.4 5.2 6.2 8.9 11.6 8.9h14c5.5 0 13.7-3.7 15.1-9l42.8-168c1.9-7.6-3.8-15-11.6-15h-6.8c-5.7 0-10.6 4-11.8 9.5z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M194.74 96l54.63 54.63c6 6 14.14 9.37 22.63 9.37h192c8.84 0 16 7.16 16 16v224c0 8.84-7.16 16-16 16H48c-8.84 0-16-7.16-16-16V112c0-8.84 7.16-16 16-16h146.74M48 64C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48H272l-54.63-54.63c-6-6-14.14-9.37-22.63-9.37H48z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M344 272h-72v-72c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v72h-72c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h72v72c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-72h72c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zM194.74 96l54.63 54.63c6 6 14.14 9.37 22.63 9.37h192c8.84 0 16 7.16 16 16v224c0 8.84-7.16 16-16 16H48c-8.84 0-16-7.16-16-16V112c0-8.84 7.16-16 16-16h146.74M48 64C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48H272l-54.63-54.63c-6-6-14.14-9.37-22.63-9.37H48z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><path d=\\\"M608 352h-32v-97.59c0-16.77-13.62-30.41-30.41-30.41H336v-64h48c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H256c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h48v64H94.41C77.62 224 64 237.64 64 254.41V352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32H96v-96h208v96h-32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32h-32v-96h208v96h-32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm-480 32v96H32v-96h96zm240 0v96h-96v-96h96zM256 128V32h128v96H256zm352 352h-96v-96h96v96z\\\"/></svg>\";","import { Signal } from '@angular/core';\r\nimport { Reactive, ReactiveNode, SIGNAL } from '@angular/core/primitives/signals';\r\n\r\nexport class ComputedAnalyzer<T> {\r\n  constructor(private computed: Signal<T>) {\r\n  }\r\n\r\n  getConsumerNode() {\r\n    const forDebug = this.computed as Reactive;\r\n    const node = forDebug[SIGNAL] as ConsumerNode;\r\n    return node;\r\n  }\r\n\r\n  getProducers() {\r\n    const producers = this.getConsumerNode().producerNode;\r\n    return producers;\r\n  }\r\n\r\n  getDirtyProducers() {\r\n    const node = this.getConsumerNode();\r\n    const producers = node.producerNode;\r\n    return producers;\r\n  }\r\n\r\n  snapShotProducers(onlyDirty: boolean = false) {\r\n    return this.#getSubInfosOf(this.getConsumerNode(), onlyDirty);\r\n  }\r\n\r\n  #getSubInfosOf(producer: ReactiveNode, filterDirty: boolean) {\r\n    return this.#getSubProducers(producer.producerNode, producer.producerLastReadVersion, filterDirty);\r\n  }\r\n\r\n\r\n  #getSubProducers(subProducers: ReactiveNode[], producerVersions: number[], filterDirty: boolean): ProducerState[] {\r\n    if (!subProducers) return [];\r\n\r\n    let subInfos = subProducers\r\n      .map((producer, idx) => {\r\n        const dirtyPrd = producer.dirty;\r\n        const verOwn = producerVersions[idx];\r\n        const verPrd = producer.version;\r\n        const dirtyVer = verOwn < verPrd;\r\n        const subInfos = this.#getSubInfosOf(producer, filterDirty);\r\n        const dirtySub = subInfos.some(d => d.dirty);\r\n        const dirty = dirtyPrd || dirtyVer || dirtySub;\r\n        const dirtyDepth = subInfos.find(d => d.dirty)?.dirtyDepth + 1 || (dirty ? 1 : 0);\r\n        return {\r\n          name: (producer as any)?.debugName || 'unknown',\r\n          idx,\r\n          dirty,\r\n          dirtyDepth,\r\n          dirtyPrd,\r\n          dirtyVer,\r\n          dirtySub,\r\n          verOwn,\r\n          verPrd,\r\n          producer,\r\n          subInfos,\r\n        } as ProducerState;\r\n      });\r\n\r\n    if (filterDirty)\r\n      subInfos = subInfos.filter(d => d.dirty);\r\n    return subInfos;\r\n  }\r\n}\r\n\r\ninterface ProducerState {\r\n  idx: number;\r\n  name: string;\r\n  dirty: boolean;\r\n  dirtyDepth: number;\r\n  dirtyVer: boolean;\r\n  dirtyPrd: boolean;\r\n  dirtySub: boolean;\r\n  verOwn: number;\r\n  verPrd: number;\r\n  producer: ReactiveNode;\r\n  subInfos: ProducerState[];\r\n}\r\n\r\n// interface ProducerSnapshot {\r\n//   idx: number;\r\n//   name: string;\r\n//   ver: number;\r\n//   val: unknown;\r\n//   dirty: boolean;\r\n//   dirtyPrd: boolean;\r\n//   dirtySub: boolean;\r\n//   subInfos: ProducerState[];\r\n//   producer: ReactiveNode;\r\n// }\r\n\r\n// https://github.com/angular/angular/blob/main/packages/core/primitives/signals/src/graph.ts#L184C1-L188C2\r\ninterface ConsumerNode extends ReactiveNode {\r\n  producerNode: NonNullable<ReactiveNode['producerNode']>;\r\n  producerIndexOfThis: NonNullable<ReactiveNode['producerIndexOfThis']>;\r\n  producerLastReadVersion: NonNullable<ReactiveNode['producerLastReadVersion']>;\r\n}","/**\r\n * Picker features of a single item.\r\n */\r\nexport interface PickerFeaturesItem {\r\n  /** Item level: provide the edit button */\r\n  edit: boolean;\r\n  /** Item level: provide the remove button */\r\n  remove: boolean;\r\n  /** Item level: provide the delete button */\r\n  delete: boolean;\r\n}\r\n\r\n/**\r\n * Picker Features allow a source, state or control to determine what features are available for a picker.\r\n *\r\n * The idea is that by default, these things should be truish, and then the source, state or control can\r\n * declare that it's not allowed.\r\n *\r\n * In the end the features should be merged into one object, and the picker should be able to determine\r\n * what buttons etc. to show.\r\n */\r\nexport interface PickerFeatures extends PickerFeaturesItem {\r\n  /** Control level: provide the create button */\r\n  create: boolean;\r\n  /** Control level: provide the text entry */\r\n  textEntry: boolean;\r\n  /** Control level: provide the multi-value picker */\r\n  multiValue: boolean;\r\n}\r\n\r\nexport interface PickerFeaturesForControl extends PickerFeatures {\r\n  /**\r\n   * Determines if the control should also show the \"Go to List\" button.\r\n   * This depends on multi-select and in future also on the sortability of the list.\r\n   */\r\n  showGoToListDialogButton: boolean;\r\n\r\n  /**\r\n   * Determines if the control should also show the \"Add New\" button.\r\n   * This depends on the setting to create new items + the availability of the create-names.\r\n   */\r\n  showAddNewButton: boolean;\r\n}\r\n\r\nfunction fill(data: Partial<PickerFeatures>, fallback: boolean): PickerFeatures {\r\n  return {\r\n    create: data.create ?? fallback,\r\n    textEntry: data.textEntry ?? fallback,\r\n    multiValue: data.multiValue ?? fallback,\r\n\r\n    edit: data.edit ?? fallback,\r\n    remove: data.remove ?? fallback,\r\n    delete: data.delete ?? fallback,\r\n  };\r\n}\r\n\r\nexport function mergePickerFeatures(first: Partial<PickerFeatures>, second: Partial<PickerFeatures>): PickerFeatures {\r\n  first = fill(first, true);\r\n  second = fill(second, true);\r\n  return {\r\n    create: first.create && second.create,\r\n    textEntry: first.textEntry && second.textEntry,\r\n    multiValue: first.multiValue && second.multiValue,\r\n\r\n    edit: first.edit && second.edit,\r\n    remove: first.remove && second.remove,\r\n    delete: first.delete && second.delete,\r\n  };\r\n}","import groupBy from 'lodash-es/groupBy';\r\nimport { guidRegex } from '../../../shared/constants/guid.constants';\r\nimport { PickerItem } from './models/picker-item.model';\r\n\r\nexport function pickerItemsAllowsEmpty(dropdownOptions?: PickerItem[]): boolean {\r\n  return dropdownOptions?.some(o => o.value == '');\r\n}\r\n\r\n/** Convert string value in string array if a value is type string */\r\nexport function convertValueToArray(value: string | string[], separator: string, emptyIsValid: boolean): string[] {\r\n  // Special case: String-picker old with \"empty\" being selected\r\n  // In most dropdowns, empty would mean not-selected, but in string-dropdowns, it _can_ be a valid value\r\n  // So we must check if there is an empty value in the dropdown options\r\n  // And if this is true, return an array with an empty string being \"selected\"\r\n  if (value == '' && emptyIsValid)\r\n    return [''];\r\n\r\n  if (value == '' || !value)\r\n    return [];\r\n\r\n  return (Array.isArray(value))\r\n    ? value\r\n    : value.split(separator);\r\n}\r\n\r\n/** Convert string array value in string value if a value is type array */\r\nexport function convertArrayToString(value: string | string[], separator: string): string {\r\n  if (!value)\r\n    return '';\r\n  if (Array.isArray(value))\r\n    return value.join(separator);\r\n  return value;\r\n}\r\n\r\nexport function filterGuids(entityName: string, fieldName: string, guids: string[]): string[] {\r\n  if (guids == null) return;\r\n\r\n  const grouped = groupBy(guids, guid => guidRegex().test(guid) ? 'valid' : 'invalid');\r\n\r\n  // const validGuids: string[] = [];\r\n  // const invalidGuids: string[] = [];\r\n  // for (const guid of guids) {\r\n  //   if (guidRegex().test(guid)) {\r\n  //     validGuids.push(guid);\r\n  //   } else {\r\n  //     invalidGuids.push(guid);\r\n  //   }\r\n  // }\r\n\r\n  if (grouped.invalid) // invalidGuids.length > 0)\r\n    console.error(`Found invalid guids in Entity: \"${entityName}\", Field: \"${fieldName}\"`, grouped.invalid); // invalidGuids);\r\n\r\n  return grouped.valid ?? []; // validGuids;\r\n}\r\n","import { effect, inject, Injectable, Signal } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { getWith } from '../../../../../../core';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsPickerMerged } from '../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { computedObj, signalObj } from '../../../shared/signals/signal.utilities';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { DataAdapterBase } from './adapters/data-adapter-base';\r\nimport { StateAdapter } from \"./adapters/state-adapter\";\r\nimport { PickerItem } from './models/picker-item.model';\r\nimport { mergePickerFeatures, PickerFeatures, PickerFeaturesForControl } from './picker-features.model';\r\nimport { pickerItemsAllowsEmpty } from './picker.helpers';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  setup: false,\r\n  addInfosFromSourceForUi: false,\r\n  optionsWithMissing: false,\r\n  selectedRaw: false,\r\n  selectedOverride: false,\r\n  selectedState: false,\r\n  features: false,\r\n  allOptions: true,\r\n  fields: [...DebugFields, '*'],\r\n}\r\n\r\n/**\r\n * Manages the data for the picker component.\r\n * This is quite complex, because there are many combinations of where the configuration and data can come from,\r\n * as well as how the resulting values should be processed.\r\n */\r\n@Injectable()\r\nexport class PickerData {\r\n\r\n  //#region Constructor, Log, Services, Setup\r\n  \r\n  log = classLog({PickerData}, logSpecs);\r\n\r\n  #translate = inject(TranslateService);\r\n\r\n  name: string;\r\n\r\n  constructor() {\r\n    if (this.log.enabled && this.log.specs.allOptions) {\r\n      effect(() => {\r\n        const ready = this.ready();\r\n        const raw = this.optionsRaw();\r\n        const override = this.optionsOverride();\r\n        const final = this.optionsAll();\r\n        this.log.a('options', { ready, raw, override, final });\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Setup to load initial values and initialize the state */\r\n  public setup(name: string, settings: Signal<FieldSettings>, state: StateAdapter, source: DataAdapterBase) {\r\n    const l = this.log.fnIfInList('setup', 'fields', name, { name, state, source });\r\n\r\n    // Setup this object\r\n    this.name = name;\r\n    this.#settingsLazy.set(settings as Signal<FieldSettings & FieldSettingsPickerMerged>);\r\n    this.state = state;\r\n    this.source = source;\r\n\r\n    // Setup the State so it is able to do it's work based on data it wouldn't have otherwise\r\n    state.features = this.features;\r\n    state.allowsEmptyLazy.set(this.optionsAllowsEmpty);\r\n\r\n    // 1. Init Prefetch - for Entity Picker\r\n    // This will place the prefetch items into the available-items list\r\n    // Otherwise related entities would only show as GUIDs.\r\n    const values = state.values();\r\n    l.a('setup', { initiallySelected: values })\r\n    source.initPrefetch(values);\r\n\r\n    // When everything is done, mark as ready\r\n    this.ready.set(true);\r\n\r\n    l.end('done');\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Adapters\r\n\r\n  /**\r\n   * The data for the list / options to show.\r\n   * Populated at Setup.\r\n   */\r\n  public source: DataAdapterBase;\r\n\r\n  /**\r\n   * The state containing the currently selected data in the correct object structure\r\n   * Populated at Setup.\r\n  */\r\n  public state: StateAdapter;\r\n\r\n  //#endregion\r\n\r\n  public closeWatcherAttachedWIP = false;\r\n\r\n  //#region Possible Options to provide\r\n\r\n  /**\r\n   * Inform the system that the sources are ready.\r\n   * WIP experimenting with making it public, so that formulas can delay running dependant function.\r\n   */\r\n  public ready = signalObj('sourceIsReady', false);\r\n\r\n  /** Options to show in the picker. Can also show hints if something is wrong. Must be initialized at setup */\r\n  public optionsRaw = computedObj('optionsSource', () => (this.ready() ? this.source.optionsOrHints() : null) ?? []);\r\n  \r\n  /** Overrides / replacements from formulas */\r\n  public optionsOverride = signalObj<PickerItem[]>('overrideOptions', null);\r\n\r\n  /** Final Options to show in the picker and to use to calculate labels of selected etc. */\r\n  public optionsAll = computedObj('optionsFinal', () => getWith(this.optionsOverride(), o => o ? o : this.optionsRaw()));\r\n\r\n  /** Special information for string pickers which allow empty to be valid selection - also used in validator */\r\n  public optionsAllowsEmpty = computedObj('optionsAllowsEmpty', () => pickerItemsAllowsEmpty(this.optionsAll()));\r\n\r\n  //#endregion\r\n\r\n  //#region Selected Data\r\n\r\n  /** Currently selected items. Must watch for ready. */\r\n  public selectedRaw = computedObj<PickerItem[]>('selectedState', () => {\r\n    const l = this.log.fnIfInList('selectedRaw', 'fields', this.name);\r\n    return !this.ready()\r\n      ? l.r([], 'not ready')\r\n      : l.r(this.#toSelectedWithUiInfo(this.state.selectedItems(), this.optionsAll()), 'ready');\r\n  });\r\n\r\n  /** Overrides / replacements from formulas */\r\n  public selectedOverride = signalObj<PickerItem[]>('selectedOverride', null);\r\n\r\n  /** Currently selected items from override or raw */\r\n  public selectedAll = computedObj('selectedAll', () => getWith(this.selectedOverride(), o => o ? o : this.selectedRaw()));\r\n\r\n  /** First selected item or null */\r\n  public selectedOne = computedObj('selectedOne', () => this.selectedAll()[0] ?? null);\r\n\r\n  /** Create a copy of the selected items, so that any changes (in formulas) won't affect the real selected data */\r\n  public selectedCopy(original: PickerItem[]): PickerItem[] {\r\n    return original.map(item => ({ ...item }));\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Options containing missing selected\r\n\r\n  public optionsWithMissing = computedObj('optionsWithMissing', () => {\r\n    const l = this.log.fnIf('optionsWithMissing');\r\n    const selected = this.selectedAll();\r\n    const options = this.optionsAll();\r\n    const missing = selected.filter(s => !options.find(o => o.value === s.value));\r\n    if (missing.length === 0) return options;\r\n\r\n    const result = options.concat(missing);\r\n    return l.r(result);\r\n  });\r\n\r\n  //#endregion\r\n\r\n  #settingsLazy = signalObj<Signal<FieldSettings & FieldSettingsPickerMerged>>('settingsLazy', null);\r\n\r\n  #featuresFromSettings = computedObj('featuresFromSettings', () => {\r\n    const s = this.#settingsLazy()();\r\n    return {\r\n      textEntry: s.EnableTextEntry,\r\n      multiValue: s.AllowMultiValue,\r\n      create: s.EnableCreate && !!s.CreateTypes,\r\n      remove: s.EnableRemove,\r\n      delete: s.EnableDelete,\r\n    } satisfies Partial<PickerFeatures>;\r\n  });\r\n\r\n  /** Signal containing the features of the picker, basically to accumulate features such as \"canEdit\" */\r\n  public features = computedObj<PickerFeaturesForControl>('features', () => {\r\n    const mergeSourceAndState = mergePickerFeatures(this.source.myFeatures(), this.state.myFeatures());\r\n    const mergeSettings = mergePickerFeatures(mergeSourceAndState, this.#featuresFromSettings());\r\n    const forControl = {\r\n      ...mergeSettings,\r\n      showGoToListDialogButton: mergeSettings.multiValue,\r\n      showAddNewButton: mergeSettings.create,\r\n    } satisfies PickerFeaturesForControl;\r\n    return forControl;\r\n  });\r\n\r\n  public addNewlyCreatedItem(result: Record<string, number>) {\r\n    const newItemGuid = Object.keys(result)[0];\r\n    const l = this.log.fn('addNewlyCreatedItem', { result, newItemGuid });\r\n    if (!this.state.values().includes(newItemGuid)) {\r\n      this.state.add(newItemGuid);\r\n      this.source.forceReloadData([newItemGuid]);\r\n    }\r\n    l.end();\r\n  }\r\n\r\n  #toSelectedWithUiInfo(selected: string[], opts: PickerItem[]): PickerItem[] {\r\n    const l = this.log.fnIfInList('addInfosFromSourceForUi', 'fields', this.name, { selected, opts });\r\n    const result = selected.map(item => {\r\n      // If the selected item is not in the data, show the raw / original item\r\n      const original = opts.find(e => e.value === item);\r\n      return original\r\n        // Since we seem to have more information from the source, use that\r\n        ? createPickerItemFromItem(original, original.label ?? this.#translate.instant('Fields.Picker.EntityNotFound'))\r\n        // If it's not in the data, just show the value\r\n        : createPickerItemFromValue(item);\r\n    });\r\n    return l.r(result);\r\n  }\r\n\r\n  //#region Text Mode\r\n\r\n  public isInFreeTextMode = signalObj('isInFreeTextMode', false);\r\n\r\n  toggleFreeTextMode(): void {\r\n    this.isInFreeTextMode.update(p => !p);\r\n  }\r\n\r\n  //#endregion\r\n}\r\n\r\n//#region Helper Functions for PickerItem\r\n\r\nfunction createPickerItemFromValue(value: string): PickerItem {\r\n  value = value?.toString() ?? '';  // safe to-string, so it's never 'undefined'\r\n  return {\r\n    // Special: if e.g. string with free text value which is not found, disable edit and delete.\r\n    // Otherwise we may see an edit-pencil for a value that is not in the dropdown (eg. a system query)\r\n    noEdit: true,\r\n    noDelete: true,\r\n    // either the real value or null if text-field or not found\r\n    id: null,\r\n    label: value,\r\n    tooltip: `${value} (manual entry)`,\r\n    value,\r\n  } satisfies PickerItem;\r\n}\r\n\r\nfunction createPickerItemFromItem(original: PickerItem, label: string) {\r\n  return {\r\n    id: original.id,\r\n    value: original.value,\r\n    label,\r\n    tooltip: original.tooltip || `${label} (${original.value})`,\r\n    info: original.info || null,\r\n    link: original.link || null,\r\n    noEdit: original.noEdit === true,\r\n    noDelete: original.noDelete === true,\r\n    noSelect: false,\r\n  } satisfies PickerItem;\r\n}\r\n\r\n//#endregion","import { Injectable, Injector } from '@angular/core';\r\nimport { transient } from '../../../../../../core';\r\nimport { InputTypeHelpers } from '../../../shared/fields/input-type-helpers';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { InputTypeSpecs } from '../../shared/input-types/input-type-specs.model';\r\nimport { InputTypeService } from '../../shared/input-types/input-type.service';\r\nimport { EavContentTypeAttribute } from '../../shared/models/eav';\r\nimport { PickerData } from './picker-data';\r\n\r\n/**\r\n * Factory for **creating** PickerData instances.\r\n * It will not set them up yet, because for that it needs the FieldState\r\n * which is not available at this time.\r\n */\r\n@Injectable()\r\nexport class PickerDataFactory {\r\n\r\n  log = classLog({PickerDataFactory});\r\n\r\n  constructor(private injector: Injector, private inputTypeSvc: InputTypeService) { }\r\n\r\n  createPickersForAttributes(attributes: EavContentTypeAttribute[]): Record<string, PickerData> {\r\n    const fields = attributes.map(a => ({ name: a.Name, inputType: this.inputTypeSvc.getSpecs(a)}));\r\n    return this.#createPickersData(fields);\r\n  }\r\n\r\n\r\n  #createPickersData(fields: { name: string, inputType: InputTypeSpecs}[]): Record<string, PickerData> {\r\n    const array = fields\r\n      .map(it => ({ name: it.name, picker: this.#createOne(it.inputType)}))\r\n      .filter(it => it.picker !== null);\r\n\r\n    return array.reduce((acc, it) => {\r\n      acc[it.name] = it.picker;\r\n      return acc;\r\n    }, {} as Record<string, PickerData>);\r\n  }\r\n\r\n  #createOne(inputType: InputTypeSpecs): PickerData {\r\n    return (InputTypeHelpers.isAnyPicker(inputType.inputType))\r\n      ? transient(PickerData, this.injector)\r\n      : null;\r\n  }\r\n};\r\n","import { CreateComputedOptions } from '@angular/core';\r\nimport { RxHelpers } from '../rxJs/rx.helpers';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\nexport class SignalEquals {\r\n  /** Options for number signal to ensure equality only on value difference */\r\n  static bool: CreateComputedOptions<boolean> = {\r\n    equal: RxHelpers.valueEquals<boolean>\r\n  };\r\n\r\n  /** Options for string signal to ensure equality only on value difference */\r\n  static number: CreateComputedOptions<number> = {\r\n    equal: RxHelpers.valueEquals<number>\r\n  };\r\n\r\n  /** Options for string signal to ensure equality only on value difference */\r\n  static string: CreateComputedOptions<string> = {\r\n    equal: RxHelpers.valueEquals<string>\r\n  };\r\n\r\n  // note: this doesn't work as expected; leaving in so nobody tries to repeat this\r\n  // /** Options for string signal to ensure equality only on value difference */\r\n  // static valueEquals: CreateComputedOptions<boolean | string | number> = {\r\n  //   equal: RxHelpers.valueEquals<boolean | string | number>\r\n  // };\r\n\r\n  /**\r\n   * Helper to _not_ set the equal and use the standard equal.\r\n   * This is just to ensure that the code can explicitly show that RefEquals was expected,\r\n   * and not an oversight.\r\n   */\r\n  static ref = {  };\r\n}\r\n","import { Injectable, Signal, signal } from '@angular/core';\r\nimport { classLog } from '../../shared/logging';\r\nimport { SignalEquals } from '../../shared/signals/signal-equals';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { LanguageService } from '../localization/language.service';\r\nimport { ItemService } from '../state/item.service';\r\nimport { FormConfigService } from './form-config.service';\r\n\r\n/**\r\n * Service to manage the state of forms.\r\n * Mainly to determine if valid, read-only etc.\r\n */\r\n@Injectable()\r\nexport class FormsStateService {\r\n\r\n  log = classLog({FormsStateService});\r\n\r\n  /** Signal which is filled by sub-dialogs to trigger save (other saves like ctrl+s don't go through this) */\r\n  public triggerTrySaveAndMaybeClose = signal({ tryToSave: false, close: false }, SignalEquals.ref);\r\n  public formsAreValid = signal(false);\r\n  public formsAreDirty = signal(false);\r\n\r\n  #formsValid: Record<string, boolean> = {};\r\n  #formsDirty: Record<string, boolean> = {};\r\n\r\n  readOnly: Signal<FormReadOnly> = (() => {\r\n    const itemHeaders = signal(this.formConfig.config.itemGuids\r\n      .map(guid => this.itemService.getItemHeaderSignal(guid))\r\n    );\r\n    const language = this.languageService.getAllSignal();\r\n\r\n    const readOnly = computedObj('readOnly', () => {\r\n      const itemsReadOnly = itemHeaders().some(itemHeader => itemHeader().EditInfo?.ReadOnly ?? false);\r\n      const languageAllowed = language().find(l => l.NameId === this.formConfig.language().current)?.IsAllowed ?? true;\r\n      const isReadOnly = itemsReadOnly || !languageAllowed;\r\n      const reason = itemsReadOnly ? 'Form' : !languageAllowed ? 'Language' : undefined;\r\n\r\n      return {\r\n        isReadOnly,\r\n        reason,\r\n      } satisfies FormReadOnly;\r\n    });\r\n    return readOnly;\r\n  })();\r\n\r\n  // readOnly: Signal<FormReadOnly>;\r\n  formsValidTemp = signal<boolean>(false);\r\n  saveButtonDisabled = computedObj('saveButtonDisabled', () => this.readOnly().isReadOnly || !this.formsValidTemp());\r\n\r\n  constructor(\r\n    private formConfig: FormConfigService,\r\n    private itemService: ItemService,\r\n    private languageService: LanguageService,\r\n  ) {\r\n    // Reset initial dirty/valid states\r\n    for (const entityGuid of this.formConfig.config.itemGuids) {\r\n      this.#formsValid[entityGuid] = false;\r\n      this.#formsDirty[entityGuid] = false;\r\n    }\r\n  }\r\n\r\n  init() {\r\n    // 2024-09-23 2dm - moved up to Signal creation, probably not needed as late-init\r\n    // which also causes trouble if consumers\r\n    // leave for 2-3 weeks, then remove the init call.\r\n\r\n    // const itemHeaders = signal(this.formConfig.config.itemGuids\r\n    //   .map(guid => this.itemService.getItemHeaderSignal(guid))\r\n    // );\r\n    // const language = this.languageService.getAllSignal();\r\n\r\n    // const readOnly = computedObj('readOnly', () => {\r\n    //   const itemsReadOnly = itemHeaders().some(itemHeader => itemHeader().EditInfo?.ReadOnly ?? false);\r\n    //   const languageAllowed = language().find(l => l.NameId === this.formConfig.language().current)?.IsAllowed ?? true;\r\n    //   const isReadOnly = itemsReadOnly || !languageAllowed;\r\n    //   const reason = itemsReadOnly ? 'Form' : !languageAllowed ? 'Language' : undefined;\r\n\r\n    //   return {\r\n    //     isReadOnly,\r\n    //     reason,\r\n    //   } satisfies FormReadOnly;\r\n    // });\r\n    // this.readOnly = readOnly;\r\n  }\r\n\r\n  getFormValid(entityGuid: string) {\r\n    return this.#formsValid[entityGuid];\r\n  }\r\n\r\n  setFormValid(entityGuid: string, isValid: boolean) {\r\n    this.#formsValid[entityGuid] = isValid;\r\n\r\n    const allValid = !Object.values(this.#formsValid).some(valid => valid === false);\r\n    if (allValid !== this.formsValidTemp()) {\r\n      this.formsValidTemp.set(allValid);\r\n      this.formsAreValid.set(allValid);\r\n    }\r\n  }\r\n\r\n  setFormDirty(entityGuid: string, isDirty: boolean) {\r\n    this.#formsDirty[entityGuid] = isDirty;\r\n\r\n    const anyDirty = Object.values(this.#formsDirty).some(dirty => dirty === true);\r\n    if (anyDirty !== this.formsAreDirty())\r\n      this.formsAreDirty.set(anyDirty);\r\n  }\r\n\r\n  triggerSave(close: boolean) {\r\n    this.triggerTrySaveAndMaybeClose.set({ tryToSave: true, close });\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface FormReadOnly {\r\n  isReadOnly: boolean;\r\n  reason: undefined | 'Form' | 'Language';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AdamItem } from '../../../../../../edit-types/src/AdamItem';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { PrefetchAdams } from '../../dialog/main/edit-dialog-main.models';\r\nimport { SignalStoreBase } from '../store/signal-store-base';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AdamCacheService extends SignalStoreBase<string, AdamSnapshot> {\r\n\r\n  constructor() {\r\n    super(classLog({AdamCacheService}));\r\n  }\r\n\r\n  override getId = (item: AdamSnapshot) => item.Guid;\r\n\r\n  loadPrefetch(prefetchAdams: PrefetchAdams): void {\r\n    if (prefetchAdams == null)\r\n      return; \r\n\r\n    const snapshots = Object.entries(prefetchAdams)\r\n      .map(([entityGuid, attributes]) => ({\r\n        Guid: entityGuid,\r\n        Attributes: attributes,\r\n      } satisfies AdamSnapshot));\r\n    this.addMany(snapshots);\r\n  }\r\n\r\n  getAdamSnapshot(entityGuid: string, fieldName: string): AdamItem[] {\r\n    return this.cache()[entityGuid]?.Attributes[fieldName];\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\ninterface AdamSnapshot {\r\n  Guid: string;\r\n  Attributes: AdamSnapshotAttributes;\r\n}\r\n\r\ninterface AdamSnapshotAttributes {\r\n  [name: string]: AdamItem[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AdamItem } from '../../../../../../edit-types/src/AdamItem';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { LinkInfo, PrefetchAdams, PrefetchLinks } from '../../dialog/main/edit-dialog-main.models';\r\nimport { SignalStoreBase } from '../store/signal-store-base';\r\n\r\n/**\r\n * The link Cache will store info to all links incl. file references (ADAM)\r\n * to provide previews and link-resolution (eg. file:72 = /assets/icon.jpg)\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class LinkCacheService extends SignalStoreBase<string, LinkCache> {\r\n\r\n  constructor() {\r\n    super(classLog({LinkCacheService}));\r\n  }\r\n\r\n  override getId = (item: LinkCache) => item.key.trim().toLocaleLowerCase();\r\n\r\n  addPrefetch(prefetchLinks: PrefetchLinks, prefetchAdam: PrefetchAdams): void {\r\n\r\n    // Convert PrefetchLinks to LinkCache\r\n    const links: LinkCache[] = prefetchLinks\r\n      ? Object.entries(prefetchLinks)\r\n          .map(([key, linkInfo]) => ({ key, ...linkInfo }))\r\n      : [];\r\n\r\n    // Convert PrefetchAdam to LinkCache\r\n    // This is more complex, as the raw data is nested\r\n    const adamLinkList: LinkCache[] = prefetchAdam != null\r\n      ? Object.entries(prefetchAdam)\r\n          .flatMap(([_, prefetchFields]) => Object.entries(prefetchFields)\r\n            .flatMap(([__, items]) => this.adamToLinks(items))\r\n          )\r\n      : [];\r\n\r\n    this.addMany([ ...links, ...adamLinkList ]);\r\n  }\r\n\r\n  /** Add a new ADAM which was just uploaded */\r\n  addAdam(items: AdamItem[]): void {\r\n    this.addMany(this.adamToLinks(items));\r\n  }\r\n\r\n  /** Add a link which was just added (typed/selected) in the UI */\r\n  addLink(key: string, linkInfo: LinkInfo): void {\r\n    key = key.trim().toLocaleLowerCase();\r\n    const link: LinkCache = {\r\n      key,\r\n      ...linkInfo,\r\n      Adam: {\r\n        ...linkInfo.Adam,\r\n      },\r\n    } satisfies LinkCache;\r\n\r\n    this.add(link);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  private adamToLinks(items: AdamItem[]): LinkCache[] {\r\n    return items\r\n      .filter(item => !item.IsFolder)\r\n      .map(item => ({\r\n        key: item.ReferenceId,\r\n        Adam: { ...item },\r\n        Value: item.Url,\r\n      } satisfies LinkCache));\r\n  }\r\n}\r\n\r\n\r\ninterface LinkCache extends LinkInfo{\r\n  key: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, tap } from 'rxjs';\r\nimport { classLog } from '../../shared/logging';\r\nimport { GlobalConfigService } from '../../shared/services/global-config.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { EavEditLoadDto, SaveEavFormData } from '../dialog/main/edit-dialog-main.models';\r\nimport { SaveResult } from '../state/save-result.model';\r\n\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  fetchFormData: false,\r\n  saveFormData: false,\r\n};\r\n\r\nconst webApiLoad = 'cms/edit/load';\r\nconst webApiSave = 'cms/edit/save';\r\n\r\n@Injectable()\r\nexport class FormDataService extends HttpServiceBase {\r\n\r\n  log = classLog({FormDataService}, logSpecs);\r\n\r\n  constructor(\r\n    private globalConfigService: GlobalConfigService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  fetchFormData(items: string) {\r\n    this.log.fnIf('fetchFormData', { items, context: this.context });\r\n    return this.http.post<EavEditLoadDto>(this.apiUrl(webApiLoad), items, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(formData => {\r\n        formData.Context.Language.List = formData.Context.Language.List.filter(language => language.IsEnabled);\r\n        return formData;\r\n      }),\r\n      tap(formData => {\r\n        this.globalConfigService.allowDebug(formData.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n\r\n  saveFormData(result: SaveEavFormData, partOfPage: string) {\r\n    this.log.fnIf('saveFormData', { result, partOfPage });\r\n    return this.http.post<SaveResult>(this.apiUrl(webApiSave), result, {\r\n      params: { appId: this.appId, partOfPage }\r\n    });\r\n  }\r\n}\r\n","import { Of } from '../../../../../../core';\r\nimport { AdamItem } from '../../../../../../edit-types/src/AdamItem';\r\nimport { DialogContext } from '../../../app-administration/models';\r\nimport { FeatureNames } from '../../../features/feature-names';\r\nimport { InputTypeMetadata } from '../../../shared/fields/input-type-metadata.model';\r\nimport { EavContentType, EavEntity } from '../../shared/models/eav';\r\nimport { EavContentTypeDto, EavEntityBundleDto, EavEntityDto } from '../../shared/models/json-format-v1';\r\n\r\nexport interface EavPublishStatus {\r\n  DraftShouldBranch: boolean;\r\n  IsPublished: boolean;\r\n}\r\n\r\nexport interface PublishStatus extends EavPublishStatus {\r\n  formId: number;\r\n}\r\n\r\n/** PublishMode is short version of PublishStatus */\r\nexport const PublishModes = {\r\n  Show: 'show',\r\n  Hide: 'hide',\r\n  Branch: 'branch',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\n\r\nexport interface EavEditLoadDto extends EavPublishStatus {\r\n  ContentTypeItems: EavEntityDto[];\r\n  ContentTypes: EavContentTypeDto[];\r\n  Context: DialogContext;\r\n  InputTypes: InputTypeMetadata[];\r\n  Items: EavEntityBundleDto[];\r\n  Prefetch?: Prefetch;\r\n  Settings: EditSettingsDto;\r\n\r\n  RequiredFeatures?: Record<Of<typeof FeatureNames>, string[]>;\r\n}\r\n\r\nexport interface EditSettings {\r\n  Values: Record<string, unknown>;\r\n  // note: added by 2dm 2023-01-21 but not used yet\r\n  // will probably contain special wysiwyg-edit configs and similar...\r\n  Entities: EavEntity[];\r\n  /**\r\n   * ContentTypes which are additional settings.\r\n   * New v17 to help Pickers figure out the best title for new-entities.\r\n   * TODO: @SDV\r\n   */\r\n  ContentTypes: EavContentType[];\r\n}\r\n\r\nexport interface EditSettingsDto {\r\n  Values: Record<string, unknown>;\r\n  Entities: EavEntityDto[];\r\n  /**\r\n   * ContentTypes which are additional settings.\r\n   * New v17 to help Pickers figure out the best title for new-entities.\r\n   * TODO: @SDV\r\n   */\r\n  ContentTypes: EavContentTypeDto[];\r\n}\r\n\r\nexport interface SaveEavFormData extends EavPublishStatus {\r\n  Items: EavEntityBundleDto[];\r\n}\r\n\r\nexport interface Prefetch {\r\n  Adam: PrefetchAdams;\r\n\r\n  // #RemovePickerDataCacheService\r\n  // /**\r\n  //  * Entities for dropdowns which were already selected\r\n  //  * TODO: AS OF 2024-08-27 it is not in use any more, so we should either\r\n  //  * - remove from the backend\r\n  //  * - rethink what we do/improve\r\n  //  */\r\n  // Entities: PrefetchEntity[];\r\n  Links: PrefetchLinks;\r\n\r\n  /** NgRx store helper */\r\n  _guid?: string;\r\n}\r\n\r\nexport interface PrefetchAdams {\r\n  [entityGuid: string]: {\r\n    [fieldName: string]: AdamItem[];\r\n  };\r\n}\r\n\r\nexport interface PrefetchLinks {\r\n  [key: string]: LinkInfo;\r\n}\r\n\r\nexport interface LinkInfo {\r\n  /** Null if URL doesn't resolve to ADAM file (is page, external url or blocked by permissions) */\r\n  Adam?: AdamItem;\r\n  /** Resolved or original URL */\r\n  Value: string;\r\n}\r\n","import { Injectable, Signal } from '@angular/core';\r\nimport { Of } from '../../../../../core';\r\nimport { classLog } from '../../shared/logging';\r\nimport { ComputedCacheHelper } from '../../shared/signals/computed-cache';\r\nimport { EavPublishStatus, PublishModes, PublishStatus } from '../dialog/main/edit-dialog-main.models';\r\nimport { SignalStoreBase } from '../shared/store/signal-store-base';\r\nimport { FormConfigService } from './form-config.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FormPublishingService extends SignalStoreBase<number, PublishStatus> {\r\n  \r\n  constructor() {\r\n    super(classLog({FormPublishingService}));\r\n  }\r\n\r\n  override getId = (item: PublishStatus) => item.formId;\r\n\r\n  setPublishMode(publishMode: Of<typeof PublishModes>, formId: number, eavService: FormConfigService): void {\r\n    // if publish mode is prohibited, set default\r\n    if (eavService.config.versioningOptions[publishMode] == null) {\r\n      publishMode = Object.keys(eavService.config.versioningOptions)[0] as Of<typeof PublishModes>;\r\n    }\r\n    const publishStatus: PublishStatus = {\r\n      formId,\r\n      DraftShouldBranch: publishMode === PublishModes.Branch,\r\n      IsPublished: publishMode === PublishModes.Show,\r\n    };\r\n    this.add(publishStatus);\r\n  }\r\n\r\n  getPublishMode(formId: number): Signal<Of<typeof PublishModes>> {\r\n    return this.#signalsPublishModeCache.getOrCreate(formId, () => this.toPublishMode(this.get(formId)));\r\n  }\r\n  #signalsPublishModeCache = new ComputedCacheHelper<number, Of<typeof PublishModes>>('publishMode');\r\n\r\n  \r\n  /** Convert the booleans to the appropriate \"verb\" */\r\n  public toPublishMode(publishStatus: EavPublishStatus): Of<typeof PublishModes> {\r\n    const publishMode: Of<typeof PublishModes> = publishStatus.DraftShouldBranch\r\n      ? PublishModes.Branch\r\n      : publishStatus.IsPublished\r\n        ? PublishModes.Show\r\n        : PublishModes.Hide;\r\n    return publishMode;\r\n  }\r\n\r\n}\r\n","import { Injectable, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../core';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { InputTypeHelpers } from '../../shared/fields/input-type-helpers';\r\nimport { UpdateEnvVarsFromDialogSettings } from '../../shared/helpers/update-env-vars-from-dialog-settings.helper';\r\nimport { convertUrlToForm } from '../../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { ItemAddIdentifier } from '../../shared/models/edit-form.model';\r\nimport { UserLanguageService } from '../../shared/services/user-language.service';\r\nimport { calculateIsParentDialog, sortLanguages } from '../dialog/main/edit-dialog-main.helpers';\r\nimport { EavEditLoadDto } from '../dialog/main/edit-dialog-main.models';\r\nimport { FieldLogicManager } from '../fields/logic/field-logic-manager';\r\nimport { FieldReader } from '../localization/field-reader';\r\nimport { LanguageService } from '../localization/language.service';\r\nimport { EditUrlParams } from '../routing/edit-url-params.model';\r\nimport { AdamCacheService } from '../shared/adam/adam-cache.service';\r\nimport { LinkCacheService } from '../shared/adam/link-cache.service';\r\nimport { ContentTypeItemService } from '../shared/content-types/content-type-item.service';\r\nimport { ContentTypeService } from '../shared/content-types/content-type.service';\r\nimport { EntityReader } from '../shared/helpers';\r\nimport { InputTypeService } from '../shared/input-types/input-type.service';\r\nimport { EavContentType } from '../shared/models/eav/eav-content-type';\r\nimport { EavEntity } from '../shared/models/eav/eav-entity';\r\nimport { FieldsSettingsHelpers } from '../state/field-settings.helper';\r\nimport { ItemValuesOfLanguage } from '../state/item-values-of-language.model';\r\nimport { ItemService } from '../state/item.service';\r\nimport { FormConfigService } from './form-config.service';\r\nimport { FormDataService } from './form-data.service';\r\nimport { FormLanguageService } from './form-language.service';\r\nimport { FormPublishingService } from './form-publishing.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  fetchFormData: false,\r\n  importLoadedData: false,\r\n  keepInitialValues: false,\r\n  initMissingValues: false,\r\n};\r\n\r\n/**\r\n * Service to initialize an edit form. Will:\r\n * - Load form data\r\n * - store it in various services, stores etc.\r\n * - Load initial values for formulas\r\n */\r\n@Injectable()\r\nexport class EditInitializerService {\r\n  \r\n  log = classLog({EditInitializerService}, logSpecs);\r\n\r\n  public loaded = signal(false);\r\n\r\n  private formDataService = transient(FormDataService);\r\n\r\n  private initialFormValues: Record<string, ItemValuesOfLanguage> = {};\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private formConfig: FormConfigService,\r\n    private itemService: ItemService,\r\n    private inputTypeService: InputTypeService,\r\n    private contentTypeItemService: ContentTypeItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private publishStatusService: FormPublishingService,\r\n    private translate: TranslateService,\r\n    private languageService: LanguageService,\r\n    private languageStore: FormLanguageService,\r\n    private snackBar: MatSnackBar,\r\n    private adamCacheService: AdamCacheService,\r\n    private linkCacheService: LinkCacheService,\r\n    private featuresService: FeaturesScopedService,\r\n    private userLanguageSvc: UserLanguageService,\r\n  ) { }\r\n\r\n  fetchFormData(): void {\r\n    const l = this.log.fnIf('fetchFormData');\r\n    const inbound = convertUrlToForm((this.route.snapshot.params as EditUrlParams).items);\r\n    // 2024-06-01 2dm adding index to round trip\r\n    const form = {\r\n      ...inbound,\r\n      items: inbound.items.map((item, index) => {\r\n        return {\r\n          ...item,\r\n          clientId: index,\r\n        };\r\n      }),\r\n    }\r\n    l.a('fetchFormData', form);\r\n\r\n    const editItems = JSON.stringify(form.items);\r\n    this.formDataService.fetchFormData(editItems).subscribe(dataFromBackend => {\r\n      // 2dm 2024-06-01 preserve prefill and client-data from original\r\n      // and stop relying on round-trip to keep it\r\n      const formData: EavEditLoadDto = {\r\n        ...dataFromBackend,\r\n        Items: dataFromBackend.Items.map(item => {\r\n          // try to find original item\r\n          const originalItem = form.items.find(i => i.clientId === item.Header.clientId);\r\n          l.a('fetchFormData - remix', {item, originalItem});\r\n\r\n          return originalItem == null\r\n            ? item\r\n            : {\r\n                ...item,\r\n                Header: {\r\n                  ...item.Header,\r\n                  Prefill: originalItem.Prefill,\r\n                  ClientData: originalItem.ClientData,\r\n                }\r\n              };\r\n        }),\r\n      };\r\n      l.a('fetchFormData - after remix', {formData});\r\n\r\n\r\n      // SDV: document what's happening here\r\n      this.featuresService.load(formData.Context, formData);\r\n      UpdateEnvVarsFromDialogSettings(formData.Context.App);\r\n      this.#importLoadedData(formData);\r\n      this.#keepInitialValues();\r\n      this.#initMissingValues();\r\n\r\n      this.loaded.set(true);\r\n    });\r\n  }\r\n\r\n  #importLoadedData(loadDto: EavEditLoadDto): void {\r\n    const l = this.log.fnIf('importLoadedData');\r\n    const formId = Math.floor(Math.random() * 99999);\r\n    const isParentDialog = calculateIsParentDialog(this.route);\r\n    const itemGuids = loadDto.Items.map(item => item.Entity.Guid);\r\n\r\n    this.itemService.loadItems(loadDto.Items);\r\n    // we assume that input type and content type data won't change between loading parent and child forms\r\n    this.inputTypeService.addMany(loadDto.InputTypes);\r\n    this.contentTypeItemService.addContentTypeItems(loadDto.ContentTypeItems);\r\n    this.contentTypeService.addContentTypes(loadDto.ContentTypes);\r\n    this.adamCacheService.loadPrefetch(loadDto.Prefetch?.Adam);\r\n    this.linkCacheService.addPrefetch(loadDto.Prefetch?.Links, loadDto.Prefetch?.Adam);\r\n\r\n    const items = this.itemService.getMany(itemGuids);\r\n    const createMode = items[0].Entity.Id === 0;\r\n    const isCopy = (items[0].Header as ItemAddIdentifier).DuplicateEntity != null;\r\n    const enableHistory = !createMode && this.route.snapshot.data.history !== false;\r\n    const settingsAsEav = {\r\n      ...loadDto.Settings,\r\n      Entities: EavEntity.convertMany(loadDto.Settings.Entities),\r\n      ContentTypes: EavContentType.convertMany(loadDto.Settings.ContentTypes),\r\n    };\r\n    this.formConfig.initFormConfig(loadDto.Context, formId, isParentDialog, itemGuids, createMode, isCopy, enableHistory, settingsAsEav);\r\n\r\n    var langs = loadDto.Context.Language;\r\n    // WARNING! TranslateService is a new instance for every form and language must be set for every one of them\r\n    const userLangCode = this.userLanguageSvc.getUiCode(langs.Current);\r\n    this.translate.use(userLangCode);\r\n\r\n    // load language data only for parent dialog to not overwrite languages when opening child dialogs\r\n    if (isParentDialog) {\r\n      const sortedLanguages = sortLanguages(langs.Primary, langs.List);\r\n      this.languageService.addMany(sortedLanguages);\r\n    }\r\n    this.languageStore.addForm(formId, langs.Primary, langs.Current, false);\r\n\r\n    // First convert to publish mode, because then it will run checks if this is allowed\r\n    const publishMode = this.publishStatusService.toPublishMode(loadDto);\r\n    this.publishStatusService.setPublishMode(publishMode, formId, this.formConfig);\r\n  }\r\n\r\n  //#region Initial Values for Formulas to retrieve if needed\r\n\r\n  /**\r\n   * Preserve initial values for future use in formulas which may need to know the initial value\r\n   */\r\n  #keepInitialValues(): void {\r\n    const l = this.log.fnIf('keepInitialValues');\r\n    const items = this.itemService.getMany(this.formConfig.config.itemGuids);\r\n    const allLangs = this.languageService.getAll().map(language => language.NameId);\r\n    const language = this.formConfig.language();\r\n    if (!allLangs.includes(language.current)) allLangs.push(language.current);\r\n    if (!allLangs.includes(language.primary)) allLangs.push(language.primary);\r\n\r\n    for (const item of items)\r\n      for (const currentLang of allLangs) {\r\n        const formValues = new EntityReader(currentLang, language.primary).currentValues(item.Entity.Attributes);\r\n        this.initialFormValues[this.#initialValuesCacheKey(item.Entity.Guid, currentLang)] = formValues;\r\n      }\r\n  }\r\n\r\n  #initialValuesCacheKey(entityGuid: string, language: string): string {\r\n    return `entityGuid:${entityGuid}:language:${language}`;\r\n  }\r\n\r\n  getInitialValues(entityGuid: string, language: string): ItemValuesOfLanguage {\r\n    return this.initialFormValues[this.#initialValuesCacheKey(entityGuid, language)];\r\n  }\r\n  //#endregion\r\n\r\n  #initMissingValues(): void {\r\n    const l = this.log.fnIf('initMissingValues');\r\n\r\n    const updater = this.itemService.updater;\r\n    const eavConfig = this.formConfig.config;\r\n    const formId = eavConfig.formId;\r\n    const items = this.itemService.getMany(eavConfig.itemGuids);\r\n    const inputTypes = this.inputTypeService.getAll();\r\n    const languages = this.languageService.getAll();\r\n    const language = this.formConfig.language();\r\n    /** force UI to switch to default language, because some values are missing in the default language */\r\n    let switchToDefault = false;\r\n    const isCreateMode = eavConfig.createMode;\r\n\r\n    const fss = new FieldsSettingsHelpers(\"EditInitializerService\");\r\n\r\n    for (const item of items) {\r\n      const contentType = this.contentTypeService.getContentTypeOfItem(item);\r\n\r\n      for (const ctAttribute of contentType.Attributes) {\r\n        const currentName = ctAttribute.Name;\r\n        const inputType = inputTypes.find(i => i.Type === ctAttribute.InputType);\r\n        const isEmptyType = InputTypeHelpers.isEmpty(inputType?.Type);\r\n        l.a(`Attribute: '${currentName}' InputType: '${inputType?.Type}' isEmptyType: '${isEmptyType}'`);\r\n\r\n        if (isEmptyType)\r\n          continue;\r\n\r\n        const logic = FieldLogicManager.singleton().getOrUnknown(inputType?.Type);\r\n\r\n        const attributeValues = item.Entity.Attributes[ctAttribute.Name];\r\n        const fieldSettings = fss.getDefaultSettings(\r\n          new EntityReader(language.primary, language.primary).flatten(ctAttribute.Metadata)\r\n        );\r\n\r\n        if (languages.length === 0) {\r\n          l.a(`${currentName} languages none, simple init`);\r\n          const firstValue = new FieldReader(attributeValues, '*').currentOrDefaultOrAny?.Value;\r\n          if (logic.isValueEmpty(firstValue, isCreateMode))\r\n            updater.setDefaultValue(item, ctAttribute, inputType, fieldSettings, languages, language.primary);\r\n        } else {\r\n          l.a(`${currentName} languages many, complex init`);\r\n\r\n          // check if there is a value for the generic / all language\r\n          const disableI18n = inputType?.DisableI18n;\r\n          const noLanguageValue = new FieldReader(attributeValues, '*').currentOrDefault?.Value;\r\n          l.a(currentName, { disableI18n, noLanguageValue });\r\n          if (!disableI18n && noLanguageValue !== undefined) {\r\n            // move * value to defaultLanguage\r\n            const transactionItem = updater.removeItemAttributeDimension(item.Entity.Guid, ctAttribute.Name, '*', true);\r\n            updater.addItemAttributeValue(\r\n              item.Entity.Guid,\r\n              ctAttribute.Name,\r\n              noLanguageValue,\r\n              language.primary,\r\n              false,\r\n              ctAttribute.Type,\r\n              false,\r\n              transactionItem,\r\n            );\r\n            l.a(`${currentName} exit`);\r\n            continue;\r\n          }\r\n\r\n          const defaultLanguageValue = new FieldReader(attributeValues, language.primary).currentOrDefault?.Value;\r\n\r\n          const valueIsEmpty = logic.isValueEmpty(defaultLanguageValue, isCreateMode);\r\n          l.a(currentName, { currentName, valueIsEmpty, defaultLanguageValue, isCreateMode });\r\n          if (valueIsEmpty) {\r\n            const valUsed = updater.setDefaultValue(item, ctAttribute, inputType, fieldSettings, languages, language.primary);\r\n\r\n            // 2022-08-15 2dm added this\r\n            // If we run into more problems (like required date-fields which result in null)\r\n            // we may have to update the logic to use FieldLogicBase and add rules for each type what would be valid\r\n            // or test for IsRequired as well\r\n\r\n            // If the primary language isn't ready, enforce switch-to-default\r\n            // Skip this for ephemeral fields as they never load with content\r\n            // Also switch for fields which use null as default (like boolean-tristate) as this kind of \"empty\" is valid\r\n            if (valUsed != null && !fieldSettings.IsEphemeral)\r\n              switchToDefault = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (switchToDefault && language.current !== language.primary) {\r\n      this.languageStore.setCurrent(formId, language.primary);\r\n      const message = this.translate.instant('Message.SwitchedLanguageToDefault', { language: language.primary });\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n  }\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Language } from '../../form/form-languages.model';\r\n\r\nexport function calculateIsParentDialog(route: ActivatedRoute) {\r\n  let editDialogCount = 0;\r\n  for (const path of route.snapshot.pathFromRoot) {\r\n    if (path.url.length <= 0) continue;\r\n    for (const urlSegment of path.url) {\r\n      if (urlSegment.path !== 'edit') continue;\r\n      editDialogCount++;\r\n    }\r\n  }\r\n  return editDialogCount === 1;\r\n}\r\n\r\nexport function sortLanguages(primaryLangKey: string, languages: Language[]) {\r\n  if (languages.length === 0) { return languages; }\r\n\r\n  let primaryLang: Language;\r\n  const sameLangs: Language[] = [];\r\n  const otherLangs: Language[] = [];\r\n  for (const language of languages) {\r\n    if (language.NameId === primaryLangKey) {\r\n      primaryLang = language;\r\n    } else if (language.NameId.startsWith(primaryLangKey.split('-')[0])) {\r\n      sameLangs.push(language);\r\n    } else {\r\n      otherLangs.push(language);\r\n    }\r\n  }\r\n  sameLangs.sort((a, b) => a.NameId.localeCompare(b.NameId));\r\n  otherLangs.sort((a, b) => a.NameId.localeCompare(b.NameId));\r\n\r\n  const allLangsSorted: Language[] = !primaryLang ? [...sameLangs, ...otherLangs] : [primaryLang, ...sameLangs, ...otherLangs];\r\n  return allLangsSorted;\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { ItemIdentifierShared } from '../../shared/models/edit-form.model';\r\nimport { GlobalConfigService } from '../../shared/services/global-config.service';\r\nimport { EditInitializerService } from '../form/edit-initializer.service';\r\nimport { FormConfigService } from '../form/form-config.service';\r\nimport { LanguageService } from '../localization/language.service';\r\nimport { FieldsSettingsService } from '../state/fields-settings.service';\r\nimport { ItemService } from '../state/item.service';\r\nimport { FormulaPropsParameters } from './formula-run-one-helpers.factory';\r\nimport { FormulaExecutionSpecs } from './run/formula-objects-internal-data';\r\n\r\n/**\r\n * Factory for creating FormulaExecutionSpecs objects.\r\n * These are parameters needed to run formulas, which are reused quite a few times.\r\n */\r\n@Injectable()\r\nexport class FormulaExecutionSpecsFactory {\r\n\r\n  #features = inject(FeaturesScopedService).getAll();\r\n  \r\n  constructor(\r\n    private formConfig: FormConfigService,\r\n    private itemService: ItemService,\r\n    private languageSvc: LanguageService,\r\n    private globalConfigSvc: GlobalConfigService,\r\n    private editInitializerSvc: EditInitializerService,\r\n  ) { }\r\n\r\n  init(settingsSvc: FieldsSettingsService, entityGuid: string, clientData: Pick<ItemIdentifierShared, \"ClientData\">) {\r\n    this.#entityGuid = entityGuid;\r\n    this.#settingsSvc = settingsSvc;\r\n    this.#clientData = clientData;\r\n  }\r\n\r\n  // properties to set on init\r\n  #entityGuid: string;\r\n  #settingsSvc: FieldsSettingsService;\r\n  #clientData: Pick<ItemIdentifierShared, \"ClientData\">;\r\n  \r\n  #warningsObsolete: Record<string, boolean> = {};\r\n\r\n  /**\r\n   * Get all objects which are needed for the data and context and are reused quite a few times.\r\n   * Can be reused for a short time, as the data doesn't change in a normal cycle,\r\n   * but it will need to be regenerated after things such as language or feature change.\r\n   */\r\n  getSharedSpecs(): FormulaExecutionSpecs {\r\n    const language = this.formConfig.language();\r\n    const languages = this.languageSvc.getAll();\r\n    const debugEnabled = this.globalConfigSvc.isDebug();\r\n    const initialFormValues = this.editInitializerSvc.getInitialValues(this.#entityGuid, language.current);\r\n\r\n    return {\r\n      initialFormValues,\r\n      language,\r\n      languages,\r\n      debugEnabled,\r\n      itemService: this.itemService,\r\n      formConfig: this.formConfig,\r\n      fieldsSettingsSvc: this.#settingsSvc,\r\n      features: this.#features,\r\n      parameters: new FormulaPropsParameters(this.#clientData.ClientData?.parameters ?? {}),\r\n      warningsObsolete: this.#warningsObsolete,\r\n    } satisfies FormulaExecutionSpecs;\r\n  }\r\n}","import { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../edit-types/src/FieldValue';\r\nimport { InputTypeMetadata } from '../../shared/fields/input-type-metadata.model';\r\nimport { FieldLogicBase } from '../fields/logic/field-logic-base';\r\nimport { PickerItem } from '../fields/picker/models/picker-item.model';\r\nimport { PickerData } from '../fields/picker/picker-data';\r\nimport { FormulaFieldValidation } from '../formulas/targets/formula-targets';\r\nimport { TranslationState } from '../localization/translate-state.model';\r\nimport { InputTypeSpecs } from '../shared/input-types/input-type-specs.model';\r\n\r\n/**\r\n * Field properties of a picker.\r\n * Implemented as a class, so we can use new FieldPropsPicker();\r\n * and reliably get undefined values (not null) to spread objects.\r\n */\r\nexport class FieldPropsPicker {\r\n  list: PickerItem[];\r\n  ver: number | undefined;\r\n}\r\n\r\nexport interface FieldProps {\r\n  /** The language which applied to these field props as added to cache */\r\n  language: string;\r\n  constants: FieldConstants;\r\n  settings: FieldSettings;\r\n  translationState: TranslationState;\r\n\r\n  /** INITIAL Value of this field - eg. at form-load or language change. */\r\n  value: FieldValue;\r\n  buildWrappers: string[];\r\n  formulaValidation: FormulaFieldValidation;\r\n\r\n  opts: FieldPropsPicker;\r\n  sel: FieldPropsPicker;\r\n}\r\n\r\n/** Field Config information which never changes through the entire lifetime in the UI */\r\nexport interface FieldConstants {\r\n  /** The GUID it belongs to - must always be provided */\r\n  entityGuid: string;\r\n\r\n  /** The EntityId is used in field masks (for placeholders and for certain delete operations) */\r\n  entityId: number;\r\n  contentTypeNameId: string;\r\n\r\n  /** The field name - always required */\r\n  fieldName: string;\r\n  index: number;\r\n\r\n  dropzonePreviewsClass?: string;\r\n  initialDisabled?: boolean;\r\n  inputTypeSpecs: InputTypeSpecs;\r\n  isLastInGroup?: boolean;\r\n  type: string;\r\n  logic?: FieldLogicBase,\r\n\r\n  pickerData: () => PickerData | null;\r\n}\r\n\r\n/** Extended field config information which is constant as long as the language doesn't change. */\r\nexport interface FieldConstantsOfLanguage extends FieldConstants {\r\n  /** The language used for the current \"constants\" */\r\n  language: string,\r\n\r\n  /** The initial field settings in this language */\r\n  settingsInitial: FieldSettings,\r\n\r\n  /** The input type configuration of this language */\r\n  inputTypeConfiguration: InputTypeMetadata,\r\n}\r\n\r\n\r\n\r\n","import { classLog, FnLogger } from '../../shared/logging';\r\nimport { getVersion } from '../../shared/signals/signal.utilities';\r\nimport { DebugFields } from '../edit-debug';\r\nimport { FieldConstantsOfLanguage, FieldProps } from '../state/fields-configs.model';\r\nimport { FormulaCacheItem } from './cache/formula-cache.model';\r\nimport { FieldFormulasResultPartialSettings, FieldFormulasResultRaw } from './results/formula-results.models';\r\nimport { FormulaRunPicker, FormulaRunPickers } from './run/formula-objects-internal-data';\r\nimport { FormulaSpecialPickerAutoSleep, FormulaSpecialPickerTargets } from './targets/formula-targets';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getPickerInfos: false,\r\n  filterFormulasIfPickerNotReady: true,\r\n  fields: [...DebugFields],\r\n}\r\n\r\nexport class FormulaFieldPickerHelper {\r\n  \r\n  log = classLog({FormulaFieldPickerHelper}, logSpecs);\r\n\r\n  constructor(private fieldName: string, private fieldConstants: FieldConstantsOfLanguage, private propsBefore: FieldProps) {\r\n    this.isSpecialPicker = fieldConstants.inputTypeSpecs.isNewPicker\r\n  }\r\n\r\n  isSpecialPicker: boolean;\r\n\r\n  get infos() { return this.#infos ??= this.#getInfos(this.fieldName, this.fieldConstants, this.propsBefore); }\r\n  #infos: FormulaRunPickers;\r\n\r\n  //#endregion Prepare / Get Picker Infos / Select live formulas\r\n\r\n  /**\r\n   * Filter out formulas which should not run yet, for these reasons:\r\n   * 1. picker is not ready\r\n   * 2. picker is ready but nothing has changed, and \"sleep\" determines that in this case it shouldn't run.\r\n   */\r\n  public filterFormulasIfPickerNotReady(before: FormulaCacheItem[]) {\r\n    const l = this.log.fnIfInList('filterFormulasIfPickerNotReady', 'fields', this.fieldName, { before });\r\n    const picks = this.infos;\r\n\r\n    const ready = this.isSpecialPicker && !picks.ready\r\n      ? before.filter(f => !f.fieldIsSpecialPicker)\r\n      : before; \r\n      \r\n    // Figure out which picker-formulas must sleep\r\n    const formulas = ready.filter(f => !f.fieldIsSpecialPicker || (this.isSpecialPicker && !f.sleep || picks.changed));\r\n\r\n    const msg = `🧪📊 before: ${before.length}; ready: ${ready.length}; formulas:${formulas.length}; pickerChanged: ${picks.changed}; opts: ${picks.options.changed}/${picks.options.ver}; sel: ${picks.selected.changed}/${picks.selected.ver}`;\r\n    return l.rSilent(formulas, msg);\r\n  }\r\n\r\n  #getInfos(fieldName: string, fieldConstants: FieldConstantsOfLanguage, propsBefore: FieldProps): FormulaRunPickers {\r\n    const l = this.log.fnIfInList('getPickerInfos', 'fields', fieldName);\r\n    // Get the latest picker data and check if it has changed - as it affects which formulas to run\r\n    const picker = fieldConstants.pickerData();\r\n    if (picker?.ready() != true) {\r\n      const dummy = { list: [], listRaw: [], ver: null, verBefore: null, changed: false, } as FormulaRunPicker;\r\n      return { ready: false, mapper: null, picker, options: dummy, selected: dummy, changed: false, };\r\n    }\r\n\r\n    function getSpecs(cache: typeof picker.optionsRaw, final: typeof picker.optionsRaw, verBefore: number): FormulaRunPicker {\r\n      const listRaw = cache(); // must access before version check\r\n      const ver = getVersion(cache);\r\n      return { list: final(), listRaw, ver, verBefore, changed: ver !== verBefore, } satisfies FormulaRunPicker;\r\n    }\r\n    const options = getSpecs(picker.optionsRaw, picker.optionsAll, propsBefore.opts?.ver);\r\n    const selected = getSpecs(picker.selectedRaw, picker.selectedAll, propsBefore.sel?.ver);\r\n\r\n    const result: FormulaRunPickers = {\r\n      ready: true,\r\n      mapper: picker.state.mapper,\r\n      picker,\r\n      options,\r\n      selected,\r\n      changed: selected.changed || options.changed,\r\n    };\r\n    return l.r(result);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Update Field Props\r\n\r\n  /**\r\n   * Pause depends on explicit result\r\n   */\r\n  public updateFormulaSleep(formula: FormulaCacheItem, raw: FieldFormulasResultRaw, l: FnLogger): void {\r\n    formula.sleep = raw.sleep ?? (FormulaSpecialPickerAutoSleep.includes(formula.target) ? true : formula.sleep);\r\n    l.a(`🧪⏸️formula.sleep: ${formula.target}; formula.sleep: ${formula.sleep}; raw.sleep: ${raw.sleep}`);\r\n  }\r\n\r\n  /**\r\n   * Transfer options with version if result contains anything like that.\r\n   */\r\n  public preserveResultsAfterRun(formula: FormulaCacheItem, wip: FieldFormulasResultPartialSettings, raw: FieldFormulasResultRaw, l: FnLogger): FieldFormulasResultPartialSettings {\r\n\r\n    // picker data results - experimental v18\r\n    if (raw.options) {\r\n      wip.options = { list: raw.options, ver: this.infos.options.ver };\r\n      l.a(`🧪📃 options returned, will add`, wip.options as unknown as Record<string, unknown>);\r\n    }\r\n\r\n    if (raw.selected) {\r\n      wip.selected = { list: raw.selected, ver: this.infos.selected.ver };\r\n      l.a(`🧪📃 selected returned, will add`, wip.selected as unknown as Record<string, unknown>);\r\n    }\r\n\r\n    return wip;\r\n  }\r\n\r\n  //#endregion\r\n\r\n}","import { SettingsFormulaPrefix } from '../targets/formula-targets';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Contains methods for updating settings from formulas.\r\n */\r\nexport class FormulaSettingsHelper {\r\n\r\n  /**\r\n   * Possibly updates setting with formula result if target and type matches.\r\n   * @param target Formula target\r\n   * @param settings Last/Current settings\r\n   * @param valueNew Formula result needed for type checking\r\n   * @param settingsNew Settings that are possibly updated\r\n   * @returns True if setting is updated, false if it is not\r\n   */\r\n  static keepSettingIfTypeOk(\r\n    target: string,\r\n    settings: FieldSettings,\r\n    valueNew: any,\r\n    settingsNew: Partial<FieldSettings>,\r\n  ): Partial<FieldSettings> {\r\n    return FormulaSettingsHelper.keepSettingIfTypeOkAndStatus(target, settings, valueNew, settingsNew).settingsNew;\r\n  }\r\n\r\n  static keepSettingIfTypeOkAndStatus(\r\n    target: string,\r\n    settings: FieldSettings,\r\n    valueNew: any,\r\n    settingsNew: Partial<FieldSettings>,\r\n  ): { settingsNew: Partial<FieldSettings>, wasChanged: boolean } {\r\n    // Retrieve the previous setting\r\n    const settingName = target.substring(SettingsFormulaPrefix.length) as keyof FieldSettings;\r\n    const prevSetting = settings[settingName];\r\n\r\n    if (isEqual(prevSetting, valueNew))\r\n      return { settingsNew, wasChanged: false };\r\n\r\n    const keepNewSetting = (Array.isArray(prevSetting) && Array.isArray(valueNew)) // can't check types of items in array, hope for the best\r\n      || (typeof prevSetting === typeof valueNew); // maybe typesafe\r\n\r\n    if (!keepNewSetting)\r\n      return { settingsNew, wasChanged: false };\r\n\r\n    (settingsNew as Record<keyof FieldSettings, any>)[settingName] = valueNew;\r\n    return { settingsNew, wasChanged: true };\r\n  }\r\n}\r\n","import { untracked } from '@angular/core';\r\nimport groupBy from 'lodash-es/groupBy';\r\nimport { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../edit-types/src/FieldValue';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { classLog } from '../../shared/logging';\r\nimport { ItemIdentifierShared } from '../../shared/models/edit-form.model';\r\nimport { DebugFields } from '../edit-debug';\r\nimport { FieldDefaults } from '../shared/helpers';\r\nimport { FieldConstantsOfLanguage, FieldProps, FieldPropsPicker } from '../state/fields-configs.model';\r\nimport { FieldSettingsUpdateHelper } from '../state/fields-settings-update.helpers';\r\nimport { ItemValuesOfLanguage } from '../state/item-values-of-language.model';\r\nimport { FormulaCacheItem } from './cache/formula-cache.model';\r\nimport { FormulaDesignerService } from './designer/formula-designer.service';\r\nimport { FormulaFunctionV1, FormulaVersions } from './formula-definitions';\r\nimport { FormulaFieldPickerHelper } from './formula-field-picker.helper';\r\nimport { FormulaRunOneHelpersFactory } from './formula-run-one-helpers.factory';\r\nimport { FormulaPromiseHandler } from './promise/formula-promise-handler';\r\nimport { FieldFormulasResult, FieldFormulasResultPartialSettings, FieldFormulasResultRaw } from './results/formula-results.models';\r\nimport { FormulaSettingsHelper } from './results/formula-settings.helper';\r\nimport { FormulaExecutionSpecs, FormulaExecutionSpecsWithRunParams, FormulaRunParameters } from './run/formula-objects-internal-data';\r\nimport { FormulaFieldValidation } from './targets/formula-targets';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  runFormula: false,\r\n  runAllOfField: true,\r\n  runOrInitSettings: true,\r\n  getPickerInfos: false,\r\n  fields: [...DebugFields], // will be replaced by shared list below\r\n};\r\n\r\n/**\r\n * Run all formulas of a single field.\r\n * Will also ensure that any settings are initialized properly if not yet created.\r\n */\r\nexport class FormulaRunField {\r\n\r\n  log = classLog({FormulaRunField}, logSpecs);\r\n\r\n  constructor(\r\n    private promiseHandler: FormulaPromiseHandler,\r\n    private designerSvc: FormulaDesignerService,\r\n    private entityGuid: string,\r\n    private runOneHelper: FormulaRunOneHelpersFactory,\r\n  ) { }\r\n\r\n  /**\r\n   * Used for running all formulas for a given attribute/field.\r\n   * @returns Object with all changes that formulas should make\r\n   */\r\n  runOrInitSettings(\r\n    currentValues: ItemValuesOfLanguage,\r\n    fieldName: string,\r\n    fieldConstants: FieldConstantsOfLanguage,\r\n    settingsCurrent: FieldSettings,\r\n    itemHeader: Pick<ItemIdentifierShared, \"Prefill\">,\r\n    valueBefore: FieldValue,\r\n    propsBefore: FieldProps,\r\n    reuseExecSpecs: FormulaExecutionSpecs,\r\n    setUpdHelper: FieldSettingsUpdateHelper,\r\n  ): FieldFormulasResult {\r\n    const l = this.log.fnIfInList('runOrInitSettings', 'fields', fieldName, { fieldName });\r\n\r\n    // Get the latest picker data and check if it has changed - as it affects which formulas to run\r\n    const pickHelp = new FormulaFieldPickerHelper(fieldName, fieldConstants, propsBefore);\r\n\r\n    // Get the latest formulas. Use untracked() to avoid tracking the reading of the formula-cache\r\n    // TODO: should probably use untracked around all the calls in this class...WIP 2dm\r\n    const fAll = untracked(() => this.designerSvc.cache.getActive(this.entityGuid, fieldName, pickHelp.isSpecialPicker));\r\n    const fGrouped = groupBy(fAll, f => f.disabled ? 'disabled' : 'enabled');\r\n    if (fGrouped.disabled)\r\n      this.#showDisabledFormulasWarnings(fGrouped.disabled);\r\n\r\n    const enabled = fGrouped.enabled ?? [];\r\n\r\n    const noPromiseSleep = this.promiseHandler.filterFormulas(fieldName, enabled)\r\n\r\n    // If we're working on the picker, but it's not ready yet, we must skip these formulas\r\n    const formulas = pickHelp.filterFormulasIfPickerNotReady(noPromiseSleep);\r\n\r\n    l.a(`🧪📊 enabled: ${enabled.length}; noPromisesSleep: ${noPromiseSleep.length}; formulas: ${formulas.length}`);\r\n\r\n    // If we have no formulas, exit early.\r\n    if (formulas.length == 0)\r\n      return finalize({}, valueBefore, {\r\n        value: valueBefore, validation: null, fields: [], settings: {},\r\n        options: new FieldPropsPicker(), selected: new FieldPropsPicker(),\r\n      } satisfies FieldFormulasResultPartialSettings);\r\n\r\n    // Run all formulas IF we have any and work with the objects containing specific changes\r\n    const runParamsStatic: Omit<FormulaRunParameters, 'formula'> = {\r\n      currentValues,\r\n      settingsInitial: fieldConstants.settingsInitial,\r\n      settingsCurrent,\r\n      pickerHelper: pickHelp,\r\n      defaultValueHelper: () => new FieldDefaults(fieldName, fieldConstants.inputTypeSpecs.inputType, fieldConstants.settingsInitial, itemHeader),\r\n    };\r\n    const raw = this.#runAllOfField(runParamsStatic, formulas, reuseExecSpecs);\r\n\r\n    return finalize(raw.settings, raw.value, raw);\r\n\r\n    // Helper to finalize the result, needed to quit early and also when it really runs\r\n    function finalize(settingsUpdate: Partial<FieldSettings>, value: FieldValue, raw: FieldFormulasResultPartialSettings): FieldFormulasResult {\r\n      // Correct any settings necessary after\r\n      // possibly making invalid changes in formulas or if settings need to adjust\r\n      // eg. custom bool labels which react to the value, etc.\r\n      const settings = setUpdHelper.correctSettingsAfterChanges({ ...settingsCurrent, ...settingsUpdate }, value || valueBefore);\r\n\r\n      // If it's a new picker, make sure that requirement is set.\r\n      if (fAll.length > 0 && pickHelp.isSpecialPicker)\r\n        settings.requiredFeatures = [ ...settings.requiredFeatures ?? [], FeatureNames.PickerFormulas ];\r\n      return l.r({ ...raw, settings, } satisfies FieldFormulasResult);\r\n    }\r\n  }\r\n\r\n  #showDisabledFormulasWarnings(disabled: FormulaCacheItem[]): void {\r\n    for (const formula of disabled)\r\n      console.warn(`Formula on field '${formula.fieldName}' with target '${formula.target}' is disabled. Reason: ${formula.disabledReason}`);\r\n  }\r\n\r\n  #runAllOfField(\r\n    runParams: Omit<FormulaRunParameters, 'formula'>,\r\n    formulas: FormulaCacheItem[],\r\n    reuseObjectsForFormulaDataAndContext: FormulaExecutionSpecs,\r\n  ): FieldFormulasResultPartialSettings {\r\n    const l = this.log.fnIfInList('runAllOfField', 'fields', formulas[0].fieldName, { runParams, formulas });\r\n\r\n    // Target variables to fill using formula result\r\n    let wip: FieldFormulasResultPartialSettings = {\r\n      value: undefined,                 // The new value\r\n      validation: undefined,            // The new validation\r\n      fields: [],                       // Any additional fields\r\n      options: new FieldPropsPicker(),  // Picker options\r\n      selected: new FieldPropsPicker(), // Picker selected\r\n      settings: {},                     // New settings - which can be updated multiple times by formulas\r\n    };\r\n\r\n    const start = performance.now();\r\n    for (const formula of formulas) {\r\n\r\n      const allRunParams: FormulaExecutionSpecsWithRunParams = {\r\n        runParameters: { formula, ...runParams, },\r\n        ...reuseObjectsForFormulaDataAndContext\r\n      };\r\n\r\n      const raw = this.#runFormula(allRunParams);\r\n      l.a(`formula result`, { formula, raw });\r\n\r\n      // Picker: First check sleep (before promise) since the promise will also need that\r\n      runParams.pickerHelper.updateFormulaSleep(formula, raw, l);\r\n\r\n      // Update Stop-State of formula in cache\r\n      this.promiseHandler.updateStop(formula, raw);\r\n\r\n      // Promise: Pick up in PromiseHandler if necessary and auto-stop if not explicitly set\r\n      this.promiseHandler.handleStopAndPromise(formula, raw);\r\n\r\n      // Picker: picker data results - experimental v18\r\n      wip = runParams.pickerHelper.preserveResultsAfterRun(formula, wip, raw, l);\r\n        \r\n      // If we have field changes, add to the list\r\n      if (raw.fields)\r\n        wip.fields.push(...raw.fields);\r\n\r\n      // If the value is not set, skip further result processing\r\n      if (raw.value === undefined)\r\n        continue;\r\n\r\n      // If we do have a value, we need to place it in the correct target\r\n      switch (true) {\r\n        // Target is the value. Remember it for later\r\n        case formula.isValue:\r\n          wip.value = raw.value;\r\n          break;\r\n\r\n        // Target is the validation. Remember it for later\r\n        case formula.isValidation:\r\n          wip.validation = raw.value as unknown as FormulaFieldValidation;\r\n          break;\r\n\r\n        // Target is a setting. Check validity and merge with other settings\r\n        case formula.isSetting:\r\n          wip.settings = FormulaSettingsHelper.keepSettingIfTypeOk(formula.target, runParams.settingsCurrent, raw.value, wip.settings);\r\n          break;\r\n      }\r\n    }\r\n    const afterRun = performance.now();\r\n\r\n    return l.r(wip, `runAllFormulas Time: ${afterRun - start}ms`);\r\n  }\r\n\r\n  /**\r\n   * Used for running a single formula and returning the result.\r\n   * @param formula\r\n   * @param entityId\r\n   * @param formValues\r\n   * @param inputType\r\n   * @param settingsInitial\r\n   * @param settingsCurrent\r\n   * @param itemIdWithPrefill\r\n   * @returns Result of a single formula.\r\n   */\r\n  #runFormula(execSpecs: FormulaExecutionSpecsWithRunParams): FieldFormulasResultRaw {\r\n\r\n    const { formula, fieldName, params, title, devHelper, valHelper } = this.runOneHelper.getPartsFor(execSpecs);\r\n\r\n    const l = this.log.fnIfInList('runFormula', 'fields', fieldName, { fieldName });\r\n\r\n    l.a(`formula version: ${formula.version}, entity: ${title}, field: ${fieldName}, target: ${formula.target}`, {formula});\r\n    try {\r\n      devHelper.showStart();\r\n\r\n      switch (formula.version) {\r\n        // Formula V1\r\n        case FormulaVersions.V1:\r\n          const v1Raw = (formula.fn as FormulaFunctionV1)(params.data, params.context, params.experimental);\r\n          const { ok, v1Result: valueV1 } = valHelper.v1(v1Raw);\r\n          if (ok) {\r\n            l.a('V1 formula result is pure', { v1Raw, valueV1 });\r\n            devHelper.showResult(valueV1.value, false, false);\r\n            return valueV1;\r\n          }\r\n          l.a('V1 formula result is not pure', { v1Raw });\r\n          console.error('V1 formulas accept only simple values in return statements. If you need to return an complex object, use V2 formulas.');\r\n          return valHelper.toFormulaResult(undefined);\r\n\r\n        // Formula V2\r\n        case FormulaVersions.V2:\r\n          //TODO: @2dm -> Added item as last argument so if ew use experimental anywhere nothing breaks\r\n          const v2Raw = (formula.fn as FormulaFunctionV1)(params.data, params.context, params.experimental);\r\n          const v2Value = valHelper.v2(v2Raw);\r\n          devHelper.showResult(v2Value.options as any ?? v2Value.value, false, !!v2Value.promise);\r\n          return v2Value;\r\n\r\n        default:\r\n          // default should never happen, so don't return any data to use; will probably error if this happens\r\n          // 2024-09-10 2dm adding throw error here to see if it's anywhere\r\n          // TODO: REMOVE option default everywhere ca. 2024-Q3\r\n          throw new Error(`Formula version unknown not supported`);\r\n          // const defRaw = (formula.fn as FormulaFunctionDefault)();\r\n          // const defValue = valHelper.v2(defRaw);\r\n          // devHelper.showResult(defValue.value, false, false);\r\n          // return defValue;\r\n      }\r\n    } catch (error) {\r\n      devHelper.showError(error);\r\n      return valHelper.toFormulaResult(undefined);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../core';\r\nimport { classLog } from '../../shared/logging';\r\nimport { ItemIdentifierShared } from '../../shared/models/edit-form.model';\r\nimport { DebugFields } from '../edit-debug';\r\nimport { EavContentType, EavContentTypeAttribute } from '../shared/models/eav';\r\nimport { LoggingService } from '../shared/services/logging.service';\r\nimport { FieldsSettingsHelpers } from '../state/field-settings.helper';\r\nimport { FieldProps } from '../state/fields-configs.model';\r\nimport { FieldsPropsEngine } from '../state/fields-properties-engine';\r\nimport { FieldsPropsEngineCycle } from '../state/fields-properties-engine-cycle';\r\nimport { FieldsSettingsService } from '../state/fields-settings.service';\r\nimport { ItemValuesOfLanguage } from '../state/item-values-of-language.model';\r\nimport { FormulaDesignerService } from './designer/formula-designer.service';\r\nimport { FormulaExecutionSpecsFactory } from './formula-exec-specs.factory';\r\nimport { FormulaRunField } from './formula-run-field';\r\nimport { FormulaRunOneHelpersFactory } from './formula-run-one-helpers.factory';\r\nimport { FormulaPromiseHandler } from './promise/formula-promise-handler';\r\nimport { NameValuePair } from './results/formula-results.models';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getFormulas: false,\r\n  runAllFields: true,\r\n  runFormula: false,\r\n  runOneFieldOrInitSettings: false,\r\n  fields: [...DebugFields], // or '*' for all\r\n};\r\n\r\n/**\r\n * Formula engine is responsible for running formulas and returning the result.\r\n *\r\n * Each instance of the engine is responsible for a _single_ entity.\r\n */\r\n@Injectable()\r\nexport class FormulaEngine {\r\n\r\n  log = classLog({FormulaEngine}, logSpecs);\r\n\r\n  #formulaExecSpecsFactory = transient(FormulaExecutionSpecsFactory);\r\n\r\n  constructor(\r\n    private designerSvc: FormulaDesignerService,\r\n    private logSvc: LoggingService,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  init(\r\n    entityGuid: string,\r\n    clientData: Pick<ItemIdentifierShared, \"ClientData\">,\r\n    settingsSvc: FieldsSettingsService,\r\n    promiseHandler: FormulaPromiseHandler,\r\n    contentType: EavContentType,\r\n    ctTitle: string\r\n  ) {\r\n    this.#entityGuid = entityGuid;\r\n    this.#promiseHandler = promiseHandler;\r\n    this.#attributes = contentType.Attributes;\r\n    this.#contentTypeTitle = ctTitle;\r\n    this.#formulaExecSpecsFactory.init(settingsSvc, entityGuid, clientData);\r\n  }\r\n\r\n  // properties to set on init\r\n  #entityGuid: string;\r\n  #contentTypeTitle: string;\r\n  #promiseHandler: FormulaPromiseHandler;\r\n  #attributes: EavContentTypeAttribute[];\r\n\r\n  runAllFields(propsEngine: FieldsPropsEngine, cycle: FieldsPropsEngineCycle) {\r\n    const fieldsProps: Record<string, FieldProps> = {};\r\n    const valueUpdates: ItemValuesOfLanguage = {};\r\n    const fieldUpdates: NameValuePair[] = [];\r\n\r\n    // Many aspects of a field are re-usable across formulas, so we prepare them here\r\n    // These are things explicit to the entity and either never change, or only rarely\r\n    // so never between cycles\r\n    const reuseExecSpecs = this.#formulaExecSpecsFactory.getSharedSpecs();\r\n\r\n    const fss = new FieldsSettingsHelpers(this.log.name);\r\n\r\n    for (const attr of this.#attributes) {\r\n      const lAttr = this.log.fnIfInList('runAllFields', 'fields', attr.Name, { fieldName: attr.Name });\r\n      const values = cycle.allAttributes[attr.Name];\r\n      const valueBefore = cycle.values[attr.Name];\r\n\r\n      const fieldConstants = cycle.getFieldConstants(attr.Name);\r\n      const latestSettings = cycle.getFieldSettingsInCycle(fieldConstants);\r\n      const settingsUpdateHelper = cycle.updateHelper.create(attr.Name, attr, fieldConstants, values);\r\n\r\n      const propsBefore = cycle.fieldProps[attr.Name] ?? {} as FieldProps;\r\n\r\n      // run formulas\r\n      const runOneHelper = new FormulaRunOneHelpersFactory(this.designerSvc, this.translate, this.logSvc, this.#contentTypeTitle);\r\n      const runOne = new FormulaRunField(this.#promiseHandler, this.designerSvc, this.#entityGuid, runOneHelper);\r\n      const allResults = runOne.runOrInitSettings(\r\n        cycle.values,\r\n        attr.Name,\r\n        fieldConstants,\r\n        latestSettings,\r\n        propsEngine.item.Header,\r\n        valueBefore,\r\n        propsBefore,\r\n        reuseExecSpecs,\r\n        settingsUpdateHelper,\r\n      );\r\n\r\n      const fixed = allResults.settings;\r\n\r\n      // Add any value changes to the queue for finalizing\r\n      valueUpdates[attr.Name] = allResults.value;\r\n\r\n      // If _other_ fields were updated, add it to the queue for later processing\r\n      if (allResults.fields)\r\n        fieldUpdates.push(...allResults.fields);\r\n\r\n      const debugDetails = lAttr.enabled;\r\n      const translationState = fss.getTranslationState(values, fixed.DisableTranslation, propsEngine.languages, debugDetails);\r\n\r\n      if (allResults.options.list)\r\n        lAttr.a('picker options', { options: allResults.options.list, version: allResults.options.ver });\r\n      if (allResults.selected.list)\r\n        lAttr.a('picker selected', { selected: allResults.selected.list, version: allResults.options.ver });\r\n\r\n      fieldsProps[attr.Name] = {\r\n        ...propsBefore,\r\n        language: fieldConstants.language,\r\n        constants: fieldConstants,\r\n        settings: fixed,\r\n        translationState,\r\n        value: valueBefore,\r\n        buildWrappers: null, // required, but set elsewhere\r\n        formulaValidation: allResults.validation,\r\n        // Options and Selected. Use spread, as values must be undefined if not updated\r\n        opts: { ...propsBefore.opts, ...allResults.options, },\r\n        sel: { ...propsBefore.sel, ...allResults.selected, },\r\n      };\r\n    }\r\n    return { fieldsProps, valueUpdates, fieldUpdates };\r\n  }\r\n\r\n}\r\n\r\n","import { FieldValueOrResultRaw, NameValuePair } from \"../results/formula-results.models\";\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\n\r\n/**\r\n * The result of a formula promise.\r\n * Contains queues of things to broadcast on the next processing cycle.\r\n */\r\nexport class FormulaPromiseResult {\r\n  constructor(public entityGuid: string) { }\r\n\r\n  public data: Record<string, FormulaPromiseResultField> = {};\r\n}\r\n\r\ninterface FormulaPromiseResultField {\r\n  name: string;\r\n  value?: FieldValue;\r\n  fields: NameValuePair[];\r\n  settings: Record<string, unknown>;\r\n}\r\n\r\nexport interface FieldSettingPair {\r\n  name: string;\r\n  settings: NameValuePair[];\r\n}\r\n\r\n\r\nexport interface FormulaPromise {\r\n  promise: Promise<FieldValueOrResultRaw>;\r\n  sleep: boolean;\r\n  completed: boolean;\r\n}","import { Injectable, Signal } from \"@angular/core\";\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { EavContentType } from \"../../shared/models/eav\";\r\nimport { FieldProps } from '../../state/fields-configs.model';\r\nimport { FieldsPropsEngineCycle } from '../../state/fields-properties-engine-cycle';\r\nimport { FieldsSettingsService } from '../../state/fields-settings.service';\r\nimport { FieldsValuesModifiedHelper } from '../../state/fields-values-modified.helper';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\nimport { ItemService } from '../../state/item.service';\r\nimport { FormulaCacheItem } from '../cache/formula-cache.model';\r\nimport { FieldFormulasResultRaw, FieldValueOrResultRaw } from \"../results/formula-results.models\";\r\nimport { FormulaSettingsHelper } from \"../results/formula-settings.helper\";\r\nimport { FormulaValueCorrections } from \"../results/formula-value-corrections.helper\";\r\nimport { SettingsFormulaPrefix } from '../targets/formula-targets';\r\nimport { FormulaPromiseResult } from \"./formula-promise-result.model\";\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  addFormulaPromise: true,\r\n  updateStop: false,\r\n  defineCallbackHandlerIfMissing: false,\r\n  changesFromQueue: false,\r\n  promiseComplete: true,\r\n  filterFormulas: true,\r\n  fields: [...DebugFields], // or '*' for all\r\n};\r\n\r\n/**\r\n * FormulaPromiseHandler is responsible for handling the promise parts of formula results.\r\n * \r\n * It is responsible for a single entity.\r\n */\r\n@Injectable()\r\nexport class FormulaPromiseHandler {\r\n\r\n  log = classLog({FormulaPromiseHandler}, logSpecs);\r\n\r\n  constructor(private itemService: ItemService) { }\r\n\r\n  #updateValueQueue: Record<string, FormulaPromiseResult> = {};\r\n  \r\n  init(entityGuid: string,\r\n    contentType: Signal<EavContentType>,\r\n    fieldsSettingsService: FieldsSettingsService,\r\n    modifiedChecker: FieldsValuesModifiedHelper,\r\n  ) {\r\n    this.#entityGuid = entityGuid;\r\n    this.#fieldsSettingsService = fieldsSettingsService;\r\n    this.#contentType = contentType;\r\n    this.#modifiedChecker = modifiedChecker;\r\n  }\r\n\r\n  #fieldsSettingsService: FieldsSettingsService = null;\r\n  #entityGuid: string;\r\n  #contentType: Signal<EavContentType>;\r\n  #modifiedChecker: FieldsValuesModifiedHelper;\r\n\r\n  public updateStop(formula: FormulaCacheItem, raw: FieldFormulasResultRaw): void {\r\n    const l = this.log.fnIfInList('updateStop', 'fields', formula.fieldName, { promiseResult: raw, formula }, formula.target);\r\n\r\n    const hasPromise = raw.promise instanceof Promise;\r\n\r\n    // Stop depends on explicit result and the default is different if it has a promise\r\n    // TODO: CONTINUE HERE - probably stop being set aggressively even if sleeping...\r\n    // Sleep state not fully resolved...\r\n    const newStop = raw.stop ?? (hasPromise ? true : formula.stop); \r\n    const msg = `🧪⏹️ formula.stop: ${formula.stop}; raw.stop: ${raw.stop}; hasPromise: ${hasPromise}; newStop: ${newStop}`;\r\n    formula.stop = newStop;\r\n    return l.end(msg);\r\n  }\r\n\r\n  /**\r\n   * Used for filling queue and triggering next run.\r\n   * @param raw\r\n   * @param formula\r\n   * @param inputTypeName\r\n   */\r\n  public handleStopAndPromise(formula: FormulaCacheItem, raw: FieldFormulasResultRaw): void {\r\n    const l = this.log.fnIfInList('addFormulaPromise', 'fields', formula.fieldName, { promiseResult: raw, formula }, formula.target);\r\n\r\n    // If no promise, exit early\r\n    if (!(raw.promise instanceof Promise))\r\n      return l.end('no promise');\r\n    \r\n    // If the user is currently editing this formula,\r\n    // give him additional info about stopping.\r\n    if (raw.openInDesigner && raw.stop === null)\r\n      console.log(`FYI: formula returned a promise. This automatically stops this formula from running again. If you want it to continue running, return stop: false`);\r\n    \r\n    // Check sleep state (new feat in v18 for Pickers (state/data))\r\n    // Unclear if this should be here in the promise handling...\r\n    const sleep = raw.sleep ?? false;\r\n    \r\n    // If result _contains_ a promise, add it to the queue\r\n    // Add promise to the queue / ensure callback handling ???\r\n    formula.promises$.next({ promise: raw.promise, sleep, completed: false });\r\n    this.#defineCallbackHandlerIfMissing(formula);\r\n\r\n    return l.end(`promise added, sleep: ${sleep}`);\r\n  }\r\n\r\n  /**\r\n   * Filter out formulas which shouldn't run because of promises. Rules are:\r\n   * - not stopped (this is not handled here, as it applies to non-promise formulas too)\r\n   * - has promise, but is sleeping so we don't want to run it until it has completed\r\n   * @param fieldName \r\n   * @param before \r\n   * @returns \r\n   */\r\n  public filterFormulas(fieldName: string, before: FormulaCacheItem[]) {\r\n    const l = this.log.fnIfInList('filterFormulas', 'fields', fieldName, { enabled: before });\r\n    const formulas = before.filter(f => {\r\n      const promise = f.promises$.value;\r\n      l.a(`hasPromise: ${!!promise}; completed: ${promise?.completed}; sleep: ${promise?.sleep}`);\r\n      return !promise || (promise.completed || !promise.sleep);\r\n    });\r\n    const msg = `🧪📊 beforeFilter: ${before.length}; formulas: ${formulas.length}; `;\r\n    return l.rSilent(formulas, msg);\r\n  }\r\n\r\n\r\n  /**\r\n   * Used for defining the callback handler for the promise if it doesn't already exist and filling queue for the next run.\r\n   * @param formula\r\n   * @param inputType\r\n   * @param entityGuid\r\n   */\r\n  #defineCallbackHandlerIfMissing(formula: FormulaCacheItem): void {\r\n    const entityGuid = this.#entityGuid;\r\n    const lcb = this.log.fnIfInList('defineCallbackHandlerIfMissing', 'fields', formula.fieldName, { formula, entityGuid }, formula.target);\r\n    if (formula.updateCallback$.value)\r\n      return lcb.end('callback already defined');\r\n\r\n    formula.updateCallback$.next((result: FieldValueOrResultRaw) => this.#promiseComplete(formula, result));\r\n  }\r\n\r\n  #promiseComplete(formula: FormulaCacheItem, result: FieldValueOrResultRaw): void {\r\n    const entityGuid = this.#entityGuid;\r\n    const l = this.log.fnIfInList('promiseComplete', 'fields', formula.fieldName, { result, formula, entityGuid }, formula.target);\r\n    const fieldName = formula.fieldName;\r\n    const raw = new FormulaValueCorrections(fieldName, formula.isValue, formula.inputType, false).v2(result);\r\n\r\n    // Make sure the cache contains this entry\r\n    const queue = this.#updateValueQueue;\r\n    const queueItem = queue[entityGuid] ??= new FormulaPromiseResult(entityGuid);      \r\n    const fieldQueue = queueItem.data[fieldName] ??= {\r\n      name: fieldName,\r\n      value: formula.isValue ? raw.value : undefined,\r\n      fields: [],\r\n      settings: {}\r\n    };\r\n\r\n    if (formula.isSetting) {\r\n      // New v18 settings are added to the field settings\r\n      l.a(\"formula promise settings\");\r\n      fieldQueue.settings ??= {};\r\n      fieldQueue.settings[formula.settingName] = raw.value;\r\n    }\r\n\r\n    if (raw.fields) {\r\n      l.a(\"formula promise fields\");\r\n      fieldQueue.fields.push(...raw.fields);\r\n    }\r\n\r\n    // new WIP\r\n    formula.stop = raw.stop ?? formula.stop;\r\n    formula.promiseCompleted = true;\r\n    l.end('promise complete, will retriggerFormulas', fieldQueue as unknown as Record<string, unknown>);\r\n    this.#fieldsSettingsService.retriggerFormulas('promise');\r\n  }\r\n\r\n  /**\r\n   * Used for updating values and cleaning settings from queue.\r\n   * @returns true if values were updated, false otherwise and new field props\r\n   */\r\n  public changesFromQueue(cycle: FieldsPropsEngineCycle): QueuedChanges {\r\n    // Get data from change queue and then flush, as we'll process it next and in case of errors we don't want to reprocess it\r\n    const toProcess = this.#updateValueQueue[this.#entityGuid];\r\n    this.#updateValueQueue[this.#entityGuid] = null;\r\n\r\n    // If nothing in the queue for this entity, exit early\r\n    if (toProcess == null || toProcess.data == null || Object.keys(toProcess.data).length === 0)\r\n      return { valueChanges: {}, newFieldProps: null };\r\n\r\n    // Updates to process/import\r\n    const dataEntries = Object.entries(toProcess.data);\r\n    const valuesArray = dataEntries.map(([name, field]) => ({ name, value: field.value }));\r\n    const values = valuesArray.reduce((acc, { name, value }) => {\r\n      acc[name] = value;\r\n      return acc;\r\n    }, {} as ItemValuesOfLanguage);\r\n\r\n    const fields = dataEntries\r\n      .filter(([_, field]) => field.fields.length > 0)\r\n      .map(([_, field]) => field.fields)\r\n      .flat();\r\n\r\n    const settings = dataEntries\r\n      .filter(([_, field]) => Object.keys(field.settings).length > 0)\r\n      .map(([name, field]) => ({ fieldName: name, settings: field.settings }));\r\n\r\n    // Handle values (of this field) and fields (values of other fields)\r\n    const modifiedValues = (Object.keys(values).length !== 0 || fields.length !== 0)\r\n      ? this.#modifiedChecker.getValueUpdates(cycle, fields, values)\r\n      : {};\r\n\r\n    // Handle settings\r\n    const contentType = this.#contentType();\r\n    let newFieldProps: Record<string, FieldProps> = null;\r\n    if (settings.length) {\r\n      newFieldProps = { ...cycle.fieldProps };\r\n      const itemAttributes = this.itemService.getItemAttributes(this.#entityGuid);\r\n      Object.values(settings).forEach(setting => {\r\n        const fieldName = setting.fieldName;\r\n        const settingsCurrent = cycle.fieldProps[fieldName]?.settings;\r\n        \r\n        let settingsNew: Partial<FieldSettings> = {};\r\n        Object.entries(setting.settings).forEach(([name, value]) => {\r\n          const target = SettingsFormulaPrefix + name;\r\n          settingsNew = FormulaSettingsHelper.keepSettingIfTypeOk(target, settingsCurrent, value, settingsNew);\r\n\r\n          const constantFieldPart = cycle.getFieldConstants(fieldName);\r\n          const attribute = contentType.Attributes.find(a => a.Name === fieldName);\r\n\r\n          // Prepare helper which the formula will need to verify if the field is visible\r\n          const setUpdHelper = cycle.updateHelper.create(fieldName, attribute, constantFieldPart, itemAttributes[fieldName]);\r\n\r\n          const mergedSettings = { ...settingsCurrent, ...settingsNew };\r\n          const updatedSettings = setUpdHelper.correctSettingsAfterChanges(mergedSettings, cycle.values[fieldName]);\r\n\r\n          newFieldProps[fieldName] = { ...newFieldProps[fieldName], settings: updatedSettings };\r\n        });\r\n\r\n      });\r\n    }\r\n\r\n    return { valueChanges: modifiedValues, newFieldProps };\r\n  }\r\n}\r\n\r\ninterface QueuedChanges {\r\n  /** value changes, may not be null */\r\n  valueChanges: ItemValuesOfLanguage,\r\n  newFieldProps: Record<string, FieldProps>\r\n}","import { FieldMetadataModel } from '../field-metadata.decorator';\r\n\r\n// Note: When creating new wrappers, do this\r\n// 1. Create the component\r\n// 2. Add it to the catalog above\r\n// 3. Make sure the class name is unique...\r\n// 4. ...and that i uses the name from the WrappersCatalog above\r\n// 5. Then also register it in the `InputComponents` list with the name and control\r\n// 6. If it should be applied to many controls, register in the `WrapperHelper` at the right place\r\n// ...otherwise add it as a `@FieldMetadata` to the field (remember that this only works on the entry component)\r\n\r\nexport const WrappersCatalog = {\r\n  AdamWrapper: 'app-adam-wrapper', // default\r\n  CollapsibleWrapper: 'app-collapsible-wrapper', // empty specific\r\n  DropzoneWrapper: 'app-dropzone-wrapper', // default\r\n  PickerExpandableWrapper: 'app-picker-expandable-wrapper', // entity specific\r\n  PickerPreviewWrapper: 'app-picker-preview-wrapper', // entity specific\r\n  ExpandableWrapper: 'app-expandable-wrapper', // default\r\n  HiddenWrapper: 'app-hidden-wrapper', // default\r\n  FeatureWarningWrapper: 'app-feat-warnings-wrapper', // default\r\n  HyperlinkDefaultExpandableWrapper: 'app-hyperlink-default-expandable-wrapper', // hyperlink specific\r\n  HyperlinkLibraryExpandableWrapper: 'app-hyperlink-library-expandable-wrapper', // hyperlink specific\r\n  DialogPopup: 'app-dialog-popup', // hyperlink specific\r\n  LocalizationWrapper: 'app-localization-wrapper', // default\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\nexport const WrappersLocalizationOnly: FieldMetadataModel = {\r\n  wrappers: [WrappersCatalog.LocalizationWrapper],\r\n};\r\n\r\n\r\n","import { Of } from '../../../../../../core';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsPickerMerged } from '../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { InputTypeHelpers } from '../../../shared/fields/input-type-helpers';\r\nimport { InputTypeSpecs } from '../../shared/input-types/input-type-specs.model';\r\nimport { WrappersCatalog } from './wrappers.constants';\r\n\r\nconst logThis = false;\r\n\r\nexport class WrapperHelper {\r\n\r\n  static getWrappers(settings: FieldSettings, inputTypeSpecs: InputTypeSpecs): Of<typeof WrappersCatalog>[] {\r\n    const inputType = inputTypeSpecs.inputType;\r\n\r\n    if (InputTypeHelpers.isMessage(inputType))\r\n      return [];\r\n\r\n    // Empty input type wrappers - in this case, exit early\r\n    if (InputTypeHelpers.isGroupStart(inputType))\r\n      return [WrappersCatalog.CollapsibleWrapper];\r\n\r\n    // Start with default wrappers for all controls\r\n    const wrappers: Of<typeof WrappersCatalog>[] = [\r\n      WrappersCatalog.HiddenWrapper\r\n    ];\r\n\r\n    // entity-default/string-dropdown wrappers\r\n    const inputsEntityOrStringDropdown: string[] = [\r\n      InputTypeCatalog.EntityDefault,\r\n      InputTypeCatalog.StringDropdownQuery,\r\n      InputTypeCatalog.EntityQuery,\r\n      InputTypeCatalog.EntityContentBlocks,\r\n      InputTypeCatalog.StringDropdown,\r\n      InputTypeCatalog.EntityPicker,\r\n      InputTypeCatalog.StringPicker,\r\n      InputTypeCatalog.NumberPicker,\r\n      // InputTypeCatalog.StringFontIconPicker,\r\n      // || (inputType === InputTypeConstants.WIPNumberPicker);\r\n    ];\r\n    const isEntityOrStringDropdownType = inputsEntityOrStringDropdown.includes(inputType);\r\n\r\n    if (isEntityOrStringDropdownType) {\r\n      // New ...\r\n      wrappers.push(WrappersCatalog.FeatureWarningWrapper);\r\n      // i18n\r\n      wrappers.push(WrappersCatalog.LocalizationWrapper);\r\n      const allowMultiValue = (settings as FieldSettings & FieldSettingsPickerMerged).AllowMultiValue ?? false;\r\n      if (allowMultiValue || inputType === InputTypeCatalog.EntityContentBlocks)\r\n        wrappers.push(WrappersCatalog.PickerExpandableWrapper);\r\n    }\r\n\r\n    // External components should always get these wrappers\r\n    if (inputTypeSpecs.isExternal)\r\n      wrappers.push(\r\n        WrappersCatalog.DropzoneWrapper,\r\n        WrappersCatalog.LocalizationWrapper,\r\n        WrappersCatalog.ExpandableWrapper,\r\n        WrappersCatalog.AdamWrapper,\r\n      );\r\n\r\n    return wrappers;\r\n  }\r\n\r\n}\r\n","import { FieldConstantsOfLanguage, FieldProps } from './fields-configs.model';\r\nimport { ItemValuesOfLanguage } from './item-values-of-language.model';\r\nimport { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { WrapperHelper } from '../fields/wrappers/wrapper.helper';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { FieldsPropsEngine } from './fields-properties-engine';\r\nimport { EavEntityAttributes } from '../shared/models/eav';\r\nimport { FieldSettingsUpdateHelperFactory } from './fields-settings-update.helpers';\r\nimport { classLog } from '../../shared/logging';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getCycleSettingsAndValues: false,\r\n  getLatestSettingsAndValues: false,\r\n}\r\n\r\nconst maxChangeCycles = 5;\r\n\r\n/**\r\n * Assistant helper to process / recalculate the value of fields and their settings.\r\n * \r\n * It should function as follows:\r\n * 1. The system initialized or something changed - the language, a value, a setting, etc.\r\n * 2. This triggers a recalculation of the fields and their settings.\r\n * 3. That kind of change can again re-trigger certain value updates, fields, settings - so it loops...\r\n * 4. ...until nothing changes - or a max-value has been achieved and it should stop to prevent infinite loops.\r\n * 5. This is then handed back to the ui / value services for propagation\r\n * 6. ...after this it should not run again until something changes anew...\r\n * \r\n * Note that as of now, this engine should be created and discarded on every cycle.\r\n */\r\nexport class FieldsPropsEngineCycle {\r\n  private log = classLog({FieldsPropsEngineCycle}, logSpecs);\r\n\r\n  constructor(\r\n    private engine: FieldsPropsEngine,\r\n    /** The values of the form - initialized here and to be updated until complete */\r\n    private readonly initialValues: ItemValuesOfLanguage,\r\n    /** The field props at start and during the calculation cycles (may be updated until complete) */\r\n    public fieldProps: Record<string, FieldProps>,\r\n    public allAttributes: EavEntityAttributes,\r\n    public updateHelper: FieldSettingsUpdateHelperFactory,\r\n    private fieldConstants: FieldConstantsOfLanguage[],\r\n  ) {\r\n    this.values = { ...initialValues };\r\n  }\r\n\r\n  public getFieldConstants(name: string) {\r\n    return this.fieldConstants.find(f => f.fieldName === name);\r\n  }\r\n\r\n  /**\r\n   * Get the current values of the fields, as they may update during the cycle\r\n   */\r\n  values: ItemValuesOfLanguage;\r\n\r\n  public getCycleSettingsAndValues(): PropsUpdate {\r\n    const l = this.log.fnIf('getCycleSettingsAndValues');\r\n\r\n    for (let i = 0; i < maxChangeCycles; i++) {\r\n      const cycle = this.#getLatestSettingsAndValues(i);\r\n      const mergedValues = { ...this.values, ...cycle.valueChanges };\r\n\r\n      // Quit if we have no more changes\r\n      if (isEqual(this.fieldProps, cycle.props) && isEqual(this.values, mergedValues)) {\r\n        l.a('No more changes, stable, exit');\r\n        break;\r\n      }\r\n\r\n      // Update state for next cycles\r\n      this.fieldProps = cycle.props;\r\n      this.values = mergedValues;\r\n    }\r\n\r\n    // figure out the final changes to propagate\r\n    const finalChanges = this.engine.modifiedChecker.getValueUpdates(this, [], this.values, this.initialValues);\r\n\r\n    return { valueChanges: finalChanges, props: this.fieldProps };\r\n  }\r\n\r\n  #getLatestSettingsAndValues(loopIndex: number): PropsUpdate {\r\n    const l = this.log.fnIf('getLatestSettingsAndValues', { loopIndex });\r\n\r\n    // 1. Detect first round as it has slightly different behavior\r\n    const isFirstRound = Object.keys(this.fieldProps).length === 0;\r\n\r\n    // 2. Process the queue of changes from promises if necessary\r\n    // If things change, we will exit because then the observable will be retriggered\r\n    if (!isFirstRound) {\r\n      const { valueChanges, newFieldProps } = this.engine.formulaPromises.changesFromQueue(this);\r\n\r\n      // If we only updated values from promise (queue), don't trigger property regular updates\r\n      if (newFieldProps) {\r\n        l.a('New field props from queue', { newFieldProps });\r\n        this.fieldProps = newFieldProps;\r\n      }\r\n      \r\n      // If any value changes then the entire cycle will automatically retrigger.\r\n      // So we exit now as the whole cycle will re-init and repeat.\r\n      if (Object.keys(valueChanges).length > 0) {\r\n        l.a('Value changes from queue', { valueChanges });\r\n        this.values = { ...this.values, ...valueChanges };\r\n      }\r\n    } else\r\n      l.a('First round, no queue to process');\r\n\r\n    // 3. Run formulas for all fields - as a side effect (not nice) will also get / init all field settings\r\n    // Note that in the case of promises being executed, the whole process will need to run again\r\n    // when the promises finish\r\n    const { fieldsProps: props, valueUpdates, fieldUpdates } = this.engine.formulaEngine.runAllFields(this.engine, this);\r\n\r\n    // 4. On first cycle, also make sure we have the wrappers specified as it's needed by the field creator; otherwise preserve previous\r\n    for (const [key, value] of Object.entries(props))\r\n      value.buildWrappers = isFirstRound\r\n        ? WrapperHelper.getWrappers(value.settings, value.constants.inputTypeSpecs)\r\n        : this.fieldProps[key]?.buildWrappers;\r\n\r\n    // 6.1 If we have value changes were applied\r\n    const modifiedValues = this.engine.modifiedChecker.getValueUpdates(this, fieldUpdates, valueUpdates);\r\n\r\n    return { valueChanges: modifiedValues, props: props };\r\n  }\r\n\r\n\r\n  /**\r\n   * Get latest/current valid field settings - if possible from cache\r\n   * if the currentLanguage changed then we need to flush the settings with initial ones that have updated language\r\n   */\r\n  getFieldSettingsInCycle(constFieldPart: FieldConstantsOfLanguage): FieldSettings {\r\n    const cached = this.fieldProps[constFieldPart.fieldName];\r\n    // if the currentLanguage changed then we need to flush the settings with initial ones that have updated language\r\n    const cachedStillValid = constFieldPart.language == cached?.language;\r\n    const result: FieldSettings = cachedStillValid\r\n      ? cached?.settings ?? { ...constFieldPart.settingsInitial }\r\n      : { ...constFieldPart.settingsInitial };\r\n    return result;\r\n  }\r\n}\r\n\r\ninterface PropsUpdate {\r\n  valueChanges: ItemValuesOfLanguage;\r\n  props: Record<string, FieldProps>;\r\n}","import { ItemIdentifierShared } from '../../shared/models/edit-form.model';\r\nimport { InputTypeHelpers } from '../../shared/fields/input-type-helpers';\r\nimport { FieldConstantsOfLanguage } from './fields-configs.model';\r\nimport { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { classLog } from '../../shared/logging';\r\n\r\n/**\r\n * Small helper to parse Item-Field-Visibility requirements from the URL.\r\n * This is to allow callers to specify which fields should be hidden.\r\n * For example, to make the edit-UI only open a specific WYSIWYG field and hide all other fields.\r\n */\r\nexport class ItemFieldVisibility {\r\n  private defaultIsShow = true;\r\n  private fields: Record<string, boolean> = null;\r\n\r\n  private log = classLog({ItemFieldVisibility});\r\n\r\n  constructor(identifier: ItemIdentifierShared) {\r\n    const l = this.log.fn('ctor', { identifier });\r\n    var fields = identifier.ClientData?.fields as string;\r\n    if (fields == null || fields == '') {\r\n      l.end('no fields specified');\r\n      return;\r\n    }\r\n    \r\n    // If the first character is a minus, then default is show all and just hide mentions\r\n    this.defaultIsShow = (fields[0] == '-');\r\n    if (this.defaultIsShow)\r\n      fields = fields.substring(1);\r\n    const ruleIsShow = !this.defaultIsShow;\r\n\r\n    this.fields = fields.toLowerCase().split(',')\r\n      .reduce((prev, f) => {\r\n        prev[f] = ruleIsShow;\r\n        return prev;\r\n      }, {} as Record<string, boolean>);\r\n    l.end('', { fields: this.fields, defaultIsShow: this.defaultIsShow });\r\n  }\r\n\r\n  hasRules(): boolean {\r\n    return this.fields != null;\r\n  }\r\n\r\n  isVisibleDisabled(fieldName: string): boolean {\r\n    const l = this.log.fn('isVisibleDisabled', { fieldName });\r\n\r\n    // check if we have no rules at all - in which case never override\r\n    if (!this.hasRules())\r\n      return l.r(false, 'no rules');\r\n\r\n    const override = this.fields[fieldName.toLowerCase()];\r\n    \r\n    return l.r(!(override ?? this.defaultIsShow));\r\n  }\r\n\r\n  static mergedVisible(settings: FieldSettings): boolean {\r\n    return settings.Visible && !settings.VisibleDisabled;\r\n  }\r\n\r\n  /**  Make sure that groups, which have a forced-visible-field are also visible */\r\n  makeParentGroupsVisible(allConstFieldParts: FieldConstantsOfLanguage[]) {\r\n    const l = this.log.fn('makeParentGroupsVisible', { allConstFieldParts });\r\n\r\n    if (!this.hasRules())\r\n      return l.r(allConstFieldParts, 'no rules, no changes');\r\n\r\n    // ATM in try-catch, to ensure we don't break anything\r\n    try {\r\n      allConstFieldParts.forEach((groupField, index) => {\r\n        // Only work on group-starts\r\n        if (!InputTypeHelpers.isGroupStart(groupField.inputTypeSpecs.inputType))\r\n          return;\r\n\r\n        // Ignore if visible-disabled is already ok\r\n        if (groupField.settingsInitial.VisibleDisabled == false)\r\n          return;\r\n\r\n        // Check if any of the following fields is forced visible - before another group-start/end\r\n        for (let i = index + 1; i < allConstFieldParts.length; i++) {\r\n          const innerField = allConstFieldParts[i];\r\n\r\n          // Stop checking the current group if we found another group start/end\r\n          if (InputTypeHelpers.endsPreviousGroup(innerField.inputTypeSpecs.inputType))\r\n            return;\r\n\r\n          if (innerField.settingsInitial.VisibleDisabled == false) {\r\n            l.a('Forced visible', { fieldName: groupField.fieldName, reason: innerField.fieldName });\r\n            groupField.settingsInitial.VisibleDisabled = false;\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.error('Error trying to set item field visibility', e);\r\n    }\r\n\r\n    return allConstFieldParts;\r\n  }\r\n}","import { Injectable, Signal } from '@angular/core';\r\nimport { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { classLog } from '../../shared/logging';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { DebugFields } from '../edit-debug';\r\nimport { FieldLogicManager } from '../fields/logic/field-logic-manager';\r\nimport { FormConfigService } from '../form/form-config.service';\r\nimport { EntityReader } from '../shared/helpers';\r\nimport { InputTypeService } from '../shared/input-types/input-type.service';\r\nimport { EavContentType, EavItem } from '../shared/models/eav';\r\nimport { FieldsSettingsHelpers } from './field-settings.helper';\r\nimport { FieldConstants, FieldConstantsOfLanguage } from './fields-configs.model';\r\nimport { FieldsSettingsService } from './fields-settings.service';\r\nimport { ItemFieldVisibility } from './item-field-visibility';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  stablePartsOfLanguage: false,\r\n  stablePartOfField: true,\r\n  constantPartsOfField: false,\r\n  constantFieldParts: false,\r\n  staticPartsOfField: false,\r\n  fields: [...DebugFields],\r\n}\r\n\r\n/**\r\n * Each instance is responsible for a single entity.\r\n */\r\n@Injectable()\r\nexport class FieldsSettingsConstantsService {\r\n\r\n  log = classLog({FieldsSettingsConstantsService}, logSpecs, true);\r\n\r\n  constructor(\r\n    private formConfig: FormConfigService,\r\n    private inputTypeSvc: InputTypeService,\r\n  ) { }\r\n\r\n  #fieldSettingsHelper = new FieldsSettingsHelpers(this.log.name);\r\n\r\n  init(\r\n    itemForIds: EavItem,\r\n    contentType: EavContentType,\r\n    entityReaderCurrent: Signal<EntityReader>,\r\n    labelReaderCurrent: Signal<EntityReader>,\r\n    fieldsSettingsSvc: FieldsSettingsService,\r\n  ): this {\r\n    this.#item = itemForIds;\r\n    this.#contentType = contentType;\r\n    this.#itemFieldVisibility = new ItemFieldVisibility(itemForIds.Header);\r\n    this.#entityReaderCurrent = entityReaderCurrent;\r\n    this.#labelReaderCurrent = labelReaderCurrent;\r\n    this.#fieldSettingsSvc = fieldsSettingsSvc;\r\n    return this;\r\n  }\r\n\r\n  #item: EavItem;\r\n  #itemFieldVisibility: ItemFieldVisibility;\r\n  #entityReaderCurrent: Signal<EntityReader>;\r\n  #labelReaderCurrent: Signal<EntityReader>;\r\n  #contentType: EavContentType;\r\n  #fieldSettingsSvc: FieldsSettingsService;\r\n\r\n  public stableDataOfLanguage() {\r\n    const guid = this.#item.Entity.Guid;\r\n    const id = this.#item.Entity.Id;\r\n    const typeNameId = this.#contentType.Id;\r\n    const constParts = this.#constantPartsOfField(guid, id, typeNameId);\r\n\r\n    return computedObj('stableDataOfLanguage',\r\n      () => this.#stablePartsOfLanguage(this.#entityReaderCurrent(), this.#labelReaderCurrent(), constParts)\r\n    );\r\n  }\r\n\r\n  #stablePartsOfLanguage(reader: EntityReader, labelReader: EntityReader, fieldConstants: FieldConstants[]) {\r\n    const contentType = this.#contentType;\r\n    const l = this.log.fnIf('stablePartsOfLanguage', { contentType, entityReader: reader });\r\n\r\n    const constPartOfLanguage = contentType.Attributes.map(attr => {\r\n      const fieldName = attr.Name;\r\n      const lInner = this.log.fnIfInList('stablePartOfField', 'fields', fieldName, { fieldName });\r\n\r\n      // Input Type config in the current language\r\n      const inputType = this.inputTypeSvc.get(attr.InputType);\r\n\r\n      // Construct the constants with settings and everything\r\n      // using the EntityReader with the current language\r\n      const merged = reader.flatten<FieldSettings>(attr.Metadata);\r\n\r\n      // If the user specified a preferred language for labels, use that\r\n      if (labelReader.current !== reader.current) {\r\n        const labelMerged = labelReader.flatten<FieldSettings>(attr.Metadata);\r\n        merged.Name = labelMerged.Name ?? merged.Name;\r\n        merged.Placeholder = labelMerged.Placeholder ?? merged.Placeholder;\r\n        merged.Notes = labelMerged.Notes ?? merged.Notes;\r\n      }\r\n\r\n      // Also integrate the generic (custom JSON injected field-settings)\r\n      const withGeneric = this.#fieldSettingsHelper.mergeGenericSettings(fieldName, merged);\r\n\r\n      // Sometimes the metadata doesn't have the input type (empty string), so we'll add the attribute.InputType just in case...\r\n      withGeneric.InputType = attr.InputType;\r\n      withGeneric.VisibleDisabled = this.#itemFieldVisibility.isVisibleDisabled(attr.Name);\r\n      const settingsInitial = this.#fieldSettingsHelper.getDefaultSettings(withGeneric);\r\n      const constantFieldParts: FieldConstantsOfLanguage = {\r\n        ...fieldConstants.find(c => c.fieldName === attr.Name),\r\n        settingsInitial,\r\n        inputTypeConfiguration: inputType,\r\n        language: reader.current,\r\n      };\r\n\r\n      return lInner.r(constantFieldParts);\r\n    });\r\n\r\n    const constPartsWithGroupVisibility = this.#itemFieldVisibility.makeParentGroupsVisible(constPartOfLanguage);\r\n\r\n    return l.r(constPartsWithGroupVisibility);\r\n  }\r\n\r\n  #constantPartsOfField(entityGuid: string, entityId: number, contentTypeNameId: string): FieldConstants[] {\r\n    const contentType = this.#contentType;\r\n    const l = this.log.fnIf('constantPartsOfField', { entityGuid, entityId, contentTypeNameId });\r\n    // Get the form languages - but we only need default & initial, so we don't have to observe\r\n    const language = this.formConfig.language();\r\n    \r\n    // When merging the \"constant\" metadata, the primary language must be the initial language, not the current\r\n    // as that contains all the relevant settings which should not be translated\r\n    const mdMerger = new EntityReader(language.initial, language.primary);\r\n\r\n    const allPickers = this.#fieldSettingsSvc.pickerData;\r\n    const eavConfig = this.formConfig.config;\r\n\r\n    l.a('shared across fields', { entityGuid, entityId, contentTypeNameId, language, allPickers });\r\n\r\n    const constFieldParts = contentType.Attributes.map((attr, index) => {\r\n      const fieldName = attr.Name;\r\n      const lInner = this.log.fnIfInList('constantFieldParts', 'fields', fieldName, { fieldName, index });\r\n      // metadata in the initial language with all the core settings - just for initialDisabled!\r\n      const metadata = mdMerger.flatten<FieldSettings>(attr.Metadata);\r\n      const initialSettings = this.#fieldSettingsHelper.getDefaultSettings(metadata);\r\n      const initialDisabled = initialSettings.Disabled ?? false;\r\n\r\n      const inputTypeSpecs = this.inputTypeSvc.getSpecs(attr);\r\n\r\n      lInner.a('details', { fieldName, contentType, language, attr, initialSettings, inputTypeSpecs });\r\n\r\n      const logic = FieldLogicManager.singleton().get(attr.InputType);\r\n\r\n      // Construct the constants / unchanging aspects of the field, no matter what language\r\n      const constants: FieldConstants = {\r\n        entityGuid,\r\n        entityId,\r\n        contentTypeNameId,\r\n        fieldName,\r\n        index,\r\n        dropzonePreviewsClass: `dropzone-previews-${eavConfig.formId}-${index}`,\r\n        initialDisabled,\r\n        inputTypeSpecs,\r\n        isLastInGroup: this.#fieldSettingsHelper.isLastInGroup(contentType, attr),\r\n        type: attr.Type,\r\n        logic,\r\n        pickerData: () => allPickers[fieldName] ?? null,\r\n      };\r\n\r\n      return lInner.r(constants);\r\n    });\r\n    return l.r(constFieldParts);\r\n  }\r\n\r\n}\r\n","import { Signal } from '@angular/core';\r\nimport { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { CustomJsonEditor } from 'projects/edit-types/src/FieldSettings-CustomJsonEditor';\r\nimport { FieldSettingsNumber } from 'projects/edit-types/src/FieldSettings-Number';\r\nimport { FieldSettingsPicker } from 'projects/edit-types/src/FieldSettings-Pickers';\r\nimport { Of } from '../../../../../../core';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsOptionsWip, FieldSettingsSharedSeparator } from '../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { AdamControl } from '../../fields/basic/hyperlink-library/hyperlink-library.models';\r\nimport { PickerData } from '../../fields/picker/picker-data';\r\nimport { convertValueToArray } from '../../fields/picker/picker.helpers';\r\nimport { FieldProps } from '../../state/fields-configs.model';\r\nimport { ItemFieldVisibility } from '../../state/item-field-visibility';\r\n\r\n\r\n/** Slightly enhanced standard Abstract Control with additional warnings */\r\nexport interface AbstractControlPro extends AbstractControl {\r\n  /**\r\n   * Object containing various warnings (or the object can also be null)\r\n   */\r\n  _warning?: ValidationErrors;\r\n}\r\n\r\n/** Validators here are copied from https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts */\r\nexport class ValidationHelpers {\r\n\r\n  static isRequired(settings: FieldSettings): boolean {\r\n    // hidden field can't be required\r\n    return this.#shouldIgnoreValidators(settings) ? false : settings.Required;\r\n  }\r\n\r\n  public static getValidators(specs: ValidationHelperSpecs, inputType: Of<typeof InputTypeCatalog>): ValidatorFn[] {\r\n    // TODO: merge all validators in a single function? Should be faster\r\n    const validators: ValidatorFn[] = [\r\n      inputType !== InputTypeCatalog.HyperlinkLibrary\r\n        ? this.#required(specs)\r\n        : this.#requiredAdam(specs),\r\n      this.#regEx(specs),\r\n      this.#decimals(specs),\r\n      this.#numberMin(specs),\r\n      this.#numberMax(specs),\r\n      this.#listMin(specs),\r\n      this.#listMax(specs),\r\n      this.#formulaValidate(specs),\r\n    ];\r\n    if (inputType === InputTypeCatalog.CustomJsonEditor)\r\n      validators.push(this.#jsonValidator(specs));\r\n    return validators;\r\n  }\r\n\r\n  static #ensureWarningsAndGetSettingsIfNoIgnore(control: AbstractControl, specs: ValidationHelperSpecs) {\r\n    const settings = specs.settings();\r\n    if (this.#shouldIgnoreValidators(settings)) return null;\r\n    return settings;\r\n  }\r\n\r\n  static #required(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const s = this.#ensureWarningsAndGetSettingsIfNoIgnore(control, specs);\r\n      if (s == null || !s.valueRequired) return null;\r\n      return Validators.required(control);\r\n    };\r\n  }\r\n\r\n  static #requiredAdam(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const s = this.#ensureWarningsAndGetSettingsIfNoIgnore(control, specs);\r\n      if (s == null || !s.valueRequired) return null;\r\n\r\n      return (control as AdamControl).adamItems === 0 ? { required: true } : null;\r\n    };\r\n  }\r\n\r\n  static #regEx(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const s = this.#ensureWarningsAndGetSettingsIfNoIgnore(control, specs);\r\n      if (s == null || !s.ValidationRegExJavaScript) return null;\r\n\r\n      return Validators.pattern(s.ValidationRegExJavaScript)(control);\r\n    };\r\n  }\r\n\r\n  static #decimals(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const s = this.#ensureWarningsAndGetSettingsIfNoIgnore(control, specs);\r\n      if (s?.Decimals == null || s.Decimals < 0) return null;\r\n      if (control.value == null) return null;\r\n\r\n      const matchString = s.Decimals === 0 ? `^-?[0-9]+$` : `^-?[0-9]+(\\.[0-9]{1,${s.Decimals}})?$`;\r\n      const matches = (control.value as number).toString().match(matchString);\r\n      return !matches ? { decimals: true } : null;\r\n    };\r\n  }\r\n\r\n  static #numberMin(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const s = this.#ensureWarningsAndGetSettingsIfNoIgnore(control, specs);\r\n      if (s?.Min == null) return null;\r\n\r\n      return Validators.min(s.Min)(control);\r\n    };\r\n  }\r\n\r\n  static #numberMax(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const s = this.#ensureWarningsAndGetSettingsIfNoIgnore(control, specs);\r\n      if (s?.Max == null) return null;\r\n\r\n      return Validators.max(s.Max)(control);\r\n    };\r\n  }\r\n\r\n  static #listMin(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const s = this.#ensureWarningsAndGetSettingsIfNoIgnore(control, specs);\r\n      if (s == null || s.AllowMultiMin == 0 || s.AllowMultiMin == undefined) return null;\r\n      return countValues(control, specs, s) < s.AllowMultiMin ? { minNoItems: s.AllowMultiMin } : null;\r\n    };\r\n  }\r\n\r\n  static #listMax(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const s = this.#ensureWarningsAndGetSettingsIfNoIgnore(control, specs);\r\n      if (s == null || s.AllowMultiMax == 0 || s.AllowMultiMax == undefined) return null;\r\n      return countValues(control, specs, s) > s.AllowMultiMax ? { maxNoItems: s.AllowMultiMax } : null;\r\n    };\r\n  }\r\n\r\n  static #jsonValidator(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControlPro): ValidationErrors | null => {\r\n      const settings = specs.settings();\r\n      let error: boolean;\r\n      let warning: boolean;\r\n      const jsonMode = (settings as FieldSettings & CustomJsonEditor).JsonValidation;\r\n\r\n      if (this.#shouldIgnoreValidators(settings) || jsonMode === 'none' || !control.value) {\r\n        error = false;\r\n        warning = false;\r\n      } else {\r\n        try {\r\n          JSON.parse(control.value);\r\n          error = false;\r\n          warning = false;\r\n        } catch {\r\n          if (jsonMode === 'strict') {\r\n            error = true;\r\n            warning = false;\r\n          } else if (jsonMode === 'light') {\r\n            error = false;\r\n            warning = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      control._warning = warning ? { jsonWarning: true } : null;\r\n      return error ? { jsonError: true } : null;\r\n    };\r\n  }\r\n\r\n  static #formulaValidate(specs: ValidationHelperSpecs): ValidatorFn {\r\n    return (control: AbstractControlPro): ValidationErrors | null => {\r\n      const formulaValidation = specs.props().formulaValidation;\r\n\r\n      const { error, warning } = (() => {\r\n        if (this.#shouldIgnoreValidators(specs.settings()) || formulaValidation == null)\r\n          return { error: false, warning: false };\r\n        if (formulaValidation.severity === 'error')\r\n          return { error: true, warning: false };\r\n        if (formulaValidation.severity === 'warning')\r\n          return { error: false, warning: true };\r\n        return { error: false, warning: false };\r\n      })();\r\n\r\n      control._warning = warning ? { formulaWarning: true, formulaMessage: formulaValidation.message } : null;\r\n      return error ? { formulaError: true, formulaMessage: formulaValidation.message } : null;\r\n    };\r\n  }\r\n\r\n  /** Hidden fields can't have validators */\r\n  static #shouldIgnoreValidators(settings: FieldSettings): boolean {\r\n    return !ItemFieldVisibility.mergedVisible(settings);\r\n  }\r\n}\r\n\r\nfunction countValues(control: AbstractControl, specs: ValidationHelperSpecs, s: FieldSettings & FieldSettingsOptionsWip & FieldSettingsSharedSeparator): number {\r\n  // If it is an array, return the length right away, since we don't need additional processing\r\n  if (Array.isArray(control.value))\r\n    return control.value.length;\r\n\r\n  // Picker Data - can be null in the first few cycles since it may not yet be initialized\r\n  const pd = specs.pickerData;\r\n  if (pd == null)\r\n    return convertValueToArray(control.value, s.Separator, false).length;\r\n\r\n  // PickerData SelectedAll will also contain an empty selected item if the field allows empty values\r\n  return pd.selectedAll().length;\r\n}\r\n\r\n\r\nexport class ValidationHelperSpecs {\r\n  constructor(\r\n    /** The Field Name */\r\n    public fieldName: string,\r\n    /** The Input Type */\r\n    public inputType: Of<typeof InputTypeCatalog>,\r\n    /** The settings, but must be re-cast so the system knows it has more properties */\r\n    settings: Signal<FieldSettings>,\r\n    /** The field properties an updated on every formula cycle */\r\n    public props: Signal<FieldProps>,\r\n    /** Delayed get pickers data */\r\n    private pickersGet: () => Record<string, PickerData>,\r\n  ) {\r\n    this.settings = settings as Signal<FieldSettings & FieldSettingsSharedSeparator & CustomJsonEditor & FieldSettingsNumber & FieldSettingsPicker & FieldSettingsOptionsWip>;\r\n  }\r\n\r\n  /** The settings cast in a way that it should have all relevant properties */\r\n  settings: Signal<FieldSettings & FieldSettingsSharedSeparator & CustomJsonEditor & FieldSettingsNumber & FieldSettingsPicker & FieldSettingsOptionsWip>;\r\n\r\n  /** Get the pickers for this field */\r\n  get pickerData(): PickerData {\r\n    return this.pickersGet()?.[this.fieldName] ?? null;\r\n  }\r\n}","export const MetadataDecorators = {\r\n  LanguagesDecorator: 'LanguagesDecorator',\r\n  SaveEmptyDecorator: 'SaveEmptyDecorator',\r\n} as const;\r\n","import { Signal } from '@angular/core';\r\nimport { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../edit-types/src/FieldValue';\r\nimport { classLog } from '../../shared/logging';\r\nimport { DebugFields } from '../edit-debug';\r\nimport { FieldLogicTools } from '../fields/logic/field-logic-tools';\r\nimport { FormLanguage } from '../form/form-languages.model';\r\nimport { FieldReader } from '../localization/field-reader';\r\nimport { EavContentTypeAttribute, EavEntity, EavField } from '../shared/models/eav';\r\nimport { ValidationHelpers } from '../shared/validation/validation.helpers';\r\nimport { FieldConstantsOfLanguage } from './fields-configs.model';\r\nimport { MetadataDecorators } from './metadata-decorators.constants';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  correctSettingsAfterChanges: true,\r\n  schemaDisablesTranslation: false,\r\n  getDisabledBecauseTranslations: false,\r\n  fields: [...DebugFields], // or '*' for all\r\n};\r\n\r\nexport class FieldSettingsUpdateHelperFactory {\r\n  log = classLog({FieldSettingsUpdateHelperFactory});\r\n  constructor(\r\n    // General & Content Type Info\r\n    private contentTypeMetadata: EavEntity[],\r\n    private language: FormLanguage,\r\n    /** set of configuration for running field logic - shared */\r\n    private fieldLogicTools: FieldLogicTools,\r\n    /** Info that the form is read-only */\r\n    private formReadOnly: boolean,\r\n    private slotIsEmpty: Signal<boolean>,\r\n  ) { }\r\n\r\n  create(\r\n    fieldName: string,\r\n    attribute: EavContentTypeAttribute,\r\n    constantFieldPart: FieldConstantsOfLanguage,\r\n    attributeValues: EavField<any>,\r\n  ): FieldSettingsUpdateHelper {\r\n    return new FieldSettingsUpdateHelper(\r\n      fieldName,\r\n      this.contentTypeMetadata,\r\n      this.language,\r\n      this.fieldLogicTools,\r\n      this.formReadOnly,\r\n      this.slotIsEmpty,\r\n      attribute,\r\n      constantFieldPart,\r\n      attributeValues,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Special helper to check if a field should remain disabled because of various language settings.\r\n * \r\n * Only used in formulas, after running formulas which modify settings.\r\n * \r\n * Each one is specific to a certain field, so you must create another object for every field you check.\r\n */\r\nexport class FieldSettingsUpdateHelper {\r\n\r\n  log = classLog({FieldSettingsUpdateHelper}, logSpecs);\r\n\r\n  constructor(\r\n    private fieldName: string,\r\n    // General & Content Type Info\r\n    private contentTypeMetadata: EavEntity[],\r\n    private language: FormLanguage,\r\n    /** set of configuration for running field logic - shared */\r\n    private fieldLogicTools: FieldLogicTools,\r\n    /** Info that the form is read-only */\r\n    private formReadOnly: boolean,\r\n    private formSlotIsEmpty: Signal<boolean>,\r\n\r\n    // Field specific info\r\n    private attribute: EavContentTypeAttribute,\r\n    private constantFieldPart: FieldConstantsOfLanguage,\r\n    private attributeValues: EavField<any>,\r\n  ) { }\r\n\r\n  /**\r\n   * Used for verifying and updating new settings.\r\n   * @param settings Latest/newest settings\r\n   * @param fieldValue\r\n   * @returns Corrected settings\r\n   */\r\n  correctSettingsAfterChanges(settings: FieldSettings, fieldValue: FieldValue): FieldSettings {\r\n    const l = this.log.fnIfInList('correctSettingsAfterChanges', 'fields', this.fieldName, () => ({ settings, fieldValue }));\r\n\r\n    const constantFieldPart = this.constantFieldPart;\r\n    const slotIsEmpty = this.formSlotIsEmpty();\r\n\r\n    // Why are we doing this?\r\n    settings.Name = settings.Name || this.attribute.Name;\r\n\r\n    settings.valueRequired = ValidationHelpers.isRequired(settings);\r\n    const disableTranslation = this.#schemaDisablesTranslation();\r\n\r\n    settings.DisableTranslation = slotIsEmpty || disableTranslation;\r\n    settings.uiDisabledInThisLanguage = this.#getDisabledBecauseTranslations(settings.DisableTranslation);\r\n\r\n    settings.uiDisabledForced = slotIsEmpty || settings.uiDisabledInThisLanguage || this.formReadOnly;\r\n\r\n    settings.uiDisabled = settings.uiDisabledForced || settings.Disabled;\r\n\r\n    settings.DisableAutoTranslation = constantFieldPart.settingsInitial.DisableAutoTranslation\r\n      || settings.DisableTranslation;\r\n\r\n    // Correct these fresh settings with FieldLogics of this field\r\n    const fixed = constantFieldPart.logic?.update({ fieldName: this.fieldName, settings: settings, value: fieldValue, tools: this.fieldLogicTools }) ?? settings;\r\n\r\n    return l.r(fixed);\r\n  }\r\n\r\n\r\n  /** Find if DisableTranslation is true in any setting and in any language */\r\n  #schemaDisablesTranslation(): boolean {\r\n    const l = this.log.fnIfInList('schemaDisablesTranslation', 'fields', this.fieldName);\r\n    const contentTypeMetadata = this.contentTypeMetadata;\r\n    const inputType = this.constantFieldPart.inputTypeConfiguration;\r\n    const attributeValues = this.attributeValues;\r\n    const attributeMetadata = this.attribute.Metadata;\r\n\r\n    // Disable translation if not allowed by the ContentType.\r\n    // This is configured using a LanguagesDecorator in ContentType.\r\n    const languagesDecorator = contentTypeMetadata.find(m => m.Type.Name === MetadataDecorators.LanguagesDecorator);\r\n    if (languagesDecorator?.Attributes.Enabled?.Values.some(v => v.Value === false))\r\n      return true;\r\n\r\n    // Disable translation if the input type says it can't be translated (e.g. Entity).\r\n    if (inputType?.DisableI18n)\r\n      return true;\r\n\r\n    // TODO: CHECK if this should be here - it's repeated below\r\n    if (!new FieldReader(attributeValues, this.language).hasPrimary)\r\n      return true;\r\n\r\n    // Disable translation if the Attribute Configuration says so.\r\n    // DisableTranslation is true in any language in @All, @String, @string-default, etc...\r\n    for (const attrMd of attributeMetadata ?? [])\r\n      if (attrMd.Attributes.DisableTranslation?.Values.some(v => v.Value === true))\r\n        return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  #getDisabledBecauseTranslations(disableTranslation: boolean): boolean {\r\n    const l = this.log.fnIfInList('getDisabledBecauseTranslations', 'fields', this.fieldName);\r\n    const attributeValues = this.attributeValues;\r\n    const language = this.language;\r\n    // On primary edit is never disabled by translations\r\n    // This is the only one we check \r\n    if (language.current === language.primary)\r\n      return l.r(false, 'enabled, primary language');\r\n\r\n    const fieldReader = new FieldReader(attributeValues, language);\r\n    // If translations are disabled, then it's disabled\r\n    // Only check this _after_ checking if we're in the primary language\r\n    if (disableTranslation)\r\n      return l.r(true, 'disabled, disableTranslation');\r\n    // If no value on primary, then it's disabled\r\n    if (!fieldReader.hasPrimary)\r\n      return l.r(true, 'disabled, no value on primary');\r\n    if (fieldReader.hasEditableValues)\r\n      return l.r(false, 'disabled, has editable value');\r\n    if (fieldReader.hasCurrentReadonly)\r\n      return l.r(true, 'enabled, has readonly value');\r\n    return l.r(true, 'enabled, no rule applies');\r\n  }\r\n}\r\n","import { FieldValue } from '../../../../../edit-types/src/FieldValue';\r\nimport { NameValuePair } from '../formulas/results/formula-results.models';\r\nimport { ItemValuesOfLanguage } from './item-values-of-language.model';\r\nimport { Signal } from '@angular/core';\r\nimport { EavContentType } from '../shared/models/eav/eav-content-type';\r\nimport { FieldValueHelpers } from '../shared/helpers/field-value.helpers';\r\nimport { FieldsPropsEngineCycle } from './fields-properties-engine-cycle';\r\nimport { classLog } from '../../shared/logging';\r\n\r\nexport class FieldsValuesModifiedHelper {\r\n  private log = classLog({FieldsValuesModifiedHelper});\r\n\r\n  constructor(\r\n    private contentType: Signal<EavContentType>,\r\n    private slotIsEmpty: Signal<boolean>,\r\n  ) { }\r\n\r\n\r\n  // NEW WIP\r\n  getValueUpdates(\r\n    cycle: FieldsPropsEngineCycle,\r\n    valueUpdatesFromSideEffects: NameValuePair[],\r\n    valueUpdates: ItemValuesOfLanguage,\r\n    originalValues?: ItemValuesOfLanguage\r\n  ): ItemValuesOfLanguage {\r\n    const contentType = this.contentType();\r\n    const slotIsEmpty = this.slotIsEmpty();\r\n\r\n    originalValues ??= cycle.values;\r\n    const fieldsProps = cycle.fieldProps;\r\n    const l = this.log.fn('getValueUpdates', { contentType, originalValues, fieldsProps, valueUpdates, valueUpdatesFromSideEffects, slotIsEmpty });\r\n\r\n    if (slotIsEmpty)\r\n      return l.r({}, 'Slot is empty, exit early');\r\n\r\n    const prep = contentType.Attributes\r\n      .map(attr => ({\r\n        name: attr.Name,\r\n        original: originalValues[attr.Name],\r\n      }))\r\n      // Only skip force disabled, not all disabled. If it's only disabled because the user shouldn't interact with it, we still want to update it.\r\n      .filter(p => p.original !== undefined && !fieldsProps[p.name]?.settings.uiDisabledForced)\r\n      .map(p => ({\r\n        ...p,\r\n        value: this.#findBestValue(p.name, valueUpdatesFromSideEffects, valueUpdates)\r\n      }))\r\n      .filter(p => p.value !== undefined && !FieldValueHelpers.fieldValuesAreEqual(p.original, p.value))\r\n\r\n\r\n    // Convert to object\r\n    const changes = prep.reduce((acc, p) => { acc[p.name] = p.value; return acc; }, {} as ItemValuesOfLanguage);\r\n    return l.rSilent(changes);\r\n  }\r\n\r\n  #findBestValue(fieldName: string, fieldsUpdates: NameValuePair[], valueUpdates: ItemValuesOfLanguage): FieldValue {\r\n    // First check if a formula had given a value as a side-effect of it's own calculation\r\n    // This is prioritized in case we have both,\r\n    // because it's very rare and it's usually something which resets another field\r\n    // In case we get many, we'll just keep the last one.\r\n    const sideEffects = fieldsUpdates.filter(f => f.name === fieldName);\r\n    const valSideEffect = sideEffects[sideEffects.length - 1]?.value; // findLast\r\n    if (valSideEffect != null)\r\n      return valSideEffect;\r\n\r\n    // If no value from formula, check if the field has a new value from a formula\r\n    return valueUpdates[fieldName];\r\n  }\r\n\r\n}","import { inject, Injectable, Signal } from '@angular/core';\r\nimport { transient } from '../../../../../core/transient';\r\nimport { classLog } from '../../shared/logging';\r\nimport { GlobalConfigService } from '../../shared/services/global-config.service';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FieldLogicTools } from '../fields/logic/field-logic-tools';\r\nimport { PickerData } from '../fields/picker/picker-data';\r\nimport { PickerDataFactory } from '../fields/picker/picker-data.factory';\r\nimport { FormConfigService } from '../form/form-config.service';\r\nimport { FormLanguage } from '../form/form-languages.model';\r\nimport { FormsStateService } from '../form/forms-state.service';\r\nimport { FormulaEngine } from '../formulas/formula-engine';\r\nimport { FormulaPromiseHandler } from '../formulas/promise/formula-promise-handler';\r\nimport { ContentTypeItemService } from '../shared/content-types/content-type-item.service';\r\nimport { EntityReader } from '../shared/helpers';\r\nimport { EavContentType, EavEntityAttributes, EavItem } from '../shared/models/eav';\r\nimport { FieldConstantsOfLanguage, FieldProps } from './fields-configs.model';\r\nimport { FieldsPropsEngineCycle } from './fields-properties-engine-cycle';\r\nimport { FieldsSettingsConstantsService } from './fields-settings-constants.service';\r\nimport { FieldSettingsUpdateHelperFactory } from './fields-settings-update.helpers';\r\nimport { FieldsSettingsService } from './fields-settings.service';\r\nimport { FieldsSignalsHelper } from './fields-signals.helper';\r\nimport { FieldsValuesModifiedHelper } from './fields-values-modified.helper';\r\nimport { ItemValuesOfLanguage } from './item-values-of-language.model';\r\nimport { ItemService } from './item.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  init: true,\r\n  getPickers: true,\r\n}\r\n/**\r\n * Assistant helper to process / recalculate the value of fields and their settings.\r\n * \r\n */\r\n@Injectable()\r\nexport class FieldsPropsEngine {\r\n  private log = classLog({FieldsPropsEngine}, logSpecs);\r\n\r\n  // Shared / inherited services\r\n  #formConfig = inject(FormConfigService);\r\n  #globalConfigService = inject(GlobalConfigService);\r\n  #formsStateService = inject(FormsStateService);\r\n  #contentTypeItemService = inject(ContentTypeItemService);\r\n  #itemService = inject(ItemService);\r\n\r\n  // Transient services for this instance only\r\n  #constantsService = transient(FieldsSettingsConstantsService);\r\n  #pickerFac = transient(PickerDataFactory);\r\n  public formulaEngine = transient(FormulaEngine);\r\n  public formulaPromises = transient(FormulaPromiseHandler);\r\n  \r\n  /** The item we're working on - needed by the formula engine */\r\n  public item: EavItem;\r\n\r\n  public modifiedChecker: FieldsValuesModifiedHelper;\r\n  #fieldsValues: FieldsSignalsHelper;\r\n\r\n  constructor() { }\r\n\r\n  /** Setup everything which won't change throughout cycles */\r\n  init(\r\n    fss: FieldsSettingsService,\r\n    entityGuid: string,\r\n    item: EavItem,\r\n    contentType: Signal<EavContentType>,\r\n    reader: Signal<EntityReader>,\r\n    labelReader: Signal<EntityReader>,\r\n    fieldsValues: FieldsSignalsHelper,\r\n    forceDebug: boolean | null = null\r\n  ): this {\r\n    this.log.extendName(`[${entityGuid.substring(0, 8)}]`);\r\n    const l = this.log.fnIf('init', { entityGuid, item, contentType, reader, forceDebug });\r\n    if (forceDebug != null) this.log.forceEnable(forceDebug);\r\n\r\n    this.item = item;\r\n    this.languages = reader();\r\n    this.#fieldsValues = fieldsValues;\r\n\r\n    const slotIsEmpty = this.#itemService.slotIsEmpty(entityGuid);\r\n    const ct = contentType();\r\n\r\n    this.pickerData = this.#pickerFac.createPickersForAttributes(ct.Attributes);\r\n    l.a('Pickers created', this.pickerData);\r\n\r\n    // Constant field parts which don't ever change.\r\n    // They can only be created once the inputTypes and contentTypes are available\r\n    this.#fieldLangConstants = this.#constantsService\r\n      .init(item, ct, reader, labelReader, fss)\r\n      .stableDataOfLanguage();\r\n\r\n    this.#updateHelper = this.#getPreparedParts(reader, ct, slotIsEmpty);\r\n\r\n    this.modifiedChecker = new FieldsValuesModifiedHelper(contentType, slotIsEmpty);\r\n    this.formulaPromises.init(entityGuid, contentType, fss, this.modifiedChecker);\r\n    this.formulaEngine.init(entityGuid, item.Header, fss, this.formulaPromises, ct, fss.contentTypeSettings()._itemTitle);\r\n\r\n    this.#itemAttributes = this.#itemService.itemAttributesSignal(entityGuid);\r\n    return this;\r\n  }\r\n\r\n  #updateHelper: Signal<FieldSettingsUpdateHelperFactory>;\r\n\r\n  /**\r\n   * Constant field parts which don't ever change.\r\n   * They can only be created once the inputTypes and contentTypes are available\r\n   */\r\n  #fieldLangConstants: Signal<FieldConstantsOfLanguage[]>;\r\n\r\n  #itemAttributes: Signal<EavEntityAttributes>;\r\n\r\n  pickerData: Record<string, PickerData>;\r\n\r\n  /**\r\n   * The languages used in the form, for retrieving various things during the calculation.\r\n   */\r\n  languages: FormLanguage;\r\n\r\n  /**\r\n   * The current cycle of updating the properties.\r\n   * Will be reset every time a new round starts.\r\n   */\r\n  cycle: FieldsPropsEngineCycle;\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {ItemValuesOfLanguage} initialValues The values of the form - initialized here and to be updated until complete\r\n   * @param {Record<string, FieldProps>} fieldProps The field props at start and during the calculation cycles (may be updated until complete)\r\n   * @return {*}  {PropsUpdate}\r\n   * @memberof FieldsPropsEngine\r\n   */\r\n  public getLatestSettingsAndValues(fieldProps: Record<string, FieldProps>): Record<string, FieldProps> {  \r\n    const l = this.log.fn('getLatestSettingsAndValues');\r\n\r\n    const initialValues = this.#fieldsValues.values();\r\n\r\n    this.languages = this.#formConfig.language();\r\n\r\n    // These should only be accessed here, so the signal is only depended on once!\r\n    // All this should never change during the cycle\r\n    const attributes = this.#itemAttributes();\r\n    const updateHelper = this.#updateHelper();\r\n    const fieldLangConstants = this.#fieldLangConstants();\r\n\r\n    this.cycle = new FieldsPropsEngineCycle(this, initialValues, fieldProps, attributes, updateHelper, fieldLangConstants);\r\n    const cycleResult = this.cycle.getCycleSettingsAndValues();\r\n\r\n    // figure out the final changes to propagate\r\n    // const finalChanges = this.modifiedChecker.getValueUpdates(this.cycle, [], cycleResult.valueChanges, initialValues);\r\n\r\n    return cycleResult.props;\r\n  }\r\n\r\n  /**\r\n   * Prepare / build FieldLogicTools for use in all the formulas / field settings updates\r\n   */\r\n  #getPreparedParts(readerSig: Signal<EntityReader>, contentType: EavContentType, slotIsEmpty: Signal<boolean>): Signal<FieldSettingsUpdateHelperFactory> {\r\n    // Prepare / build FieldLogicTools for use in all the formulas / field settings updates\r\n    const prepared = computedObj('prepared-parts', () => {\r\n      const reader = readerSig(); // must be as a signal, so a language change triggers an update\r\n      const languages = reader;\r\n      const isDebug = this.#globalConfigService.isDebug();\r\n      const isReadOnly = this.#formsStateService.readOnly();\r\n\r\n        // Logic Tools are needed when checking for settings defaults etc.\r\n        const logicTools: FieldLogicTools = {\r\n          eavConfig: this.#formConfig.config,\r\n          reader: reader,\r\n          debug: isDebug,\r\n          contentTypeItemSvc: this.#contentTypeItemService,\r\n        };\r\n        // This factory will generate helpers to validate settings updates\r\n        const updHelperFactory = new FieldSettingsUpdateHelperFactory(\r\n          contentType.Metadata,\r\n          languages, // for languages current, default, initial\r\n          logicTools,\r\n          isReadOnly.isReadOnly,\r\n          slotIsEmpty,\r\n        );\r\n        return updHelperFactory;\r\n    });\r\n    return prepared;\r\n  }\r\n\r\n}\r\n","import { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { Signal } from '@angular/core';\r\nimport { FieldProps } from './fields-configs.model';\r\nimport { classLog } from '../../shared/logging';\r\n\r\n/**\r\n * Manage \"manual\" / forced updates of fields properties\r\n */\r\nexport class FieldsPropertiesUpdates {\r\n  \r\n  log = classLog({FieldsPropertiesUpdates});\r\n\r\n  constructor(private entityGuid: string) {\r\n    this.log.extendName(`[${entityGuid.substring(0, 8)}]`);\r\n  }\r\n\r\n  fieldPropsMixins: Record<string, Partial<FieldSettings>> = {};\r\n\r\n  hasChanges(): boolean {\r\n    return Object.keys(this.fieldPropsMixins).length > 0;\r\n  }\r\n\r\n  /**\r\n   * Modify a setting, ATM just to set collapsed / dialog-open states.\r\n   * Note that this change won't fire the formulas - which may not be correct.\r\n   */\r\n  updateSetting(fieldName: string, update: Partial<FieldSettings>, source: string, fieldsProps: Signal<Record<string, FieldProps>>): void {\r\n    const queueWasEmpty = Object.keys(this.fieldPropsMixins).length === 0;\r\n    const l = this.log.fn('updateSetting', { source, fieldName, update, queueWasEmpty });\r\n    // Test if the update is a change, or if it's the same as the current value\r\n    const before = fieldsProps()[fieldName].settings;\r\n    const after = { ...before, ...update };\r\n    if (isEqual(before, after))\r\n      return l.end(`no change; entityGuid: ${this.entityGuid}; fieldName: ${fieldName}`);\r\n    // Add change to queue, but mix with previous changes in queue.\r\n    const prev = this.fieldPropsMixins[fieldName] ?? {};\r\n    this.fieldPropsMixins[fieldName] = { ...prev, ...update };\r\n    \r\n    l.end('added to queue', { before, after, update });\r\n  }\r\n\r\n  mergeMixins(before: Record<string, FieldProps>): Record<string, FieldProps> {\r\n    const l = this.log.fn('mergeMixins', { before, mixins: this.fieldPropsMixins });\r\n    const mixins = this.fieldPropsMixins;\r\n    if (Object.keys(mixins).length === 0)\r\n      return before;\r\n\r\n    const final = Object.keys(mixins).reduce((acc, key) => {\r\n      const ofField = acc[key];\r\n      const update = mixins[key];\r\n      return {\r\n        ...acc,\r\n        [key]: {\r\n          ...ofField,\r\n          settings: { ...ofField.settings, ...update }\r\n        }\r\n      };\r\n    }, before);\r\n\r\n    this.fieldPropsMixins = {};\r\n    return l.r(final, `merged`);\r\n  }\r\n}","import { effect, Signal } from '@angular/core';\r\nimport { FieldProps } from './fields-configs.model';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { classLog } from '../../shared/logging';\r\nimport { PickerData } from '../fields/picker/picker-data';\r\nimport { PickerItem } from '../fields/picker/models/picker-item.model';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  startSync: true,\r\n  filterRelevant: true,\r\n  transferPickerData: true,\r\n};\r\n\r\n/**\r\n * Simple helper in charge of updating the picker data in the updated/calculated field settings.\r\n */\r\nexport class FieldSettingsPickerUpdater {\r\n\r\n  log = classLog({FieldSettingsPickerUpdater}, logSpecs);\r\n\r\n  constructor() {} \r\n  \r\n  startSync(source: Signal<Record<string, FieldProps> | null>) {\r\n    const l = this.log.fnIf('startSync', { source });\r\n\r\n    // Only Options to transfer, with change detection on the signal to not fire the effect unnecessarily\r\n    const optsOnly = computedObj('optsOnly', () =>  this.#filterRelevant(source(), 'opts'));\r\n\r\n    // Only Selected to transfer, with change detection on the signal to not fire the effect unnecessarily\r\n    const selOnly = computedObj('selOnly', () => this.#filterRelevant(source(), 'sel'));\r\n\r\n    // Options-Transfer\r\n    effect(() => this.#transferPickerData(optsOnly(), 'opts'), { allowSignalWrites: true });\r\n\r\n    // Selected-Transfer\r\n    effect(() => this.#transferPickerData(selOnly(), 'sel'), { allowSignalWrites: true });\r\n\r\n    l.end();\r\n  }\r\n\r\n  #filterRelevant(update: Record<string, FieldProps>, part: 'opts' | 'sel'): DataToTransfer[] {\r\n    // Make sure we already have data.\r\n    if (!update) return [];\r\n\r\n    // Transfer picker data\r\n    // 1. find all fieldProps with picker data and transfer to pickerData\r\n    const toTransfer = Object.entries(update)\r\n      .filter(([_, v]) => v[part]?.list)\r\n      .map(([field, v]) => ({\r\n        field,\r\n        list: v[part].list,\r\n        pickerData: v.constants.pickerData\r\n      } as const));\r\n\r\n    const l = this.log.fnIf('filterRelevant', { count: toTransfer.length, toTransfer }, part);\r\n    return l.rSilent(toTransfer);\r\n  }\r\n\r\n  /** Transfer picker data */\r\n  #transferPickerData(update: DataToTransfer[], part: 'opts' | 'sel'): void {\r\n    if (!update.length) return;\r\n    const l = this.log.fnIf('transferPickerData', { count: update.length, toTransfer: update }, `🧪🔁${part}`);\r\n\r\n    for (const { field, list, pickerData } of update) {\r\n      l.a('Transfer', { field, list });\r\n      const pd = pickerData();\r\n      const target = part == 'opts' ? pd.optionsOverride : pd.selectedOverride;\r\n      target.set(list);\r\n    }\r\n  }\r\n\r\n}\r\n\r\ninterface DataToTransfer {\r\n  field: string,\r\n  list: PickerItem[],\r\n  pickerData: () => PickerData | null\r\n}","import arrayEach from './_arrayEach.js';\nimport baseCreate from './_baseCreate.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\nimport getPrototype from './_getPrototype.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isTypedArray from './isTypedArray.js';\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nexport default transform;\n","import { effect, Injectable, Signal } from '@angular/core';\r\nimport { FieldValue } from '../../../../../edit-types/src/FieldValue';\r\nimport { difference } from '../../shared/helpers/difference';\r\nimport { classLog } from '../../shared/logging';\r\nimport { ComputedCacheHelper } from '../../shared/signals/computed-cache';\r\nimport { computedObj, signalObj } from '../../shared/signals/signal.utilities';\r\nimport { EntityReader } from '../shared/helpers';\r\nimport { EavEntityAttributes } from '../shared/models/eav';\r\nimport { ItemService } from './item.service';\r\n\r\nconst logSpecs = {\r\n  logChanges: false,\r\n};\r\n\r\n@Injectable()\r\nexport class FieldsSignalsHelper {\r\n\r\n  log = classLog({FieldsSignalsHelper}, logSpecs);\r\n\r\n  constructor(private itemSvc: ItemService) {\r\n    if (this.log.specs.logChanges) {\r\n      const lChange = classLog('FieldValues');\r\n      lChange.a('will log value changes');\r\n      let before: Record<string, FieldValue> = {};\r\n      effect(() => {\r\n        const guid = this.#itemGuid();\r\n        if (!guid) return lChange.a('no guid');\r\n        const all = this.values();\r\n        const changes = difference(all, before);\r\n        before = all;\r\n        lChange.a(`changed on guid: ${guid}`, changes);\r\n      });\r\n    }\r\n  }\r\n\r\n  #reader: Signal<EntityReader>;\r\n  #itemGuid = signalObj<string>('itemGuid', null);\r\n\r\n  init(itemGuid: string, reader: Signal<EntityReader>): this {\r\n    this.#itemGuid.set(itemGuid);\r\n    this.#fieldValueSigCache = new ComputedCacheHelper(itemGuid);\r\n    this.#reader = reader;\r\n    const attributes = this.itemSvc.itemAttributesSignal(itemGuid);\r\n    if (attributes == null)\r\n      console.error('item-entity-attributes is null');\r\n\r\n    this.#attributesLazy.set(attributes);\r\n    return this;\r\n  }\r\n\r\n  #attributesLazy = signalObj<Signal<EavEntityAttributes>>('attributesLazy', null);\r\n\r\n  get values(): Signal<Record<string, FieldValue>> {\r\n    const lGet = this.log.fn('get-values', { itemGuid: this.#itemGuid });\r\n    if (this.#values != null)\r\n      return lGet.rSilent(this.#values, 'cached');\r\n\r\n    const sig = this.#createValuesSignal();\r\n    this.#values = sig;\r\n    return lGet.rSilent(this.#values, 'generated');\r\n  }\r\n  #values: Signal<Record<string, FieldValue>>;\r\n\r\n  #createValuesSignal() {\r\n    const sig = computedObj(`${this.#itemGuid().substring(0, 8)}-ALL`, () => {\r\n      const l = this.log.fn('values');\r\n\r\n      // Track dependencies early\r\n      const reader = this.#reader();\r\n      const attrSig = this.#attributesLazy();\r\n\r\n      if (attrSig == null)\r\n        return l.r({}, 'attributes is null');\r\n\r\n      const attributes = attrSig();\r\n      if (!attributes || Object.keys(attributes).length == 0)\r\n        return l.r({}, 'attributes is empty');\r\n\r\n      const values = reader.currentValues(attributes);\r\n      return values\r\n    });\r\n    return sig;\r\n  }\r\n\r\n\r\n  get(field: string): Signal<FieldValue> {\r\n    const l = this.log.fn('get', { field });\r\n    const sig = this.#fieldValueOrNullSignal(field);\r\n    return l.rSilent(sig);\r\n  }\r\n\r\n  #fieldValueSigCache: ComputedCacheHelper<string, FieldValue>;\r\n\r\n  #fieldValueOrNullSignal(fieldName: string): Signal<FieldValue> {\r\n    // TODO: REFACTOR - TO USE THE new value signal\r\n\r\n    const l = this.log.fn('#fieldValueOrNullSignal', { fieldName });\r\n    const sig = this.#fieldValueSigCache.getOrCreateWithInfo(fieldName, () => {\r\n      // Do we already have attributes?\r\n      const attrSig = this.#attributesLazy();\r\n      if (attrSig == null)\r\n        return null;\r\n\r\n      const attributes = attrSig();\r\n      if (!attributes || Object.keys(attributes).length == 0)\r\n        return null;\r\n\r\n      const attribute = attributes[fieldName];\r\n      const values = attribute?.Values;\r\n      if (values == null || values.length == 0)\r\n        return null;\r\n\r\n      const value = this.#reader().getBestValue(attribute);\r\n      return value as FieldValue;\r\n    });\r\n    return l.rSilent(sig.signal, `isNew: ${sig.isNew}`);\r\n  }\r\n\r\n}","import isEqual from 'lodash-es/isEqual';\r\nimport isObject from 'lodash-es/isObject';\r\nimport transform from 'lodash-es/transform';\r\n// https://gist.github.com/Yimiprod/7ee176597fef230d1451?permalink_comment_id=2569085\r\n\r\n/**\r\n * This code is licensed under the terms of the MIT license\r\n *\r\n * Deep diff between two object, using lodash\r\n * @param  {Object} object Object compared\r\n * @param  {Object} base   Object to compare with\r\n * @return {Object}        Return a new object who represent the diff\r\n */\r\nexport function difference(object: any, base: any) {\r\n  function changes(object: any, base: any) {\r\n    return transform(object, function (result: Record<string, any>, value, key) {\r\n      if (!isEqual(value, base[key])) {\r\n        result[key] = (isObject(value) && isObject(base[key])) ? changes(value, base[key]) : value;\r\n      }\r\n    });\r\n  }\r\n  return changes(object, base);\r\n}\r\n","import { computed, effect, inject, Injectable, signal, Signal, WritableSignal } from '@angular/core';\r\nimport { transient } from '../../../../../core';\r\nimport { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { classLog } from '../../shared/logging';\r\nimport { UserLanguageService } from '../../shared/services/user-language.service';\r\nimport { ComputedAnalyzer } from '../../shared/signals/computed-analyzer';\r\nimport { ComputedCacheHelper } from '../../shared/signals/computed-cache';\r\nimport { computedObj, signalObj } from '../../shared/signals/signal.utilities';\r\nimport { PickerData } from '../fields/picker/picker-data';\r\nimport { FormConfigService } from '../form/form-config.service';\r\nimport { FormLanguageService } from '../form/form-language.service';\r\nimport { TranslationState } from '../localization/translate-state.model';\r\nimport { ContentTypeService } from '../shared/content-types/content-type.service';\r\nimport { ContentTypeSettingsHelpers, EntityReader } from '../shared/helpers';\r\nimport { EavItem } from '../shared/models/eav';\r\nimport { FieldProps } from './fields-configs.model';\r\nimport { FieldsPropsEngine } from './fields-properties-engine';\r\nimport { FieldsPropertiesUpdates } from './fields-properties-updates';\r\nimport { FieldSettingsPickerUpdater } from './fields-settings-picker-updater';\r\nimport { FieldsSignalsHelper } from './fields-signals.helper';\r\nimport { ItemService } from './item.service';\r\n\r\nconst logSpecs = {\r\n  effectTransferPickerData: true,\r\n  regenerateProps: true,\r\n  // Debug only on the following content type\r\n  type: '', //'@String';\r\n  activateAnalyzer: false,\r\n}\r\n\r\nconst maxCyclesMs = 250;\r\nconst maxCycleRestartDelay = 500;\r\nconst maxCyclesPerTime = 10;\r\nconst maxCyclesWarning = \"Max cycles reached, stopping for this second\";\r\n\r\n/**\r\n * FieldsSettingsService is responsible for handling the settings, values and validations of fields.\r\n * Each instance is responsible for a single entity.\r\n */\r\n@Injectable()\r\nexport class FieldsSettingsService {\r\n\r\n  log = classLog({FieldsSettingsService}, logSpecs);\r\n\r\n  // Shared / inherited services\r\n  #languageSvc = inject(FormLanguageService);\r\n  #formConfig = inject(FormConfigService);\r\n  #contentTypeSvc = inject(ContentTypeService);\r\n  #itemSvc = inject(ItemService);\r\n  #usrLangSvc = inject(UserLanguageService);\r\n\r\n  // Transient services for this instance only\r\n  #propsEngine = transient(FieldsPropsEngine);\r\n\r\n  #pickerSync = new FieldSettingsPickerUpdater();\r\n\r\n  constructor() {\r\n\r\n    // Signal to combine startSync and computed allProps\r\n    const allPropsOrNull = computedObj<Record<string, FieldProps> | null>('allPropsOrNull', () => this.#startSync() && this.#allProps());\r\n\r\n    // Transfer changes to the props state to the public property\r\n    effect(\r\n      () => {\r\n        const update = allPropsOrNull();\r\n        if (!update) return;\r\n        this.allProps.set(update);\r\n      },\r\n      { allowSignalWrites: true }\r\n    );\r\n\r\n    // Start the picker sync\r\n    this.#pickerSync.startSync(allPropsOrNull);\r\n  }\r\n\r\n  //#region injected services, constructor, clean-up\r\n\r\n  disableForCleanUp(): void {\r\n    this.log.fn('cleanUp');\r\n    this.#disabled.set(true);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  /**\r\n   * Field properties of all fields.\r\n   * It is updated when every round of change-cycles are complete and stable.\r\n   */\r\n  public allProps = signalObj<Record<string, FieldProps>>('allProps', {});\r\n  #startSync = signal(false);\r\n  #allProps: Signal<Record<string, FieldProps>>;\r\n\r\n  /** Signal to force a refresh. */\r\n  #forceRefresh = signalObj('forceRefresh', 0);\r\n\r\n  /** Signal to disable everything. Mainly on clean-up, as the computed will still run when data is removed from cache */\r\n  #disabled = signalObj('disabled', false);\r\n\r\n  #fieldsPropsUpdate: FieldsPropertiesUpdates;\r\n\r\n  #reader = this.#languageSvc.getEntityReader(this.#formConfig.config.formId);\r\n  #labelReader = computedObj('labelReader', () => {\r\n    // Watch the reader, so it will update when the reader changes\r\n    const reader = this.#reader();\r\n\r\n    // Now first check if the user has a language set, and if so, use that.\r\n    const lblLang = this.#usrLangSvc.getLabel();\r\n    if (!lblLang)\r\n      return reader;\r\n    \r\n    const customLng = { current: lblLang, primary: reader.primary };\r\n    const userReader = new EntityReader(customLng);\r\n    return userReader;\r\n  });\r\n\r\n  //#region Item and content-type\r\n\r\n  /** The item - set on init, used for many other computations */\r\n  #item = signal<EavItem>(null);\r\n\r\n  #contentType = computed(() => (!this.#item()) ? null : this.#contentTypeSvc.getContentTypeOfItem(this.#item()));\r\n\r\n  /** The settings of the content-type of this item */\r\n  public contentTypeSettings = computed(() => !this.#item()\r\n    ? null\r\n    : ContentTypeSettingsHelpers.getDefaultSettings(this.#labelReader(), this.#contentType(), this.#item().Header)\r\n  );\r\n\r\n  //#endregion\r\n\r\n  /** Signals for each field value */\r\n  #fieldValues = transient(FieldsSignalsHelper);\r\n\r\n  /** Start the observables etc. to monitor changes */\r\n  init(entityGuid: string): void {\r\n\r\n    const item = this.#itemSvc.get(entityGuid);\r\n    this.#item.set(item);\r\n    this.#fieldsPropsUpdate = new FieldsPropertiesUpdates(entityGuid);\r\n\r\n    // Remember content-type, as it won't change and we don't need to listen to a signal\r\n    const ct = this.#contentType();\r\n    const debugOnlyCt = this.log.specs.type;\r\n    const forceDebug = debugOnlyCt === null ? null : ct.Id === debugOnlyCt;\r\n    if (forceDebug !== null) {\r\n      this.log.a(`Set debug for content type '${ct.Id}' to ${forceDebug}, only debugging ${debugOnlyCt}`);\r\n      this.log.forceEnable(forceDebug);\r\n    }\r\n\r\n    const slotIsEmpty = this.#itemSvc.slotIsEmpty(entityGuid);\r\n    this.#fieldValues.init(entityGuid, this.#reader);\r\n    this.#propsEngine.init(this, entityGuid, item, this.#contentType, this.#reader, this.#labelReader, this.#fieldValues, forceDebug);\r\n\r\n    // properties for the computation - set on an object, so we can do the call in a function\r\n    // and change what we'll do with it.\r\n    const deps: Deps = {\r\n      idMsg: `entityGuid: ${entityGuid}; contentTypeId: ${ct.Id};`,\r\n      cycle: 0,\r\n      analyzer: null as ComputedAnalyzer<Record<string, FieldProps>>,\r\n      disabled: this.#disabled,\r\n      slotIsEmpty,\r\n      slotWasEmpty: false, // must start false, so it will certainly run once.\r\n      forceRefresh: this.#forceRefresh,\r\n      watchRestart: signal(0),\r\n      prevFieldProps: {} as Record<string, FieldProps>,\r\n      hasRunOnce: false,\r\n    } satisfies Deps;\r\n    \r\n    // Protect against infinite loops\r\n    setInterval(() => {\r\n      // If we ran into a max-count, we should reset and trigger the watchRestart\r\n      if (deps.cycle > maxCyclesPerTime)\r\n        setTimeout(() => {\r\n          this.log.a(`restarting max cycles from ${deps.cycle}; ${deps.idMsg}`);\r\n          return deps.watchRestart.update(v => v + 1);\r\n        }, maxCycleRestartDelay);\r\n      // Every interval, reset the cycle count\r\n      deps.cycle = 0;\r\n    }, maxCyclesMs);\r\n\r\n    // This computed will contain all the updated field properties\r\n    this.#allProps = computedObj('allFieldProps', () => this.#regenerateProps(deps));\r\n\r\n    // Start Analyzer if necessary\r\n    if (this.log.specs.activateAnalyzer)\r\n      deps.analyzer = new ComputedAnalyzer(this.#allProps);\r\n\r\n    this.#startSync.set(true);\r\n  }\r\n\r\n  #regenerateProps(deps: Deps): Record<string, FieldProps> {\r\n    if (deps.analyzer)\r\n      console.log('analyzer', { fieldProps: this.allProps }, deps.analyzer.snapShotProducers(true));\r\n\r\n    const l = this.log.fnIf('regenerateProps', { cycle: deps.cycle, props: this.allProps }, deps.idMsg);\r\n    // If disabled for any reason, return the previous value (but do make sure there is a previous value)\r\n    // The #disabled is a safeguard as data will be missing when this is being cleaned up.\r\n    // The #slotIsEmpty means that the current entity is not being edited and will not be saved; can change from cycle to cycle.\r\n    const slotIsEmpty = deps.slotIsEmpty();\r\n    const justReuse = this.#disabled() || (slotIsEmpty && slotIsEmpty == deps.slotWasEmpty);\r\n    if (justReuse && deps.hasRunOnce)\r\n      return l.r(deps.prevFieldProps, 'disabled or slotIsEmpty');\r\n    else {\r\n      deps.hasRunOnce = true;\r\n      deps.slotWasEmpty = slotIsEmpty;\r\n    }\r\n\r\n    // Listen to ForceRefresh. This is triggered by a) promise-completed messages and b) v1 formulas\r\n    this.#forceRefresh();\r\n\r\n    // If we have reached the max cycles, we should stop\r\n    if (deps.cycle++ > maxCyclesPerTime) {\r\n      const msg = `${maxCyclesWarning}; cycle: ${deps.cycle}; ${deps.idMsg};`;\r\n      console.warn(msg);\r\n      deps.watchRestart(); // to ensure it can start again in a second, access this before we exit.\r\n      return l.r(deps.prevFieldProps, msg);\r\n    }\r\n\r\n    const latestFieldProps = this.#fieldsPropsUpdate.hasChanges()\r\n      ? this.#fieldsPropsUpdate.mergeMixins(deps.prevFieldProps)\r\n      : deps.prevFieldProps;\r\n    \r\n    // Note that this will access a lot of source signals\r\n    // whose dependencies will be incorporated into this calculation\r\n    const props = this.#propsEngine.getLatestSettingsAndValues(latestFieldProps);\r\n    deps.prevFieldProps = props;\r\n        \r\n    return l.rSilent(props, 'normal update');\r\n    // const propsDiff = difference(props, prevFieldProps);\r\n    // if (Object.keys(propsDiff).length > 0) {\r\n    //   l.a('Fields Props Diff', propsDiff);\r\n    //   return l.r(props, `props: normal update`);\r\n    // } else {\r\n    //   return l.rSilent(prevFieldProps, 'props: no changes');\r\n    // }\r\n  }\r\n\r\n\r\n  #fieldPropsCache = new ComputedCacheHelper<string, FieldProps>('field-props');\r\n  public fieldProps = this.#fieldPropsCache.buildProxy(f => () => this.allProps()[f]);\r\n  \r\n  #fieldSignalsCache = new ComputedCacheHelper<string, FieldSettings>('fields');\r\n  /**\r\n   * Used for getting field settings for a specific field.\r\n   * @param fieldName\r\n   * @returns Field settings\r\n   */\r\n  public settings = this.#fieldSignalsCache.buildProxy(f => () => this.allProps()[f].settings);\r\n\r\n  /**\r\n   * Used for translation state stream for a specific field.\r\n   * @param fieldName\r\n   * @returns Translation state signal\r\n   */\r\n  translationState = ComputedCacheHelper.proxy<string, TranslationState>('transl-state', f => () => this.allProps()[f].translationState);\r\n\r\n  /**\r\n   * Triggers a reevaluation of all formulas.\r\n   */\r\n  retriggerFormulas(source: string): void {\r\n    this.log.fn('retriggerFormulas', { source});\r\n    this.#forceRefresh.update(v => v + 1);\r\n  }\r\n\r\n  //#region Update Settings of a field\r\n\r\n  /**\r\n   * Modify a setting, ATM just to set collapsed / dialog-open states.\r\n   * Note that this change won't fire the formulas - which may not be correct.\r\n   */\r\n  updateSetting<T extends FieldSettings>(fieldName: string, update: Partial<T>, source: string): void {\r\n    this.#fieldsPropsUpdate.updateSetting(fieldName, update, source, this.allProps);\r\n    \r\n    // Retrigger formulas if the queue was empty (otherwise it was already retriggered and will run soon)\r\n    // Put a very small delay into processing the queue, since startup can send single updates for many fields one at a time.\r\n    setTimeout(() => this.retriggerFormulas('updateSetting'), 10);\r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n  /**\r\n   * WIP\r\n   * Field States for every field.\r\n   * ATM just used for formulas which have data-sources + in Validators for picker fields.\r\n   */\r\n  public get pickerData(): Record<string, PickerData> { return this.#propsEngine.pickerData; };\r\n}\r\n\r\ninterface Deps {\r\n  idMsg: string,\r\n  cycle: number,\r\n  analyzer: ComputedAnalyzer<Record<string, FieldProps>>,\r\n  disabled: Signal<boolean>,\r\n  slotIsEmpty: Signal<boolean>,\r\n  forceRefresh: Signal<number>,\r\n  watchRestart: WritableSignal<number>,\r\n  prevFieldProps: Record<string, FieldProps>,\r\n\r\n  /**\r\n   * Informs that on a previous run, the slot was empty.\r\n   * This is important, since we don't want to run the same cycle again if the slot is empty.\r\n   * But if it started empty, or was set back to empty, the formulas must run once\r\n   * to correct disabled state of all fields.\r\n   */\r\n  slotWasEmpty: boolean,\r\n\r\n  hasRunOnce: boolean,\r\n}","import { FieldLogicManager } from '../fields/logic/field-logic-manager';\r\nimport { FieldProps } from './fields-configs.model';\r\nimport { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { classLog } from '../../shared/logging';\r\n\r\nexport class FieldTranslationInfo implements Pick<FieldSettings, 'DisableTranslation' | 'DisableAutoTranslation'> {\r\n\r\n  log = classLog({FieldTranslationInfo});\r\n\r\n  constructor(private getFieldsProps: () => FieldProps) { }\r\n\r\n  get #settings(): FieldSettings { return this.#_settings ??= this.getFieldsProps().settings; }\r\n  #_settings: FieldSettings;\r\n\r\n  get isAutoTranslatable(): boolean { return !this.DisableTranslation && !this.DisableAutoTranslation; }\r\n\r\n  get notForAutoTranslateBecauseOfType(): boolean { return !this.DisableTranslation && this.autoTranslateIsDisabledByTypeButNotByConfig(); }\r\n\r\n  get DisableTranslation(): boolean { return this.#settings.DisableTranslation; }\r\n\r\n  get DisableAutoTranslation(): boolean { return this.#settings.DisableAutoTranslation; }\r\n\r\n  /**\r\n   * Returns true if auto translation is enabled for the field, but was disabled by default because of the field type.\r\n   * This is meant to spot \"additional\" disabled fields which should be added to a list of fields that should not be translated.\r\n   * ...this is a bit ugly...\r\n   */\r\n  autoTranslateIsDisabledByTypeButNotByConfig() {\r\n    // first check if it's already disabled - in which case we say \"false\"\r\n    // so it's not added (again) to lists of Fields that should not be translated\r\n    if (this.DisableAutoTranslation) return false;\r\n    const logic = FieldLogicManager.singleton().get(this.getFieldsProps().constants.inputTypeSpecs.inputType);\r\n    return !logic.canAutoTranslate;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { EditApiKeyPaths } from '../../shared/constants/eav.constants';\r\nimport { ApiKeySpecs } from '../../shared/models/dialog-context.models';\r\nimport { FieldReader } from '../localization/field-reader';\r\nimport { EavEntityAttributes, EavItem } from '../shared/models/eav';\r\nimport { FieldsSettingsService } from './fields-settings.service';\r\nimport { FormConfigService } from '../form/form-config.service';\r\nimport { ItemHelper } from '../shared/helpers/item.helper';\r\nimport { FormLanguage } from '../form/form-languages.model';\r\nimport { ItemService } from './item.service';\r\nimport { ContentTypeService } from '../shared/content-types/content-type.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FieldTranslationInfo } from './field-translation-info';\r\nimport { classLog } from '../../shared/logging';\r\n\r\nconst apiKeyInDemoModeAlert = `This translation is a demo. Please provide your own Google Translate API key in the EAV configuration.`;\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  constructor: false,\r\n  init: true,\r\n  unlock: true,\r\n  lock: true,\r\n  getInfo: true,\r\n  autoTranslate: true,\r\n  findAutoTranslatableFields: true,\r\n  addItemAttributeValueHelper: true,\r\n};\r\n\r\n/**\r\n * Fields-Translation service.\r\n * TODO: should probably split into two, to move Auto-Translate SoC\r\n */\r\n@Injectable()\r\nexport class FieldsTranslateService {\r\n  log = classLog({FieldsTranslateService}, logSpecs);\r\n\r\n  #itemAttributes: Signal<EavEntityAttributes>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private itemService: ItemService,\r\n    private formConfig: FormConfigService,\r\n    private contentTypeService: ContentTypeService,\r\n    private fieldsSettingsService: FieldsSettingsService,\r\n    private snackBar: MatSnackBar,\r\n    private translate: TranslateService,\r\n  ) {\r\n    this.log.fnIf('constructor');\r\n  }\r\n\r\n  updater = this.itemService.updater;\r\n\r\n  init(entityGuid: string): void {\r\n    const l = this.log.fnIf('init');\r\n    this.#entityGuid = entityGuid;\r\n    const item = this.itemService.get(entityGuid);\r\n    this.#contentTypeId = ItemHelper.getContentTypeNameId(item);\r\n    this.#itemAttributes = this.itemService.itemAttributesSignal(entityGuid);\r\n    l.end('', { entityGuid, contentTypeId: this.#contentTypeId });\r\n  }\r\n\r\n  #entityGuid: string;\r\n  #contentTypeId: string;\r\n\r\n\r\n  //#region Lock / Unlock\r\n\r\n  unlock(fieldName: string, isTransaction = false, transactionItem?: EavItem): EavItem {\r\n    const l = this.log.fnIf('unlock', { fieldName, isTransaction, transactionItem });\r\n    \r\n    if (this.#getInfo(fieldName).DisableTranslation)\r\n      return l.rNull('Translation is disabled for this field.');\r\n\r\n    const language = this.formConfig.language();\r\n    transactionItem = this.updater.removeItemAttributeDimension(this.#entityGuid, fieldName, language.current, isTransaction, transactionItem);\r\n\r\n    const values = this.#itemAttributes()[fieldName];\r\n    const doesFieldHaveExistingDimension = new FieldReader(values, language).currentEditable != null;\r\n    const fieldReaderPrimaryLang = new FieldReader(values, FormLanguage.bothPrimary(language));\r\n    const defaultValue = fieldReaderPrimaryLang.current;\r\n    if (!doesFieldHaveExistingDimension) \r\n      return l.r(this.#addItemAttributeValueHelper(fieldName, defaultValue.Value, language.current, false));\r\n    else\r\n      return l.rNull();\r\n  }\r\n\r\n  lock(fieldName: string, isTransaction = false, transactionItem?: EavItem): EavItem {\r\n    const l = this.log.fnIf('lock', { fieldName, isTransaction, transactionItem });\r\n    if (this.#getInfo(fieldName).DisableTranslation)\r\n      return l.rNull('Translation is disabled for this field.');\r\n\r\n    const language = this.formConfig.language();\r\n    transactionItem = this.updater.removeItemAttributeDimension(this.#entityGuid, fieldName, language.current, isTransaction, transactionItem);\r\n    return transactionItem;\r\n  }\r\n\r\n  /** For all fields, to unlock or lock */\r\n  toggleUnlockOnAll(isUnlock: boolean): void {\r\n    const translatable = this.findTranslatableFields();\r\n    if (translatable.length === 0)\r\n      return this.showMessageNoTranslatableFields(false);\r\n\r\n    let transactionItem: EavItem;\r\n    for (const fieldName of translatable) {\r\n      // will finish the transaction when last field is being translated\r\n      const isTransaction = fieldName !== translatable[translatable.length - 1];\r\n      transactionItem = isUnlock\r\n        ? this.unlock(fieldName, isTransaction, transactionItem)\r\n        : this.lock(fieldName, isTransaction, transactionItem);\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  showMessageNoTranslatableFields(forAutoTranslate: boolean): void {\r\n    const msg = this.translate.instant(\"LangMenu.NoAutoTranslatableFieldsFound\".replace(\"Auto\", forAutoTranslate ? \"Auto\" : \"\"));\r\n    this.snackBar.open(msg, null, { duration: 2000 });\r\n  }\r\n\r\n  /**\r\n   * Auto-translate the field value to the current language.\r\n   * @param areAllChecksKnown If true, the function will not check if the field value is empty, or if the field auto-translate was disabled by default.\r\n   */\r\n  autoTranslate(fieldNames: string[], sourceLanguageKey: string, isMany: boolean = false, areAllChecksKnown: boolean = false): void {\r\n    const l = this.log.fnIf('autoTranslate', { fieldNames, autoTranslateLanguageKey: sourceLanguageKey, isMany, areAllChecksKnown });\r\n    // Get API key and optionally show warning\r\n    const apiKeyInfo = this.formConfig.settings.Values[EditApiKeyPaths.GoogleTranslate] as ApiKeySpecs;\r\n    if (apiKeyInfo.IsDemo)\r\n      alert(apiKeyInDemoModeAlert);\r\n\r\n    const language = this.formConfig.language();\r\n    const attributes = this.#itemAttributes();\r\n\r\n    // Filter out fields that have translation disabled\r\n    fieldNames = fieldNames.filter(f => !this.#getInfo(f).DisableTranslation);\r\n    const textsForTranslation = fieldNames.map(f => new FieldReader(attributes[f], sourceLanguageKey).currentEditable.Value);\r\n\r\n    if (!areAllChecksKnown)\r\n      fieldNames.forEach((field, i) => {\r\n        const currentText = textsForTranslation[i];\r\n        const isAutoTranslationEnabledButWasDisabledByDefault = this.#getInfo(field).autoTranslateIsDisabledByTypeButNotByConfig();\r\n        if (currentText == null || currentText === '' || isAutoTranslationEnabledButWasDisabledByDefault)\r\n          this.unlock(field);\r\n      });\r\n\r\n    const translationData = {\r\n      q: textsForTranslation,\r\n      target: language.current,\r\n      source: sourceLanguageKey\r\n    };\r\n    this.http.post(`https://translation.googleapis.com/language/translate/v2?key=${apiKeyInfo.ApiKey}`, translationData)\r\n      .subscribe((response: any) => {\r\n        const fieldsWithExistingDims = fieldNames.map(f => new FieldReader(attributes[f], language).currentEditable != null);\r\n        response.data.translations.forEach((translation: any, i: number) => {\r\n          const elem = document.createElement('textarea');\r\n          elem.innerHTML = translation.translatedText;\r\n          const fieldHasExistingDimension = fieldsWithExistingDims[i];\r\n          if (!isMany && fieldHasExistingDimension) {\r\n            this.updater.updateItemAttributeValue(this.#entityGuid, fieldNames[i], elem.value, language, false);\r\n          } else if (!fieldHasExistingDimension) {\r\n            this.#addItemAttributeValueHelper(fieldNames[i], elem.value, language.current, false);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  copyFrom(fieldName: string, copyFromLanguageKey: string): void {\r\n    if (this.#getInfo(fieldName).DisableTranslation) return;\r\n\r\n    const attributes = this.#itemAttributes();\r\n    const values = attributes[fieldName];\r\n    const language = this.formConfig.language();\r\n    const fieldReader = new FieldReader(values, language);\r\n    const valueTranslation = fieldReader.ofLanguage(FormLanguage.diffCurrent(language, copyFromLanguageKey));\r\n    if (valueTranslation) {\r\n      const valueAlreadyExists = values\r\n        ? fieldReader.isEditableOrReadonlyTranslationExist()\r\n        : false;\r\n\r\n      if (valueAlreadyExists)\r\n        // Copy attribute value where language is languageKey to value where language is current language\r\n        this.updater.updateItemAttributeValue(\r\n          this.#entityGuid, fieldName, valueTranslation.Value, language, false,\r\n        );\r\n      else\r\n        // Copy attribute value where language is languageKey to new attribute with current language\r\n        this.#addItemAttributeValueHelper(fieldName, valueTranslation.Value, language.current, false);\r\n    } else\r\n      this.log.a(`${language.current}: Cant copy value from ${copyFromLanguageKey} because that value does not exist.`);\r\n  }\r\n\r\n  linkReadOnly(fieldName: string, linkWithLanguageKey: string): void {\r\n    this.linkToOtherField(fieldName, linkWithLanguageKey, true);\r\n  }\r\n\r\n  linkReadWrite(fieldName: string, linkWithLanguageKey: string): void {\r\n    return this.linkToOtherField(fieldName, linkWithLanguageKey, false);\r\n  }\r\n\r\n  private linkToOtherField(fieldName: string, linkWithLanguageKey: string, isReadOnly: boolean): void {\r\n    if (this.#getInfo(fieldName).DisableTranslation) return;\r\n\r\n    const language = this.formConfig.language();\r\n    const transactionItem = this.updater.removeItemAttributeDimension(this.#entityGuid, fieldName, language.current, true);\r\n    this.updater.addItemAttributeDimension(\r\n      this.#entityGuid, fieldName, language.current, linkWithLanguageKey, language.primary, isReadOnly, transactionItem,\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Auto-translates all field that have auto-translate enabled and are not empty, empty ones are unlocked.\r\n   */\r\n  autoTranslateMany(sourceLanguageKey: string): void {\r\n    const attributes = this.#itemAttributes();\r\n    // fields that have auto-translate enabled and are not empty\r\n    const canTranslate: string[] = [];\r\n    // fields that have auto-translate enabled but didn't have it by default or are empty\r\n    const cantTranslateAndEmpty: string[] = this.findAutoTranslatableFieldsThatWereNotAutoTranslatableByDefault();\r\n    // fields that have auto-translate enabled and can be empty\r\n    const canTranslateWithEmpty = this.findAutoTranslatableFields().filter(x => !cantTranslateAndEmpty.includes(x));\r\n    // separate fields that have auto-translate enabled and are empty\r\n    canTranslateWithEmpty.forEach(fieldName => {\r\n      const value = new FieldReader(attributes[fieldName], sourceLanguageKey).currentEditable?.Value;\r\n      if (value !== '' && value != null && value !== undefined)\r\n        canTranslate.push(fieldName);\r\n      // this is commented out because future edits on fields should automatically be passed to the other languages\r\n      // else\r\n      //   cantTranslateAndEmpty.push(fieldName);\r\n    });\r\n    // translate fields that have auto-translate enabled and are not empty\r\n    this.autoTranslate(canTranslate, sourceLanguageKey, true, true);\r\n    let transactionItem: EavItem;\r\n    // unlock fields that have auto-translate enabled but didn't have it by default or are empty\r\n    cantTranslateAndEmpty.forEach(fieldName => {\r\n      this.unlock(fieldName, false, transactionItem);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns all fields that can be translated.\r\n   */\r\n  findTranslatableFields(): string[] {\r\n    const attributes = this.#itemAttributes();\r\n    return Object.keys(attributes).filter(fieldName => !this.#getInfo(fieldName).DisableTranslation);\r\n  }\r\n\r\n  /**\r\n   * Returns all fields that can be translated and autoTranslated.\r\n   */\r\n  findAutoTranslatableFields(): string[] {\r\n    const attributes = this.#itemAttributes();\r\n    const result = Object.keys(attributes).filter(fieldName => this.#getInfo(fieldName).isAutoTranslatable);\r\n    this.log.fnIf('findAutoTranslatableFields', { attributes, result });\r\n    return result;\r\n  }\r\n\r\n  #getInfo(fieldName: string): FieldTranslationInfo {\r\n    const ti = new FieldTranslationInfo(() => this.fieldsSettingsService.fieldProps[fieldName]());\r\n    this.log.fnIf('getInfo', { fieldName, ti });\r\n    return ti;\r\n  }\r\n\r\n  /**\r\n   * Returns all fields that can be translated and autoTranslated, but were not autoTranslatable by default.\r\n   */\r\n  findAutoTranslatableFieldsThatWereNotAutoTranslatableByDefault(): string[] {\r\n    const attributes = this.#itemAttributes();\r\n    return Object.keys(attributes).filter(fieldName => this.#getInfo(fieldName).notForAutoTranslateBecauseOfType);\r\n  }\r\n\r\n  #addItemAttributeValueHelper(fieldName: string, value: any, currentLanguage: string, isReadOnly: boolean): EavItem {\r\n    const l = this.log.fnIf('addItemAttributeValueHelper', { fieldName, value, currentLanguage, isReadOnly });\r\n    const ctAttribute = this.contentTypeService.getAttribute(this.#contentTypeId, fieldName);\r\n    const result = this.updater.addItemAttributeValue(\r\n      this.#entityGuid, fieldName, value, currentLanguage, isReadOnly, ctAttribute.Type\r\n    );\r\n    return l.r(result);\r\n  }\r\n}\r\n\r\n","import { Injectable, signal } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\nimport { classLog } from '../../shared/logging';\r\n\r\n/**\r\n * A Service to hold the form group and anything specific to a form.\r\n *\r\n * Important: This is specific to a single entity.\r\n */\r\n@Injectable()\r\nexport class EntityFormStateService {\r\n\r\n  log = classLog({EntityFormStateService});\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /** Signal to determine that the form group has been initialized */\r\n  controlsCreated = signal(false);\r\n\r\n  isSaving = signal(false);\r\n\r\n  /** The Form Group */\r\n  public readonly formGroup = new UntypedFormGroup({});\r\n\r\n}\r\n","@if (show()) {\r\n  <mat-icon tippyTranslate=\"Features.NotActivated\">diamond</mat-icon>\r\n}","import { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-feature-icon-indicator',\r\n  templateUrl: './feature-icon-indicator.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeatureIconIndicatorComponent extends FeatureComponentBase { }\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      {{ 'LangMenu.Dialog.CantAutoTranslate' | translate }}\r\n    </mat-card-title>\r\n    @if (dialogData.isAutoTranslateAll) {\r\n      <mat-card-subtitle>\r\n        {{'LangMenu.Dialog.NoAutoTranslatableFields' | translate }}\r\n      </mat-card-subtitle>\r\n    }\r\n    @if (!dialogData.isAutoTranslateAll) {\r\n      <mat-card-subtitle>\r\n        {{'LangMenu.Dialog.ThisFieldIsNotAutoTranslatable' | translate }}\r\n      </mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-button color=\"accent\" (click)=\"closeDialog()\">{{'Features.Close' | translate }}</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'app-auto-translate-disabled-warning-dialog',\r\n    templateUrl: './auto-translate-disabled-warning-dialog.component.html',\r\n    standalone: true,\r\n    imports: [\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        TranslateModule,\r\n    ],\r\n})\r\nexport class AutoTranslateDisabledWarningDialog implements OnInit {\r\n  constructor(\r\n    private dialog: MatDialogRef<AutoTranslateDisabledWarningDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n  ) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n}","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDivider, isStandalone: true, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color, var(--mat-app-outline));border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color, var(--mat-app-outline));border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color, var(--mat-app-outline));border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color, var(--mat-app-outline));border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\nclass MatDividerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatDivider], exports: [MatDivider, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatDivider],\n                    exports: [MatDivider, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Inject, inject, Input, ANIMATION_MODULE_TYPE, ContentChildren, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, EventEmitter, Output, forwardRef, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { Subscription, merge, Subject } from 'rxjs';\nimport { CdkObserveContent, ObserversModule } from '@angular/cdk/observers';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ENTER, SPACE, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Injection token that can be used to reference instances of an `ListOption`. It serves\n * as alternative token to an actual implementation which could result in undesired\n * retention of the class or circular references breaking runtime execution.\n * @docs-private\n */\nconst LIST_OPTION = new InjectionToken('ListOption');\n\n/**\n * Directive capturing the title of a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content for the title never wraps. There can only be a single title per list item.\n */\nclass MatListItemTitle {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemTitle, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatListItemTitle, isStandalone: true, selector: \"[matListItemTitle]\", host: { classAttribute: \"mat-mdc-list-item-title mdc-list-item__primary-text\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemTitle]',\n                    host: { 'class': 'mat-mdc-list-item-title mdc-list-item__primary-text' },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n/**\n * Directive capturing a line in a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content inside a line never wraps. There can be at maximum two lines per list item.\n */\nclass MatListItemLine {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemLine, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatListItemLine, isStandalone: true, selector: \"[matListItemLine]\", host: { classAttribute: \"mat-mdc-list-item-line mdc-list-item__secondary-text\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemLine]',\n                    host: { 'class': 'mat-mdc-list-item-line mdc-list-item__secondary-text' },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n/**\n * Directive matching an optional meta section for list items.\n *\n * List items can reserve space at the end of an item to display a control,\n * button or additional text content.\n */\nclass MatListItemMeta {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemMeta, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatListItemMeta, isStandalone: true, selector: \"[matListItemMeta]\", host: { classAttribute: \"mat-mdc-list-item-meta mdc-list-item__end\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemMeta, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemMeta]',\n                    host: { 'class': 'mat-mdc-list-item-meta mdc-list-item__end' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * @docs-private\n *\n * MDC uses the very intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end` to\n * position content such as icons or checkboxes/radios that comes either before or after the text\n * content respectively. This directive detects the placement of the checkbox/radio and applies the\n * correct MDC class to position the icon/avatar on the opposite side.\n */\nclass _MatListItemGraphicBase {\n    constructor(_listOption) {\n        this._listOption = _listOption;\n    }\n    _isAlignedAtStart() {\n        // By default, in all list items the graphic is aligned at start. In list options,\n        // the graphic is only aligned at start if the checkbox/radio is at the end.\n        return !this._listOption || this._listOption?._getTogglePosition() === 'after';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatListItemGraphicBase, deps: [{ token: LIST_OPTION, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: _MatListItemGraphicBase, isStandalone: true, host: { properties: { \"class.mdc-list-item__start\": \"_isAlignedAtStart()\", \"class.mdc-list-item__end\": \"!_isAlignedAtStart()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatListItemGraphicBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        // MDC uses intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end` to\n                        // position content such as icons or checkboxes/radios that comes either before or after the\n                        // text content respectively. This directive detects the placement of the checkbox/radio and\n                        // applies the correct MDC class to position the icon/avatar on the opposite side.\n                        '[class.mdc-list-item__start]': '_isAlignedAtStart()',\n                        '[class.mdc-list-item__end]': '!_isAlignedAtStart()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIST_OPTION]\n                }] }] });\n/**\n * Directive matching an optional avatar within a list item.\n *\n * List items can reserve space at the beginning of an item to display an avatar.\n */\nclass MatListItemAvatar extends _MatListItemGraphicBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemAvatar, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatListItemAvatar, isStandalone: true, selector: \"[matListItemAvatar]\", host: { classAttribute: \"mat-mdc-list-item-avatar\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemAvatar]',\n                    host: { 'class': 'mat-mdc-list-item-avatar' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Directive matching an optional icon within a list item.\n *\n * List items can reserve space at the beginning of an item to display an icon.\n */\nclass MatListItemIcon extends _MatListItemGraphicBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatListItemIcon, isStandalone: true, selector: \"[matListItemIcon]\", host: { classAttribute: \"mat-mdc-list-item-icon\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemIcon]',\n                    host: { 'class': 'mat-mdc-list-item-icon' },\n                    standalone: true,\n                }]\n        }] });\n\n/** Injection token that can be used to provide the default options for the list module. */\nconst MAT_LIST_CONFIG = new InjectionToken('MAT_LIST_CONFIG');\n\n/** @docs-private */\nclass MatListBase {\n    constructor() {\n        this._isNonInteractive = true;\n        this._disableRipple = false;\n        this._disabled = false;\n        this._defaultOptions = inject(MAT_LIST_CONFIG, { optional: true });\n    }\n    /** Whether ripples for all list items is disabled. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the entire list is disabled. When disabled, the list itself and each of its list items\n     * are disabled.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListBase, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatListBase, isStandalone: true, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"attr.aria-disabled\": \"disabled\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        '[attr.aria-disabled]': 'disabled',\n                    },\n                    standalone: true,\n                }]\n        }], propDecorators: { disableRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/** @docs-private */\nclass MatListItemBase {\n    /**\n     * The number of lines this list item should reserve space for. If not specified,\n     * lines are inferred based on the projected content.\n     *\n     * Explicitly specifying the number of lines is useful if you want to acquire additional\n     * space and enable the wrapping of text. The unscoped text content of a list item will\n     * always be able to take up the remaining space of the item, unless it represents the title.\n     *\n     * A maximum of three lines is supported as per the Material Design specification.\n     */\n    set lines(lines) {\n        this._explicitLines = coerceNumberProperty(lines, null);\n        this._updateItemLines(false);\n    }\n    /** Whether ripples for list items are disabled. */\n    get disableRipple() {\n        return (this.disabled ||\n            this._disableRipple ||\n            this._noopAnimations ||\n            !!this._listBase?.disableRipple);\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    /** Whether the list-item is disabled. */\n    get disabled() {\n        return this._disabled || !!this._listBase?.disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Implemented as part of `RippleTarget`.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    constructor(_elementRef, _ngZone, _listBase, _platform, globalRippleOptions, animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._listBase = _listBase;\n        this._platform = _platform;\n        this._explicitLines = null;\n        this._disableRipple = false;\n        this._disabled = false;\n        this._subscriptions = new Subscription();\n        this._rippleRenderer = null;\n        /** Whether the list item has unscoped text content. */\n        this._hasUnscopedTextContent = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this._hostElement = this._elementRef.nativeElement;\n        this._isButtonElement = this._hostElement.nodeName.toLowerCase() === 'button';\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (_listBase && !_listBase._isNonInteractive) {\n            this._initInteractiveListItem();\n        }\n        // If no type attribute is specified for a host `<button>` element, set it to `button`. If a\n        // type attribute is already specified, we do nothing. We do this for backwards compatibility.\n        // TODO: Determine if we intend to continue doing this for the MDC-based list.\n        if (this._isButtonElement && !this._hostElement.hasAttribute('type')) {\n            this._hostElement.setAttribute('type', 'button');\n        }\n    }\n    ngAfterViewInit() {\n        this._monitorProjectedLinesAndTitle();\n        this._updateItemLines(true);\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        if (this._rippleRenderer !== null) {\n            this._rippleRenderer._removeTriggerEvents();\n        }\n    }\n    /** Whether the list item has icons or avatars. */\n    _hasIconOrAvatar() {\n        return !!(this._avatars.length || this._icons.length);\n    }\n    _initInteractiveListItem() {\n        this._hostElement.classList.add('mat-mdc-list-item-interactive');\n        this._rippleRenderer = new RippleRenderer(this, this._ngZone, this._hostElement, this._platform);\n        this._rippleRenderer.setupTriggerEvents(this._hostElement);\n    }\n    /**\n     * Subscribes to changes in the projected title and lines. Triggers a\n     * item lines update whenever a change occurs.\n     */\n    _monitorProjectedLinesAndTitle() {\n        this._ngZone.runOutsideAngular(() => {\n            this._subscriptions.add(merge(this._lines.changes, this._titles.changes).subscribe(() => this._updateItemLines(false)));\n        });\n    }\n    /**\n     * Updates the lines of the list item. Based on the projected user content and optional\n     * explicit lines setting, the visual appearance of the list item is determined.\n     *\n     * This method should be invoked whenever the projected user content changes, or\n     * when the explicit lines have been updated.\n     *\n     * @param recheckUnscopedContent Whether the projected unscoped content should be re-checked.\n     *   The unscoped content is not re-checked for every update as it is a rather expensive check\n     *   for content that is expected to not change very often.\n     */\n    _updateItemLines(recheckUnscopedContent) {\n        // If the updated is triggered too early before the view and content is initialized,\n        // we just skip the update. After view initialization the update is triggered again.\n        if (!this._lines || !this._titles || !this._unscopedContent) {\n            return;\n        }\n        // Re-check the DOM for unscoped text content if requested. This needs to\n        // happen before any computation or sanity checks run as these rely on the\n        // result of whether there is unscoped text content or not.\n        if (recheckUnscopedContent) {\n            this._checkDomForUnscopedTextContent();\n        }\n        // Sanity check the list item lines and title in the content. This is a dev-mode only\n        // check that can be dead-code eliminated by Terser in production.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            sanityCheckListItemContent(this);\n        }\n        const numberOfLines = this._explicitLines ?? this._inferLinesFromContent();\n        const unscopedContentEl = this._unscopedContent.nativeElement;\n        // Update the list item element to reflect the number of lines.\n        this._hostElement.classList.toggle('mat-mdc-list-item-single-line', numberOfLines <= 1);\n        this._hostElement.classList.toggle('mdc-list-item--with-one-line', numberOfLines <= 1);\n        this._hostElement.classList.toggle('mdc-list-item--with-two-lines', numberOfLines === 2);\n        this._hostElement.classList.toggle('mdc-list-item--with-three-lines', numberOfLines === 3);\n        // If there is no title and the unscoped content is the is the only line, the\n        // unscoped text content will be treated as the title of the list-item.\n        if (this._hasUnscopedTextContent) {\n            const treatAsTitle = this._titles.length === 0 && numberOfLines === 1;\n            unscopedContentEl.classList.toggle('mdc-list-item__primary-text', treatAsTitle);\n            unscopedContentEl.classList.toggle('mdc-list-item__secondary-text', !treatAsTitle);\n        }\n        else {\n            unscopedContentEl.classList.remove('mdc-list-item__primary-text');\n            unscopedContentEl.classList.remove('mdc-list-item__secondary-text');\n        }\n    }\n    /**\n     * Infers the number of lines based on the projected user content. This is useful\n     * if no explicit number of lines has been specified on the list item.\n     *\n     * The number of lines is inferred based on whether there is a title, the number of\n     * additional lines (secondary/tertiary). An additional line is acquired if there is\n     * unscoped text content.\n     */\n    _inferLinesFromContent() {\n        let numOfLines = this._titles.length + this._lines.length;\n        if (this._hasUnscopedTextContent) {\n            numOfLines += 1;\n        }\n        return numOfLines;\n    }\n    /** Checks whether the list item has unscoped text content. */\n    _checkDomForUnscopedTextContent() {\n        this._hasUnscopedTextContent = Array.from(this._unscopedContent.nativeElement.childNodes)\n            .filter(node => node.nodeType !== node.COMMENT_NODE)\n            .some(node => !!(node.textContent && node.textContent.trim()));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MatListBase, optional: true }, { token: i1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatListItemBase, isStandalone: true, inputs: { lines: \"lines\", disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"class.mdc-list-item--disabled\": \"disabled\", \"attr.aria-disabled\": \"disabled\", \"attr.disabled\": \"(_isButtonElement && disabled) || null\" } }, queries: [{ propertyName: \"_avatars\", predicate: MatListItemAvatar }, { propertyName: \"_icons\", predicate: MatListItemIcon }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItemBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.disabled]': '(_isButtonElement && disabled) || null',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: MatListBase, decorators: [{\n                    type: Optional\n                }] }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _avatars: [{\n                type: ContentChildren,\n                args: [MatListItemAvatar, { descendants: false }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatListItemIcon, { descendants: false }]\n            }], lines: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/**\n * Sanity checks the configuration of the list item with respect to the amount\n * of lines, whether there is a title, or if there is unscoped text content.\n *\n * The checks are extracted into a top-level function that can be dead-code\n * eliminated by Terser or other optimizers in production mode.\n */\nfunction sanityCheckListItemContent(item) {\n    const numTitles = item._titles.length;\n    const numLines = item._lines.length;\n    if (numTitles > 1) {\n        console.warn('A list item cannot have multiple titles.');\n    }\n    if (numTitles === 0 && numLines > 0) {\n        console.warn('A list item line can only be used if there is a list item title.');\n    }\n    if (numTitles === 0 &&\n        item._hasUnscopedTextContent &&\n        item._explicitLines !== null &&\n        item._explicitLines > 1) {\n        console.warn('A list item cannot have wrapping content without a title.');\n    }\n    if (numLines > 2 || (numLines === 2 && item._hasUnscopedTextContent)) {\n        console.warn('A list item can have at maximum three lines.');\n    }\n}\n\nclass MatActionList extends MatListBase {\n    constructor() {\n        super(...arguments);\n        // An navigation list is considered interactive, but does not extend the interactive list\n        // base class. We do this because as per MDC, items of interactive lists are only reachable\n        // through keyboard shortcuts. We want all items for the navigation list to be reachable\n        // through tab key as we do not intend to provide any special accessibility treatment. The\n        // accessibility treatment depends on how the end-user will interact with it.\n        this._isNonInteractive = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatActionList, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatActionList, isStandalone: true, selector: \"mat-action-list\", host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-action-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatActionList }], exportAs: [\"matActionList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatActionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-action-list', exportAs: 'matActionList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-action-list mat-mdc-list-base mdc-list',\n                        'role': 'group',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatActionList }], standalone: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"] }]\n        }] });\n\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\nclass MatList extends MatListBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatList, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatList, isStandalone: true, selector: \"mat-list\", host: { classAttribute: \"mat-mdc-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatList }], exportAs: [\"matList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list', exportAs: 'matList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-list mat-mdc-list-base mdc-list',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatList }], standalone: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"] }]\n        }] });\nclass MatListItem extends MatListItemBase {\n    /** Indicates whether an item in a `<mat-nav-list>` is the currently active page. */\n    get activated() {\n        return this._activated;\n    }\n    set activated(activated) {\n        this._activated = coerceBooleanProperty(activated);\n    }\n    constructor(element, ngZone, listBase, platform, globalRippleOptions, animationMode) {\n        super(element, ngZone, listBase, platform, globalRippleOptions, animationMode);\n        this._activated = false;\n    }\n    /**\n     * Determine the value of `aria-current`. Return 'page' if this item is an activated anchor tag.\n     * Otherwise, return `null`. This method is safe to use with server-side rendering.\n     */\n    _getAriaCurrent() {\n        return this._hostElement.nodeName === 'A' && this._activated ? 'page' : null;\n    }\n    _hasBothLeadingAndTrailing() {\n        return this._meta.length !== 0 && (this._avatars.length !== 0 || this._icons.length !== 0);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItem, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MatListBase, optional: true }, { token: i1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatListItem, isStandalone: true, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: { activated: \"activated\" }, host: { properties: { \"class.mdc-list-item--activated\": \"activated\", \"class.mdc-list-item--with-leading-avatar\": \"_avatars.length !== 0\", \"class.mdc-list-item--with-leading-icon\": \"_icons.length !== 0\", \"class.mdc-list-item--with-trailing-meta\": \"_meta.length !== 0\", \"class.mat-mdc-list-item-both-leading-and-trailing\": \"_hasBothLeadingAndTrailing()\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.aria-current\": \"_getAriaCurrent()\" }, classAttribute: \"mat-mdc-list-item mdc-list-item\" }, queries: [{ propertyName: \"_lines\", predicate: MatListItemLine, descendants: true }, { propertyName: \"_titles\", predicate: MatListItemTitle, descendants: true }, { propertyName: \"_meta\", predicate: MatListItemMeta, descendants: true }], viewQueries: [{ propertyName: \"_unscopedContent\", first: true, predicate: [\"unscopedContent\"], descendants: true }, { propertyName: \"_itemText\", first: true, predicate: [\"text\"], descendants: true }], exportAs: [\"matListItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<ng-content select=\\\"[matListItemMeta]\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\", dependencies: [{ kind: \"directive\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]', exportAs: 'matListItem', host: {\n                        'class': 'mat-mdc-list-item mdc-list-item',\n                        '[class.mdc-list-item--activated]': 'activated',\n                        '[class.mdc-list-item--with-leading-avatar]': '_avatars.length !== 0',\n                        '[class.mdc-list-item--with-leading-icon]': '_icons.length !== 0',\n                        '[class.mdc-list-item--with-trailing-meta]': '_meta.length !== 0',\n                        // Utility class that makes it easier to target the case where there's both a leading\n                        // and a trailing icon. Avoids having to write out all the combinations.\n                        '[class.mat-mdc-list-item-both-leading-and-trailing]': '_hasBothLeadingAndTrailing()',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [CdkObserveContent], template: \"<ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<ng-content select=\\\"[matListItemMeta]\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: MatListBase, decorators: [{\n                    type: Optional\n                }] }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatListItemLine, { descendants: true }]\n            }], _titles: [{\n                type: ContentChildren,\n                args: [MatListItemTitle, { descendants: true }]\n            }], _meta: [{\n                type: ContentChildren,\n                args: [MatListItemMeta, { descendants: true }]\n            }], _unscopedContent: [{\n                type: ViewChild,\n                args: ['unscopedContent']\n            }], _itemText: [{\n                type: ViewChild,\n                args: ['text']\n            }], activated: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of an `SelectionList`. It serves\n * as alternative token to an actual implementation which would result in circular references.\n * @docs-private\n */\nconst SELECTION_LIST = new InjectionToken('SelectionList');\nclass MatListOption extends MatListItemBase {\n    /**\n     * Whether the label should appear before or after the checkbox/radio. Defaults to 'after'\n     *\n     * @deprecated Use `togglePosition` instead.\n     * @breaking-change 17.0.0\n     */\n    get checkboxPosition() {\n        return this.togglePosition;\n    }\n    set checkboxPosition(value) {\n        this.togglePosition = value;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox/radio.\n     * This API is supported in M2 themes only, it has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n        return this._color || this._selectionList.color;\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is selected. */\n    get selected() {\n        return this._selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this._selectionList.multiple) {\n                this._selectionList._reportValueChange();\n            }\n        }\n    }\n    constructor(elementRef, ngZone, _selectionList, platform, _changeDetectorRef, globalRippleOptions, animationMode) {\n        super(elementRef, ngZone, _selectionList, platform, globalRippleOptions, animationMode);\n        this._selectionList = _selectionList;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the selected state of the option has changed.\n         * Use to facilitate two-data binding to the `selected` property.\n         * @docs-private\n         */\n        this.selectedChange = new EventEmitter();\n        /** Whether the label should appear before or after the checkbox/radio. Defaults to 'after' */\n        this.togglePosition = 'after';\n        this._selected = false;\n        /**\n         * This is set to true after the first OnChanges cycle so we don't\n         * clear the value of `selected` in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    ngOnInit() {\n        const list = this._selectionList;\n        if (list._value && list._value.some(value => list.compareWith(this._value, value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._hostElement.focus();\n    }\n    /** Gets the text label of the list option. Used for the typeahead functionality in the list. */\n    getLabel() {\n        const titleElement = this._titles?.get(0)?._elementRef.nativeElement;\n        // If there is no explicit title element, the unscoped text content\n        // is treated as the list item title.\n        const labelEl = titleElement || this._unscopedContent?.nativeElement;\n        return labelEl?.textContent || '';\n    }\n    /** Whether a checkbox is shown at the given position. */\n    _hasCheckboxAt(position) {\n        return this._selectionList.multiple && this._getTogglePosition() === position;\n    }\n    /** Where a radio indicator is shown at the given position. */\n    _hasRadioAt(position) {\n        return (!this._selectionList.multiple &&\n            this._getTogglePosition() === position &&\n            !this._selectionList.hideSingleSelectionIndicator);\n    }\n    /** Whether icons or avatars are shown at the given position. */\n    _hasIconsOrAvatarsAt(position) {\n        return this._hasProjected('icons', position) || this._hasProjected('avatars', position);\n    }\n    /** Gets whether the given type of element is projected at the specified position. */\n    _hasProjected(type, position) {\n        // If the checkbox/radio is shown at the specified position, neither icons or\n        // avatars can be shown at the position.\n        return (this._getTogglePosition() !== position &&\n            (type === 'avatars' ? this._avatars.length !== 0 : this._icons.length !== 0));\n    }\n    _handleBlur() {\n        this._selectionList._onTouched();\n    }\n    /** Gets the current position of the checkbox/radio. */\n    _getTogglePosition() {\n        return this.togglePosition || 'after';\n    }\n    /**\n     * Sets the selected state of the option.\n     * @returns Whether the value has changed.\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this._selectionList.selectedOptions.select(this);\n        }\n        else {\n            this._selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetectorRef.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run.\n     * Mainly used to trigger an update of the list option if the disabled state of the selection\n     * list changed.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the option's value based on a user interaction. */\n    _toggleOnInteraction() {\n        if (!this.disabled) {\n            if (this._selectionList.multiple) {\n                this.selected = !this.selected;\n                this._selectionList._emitChangeEvent([this]);\n            }\n            else if (!this.selected) {\n                this.selected = true;\n                this._selectionList._emitChangeEvent([this]);\n            }\n        }\n    }\n    /** Sets the tabindex of the list option. */\n    _setTabindex(value) {\n        this._hostElement.setAttribute('tabindex', value + '');\n    }\n    _hasBothLeadingAndTrailing() {\n        const hasLeading = this._hasProjected('avatars', 'before') ||\n            this._hasProjected('icons', 'before') ||\n            this._hasCheckboxAt('before') ||\n            this._hasRadioAt('before');\n        const hasTrailing = this._hasProjected('icons', 'after') ||\n            this._hasProjected('avatars', 'after') ||\n            this._hasCheckboxAt('after') ||\n            this._hasRadioAt('after');\n        return hasLeading && hasTrailing;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListOption, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: SELECTION_LIST }, { token: i1.Platform }, { token: i0.ChangeDetectorRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatListOption, isStandalone: true, selector: \"mat-list-option\", inputs: { togglePosition: \"togglePosition\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\" }, outputs: { selectedChange: \"selectedChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"blur\": \"_handleBlur()\", \"click\": \"_toggleOnInteraction()\" }, properties: { \"class.mdc-list-item--selected\": \"selected && !_selectionList.multiple && _selectionList.hideSingleSelectionIndicator\", \"class.mdc-list-item--with-leading-avatar\": \"_hasProjected(\\\"avatars\\\", \\\"before\\\")\", \"class.mdc-list-item--with-leading-icon\": \"_hasProjected(\\\"icons\\\", \\\"before\\\")\", \"class.mdc-list-item--with-trailing-icon\": \"_hasProjected(\\\"icons\\\", \\\"after\\\")\", \"class.mat-mdc-list-option-with-trailing-avatar\": \"_hasProjected(\\\"avatars\\\", \\\"after\\\")\", \"class.mdc-list-item--with-leading-checkbox\": \"_hasCheckboxAt(\\\"before\\\")\", \"class.mdc-list-item--with-trailing-checkbox\": \"_hasCheckboxAt(\\\"after\\\")\", \"class.mdc-list-item--with-leading-radio\": \"_hasRadioAt(\\\"before\\\")\", \"class.mdc-list-item--with-trailing-radio\": \"_hasRadioAt(\\\"after\\\")\", \"class.mat-mdc-list-item-both-leading-and-trailing\": \"_hasBothLeadingAndTrailing()\", \"class.mat-accent\": \"color !== \\\"primary\\\" && color !== \\\"warn\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.aria-selected\": \"selected\" }, classAttribute: \"mat-mdc-list-item mat-mdc-list-option mdc-list-item\" }, providers: [\n            { provide: MatListItemBase, useExisting: MatListOption },\n            { provide: LIST_OPTION, useExisting: MatListOption },\n        ], queries: [{ propertyName: \"_lines\", predicate: MatListItemLine, descendants: true }, { propertyName: \"_titles\", predicate: MatListItemTitle, descendants: true }], viewQueries: [{ propertyName: \"_unscopedContent\", first: true, predicate: [\"unscopedContent\"], descendants: true }], exportAs: [\"matListOption\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Save icons and the pseudo checkbox/radio so that they can be re-used in the template without\\n  duplication. Also content can only be injected once so we need to extract icons/avatars\\n  into a template since we use it in multiple places.\\n-->\\n<ng-template #icons>\\n  <ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\">\\n  </ng-content>\\n</ng-template>\\n\\n<ng-template #checkbox>\\n  <div class=\\\"mdc-checkbox\\\" [class.mdc-checkbox--disabled]=\\\"disabled\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #radio>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <input type=\\\"radio\\\" class=\\\"mdc-radio__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n@if (_hasCheckboxAt('before')) {\\n  <!-- Container for the checkbox at start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-checkbox-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('before')) {\\n  <!-- Container for the radio at the start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-radio-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n<!-- Conditionally renders icons/avatars before the list item text. -->\\n@if (_hasIconsOrAvatarsAt('before')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Text -->\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n@if (_hasCheckboxAt('after')) {\\n  <!-- Container for the checkbox at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('after')) {\\n  <!-- Container for the radio at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n\\n<!-- Conditionally renders icons/avatars after the list item text. -->\\n@if (_hasIconsOrAvatarsAt('after')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Divider -->\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\", styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item,[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:0;padding-right:0}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px;width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled{opacity:.5}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mat-mdc-list-option .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__checkmark{color:CanvasText}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mat-mdc-list-option .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *,.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-list-option .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-list-option .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size);top:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2);left:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-list-option .mdc-checkbox__native-control,.mat-mdc-list-option .mdc-radio__native-control{display:none}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-option', exportAs: 'matListOption', host: {\n                        'class': 'mat-mdc-list-item mat-mdc-list-option mdc-list-item',\n                        'role': 'option',\n                        // As per MDC, only list items without checkbox or radio indicator should receive the\n                        // `--selected` class.\n                        '[class.mdc-list-item--selected]': 'selected && !_selectionList.multiple && _selectionList.hideSingleSelectionIndicator',\n                        // Based on the checkbox/radio position and whether there are icons or avatars, we apply MDC's\n                        // list-item `--leading` and `--trailing` classes.\n                        '[class.mdc-list-item--with-leading-avatar]': '_hasProjected(\"avatars\", \"before\")',\n                        '[class.mdc-list-item--with-leading-icon]': '_hasProjected(\"icons\", \"before\")',\n                        '[class.mdc-list-item--with-trailing-icon]': '_hasProjected(\"icons\", \"after\")',\n                        '[class.mat-mdc-list-option-with-trailing-avatar]': '_hasProjected(\"avatars\", \"after\")',\n                        // Based on the checkbox/radio position, we apply the `--leading` or `--trailing` MDC classes\n                        // which ensure that the checkbox/radio is positioned correctly within the list item.\n                        '[class.mdc-list-item--with-leading-checkbox]': '_hasCheckboxAt(\"before\")',\n                        '[class.mdc-list-item--with-trailing-checkbox]': '_hasCheckboxAt(\"after\")',\n                        '[class.mdc-list-item--with-leading-radio]': '_hasRadioAt(\"before\")',\n                        '[class.mdc-list-item--with-trailing-radio]': '_hasRadioAt(\"after\")',\n                        // Utility class that makes it easier to target the case where there's both a leading\n                        // and a trailing icon. Avoids having to write out all the combinations.\n                        '[class.mat-mdc-list-item-both-leading-and-trailing]': '_hasBothLeadingAndTrailing()',\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[attr.aria-selected]': 'selected',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_toggleOnInteraction()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        { provide: MatListItemBase, useExisting: MatListOption },\n                        { provide: LIST_OPTION, useExisting: MatListOption },\n                    ], standalone: true, imports: [NgTemplateOutlet, CdkObserveContent], template: \"<!--\\n  Save icons and the pseudo checkbox/radio so that they can be re-used in the template without\\n  duplication. Also content can only be injected once so we need to extract icons/avatars\\n  into a template since we use it in multiple places.\\n-->\\n<ng-template #icons>\\n  <ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\">\\n  </ng-content>\\n</ng-template>\\n\\n<ng-template #checkbox>\\n  <div class=\\\"mdc-checkbox\\\" [class.mdc-checkbox--disabled]=\\\"disabled\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #radio>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <input type=\\\"radio\\\" class=\\\"mdc-radio__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n@if (_hasCheckboxAt('before')) {\\n  <!-- Container for the checkbox at start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-checkbox-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('before')) {\\n  <!-- Container for the radio at the start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-radio-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n<!-- Conditionally renders icons/avatars before the list item text. -->\\n@if (_hasIconsOrAvatarsAt('before')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Text -->\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n@if (_hasCheckboxAt('after')) {\\n  <!-- Container for the checkbox at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('after')) {\\n  <!-- Container for the radio at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n\\n<!-- Conditionally renders icons/avatars after the list item text. -->\\n@if (_hasIconsOrAvatarsAt('after')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Divider -->\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\", styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item,[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:0;padding-right:0}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px;width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled{opacity:.5}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mat-mdc-list-option .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__checkmark{color:CanvasText}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mat-mdc-list-option .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *,.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-list-option .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-list-option .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size);top:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2);left:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-list-option .mdc-checkbox__native-control,.mat-mdc-list-option .mdc-radio__native-control{display:none}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SELECTION_LIST]\n                }] }, { type: i1.Platform }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatListItemLine, { descendants: true }]\n            }], _titles: [{\n                type: ContentChildren,\n                args: [MatListItemTitle, { descendants: true }]\n            }], _unscopedContent: [{\n                type: ViewChild,\n                args: ['unscopedContent']\n            }], selectedChange: [{\n                type: Output\n            }], togglePosition: [{\n                type: Input\n            }], checkboxPosition: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListSubheaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatListSubheaderCssMatStyler, isStandalone: true, selector: \"[mat-subheader], [matSubheader]\", host: { classAttribute: \"mat-mdc-subheader mdc-list-group__subheader\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListSubheaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    // TODO(mmalerba): MDC's subheader font looks identical to the list item font, figure out why and\n                    //  make a change in one of the repos to visually distinguish.\n                    host: { 'class': 'mat-mdc-subheader mdc-list-group__subheader' },\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends MatListBase {\n    constructor() {\n        super(...arguments);\n        // An navigation list is considered interactive, but does not extend the interactive list\n        // base class. We do this because as per MDC, items of interactive lists are only reachable\n        // through keyboard shortcuts. We want all items for the navigation list to be reachable\n        // through tab key as we do not intend to provide any special accessibility treatment. The\n        // accessibility treatment depends on how the end-user will interact with it.\n        this._isNonInteractive = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatNavList, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatNavList, isStandalone: true, selector: \"mat-nav-list\", host: { attributes: { \"role\": \"navigation\" }, classAttribute: \"mat-mdc-nav-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatNavList }], exportAs: [\"matNavList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatNavList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-nav-list mat-mdc-list-base mdc-list',\n                        'role': 'navigation',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatNavList }], standalone: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"] }]\n        }] });\n\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true,\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.options = options;\n    }\n}\nclass MatSelectionList extends MatListBase {\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._initialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /** Whether radio indicator for all list items is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n    }\n    constructor(_element, _ngZone) {\n        super();\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._initialized = false;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all\n         * list options. This API is supported in M2 themes only, it has no effect in\n         * M3 themes.\n         *\n         * For information on applying color variants in M3, see\n         * https://material.angular.io/guide/theming#using-component-color-variants.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._multiple = true;\n        this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        this._selectionListDisabled = false;\n        /** Handles focusout events within the list. */\n        this._handleFocusout = () => {\n            // Focus takes a while to update so we have to wrap our call in a timeout.\n            setTimeout(() => {\n                if (!this._containsFocus()) {\n                    this._resetActiveOption();\n                }\n            });\n        };\n        /** Handles focusin events within the list. */\n        this._handleFocusin = (event) => {\n            if (this.disabled) {\n                return;\n            }\n            const activeIndex = this._items\n                .toArray()\n                .findIndex(item => item._elementRef.nativeElement.contains(event.target));\n            if (activeIndex > -1) {\n                this._setActiveOption(activeIndex);\n            }\n            else {\n                this._resetActiveOption();\n            }\n        };\n        this._isNonInteractive = false;\n    }\n    ngAfterViewInit() {\n        // Mark the selection list as initialized so that the `multiple`\n        // binding can no longer be changed.\n        this._initialized = true;\n        this._setupRovingTabindex();\n        // These events are bound outside the zone, because they don't change\n        // any change-detected properties and they can trigger timeouts.\n        this._ngZone.runOutsideAngular(() => {\n            this._element.nativeElement.addEventListener('focusin', this._handleFocusin);\n            this._element.nativeElement.addEventListener('focusout', this._handleFocusout);\n        });\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        this._watchForSelectionChange();\n    }\n    ngOnChanges(changes) {\n        const disabledChanges = changes['disabled'];\n        const disableRippleChanges = changes['disableRipple'];\n        const hideSingleSelectionIndicatorChanges = changes['hideSingleSelectionIndicator'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (disabledChanges && !disabledChanges.firstChange) ||\n            (hideSingleSelectionIndicatorChanges && !hideSingleSelectionIndicatorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._element.nativeElement.removeEventListener('focusin', this._handleFocusin);\n        this._element.nativeElement.removeEventListener('focusout', this._handleFocusout);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the *entire* selection list is disabled. When true, each list item is also disabled\n     * and each list item is removed from the tab order (has tabindex=\"-1\").\n     */\n    get disabled() {\n        return this._selectionListDisabled;\n    }\n    set disabled(value) {\n        // Update the disabled state of this list. Write to `this._selectionListDisabled` instead of\n        // `super.disabled`. That is to avoid closure compiler compatibility issues with assigning to\n        // a super property.\n        this._selectionListDisabled = coerceBooleanProperty(value);\n        if (this._selectionListDisabled) {\n            this._keyManager?.setActiveItem(-1);\n        }\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Watches for changes in the selected state of the options and updates the list accordingly. */\n    _watchForSelectionChange() {\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            // Sync external changes to the model back to the options.\n            for (let item of event.added) {\n                item.selected = true;\n            }\n            for (let item of event.removed) {\n                item.selected = false;\n            }\n            if (!this._containsFocus()) {\n                this._resetActiveOption();\n            }\n        });\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n        }\n        return changedOptions;\n    }\n    // Note: This getter exists for backwards compatibility. The `_items` query list\n    // cannot be named `options` as it will be picked up by the interactive list base.\n    /** The option components contained within this selection-list. */\n    get options() {\n        return this._items;\n    }\n    /** Handles keydown events within the list. */\n    _handleKeydown(event) {\n        const activeItem = this._keyManager.activeItem;\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this._keyManager.isTyping() &&\n            activeItem &&\n            !activeItem.disabled) {\n            event.preventDefault();\n            activeItem._toggleOnInteraction();\n        }\n        else if (event.keyCode === A &&\n            this.multiple &&\n            !this._keyManager.isTyping() &&\n            hasModifierKey(event, 'ctrlKey')) {\n            const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n            event.preventDefault();\n            this._emitChangeEvent(this._setAllOptionsSelected(shouldSelect, true));\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Sets up the logic for maintaining the roving tabindex.\n     *\n     * `skipPredicate` determines if key manager should avoid putting a given list item in the tab\n     * index. Allow disabled list items to receive focus to align with WAI ARIA recommendation.\n     * Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n     * makes a few exceptions for compound widgets.\n     *\n     * From [Developing a Keyboard Interface](\n     * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n     *   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n     *   Listbox...\"\n     */\n    _setupRovingTabindex() {\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHomeAndEnd()\n            .withTypeAhead()\n            .withWrap()\n            .skipPredicate(() => this.disabled);\n        // Set the initial focus.\n        this._resetActiveOption();\n        // Move the tabindex to the currently-focused list item.\n        this._keyManager.change.subscribe(activeItemIndex => this._setActiveOption(activeItemIndex));\n        // If the active item is removed from the list, reset back to the first one.\n        this._items.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            const activeItem = this._keyManager.activeItem;\n            if (!activeItem || this._items.toArray().indexOf(activeItem) === -1) {\n                this._resetActiveOption();\n            }\n        });\n    }\n    /**\n     * Sets an option as active.\n     * @param index Index of the active option. If set to -1, no option will be active.\n     */\n    _setActiveOption(index) {\n        this._items.forEach((item, itemIndex) => item._setTabindex(itemIndex === index ? 0 : -1));\n        this._keyManager.updateActiveItem(index);\n    }\n    /**\n     * Resets the active option. When the list is disabled, remove all options from to the tab order.\n     * Otherwise, focus the first selected option.\n     */\n    _resetActiveOption() {\n        if (this.disabled) {\n            this._setActiveOption(-1);\n            return;\n        }\n        const activeItem = this._items.find(item => item.selected && !item.disabled) || this._items.first;\n        this._setActiveOption(activeItem ? this._items.toArray().indexOf(activeItem) : -1);\n    }\n    /** Returns whether the focus is currently within the list. */\n    _containsFocus() {\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return activeElement && this._element.nativeElement.contains(activeElement);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelectionList, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatSelectionList, isStandalone: true, selector: \"mat-selection-list\", inputs: { color: \"color\", compareWith: \"compareWith\", multiple: \"multiple\", hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\", disabled: \"disabled\" }, outputs: { selectionChange: \"selectionChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-multiselectable\": \"multiple\" }, classAttribute: \"mat-mdc-selection-list mat-mdc-list-base mdc-list\" }, providers: [\n            MAT_SELECTION_LIST_VALUE_ACCESSOR,\n            { provide: MatListBase, useExisting: MatSelectionList },\n            { provide: SELECTION_LIST, useExisting: MatSelectionList },\n        ], queries: [{ propertyName: \"_items\", predicate: MatListOption, descendants: true }], exportAs: [\"matSelectionList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelectionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', host: {\n                        'class': 'mat-mdc-selection-list mat-mdc-list-base mdc-list',\n                        'role': 'listbox',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [\n                        MAT_SELECTION_LIST_VALUE_ACCESSOR,\n                        { provide: MatListBase, useExisting: MatSelectionList },\n                        { provide: SELECTION_LIST, useExisting: MatSelectionList },\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatListOption, { descendants: true }]\n            }], selectionChange: [{\n                type: Output\n            }], color: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], hideSingleSelectionIndicator: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass MatListModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListModule, imports: [ObserversModule,\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            MatPseudoCheckboxModule,\n            MatList,\n            MatActionList,\n            MatNavList,\n            MatSelectionList,\n            MatListItem,\n            MatListOption,\n            MatListSubheaderCssMatStyler,\n            MatListItemAvatar,\n            MatListItemIcon,\n            MatListItemLine,\n            MatListItemTitle,\n            MatListItemMeta], exports: [MatList,\n            MatActionList,\n            MatNavList,\n            MatSelectionList,\n            MatListItem,\n            MatListOption,\n            MatListItemAvatar,\n            MatListItemIcon,\n            MatListSubheaderCssMatStyler,\n            MatDividerModule,\n            MatListItemLine,\n            MatListItemTitle,\n            MatListItemMeta] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListModule, imports: [ObserversModule,\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            MatPseudoCheckboxModule, MatDividerModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        ObserversModule,\n                        CommonModule,\n                        MatCommonModule,\n                        MatRippleModule,\n                        MatPseudoCheckboxModule,\n                        MatList,\n                        MatActionList,\n                        MatNavList,\n                        MatSelectionList,\n                        MatListItem,\n                        MatListOption,\n                        MatListSubheaderCssMatStyler,\n                        MatListItemAvatar,\n                        MatListItemIcon,\n                        MatListItemLine,\n                        MatListItemTitle,\n                        MatListItemMeta,\n                    ],\n                    exports: [\n                        MatList,\n                        MatActionList,\n                        MatNavList,\n                        MatSelectionList,\n                        MatListItem,\n                        MatListOption,\n                        MatListItemAvatar,\n                        MatListItemIcon,\n                        MatListSubheaderCssMatStyler,\n                        MatDividerModule,\n                        MatListItemLine,\n                        MatListItemTitle,\n                        MatListItemMeta,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_LIST_CONFIG, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatActionList, MatList, MatListItem, MatListItemAvatar, MatListItemIcon, MatListItemLine, MatListItemMeta, MatListItemTitle, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange, SELECTION_LIST, _MatListItemGraphicBase };\n","export const I18nKeys = {\r\n  NoTranslate: 'NoTranslate',\r\n  FromPrimary: 'FromPrimary',\r\n  FromOther: 'FromOther',\r\n  LinkReadOnly: 'LinkReadOnly',\r\n  LinkShared: 'LinkShared',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Of } from '../../../../../../../../core';\r\nimport { FormLanguage, Language } from '../../../../form/form-languages.model';\r\nimport { FieldReader } from '../../../../localization/field-reader';\r\nimport { TranslationLinks } from '../../../../localization/translation-link.constants';\r\nimport { EavEntityAttributes } from '../../../../shared/models/eav';\r\nimport { I18nKeys } from './translate-menu-dialog.constants';\r\nimport { TranslateMenuDialogTemplateLanguage } from './translate-menu-dialog.models';\r\n\r\nexport function getTemplateLanguages(\r\n  config: { fieldName: string }, // FieldConfigSet,\r\n  language: FormLanguage,\r\n  languages: Language[],\r\n  attributes: EavEntityAttributes,\r\n  linkType: Of<typeof TranslationLinks>,\r\n): TranslateMenuDialogTemplateLanguage[] {\r\n  const templateLanguages = languages\r\n    .filter(lang => lang.NameId !== language.current)\r\n    .map(lang => {\r\n      const values = attributes[config.fieldName];\r\n      const disabled = (linkType === TranslationLinks.LinkReadWrite && !lang.IsAllowed)\r\n        || !new FieldReader(values, FormLanguage.diffCurrent(language, lang.NameId)).hasEditableValues;\r\n      const templateLanguage: TranslateMenuDialogTemplateLanguage = {\r\n        key: lang.NameId,\r\n        disabled,\r\n      };\r\n      return templateLanguage;\r\n    });\r\n  return templateLanguages;\r\n}\r\n\r\nexport function getTemplateLanguagesWithContent(\r\n  language: FormLanguage,\r\n  languages: Language[],\r\n  attributes: EavEntityAttributes,\r\n  linkType: Of<typeof TranslationLinks>,\r\n  translatableFields?: string[],\r\n): TranslateMenuDialogTemplateLanguage[] {\r\n  const templateLanguages = languages\r\n    .filter(lang => lang.NameId !== language.current)\r\n    .map(lang => {\r\n      let countTranslatableFields: number = 0;\r\n      let countTranslatableFieldsWithContent: number = 0;\r\n      let isDisabled: boolean = false;\r\n      const langDefToUse = FormLanguage.diffCurrent(language, lang.NameId);\r\n      translatableFields.forEach(field => {\r\n        const values = attributes[field];\r\n        const fieldReader = new FieldReader(values, langDefToUse);\r\n        countTranslatableFields += fieldReader.countEditable(); // LocalizationHelpers.countEditableValues(values, langDefToUse);\r\n        countTranslatableFieldsWithContent += fieldReader.countEditableWithContents(); // LocalizationHelpers.countEditableValuesWithContent(values, langDefToUse);\r\n        isDisabled = (linkType === TranslationLinks.LinkReadWrite && !lang.IsAllowed)\r\n          || countTranslatableFields == 0;\r\n      });\r\n      const templateLanguage: TranslateMenuDialogTemplateLanguage = {\r\n        key: lang.NameId,\r\n        disabled: isDisabled,\r\n        noTranslatableFields: countTranslatableFields,\r\n        noTranslatableFieldsThatHaveContent: countTranslatableFieldsWithContent,\r\n      };\r\n      return templateLanguage;\r\n    });\r\n  return templateLanguages;\r\n}\r\n\r\nexport function findI18nKey(translationLink: Of<typeof TranslationLinks>): Of<typeof I18nKeys> {\r\n  switch (translationLink) {\r\n    case TranslationLinks.Translate:\r\n      return I18nKeys.FromPrimary;\r\n    case TranslationLinks.DontTranslate:\r\n      return I18nKeys.NoTranslate;\r\n    case TranslationLinks.LinkReadOnly:\r\n      return I18nKeys.LinkReadOnly;\r\n    case TranslationLinks.LinkReadWrite:\r\n      return I18nKeys.LinkShared;\r\n    case TranslationLinks.LinkCopyFrom:\r\n      return I18nKeys.FromOther;\r\n  }\r\n}\r\n","import { Component, inject, Inject, signal } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Of } from '../../../../../core';\r\nimport { I18nKeys } from '../../edit/fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.constants';\r\nimport { findI18nKey } from '../../edit/fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.helpers';\r\nimport { TranslateMenuDialogData } from '../../edit/fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.models';\r\nimport { FormConfigService } from '../../edit/form/form-config.service';\r\nimport { LanguageService } from '../../edit/localization/language.service';\r\nimport { TranslationStateCore } from '../../edit/localization/translate-state.model';\r\nimport { TranslationLinks } from '../../edit/localization/translation-link.constants';\r\nimport { ItemService } from '../../edit/state/item.service';\r\nimport { computedObj } from '../signals/signal.utilities';\r\n\r\ninterface TranslationInfo {\r\n  showLanguageSelection: boolean;\r\n  i18nRoot: string;\r\n  submitDisabled: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-translate-helper-component',\r\n  template: ''\r\n})\r\nexport abstract class TranslateHelperComponent {\r\n\r\n  private languageService: LanguageService = inject(LanguageService);\r\n  private itemService: ItemService = inject(ItemService);\r\n  public formConfig: FormConfigService = inject(FormConfigService);\r\n\r\n  TranslationLinks = TranslationLinks;\r\n  I18nKeys = I18nKeys;\r\n\r\n  public noLanguageRequired: Of<typeof TranslationLinks>[];\r\n\r\n  protected language = this.formConfig.language;\r\n  public translationStateSignal = signal<TranslationStateCore>(this.dialogData.translationState);\r\n\r\n  protected translationInfo = computedObj<TranslationInfo>('translationInfo', () => {\r\n    const translationState = this.translationStateSignal();\r\n    this.noLanguageRequired = [TranslationLinks.Translate, TranslationLinks.DontTranslate];\r\n    return {\r\n      showLanguageSelection: !this.noLanguageRequired.includes(translationState.linkType),\r\n      i18nRoot: `LangMenu.Dialog.${findI18nKey(translationState.linkType)}`,\r\n      submitDisabled: translationState.language === '' && !this.noLanguageRequired.includes(translationState.linkType),\r\n    };\r\n  });\r\n\r\n  protected languages = this.languageService.getAllSignal();\r\n  protected itemAttributes = this.itemService.itemAttributesSignal(this.dialogData.config.entityGuid);\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData: TranslateMenuDialogData) {}\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-snack-bar-warning-demo',\r\n  templateUrl: './snack-bar-warning-demo.component.html',\r\n  styleUrls: ['./snack-bar-warning-demo.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    TranslateModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class SnackBarWarningDemoComponent {\r\n  constructor() { }\r\n}\r\n","<h3 [innerHTML]=\"'LangMenu.SnackBar.Title' | translate | safeHtml\"></h3>\r\n<p [innerHTML]=\"'LangMenu.SnackBar.Body' | translate | safeHtml\" class=\"snack-bar-warning-demo-white-hyperlink\"></p>","<mat-card class=\"auto-translate-menu-dialog-card u-hide-scrollbar\">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      {{ 'LangMenu.Dialog.AutoTranslateAll.Title' | translate }}\r\n    </mat-card-title>\r\n    <app-feature-text-info [featureNameId]=\"'EditUiTranslateWithGoogle'\"></app-feature-text-info>\r\n    <mat-card-subtitle [innerHTML]=\"'LangMenu.Dialog.AutoTranslateAll.Body' | translate | safeHtml\">\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content class=\"eav-card-content__no-padding\">\r\n    <mat-action-list>\r\n      @for (language of languagesSig(); track language) {\r\n      <mat-list-item (click)=\"setLanguage(language.key)\"\r\n        [disabled]=\"language.disabled || !isTranslateWithGoogleFeatureEnabled()\" [ngClass]=\"{\r\n            'eav-list-item__focus': translationStateSignal().language === language.key,\r\n            'list-item__disabled': language.disabled || !isTranslateWithGoogleFeatureEnabled()\r\n            }\">\r\n        <mat-icon matListItemIcon [ngClass]=\"{ 'list-item-icon__disabled': language.disabled }\">language</mat-icon>\r\n        <span matListItemTitle>{{ language.key }}\r\n          @if (dialogData.isTranslateMany) {\r\n          <span>\r\n            @if (language.noTranslatableFields == 0) {\r\n            <span>({{\"LangMenu.Dialog.AutoTranslateAll.NoContent\" |\r\n              translate}})\r\n            </span>\r\n            }\r\n            @if (language.noTranslatableFields != 0) {\r\n            <span>\r\n              @if (language.noTranslatableFields == dialogData.translatableFields.length) {\r\n              <span>\r\n                @if (dialogData.translatableFields.length - language.noTranslatableFieldsThatHaveContent == 0) {\r\n                <span>({{\"LangMenu.Dialog.AutoTranslateAll.AllTranslatableFields\"\r\n                  | translate}})\r\n                </span>\r\n                }\r\n                @if (dialogData.translatableFields.length - language.noTranslatableFieldsThatHaveContent != 0) {\r\n                <span>({{\"LangMenu.Dialog.AutoTranslateAll.AllTranslatableFields\"\r\n                  | translate}},\r\n                  {{dialogData.translatableFields.length - language.noTranslatableFieldsThatHaveContent}}\r\n                  {{\"LangMenu.Dialog.AutoTranslateAll.Empty\" | translate}})\r\n                </span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (language.noTranslatableFields != dialogData.translatableFields.length) {\r\n              <span>\r\n                @if (dialogData.translatableFields.length - language.noTranslatableFieldsThatHaveContent == 0) {\r\n                <span>({{language.noTranslatableFields}}\r\n                  {{\"LangMenu.Dialog.AutoTranslateAll.Of\" | translate}}\r\n                  {{dialogData.translatableFields.length}} {{\"LangMenu.Dialog.AutoTranslateAll.TranslatableFields\" |\r\n                  translate}})\r\n                </span>\r\n                }\r\n                @if (dialogData.translatableFields.length - language.noTranslatableFieldsThatHaveContent != 0) {\r\n                <span>({{language.noTranslatableFields}}\r\n                  {{\"LangMenu.Dialog.AutoTranslateAll.Of\" | translate}}\r\n                  {{dialogData.translatableFields.length}} {{\"LangMenu.Dialog.AutoTranslateAll.TranslatableFields\" |\r\n                  translate}}\r\n                  , {{dialogData.translatableFields.length - language.noTranslatableFieldsThatHaveContent}}\r\n                  {{\"LangMenu.Dialog.AutoTranslateAll.Empty\" | translate}})\r\n                </span>\r\n                }\r\n              </span>\r\n              }\r\n            </span>\r\n            }\r\n          </span>\r\n          }\r\n        </span>\r\n      </mat-list-item>\r\n      }\r\n    </mat-action-list>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { AsyncPipe, NgClass } from '@angular/common';\r\nimport { Component, Inject, OnInit, computed, inject } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FeatureNames } from '../../../features/feature-names';\r\nimport { FeatureTextInfoComponent } from '../../../features/feature-text-info/feature-text-info.component';\r\nimport { FeaturesScopedService } from '../../../features/features-scoped.service';\r\nimport { TranslateHelperComponent } from '../../../shared/components/translate-helper.component';\r\nimport { EditApiKeyPaths } from '../../../shared/constants/eav.constants';\r\nimport { ApiKeySpecs } from '../../../shared/models/dialog-context.models';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { isCtrlS } from '../../dialog/main/keyboard-shortcuts';\r\nimport { getTemplateLanguages, getTemplateLanguagesWithContent } from '../../fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.helpers';\r\nimport { TranslateMenuDialogData } from '../../fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.models';\r\nimport { FieldsTranslateService } from '../../state/fields-translate.service';\r\nimport { SnackBarWarningDemoComponent } from '../snack-bar-warning-demo/snack-bar-warning-demo.component';\r\nimport { TranslationStateCore } from '../translate-state.model';\r\n\r\n@Component({\r\n  selector: 'app-auto-translate-menu-dialog',\r\n  templateUrl: './auto-translate-menu-dialog.component.html',\r\n  styleUrls: ['./auto-translate-menu-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    FeatureTextInfoComponent,\r\n    MatListModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class AutoTranslateMenuDialogComponent extends TranslateHelperComponent implements OnInit {\r\n\r\n  public features = inject(FeaturesScopedService);\r\n  public isTranslateWithGoogleFeatureEnabled = this.features.isEnabled[FeatureNames.EditUiTranslateWithGoogle];\r\n\r\n  protected languagesSig = computed(() => {\r\n    const languages = this.languages();\r\n    const language = this.language();\r\n    const attributes = this.itemAttributes();\r\n    const translationState = this.translationStateSignal();\r\n\r\n    return this.dialogData.isTranslateMany\r\n      ? getTemplateLanguagesWithContent(language, languages, attributes, translationState.linkType, this.dialogData.translatableFields)\r\n      : getTemplateLanguages(this.dialogData.config, language, languages, attributes, translationState.linkType);\r\n  });\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<AutoTranslateMenuDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: TranslateMenuDialogData,\r\n    private fieldsTranslateService: FieldsTranslateService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(dialogData);\r\n    this.dialog.keydownEvents().subscribe(event => {\r\n      if (isCtrlS(event))\r\n        event.preventDefault();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // If not enabled, ensure that after closed ...??? @STV\r\n    if (this.isTranslateWithGoogleFeatureEnabled())\r\n      this.dialog.afterClosed().subscribe(() => this.snackBar.dismiss());\r\n\r\n    // If the demo API key is being used, show snackbar warning\r\n    const apiKeyInfo = this.formConfig.settings.Values[EditApiKeyPaths.GoogleTranslate] as ApiKeySpecs;\r\n    if (apiKeyInfo.IsDemo)\r\n      this.snackBar.openFromComponent(SnackBarWarningDemoComponent);\r\n  }\r\n\r\n  setLanguage(language: string): void {\r\n    const newTranslationState: TranslationStateCore = { ...this.translationStateSignal(), language };\r\n    this.translationStateSignal.set(newTranslationState);\r\n\r\n    const oldState = this.dialogData.translationState;\r\n    const isEqual = oldState.language === newTranslationState.language;\r\n    if (isEqual) {\r\n      this.closeDialog();\r\n      return;\r\n    }\r\n\r\n    this.dialogData.isTranslateMany\r\n      ? this.fieldsTranslateService.autoTranslateMany(newTranslationState.language)\r\n      : this.fieldsTranslateService.autoTranslate([this.dialogData.config.fieldName], newTranslationState.language);\r\n\r\n    this.closeDialog();\r\n  }\r\n\r\n  private closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n}\r\n","  <mat-card class=\"translate-menu-dialog-card u-hide-scrollbar\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        {{ 'LangMenu.Dialog.Title' | translate: { name: dialogData.config.fieldName } }}\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        {{ 'LangMenu.Dialog.Intro' | translate }}\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"eav-card-content__no-padding\">\r\n      <mat-nav-list toggle focus>\r\n        <mat-list-item\r\n          [ngClass]=\"{ 'eav-list-item__focus': translationStateSignal().linkType === TranslationLinks.DontTranslate }\"\r\n          (click)=\"setLinkType(TranslationLinks.DontTranslate)\">\r\n          <mat-icon matListItemIcon color=\"accent\">lock</mat-icon>\r\n          <span matListItemTitle>{{ ('LangMenu.Dialog.' + I18nKeys.NoTranslate + '.Title') | translate : { primary: language().primary } }}</span>\r\n          <span matListItemLine>{{ ('LangMenu.Dialog.' + I18nKeys.NoTranslate + '.Body') | translate : { primary: language().primary } }}</span>\r\n        </mat-list-item>\r\n        <mat-list-item lines=3\r\n          [ngClass]=\"{ 'eav-list-item__focus': translationStateSignal().linkType === TranslationLinks.Translate }\"\r\n          (click)=\"setLinkType(TranslationLinks.Translate)\">\r\n          <mat-icon matListItemIcon color=\"accent\">lock_open</mat-icon>\r\n          <span matListItemTitle>{{ ('LangMenu.Dialog.' + I18nKeys.FromPrimary + '.Title') | translate : { primary: language().primary } }}</span>\r\n          <span>{{ ('LangMenu.Dialog.' + I18nKeys.FromPrimary + '.Body') | translate : { primary: language().primary } }}</span>\r\n        </mat-list-item>\r\n        <mat-list-item lines=3\r\n          [ngClass]=\"{ 'eav-list-item__focus': translationStateSignal().linkType === TranslationLinks.LinkCopyFrom }\"\r\n          (click)=\"setLinkType(TranslationLinks.LinkCopyFrom)\">\r\n          <mat-icon matListItemIcon color=\"accent\">translate</mat-icon>\r\n          <span matListItemTitle>{{ ('LangMenu.Dialog.' + I18nKeys.FromOther + '.Title') | translate : { primary: language().primary } }}</span>\r\n          <span>{{ ('LangMenu.Dialog.' + I18nKeys.FromOther + '.Body') | translate : { primary: language().primary }\r\n          }}</span>\r\n        </mat-list-item>\r\n        <mat-list-item\r\n          [ngClass]=\"{ 'eav-list-item__focus': translationStateSignal().linkType === TranslationLinks.LinkReadOnly }\"\r\n          (click)=\"setLinkType(TranslationLinks.LinkReadOnly)\">\r\n          <mat-icon matListItemIcon color=\"accent\">link</mat-icon>\r\n          <span matListItemTitle>{{ ('LangMenu.Dialog.' + I18nKeys.LinkReadOnly + '.Title') | translate : { primary: language().primary } }}</span>\r\n          <span matListItemLine>{{ ('LangMenu.Dialog.' + I18nKeys.LinkReadOnly + '.Body') | translate : { primary: language().primary } }}</span>\r\n        </mat-list-item>\r\n        <mat-list-item lines=3\r\n          [ngClass]=\"{ 'eav-list-item__focus': translationStateSignal().linkType === TranslationLinks.LinkReadWrite }\"\r\n          (click)=\"setLinkType(TranslationLinks.LinkReadWrite)\">\r\n          <mat-icon matListItemIcon color=\"accent\">share</mat-icon>\r\n          <span matListItemTitle>{{ ('LangMenu.Dialog.' + I18nKeys.LinkShared + '.Title') | translate : { primary: language().primary } }}</span>\r\n          <span>{{ ('LangMenu.Dialog.' + I18nKeys.LinkShared + '.Body') | translate : { primary: language().primary }\r\n          }}</span>\r\n        </mat-list-item>\r\n      </mat-nav-list>\r\n      @if (translationInfo().showLanguageSelection) {\r\n        <div>\r\n          <mat-card-header>\r\n            <mat-card-title>\r\n              {{ (translationInfo().i18nRoot + '.Subtitle') | translate }}\r\n            </mat-card-title>\r\n            <mat-card-subtitle>\r\n              {{'LangMenu.Dialog.PickLanguageIntro' | translate }}\r\n            </mat-card-subtitle>\r\n          </mat-card-header>\r\n          <mat-action-list>\r\n            @for (language of languagesSig(); track language) {\r\n              <mat-list-item (click)=\"setLanguage(language.key)\"\r\n                [disabled]=\"language.disabled\" [ngClass]=\"{\r\n                'eav-list-item__focus': translationStateSignal().language === language.key,\r\n                'list-item__disabled': language.disabled\r\n                }\">\r\n                <mat-icon matListItemIcon [ngClass]=\"{ 'list-item-icon__disabled': language.disabled }\">language</mat-icon>\r\n                <span matListItemTitle>{{ language.key }}</span>\r\n              </mat-list-item>\r\n            }\r\n          </mat-action-list>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-button color=\"accent\" [disabled]=\"translationInfo().submitDisabled\" (click)=\"run()\">OK</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n","import { AsyncPipe, NgClass } from '@angular/common';\r\nimport { Component, computed, Inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { Of } from '../../../../../../../../core';\r\nimport { TranslateHelperComponent } from '../../../../../shared/components/translate-helper.component';\r\nimport { isCtrlS } from '../../../../dialog/main/keyboard-shortcuts';\r\nimport { TranslationStateCore } from '../../../../localization/translate-state.model';\r\nimport { TranslationLinks } from '../../../../localization/translation-link.constants';\r\nimport { FieldsTranslateService } from '../../../../state/fields-translate.service';\r\nimport { getTemplateLanguages } from './translate-menu-dialog.helpers';\r\nimport { TranslateMenuDialogData } from './translate-menu-dialog.models';\r\n\r\ninterface TranslationInfo {\r\n  showLanguageSelection: boolean;\r\n  i18nRoot: string;\r\n  submitDisabled: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-translate-menu-dialog',\r\n  templateUrl: './translate-menu-dialog.component.html',\r\n  styleUrls: ['./translate-menu-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatListModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n  ],\r\n})\r\nexport class TranslateMenuDialogComponent extends TranslateHelperComponent {\r\n\r\n  protected languagesSig = computed(() => {\r\n    const languages = this.languages();\r\n    const language = this.language();\r\n    const attributes = this.itemAttributes();\r\n    const translationState = this.translationStateSignal();\r\n\r\n    return getTemplateLanguages(this.dialogData.config, language, languages, attributes, translationState.linkType);\r\n  });\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<TranslateMenuDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: TranslateMenuDialogData,\r\n    public fieldsTranslateService: FieldsTranslateService,\r\n  ) {\r\n    super(dialogData); //\r\n    this.dialog.keydownEvents().subscribe(event => {\r\n      if (isCtrlS(event))\r\n        event.preventDefault();\r\n    });\r\n  }\r\n\r\n  setLinkType(linkType: Of<typeof TranslationLinks>): void {\r\n    const newTranslationState: TranslationStateCore = {\r\n      linkType,\r\n      language: this.noLanguageRequired.includes(linkType) ? '' : this.translationStateSignal().language,\r\n    };\r\n    this.translationStateSignal.set(newTranslationState);\r\n  }\r\n\r\n  setLanguage(language: string): void {\r\n    const newTranslationState: TranslationStateCore = { ...this.translationStateSignal(), language };\r\n    this.translationStateSignal.set(newTranslationState);\r\n  }\r\n\r\n  run(): void {\r\n    const newState = this.translationStateSignal();\r\n    const oldState = this.dialogData.translationState;\r\n\r\n    const noChange = oldState.linkType === newState.linkType && oldState.language === newState.language;\r\n    if (noChange)\r\n      return this.closeDialog();\r\n\r\n    switch (newState.linkType) {\r\n      case TranslationLinks.Translate:\r\n        this.fieldsTranslateService.unlock(this.dialogData.config.fieldName);\r\n        break;\r\n      case TranslationLinks.DontTranslate:\r\n        this.fieldsTranslateService.lock(this.dialogData.config.fieldName);\r\n        break;\r\n      case TranslationLinks.LinkReadOnly:\r\n        this.fieldsTranslateService.linkReadOnly(this.dialogData.config.fieldName, newState.language);\r\n        break;\r\n      case TranslationLinks.LinkReadWrite:\r\n        this.fieldsTranslateService.linkReadWrite(this.dialogData.config.fieldName, newState.language);\r\n        break;\r\n      case TranslationLinks.LinkCopyFrom:\r\n        this.fieldsTranslateService.copyFrom(this.dialogData.config.fieldName, newState.language);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.closeDialog();\r\n  }\r\n\r\n  private closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n}\r\n","<!-- DBG: {{ language().current }} | {{ disabled() }} -->\r\n\r\n@if (language().current !== language().primary)\r\n{\r\n  <div class=\"my-flex-main\">\r\n    <div class=\"my-flex-inside eav-shared-languages-container\" [ngClass]=\"translationStateClass()\">\r\n      <div class=\"eav-shared-languages mat-caption\" [ngClass]=\"{ 'eav-shared-languages--disabled': disabled() }\">\r\n        {{translationState().infoLabel ? (translationState().infoLabel | translate:{ languages:\r\n        translationState().infoMessage }): '' }}\r\n      </div>\r\n      <div tippyTranslate=\"LangMenu.NotTranslatable\" [tippyDisabled]=\"!disableTranslateButtonSignal()\" tippyPlacement=\"top\">\r\n        <button mat-icon-button class=\"eav-translate-icon-button\" [matMenuTriggerFor]=\"menu\"\r\n          [disabled]=\"disableTranslateButtonSignal()\" [ngClass]=\"{ 'hidden': hideTranslateButton() }\">\r\n          <mat-icon class=\"eav-translate-icon\">translate</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <ng-template matMenuContent>\r\n        <button mat-menu-item (click)=\"translate()\"\r\n          [ngClass]=\"{ 'eav-menu-item-selected':translationState().linkType === TranslationLinks.Translate }\">\r\n          {{ 'LangMenu.Translate' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"openAutoTranslateMenuDialog(translationState())\"\r\n          [ngClass]=\"{ 'eav-menu-item-selected':translationState().linkType === TranslationLinks.Translate }\">\r\n          {{ 'LangMenu.AutoTranslate' | translate }}\r\n          <app-feature-icon-indicator [featureNameId]=\"'EditUiTranslateWithGoogle'\"></app-feature-icon-indicator>\r\n        </button>\r\n        <button mat-menu-item (click)=\"dontTranslate()\"\r\n          [ngClass]=\"{ 'eav-menu-item-selected':translationState().linkType === TranslationLinks.DontTranslate }\">\r\n          {{ 'LangMenu.NoTranslate' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"openTranslateMenuDialog(translationState())\"\r\n          [ngClass]=\"{ 'eav-menu-item-selected':translationState().language !== '' }\">\r\n          {{ 'LangMenu.Link' | translate }}\r\n        </button>\r\n      </ng-template>\r\n    </mat-menu>\r\n  </div>\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, inject, input, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FeatureIconIndicatorComponent } from '../../../../../features/feature-icon-indicator/feature-icon-indicator.component';\r\nimport { TippyDirective } from '../../../../../shared/directives/tippy.directive';\r\nimport { computedObj } from '../../../../../shared/signals/signal.utilities';\r\nimport { FormConfigService } from '../../../../form/form-config.service';\r\nimport { FormsStateService } from '../../../../form/forms-state.service';\r\nimport { AutoTranslateDisabledWarningDialog } from '../../../../localization/auto-translate-disabled-warning-dialog/auto-translate-disabled-warning-dialog.component';\r\nimport { AutoTranslateMenuDialogComponent } from '../../../../localization/auto-translate-menu-dialog/auto-translate-menu-dialog.component';\r\nimport { TranslationState } from '../../../../localization/translate-state.model';\r\nimport { TranslationLinks } from '../../../../localization/translation-link.constants';\r\nimport { FieldsTranslateService } from '../../../../state/fields-translate.service';\r\nimport { FieldState } from '../../../field-state';\r\nimport { TranslateMenuDialogComponent } from '../translate-menu-dialog/translate-menu-dialog.component';\r\nimport { TranslateMenuDialogData } from '../translate-menu-dialog/translate-menu-dialog.models';\r\nimport { TranslateMenuHelpers } from './translate-menu.helpers';\r\n\r\n@Component({\r\n  selector: 'app-translate-menu',\r\n  templateUrl: './translate-menu.component.html',\r\n  styleUrls: ['./translate-menu.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    FeatureIconIndicatorComponent,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class TranslateMenuComponent {\r\n  hideTranslateButton = input<boolean>();\r\n\r\n  #fieldState = inject(FieldState);\r\n  #formsStateService = inject(FormsStateService);\r\n\r\n  TranslationLinks = TranslationLinks;\r\n\r\n  protected translationState = this.#fieldState.translationState; // this.fieldSettings.translationState[this.#fieldState.name];\r\n  protected language = this.formConfig.language;\r\n\r\n  protected disabled = computedObj('disabled', () => this.#fieldState.ui().disabled);\r\n\r\n  translationStateClass = computedObj('translationStateClass', () => TranslateMenuHelpers.getTranslationStateClass(this.translationState().linkType));\r\n\r\n  disableTranslateButtonSignal = computedObj('disableTranslateButtonSignal',\r\n    () => this.#formsStateService.readOnly().isReadOnly || this.#fieldState.settings().DisableTranslation\r\n  );\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private formConfig: FormConfigService,\r\n    private fieldsTranslate: FieldsTranslateService,\r\n  ) { }\r\n\r\n  translate(): void {\r\n    this.fieldsTranslate.unlock(this.#fieldState.name);\r\n  }\r\n\r\n  dontTranslate(): void {\r\n    this.fieldsTranslate.lock(this.#fieldState.name);\r\n  }\r\n\r\n  openTranslateMenuDialog(translationState: TranslationState): void {\r\n    this.#openDialog(translationState, TranslateMenuDialogComponent);\r\n  }\r\n\r\n  openAutoTranslateMenuDialog(translationState: TranslationState): void {\r\n    if (this.#fieldState.settings().DisableAutoTranslation) {\r\n      this.matDialog.open(AutoTranslateDisabledWarningDialog, {\r\n        autoFocus: false,\r\n        data: { isAutoTranslateAll: false },\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '350px',\r\n      });\r\n    } else {\r\n      this.#openDialog(translationState, AutoTranslateMenuDialogComponent);\r\n    }\r\n\r\n  }\r\n\r\n  #openDialog(translationState: TranslationState, component: any): void {\r\n    const dialogData: TranslateMenuDialogData = {\r\n      config: this.#fieldState.config,\r\n      translationState: {\r\n        language: translationState.language,\r\n        linkType: translationState.linkType,\r\n      },\r\n    };\r\n    this.matDialog.open(component, {\r\n      autoFocus: false,\r\n      data: dialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '400px',\r\n    });\r\n  }\r\n}\r\n","import { Injectable, Injector, OnDestroy, Signal } from '@angular/core';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { filter, map, Subject } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { mapUntilChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { FormConfigService } from '../form/form-config.service';\r\nimport { FormLanguageService } from '../form/form-language.service';\r\nimport { UrlHelpers } from '../shared/helpers';\r\nimport { EditUrlParams } from './edit-url-params.model';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  childFormResult: true,\r\n  expand: false,\r\n  open: false,\r\n  watchToRefreshOnVersionsClosed: true,\r\n}\r\n\r\n/**\r\n * Special helper to handle opening / closing field-specific popups.\r\n * E.g. the larger dialog on hyperlinks/files or entity-pickers.\r\n *\r\n * Note: also seems to be involved in the version-dialog closing as well.\r\n * \r\n * Note that it seems to be \"Scoped\" to the EditDialogMain Component\r\n */\r\n@Injectable()\r\nexport class EditRoutingService extends ServiceBase implements OnDestroy {\r\n\r\n  log = classLog({EditRoutingService}, logSpecs);\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n  #route = this.#dialogRouter.route;\r\n  #router = this.#dialogRouter.router;\r\n\r\n  constructor(\r\n    private langInstanceSvc: FormLanguageService,\r\n    private formConfig: FormConfigService\r\n  ) {\r\n    super();\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#childFormResult$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.#initHideHeader();\r\n    this.#watchChildFormResult();\r\n  }\r\n\r\n  #childFormResult$ = new Subject<ChildFormResult>();\r\n\r\n  #getParams() { return this.#route.snapshot.params as EditUrlParams; }\r\n\r\n  #getParamsAndPayload() {\r\n    const p = this.#getParams();\r\n    const hasDetails = p.detailsEntityGuid != null && p.detailsFieldId != null;\r\n    return {\r\n      params: p,\r\n      hasDetails,\r\n      hasUpdate: p.updateEntityGuid != null && p.updateFieldId != null,\r\n      guid: hasDetails ? p.detailsEntityGuid : p.updateEntityGuid,\r\n      fieldId: hasDetails ? p.detailsFieldId : p.updateFieldId,\r\n    };\r\n  }\r\n\r\n  /** Tells if field with this index should be expanded */\r\n  isExpanded(fieldId: number, entityGuid: string) {\r\n    const fieldIndex = fieldId.toString();\r\n    const params = this.#getParams();\r\n    const isExpanded = params.detailsEntityGuid === entityGuid && params.detailsFieldId === fieldIndex;\r\n    return isExpanded;\r\n  }\r\n\r\n  /** Tells if field with this index should be expanded */\r\n  isExpanded$(fieldId: number, entityGuid: string) {\r\n    const fieldIndex = fieldId.toString();\r\n    return this.#route.params.pipe(\r\n      mapUntilChanged((p: EditUrlParams) => p.detailsEntityGuid === entityGuid && p.detailsFieldId === fieldIndex),\r\n    );\r\n  }\r\n\r\n  public isExpandedSignal(fieldId: number, entityGuid: string, injector: Injector): Signal<boolean> {\r\n    // Create a unique key by combining fieldId and entityGuid, then check cache\r\n    const key = `${fieldId}-${entityGuid}`;\r\n    const cached = this.#signalsExpandedCache[key];\r\n    if (cached) return cached;\r\n\r\n    // Get the observable and convert it to a signal\r\n    const obs = this.isExpanded$(fieldId, entityGuid);\r\n    return this.#signalsExpandedCache[key] = toSignal(obs, { injector });\r\n  }\r\n  #signalsExpandedCache: Record<string, Signal<boolean>> = {};\r\n\r\n  /** Fires when child form is closed and has a result, new entity was added */\r\n  childFormResult(fieldId: number, entityGuid: string) {\r\n    const l = this.log.fnIf('childFormResult', { fieldId, entityGuid });\r\n    const obs = this.#childFormResult$.pipe(\r\n      filter(cr => cr.updateEntityGuid === entityGuid && cr.updateFieldId === fieldId && cr.result != null),\r\n      map(cr => cr.result),\r\n    );\r\n    return l.rSilent(obs);\r\n  }\r\n\r\n  /** Fires when child form is closed */\r\n  childFormClosed() {\r\n    return this.#childFormResult$.pipe(map(_ => null));\r\n  }\r\n\r\n  expand(expand: boolean, fieldId: number, entityGuid: string, componentTag?: string) {\r\n    const l = this.log.fnIf('expand', { expand, fieldId, entityGuid, componentTag });\r\n    const pInfo = this.#getParamsAndPayload();\r\n    const p = pInfo.params;\r\n    const oldEditUrl = `edit/${p.items}` + (pInfo.hasDetails ? `/details/${pInfo.guid}/${pInfo.fieldId}` : '');\r\n    const newEditUrl = `edit/${p.items}` + (expand ? `/details/${entityGuid}/${fieldId}` : '');\r\n    const url = UrlHelpers.newUrlIfCurrentContainsOldUrl(this.#route, oldEditUrl, newEditUrl);\r\n    if (url == null) return l.end('no change');\r\n    this.#router.navigate([url], { state: componentTag && { componentTag } });\r\n    l.end('routed away to ', { url});\r\n  }\r\n\r\n  /** Opens child dialog and stores update entityGuid and fieldId in the url, if field is not expanded already */\r\n  open(fieldId: number, entityGuid: string, form: EditForm) {\r\n    const l = this.log.fnIf('open', { fieldId, entityGuid, form });\r\n    const formUrl = convertFormToUrl(form);\r\n    const pInfo = this.#getParamsAndPayload();\r\n    // if field is expanded, just open child because that info will be used for field update\r\n    if (pInfo.hasDetails) {\r\n      this.#router.navigate([`edit/${formUrl}`], { relativeTo: this.#route });\r\n      return l.end('expanded, just open child');\r\n    }\r\n\r\n    // otherwise add /update/:entityGuid/:fieldId to the url\r\n    const oldEditUrl = `edit/${pInfo.params.items}`;\r\n    const newEditUrl = `edit/${pInfo.params.items}/update/${entityGuid}/${fieldId}/edit/${formUrl}`;\r\n    const url = UrlHelpers.newUrlIfCurrentContainsOldUrl(this.#route,oldEditUrl, newEditUrl);\r\n    if (url == null) return l.end('no change');\r\n    this.#router.navigate([url]);\r\n    l.end('routed away to ', { url });\r\n  }\r\n\r\n  /** Update hideHeader for the form. Fix for safari and mobile browsers */\r\n  #initHideHeader() {\r\n    this.subscriptions.add(\r\n      this.#route.params\r\n        .pipe(\r\n          mapUntilChanged((p: EditUrlParams) => p.detailsEntityGuid != null && p.detailsFieldId != null)\r\n        )\r\n        .subscribe(hasDetails => this.langInstanceSvc.updateHideHeader(this.formConfig.config.formId, hasDetails))\r\n    );\r\n  }\r\n\r\n  #watchChildFormResult() {\r\n    this.subscriptions.add(\r\n      this.#dialogRouter.childDialogClosed$().pipe(\r\n        map(() => {\r\n          const pInfo = this.#getParamsAndPayload();\r\n          return {\r\n            pInfo,\r\n            result: {\r\n              updateEntityGuid: pInfo.guid,\r\n              updateFieldId: parseInt(pInfo.fieldId, 10),\r\n              result: this.#router.getCurrentNavigation().extras?.state,\r\n            } satisfies ChildFormResult\r\n          };\r\n        }),\r\n      ).subscribe(({ pInfo, result }) => {\r\n        // alert subscribers that child form closed\r\n        this.#childFormResult$.next(result);\r\n\r\n        // clear update ids from url (leave expanded/details)\r\n        if (!pInfo.hasUpdate) return;\r\n        \r\n        const p = pInfo.params;\r\n        const url = UrlHelpers.newUrlIfCurrentContainsOldUrl(this.#route, `edit/${p.items}/update/${p.updateEntityGuid}/${p.updateFieldId}`, `edit/${p.items}`);\r\n        if (url == null) return;\r\n        this.#router.navigate([url]);\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport interface NavigateFormResult {\r\n  navigateUrl: string;\r\n}\r\n\r\ninterface ChildFormResult {\r\n  updateEntityGuid: string;\r\n  updateFieldId: number;\r\n  /** On add, contains GUID and Id of newly added item */\r\n  result: {\r\n    [guid: string]: number;\r\n  };\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, inject, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { TranslateMenuComponent } from '../../../fields/wrappers/localization/translate-menu/translate-menu.component';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { FormsStateService } from '../../../form/forms-state.service';\r\nimport { EditRoutingService } from '../../../routing/edit-routing.service';\r\nimport { FieldState } from '../../field-state';\r\nimport { WrappersCatalog } from '../wrappers.constants';\r\n\r\n@Component({\r\n  selector: WrappersCatalog.LocalizationWrapper,\r\n  templateUrl: './localization-wrapper.component.html',\r\n  styleUrls: ['./localization-wrapper.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    TranslateMenuComponent,\r\n  ],\r\n})\r\nexport class LocalizationWrapperComponent {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild(TranslateMenuComponent) private translateMenu: TranslateMenuComponent;\r\n\r\n  #formConfig = inject(FormConfigService);\r\n  #fieldState = inject(FieldState);\r\n\r\n  language = this.#formConfig.language;\r\n  hideTranslateButton: boolean = true;\r\n\r\n  constructor(\r\n    private editRoutingService: EditRoutingService,\r\n    private formsStateService: FormsStateService,\r\n  ) { }\r\n\r\n  translate() {\r\n    if (this.formsStateService.readOnly().isReadOnly) return;\r\n    const language = this.#formConfig.language();\r\n    if (language.current === language.primary) return;\r\n    if (!this.#fieldState.ui().disabled) return;\r\n    const config = this.#fieldState.config;\r\n    const isExpanded = this.editRoutingService.isExpanded(config.index, config.entityGuid);\r\n    if (isExpanded) return;\r\n\r\n    this.translateMenu.translate();\r\n  }\r\n\r\n  toggleTranslateButtonVisibility(hide: boolean) {\r\n    this.hideTranslateButton = hide;\r\n  }\r\n}\r\n","<!-- <pre>Wrapper.Localization Start</pre> -->\r\n<div class=\"language-wrap\" (mouseenter)=\"toggleTranslateButtonVisibility(false)\"\r\n  (mouseleave)=\"toggleTranslateButtonVisibility(true)\">\r\n  <div class=\"language-wrap__field\"\r\n    [ngClass]=\"{ 'language-wrap__field-short': language()?.current !== language()?.primary }\" (dblclick)=\"translate()\">\r\n    <!-- <pre>Wrapper.Localization - Field Start</pre> -->\r\n    <ng-container #fieldComponent></ng-container>\r\n    <!-- <pre>Wrapper.Localization - Field End</pre> -->\r\n  </div>\r\n\r\n  <app-translate-menu class=\"language-wrap__translate\" [hideTranslateButton]=\"hideTranslateButton\"\r\n    [ngClass]=\"{ 'language-wrap__translate--hidden': language()?.current === language()?.primary }\">\r\n  </app-translate-menu>\r\n</div>\r\n<!-- <pre>Wrapper.Localization End</pre> -->\r\n","import { Type } from '@angular/core';\r\nimport 'reflect-metadata';\r\n\r\nexport const FieldMetadataKey = 'FieldMetadata' as const;\r\n\r\n/**\r\n * Angular decorator to add metadata to a field component.\r\n * @param metadata \r\n * @returns \r\n */\r\nexport function FieldMetadata(metadata: FieldMetadataModel) {\r\n  return (component: Type<any>) => {\r\n    Reflect.defineMetadata(FieldMetadataKey, metadata, component);\r\n  };\r\n}\r\n\r\nexport interface FieldMetadataModel {\r\n  wrappers?: string[];\r\n  requiredFeatures?: string[];\r\n}\r\n","import { Directive, ElementRef, NgZone, OnDestroy, OnInit } from '@angular/core';\r\n\r\n/**\r\n * This directive will fix all html inside it so that links open in a new tab.\r\n */\r\n@Directive({\r\n  selector: '[appChangeAnchorTarget]',\r\n  standalone: true\r\n})\r\nexport class ChangeAnchorTargetDirective implements OnInit, OnDestroy {\r\n  #target = '_blank';\r\n  #element: HTMLElement;\r\n  #observer: MutationObserver;\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone) {\r\n    this.#element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.#setAnchorTargets();\r\n      this.#observer = new MutationObserver((_: unknown) => {\r\n        this.#setAnchorTargets();\r\n      });\r\n      this.#observer.observe(this.#element, { attributes: true, childList: true, subtree: true });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.zone.runOutsideAngular(() => this.#observer.disconnect());\r\n  }\r\n\r\n  #setAnchorTargets() {\r\n    if (this.#element.nodeName.toLocaleLowerCase() === 'a') {\r\n      const anchor = this.#element as HTMLAnchorElement;\r\n      if (anchor.target !== this.#target)\r\n        anchor.target = this.#target;\r\n    }\r\n    const childAnchors = this.#element.getElementsByTagName('a');\r\n    for (const anchor of Array.from(childAnchors))\r\n      if (anchor.target !== this.#target)\r\n        anchor.target = this.#target;\r\n  }\r\n}\r\n","@if (show()) {\r\n  <div class=\"my-main\" [ngClass]=\"{\r\n      'my-last-field': fieldState.config.isLastInGroup,\r\n      'my-hyperlink-wrapper-fix': hyperlinkDefaultWrapperFix && !fieldState.config.isLastInGroup,\r\n      'small-gap': smallGap(),\r\n    }\"\r\n  >\r\n    @if (notes()) {\r\n      <mat-hint class=\"my-notes\" (click)=\"toggleHint($event)\" [ngClass]=\"{ 'disabled': disabled() }\">\r\n        <div class=\"id-notes-container\" [ngClass]=\"showExpand ? 'expandable': ''\" appChangeAnchorTarget\r\n          [innerHtml]=\"notes() | safeHtml\">\r\n        </div>\r\n      </mat-hint>\r\n    }\r\n    @if (showErrors() && errorMessage(); as error) {\r\n      <mat-error class=\"\">{{ error | translate: settings() }}</mat-error>\r\n    }\r\n    @if (!disableError() && warningMessage(); as warning) {\r\n      <mat-error class=\"warning\">{{ warning | translate }}</mat-error>\r\n    }\r\n  </div>\r\n}","import { NgClass } from '@angular/common';\r\nimport { Component, inject, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { ChangeAnchorTargetDirective } from '../directives/change-anchor-target.directive';\r\nimport { FieldState } from '../field-state';\r\n\r\n@Component({\r\n  selector: 'app-field-helper-text',\r\n  templateUrl: './field-help-text.component.html',\r\n  styleUrls: ['./field-help-text.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatFormFieldModule,\r\n    ChangeAnchorTargetDirective,\r\n    TranslateModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class FieldHelperTextComponent {\r\n  disableError = input<boolean>(false);\r\n  hyperlinkDefaultWrapperFix = input<boolean>(false);\r\n\r\n  /** Make the control \"flat\" to not take space if there is nothing to show. */\r\n  flatIfEmpty = input<boolean>(false);\r\n\r\n  smallGap = input<boolean>(false);\r\n\r\n  protected fieldState = inject(FieldState);\r\n\r\n  constructor() {\r\n    // Get the component ID from the compiler, so we can use it in the template\r\n    // This is to get style encapsulation to work with inner html\r\n    this.componentId = (this.constructor as unknown as { ['ɵcmp']: { id: string } })['ɵcmp'].id;\r\n  }\r\n\r\n  componentId: string;\r\n\r\n  protected settings = this.fieldState.settings;\r\n\r\n  #invalid = computedObj('invalid', () => this.fieldState.ui().invalid);\r\n  disabled = computedObj('disabled', () => this.fieldState.ui().disabled);\r\n\r\n  showErrors = computedObj('showErrors', () => this.#invalid() && !this.disableError());\r\n\r\n  /**\r\n   * Notes with all p-tags updated to have the current components identifying class.\r\n   * This ensures that styles which are on this component will also affect the notes.\r\n   */\r\n  notes = computedObj('notes', () => {\r\n    const n = this.settings().Notes ?? '';\r\n    return n.replace(/<p>/g, `<p _ngcontent-ng-${this.componentId}>`);\r\n  });\r\n\r\n  isEmpty = computedObj('isEmpty', () => !this.notes() && !this.showErrors());\r\n\r\n  errorMessage = computedObj('errorMessage', () => {\r\n    // Make dependency on value change - otherwise errors are not updated reliably\r\n    const _ = this.fieldState.uiValue();\r\n    // Get the current errors\r\n    return this.fieldState.ui().getErrors();\r\n  });\r\n\r\n  warningMessage = computedObj('warningMessage', () => this.fieldState.ui().getWarnings());\r\n\r\n  /**\r\n   * Show the control if:\r\n   * - it's not empty (which already checks if it has errors) \r\n   * - and if it doesn't have warnings\r\n   * - and flat wasn't preferred\r\n   */\r\n  show = computedObj('show', () => !this.isEmpty() || this.warningMessage() || !this.flatIfEmpty());\r\n\r\n  showExpand = true;\r\n\r\n  /** Don't toggle if clicked on an anchor tag or it's children */\r\n  toggleHint(event: MouseEvent) {\r\n    let target = event.target as HTMLElement;\r\n\r\n    if (target.nodeName.toLocaleLowerCase() === 'a') return;\r\n    while (target && target.classList && !target.classList.contains('id-notes-container')) {\r\n      target = target.parentNode as HTMLElement;\r\n      if (!target) return;\r\n      if (target.nodeName.toLocaleLowerCase() === 'a') return;\r\n    }\r\n\r\n    this.showExpand = !this.showExpand;\r\n  }\r\n}\r\n","import { Component, inject } from '@angular/core';\r\nimport { FieldSettingsBoolean } from 'projects/edit-types/src/FieldSettings-Boolean';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldState } from '../../field-state';\r\n\r\n@Component({\r\n  selector: 'app-boolean-base',\r\n  template: '',\r\n})\r\n// @FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport abstract class BooleanBaseComponent {\r\n\r\n  fieldState = inject(FieldState) as FieldState<boolean, FieldSettings & FieldSettingsBoolean>;\r\n\r\n  group = this.fieldState.group;\r\n  ui = this.fieldState.ui;\r\n  uiValue = this.fieldState.uiValue;\r\n\r\n  settings = this.fieldState.settings;\r\n  basics = this.fieldState.basics;\r\n\r\n  // TODO: CONTINUE HERE\r\n  changedLabel = this.fieldState.settingExt('_label');\r\n}\r\n","import { FieldSettingsBoolean } from 'projects/edit-types/src/FieldSettings-Boolean';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { FieldSettings } from './../../../../../../../edit-types/src/FieldSettings';\r\n\r\nexport class BooleanDefaultLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.BooleanDefault;\r\n\r\n  constructor() { super({ BooleanDefaultLogic }); }\r\n\r\n  update({ settings, value }: FieldLogicUpdate<boolean>): FieldSettings {\r\n    const fixedSettings = { ...settings } as FieldSettings & FieldSettingsBoolean;\r\n    fixedSettings.ReverseToggle ??= false;\r\n    fixedSettings._label = this.#calculateLabel(value, fixedSettings);\r\n    // fixedSettings.DisableAutoTranslation = true;\r\n    return fixedSettings;\r\n  }\r\n\r\n  #calculateLabel(value: boolean, settings: FieldSettings & FieldSettingsBoolean): string {\r\n    if (value === true && settings.TitleTrue)\r\n      return settings.TitleTrue;\r\n    if (value === false && settings.TitleFalse)\r\n      return settings.TitleFalse;\r\n    return settings.Name;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(BooleanDefaultLogic);\r\n","import { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { BooleanBaseComponent } from './boolean-base.component';\r\nimport { BooleanDefaultLogic } from './boolean-default-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.BooleanDefault,\r\n  templateUrl: './boolean-default.component.html',\r\n  styleUrls: ['./boolean-default.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSlideToggleModule,\r\n    NgClass,\r\n    FieldHelperTextComponent,\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class BooleanDefaultComponent extends BooleanBaseComponent {\r\n\r\n  constructor() {\r\n    super();\r\n    BooleanDefaultLogic.importMe();\r\n  }\r\n\r\n  checkedState = computedObj('checkedState', () => {\r\n    const value = this.uiValue();\r\n    const reverseToggle = this.settings().ReverseToggle;\r\n    return reverseToggle ? !value : value;\r\n  });\r\n\r\n  updateValue() {\r\n    if (this.ui().disabled) return;\r\n    this.fieldState.ui().setIfChanged(!this.uiValue());\r\n  }\r\n}\r\n","<div [formGroup]=\"group\">\r\n  <div class=\"eav-toggle-hitbox\" (click)=\"updateValue()\">\r\n    <mat-slide-toggle\r\n      [checked]=\"checkedState()\"\r\n      [disabled]=\"ui().disabled\"\r\n      [ngClass]=\"!uiValue() ? 'changeable-label-mat-slide-toggle' : ''\" />\r\n    <span [ngClass]=\"!uiValue() ? 'eav-toggle-label' : ''\" class=\"eav-slide-toggle-label\">\r\n      {{ changedLabel() ?? basics().label }}\r\n    </span>\r\n  </div>\r\n  <app-field-helper-text [disableError]=\"true\"></app-field-helper-text>\r\n</div>\r\n","import { FieldSettingsBoolean } from 'projects/edit-types/src/FieldSettings-Boolean';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { FieldSettings } from './../../../../../../../edit-types/src/FieldSettings';\r\n\r\nexport class BooleanTristateLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.BooleanTristate;\r\n\r\n  constructor() { super({ BooleanTristateLogic }); }\r\n\r\n  update({ settings, value }: FieldLogicUpdate<boolean | ''>): FieldSettings {\r\n    const fixedSettings = { ...settings } as FieldSettings & FieldSettingsBoolean;\r\n    fixedSettings.ReverseToggle ??= false;\r\n    fixedSettings._label = this.#calculateLabel(value, fixedSettings);\r\n    // fixedSettings.DisableAutoTranslation = true;\r\n    return fixedSettings;\r\n  }\r\n\r\n  #calculateLabel(value: boolean | '', settings: FieldSettings & FieldSettingsBoolean): string {\r\n    if (value === true && settings.TitleTrue)\r\n      return settings.TitleTrue;\r\n    if (value === false && settings.TitleFalse)\r\n      return settings.TitleFalse;\r\n    if (!value /* null | '' */ && settings.TitleIndeterminate)\r\n      return settings.TitleIndeterminate;\r\n    return settings.Name;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(BooleanTristateLogic);\r\n","import { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { FieldState } from '../../field-state';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { BooleanBaseComponent } from '../boolean-default/boolean-base.component';\r\nimport { BooleanTristateLogic } from './boolean-tristate-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.BooleanTristate,\r\n  templateUrl: './boolean-tristate.component.html',\r\n  styleUrls: ['./boolean-tristate.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSlideToggleModule,\r\n    NgClass,\r\n    FieldHelperTextComponent,\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class BooleanTristateComponent extends BooleanBaseComponent {\r\n\r\n  fs = this.fieldState as FieldState<boolean | ''>;\r\n\r\n  constructor() {\r\n    super();\r\n    BooleanTristateLogic.importMe();\r\n  }\r\n\r\n  checkedState = computedObj('checkedState', () => {\r\n    const value = this.fs.uiValue();\r\n    const reverseToggle = this.settings().ReverseToggle;\r\n    return reverseToggle\r\n      ? (value === true ? false : value === false ? true : value)\r\n      : (value === '' ? null : value);\r\n  });\r\n\r\n  bestLabel = computedObj('bestLabel', () => {\r\n    const value = this.checkedState();\r\n    const settings = this.settings();\r\n    if (value === true && settings.TitleTrue)           return settings.TitleTrue;\r\n    if (value === false && settings.TitleFalse)         return settings.TitleFalse;\r\n    if (value === null && settings.TitleIndeterminate)  return settings.TitleIndeterminate;\r\n    return settings.Name;\r\n  });\r\n\r\n  updateValue(disabled: boolean) {\r\n    if (disabled) return;\r\n    this.fieldState.ui().setIfChanged(this.#nextValue());\r\n  }\r\n\r\n  #nextValue() {\r\n    const current = this.fs.uiValue();\r\n    const reversed = this.settings().ReverseToggle;\r\n\r\n    switch (current) {\r\n      case false: return reversed ? true : null;\r\n      case true: return reversed ? null : false;\r\n      case '':\r\n      case null: return reversed ? false : true;\r\n    }\r\n  }\r\n}\r\n","<!-- New -->\r\n<div [formGroup]=\"group\">\r\n  <div class=\"eav-toggle-hitbox\" (click)=\"updateValue(ui().disabled)\">\r\n    <mat-slide-toggle\r\n    [checked]=\"checkedState()\"\r\n    [disabled]=\"ui().disabled\"\r\n    [ngClass]=\"{\r\n          'toggle-false': checkedState() === false,\r\n          'toggle-true': checkedState() === true,\r\n          'toggle-null': checkedState() === null,\r\n          'changeable-label-tristate-mat-slide-toggle': changedLabel() !== basics().label\r\n            }\" />\r\n    <span [ngClass]=\"!checkedState() ? 'eav-toggle-label' : ''\" class=\"eav-slide-toggle-label\">\r\n      {{ changedLabel() ?? basics().label }}\r\n    </span>\r\n  </div>\r\n  <app-field-helper-text [disableError]=\"true\"></app-field-helper-text>\r\n</div>\r\n","import { Component, inject } from '@angular/core';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { FieldState } from '../../field-state';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.CustomDefault,\r\n  templateUrl: './custom-default.component.html',\r\n  styleUrls: ['./custom-default.component.scss'],\r\n  standalone: true,\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class CustomDefaultComponent {\r\n\r\n  protected fieldState = inject(FieldState);\r\n  protected config = this.fieldState.config;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"message\">{{ config.fieldName }}: Field configuration is incomplete and should be fixed.</div>\r\n","import { CustomJsonEditor } from 'projects/edit-types/src/FieldSettings-CustomJsonEditor';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\n\r\nexport class CustomJsonEditorLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.CustomJsonEditor as string;\r\n\r\n  constructor() { super({ CustomJsonEditorLogic }); }\r\n\r\n  update({ settings }: FieldLogicUpdate): FieldSettings {\r\n    const fixedSettings = { ...settings } as FieldSettings & CustomJsonEditor;\r\n    fixedSettings.Rows ||= 5;\r\n    fixedSettings.JsonValidation ||= 'strict';\r\n    fixedSettings.JsonSchemaMode ||= 'none';\r\n    fixedSettings.JsonSchemaSource ||= 'link';\r\n    fixedSettings.JsonSchemaUrl ??= '';\r\n    fixedSettings.JsonSchemaRaw ??= '';\r\n    fixedSettings.JsonCommentsAllowed ??= false;\r\n    return fixedSettings;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(CustomJsonEditorLogic);\r\n\r\nexport class StringJsonLogic extends CustomJsonEditorLogic {\r\n  name = InputTypeCatalog.StringJson;\r\n}\r\n\r\nFieldLogicBase.add(StringJsonLogic);\r\n","<div class=\"json-field\" [ngClass]=\"{\r\n  'disabled': ui().disabled,\r\n  'focused': focused().value,\r\n  'error': ui().touchedAndInvalid\r\n  }\">\r\n  <mat-label class=\"label\">{{ basics().label }} {{ basics().required ? '*' : '' }}</mat-label>\r\n  <app-monaco-editor class=\"editor\"\r\n    [filename]=\"filename\"\r\n    [ngStyle]=\"{ 'height': editorHeight() }\"\r\n    [value]=\"uiValue()\"\r\n    [options]=\"monacoOptions\"\r\n    [jsonSchema]=\"jsonSchema()\"\r\n    [jsonComments]=\"jsonComments()\"\r\n    (valueChanged)=\"codeChanged($event)\"\r\n    (focused)=\"onFocused()\"\r\n    (blurred)=\"onBlurred()\">\r\n  </app-monaco-editor>\r\n  @if (!uiValue() && basics().placeholder) {\r\n    <input class=\"placeholder eav-translate-on-dblclick\" [placeholder]=\"basics().placeholder\">\r\n  }\r\n</div>\r\n<app-field-helper-text></app-field-helper-text>\r\n","import { NgClass, NgStyle } from '@angular/common';\r\nimport { Component, computed, inject } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { CustomJsonEditor } from 'projects/edit-types/src/FieldSettings-CustomJsonEditor';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { MonacoEditorComponent } from '../../../../monaco-editor/monaco-editor.component';\r\nimport { JsonSchema } from '../../../../monaco-editor/monaco-editor.models';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { FieldState } from '../../field-state';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { CustomJsonEditorLogic, StringJsonLogic } from './custom-json-editor-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.CustomJsonEditor,\r\n  templateUrl: './custom-json-editor.component.html',\r\n  styleUrls: ['./custom-json-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatFormFieldModule,\r\n    MonacoEditorComponent,\r\n    NgStyle,\r\n    FieldHelperTextComponent,\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class CustomJsonEditorComponent {\r\n  #fieldState = inject(FieldState) as FieldState<string, FieldSettings & CustomJsonEditor>;\r\n  #config = this.#fieldState.config;\r\n\r\n  protected ui = this.#fieldState.ui;\r\n  protected uiValue = this.#fieldState.uiValue;\r\n  protected basics = this.#fieldState.basics;\r\n  #settings = this.#fieldState.settings;\r\n\r\n  #rows = this.#fieldState.settingExt('Rows');\r\n  protected focused = computed(() => this.#config.focused$);\r\n\r\n  protected editorHeight = computed(() => {\r\n    return this.#rows() * this.monacoOptions.lineHeight + 'px';\r\n  });\r\n\r\n  protected jsonSchema = computed(() => {\r\n    const settings = this.#settings();\r\n    if (settings.JsonSchemaMode === 'none') return;\r\n    const jsonSchema: JsonSchema = {\r\n      type: settings.JsonSchemaSource,\r\n      value: settings.JsonSchemaSource === 'link' ? settings.JsonSchemaUrl : settings.JsonSchemaRaw,\r\n    };\r\n    return jsonSchema;\r\n  });\r\n\r\n  protected jsonComments = computed(() => {\r\n    const settings = this.#settings();\r\n    const jsonComments: Monaco.languages.json.SeverityLevel = settings.JsonCommentsAllowed ? 'ignore' : 'error';\r\n    return jsonComments;\r\n  });\r\n\r\n  protected filename: string;\r\n  protected monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    minimap: {\r\n      enabled: false,\r\n    },\r\n    lineHeight: 19,\r\n    lineNumbers: 'off',\r\n    lineDecorationsWidth: 0,\r\n    folding: false,\r\n    scrollBeyondLastLine: false,\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n\r\n  constructor(private formConfig: FormConfigService) {\r\n    CustomJsonEditorLogic.importMe();\r\n    StringJsonLogic.importMe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filename = `${this.#config.fieldName} ${this.#config.entityGuid} ${this.formConfig.config.formId}.json`;\r\n  }\r\n\r\n  codeChanged(code: string): void {\r\n    this.ui().setIfChanged(code);\r\n  }\r\n\r\n  onFocused(): void {\r\n    this.#config.focused$.next(true);\r\n  }\r\n\r\n  onBlurred(): void {\r\n    this.ui().markTouched();\r\n    this.#config.focused$.next(false);\r\n  }\r\n}\r\n","import { CdkMonitorFocus, CdkTrapFocus, A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/overlay';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, CdkPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { NgClass, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, EventEmitter, Injector, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Optional, SkipSelf, InjectionToken, Inject, ViewChild, forwardRef, ChangeDetectorRef, booleanAttribute, Directive, signal, Attribute, ContentChild, Self, TemplateRef, NgModule } from '@angular/core';\nimport { MatButton, MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1 from '@angular/material/core';\nimport { DateAdapter, MAT_DATE_FORMATS, _ErrorStateTracker, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport * as i2 from '@angular/cdk/bidi';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { normalizePassiveListenerOptions, Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { startWith, take, filter } from 'rxjs/operators';\nimport { coerceStringArray } from '@angular/cdk/coercion';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport * as i2$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl } from '@angular/forms';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/** @docs-private */\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must add one of the following ` +\n        `to your app config: provideNativeDateAdapter, provideDateFnsAdapter, ` +\n        `provideLuxonDateAdapter, provideMomentDateAdapter, or provide a custom implementation.`);\n}\n\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** Label for the button used to close the calendar popup. */\n        this.closeCalendarLabel = 'Close calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 24 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 24 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n        /**\n         * A label for the first date of a range of dates (used by screen readers).\n         * @deprecated Provide your own internationalization string.\n         * @breaking-change 17.0.0\n         */\n        this.startDateLabel = 'Start date';\n        /**\n         * A label for the last date of a range of dates (used by screen readers).\n         * @deprecated Provide your own internationalization string.\n         * @breaking-change 17.0.0\n         */\n        this.endDateLabel = 'End date';\n    }\n    /** Formats a range of years (used for visuals). */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n    /** Formats a label for a range of years (used by screen readers). */\n    formatYearRangeLabel(start, end) {\n        return `${start} to ${end}`;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nlet uniqueIdCounter$1 = 0;\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n        this.id = uniqueIdCounter$1++;\n    }\n}\nlet calendarBodyId = 1;\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/** Event options that can be used to bind a passive, capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Event options that can be used to bind a passive, non-capturing event. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    ngAfterViewChecked() {\n        if (this._focusActiveCellAfterViewChecked) {\n            this._focusActiveCell();\n            this._focusActiveCellAfterViewChecked = false;\n        }\n    }\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._platform = inject(Platform);\n        /**\n         * Used to focus the active cell after change detection has run.\n         */\n        this._focusActiveCellAfterViewChecked = false;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        this.activeDateChange = new EventEmitter();\n        /** Emits the date at the possible start of a drag event. */\n        this.dragStarted = new EventEmitter();\n        /** Emits the date at the conclusion of a drag, or null if mouse was not released on a date. */\n        this.dragEnded = new EventEmitter();\n        this._didDragSinceMouseDown = false;\n        this._injector = inject(Injector);\n        /**\n         * Tracking function for rows based on their identity. Ideally we would use some sort of\n         * key on the row, but that would require a breaking change for the `rows` input. We don't\n         * use the built-in identity tracking, because it logs warnings.\n         */\n        this._trackRow = (row) => row;\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        this._touchmoveHandler = (event) => {\n            if (!this.isRange)\n                return;\n            const target = getActualTouchTarget(event);\n            const cell = target ? this._getCellFromElement(target) : null;\n            if (target !== event.target) {\n                this._didDragSinceMouseDown = true;\n            }\n            // If the initial target of the touch is a date cell, prevent default so\n            // that the move is not handled as a scroll.\n            if (getCellElement(event.target)) {\n                event.preventDefault();\n            }\n            this._ngZone.run(() => this.previewChange.emit({ value: cell?.enabled ? cell : null, event }));\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                if (event.type !== 'blur') {\n                    this._didDragSinceMouseDown = true;\n                }\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target &&\n                    this._getCellFromElement(event.target) &&\n                    !(event.relatedTarget &&\n                        this._getCellFromElement(event.relatedTarget))) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        /**\n         * Triggered on mousedown or touchstart on a date cell.\n         * Respsonsible for starting a drag sequence.\n         */\n        this._mousedownHandler = (event) => {\n            if (!this.isRange)\n                return;\n            this._didDragSinceMouseDown = false;\n            // Begin a drag if a cell within the current range was targeted.\n            const cell = event.target && this._getCellFromElement(event.target);\n            if (!cell || !this._isInRange(cell.compareValue)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                this.dragStarted.emit({\n                    value: cell.rawValue,\n                    event,\n                });\n            });\n        };\n        /** Triggered on mouseup anywhere. Respsonsible for ending a drag sequence. */\n        this._mouseupHandler = (event) => {\n            if (!this.isRange)\n                return;\n            const cellElement = getCellElement(event.target);\n            if (!cellElement) {\n                // Mouseup happened outside of datepicker. Cancel drag.\n                this._ngZone.run(() => {\n                    this.dragEnded.emit({ value: null, event });\n                });\n                return;\n            }\n            if (cellElement.closest('.mat-calendar-body') !== this._elementRef.nativeElement) {\n                // Mouseup happened inside a different month instance.\n                // Allow it to handle the event.\n                return;\n            }\n            this._ngZone.run(() => {\n                const cell = this._getCellFromElement(cellElement);\n                this.dragEnded.emit({ value: cell?.rawValue ?? null, event });\n            });\n        };\n        /** Triggered on touchend anywhere. Respsonsible for ending a drag sequence. */\n        this._touchendHandler = (event) => {\n            const target = getActualTouchTarget(event);\n            if (target) {\n                this._mouseupHandler({ target });\n            }\n        };\n        this._id = `mat-calendar-body-${calendarBodyId++}`;\n        this._startDateLabelId = `${this._id}-start-date`;\n        this._endDateLabelId = `${this._id}-end-date`;\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            // `touchmove` is active since we need to call `preventDefault`.\n            element.addEventListener('touchmove', this._touchmoveHandler, activeCapturingEventOptions);\n            element.addEventListener('mouseenter', this._enterHandler, passiveCapturingEventOptions);\n            element.addEventListener('focus', this._enterHandler, passiveCapturingEventOptions);\n            element.addEventListener('mouseleave', this._leaveHandler, passiveCapturingEventOptions);\n            element.addEventListener('blur', this._leaveHandler, passiveCapturingEventOptions);\n            element.addEventListener('mousedown', this._mousedownHandler, passiveEventOptions);\n            element.addEventListener('touchstart', this._mousedownHandler, passiveEventOptions);\n            if (this._platform.isBrowser) {\n                window.addEventListener('mouseup', this._mouseupHandler);\n                window.addEventListener('touchend', this._touchendHandler);\n            }\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        // Ignore \"clicks\" that are actually canceled drags (eg the user dragged\n        // off and then went back to this cell to undo).\n        if (this._didDragSinceMouseDown) {\n            return;\n        }\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    _emitActiveDateChange(cell, event) {\n        if (cell.enabled) {\n            this.activeDateChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${(50 * this.cellAspectRatio) / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('touchmove', this._touchmoveHandler, activeCapturingEventOptions);\n        element.removeEventListener('mouseenter', this._enterHandler, passiveCapturingEventOptions);\n        element.removeEventListener('focus', this._enterHandler, passiveCapturingEventOptions);\n        element.removeEventListener('mouseleave', this._leaveHandler, passiveCapturingEventOptions);\n        element.removeEventListener('blur', this._leaveHandler, passiveCapturingEventOptions);\n        element.removeEventListener('mousedown', this._mousedownHandler, passiveEventOptions);\n        element.removeEventListener('touchstart', this._mousedownHandler, passiveEventOptions);\n        if (this._platform.isBrowser) {\n            window.removeEventListener('mouseup', this._mouseupHandler);\n            window.removeEventListener('touchend', this._touchendHandler);\n        }\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     *\n     * Adding a 0ms setTimeout seems to fix Voiceover losing focus when pressing PageUp/PageDown\n     * (issue #24330).\n     *\n     * Determined a 0ms by gradually increasing duration from 0 and testing two use cases with screen\n     * reader enabled:\n     *\n     * 1. Pressing PageUp/PageDown repeatedly with pausing between each key press.\n     * 2. Pressing and holding the PageDown key with repeated keys enabled.\n     *\n     * Test 1 worked roughly 95-99% of the time with 0ms and got a little bit better as the duration\n     * increased. Test 2 got slightly better until the duration was long enough to interfere with\n     * repeated keys. If the repeated key speed was faster than the timeout duration, then pressing\n     * and holding pagedown caused the entire page to scroll.\n     *\n     * Since repeated key speed can verify across machines, determined that any duration could\n     * potentially interfere with repeated keys. 0ms would be best because it almost entirely\n     * eliminates the focus being lost in Voiceover (#24330) without causing unintended side effects.\n     * Adding delay also complicates writing tests.\n     */\n    _focusActiveCell(movePreview = true) {\n        afterNextRender(() => {\n            setTimeout(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        }, { injector: this._injector });\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _scheduleFocusActiveCellAfterViewChecked() {\n        this._focusActiveCellAfterViewChecked = true;\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Gets ids of aria descriptions for the start and end of a date range. */\n    _getDescribedby(value) {\n        if (!this.isRange) {\n            return null;\n        }\n        if (this.startValue === value && this.endValue === value) {\n            return `${this._startDateLabelId} ${this._endDateLabelId}`;\n        }\n        else if (this.startValue === value) {\n            return this._startDateLabelId;\n        }\n        else if (this.endValue === value) {\n            return this._endDateLabelId;\n        }\n        return null;\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        const cell = getCellElement(element);\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCalendarBody, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatCalendarBody, isStandalone: true, selector: \"[mat-calendar-body]\", inputs: { label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", previewStart: \"previewStart\", previewEnd: \"previewEnd\", startDateAccessibleName: \"startDateAccessibleName\", endDateAccessibleName: \"endDateAccessibleName\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\", activeDateChange: \"activeDateChange\", dragStarted: \"dragStarted\", dragEnded: \"dragEnded\" }, host: { classAttribute: \"mat-calendar-body\" }, exportAs: [\"matCalendarBody\"], usesOnChanges: true, ngImport: i0, template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n@if (_firstRowOffset < labelMinRequiredCells) {\\n  <tr aria-hidden=\\\"true\\\">\\n    <td class=\\\"mat-calendar-body-label\\\"\\n        [attr.colspan]=\\\"numCols\\\"\\n        [style.paddingTop]=\\\"_cellPadding\\\"\\n        [style.paddingBottom]=\\\"_cellPadding\\\">\\n      {{label}}\\n    </td>\\n  </tr>\\n}\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n@for (row of rows; track _trackRow(row); let rowIndex = $index) {\\n  <tr role=\\\"row\\\">\\n    <!--\\n      This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n      because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n      table cells is maintained by setting the top and bottom padding as a percentage of the width\\n      (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n    -->\\n    @if (rowIndex === 0 && _firstRowOffset) {\\n      <td\\n        class=\\\"mat-calendar-body-label\\\"\\n        [attr.colspan]=\\\"_firstRowOffset\\\"\\n        [style.paddingTop]=\\\"_cellPadding\\\"\\n        [style.paddingBottom]=\\\"_cellPadding\\\">\\n        {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n      </td>\\n    }\\n    <!--\\n      Each gridcell in the calendar contains a button, which signals to assistive technology that the\\n      cell is interactable, as well as the selection state via `aria-pressed`. See #23476 for\\n      background.\\n    -->\\n    @for (item of row; track item.id; let colIndex = $index) {\\n      <td\\n        role=\\\"gridcell\\\"\\n        class=\\\"mat-calendar-body-cell-container\\\"\\n        [style.width]=\\\"_cellWidth\\\"\\n        [style.paddingTop]=\\\"_cellPadding\\\"\\n        [style.paddingBottom]=\\\"_cellPadding\\\"\\n        [attr.data-mat-row]=\\\"rowIndex\\\"\\n        [attr.data-mat-col]=\\\"colIndex\\\"\\n      >\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"mat-calendar-body-cell\\\"\\n            [ngClass]=\\\"item.cssClasses\\\"\\n            [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n            [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n            [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n            [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n            [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n            [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n            [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n            [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n            [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n            [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n            [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n            [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n            [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n            [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n            [attr.aria-label]=\\\"item.ariaLabel\\\"\\n            [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n            [attr.aria-pressed]=\\\"_isSelected(item.compareValue)\\\"\\n            [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n            [attr.aria-describedby]=\\\"_getDescribedby(item.compareValue)\\\"\\n            (click)=\\\"_cellClicked(item, $event)\\\"\\n            (focus)=\\\"_emitActiveDateChange(item, $event)\\\">\\n            <span class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n              [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n              [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n              [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n              {{item.displayValue}}\\n            </span>\\n            <span class=\\\"mat-calendar-body-cell-preview\\\" aria-hidden=\\\"true\\\"></span>\\n        </button>\\n      </td>\\n    }\\n  </tr>\\n}\\n\\n<span [id]=\\\"_startDateLabelId\\\" class=\\\"mat-calendar-body-hidden-label\\\">\\n  {{startDateAccessibleName}}\\n</span>\\n<span [id]=\\\"_endDateLabelId\\\" class=\\\"mat-calendar-body-hidden-label\\\">\\n  {{endDateAccessibleName}}\\n</span>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}\"], dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCalendarBody, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-calendar-body]', host: {\n                        'class': 'mat-calendar-body',\n                    }, exportAs: 'matCalendarBody', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgClass], template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n@if (_firstRowOffset < labelMinRequiredCells) {\\n  <tr aria-hidden=\\\"true\\\">\\n    <td class=\\\"mat-calendar-body-label\\\"\\n        [attr.colspan]=\\\"numCols\\\"\\n        [style.paddingTop]=\\\"_cellPadding\\\"\\n        [style.paddingBottom]=\\\"_cellPadding\\\">\\n      {{label}}\\n    </td>\\n  </tr>\\n}\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n@for (row of rows; track _trackRow(row); let rowIndex = $index) {\\n  <tr role=\\\"row\\\">\\n    <!--\\n      This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n      because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n      table cells is maintained by setting the top and bottom padding as a percentage of the width\\n      (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n    -->\\n    @if (rowIndex === 0 && _firstRowOffset) {\\n      <td\\n        class=\\\"mat-calendar-body-label\\\"\\n        [attr.colspan]=\\\"_firstRowOffset\\\"\\n        [style.paddingTop]=\\\"_cellPadding\\\"\\n        [style.paddingBottom]=\\\"_cellPadding\\\">\\n        {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n      </td>\\n    }\\n    <!--\\n      Each gridcell in the calendar contains a button, which signals to assistive technology that the\\n      cell is interactable, as well as the selection state via `aria-pressed`. See #23476 for\\n      background.\\n    -->\\n    @for (item of row; track item.id; let colIndex = $index) {\\n      <td\\n        role=\\\"gridcell\\\"\\n        class=\\\"mat-calendar-body-cell-container\\\"\\n        [style.width]=\\\"_cellWidth\\\"\\n        [style.paddingTop]=\\\"_cellPadding\\\"\\n        [style.paddingBottom]=\\\"_cellPadding\\\"\\n        [attr.data-mat-row]=\\\"rowIndex\\\"\\n        [attr.data-mat-col]=\\\"colIndex\\\"\\n      >\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"mat-calendar-body-cell\\\"\\n            [ngClass]=\\\"item.cssClasses\\\"\\n            [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n            [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n            [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n            [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n            [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n            [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n            [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n            [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n            [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n            [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n            [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n            [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n            [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n            [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n            [attr.aria-label]=\\\"item.ariaLabel\\\"\\n            [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n            [attr.aria-pressed]=\\\"_isSelected(item.compareValue)\\\"\\n            [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n            [attr.aria-describedby]=\\\"_getDescribedby(item.compareValue)\\\"\\n            (click)=\\\"_cellClicked(item, $event)\\\"\\n            (focus)=\\\"_emitActiveDateChange(item, $event)\\\">\\n            <span class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n              [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n              [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n              [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n              {{item.displayValue}}\\n            </span>\\n            <span class=\\\"mat-calendar-body-cell-preview\\\" aria-hidden=\\\"true\\\"></span>\\n        </button>\\n      </td>\\n    }\\n  </tr>\\n}\\n\\n<span [id]=\\\"_startDateLabelId\\\" class=\\\"mat-calendar-body-hidden-label\\\">\\n  {{startDateAccessibleName}}\\n</span>\\n<span [id]=\\\"_endDateLabelId\\\" class=\\\"mat-calendar-body-hidden-label\\\">\\n  {{endDateAccessibleName}}\\n</span>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { label: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], todayValue: [{\n                type: Input\n            }], startValue: [{\n                type: Input\n            }], endValue: [{\n                type: Input\n            }], labelMinRequiredCells: [{\n                type: Input\n            }], numCols: [{\n                type: Input\n            }], activeCell: [{\n                type: Input\n            }], isRange: [{\n                type: Input\n            }], cellAspectRatio: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], previewStart: [{\n                type: Input\n            }], previewEnd: [{\n                type: Input\n            }], startDateAccessibleName: [{\n                type: Input\n            }], endDateAccessibleName: [{\n                type: Input\n            }], selectedValueChange: [{\n                type: Output\n            }], previewChange: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], dragStarted: [{\n                type: Output\n            }], dragEnded: [{\n                type: Output\n            }] } });\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node?.nodeName === 'TD';\n}\n/**\n * Gets the date table cell element that is or contains the specified element.\n * Or returns null if element is not part of a date cell.\n */\nfunction getCellElement(element) {\n    let cell;\n    if (isTableCell(element)) {\n        cell = element;\n    }\n    else if (isTableCell(element.parentNode)) {\n        cell = element.parentNode;\n    }\n    else if (isTableCell(element.parentNode?.parentNode)) {\n        cell = element.parentNode.parentNode;\n    }\n    return cell?.getAttribute('data-mat-row') != null ? cell : null;\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return (rangeEnabled &&\n        start !== null &&\n        end !== null &&\n        start !== end &&\n        value >= start &&\n        value <= end);\n}\n/**\n * Extracts the element that actually corresponds to a touch event's location\n * (rather than the element that initiated the sequence of touch events).\n */\nfunction getActualTouchTarget(event) {\n    const touchLocation = event.changedTouches[0];\n    return document.elementFromPoint(touchLocation.clientX, touchLocation.clientY);\n}\n\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        const oldValue = this.selection;\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source, oldValue });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDateSelectionModel, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDateSelectionModel }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined }, { type: i1.DateAdapter }] });\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatSingleDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSingleDateSelectionModel, deps: [{ token: i1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSingleDateSelectionModel }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSingleDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i1.DateAdapter }] });\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return (this._isValidDateInstance(start) &&\n                this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0);\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return ((start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end)));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatRangeDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatRangeDateSelectionModel, deps: [{ token: i1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatRangeDateSelectionModel }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatRangeDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i1.DateAdapter }] });\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n    createDrag(dragOrigin, originalRange, newDate) {\n        let start = originalRange.start;\n        let end = originalRange.end;\n        if (!start || !end) {\n            // Can't drag from an incomplete range.\n            return null;\n        }\n        const adapter = this._dateAdapter;\n        const isRange = adapter.compareDate(start, end) !== 0;\n        const diffYears = adapter.getYear(newDate) - adapter.getYear(dragOrigin);\n        const diffMonths = adapter.getMonth(newDate) - adapter.getMonth(dragOrigin);\n        const diffDays = adapter.getDate(newDate) - adapter.getDate(dragOrigin);\n        if (isRange && adapter.sameDate(dragOrigin, originalRange.start)) {\n            start = newDate;\n            if (adapter.compareDate(newDate, end) > 0) {\n                end = adapter.addCalendarYears(end, diffYears);\n                end = adapter.addCalendarMonths(end, diffMonths);\n                end = adapter.addCalendarDays(end, diffDays);\n            }\n        }\n        else if (isRange && adapter.sameDate(dragOrigin, originalRange.end)) {\n            end = newDate;\n            if (adapter.compareDate(newDate, start) < 0) {\n                start = adapter.addCalendarYears(start, diffYears);\n                start = adapter.addCalendarMonths(start, diffMonths);\n                start = adapter.addCalendarDays(start, diffDays);\n            }\n        }\n        else {\n            start = adapter.addCalendarYears(start, diffYears);\n            start = adapter.addCalendarMonths(start, diffMonths);\n            start = adapter.addCalendarDays(start, diffDays);\n            end = adapter.addCalendarYears(end, diffYears);\n            end = adapter.addCalendarMonths(end, diffMonths);\n            end = adapter.addCalendarDays(end, diffDays);\n        }\n        return new DateRange(start, end);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, deps: [{ token: i1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DefaultMatCalendarRangeStrategy }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i1.DateAdapter }] });\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\nconst DAYS_PER_WEEK = 7;\nlet uniqueIdCounter = 0;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Origin of active drag, or null when dragging is not active. */\n        this.activeDrag = null;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when the user initiates a date range drag via mouse or touch. */\n        this.dragStarted = new EventEmitter();\n        /**\n         * Emits when the user completes or cancels a date range drag.\n         * Emits null when the drag was canceled or the newly selected date range if completed.\n         */\n        this.dragEnded = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n        if (changes['activeDrag'] && !this.activeDrag) {\n            this._clearPreview();\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedDate = this._getDateFromDayOfMonth(date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n        this._clearPreview();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n        const month = event.value;\n        const oldActiveDate = this._activeDate;\n        this.activeDate = this._getDateFromDayOfMonth(month);\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this._activeDate);\n        }\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, -1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, 1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._selectionKeyPressed = true;\n                if (this._canSelect(this._activeDate)) {\n                    // Prevent unexpected default actions such as form submission.\n                    // Note that we only prevent the default action here while the selection happens in\n                    // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                    // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                    // because it's too late (see #23305).\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null && !hasModifierKey(event)) {\n                    this._clearPreview();\n                    // If a drag is in progress, cancel the drag without changing the\n                    // current selection.\n                    if (this.activeDrag) {\n                        this.dragEnded.emit({ value: null, event });\n                    }\n                    else {\n                        this.selectedChange.emit(null);\n                        this._userSelection.emit({ value: null, event });\n                    }\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n            this._focusActiveCellAfterViewChecked();\n        }\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed && this._canSelect(this._activeDate)) {\n                this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel = this._dateFormats.display.monthLabel\n            ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n            : this._dateAdapter\n                .getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK +\n                this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) %\n                DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _focusActiveCellAfterViewChecked() {\n        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            if (this.activeDrag && value) {\n                const dragRange = this._rangeStrategy.createDrag?.(this.activeDrag.value, this.selected, value, event);\n                if (dragRange) {\n                    this._previewStart = this._getCellCompareValue(dragRange.start);\n                    this._previewEnd = this._getCellCompareValue(dragRange.end);\n                }\n            }\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Called when the user has ended a drag. If the drag/drop was successful,\n     * computes and emits the new range selection.\n     */\n    _dragEnded(event) {\n        if (!this.activeDrag)\n            return;\n        if (event.value) {\n            // Propagate drag effect\n            const dragDropResult = this._rangeStrategy?.createDrag?.(this.activeDrag.value, this.selected, event.value, event.event);\n            this.dragEnded.emit({ value: dragDropResult ?? null, event: event.event });\n        }\n        else {\n            this.dragEnded.emit({ value: null, event: event.event });\n        }\n    }\n    /**\n     * Takes a day of the month and returns a new date in the same month and year as the currently\n     *  active date. The returned date will have the same day of the month as the argument date.\n     */\n    _getDateFromDayOfMonth(dayOfMonth) {\n        return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), dayOfMonth);\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i], id: uniqueIdCounter++ };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return (!!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date)));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate)\n            ? this._dateAdapter.getDate(date)\n            : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 &&\n            d2 &&\n            this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n    /** Gets whether a date can be selected in the month view. */\n    _canSelect(date) {\n        return !this.dateFilter || this.dateFilter(date);\n    }\n    /** Clears out preview state. */\n    _clearPreview() {\n        this._previewStart = this._previewEnd = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMonthView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatMonthView, isStandalone: true, selector: \"mat-month-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", startDateAccessibleName: \"startDateAccessibleName\", endDateAccessibleName: \"endDateAccessibleName\", activeDrag: \"activeDrag\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", dragStarted: \"dragStarted\", dragEnded: \"dragEnded\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMonthView\"], usesOnChanges: true, ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      @for (day of _weekdays; track day.id) {\\n        <th scope=\\\"col\\\">\\n          <span class=\\\"cdk-visually-hidden\\\">{{day.long}}</span>\\n          <span aria-hidden=\\\"true\\\">{{day.narrow}}</span>\\n        </th>\\n      }\\n    </tr>\\n    <tr aria-hidden=\\\"true\\\"><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         [startDateAccessibleName]=\\\"startDateAccessibleName\\\"\\n         [endDateAccessibleName]=\\\"endDateAccessibleName\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (dragStarted)=\\\"dragStarted.emit($event)\\\"\\n         (dragEnded)=\\\"_dragEnded($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", dependencies: [{ kind: \"component\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\"], outputs: [\"selectedValueChange\", \"previewChange\", \"activeDateChange\", \"dragStarted\", \"dragEnded\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMonthView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-month-view', exportAs: 'matMonthView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatCalendarBody], template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      @for (day of _weekdays; track day.id) {\\n        <th scope=\\\"col\\\">\\n          <span class=\\\"cdk-visually-hidden\\\">{{day.long}}</span>\\n          <span aria-hidden=\\\"true\\\">{{day.narrow}}</span>\\n        </th>\\n      }\\n    </tr>\\n    <tr aria-hidden=\\\"true\\\"><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         [startDateAccessibleName]=\\\"startDateAccessibleName\\\"\\n         [endDateAccessibleName]=\\\"endDateAccessibleName\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (dragStarted)=\\\"dragStarted.emit($event)\\\"\\n         (dragEnded)=\\\"_dragEnded($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                }, {\n                    type: Optional\n                }] }], propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], startDateAccessibleName: [{\n                type: Input\n            }], endDateAccessibleName: [{\n                type: Input\n            }], activeDrag: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], dragStarted: [{\n                type: Output\n            }], dragEnded: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        const selectedYear = this._dateAdapter.createDate(year, 0, 1);\n        const selectedDate = this._getDateFromYear(year);\n        this.yearSelected.emit(selectedYear);\n        this.selectedChange.emit(selectedDate);\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n        const year = event.value;\n        const oldActiveDate = this._activeDate;\n        this.activeDate = this._getDateFromYear(year);\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage -\n                    getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) -\n                    1);\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCellAfterViewChecked();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _focusActiveCellAfterViewChecked() {\n        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /**\n     * Takes a year and returns a new date on the same day and month as the currently active date\n     *  The returned date will have the same year as the argument date.\n     */\n    _getDateFromYear(year) {\n        const activeMonth = this._dateAdapter.getMonth(this.activeDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, activeMonth, 1));\n        const normalizedDate = this._dateAdapter.createDate(year, activeMonth, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n        return normalizedDate;\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined ||\n            year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMultiYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatMultiYearView, isStandalone: true, selector: \"mat-multi-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMultiYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", dependencies: [{ kind: \"component\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\"], outputs: [\"selectedValueChange\", \"previewChange\", \"activeDateChange\", \"dragStarted\", \"dragEnded\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMultiYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-multi-year-view', exportAs: 'matMultiYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatCalendarBody], template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return (Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage));\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return ((a % b) + b) % b;\n}\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const selectedMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(selectedMonth);\n        const selectedDate = this._getDateFromMonth(month);\n        this.selectedChange.emit(selectedDate);\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n        const month = event.value;\n        const oldActiveDate = this._activeDate;\n        this.activeDate = this._getDateFromMonth(month);\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n            this._focusActiveCellAfterViewChecked();\n        }\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [\n            [0, 1, 2, 3],\n            [4, 5, 6, 7],\n            [8, 9, 10, 11],\n        ].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Schedules the matCalendarBody to focus the active cell after change detection has run */\n    _focusActiveCellAfterViewChecked() {\n        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate)\n            ? this._dateAdapter.getMonth(date)\n            : null;\n    }\n    /**\n     * Takes a month and returns a new date in the same day and year as the currently active date.\n     *  The returned date will have the same month as the argument date.\n     */\n    _getDateFromMonth(month) {\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined ||\n            month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth =\n                this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatYearView, isStandalone: true, selector: \"mat-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", dependencies: [{ kind: \"component\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\"], outputs: [\"selectedValueChange\", \"previewChange\", \"activeDateChange\", \"dragStarted\", \"dragEnded\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-year-view', exportAs: 'matYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatCalendarBody], template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\nlet calendarHeaderId = 1;\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._id = `mat-calendar-header-${calendarHeaderId++}`;\n        this._periodButtonLabelId = `${this._id}-period-label`;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The display text for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        return this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());\n    }\n    /** The aria description for the current calendar view. */\n    get periodButtonDescription() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // Format a label for the window of years displayed in the multi-year calendar view. Use\n        // `formatYearRangeLabel` because it is TTS friendly.\n        return this._intl.formatYearRangeLabel(...this._formatMinAndMaxYearLabels());\n    }\n    /** The `aria-label` for changing the calendar view. */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month'\n            ? this._intl.switchToMultiYearViewLabel\n            : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return (!this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate));\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return (!this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate));\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return (this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2));\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n    /**\n     * Format two individual labels for the minimum year and maximum year available in the multi-year\n     * calendar view. Returns an array of two strings where the first string is the formatted label\n     * for the minimum year, and the second string is the formatted label for the maximum year.\n     */\n    _formatMinAndMaxYearLabels() {\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear -\n            getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearLabel = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearLabel = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return [minYearLabel, maxYearLabel];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCalendarHeader, deps: [{ token: MatDatepickerIntl }, { token: forwardRef(() => MatCalendar) }, { token: i1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatCalendarHeader, isStandalone: true, selector: \"mat-calendar-header\", exportAs: [\"matCalendarHeader\"], ngImport: i0, template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <!-- [Firefox Issue: https://bugzilla.mozilla.org/show_bug.cgi?id=1880533]\\n      Relocated label next to related button and made visually hidden via cdk-visually-hidden\\n      to enable label to appear in a11y tree for SR when using Firefox -->\\n    <span [id]=\\\"_periodButtonLabelId\\\" class=\\\"cdk-visually-hidden\\\" aria-live=\\\"polite\\\">{{periodButtonDescription}}</span>\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_periodButtonLabelId\\\">\\n      <span aria-hidden=\\\"true\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"component\", type: MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", exportAs: [\"matButton\"] }, { kind: \"component\", type: MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCalendarHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar-header', exportAs: 'matCalendarHeader', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatButton, MatIconButton], template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <!-- [Firefox Issue: https://bugzilla.mozilla.org/show_bug.cgi?id=1880533]\\n      Relocated label next to related button and made visually hidden via cdk-visually-hidden\\n      to enable label to appear in a11y tree for SR when using Firefox -->\\n    <span [id]=\\\"_periodButtonLabelId\\\" class=\\\"cdk-visually-hidden\\\" aria-live=\\\"polite\\\">{{periodButtonDescription}}</span>\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_periodButtonLabelId\\\">\\n      <span aria-hidden=\\\"true\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: () => [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatCalendar)]\n                }] }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i0.ChangeDetectorRef }] });\n/** A calendar that is used as part of the datepicker. */\nclass MatCalendar {\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() {\n        return this._startAt;\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() {\n        return this._clampedActiveDate;\n    }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() {\n        return this._currentView;\n    }\n    set currentView(value) {\n        const viewChangedResult = this._currentView !== value ? value : null;\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n        if (viewChangedResult) {\n            this.viewChanged.emit(viewChangedResult);\n        }\n    }\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits a new date range value when the user completes a drag drop operation. */\n        this._userDragDrop = new EventEmitter();\n        /** Origin of active drag, or null when dragging is not active. */\n        this._activeDrag = null;\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        // Ignore date changes that are at a different time on the same day. This fixes issues where\n        // the calendar re-renders when there is no meaningful change to [minDate] or [maxDate]\n        // (#24435).\n        const minDateChange = changes['minDate'] &&\n            !this._dateAdapter.sameDate(changes['minDate'].previousValue, changes['minDate'].currentValue)\n            ? changes['minDate']\n            : undefined;\n        const maxDateChange = changes['maxDate'] &&\n            !this._dateAdapter.sameDate(changes['maxDate'].previousValue, changes['maxDate'].currentValue)\n            ? changes['maxDate']\n            : undefined;\n        const changeRequiringRerender = minDateChange || maxDateChange || changes['dateFilter'];\n        if (changeRequiringRerender && !changeRequiringRerender.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // Schedule focus to be moved to the active date since re-rendering\n                // can blur the active cell. See #29265.\n                this._moveFocusOnNextTick = true;\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /** Focuses the active date. */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        this._getCurrentViewComponent()._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Called when the user starts dragging to change a date range. */\n    _dragStarted(event) {\n        this._activeDrag = event;\n    }\n    /**\n     * Called when a drag completes. It may end in cancelation or in the selection\n     * of a new range.\n     */\n    _dragEnded(event) {\n        if (!this._activeDrag)\n            return;\n        if (event.value) {\n            this._userDragDrop.emit(event);\n        }\n        this._activeDrag = null;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        // The return type is explicitly written as a union to ensure that the Closure compiler does\n        // not optimize calls to _init(). Without the explicit return type, TypeScript narrows it to\n        // only the first component type. See https://github.com/angular/components/issues/22996.\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCalendar, deps: [{ token: MatDatepickerIntl }, { token: i1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatCalendar, isStandalone: true, selector: \"mat-calendar\", inputs: { headerComponent: \"headerComponent\", startAt: \"startAt\", startView: \"startView\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", startDateAccessibleName: \"startDateAccessibleName\", endDateAccessibleName: \"endDateAccessibleName\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\", _userDragDrop: \"_userDragDrop\" }, host: { classAttribute: \"mat-calendar\" }, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], viewQueries: [{ propertyName: \"monthView\", first: true, predicate: MatMonthView, descendants: true }, { propertyName: \"yearView\", first: true, predicate: MatYearView, descendants: true }, { propertyName: \"multiYearView\", first: true, predicate: MatMultiYearView, descendants: true }], exportAs: [\"matCalendar\"], usesOnChanges: true, ngImport: i0, template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  @switch (currentView) {\\n    @case ('month') {\\n        <mat-month-view\\n            [(activeDate)]=\\\"activeDate\\\"\\n            [selected]=\\\"selected\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [dateClass]=\\\"dateClass\\\"\\n            [comparisonStart]=\\\"comparisonStart\\\"\\n            [comparisonEnd]=\\\"comparisonEnd\\\"\\n            [startDateAccessibleName]=\\\"startDateAccessibleName\\\"\\n            [endDateAccessibleName]=\\\"endDateAccessibleName\\\"\\n            (_userSelection)=\\\"_dateSelected($event)\\\"\\n            (dragStarted)=\\\"_dragStarted($event)\\\"\\n            (dragEnded)=\\\"_dragEnded($event)\\\"\\n            [activeDrag]=\\\"_activeDrag\\\"></mat-month-view>\\n    }\\n\\n    @case ('year') {\\n        <mat-year-view\\n            [(activeDate)]=\\\"activeDate\\\"\\n            [selected]=\\\"selected\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [dateClass]=\\\"dateClass\\\"\\n            (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n            (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view>\\n    }\\n\\n    @case ('multi-year') {\\n        <mat-multi-year-view\\n            [(activeDate)]=\\\"activeDate\\\"\\n            [selected]=\\\"selected\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [dateClass]=\\\"dateClass\\\"\\n            (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n            (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view>\\n    }\\n  }\\n</div>\\n\", styles: [\".mat-calendar{display:block;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { kind: \"directive\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"], exportAs: [\"cdkMonitorFocus\"] }, { kind: \"component\", type: MatMonthView, selector: \"mat-month-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\", \"activeDrag\"], outputs: [\"selectedChange\", \"_userSelection\", \"dragStarted\", \"dragEnded\", \"activeDateChange\"], exportAs: [\"matMonthView\"] }, { kind: \"component\", type: MatYearView, selector: \"mat-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"monthSelected\", \"activeDateChange\"], exportAs: [\"matYearView\"] }, { kind: \"component\", type: MatMultiYearView, selector: \"mat-multi-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"yearSelected\", \"activeDateChange\"], exportAs: [\"matMultiYearView\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCalendar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar', host: {\n                        'class': 'mat-calendar',\n                    }, exportAs: 'matCalendar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], standalone: true, imports: [CdkPortalOutlet, CdkMonitorFocus, MatMonthView, MatYearView, MatMultiYearView], template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  @switch (currentView) {\\n    @case ('month') {\\n        <mat-month-view\\n            [(activeDate)]=\\\"activeDate\\\"\\n            [selected]=\\\"selected\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [dateClass]=\\\"dateClass\\\"\\n            [comparisonStart]=\\\"comparisonStart\\\"\\n            [comparisonEnd]=\\\"comparisonEnd\\\"\\n            [startDateAccessibleName]=\\\"startDateAccessibleName\\\"\\n            [endDateAccessibleName]=\\\"endDateAccessibleName\\\"\\n            (_userSelection)=\\\"_dateSelected($event)\\\"\\n            (dragStarted)=\\\"_dragStarted($event)\\\"\\n            (dragEnded)=\\\"_dragEnded($event)\\\"\\n            [activeDrag]=\\\"_activeDrag\\\"></mat-month-view>\\n    }\\n\\n    @case ('year') {\\n        <mat-year-view\\n            [(activeDate)]=\\\"activeDate\\\"\\n            [selected]=\\\"selected\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [dateClass]=\\\"dateClass\\\"\\n            (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n            (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view>\\n    }\\n\\n    @case ('multi-year') {\\n        <mat-multi-year-view\\n            [(activeDate)]=\\\"activeDate\\\"\\n            [selected]=\\\"selected\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [dateClass]=\\\"dateClass\\\"\\n            (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n            (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view>\\n    }\\n  }\\n</div>\\n\", styles: [\".mat-calendar{display:block;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [{ type: MatDatepickerIntl }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i0.ChangeDetectorRef }], propDecorators: { headerComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], startDateAccessibleName: [{\n                type: Input\n            }], endDateAccessibleName: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], _userDragDrop: [{\n                type: Output\n            }], monthView: [{\n                type: ViewChild,\n                args: [MatMonthView]\n            }], yearView: [{\n                type: ViewChild,\n                args: [MatYearView]\n            }], multiYearView: [{\n                type: ViewChild,\n                args: [MatMultiYearView]\n            }] } });\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        transition('void => enter-dropdown', animate('120ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(1, 0.8)' }),\n            style({ opacity: 1, transform: 'scale(1, 1)' }),\n        ]))),\n        transition('void => enter-dialog', animate('150ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0.7)' }),\n            style({ transform: 'none', opacity: 1 }),\n        ]))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n    ]),\n};\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition();\n    },\n});\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent {\n    constructor(_elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, intl) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._globalModel = _globalModel;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n        /** Whether there is an in-progress animation. */\n        this._isAnimating = false;\n        /** Portal with projected action buttons. */\n        this._actionsPortal = null;\n        this._closeButtonText = intl.closeCalendarLabel;\n    }\n    ngOnInit() {\n        this._animationState = this.datepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n    }\n    ngAfterViewInit() {\n        this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        const selection = this._model.selection;\n        const value = event.value;\n        const isRange = selection instanceof DateRange;\n        // If we're selecting a range and we have a selection strategy, always pass the value through\n        // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n        // A null value when picking a range means that the user cancelled the selection (e.g. by\n        // pressing escape), whereas when selecting a single value it means that the value didn't\n        // change. This isn't very intuitive, but it's here for backwards-compatibility.\n        if (isRange && this._rangeSelectionStrategy) {\n            const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n            this._model.updateSelection(newSelection, this);\n        }\n        else if (value &&\n            (isRange || !this._dateAdapter.sameDate(value, selection))) {\n            this._model.add(value);\n        }\n        // Delegate closing the overlay to the actions.\n        if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n            this.datepicker.close();\n        }\n    }\n    _handleUserDragDrop(event) {\n        this._model.updateSelection(event.value, this);\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleAnimationEvent(event) {\n        this._isAnimating = event.phaseName === 'start';\n        if (!this._isAnimating) {\n            this._animationDone.next();\n        }\n    }\n    _getSelected() {\n        return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n        if (this._model !== this._globalModel) {\n            this._globalModel.updateSelection(this._model.selection, this);\n        }\n    }\n    /**\n     * Assigns a new portal containing the datepicker actions.\n     * @param portal Portal with the actions to be assigned.\n     * @param forceRerender Whether a re-render of the portal should be triggered. This isn't\n     * necessary if the portal is assigned during initialization, but it may be required if it's\n     * added at a later point.\n     */\n    _assignActions(portal, forceRerender) {\n        // If we have actions, clone the model so that we have the ability to cancel the selection,\n        // otherwise update the global model directly. Note that we want to assign this as soon as\n        // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n        this._model = portal ? this._globalModel.clone() : this._globalModel;\n        this._actionsPortal = portal;\n        if (forceRerender) {\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerContent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MatDateSelectionModel }, { token: i1.DateAdapter }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }, { token: MatDatepickerIntl }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDatepickerContent, isStandalone: true, selector: \"mat-datepicker-content\", inputs: { color: \"color\" }, host: { listeners: { \"@transformPanel.start\": \"_handleAnimationEvent($event)\", \"@transformPanel.done\": \"_handleAnimationEvent($event)\" }, properties: { \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\", \"@transformPanel\": \"_animationState\", \"class.mat-datepicker-content-touch\": \"datepicker.touchUi\" }, classAttribute: \"mat-datepicker-content\" }, viewQueries: [{ propertyName: \"_calendar\", first: true, predicate: MatCalendar, descendants: true }], exportAs: [\"matDatepickerContent\"], ngImport: i0, template: \"<div\\n  cdkTrapFocus\\n  role=\\\"dialog\\\"\\n  [attr.aria-modal]=\\\"true\\\"\\n  [attr.aria-labelledby]=\\\"_dialogLabelId ?? undefined\\\"\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-custom-header]=\\\"datepicker.calendarHeaderComponent\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [class]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    [startDateAccessibleName]=\\\"startDateAccessibleName\\\"\\n    [endDateAccessibleName]=\\\"endDateAccessibleName\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"\\n    (_userDragDrop)=\\\"_handleUserDragDrop($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\"], dependencies: [{ kind: \"directive\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: [\"cdkTrapFocus\", \"cdkTrapFocusAutoCapture\"], exportAs: [\"cdkTrapFocus\"] }, { kind: \"component\", type: MatCalendar, selector: \"mat-calendar\", inputs: [\"headerComponent\", \"startAt\", \"startView\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\"], outputs: [\"selectedChange\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\", \"_userDragDrop\"], exportAs: [\"matCalendar\"] }, { kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { kind: \"component\", type: MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", exportAs: [\"matButton\"] }], animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerContent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-content', host: {\n                        'class': 'mat-datepicker-content',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                        '[@transformPanel]': '_animationState',\n                        '(@transformPanel.start)': '_handleAnimationEvent($event)',\n                        '(@transformPanel.done)': '_handleAnimationEvent($event)',\n                        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n                    }, animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], exportAs: 'matDatepickerContent', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [CdkTrapFocus, MatCalendar, CdkPortalOutlet, MatButton], template: \"<div\\n  cdkTrapFocus\\n  role=\\\"dialog\\\"\\n  [attr.aria-modal]=\\\"true\\\"\\n  [attr.aria-labelledby]=\\\"_dialogLabelId ?? undefined\\\"\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-custom-header]=\\\"datepicker.calendarHeaderComponent\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [class]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    [startDateAccessibleName]=\\\"startDateAccessibleName\\\"\\n    [endDateAccessibleName]=\\\"endDateAccessibleName\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"\\n    (_userDragDrop)=\\\"_handleUserDragDrop($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: i1.DateAdapter }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                }] }, { type: MatDatepickerIntl }], propDecorators: { _calendar: [{\n                type: ViewChild,\n                args: [MatCalendar]\n            }], color: [{\n                type: Input\n            }] } });\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Theme color of the datepicker's calendar. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n        return (this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined));\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this.datepickerInput\n            ? this.datepickerInput.disabled\n            : !!this._disabled;\n    }\n    set disabled(value) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Classes to be passed to the date picker panel. */\n    get panelClass() {\n        return this._panelClass;\n    }\n    set panelClass(value) {\n        this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        if (value) {\n            this.open();\n        }\n        else {\n            this.close();\n        }\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    constructor(_overlay, \n    /**\n     * @deprecated parameter is unused and will be removed\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _model) {\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        this._document = inject(DOCUMENT);\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        /**\n         * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n         * than a dropdown and elements have more padding to allow for bigger touch targets.\n         */\n        this.touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        /**\n         * Whether to restore focus to the previously-focused element when the calendar is closed.\n         * Note that automatic focus restoration is an accessibility feature and it is recommended that\n         * you provide your own equivalent, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this.stateChanges = new Subject();\n        this._injector = inject(Injector);\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n        this._model.selectionChanged.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._overlayRef) {\n            const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n            if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n                this._setConnectedPositions(positionStrategy);\n                if (this.opened) {\n                    this._overlayRef.updatePosition();\n                }\n            }\n        }\n        this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyOverlay();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n        this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n        if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this.datepickerInput = input;\n        this._inputStateChanges = input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n        return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n        if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single actions row.');\n        }\n        this._actionsPortal = portal;\n        this._componentRef?.instance._assignActions(portal, true);\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n        if (portal === this._actionsPortal) {\n            this._actionsPortal = null;\n            this._componentRef?.instance._assignActions(null, true);\n        }\n    }\n    /** Open the calendar. */\n    open() {\n        // Skip reopening if there's an in-progress animation to avoid overlapping\n        // sequences which can cause \"changed after checked\" errors. See #25837.\n        if (this._opened || this.disabled || this._componentRef?.instance._isAnimating) {\n            return;\n        }\n        if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n        this._openOverlay();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        // Skip reopening if there's an in-progress animation to avoid overlapping\n        // sequences which can cause \"changed after checked\" errors. See #25837.\n        if (!this._opened || this._componentRef?.instance._isAnimating) {\n            return;\n        }\n        const canRestoreFocus = this.restoreFocus &&\n            this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function';\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n            }\n        };\n        if (this._componentRef) {\n            const { instance, location } = this._componentRef;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => {\n                const activeElement = this._document.activeElement;\n                // Since we restore focus after the exit animation, we have to check that\n                // the user didn't move focus themselves inside the `close` handler.\n                if (canRestoreFocus &&\n                    (!activeElement ||\n                        activeElement === this._document.activeElement ||\n                        location.nativeElement.contains(activeElement))) {\n                    this._focusedElementBeforeOpen.focus();\n                }\n                this._focusedElementBeforeOpen = null;\n                this._destroyOverlay();\n            });\n        }\n        if (canRestoreFocus) {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Applies the current pending selection on the overlay to the model. */\n    _applyPendingSelection() {\n        this._componentRef?.instance?._applyPendingSelection();\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n        instance._dialogLabelId = this.datepickerInput.getOverlayLabelId();\n        instance._assignActions(this._actionsPortal, false);\n    }\n    /** Opens the overlay with the calendar. */\n    _openOverlay() {\n        this._destroyOverlay();\n        const isDialog = this.touchUi;\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        const overlayRef = (this._overlayRef = this._overlay.create(new OverlayConfig({\n            positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n            hasBackdrop: true,\n            backdropClass: [\n                isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop',\n                this._backdropHarnessClass,\n            ],\n            direction: this._dir,\n            scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n            panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`,\n        })));\n        this._getCloseStream(overlayRef).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n        // The `preventDefault` call happens inside the calendar as well, however focus moves into\n        // it inside a timeout which can give browsers a chance to fire off a keyboard event in-between\n        // that can scroll the page (see #24969). Always block default actions of arrow keys for the\n        // entire overlay so the page doesn't get scrolled by accident.\n        overlayRef.keydownEvents().subscribe(event => {\n            const keyCode = event.keyCode;\n            if (keyCode === UP_ARROW ||\n                keyCode === DOWN_ARROW ||\n                keyCode === LEFT_ARROW ||\n                keyCode === RIGHT_ARROW ||\n                keyCode === PAGE_UP ||\n                keyCode === PAGE_DOWN) {\n                event.preventDefault();\n            }\n        });\n        this._componentRef = overlayRef.attach(portal);\n        this._forwardContentValues(this._componentRef.instance);\n        // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n        if (!isDialog) {\n            afterNextRender(() => {\n                overlayRef.updatePosition();\n            }, { injector: this._injector });\n        }\n    }\n    /** Destroys the current overlay. */\n    _destroyOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = this._componentRef = null;\n        }\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDialogStrategy() {\n        return this._overlay.position().global().centerHorizontally().centerVertically();\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDropdownStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        return this._setConnectedPositions(strategy);\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY,\n            },\n        ]);\n    }\n    /** Gets an observable that will emit when the overlay is supposed to be closed. */\n    _getCloseStream(overlayRef) {\n        const ctrlShiftMetaModifiers = ['ctrlKey', 'shiftKey', 'metaKey'];\n        return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                (this.datepickerInput &&\n                    hasModifierKey(event, 'altKey') &&\n                    event.keyCode === UP_ARROW &&\n                    ctrlShiftMetaModifiers.every((modifier) => !hasModifierKey(event, modifier))));\n        })));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerBase, deps: [{ token: i4.Overlay }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: MAT_DATEPICKER_SCROLL_STRATEGY }, { token: i1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MatDateSelectionModel }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatDatepickerBase, inputs: { calendarHeaderComponent: \"calendarHeaderComponent\", startAt: \"startAt\", startView: \"startView\", color: \"color\", touchUi: [\"touchUi\", \"touchUi\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], xPosition: \"xPosition\", yPosition: \"yPosition\", restoreFocus: [\"restoreFocus\", \"restoreFocus\", booleanAttribute], dateClass: \"dateClass\", panelClass: \"panelClass\", opened: [\"opened\", \"opened\", booleanAttribute] }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i4.Overlay }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n                }] }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: MatDateSelectionModel }], propDecorators: { calendarHeaderComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], touchUi: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], restoreFocus: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], dateClass: [{\n                type: Input\n            }], openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], panelClass: [{\n                type: Input\n            }], opened: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepicker, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDatepicker, isStandalone: true, selector: \"mat-datepicker\", providers: [\n            MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDatepicker },\n        ], exportAs: [\"matDatepicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-datepicker',\n                    template: '',\n                    exportAs: 'matDatepicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDatepicker },\n                    ],\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() {\n        return !!this._disabled || this._parentDisabled();\n    }\n    set disabled(value) {\n        const newValue = value;\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (this._shouldHandleChangeEvent(event)) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n        });\n    }\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid\n                ? null\n                : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !controlValue || this._matchesFilter(controlValue)\n                ? null\n                : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return !min || !controlValue || this._dateAdapter.compareDate(min, controlValue) <= 0\n                ? null\n                : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return !max || !controlValue || this._dateAdapter.compareDate(max, controlValue) >= 0\n                ? null\n                : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this._assignValueProgrammatically(this.value);\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const ctrlShiftMetaModifiers = ['ctrlKey', 'shiftKey', 'metaKey'];\n        const isAltDownArrow = hasModifierKey(event, 'altKey') &&\n            event.keyCode === DOWN_ARROW &&\n            ctrlShiftMetaModifiers.every((modifier) => !hasModifierKey(event, modifier));\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        const hasChanged = !this._dateAdapter.sameDate(date, this.value);\n        // We need to fire the CVA change event for all\n        // nulls, otherwise the validators won't run.\n        if (!date || hasChanged) {\n            this._cvaOnChange(date);\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n        if (hasChanged) {\n            this._assignValue(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value != null ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        this._assignValue(value);\n        this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n        const filter = this._getDateFilter();\n        return !filter || filter(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerInputBase, deps: [{ token: i0.ElementRef }, { token: i1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatDatepickerInputBase, isStandalone: true, inputs: { value: \"value\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerInputBase, decorators: [{\n            type: Directive,\n            args: [{ standalone: true }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }], propDecorators: { value: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], dateChange: [{\n                type: Output\n            }], dateInput: [{\n                type: Output\n            }] } });\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._ariaOwns.set(datepicker.opened ? datepicker.id : null);\n            this._closedSubscription = datepicker.closedStream.subscribe(() => {\n                this._onTouched();\n                this._ariaOwns.set(null);\n            });\n            this._openedSubscription = datepicker.openedStream.subscribe(() => {\n                this._ariaOwns.set(datepicker.id);\n            });\n            this._registerModel(datepicker.registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const wasMatchingValue = this._matchesFilter(this.value);\n        this._dateFilter = value;\n        if (this._matchesFilter(this.value) !== wasMatchingValue) {\n            this._validatorOnChange();\n        }\n    }\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._openedSubscription = Subscription.EMPTY;\n        /** The id of the panel owned by this input. */\n        this._ariaOwns = signal(null);\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        if (this._formField) {\n            return this._formField.getLabelId();\n        }\n        return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._closedSubscription.unsubscribe();\n        this._openedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n        return event.source !== this;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerInput, deps: [{ token: i0.ElementRef }, { token: i1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDatepickerInput, isStandalone: true, selector: \"input[matDatepicker]\", inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, host: { listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"blur\": \"_onBlur()\", \"keydown\": \"_onKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"_datepicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"_ariaOwns()\", \"attr.min\": \"min ? _dateAdapter.toIso8601(min) : null\", \"attr.max\": \"max ? _dateAdapter.toIso8601(max) : null\", \"attr.data-mat-calendar\": \"_datepicker ? _datepicker.id : null\", \"disabled\": \"disabled\" }, classAttribute: \"mat-datepicker-input\" }, providers: [\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ], exportAs: [\"matDatepickerInput\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matDatepicker]',\n                    providers: [\n                        MAT_DATEPICKER_VALUE_ACCESSOR,\n                        MAT_DATEPICKER_VALIDATORS,\n                        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                    ],\n                    host: {\n                        'class': 'mat-datepicker-input',\n                        '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '_ariaOwns()',\n                        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                    },\n                    exportAs: 'matDatepickerInput',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }], propDecorators: { matDatepicker: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input,\n                args: ['matDatepickerFilter']\n            }] } });\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerToggleIcon, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDatepickerToggleIcon, isStandalone: true, selector: \"[matDatepickerToggleIcon]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerToggleIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerToggleIcon]',\n                    standalone: true,\n                }]\n        }] });\nclass MatDatepickerToggle {\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker.datepickerInput\n            ? this.datepicker.datepickerInput.stateChanges\n            : of();\n        const datepickerToggled = this.datepicker\n            ? merge(this.datepicker.openedStream, this.datepicker.closedStream)\n            : of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerToggle, deps: [{ token: MatDatepickerIntl }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatDatepickerToggle, isStandalone: true, selector: \"mat-datepicker-toggle\", inputs: { datepicker: [\"for\", \"datepicker\"], tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: \"disableRipple\" }, host: { listeners: { \"click\": \"_open($event)\" }, properties: { \"attr.tabindex\": \"null\", \"class.mat-datepicker-toggle-active\": \"datepicker && datepicker.opened\", \"class.mat-accent\": \"datepicker && datepicker.color === \\\"accent\\\"\", \"class.mat-warn\": \"datepicker && datepicker.color === \\\"warn\\\"\", \"attr.data-mat-calendar\": \"datepicker ? datepicker.id : null\" }, classAttribute: \"mat-datepicker-toggle\" }, queries: [{ propertyName: \"_customIcon\", first: true, predicate: MatDatepickerToggleIcon, descendants: true }], viewQueries: [{ propertyName: \"_button\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matDatepickerToggle\"], usesOnChanges: true, ngImport: i0, template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  @if (!_customIcon) {\\n    <svg\\n      class=\\\"mat-datepicker-toggle-default-icon\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      width=\\\"24px\\\"\\n      height=\\\"24px\\\"\\n      fill=\\\"currentColor\\\"\\n      focusable=\\\"false\\\"\\n      aria-hidden=\\\"true\\\">\\n      <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n    </svg>\\n  }\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\"], dependencies: [{ kind: \"component\", type: MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-toggle', host: {\n                        'class': 'mat-datepicker-toggle',\n                        '[attr.tabindex]': 'null',\n                        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                        // Used by the test harness to tie this toggle to its datepicker.\n                        '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                        // Bind the `click` on the host, rather than the inner `button`, so that we can call\n                        // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n                        // it so that the input doesn't get focused automatically by the form field (See #21836).\n                        '(click)': '_open($event)',\n                    }, exportAs: 'matDatepickerToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatIconButton], template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  @if (!_customIcon) {\\n    <svg\\n      class=\\\"mat-datepicker-toggle-default-icon\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      width=\\\"24px\\\"\\n      height=\\\"24px\\\"\\n      fill=\\\"currentColor\\\"\\n      focusable=\\\"false\\\"\\n      aria-hidden=\\\"true\\\">\\n      <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n    </svg>\\n  }\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\"] }]\n        }], ctorParameters: () => [{ type: MatDatepickerIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { datepicker: [{\n                type: Input,\n                args: ['for']\n            }], tabIndex: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input\n            }], _customIcon: [{\n                type: ContentChild,\n                args: [MatDatepickerToggleIcon]\n            }], _button: [{\n                type: ViewChild,\n                args: ['button']\n            }] } });\n\n// This file contains the `_computeAriaAccessibleName` function, which computes what the *expected*\n// ARIA accessible name would be for a given element. Implements a subset of ARIA specification\n// [Accessible Name and Description Computation 1.2](https://www.w3.org/TR/accname-1.2/).\n//\n// Specification accname-1.2 can be summarized by returning the result of the first method\n// available.\n//\n//  1. `aria-labelledby` attribute\n//     ```\n//       <!-- example using aria-labelledby-->\n//       <label id='label-id'>Start Date</label>\n//       <input aria-labelledby='label-id'/>\n//     ```\n//  2. `aria-label` attribute (e.g. `<input aria-label=\"Departure\"/>`)\n//  3. Label with `for`/`id`\n//     ```\n//       <!-- example using for/id -->\n//       <label for=\"current-node\">Label</label>\n//       <input id=\"current-node\"/>\n//     ```\n//  4. `placeholder` attribute (e.g. `<input placeholder=\"06/03/1990\"/>`)\n//  5. `title` attribute (e.g. `<input title=\"Check-In\"/>`)\n//  6. text content\n//     ```\n//       <!-- example using text content -->\n//       <label for=\"current-node\"><span>Departure</span> Date</label>\n//       <input id=\"current-node\"/>\n//     ```\n/**\n * Computes the *expected* ARIA accessible name for argument element based on [accname-1.2\n * specification](https://www.w3.org/TR/accname-1.2/). Implements a subset of accname-1.2,\n * and should only be used for the Datepicker's specific use case.\n *\n * Intended use:\n * This is not a general use implementation. Only implements the parts of accname-1.2 that are\n * required for the Datepicker's specific use case. This function is not intended for any other\n * use.\n *\n * Limitations:\n *  - Only covers the needs of `matStartDate` and `matEndDate`. Does not support other use cases.\n *  - See NOTES's in implementation for specific details on what parts of the accname-1.2\n *  specification are not implemented.\n *\n *  @param element {HTMLInputElement} native &lt;input/&gt; element of `matStartDate` or\n *  `matEndDate` component. Corresponds to the 'Root Element' from accname-1.2\n *\n *  @return expected ARIA accessible name of argument &lt;input/&gt;\n */\nfunction _computeAriaAccessibleName(element) {\n    return _computeAriaAccessibleNameInternal(element, true);\n}\n/**\n * Determine if argument node is an Element based on `nodeType` property. This function is safe to\n * use with server-side rendering.\n */\nfunction ssrSafeIsElement(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Determine if argument node is an HTMLInputElement based on `nodeName` property. This funciton is\n * safe to use with server-side rendering.\n */\nfunction ssrSafeIsHTMLInputElement(node) {\n    return node.nodeName === 'INPUT';\n}\n/**\n * Determine if argument node is an HTMLTextAreaElement based on `nodeName` property. This\n * funciton is safe to use with server-side rendering.\n */\nfunction ssrSafeIsHTMLTextAreaElement(node) {\n    return node.nodeName === 'TEXTAREA';\n}\n/**\n * Calculate the expected ARIA accessible name for given DOM Node. Given DOM Node may be either the\n * \"Root node\" passed to `_computeAriaAccessibleName` or \"Current node\" as result of recursion.\n *\n * @return the accessible name of argument DOM Node\n *\n * @param currentNode node to determine accessible name of\n * @param isDirectlyReferenced true if `currentNode` is the root node to calculate ARIA accessible\n * name of. False if it is a result of recursion.\n */\nfunction _computeAriaAccessibleNameInternal(currentNode, isDirectlyReferenced) {\n    // NOTE: this differs from accname-1.2 specification.\n    //  - Does not implement Step 1. of accname-1.2: '''If `currentNode`'s role prohibits naming,\n    //    return the empty string (\"\")'''.\n    //  - Does not implement Step 2.A. of accname-1.2: '''if current node is hidden and not directly\n    //    referenced by aria-labelledby... return the empty string.'''\n    // acc-name-1.2 Step 2.B.: aria-labelledby\n    if (ssrSafeIsElement(currentNode) && isDirectlyReferenced) {\n        const labelledbyIds = currentNode.getAttribute?.('aria-labelledby')?.split(/\\s+/g) || [];\n        const validIdRefs = labelledbyIds.reduce((validIds, id) => {\n            const elem = document.getElementById(id);\n            if (elem) {\n                validIds.push(elem);\n            }\n            return validIds;\n        }, []);\n        if (validIdRefs.length) {\n            return validIdRefs\n                .map(idRef => {\n                return _computeAriaAccessibleNameInternal(idRef, false);\n            })\n                .join(' ');\n        }\n    }\n    // acc-name-1.2 Step 2.C.: aria-label\n    if (ssrSafeIsElement(currentNode)) {\n        const ariaLabel = currentNode.getAttribute('aria-label')?.trim();\n        if (ariaLabel) {\n            return ariaLabel;\n        }\n    }\n    // acc-name-1.2 Step 2.D. attribute or element that defines a text alternative\n    //\n    // NOTE: this differs from accname-1.2 specification.\n    // Only implements Step 2.D. for `<label>`,`<input/>`, and `<textarea/>` element. Does not\n    // implement other elements that have an attribute or element that defines a text alternative.\n    if (ssrSafeIsHTMLInputElement(currentNode) || ssrSafeIsHTMLTextAreaElement(currentNode)) {\n        // use label with a `for` attribute referencing the current node\n        if (currentNode.labels?.length) {\n            return Array.from(currentNode.labels)\n                .map(x => _computeAriaAccessibleNameInternal(x, false))\n                .join(' ');\n        }\n        // use placeholder if available\n        const placeholder = currentNode.getAttribute('placeholder')?.trim();\n        if (placeholder) {\n            return placeholder;\n        }\n        // use title if available\n        const title = currentNode.getAttribute('title')?.trim();\n        if (title) {\n            return title;\n        }\n    }\n    // NOTE: this differs from accname-1.2 specification.\n    //  - does not implement acc-name-1.2 Step 2.E.: '''if the current node is a control embedded\n    //     within the label... then include the embedded control as part of the text alternative in\n    //     the following manner...'''. Step 2E applies to embedded controls such as textbox, listbox,\n    //     range, etc.\n    //  - does not implement acc-name-1.2 step 2.F.: check that '''role allows name from content''',\n    //    which applies to `currentNode` and its children.\n    //  - does not implement acc-name-1.2 Step 2.F.ii.: '''Check for CSS generated textual content'''\n    //    (e.g. :before and :after).\n    //  - does not implement acc-name-1.2 Step 2.I.: '''if the current node has a Tooltip attribute,\n    //    return its value'''\n    // Return text content with whitespace collapsed into a single space character. Accomplish\n    // acc-name-1.2 steps 2F, 2G, and 2H.\n    return (currentNode.textContent || '').replace(/\\s+/g, ' ').trim();\n}\n\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    constructor(_rangeInput, _elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(_elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this._dir = inject(Directionality, { optional: true });\n        this._errorStateTracker = new _ErrorStateTracker(this._defaultErrorStateMatcher, null, this._parentFormGroup, this._parentForm, this.stateChanges);\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        const ngControl = this._injector.get(NgControl, null, { optional: true, self: true });\n        if (ngControl) {\n            this.ngControl = ngControl;\n            this._errorStateTracker.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n    /** Refreshes the error state of the input. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({ source }) {\n        return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n        super._assignValueProgrammatically(value);\n        const opposite = (this === this._rangeInput._startInput\n            ? this._rangeInput._endInput\n            : this._rangeInput._startInput);\n        opposite?._validatorOnChange();\n    }\n    /** return the ARIA accessible name of the input element */\n    _getAccessibleName() {\n        return _computeAriaAccessibleName(this._elementRef.nativeElement);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDateRangeInputPartBase, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$1.NgForm, optional: true }, { token: i2$1.FormGroupDirective, optional: true }, { token: i1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDateRangeInputPartBase, isStandalone: true, inputs: { errorStateMatcher: \"errorStateMatcher\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDateRangeInputPartBase, decorators: [{\n            type: Directive,\n            args: [{ standalone: true }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_INPUT_PARENT]\n                }] }, { type: i0.ElementRef }, { type: i1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$1.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$1.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }], propDecorators: { errorStateMatcher: [{\n                type: Input\n            }] } });\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends MatDateRangeInputPartBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return !start || !end || this._dateAdapter.compareDate(start, end) <= 0\n                ? null\n                : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !change.oldValue?.start\n                ? !!change.selection.start\n                : !change.selection.start ||\n                    !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    _onKeydown(event) {\n        const endInput = this._rangeInput._endInput;\n        const element = this._elementRef.nativeElement;\n        const isLtr = this._dir?.value !== 'rtl';\n        // If the user hits RIGHT (LTR) when at the end of the input (and no\n        // selection), move the cursor to the start of the end input.\n        if (((event.keyCode === RIGHT_ARROW && isLtr) || (event.keyCode === LEFT_ARROW && !isLtr)) &&\n            element.selectionStart === element.value.length &&\n            element.selectionEnd === element.value.length) {\n            event.preventDefault();\n            endInput._elementRef.nativeElement.setSelectionRange(0, 0);\n            endInput.focus();\n        }\n        else {\n            super._onKeydown(event);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStartDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$1.NgForm, optional: true }, { token: i2$1.FormGroupDirective, optional: true }, { token: i1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatStartDate, isStandalone: true, selector: \"input[matStartDate]\", outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"_rangeInput._ariaOwns\\n        ? _rangeInput._ariaOwns()\\n        : (_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-start-date mat-date-range-input-inner\" }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n        ], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStartDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matStartDate]',\n                    host: {\n                        'class': 'mat-start-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': `_rangeInput._ariaOwns\n        ? _rangeInput._ariaOwns()\n        : (_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null`,\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_INPUT_PARENT]\n                }] }, { type: i0.ElementRef }, { type: i1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$1.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$1.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }] });\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends MatDateRangeInputPartBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return !end || !start || this._dateAdapter.compareDate(end, start) >= 0\n                ? null\n                : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !change.oldValue?.end\n                ? !!change.selection.end\n                : !change.selection.end ||\n                    !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _moveCaretToEndOfStartInput() {\n        const startInput = this._rangeInput._startInput._elementRef.nativeElement;\n        const value = startInput.value;\n        if (value.length > 0) {\n            startInput.setSelectionRange(value.length, value.length);\n        }\n        startInput.focus();\n    }\n    _onKeydown(event) {\n        const element = this._elementRef.nativeElement;\n        const isLtr = this._dir?.value !== 'rtl';\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !element.value) {\n            this._moveCaretToEndOfStartInput();\n        }\n        // If the user hits LEFT (LTR) when at the start of the input (and no\n        // selection), move the cursor to the end of the start input.\n        else if (((event.keyCode === LEFT_ARROW && isLtr) || (event.keyCode === RIGHT_ARROW && !isLtr)) &&\n            element.selectionStart === 0 &&\n            element.selectionEnd === 0) {\n            event.preventDefault();\n            this._moveCaretToEndOfStartInput();\n        }\n        else {\n            super._onKeydown(event);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatEndDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$1.NgForm, optional: true }, { token: i2$1.FormGroupDirective, optional: true }, { token: i1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatEndDate, isStandalone: true, selector: \"input[matEndDate]\", outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"_rangeInput._ariaOwns\\n        ? _rangeInput._ariaOwns()\\n        : (_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-end-date mat-date-range-input-inner\" }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n        ], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatEndDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matEndDate]',\n                    host: {\n                        'class': 'mat-end-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': `_rangeInput._ariaOwns\n        ? _rangeInput._ariaOwns()\n        : (_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null`,\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_INPUT_PARENT]\n                }] }, { type: i0.ElementRef }, { type: i1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$1.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$1.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }] });\n\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        const start = this._startInput?._getPlaceholder() || '';\n        const end = this._endInput?._getPlaceholder() || '';\n        return start || end ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() {\n        return this._rangePicker;\n    }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker.registerInput(this);\n            this._rangePicker = rangePicker;\n            this._closedSubscription.unsubscribe();\n            this._openedSubscription.unsubscribe();\n            this._ariaOwns.set(this.rangePicker.opened ? rangePicker.id : null);\n            this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                this._startInput?._onTouched();\n                this._endInput?._onTouched();\n                this._ariaOwns.set(null);\n            });\n            this._openedSubscription = rangePicker.openedStream.subscribe(() => {\n                this._ariaOwns.set(rangePicker.id);\n            });\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() {\n        return (this._required ??\n            (this._isTargetRequired(this) ||\n                this._isTargetRequired(this._startInput) ||\n                this._isTargetRequired(this._endInput)) ??\n            false);\n    }\n    set required(value) {\n        this._required = value;\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const start = this._startInput;\n        const end = this._endInput;\n        const wasMatchingStart = start && start._matchesFilter(start.value);\n        const wasMatchingEnd = end && end._matchesFilter(start.value);\n        this._dateFilter = value;\n        if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n            start._validatorOnChange();\n        }\n        if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n            end._validatorOnChange();\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._startInput && this._endInput\n            ? this._startInput.disabled && this._endInput.disabled\n            : this._groupDisabled;\n    }\n    set disabled(value) {\n        if (value !== this._groupDisabled) {\n            this._groupDisabled = value;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._openedSubscription = Subscription.EMPTY;\n        /** Unique ID for the group. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        /** The id of the panel owned by this input. */\n        this._ariaOwns = signal(null);\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        /**\n         * Disable the automatic labeling to avoid issues like #27241.\n         * @docs-private\n         */\n        this.disableAutomaticLabeling = true;\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // The datepicker module can be used both with MDC and non-MDC form fields. We have\n        // to conditionally add the MDC input class so that the range picker looks correctly.\n        if (_formField?._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n            _elementRef.nativeElement.classList.add('mat-mdc-input-element', 'mat-mdc-form-field-input-control', 'mdc-text-field__input');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._closedSubscription.unsubscribe();\n        this._openedSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        return this._formField ? this._formField.getLabelId() : null;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue(part) {\n        const input = part === 'start' ? this._startInput : this._endInput;\n        return input ? input.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return ((!this._formField ||\n            (this._formField.getLabelId() && !this._formField._shouldLabelFloat())) &&\n            this.empty);\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    _getStartDateAccessibleName() {\n        return this._startInput._getAccessibleName();\n    }\n    _getEndDateAccessibleName() {\n        return this._endInput._getAccessibleName();\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n        this.focused = origin !== null;\n        this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n    /** Checks whether a specific range input directive is required. */\n    _isTargetRequired(target) {\n        return target?.ngControl?.control?.hasValidator(Validators.required);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDateRangeInput, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2$1.ControlContainer, optional: true, self: true }, { token: i1.DateAdapter, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatDateRangeInput, isStandalone: true, selector: \"mat-date-range-input\", inputs: { rangePicker: \"rangePicker\", required: [\"required\", \"required\", booleanAttribute], dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: [\"disabled\", \"disabled\", booleanAttribute], separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"class.mat-date-range-input-hide-placeholders\": \"_shouldHidePlaceholders()\", \"class.mat-date-range-input-required\": \"required\", \"attr.id\": \"id\", \"attr.aria-labelledby\": \"_getAriaLabelledby()\", \"attr.aria-describedby\": \"_ariaDescribedBy\", \"attr.data-mat-calendar\": \"rangePicker ? rangePicker.id : null\" }, classAttribute: \"mat-date-range-input\" }, providers: [\n            { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n            { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n        ], queries: [{ propertyName: \"_startInput\", first: true, predicate: MatStartDate, descendants: true }, { propertyName: \"_endInput\", first: true, predicate: MatEndDate, descendants: true }], exportAs: [\"matDateRangeInput\"], usesOnChanges: true, ngImport: i0, template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue('start')}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-wrapper mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue('end')}}</span>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px;color:var(--mat-datepicker-range-input-separator-color, var(--mat-app-on-surface))}.mat-form-field-disabled .mat-date-range-input-separator{color:var(--mat-datepicker-range-input-disabled-state-separator-color)}._mat-animation-noopable .mat-date-range-input-separator{transition:none}.mat-date-range-input-separator-hidden{-webkit-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-end-wrapper{flex-grow:1}.mat-date-range-input-inner{position:absolute;top:0;left:0;font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%;height:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner[disabled]{color:var(--mat-datepicker-range-input-disabled-state-text-color)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-date-range-input-inner::placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-moz-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner:-ms-input-placeholder{transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-mdc-form-field-type-mat-date-range-input .mat-mdc-form-field-infix{width:200px}\"], dependencies: [{ kind: \"directive\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"], exportAs: [\"cdkMonitorFocus\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDateRangeInput, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-date-range-input', exportAs: 'matDateRangeInput', host: {\n                        'class': 'mat-date-range-input',\n                        '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                        '[class.mat-date-range-input-required]': 'required',\n                        '[attr.id]': 'id',\n                        'role': 'group',\n                        '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                        '[attr.aria-describedby]': '_ariaDescribedBy',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                        { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                    ], standalone: true, imports: [CdkMonitorFocus], template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue('start')}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-wrapper mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue('end')}}</span>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px;color:var(--mat-datepicker-range-input-separator-color, var(--mat-app-on-surface))}.mat-form-field-disabled .mat-date-range-input-separator{color:var(--mat-datepicker-range-input-disabled-state-separator-color)}._mat-animation-noopable .mat-date-range-input-separator{transition:none}.mat-date-range-input-separator-hidden{-webkit-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-end-wrapper{flex-grow:1}.mat-date-range-input-inner{position:absolute;top:0;left:0;font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%;height:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner[disabled]{color:var(--mat-datepicker-range-input-disabled-state-text-color)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-date-range-input-inner::placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-moz-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner:-ms-input-placeholder{transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-mdc-form-field-type-mat-date-range-input .mat-mdc-form-field-infix{width:200px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2$1.ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }], propDecorators: { rangePicker: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], dateFilter: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], separator: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], _startInput: [{\n                type: ContentChild,\n                args: [MatStartDate]\n            }], _endInput: [{\n                type: ContentChild,\n                args: [MatEndDate]\n            }] } });\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this.datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n            instance.startDateAccessibleName = input._getStartDateAccessibleName();\n            instance.endDateAccessibleName = input._getEndDateAccessibleName();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDateRangePicker, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDateRangePicker, isStandalone: true, selector: \"mat-date-range-picker\", providers: [\n            MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n            MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n        ], exportAs: [\"matDateRangePicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDateRangePicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-date-range-picker',\n                    template: '',\n                    exportAs: 'matDateRangePicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                        MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n                    ],\n                    standalone: true,\n                }]\n        }] });\n\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    _applySelection() {\n        this._datepicker._applyPendingSelection();\n        this._datepicker.close();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerApply, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDatepickerApply, isStandalone: true, selector: \"[matDatepickerApply], [matDateRangePickerApply]\", host: { listeners: { \"click\": \"_applySelection()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerApply, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerApply], [matDateRangePickerApply]',\n                    host: { '(click)': '_applySelection()' },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: MatDatepickerBase }] });\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerCancel, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDatepickerCancel, isStandalone: true, selector: \"[matDatepickerCancel], [matDateRangePickerCancel]\", host: { listeners: { \"click\": \"_datepicker.close()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerCancel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n                    host: { '(click)': '_datepicker.close()' },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: MatDatepickerBase }] });\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n        this._datepicker = _datepicker;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n        this._datepicker.removeActions(this._portal);\n        // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n        if (this._portal && this._portal.isAttached) {\n            this._portal?.detach();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerActions, deps: [{ token: MatDatepickerBase }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDatepickerActions, isStandalone: true, selector: \"mat-datepicker-actions, mat-date-range-picker-actions\", viewQueries: [{ propertyName: \"_template\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0, template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, isInline: true, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerActions, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-actions, mat-date-range-picker-actions', template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: () => [{ type: MatDatepickerBase }, { type: i0.ViewContainerRef }], propDecorators: { _template: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }] } });\n\nclass MatDatepickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerModule, imports: [CommonModule,\n            MatButtonModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n            MatCommonModule,\n            MatCalendar,\n            MatCalendarBody,\n            MatDatepicker,\n            MatDatepickerContent,\n            MatDatepickerInput,\n            MatDatepickerToggle,\n            MatDatepickerToggleIcon,\n            MatMonthView,\n            MatYearView,\n            MatMultiYearView,\n            MatCalendarHeader,\n            MatDateRangeInput,\n            MatStartDate,\n            MatEndDate,\n            MatDateRangePicker,\n            MatDatepickerActions,\n            MatDatepickerCancel,\n            MatDatepickerApply], exports: [CdkScrollableModule,\n            MatCalendar,\n            MatCalendarBody,\n            MatDatepicker,\n            MatDatepickerContent,\n            MatDatepickerInput,\n            MatDatepickerToggle,\n            MatDatepickerToggleIcon,\n            MatMonthView,\n            MatYearView,\n            MatMultiYearView,\n            MatCalendarHeader,\n            MatDateRangeInput,\n            MatStartDate,\n            MatEndDate,\n            MatDateRangePicker,\n            MatDatepickerActions,\n            MatDatepickerCancel,\n            MatDatepickerApply] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerModule, providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [CommonModule,\n            MatButtonModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n            MatCommonModule,\n            MatDatepickerContent,\n            MatDatepickerToggle,\n            MatCalendarHeader, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDatepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatButtonModule,\n                        OverlayModule,\n                        A11yModule,\n                        PortalModule,\n                        MatCommonModule,\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n","import * as i0 from '@angular/core';\nimport { Directive, Input, InjectionToken, inject, LOCALE_ID, Optional, Inject, Injectable, EventEmitter, Component, ChangeDetectionStrategy, Output, ViewChild, TemplateRef, SkipSelf, forwardRef, Pipe, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { getLocaleFirstDayOfWeek, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/overlay';\nimport { NoopScrollStrategy, Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { Subscription, of, merge, Subject, filter, take as take$1, defer } from 'rxjs';\nimport * as i2 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, PortalInjector, PortalModule } from '@angular/cdk/portal';\nimport { ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, SPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { take, debounceTime, startWith, filter as filter$1 } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animateChild, animate, keyframes } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\n\n/**\n * date-time-picker-trigger.directive\n */\nclass OwlDateTimeTriggerDirective {\n    get disabled() {\n        return this._disabled === undefined ? this.dtPicker.disabled : !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get owlDTTriggerDisabledClass() {\n        return this.disabled;\n    }\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.stateChanges = Subscription.EMPTY;\n    }\n    ngOnInit() {\n    }\n    ngOnChanges(changes) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n    handleClickOnHost(event) {\n        if (this.dtPicker) {\n            this.dtPicker.open();\n            event.stopPropagation();\n        }\n    }\n    watchStateChanges() {\n        this.stateChanges.unsubscribe();\n        const inputDisabled = this.dtPicker && this.dtPicker.dtInput ?\n            this.dtPicker.dtInput.disabledChange : of();\n        const pickerDisabled = this.dtPicker ?\n            this.dtPicker.disabledChange : of();\n        this.stateChanges = merge([pickerDisabled, inputDisabled])\n            .subscribe(() => {\n            this.changeDetector.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeTriggerDirective, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlDateTimeTriggerDirective, selector: \"[owlDateTimeTrigger]\", inputs: { dtPicker: [\"owlDateTimeTrigger\", \"dtPicker\"], disabled: \"disabled\" }, host: { listeners: { \"click\": \"handleClickOnHost($event)\" }, properties: { \"class.owl-dt-trigger-disabled\": \"owlDTTriggerDisabledClass\" } }, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeTriggerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[owlDateTimeTrigger]',\n                    host: {\n                        '(click)': 'handleClickOnHost($event)',\n                        '[class.owl-dt-trigger-disabled]': 'owlDTTriggerDisabledClass'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { dtPicker: [{\n                type: Input,\n                args: ['owlDateTimeTrigger']\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * date-time-format.class\n */\n/** InjectionToken for date time picker that can be used to override default format. */\nconst OWL_DATE_TIME_FORMATS = new InjectionToken('OWL_DATE_TIME_FORMATS');\n\n/**\n * date-time-adapter.class\n */\n/** InjectionToken for date time picker that can be used to override default locale code. */\nconst OWL_DATE_TIME_LOCALE = new InjectionToken('OWL_DATE_TIME_LOCALE', {\n    providedIn: 'root',\n    factory: OWL_DATE_TIME_LOCALE_FACTORY\n});\n/** @docs-private */\nfunction OWL_DATE_TIME_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Provider for OWL_DATE_TIME_LOCALE injection token. */\nconst OWL_DATE_TIME_LOCALE_PROVIDER = {\n    provide: OWL_DATE_TIME_LOCALE,\n    useExisting: LOCALE_ID\n};\nclass DateTimeAdapter {\n    constructor() {\n        /** A stream that emits when the locale changes. */\n        this._localeChanges = new Subject();\n        /** total milliseconds in a day. */\n        this.millisecondsInDay = 86400000;\n        /** total milliseconds in a minute. */\n        this.milliseondsInMinute = 60000;\n    }\n    get localeChanges() {\n        return this._localeChanges;\n    }\n    /**\n     * Compare two given dates\n     * 1 if the first date is after the second,\n     * -1 if the first date is before the second\n     * 0 if dates are equal.\n     * */\n    compare(first, second) {\n        if (!this.isValid(first) || !this.isValid(second)) {\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\n        }\n        const dateFirst = this.clone(first);\n        const dateSecond = this.clone(second);\n        const diff = this.getTime(dateFirst) - this.getTime(dateSecond);\n        if (diff < 0) {\n            return -1;\n        }\n        else if (diff > 0) {\n            return 1;\n        }\n        else {\n            // Return 0 if diff is 0; return NaN if diff is NaN\n            return diff;\n        }\n    }\n    /**\n     * Check if two given dates are in the same year\n     * 1 if the first date's year is after the second,\n     * -1 if the first date's year is before the second\n     * 0 if two given dates are in the same year\n     * */\n    compareYear(first, second) {\n        if (!this.isValid(first) || !this.isValid(second)) {\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\n        }\n        const yearLeft = this.getYear(first);\n        const yearRight = this.getYear(second);\n        const diff = yearLeft - yearRight;\n        if (diff < 0) {\n            return -1;\n        }\n        else if (diff > 0) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     */\n    deserialize(value) {\n        if (value == null ||\n            (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next(locale);\n    }\n    /**\n    * Get the locale used for all dates.\n    * */\n    getLocale() {\n        return this.locale;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compare(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compare(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * date-time.class\n */\nlet nextUniqueId = 0;\nvar DateView;\n(function (DateView) {\n    DateView[\"MONTH\"] = \"month\";\n    DateView[\"YEAR\"] = \"year\";\n    DateView[\"MULTI_YEARS\"] = \"multi-years\";\n})(DateView || (DateView = {}));\nclass OwlDateTime {\n    get showSecondsTimer() {\n        return this._showSecondsTimer;\n    }\n    set showSecondsTimer(val) {\n        this._showSecondsTimer = coerceBooleanProperty(val);\n    }\n    get hour12Timer() {\n        return this._hour12Timer;\n    }\n    set hour12Timer(val) {\n        this._hour12Timer = coerceBooleanProperty(val);\n    }\n    get stepHour() {\n        return this._stepHour;\n    }\n    set stepHour(val) {\n        this._stepHour = coerceNumberProperty(val, 1);\n    }\n    get stepMinute() {\n        return this._stepMinute;\n    }\n    set stepMinute(val) {\n        this._stepMinute = coerceNumberProperty(val, 1);\n    }\n    get stepSecond() {\n        return this._stepSecond;\n    }\n    set stepSecond(val) {\n        this._stepSecond = coerceNumberProperty(val, 1);\n    }\n    get firstDayOfWeek() {\n        return this._firstDayOfWeek;\n    }\n    set firstDayOfWeek(value) {\n        value = coerceNumberProperty(value);\n        if (value > 6 || value < 0) {\n            this._firstDayOfWeek = undefined;\n        }\n        else {\n            this._firstDayOfWeek = value;\n        }\n    }\n    get hideOtherMonths() {\n        return this._hideOtherMonths;\n    }\n    set hideOtherMonths(val) {\n        this._hideOtherMonths = coerceBooleanProperty(val);\n    }\n    get id() {\n        return this._id;\n    }\n    get formatString() {\n        return this.pickerType === 'both'\n            ? this.dateTimeFormats.fullPickerInput\n            : this.pickerType === 'calendar'\n                ? this.dateTimeFormats.datePickerInput\n                : this.dateTimeFormats.timePickerInput;\n    }\n    get disabled() {\n        return false;\n    }\n    constructor(dateTimeAdapter, dateTimeFormats) {\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        /**\n         * Whether to show the second's timer\n         */\n        this._showSecondsTimer = false;\n        /**\n         * Whether the timer is in hour12 format\n         */\n        this._hour12Timer = false;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = DateView.MONTH;\n        /**\n         * Whether to show calendar weeks in the calendar\n         * */\n        this.showCalendarWeeks = false;\n        /**\n         * Whether to should only the year and multi-year views.\n         */\n        this.yearOnly = false;\n        /**\n         * Whether to should only the multi-year view.\n         */\n        this.multiyearOnly = false;\n        /**\n         * Hours to change per step\n         */\n        this._stepHour = 1;\n        /**\n         * Minutes to change per step\n         */\n        this._stepMinute = 1;\n        /**\n         * Seconds to change per step\n         */\n        this._stepSecond = 1;\n        /**\n         * Whether to hide dates in other months at the start or end of the current month.\n         */\n        this._hideOtherMonths = false;\n        /**\n         * Date Time Checker to check if the give dateTime is selectable\n         */\n        this.dateTimeChecker = (dateTime) => {\n            return (!!dateTime &&\n                (!this.dateTimeFilter || this.dateTimeFilter(dateTime)) &&\n                (!this.minDateTime ||\n                    this.dateTimeAdapter.compare(dateTime, this.minDateTime) >=\n                        0) &&\n                (!this.maxDateTime ||\n                    this.dateTimeAdapter.compare(dateTime, this.maxDateTime) <= 0));\n        };\n        if (!this.dateTimeAdapter) {\n            throw Error(`OwlDateTimePicker: No provider found for DateTimeAdapter. You must import one of the following ` +\n                `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\n                `custom implementation.`);\n        }\n        if (!this.dateTimeFormats) {\n            throw Error(`OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\n                `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\n                `custom implementation.`);\n        }\n        this._id = `owl-dt-picker-${nextUniqueId++}`;\n    }\n    getValidDate(obj) {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTime, deps: [{ token: DateTimeAdapter, optional: true }, { token: OWL_DATE_TIME_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlDateTime, inputs: { showSecondsTimer: \"showSecondsTimer\", hour12Timer: \"hour12Timer\", startView: \"startView\", showCalendarWeeks: \"showCalendarWeeks\", yearOnly: \"yearOnly\", multiyearOnly: \"multiyearOnly\", stepHour: \"stepHour\", stepMinute: \"stepMinute\", stepSecond: \"stepSecond\", firstDayOfWeek: \"firstDayOfWeek\", hideOtherMonths: \"hideOtherMonths\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTime, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_FORMATS]\n                }] }], propDecorators: { showSecondsTimer: [{\n                type: Input\n            }], hour12Timer: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], showCalendarWeeks: [{\n                type: Input\n            }], yearOnly: [{\n                type: Input\n            }], multiyearOnly: [{\n                type: Input\n            }], stepHour: [{\n                type: Input\n            }], stepMinute: [{\n                type: Input\n            }], stepSecond: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], hideOtherMonths: [{\n                type: Input\n            }] } });\n\n/**\n * date-time-picker-intl.service\n */\nclass OwlDateTimeIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the up second button (used by screen readers).  */\n        this.upSecondLabel = 'Add a second';\n        /** A label for the down second button (used by screen readers).  */\n        this.downSecondLabel = 'Minus a second';\n        /** A label for the up minute button (used by screen readers).  */\n        this.upMinuteLabel = 'Add a minute';\n        /** A label for the down minute button (used by screen readers).  */\n        this.downMinuteLabel = 'Minus a minute';\n        /** A label for the up hour button (used by screen readers).  */\n        this.upHourLabel = 'Add a hour';\n        /** A label for the down hour button (used by screen readers).  */\n        this.downHourLabel = 'Minus a hour';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 21 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 21 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Change to month view';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n        /** A label for the cancel button */\n        this.cancelBtnLabel = 'Cancel';\n        /** A label for the set button */\n        this.setBtnLabel = 'Set';\n        /** A label for the range 'from' in picker info */\n        this.rangeFromLabel = 'From';\n        /** A label for the range 'to' in picker info */\n        this.rangeToLabel = 'To';\n        /** A label for the hour12 button (AM) */\n        this.hour12AMLabel = 'AM';\n        /** A label for the hour12 button (PM) */\n        this.hour12PMLabel = 'PM';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * calendar-body.component\n */\nclass CalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, out = false, cellClass = '') {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.out = out;\n        this.cellClass = cellClass;\n    }\n}\nclass OwlCalendarBodyComponent {\n    get owlDTCalendarBodyClass() {\n        return true;\n    }\n    get isInSingleMode() {\n        return this.selectMode === 'single';\n    }\n    get isInRangeMode() {\n        return (this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom' ||\n            this.selectMode === 'rangeTo');\n    }\n    constructor(elmRef, ngZone) {\n        this.elmRef = elmRef;\n        this.ngZone = ngZone;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The number of columns in the table.\n         * */\n        this.numCols = 7;\n        /**\n         * The ratio (width / height) to use for the cells in the table.\n         */\n        this.cellRatio = 1;\n        /**\n         * Emit when a calendar cell is selected\n         * */\n        this.select = new EventEmitter();\n    }\n    ngOnInit() { }\n    selectCell(cell) {\n        this.select.emit(cell);\n    }\n    isActiveCell(rowIndex, colIndex) {\n        const cellNumber = rowIndex * this.numCols + colIndex;\n        return cellNumber === this.activeCell;\n    }\n    /**\n     * Check if the cell is selected\n     */\n    isSelected(value) {\n        if (!this.selectedValues || this.selectedValues.length === 0) {\n            return false;\n        }\n        if (this.isInSingleMode) {\n            return value === this.selectedValues[0];\n        }\n        if (this.isInRangeMode) {\n            const fromValue = this.selectedValues[0];\n            const toValue = this.selectedValues[1];\n            return value === fromValue || value === toValue;\n        }\n    }\n    /**\n     * Check if the cell in the range\n     * */\n    isInRange(value) {\n        if (this.isInRangeMode) {\n            const fromValue = this.selectedValues[0];\n            const toValue = this.selectedValues[1];\n            if (fromValue !== null && toValue !== null) {\n                return value >= fromValue && value <= toValue;\n            }\n            else {\n                return value === fromValue || value === toValue;\n            }\n        }\n    }\n    /**\n     * Check if the cell is the range from\n     * */\n    isRangeFrom(value) {\n        if (this.isInRangeMode) {\n            const fromValue = this.selectedValues[0];\n            return fromValue !== null && value === fromValue;\n        }\n    }\n    /**\n     * Check if the cell is the range to\n     * */\n    isRangeTo(value) {\n        if (this.isInRangeMode) {\n            const toValue = this.selectedValues[1];\n            return toValue !== null && value === toValue;\n        }\n    }\n    /**\n     * Focus to a active cell\n     * */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                this.elmRef.nativeElement\n                    .querySelector('.owl-dt-calendar-cell-active')\n                    .focus();\n            });\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlCalendarBodyComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlCalendarBodyComponent, selector: \"[owl-date-time-calendar-body]\", inputs: { activeCell: \"activeCell\", rows: \"rows\", numCols: \"numCols\", cellRatio: \"cellRatio\", todayValue: \"todayValue\", selectedValues: \"selectedValues\", selectMode: \"selectMode\" }, outputs: { select: \"select\" }, host: { properties: { \"class.owl-dt-calendar-body\": \"owlDTCalendarBodyClass\" } }, exportAs: [\"owlDateTimeCalendarBody\"], ngImport: i0, template: \"<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n    <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n        class=\\\"owl-dt-calendar-cell {{item.cellClass}}\\\"\\n        [tabindex]=\\\"isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n        [class.owl-dt-calendar-cell-active]=\\\"isActiveCell(rowIndex, colIndex)\\\"\\n        [class.owl-dt-calendar-cell-disabled]=\\\"!item.enabled\\\"\\n        [class.owl-dt-calendar-cell-in-range]=\\\"isInRange(item.value)\\\"\\n        [class.owl-dt-calendar-cell-range-from]=\\\"isRangeFrom(item.value)\\\"\\n        [class.owl-dt-calendar-cell-range-to]=\\\"isRangeTo(item.value)\\\"\\n        [attr.aria-label]=\\\"item.ariaLabel\\\"\\n        [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n        [attr.aria-current]=\\\"item.value === todayValue ? 'date' : null\\\"\\n        [attr.aria-selected]=\\\"isSelected(item.value)\\\"\\n        [style.width.%]=\\\"100 / numCols\\\"\\n        [style.paddingTop.%]=\\\"50 * cellRatio / numCols\\\"\\n        [style.paddingBottom.%]=\\\"50 * cellRatio / numCols\\\"\\n        (click)=\\\"selectCell(item)\\\">\\n        <span class=\\\"owl-dt-calendar-cell-content\\\"\\n              [ngClass]=\\\"{\\n                'owl-dt-calendar-cell-out': item.out,\\n                'owl-dt-calendar-cell-today': item.value === todayValue,\\n                'owl-dt-calendar-cell-selected': isSelected(item.value)\\n              }\\\">\\n            {{item.displayValue}}\\n        </span>\\n    </td>\\n</tr>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlCalendarBodyComponent, decorators: [{\n            type: Component,\n            args: [{ selector: '[owl-date-time-calendar-body]', exportAs: 'owlDateTimeCalendarBody', host: {\n                        '[class.owl-dt-calendar-body]': 'owlDTCalendarBodyClass'\n                    }, preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n    <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n        class=\\\"owl-dt-calendar-cell {{item.cellClass}}\\\"\\n        [tabindex]=\\\"isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n        [class.owl-dt-calendar-cell-active]=\\\"isActiveCell(rowIndex, colIndex)\\\"\\n        [class.owl-dt-calendar-cell-disabled]=\\\"!item.enabled\\\"\\n        [class.owl-dt-calendar-cell-in-range]=\\\"isInRange(item.value)\\\"\\n        [class.owl-dt-calendar-cell-range-from]=\\\"isRangeFrom(item.value)\\\"\\n        [class.owl-dt-calendar-cell-range-to]=\\\"isRangeTo(item.value)\\\"\\n        [attr.aria-label]=\\\"item.ariaLabel\\\"\\n        [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n        [attr.aria-current]=\\\"item.value === todayValue ? 'date' : null\\\"\\n        [attr.aria-selected]=\\\"isSelected(item.value)\\\"\\n        [style.width.%]=\\\"100 / numCols\\\"\\n        [style.paddingTop.%]=\\\"50 * cellRatio / numCols\\\"\\n        [style.paddingBottom.%]=\\\"50 * cellRatio / numCols\\\"\\n        (click)=\\\"selectCell(item)\\\">\\n        <span class=\\\"owl-dt-calendar-cell-content\\\"\\n              [ngClass]=\\\"{\\n                'owl-dt-calendar-cell-out': item.out,\\n                'owl-dt-calendar-cell-today': item.value === todayValue,\\n                'owl-dt-calendar-cell-selected': isSelected(item.value)\\n              }\\\">\\n            {{item.displayValue}}\\n        </span>\\n    </td>\\n</tr>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { activeCell: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], numCols: [{\n                type: Input\n            }], cellRatio: [{\n                type: Input\n            }], todayValue: [{\n                type: Input\n            }], selectedValues: [{\n                type: Input\n            }], selectMode: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nfunction defaultOptionsFactory() {\n    return DefaultOptions.create();\n}\nfunction multiYearOptionsFactory(options) {\n    return options.multiYear;\n}\nclass DefaultOptions {\n    static create() {\n        // Always return new instance\n        return {\n            multiYear: {\n                yearRows: 7,\n                yearsPerRow: 3\n            }\n        };\n    }\n}\nclass OptionsTokens {\n    static { this.all = new InjectionToken('All options token'); }\n    static { this.multiYear = new InjectionToken('Grid view options token'); }\n}\nconst optionsProviders = [\n    {\n        provide: OptionsTokens.all,\n        useFactory: defaultOptionsFactory,\n    },\n    {\n        provide: OptionsTokens.multiYear,\n        useFactory: multiYearOptionsFactory,\n        deps: [OptionsTokens.all],\n    },\n];\n\n/**\n * calendar-multi-year-view.component\n */\nclass OwlMultiYearViewComponent {\n    get selectMode() {\n        return this._selectMode;\n    }\n    set selectMode(val) {\n        this._selectMode = val;\n        if (this.initiated) {\n            this.setSelectedYears();\n            this.cdRef.markForCheck();\n        }\n    }\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        const oldSelected = this._selected;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._selected = this.getValidDate(value);\n        if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\n            this.setSelectedYears();\n        }\n    }\n    get selecteds() {\n        return this._selecteds;\n    }\n    set selecteds(values) {\n        this._selecteds = values.map((v) => {\n            v = this.dateTimeAdapter.deserialize(v);\n            return this.getValidDate(v);\n        });\n        this.setSelectedYears();\n    }\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n    set pickerMoment(value) {\n        const oldMoment = this._pickerMoment;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n        if (oldMoment && this._pickerMoment &&\n            !this.isSameYearList(oldMoment, this._pickerMoment)) {\n            this.generateYearList();\n        }\n    }\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(filter) {\n        this._dateFilter = filter;\n        if (this.initiated) {\n            this.generateYearList();\n        }\n    }\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._minDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateYearList();\n        }\n    }\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._maxDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateYearList();\n        }\n    }\n    get todayYear() {\n        return this._todayYear;\n    }\n    get years() {\n        return this._years;\n    }\n    get selectedYears() {\n        return this._selectedYears;\n    }\n    get isInSingleMode() {\n        return this.selectMode === 'single';\n    }\n    get isInRangeMode() {\n        return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\n            || this.selectMode === 'rangeTo';\n    }\n    get activeCell() {\n        if (this._pickerMoment) {\n            return this.dateTimeAdapter.getYear(this._pickerMoment) % (this.options.yearsPerRow * this.options.yearRows);\n        }\n    }\n    get tableHeader() {\n        if (this._years && this._years.length > 0) {\n            return `${this._years[0][0].displayValue} - ${this._years[this.options.yearRows - 1][this.options.yearsPerRow - 1].displayValue}`;\n        }\n    }\n    get prevButtonLabel() {\n        return this.pickerIntl.prevMultiYearLabel;\n    }\n    get nextButtonLabel() {\n        return this.pickerIntl.nextMultiYearLabel;\n    }\n    get owlDTCalendarView() {\n        return true;\n    }\n    get owlDTCalendarMultiYearView() {\n        return true;\n    }\n    constructor(cdRef, pickerIntl, dateTimeAdapter, options) {\n        this.cdRef = cdRef;\n        this.pickerIntl = pickerIntl;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.options = options;\n        /**\n         * The select mode of the picker;\n         * */\n        this._selectMode = 'single';\n        this._selecteds = [];\n        this.initiated = false;\n        /**\n         * Callback to invoke when a new month is selected\n         * */\n        this.change = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         * */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.pickerMomentChange = new EventEmitter();\n        /** Emits when use keyboard enter to select a calendar cell */\n        this.keyboardEnter = new EventEmitter();\n    }\n    ngOnInit() {\n    }\n    ngAfterContentInit() {\n        this._todayYear = this.dateTimeAdapter.getYear(this.dateTimeAdapter.now());\n        this.generateYearList();\n        this.initiated = true;\n    }\n    /**\n     * Handle a calendarCell selected\n     */\n    selectCalendarCell(cell) {\n        this.selectYear(cell.value);\n    }\n    selectYear(year) {\n        this.yearSelected.emit(this.dateTimeAdapter.createDate(year, 0, 1));\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(year, this.dateTimeAdapter.getMonth(this.pickerMoment), 1);\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\n        const selected = this.dateTimeAdapter.createDate(year, this.dateTimeAdapter.getMonth(this.pickerMoment), Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)), this.dateTimeAdapter.getHours(this.pickerMoment), this.dateTimeAdapter.getMinutes(this.pickerMoment), this.dateTimeAdapter.getSeconds(this.pickerMoment));\n        this.change.emit(selected);\n    }\n    /**\n     * Generate the previous year list\n     * */\n    prevYearList(event) {\n        this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1 * this.options.yearsPerRow * this.options.yearRows);\n        this.generateYearList();\n        event.preventDefault();\n    }\n    /**\n     * Generate the next year list\n     * */\n    nextYearList(event) {\n        this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, this.options.yearsPerRow * this.options.yearRows);\n        this.generateYearList();\n        event.preventDefault();\n    }\n    generateYearList() {\n        this._years = [];\n        const pickerMomentYear = this.dateTimeAdapter.getYear(this._pickerMoment);\n        const offset = pickerMomentYear % (this.options.yearsPerRow * this.options.yearRows);\n        for (let i = 0; i < this.options.yearRows; i++) {\n            const row = [];\n            for (let j = 0; j < this.options.yearsPerRow; j++) {\n                const year = pickerMomentYear - offset + (j + i * this.options.yearsPerRow);\n                const yearCell = this.createYearCell(year);\n                row.push(yearCell);\n            }\n            this._years.push(row);\n        }\n        return;\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.minDate) {\n            return true;\n        }\n        return !this.minDate || !this.isSameYearList(this._pickerMoment, this.minDate);\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return !this.maxDate || !this.isSameYearList(this._pickerMoment, this.maxDate);\n    }\n    handleCalendarKeydown(event) {\n        let moment;\n        switch (event.keyCode) {\n            // minus 1 year\n            case LEFT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // add 1 year\n            case RIGHT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // minus 3 years\n            case UP_ARROW:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1 * this.options.yearsPerRow);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // add 3 years\n            case DOWN_ARROW:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, this.options.yearsPerRow);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // go to the first year of the year page\n            case HOME:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -this.dateTimeAdapter.getYear(this._pickerMoment) % (this.options.yearsPerRow * this.options.yearRows));\n                this.pickerMomentChange.emit(moment);\n                break;\n            // go to the last year of the year page\n            case END:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, (this.options.yearsPerRow * this.options.yearRows) - this.dateTimeAdapter.getYear(this._pickerMoment) % (this.options.yearsPerRow * this.options.yearRows) - 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // minus 1 year page (or 10 year pages)\n            case PAGE_UP:\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 * (this.options.yearsPerRow * this.options.yearRows) : -1 * (this.options.yearsPerRow * this.options.yearRows));\n                this.pickerMomentChange.emit(moment);\n                break;\n            // add 1 year page (or 10 year pages)\n            case PAGE_DOWN:\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 * (this.options.yearsPerRow * this.options.yearRows) : (this.options.yearsPerRow * this.options.yearRows));\n                this.pickerMomentChange.emit(moment);\n                break;\n            case ENTER:\n                this.selectYear(this.dateTimeAdapter.getYear(this._pickerMoment));\n                this.keyboardEnter.emit();\n                break;\n            default:\n                return;\n        }\n        this.focusActiveCell();\n        event.preventDefault();\n    }\n    /**\n     * Creates an CalendarCell for the given year.\n     */\n    createYearCell(year) {\n        const startDateOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\n        const ariaLabel = this.dateTimeAdapter.getYearName(startDateOfYear);\n        const cellClass = 'owl-dt-year-' + year;\n        return new CalendarCell(year, year.toString(), ariaLabel, this.isYearEnabled(year), false, cellClass);\n    }\n    setSelectedYears() {\n        this._selectedYears = [];\n        if (this.isInSingleMode && this.selected) {\n            this._selectedYears[0] = this.dateTimeAdapter.getYear(this.selected);\n        }\n        if (this.isInRangeMode && this.selecteds) {\n            this._selectedYears = this.selecteds.map((selected) => {\n                if (this.dateTimeAdapter.isValid(selected)) {\n                    return this.dateTimeAdapter.getYear(selected);\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n    }\n    /** Whether the given year is enabled. */\n    isYearEnabled(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateTimeAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateTimeAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateTimeAdapter.getYear(date) === year; date = this.dateTimeAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isSameYearList(date1, date2) {\n        return Math.floor(this.dateTimeAdapter.getYear(date1) / (this.options.yearsPerRow * this.options.yearRows)) ===\n            Math.floor(this.dateTimeAdapter.getYear(date2) / (this.options.yearsPerRow * this.options.yearRows));\n    }\n    /**\n     * Get a valid date object\n     */\n    getValidDate(obj) {\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\n    }\n    focusActiveCell() {\n        this.calendarBodyElm.focusActiveCell();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlMultiYearViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: OwlDateTimeIntl }, { token: DateTimeAdapter, optional: true }, { token: OptionsTokens.multiYear }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlMultiYearViewComponent, selector: \"owl-date-time-multi-year-view\", inputs: { selectMode: \"selectMode\", selected: \"selected\", selecteds: \"selecteds\", pickerMoment: \"pickerMoment\", dateFilter: \"dateFilter\", minDate: \"minDate\", maxDate: \"maxDate\" }, outputs: { change: \"change\", yearSelected: \"yearSelected\", pickerMomentChange: \"pickerMomentChange\", keyboardEnter: \"keyboardEnter\" }, host: { properties: { \"class.owl-dt-calendar-view\": \"owlDTCalendarView\", \"class.owl-dt-calendar-multi-year-view\": \"owlDTCalendarMultiYearView\" } }, viewQueries: [{ propertyName: \"calendarBodyElm\", first: true, predicate: OwlCalendarBodyComponent, descendants: true, static: true }], ngImport: i0, template: \"<button class=\\\"owl-dt-control-button owl-dt-control-arrow-button\\\"\\n        [disabled]=\\\"!previousEnabled()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"\\n        type=\\\"button\\\" tabindex=\\\"0\\\" (click)=\\\"prevYearList($event)\\\">\\n    <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n        <!-- <editor-fold desc=\\\"SVG Arrow Left\\\"> -->\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n             version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 250.738 250.738\\\"\\n             style=\\\"enable-background:new 0 0 250.738 250.738;\\\" xml:space=\\\"preserve\\\"\\n             width=\\\"100%\\\" height=\\\"100%\\\">\\n            <path style=\\\"fill-rule: evenodd; clip-rule: evenodd;\\\" d=\\\"M96.633,125.369l95.053-94.533c7.101-7.055,7.101-18.492,0-25.546   c-7.1-7.054-18.613-7.054-25.714,0L58.989,111.689c-3.784,3.759-5.487,8.759-5.238,13.68c-0.249,4.922,1.454,9.921,5.238,13.681   l106.983,106.398c7.101,7.055,18.613,7.055,25.714,0c7.101-7.054,7.101-18.491,0-25.544L96.633,125.369z\\\"/>\\n        </svg>\\n        <!-- </editor-fold> -->\\n    </span>\\n</button>\\n<table class=\\\"owl-dt-calendar-table owl-dt-calendar-multi-year-table\\\">\\n    <thead class=\\\"owl-dt-calendar-header\\\">\\n    <tr>\\n        <th colspan=\\\"3\\\">{{tableHeader}}</th>\\n    </tr>\\n    </thead>\\n    <tbody owl-date-time-calendar-body role=\\\"grid\\\"\\n           [rows]=\\\"years\\\" [numCols]=\\\"3\\\" [cellRatio]=\\\"3 / 7\\\"\\n           [activeCell]=\\\"activeCell\\\"\\n           [todayValue]=\\\"todayYear\\\"\\n           [selectedValues]=\\\"selectedYears\\\"\\n           [selectMode]=\\\"selectMode\\\"\\n           (keydown)=\\\"handleCalendarKeydown($event)\\\"\\n           (select)=\\\"selectCalendarCell($event)\\\"></tbody>\\n</table>\\n<button class=\\\"owl-dt-control-button owl-dt-control-arrow-button\\\"\\n        [disabled]=\\\"!nextEnabled()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"\\n        type=\\\"button\\\" tabindex=\\\"0\\\" (click)=\\\"nextYearList($event)\\\">\\n    <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n        <!-- <editor-fold desc=\\\"SVG Arrow Right\\\"> -->\\n    <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n             viewBox=\\\"0 0 250.738 250.738\\\" style=\\\"enable-background:new 0 0 250.738 250.738;\\\" xml:space=\\\"preserve\\\">\\n            <path style=\\\"fill-rule:evenodd;clip-rule:evenodd;\\\" d=\\\"M191.75,111.689L84.766,5.291c-7.1-7.055-18.613-7.055-25.713,0\\n                c-7.101,7.054-7.101,18.49,0,25.544l95.053,94.534l-95.053,94.533c-7.101,7.054-7.101,18.491,0,25.545\\n                c7.1,7.054,18.613,7.054,25.713,0L191.75,139.05c3.784-3.759,5.487-8.759,5.238-13.681\\n                C197.237,120.447,195.534,115.448,191.75,111.689z\\\"/>\\n        </svg>\\n        <!-- </editor-fold> -->\\n    </span>\\n</button>\\n\", styles: [\"\"], dependencies: [{ kind: \"component\", type: OwlCalendarBodyComponent, selector: \"[owl-date-time-calendar-body]\", inputs: [\"activeCell\", \"rows\", \"numCols\", \"cellRatio\", \"todayValue\", \"selectedValues\", \"selectMode\"], outputs: [\"select\"], exportAs: [\"owlDateTimeCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlMultiYearViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'owl-date-time-multi-year-view', host: {\n                        '[class.owl-dt-calendar-view]': 'owlDTCalendarView',\n                        '[class.owl-dt-calendar-multi-year-view]': 'owlDTCalendarMultiYearView'\n                    }, preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<button class=\\\"owl-dt-control-button owl-dt-control-arrow-button\\\"\\n        [disabled]=\\\"!previousEnabled()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"\\n        type=\\\"button\\\" tabindex=\\\"0\\\" (click)=\\\"prevYearList($event)\\\">\\n    <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n        <!-- <editor-fold desc=\\\"SVG Arrow Left\\\"> -->\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n             version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 250.738 250.738\\\"\\n             style=\\\"enable-background:new 0 0 250.738 250.738;\\\" xml:space=\\\"preserve\\\"\\n             width=\\\"100%\\\" height=\\\"100%\\\">\\n            <path style=\\\"fill-rule: evenodd; clip-rule: evenodd;\\\" d=\\\"M96.633,125.369l95.053-94.533c7.101-7.055,7.101-18.492,0-25.546   c-7.1-7.054-18.613-7.054-25.714,0L58.989,111.689c-3.784,3.759-5.487,8.759-5.238,13.68c-0.249,4.922,1.454,9.921,5.238,13.681   l106.983,106.398c7.101,7.055,18.613,7.055,25.714,0c7.101-7.054,7.101-18.491,0-25.544L96.633,125.369z\\\"/>\\n        </svg>\\n        <!-- </editor-fold> -->\\n    </span>\\n</button>\\n<table class=\\\"owl-dt-calendar-table owl-dt-calendar-multi-year-table\\\">\\n    <thead class=\\\"owl-dt-calendar-header\\\">\\n    <tr>\\n        <th colspan=\\\"3\\\">{{tableHeader}}</th>\\n    </tr>\\n    </thead>\\n    <tbody owl-date-time-calendar-body role=\\\"grid\\\"\\n           [rows]=\\\"years\\\" [numCols]=\\\"3\\\" [cellRatio]=\\\"3 / 7\\\"\\n           [activeCell]=\\\"activeCell\\\"\\n           [todayValue]=\\\"todayYear\\\"\\n           [selectedValues]=\\\"selectedYears\\\"\\n           [selectMode]=\\\"selectMode\\\"\\n           (keydown)=\\\"handleCalendarKeydown($event)\\\"\\n           (select)=\\\"selectCalendarCell($event)\\\"></tbody>\\n</table>\\n<button class=\\\"owl-dt-control-button owl-dt-control-arrow-button\\\"\\n        [disabled]=\\\"!nextEnabled()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"\\n        type=\\\"button\\\" tabindex=\\\"0\\\" (click)=\\\"nextYearList($event)\\\">\\n    <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n        <!-- <editor-fold desc=\\\"SVG Arrow Right\\\"> -->\\n    <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n             viewBox=\\\"0 0 250.738 250.738\\\" style=\\\"enable-background:new 0 0 250.738 250.738;\\\" xml:space=\\\"preserve\\\">\\n            <path style=\\\"fill-rule:evenodd;clip-rule:evenodd;\\\" d=\\\"M191.75,111.689L84.766,5.291c-7.1-7.055-18.613-7.055-25.713,0\\n                c-7.101,7.054-7.101,18.49,0,25.544l95.053,94.534l-95.053,94.533c-7.101,7.054-7.101,18.491,0,25.545\\n                c7.1,7.054,18.613,7.054,25.713,0L191.75,139.05c3.784-3.759,5.487-8.759,5.238-13.681\\n                C197.237,120.447,195.534,115.448,191.75,111.689z\\\"/>\\n        </svg>\\n        <!-- </editor-fold> -->\\n    </span>\\n</button>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: OwlDateTimeIntl }, { type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [OptionsTokens.multiYear]\n                }] }], propDecorators: { selectMode: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selecteds: [{\n                type: Input\n            }], pickerMoment: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], pickerMomentChange: [{\n                type: Output\n            }], keyboardEnter: [{\n                type: Output\n            }], calendarBodyElm: [{\n                type: ViewChild,\n                args: [OwlCalendarBodyComponent, { static: true }]\n            }] } });\n\n/**\n * calendar-year-view.component\n */\nconst MONTHS_PER_YEAR = 12;\nconst MONTHS_PER_ROW = 3;\nclass OwlYearViewComponent {\n    get selectMode() {\n        return this._selectMode;\n    }\n    set selectMode(val) {\n        this._selectMode = val;\n        if (this.initiated) {\n            this.generateMonthList();\n            this.cdRef.markForCheck();\n        }\n    }\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._selected = this.getValidDate(value);\n        this.setSelectedMonths();\n    }\n    get selecteds() {\n        return this._selecteds;\n    }\n    set selecteds(values) {\n        this._selecteds = [];\n        for (let i = 0; i < values.length; i++) {\n            const value = this.dateTimeAdapter.deserialize(values[i]);\n            this._selecteds.push(this.getValidDate(value));\n        }\n        this.setSelectedMonths();\n    }\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n    set pickerMoment(value) {\n        const oldMoment = this._pickerMoment;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment =\n            this.getValidDate(value) || this.dateTimeAdapter.now();\n        if (!this.hasSameYear(oldMoment, this._pickerMoment) &&\n            this.initiated) {\n            this.generateMonthList();\n        }\n    }\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(filter) {\n        this._dateFilter = filter;\n        if (this.initiated) {\n            this.generateMonthList();\n        }\n    }\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._minDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateMonthList();\n        }\n    }\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._maxDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateMonthList();\n        }\n    }\n    get months() {\n        return this._months;\n    }\n    get activeCell() {\n        if (this._pickerMoment) {\n            return this.dateTimeAdapter.getMonth(this._pickerMoment);\n        }\n    }\n    get isInSingleMode() {\n        return this.selectMode === 'single';\n    }\n    get isInRangeMode() {\n        return (this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom' ||\n            this.selectMode === 'rangeTo');\n    }\n    get owlDTCalendarView() {\n        return true;\n    }\n    constructor(cdRef, dateTimeAdapter, dateTimeFormats) {\n        this.cdRef = cdRef;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        /**\n         * The select mode of the picker;\n         * */\n        this._selectMode = 'single';\n        this._selecteds = [];\n        this.localeSub = Subscription.EMPTY;\n        this.initiated = false;\n        /**\n         * An array to hold all selectedDates' month value\n         * the value is the month number in current year\n         * */\n        this.selectedMonths = [];\n        /**\n         * Callback to invoke when a new month is selected\n         * */\n        this.change = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         * */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.pickerMomentChange = new EventEmitter();\n        /** Emits when use keyboard enter to select a calendar cell */\n        this.keyboardEnter = new EventEmitter();\n        this.monthNames = this.dateTimeAdapter.getMonthNames('short');\n    }\n    ngOnInit() {\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\n            this.generateMonthList();\n            this.cdRef.markForCheck();\n        });\n    }\n    ngAfterContentInit() {\n        this.generateMonthList();\n        this.initiated = true;\n    }\n    ngOnDestroy() {\n        this.localeSub.unsubscribe();\n    }\n    /**\n     * Handle a calendarCell selected\n     */\n    selectCalendarCell(cell) {\n        this.selectMonth(cell.value);\n    }\n    /**\n     * Handle a new month selected\n     */\n    selectMonth(month) {\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\n        this.monthSelected.emit(firstDateOfMonth);\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\n        const result = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)), this.dateTimeAdapter.getHours(this.pickerMoment), this.dateTimeAdapter.getMinutes(this.pickerMoment), this.dateTimeAdapter.getSeconds(this.pickerMoment));\n        this.change.emit(result);\n    }\n    /**\n     * Handle keydown event on calendar body\n     */\n    handleCalendarKeydown(event) {\n        let moment;\n        switch (event.keyCode) {\n            // minus 1 month\n            case LEFT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // add 1 month\n            case RIGHT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // minus 3 months\n            case UP_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -3);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // add 3 months\n            case DOWN_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 3);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // move to first month of current year\n            case HOME:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -this.dateTimeAdapter.getMonth(this.pickerMoment));\n                this.pickerMomentChange.emit(moment);\n                break;\n            // move to last month of current year\n            case END:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 11 - this.dateTimeAdapter.getMonth(this.pickerMoment));\n                this.pickerMomentChange.emit(moment);\n                break;\n            // minus 1 year (or 10 year)\n            case PAGE_UP:\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 : -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // add 1 year (or 10 year)\n            case PAGE_DOWN:\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 : 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // Select current month\n            case ENTER:\n                this.selectMonth(this.dateTimeAdapter.getMonth(this.pickerMoment));\n                this.keyboardEnter.emit();\n                break;\n            default:\n                return;\n        }\n        this.focusActiveCell();\n        event.preventDefault();\n    }\n    /**\n     * Generate the calendar month list\n     * */\n    generateMonthList() {\n        if (!this.pickerMoment) {\n            return;\n        }\n        this.setSelectedMonths();\n        this.todayMonth = this.getMonthInCurrentYear(this.dateTimeAdapter.now());\n        this._months = [];\n        for (let i = 0; i < MONTHS_PER_YEAR / MONTHS_PER_ROW; i++) {\n            const row = [];\n            for (let j = 0; j < MONTHS_PER_ROW; j++) {\n                const month = j + i * MONTHS_PER_ROW;\n                const monthCell = this.createMonthCell(month);\n                row.push(monthCell);\n            }\n            this._months.push(row);\n        }\n        return;\n    }\n    /**\n     * Creates an CalendarCell for the given month.\n     */\n    createMonthCell(month) {\n        const startDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\n        const ariaLabel = this.dateTimeAdapter.format(startDateOfMonth, this.dateTimeFormats.monthYearA11yLabel);\n        const cellClass = 'owl-dt-month-' + month;\n        return new CalendarCell(month, this.monthNames[month], ariaLabel, this.isMonthEnabled(month), false, cellClass);\n    }\n    /**\n     * Check if the given month is enable\n     */\n    isMonthEnabled(month) {\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\n        // If any date in the month is selectable,\n        // we count the month as enable\n        for (let date = firstDateOfMonth; this.dateTimeAdapter.getMonth(date) === month; date = this.dateTimeAdapter.addCalendarDays(date, 1)) {\n            if (!!date &&\n                (!this.dateFilter || this.dateFilter(date)) &&\n                (!this.minDate ||\n                    this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\n                (!this.maxDate ||\n                    this.dateTimeAdapter.compare(date, this.maxDate) <= 0)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    getMonthInCurrentYear(date) {\n        if (this.getValidDate(date) && this.getValidDate(this._pickerMoment)) {\n            const result = this.dateTimeAdapter.compareYear(date, this._pickerMoment);\n            // < 0 : the given date's year is before pickerMoment's year, we return -1 as selected month value.\n            // > 0 : the given date's year is after pickerMoment's year, we return 12 as selected month value.\n            // 0 : the give date's year is same as the pickerMoment's year, we return the actual month value.\n            if (result < 0) {\n                return -1;\n            }\n            else if (result > 0) {\n                return 12;\n            }\n            else {\n                return this.dateTimeAdapter.getMonth(date);\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Set the selectedMonths value\n     * In single mode, it has only one value which represent the month the selected date in\n     * In range mode, it would has two values, one for the month the fromValue in and the other for the month the toValue in\n     * */\n    setSelectedMonths() {\n        this.selectedMonths = [];\n        if (this.isInSingleMode && this.selected) {\n            this.selectedMonths[0] = this.getMonthInCurrentYear(this.selected);\n        }\n        if (this.isInRangeMode && this.selecteds) {\n            this.selectedMonths[0] = this.getMonthInCurrentYear(this.selecteds[0]);\n            this.selectedMonths[1] = this.getMonthInCurrentYear(this.selecteds[1]);\n        }\n    }\n    /**\n     * Check the given dates are in the same year\n     */\n    hasSameYear(dateLeft, dateRight) {\n        return !!(dateLeft &&\n            dateRight &&\n            this.dateTimeAdapter.getYear(dateLeft) ===\n                this.dateTimeAdapter.getYear(dateRight));\n    }\n    /**\n     * Get a valid date object\n     */\n    getValidDate(obj) {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n    focusActiveCell() {\n        this.calendarBodyElm.focusActiveCell();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlYearViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: DateTimeAdapter, optional: true }, { token: OWL_DATE_TIME_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlYearViewComponent, selector: \"owl-date-time-year-view\", inputs: { selectMode: \"selectMode\", selected: \"selected\", selecteds: \"selecteds\", pickerMoment: \"pickerMoment\", dateFilter: \"dateFilter\", minDate: \"minDate\", maxDate: \"maxDate\" }, outputs: { change: \"change\", monthSelected: \"monthSelected\", pickerMomentChange: \"pickerMomentChange\", keyboardEnter: \"keyboardEnter\" }, host: { properties: { \"class.owl-dt-calendar-view\": \"owlDTCalendarView\" } }, viewQueries: [{ propertyName: \"calendarBodyElm\", first: true, predicate: OwlCalendarBodyComponent, descendants: true, static: true }], exportAs: [\"owlMonthView\"], ngImport: i0, template: \"<table class=\\\"owl-dt-calendar-table owl-dt-calendar-year-table\\\">\\n    <thead class=\\\"owl-dt-calendar-header\\\">\\n    <tr>\\n        <th class=\\\"owl-dt-calendar-table-divider\\\" aria-hidden=\\\"true\\\" colspan=\\\"3\\\"></th>\\n    </tr>\\n    </thead>\\n    <tbody owl-date-time-calendar-body role=\\\"grid\\\"\\n           [rows]=\\\"months\\\" [numCols]=\\\"3\\\" [cellRatio]=\\\"3 / 7\\\"\\n           [activeCell]=\\\"activeCell\\\"\\n           [todayValue]=\\\"todayMonth\\\"\\n           [selectedValues]=\\\"selectedMonths\\\"\\n           [selectMode]=\\\"selectMode\\\"\\n           (keydown)=\\\"handleCalendarKeydown($event)\\\"\\n           (select)=\\\"selectCalendarCell($event)\\\">\\n    </tbody>\\n</table>\\n\", styles: [\"\"], dependencies: [{ kind: \"component\", type: OwlCalendarBodyComponent, selector: \"[owl-date-time-calendar-body]\", inputs: [\"activeCell\", \"rows\", \"numCols\", \"cellRatio\", \"todayValue\", \"selectedValues\", \"selectMode\"], outputs: [\"select\"], exportAs: [\"owlDateTimeCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlYearViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'owl-date-time-year-view', exportAs: 'owlMonthView', host: {\n                        '[class.owl-dt-calendar-view]': 'owlDTCalendarView'\n                    }, preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"owl-dt-calendar-table owl-dt-calendar-year-table\\\">\\n    <thead class=\\\"owl-dt-calendar-header\\\">\\n    <tr>\\n        <th class=\\\"owl-dt-calendar-table-divider\\\" aria-hidden=\\\"true\\\" colspan=\\\"3\\\"></th>\\n    </tr>\\n    </thead>\\n    <tbody owl-date-time-calendar-body role=\\\"grid\\\"\\n           [rows]=\\\"months\\\" [numCols]=\\\"3\\\" [cellRatio]=\\\"3 / 7\\\"\\n           [activeCell]=\\\"activeCell\\\"\\n           [todayValue]=\\\"todayMonth\\\"\\n           [selectedValues]=\\\"selectedMonths\\\"\\n           [selectMode]=\\\"selectMode\\\"\\n           (keydown)=\\\"handleCalendarKeydown($event)\\\"\\n           (select)=\\\"selectCalendarCell($event)\\\">\\n    </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_FORMATS]\n                }] }], propDecorators: { selectMode: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selecteds: [{\n                type: Input\n            }], pickerMoment: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], pickerMomentChange: [{\n                type: Output\n            }], keyboardEnter: [{\n                type: Output\n            }], calendarBodyElm: [{\n                type: ViewChild,\n                args: [OwlCalendarBodyComponent, { static: true }]\n            }] } });\n\n/**\n * calendar-month-view.component\n */\nconst DAYS_PER_WEEK = 7;\nconst WEEKS_PER_VIEW = 6;\nclass OwlMonthViewComponent {\n    get firstDayOfWeek() {\n        return this._firstDayOfWeek;\n    }\n    set firstDayOfWeek(val) {\n        if (val >= 0 && val <= 6 && val !== this._firstDayOfWeek) {\n            this._firstDayOfWeek = val;\n            this.isDefaultFirstDayOfWeek = false;\n            if (this.initiated) {\n                this.generateWeekDays();\n                this.generateCalendar();\n                this.cdRef.markForCheck();\n            }\n        }\n    }\n    get selectMode() {\n        return this._selectMode;\n    }\n    set selectMode(val) {\n        this._selectMode = val;\n        if (this.initiated) {\n            this.generateCalendar();\n            this.cdRef.markForCheck();\n        }\n    }\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        const oldSelected = this._selected;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._selected = this.getValidDate(value);\n        if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\n            this.setSelectedDates();\n        }\n    }\n    get selecteds() {\n        return this._selecteds;\n    }\n    set selecteds(values) {\n        this._selecteds = values.map(v => {\n            v = this.dateTimeAdapter.deserialize(v);\n            return this.getValidDate(v);\n        });\n        this.setSelectedDates();\n    }\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n    set pickerMoment(value) {\n        const oldMoment = this._pickerMoment;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment =\n            this.getValidDate(value) || this.dateTimeAdapter.now();\n        this.firstDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this._pickerMoment), this.dateTimeAdapter.getMonth(this._pickerMoment), 1);\n        if (!this.isSameMonth(oldMoment, this._pickerMoment) &&\n            this.initiated) {\n            this.generateCalendar();\n        }\n    }\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(filter) {\n        this._dateFilter = filter;\n        if (this.initiated) {\n            this.generateCalendar();\n            this.cdRef.markForCheck();\n        }\n    }\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._minDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateCalendar();\n            this.cdRef.markForCheck();\n        }\n    }\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._maxDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateCalendar();\n            this.cdRef.markForCheck();\n        }\n    }\n    get weekdays() {\n        return this._weekdays;\n    }\n    get days() {\n        return this._days;\n    }\n    get activeCell() {\n        if (this.pickerMoment) {\n            return (this.dateTimeAdapter.getDate(this.pickerMoment) +\n                this.firstRowOffset -\n                1);\n        }\n    }\n    get isInSingleMode() {\n        return this.selectMode === 'single';\n    }\n    get isInRangeMode() {\n        return (this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom' ||\n            this.selectMode === 'rangeTo');\n    }\n    get owlDTCalendarView() {\n        return true;\n    }\n    constructor(cdRef, dateTimeAdapter, dateTimeFormats) {\n        this.cdRef = cdRef;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        /**\n         * Whether to hide dates in other months at the start or end of the current month.\n         * */\n        this.hideOtherMonths = false;\n        /**\n         * Whether to show calendar weeks in the calendar\n         * */\n        this.showCalendarWeeks = false;\n        this.isDefaultFirstDayOfWeek = true;\n        /**\n         * The select mode of the picker;\n         * */\n        this._selectMode = 'single';\n        this._selecteds = [];\n        this.localeSub = Subscription.EMPTY;\n        this.initiated = false;\n        /**\n         * An array to hold all selectedDates' value\n         * the value is the day number in current month\n         * */\n        this.selectedDates = [];\n        /**\n         * Callback to invoke when a new date is selected\n         * */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Callback to invoke when any date is selected.\n         * */\n        this.userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.pickerMomentChange = new EventEmitter();\n    }\n    ngOnInit() {\n        this.updateFirstDayOfWeek(this.dateTimeAdapter.getLocale());\n        this.generateWeekDays();\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(locale => {\n            this.updateFirstDayOfWeek(locale);\n            this.generateWeekDays();\n            this.generateCalendar();\n            this.cdRef.markForCheck();\n        });\n    }\n    ngAfterContentInit() {\n        this.generateCalendar();\n        this.initiated = true;\n    }\n    ngOnDestroy() {\n        this.localeSub.unsubscribe();\n    }\n    /**\n     * Handle a calendarCell selected\n     */\n    selectCalendarCell(cell) {\n        // Cases in which the date would not be selected\n        // 1, the calendar cell is NOT enabled (is NOT valid)\n        // 2, the selected date is NOT in current picker's month and the hideOtherMonths is enabled\n        if (!cell.enabled || (this.hideOtherMonths && cell.out)) {\n            return;\n        }\n        this.selectDate(cell.value);\n    }\n    /**\n     * Handle a new date selected\n     */\n    selectDate(date) {\n        const daysDiff = date - 1;\n        const selected = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\n        this.selectedChange.emit(selected);\n        this.userSelection.emit();\n    }\n    /**\n     * Handle keydown event on calendar body\n     */\n    handleCalendarKeydown(event) {\n        let moment;\n        switch (event.keyCode) {\n            // minus 1 day\n            case LEFT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // add 1 day\n            case RIGHT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // minus 1 week\n            case UP_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -7);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // add 1 week\n            case DOWN_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 7);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // move to first day of current month\n            case HOME:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1 - this.dateTimeAdapter.getDate(this.pickerMoment));\n                this.pickerMomentChange.emit(moment);\n                break;\n            // move to last day of current month\n            case END:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment) -\n                    this.dateTimeAdapter.getDate(this.pickerMoment));\n                this.pickerMomentChange.emit(moment);\n                break;\n            // minus 1 month (or 1 year)\n            case PAGE_UP:\n                moment = event.altKey\n                    ? this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1)\n                    : this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // add 1 month (or 1 year)\n            case PAGE_DOWN:\n                moment = event.altKey\n                    ? this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1)\n                    : this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            // select the pickerMoment\n            case ENTER:\n                if (!this.dateFilter || this.dateFilter(this.pickerMoment)) {\n                    this.selectDate(this.dateTimeAdapter.getDate(this.pickerMoment));\n                }\n                break;\n            default:\n                return;\n        }\n        this.focusActiveCell();\n        event.preventDefault();\n    }\n    /**\n     * Generate the calendar weekdays array\n     * */\n    generateWeekDays() {\n        const longWeekdays = this.dateTimeAdapter.getDayOfWeekNames('long');\n        const shortWeekdays = this.dateTimeAdapter.getDayOfWeekNames('short');\n        const narrowWeekdays = this.dateTimeAdapter.getDayOfWeekNames('narrow');\n        const firstDayOfWeek = this.firstDayOfWeek;\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, short: shortWeekdays[i], narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays\n            .slice(firstDayOfWeek)\n            .concat(weekdays.slice(0, firstDayOfWeek));\n        this.dateNames = this.dateTimeAdapter.getDateNames();\n        return;\n    }\n    /**\n     * Generate the calendar days array\n     * */\n    generateCalendar() {\n        if (!this.pickerMoment) {\n            return;\n        }\n        this.todayDate = null;\n        this.weekNumbers = [];\n        // the first weekday of the month\n        const startWeekdayOfMonth = this.dateTimeAdapter.getDay(this.firstDateOfMonth);\n        const firstDayOfWeek = this.firstDayOfWeek;\n        // the amount of days from the first date of the month\n        // if it is < 0, it means the date is in previous month\n        let daysDiff = 0 -\n            ((startWeekdayOfMonth + (DAYS_PER_WEEK - firstDayOfWeek)) %\n                DAYS_PER_WEEK);\n        // the index of cell that contains the first date of the month\n        this.firstRowOffset = Math.abs(daysDiff);\n        this._days = [];\n        for (let i = 0; i < WEEKS_PER_VIEW; i++) {\n            const week = [];\n            for (let j = 0; j < DAYS_PER_WEEK; j++) {\n                const date = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\n                const dateCell = this.createDateCell(date, daysDiff);\n                // check if the date is today\n                if (this.dateTimeAdapter.isSameDay(this.dateTimeAdapter.now(), date)) {\n                    this.todayDate = daysDiff + 1;\n                }\n                week.push(dateCell);\n                daysDiff += 1;\n            }\n            this._days.push(week);\n            if (this.showCalendarWeeks) {\n                const weekNumber = this.getISOWeek(new Date(week[0].ariaLabel));\n                this.weekNumbers.push(weekNumber);\n            }\n        }\n        this.setSelectedDates();\n    }\n    getISOWeek(d) {\n        const clonedDate = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n        // Make Sunday's day number 7\n        clonedDate.setUTCDate(clonedDate.getUTCDate() + 4 - (clonedDate.getUTCDay() || 7));\n        // Get first day of year\n        const yearStart = new Date(Date.UTC(clonedDate.getUTCFullYear(), 0, 1));\n        // Calculate full weeks to nearest Thursday\n        const weekNo = Math.ceil((((+clonedDate - +yearStart) / 86400000) + 1) / 7);\n        return weekNo;\n    }\n    updateFirstDayOfWeek(locale) {\n        if (this.isDefaultFirstDayOfWeek) {\n            try {\n                this._firstDayOfWeek = getLocaleFirstDayOfWeek(locale);\n            }\n            catch {\n                this._firstDayOfWeek = 0;\n            }\n        }\n    }\n    /**\n     * Creates CalendarCell for days.\n     */\n    createDateCell(date, daysDiff) {\n        // total days of the month\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment);\n        const dateNum = this.dateTimeAdapter.getDate(date);\n        // const dateName = this.dateNames[dateNum - 1];\n        const dateName = dateNum.toString();\n        const ariaLabel = this.dateTimeAdapter.format(date, this.dateTimeFormats.dateA11yLabel);\n        // check if the date if selectable\n        const enabled = this.isDateEnabled(date);\n        // check if date is not in current month\n        const dayValue = daysDiff + 1;\n        const out = dayValue < 1 || dayValue > daysInMonth;\n        const cellClass = 'owl-dt-day-' + this.dateTimeAdapter.getDay(date);\n        return new CalendarCell(dayValue, dateName, ariaLabel, enabled, out, cellClass);\n    }\n    /**\n     * Check if the date is valid\n     */\n    isDateEnabled(date) {\n        return (!!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate ||\n                this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\n            (!this.maxDate ||\n                this.dateTimeAdapter.compare(date, this.maxDate) <= 0));\n    }\n    /**\n     * Get a valid date object\n     */\n    getValidDate(obj) {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n    /**\n     * Check if the give dates are none-null and in the same month\n     */\n    isSameMonth(dateLeft, dateRight) {\n        return !!(dateLeft &&\n            dateRight &&\n            this.dateTimeAdapter.isValid(dateLeft) &&\n            this.dateTimeAdapter.isValid(dateRight) &&\n            this.dateTimeAdapter.getYear(dateLeft) ===\n                this.dateTimeAdapter.getYear(dateRight) &&\n            this.dateTimeAdapter.getMonth(dateLeft) ===\n                this.dateTimeAdapter.getMonth(dateRight));\n    }\n    /**\n     * Set the selectedDates value.\n     * In single mode, it has only one value which represent the selected date\n     * In range mode, it would has two values, one for the fromValue and the other for the toValue\n     * */\n    setSelectedDates() {\n        this.selectedDates = [];\n        if (!this.firstDateOfMonth) {\n            return;\n        }\n        if (this.isInSingleMode && this.selected) {\n            const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(this.selected, this.firstDateOfMonth);\n            this.selectedDates[0] = dayDiff + 1;\n            return;\n        }\n        if (this.isInRangeMode && this.selecteds) {\n            this.selectedDates = this.selecteds.map(selected => {\n                if (this.dateTimeAdapter.isValid(selected)) {\n                    const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(selected, this.firstDateOfMonth);\n                    return dayDiff + 1;\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n    }\n    focusActiveCell() {\n        this.calendarBodyElm.focusActiveCell();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlMonthViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: DateTimeAdapter, optional: true }, { token: OWL_DATE_TIME_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlMonthViewComponent, selector: \"owl-date-time-month-view\", inputs: { hideOtherMonths: \"hideOtherMonths\", showCalendarWeeks: \"showCalendarWeeks\", firstDayOfWeek: \"firstDayOfWeek\", selectMode: \"selectMode\", selected: \"selected\", selecteds: \"selecteds\", pickerMoment: \"pickerMoment\", dateFilter: \"dateFilter\", minDate: \"minDate\", maxDate: \"maxDate\" }, outputs: { selectedChange: \"selectedChange\", userSelection: \"userSelection\", pickerMomentChange: \"pickerMomentChange\" }, host: { properties: { \"class.owl-dt-calendar-view\": \"owlDTCalendarView\" } }, viewQueries: [{ propertyName: \"calendarBodyElm\", first: true, predicate: OwlCalendarBodyComponent, descendants: true, static: true }], exportAs: [\"owlYearView\"], ngImport: i0, template: \"<ul class=\\\"week-number\\\" *ngIf=\\\"showCalendarWeeks\\\">\\n    <li *ngFor=\\\"let week of weekNumbers;\\\">\\n        <span>{{ week }}</span>\\n    </li>\\n</ul>\\n<table class=\\\"owl-dt-calendar-table owl-dt-calendar-month-table\\\" [ngClass]=\\\"{'owl-calendar-weeks': showCalendarWeeks}\\\"\\n       [class.owl-dt-calendar-only-current-month]=\\\"hideOtherMonths\\\">\\n    <thead class=\\\"owl-dt-calendar-header\\\">\\n    <tr class=\\\"owl-dt-weekdays\\\">\\n        <th *ngFor=\\\"let weekday of weekdays\\\"\\n            [attr.aria-label]=\\\"weekday.long\\\"\\n            class=\\\"owl-dt-weekday\\\" scope=\\\"col\\\">\\n            <span>{{weekday.short}}</span>\\n        </th>\\n    </tr>\\n    <tr>\\n        <th class=\\\"owl-dt-calendar-table-divider\\\" [ngClass]=\\\"{'owl-calendar-weeks': showCalendarWeeks}\\\" aria-hidden=\\\"true\\\" colspan=\\\"7\\\"></th>\\n    </tr>\\n    </thead>\\n    <tbody owl-date-time-calendar-body role=\\\"grid\\\"\\n           [rows]=\\\"days\\\" [todayValue]=\\\"todayDate\\\"\\n           [selectedValues]=\\\"selectedDates\\\"\\n           [selectMode]=\\\"selectMode\\\"\\n           [activeCell]=\\\"activeCell\\\"\\n           (keydown)=\\\"handleCalendarKeydown($event)\\\"\\n           (select)=\\\"selectCalendarCell($event)\\\">\\n    </tbody>\\n</table>\\n\", styles: [\".week-number{display:flex;flex-direction:column;justify-content:space-between;margin:46px 0 14px;padding:0;list-style:none;border-right:1px solid rgba(0,0,0,.12);width:8%;font-weight:700}.week-number li{font-size:.8em}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: OwlCalendarBodyComponent, selector: \"[owl-date-time-calendar-body]\", inputs: [\"activeCell\", \"rows\", \"numCols\", \"cellRatio\", \"todayValue\", \"selectedValues\", \"selectMode\"], outputs: [\"select\"], exportAs: [\"owlDateTimeCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlMonthViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'owl-date-time-month-view', exportAs: 'owlYearView', host: {\n                        '[class.owl-dt-calendar-view]': 'owlDTCalendarView'\n                    }, preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ul class=\\\"week-number\\\" *ngIf=\\\"showCalendarWeeks\\\">\\n    <li *ngFor=\\\"let week of weekNumbers;\\\">\\n        <span>{{ week }}</span>\\n    </li>\\n</ul>\\n<table class=\\\"owl-dt-calendar-table owl-dt-calendar-month-table\\\" [ngClass]=\\\"{'owl-calendar-weeks': showCalendarWeeks}\\\"\\n       [class.owl-dt-calendar-only-current-month]=\\\"hideOtherMonths\\\">\\n    <thead class=\\\"owl-dt-calendar-header\\\">\\n    <tr class=\\\"owl-dt-weekdays\\\">\\n        <th *ngFor=\\\"let weekday of weekdays\\\"\\n            [attr.aria-label]=\\\"weekday.long\\\"\\n            class=\\\"owl-dt-weekday\\\" scope=\\\"col\\\">\\n            <span>{{weekday.short}}</span>\\n        </th>\\n    </tr>\\n    <tr>\\n        <th class=\\\"owl-dt-calendar-table-divider\\\" [ngClass]=\\\"{'owl-calendar-weeks': showCalendarWeeks}\\\" aria-hidden=\\\"true\\\" colspan=\\\"7\\\"></th>\\n    </tr>\\n    </thead>\\n    <tbody owl-date-time-calendar-body role=\\\"grid\\\"\\n           [rows]=\\\"days\\\" [todayValue]=\\\"todayDate\\\"\\n           [selectedValues]=\\\"selectedDates\\\"\\n           [selectMode]=\\\"selectMode\\\"\\n           [activeCell]=\\\"activeCell\\\"\\n           (keydown)=\\\"handleCalendarKeydown($event)\\\"\\n           (select)=\\\"selectCalendarCell($event)\\\">\\n    </tbody>\\n</table>\\n\", styles: [\".week-number{display:flex;flex-direction:column;justify-content:space-between;margin:46px 0 14px;padding:0;list-style:none;border-right:1px solid rgba(0,0,0,.12);width:8%;font-weight:700}.week-number li{font-size:.8em}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_FORMATS]\n                }] }], propDecorators: { hideOtherMonths: [{\n                type: Input\n            }], showCalendarWeeks: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], selectMode: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selecteds: [{\n                type: Input\n            }], pickerMoment: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], userSelection: [{\n                type: Output\n            }], pickerMomentChange: [{\n                type: Output\n            }], calendarBodyElm: [{\n                type: ViewChild,\n                args: [OwlCalendarBodyComponent, { static: true }]\n            }] } });\n\n/**\n * calendar.component\n */\nclass OwlCalendarComponent {\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        value = this.getValidDate(value);\n        this._minDate = value\n            ? this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(value), this.dateTimeAdapter.getMonth(value), this.dateTimeAdapter.getDate(value))\n            : null;\n    }\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        value = this.getValidDate(value);\n        this._maxDate = value\n            ? this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(value), this.dateTimeAdapter.getMonth(value), this.dateTimeAdapter.getDate(value))\n            : null;\n    }\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n    set pickerMoment(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment =\n            this.getValidDate(value) || this.dateTimeAdapter.now();\n    }\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._selected = this.getValidDate(value);\n    }\n    get selecteds() {\n        return this._selecteds;\n    }\n    set selecteds(values) {\n        this._selecteds = values.map(v => {\n            v = this.dateTimeAdapter.deserialize(v);\n            return this.getValidDate(v);\n        });\n    }\n    get periodButtonText() {\n        return this.isMonthView\n            ? this.dateTimeAdapter.format(this.pickerMoment, this.dateTimeFormats.monthYearLabel)\n            : this.dateTimeAdapter.getYearName(this.pickerMoment);\n    }\n    get periodButtonLabel() {\n        return this.isMonthView\n            ? this.pickerIntl.switchToMultiYearViewLabel\n            : this.pickerIntl.switchToMonthViewLabel;\n    }\n    get prevButtonLabel() {\n        if (this._currentView === DateView.MONTH) {\n            return this.pickerIntl.prevMonthLabel;\n        }\n        else if (this._currentView === DateView.YEAR) {\n            return this.pickerIntl.prevYearLabel;\n        }\n        else {\n            return null;\n        }\n    }\n    get nextButtonLabel() {\n        if (this._currentView === DateView.MONTH) {\n            return this.pickerIntl.nextMonthLabel;\n        }\n        else if (this._currentView === DateView.YEAR) {\n            return this.pickerIntl.nextYearLabel;\n        }\n        else {\n            return null;\n        }\n    }\n    get currentView() {\n        return this._currentView;\n    }\n    set currentView(view) {\n        this._currentView = view;\n        this.moveFocusOnNextTick = true;\n    }\n    get isInSingleMode() {\n        return this.selectMode === 'single';\n    }\n    get isInRangeMode() {\n        return (this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom' ||\n            this.selectMode === 'rangeTo');\n    }\n    get showControlArrows() {\n        return this._currentView !== DateView.MULTI_YEARS;\n    }\n    get isMonthView() {\n        return this._currentView === DateView.MONTH;\n    }\n    /**\n     * Bind class 'owl-dt-calendar' to host\n     * */\n    get owlDTCalendarClass() {\n        return true;\n    }\n    constructor(elmRef, pickerIntl, ngZone, cdRef, dateTimeAdapter, dateTimeFormats) {\n        this.elmRef = elmRef;\n        this.pickerIntl = pickerIntl;\n        this.ngZone = ngZone;\n        this.cdRef = cdRef;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        this.DateView = DateView;\n        this._selecteds = [];\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = DateView.MONTH;\n        /**\n         * Whether to should only the year and multi-year views.\n         */\n        this.yearOnly = false;\n        /**\n         * Whether to show calendar weeks in the calendar\n         * */\n        this.showCalendarWeeks = false;\n        /**\n         * Whether to should only the multi-year view.\n         */\n        this.multiyearOnly = false;\n        /** Emits when the currently picker moment changes. */\n        this.pickerMomentChange = new EventEmitter();\n        /** Emits when the selected date changes. */\n        this.dateClicked = new EventEmitter();\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this.userSelection = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         * */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         * */\n        this.monthSelected = new EventEmitter();\n        this.intlChangesSub = Subscription.EMPTY;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this.moveFocusOnNextTick = false;\n        /**\n         * Date filter for the month and year view\n         */\n        this.dateFilterForViews = (date) => {\n            return (!!date &&\n                (!this.dateFilter || this.dateFilter(date)) &&\n                (!this.minDate ||\n                    this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\n                (!this.maxDate ||\n                    this.dateTimeAdapter.compare(date, this.maxDate) <= 0));\n        };\n        this.intlChangesSub = this.pickerIntl.changes.subscribe(() => {\n            this.cdRef.markForCheck();\n        });\n    }\n    ngOnInit() {\n    }\n    ngAfterContentInit() {\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this.intlChangesSub.unsubscribe();\n    }\n    /**\n     * Toggle between month view and year view\n     */\n    toggleViews() {\n        let nextView = null;\n        if (this._currentView === DateView.MONTH) {\n            nextView = DateView.MULTI_YEARS;\n        }\n        else {\n            if (this.multiyearOnly) {\n                nextView = DateView.MULTI_YEARS;\n            }\n            else if (this.yearOnly) {\n                nextView = this._currentView === DateView.YEAR ? DateView.MULTI_YEARS : DateView.YEAR;\n            }\n            else {\n                nextView = DateView.MONTH;\n            }\n        }\n        this.currentView = nextView;\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * */\n    previousClicked() {\n        this.pickerMoment = this.isMonthView\n            ? this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1)\n            : this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1);\n        this.pickerMomentChange.emit(this.pickerMoment);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * */\n    nextClicked() {\n        this.pickerMoment = this.isMonthView\n            ? this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1)\n            : this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1);\n        this.pickerMomentChange.emit(this.pickerMoment);\n    }\n    dateSelected(date) {\n        if (!this.dateFilterForViews(date)) {\n            return;\n        }\n        this.dateClicked.emit(date);\n        this.selectedChange.emit(date);\n        /*if ((this.isInSingleMode && !this.dateTimeAdapter.isSameDay(date, this.selected)) ||\n            this.isInRangeMode) {\n            this.selectedChange.emit(date);\n        }*/\n    }\n    /**\n     * Change the pickerMoment value and switch to a specific view\n     */\n    goToDateInView(date, view) {\n        this.handlePickerMomentChange(date);\n        if ((!this.yearOnly && !this.multiyearOnly) ||\n            (this.multiyearOnly && (view !== DateView.MONTH && view !== DateView.YEAR)) ||\n            (this.yearOnly && view !== DateView.MONTH)) {\n            this.currentView = view;\n        }\n        return;\n    }\n    /**\n     * Change the pickerMoment value\n     */\n    handlePickerMomentChange(date) {\n        this.pickerMoment = this.dateTimeAdapter.clampDate(date, this.minDate, this.maxDate);\n        this.pickerMomentChange.emit(this.pickerMoment);\n        return;\n    }\n    userSelected() {\n        this.userSelection.emit();\n    }\n    /**\n     * Whether the previous period button is enabled.\n     */\n    prevButtonEnabled() {\n        return (!this.minDate || !this.isSameView(this.pickerMoment, this.minDate));\n    }\n    /**\n     * Whether the next period button is enabled.\n     */\n    nextButtonEnabled() {\n        return (!this.maxDate || !this.isSameView(this.pickerMoment, this.maxDate));\n    }\n    /**\n     * Focus to the host element\n     * */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                this.elmRef.nativeElement\n                    .querySelector('.owl-dt-calendar-cell-active')\n                    .focus();\n            });\n        });\n    }\n    selectYearInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    selectMonthInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     */\n    isSameView(date1, date2) {\n        if (this._currentView === DateView.MONTH) {\n            return !!(date1 &&\n                date2 &&\n                this.dateTimeAdapter.getYear(date1) ===\n                    this.dateTimeAdapter.getYear(date2) &&\n                this.dateTimeAdapter.getMonth(date1) ===\n                    this.dateTimeAdapter.getMonth(date2));\n        }\n        else if (this._currentView === DateView.YEAR) {\n            return !!(date1 &&\n                date2 &&\n                this.dateTimeAdapter.getYear(date1) ===\n                    this.dateTimeAdapter.getYear(date2));\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Get a valid date object\n     */\n    getValidDate(obj) {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlCalendarComponent, deps: [{ token: i0.ElementRef }, { token: OwlDateTimeIntl }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: DateTimeAdapter, optional: true }, { token: OWL_DATE_TIME_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlCalendarComponent, selector: \"owl-date-time-calendar\", inputs: { minDate: \"minDate\", maxDate: \"maxDate\", pickerMoment: \"pickerMoment\", selected: \"selected\", selecteds: \"selecteds\", dateFilter: \"dateFilter\", firstDayOfWeek: \"firstDayOfWeek\", selectMode: \"selectMode\", startView: \"startView\", yearOnly: \"yearOnly\", showCalendarWeeks: \"showCalendarWeeks\", multiyearOnly: \"multiyearOnly\", hideOtherMonths: \"hideOtherMonths\" }, outputs: { pickerMomentChange: \"pickerMomentChange\", dateClicked: \"dateClicked\", selectedChange: \"selectedChange\", userSelection: \"userSelection\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\" }, host: { properties: { \"class.owl-dt-calendar\": \"owlDTCalendarClass\" } }, exportAs: [\"owlDateTimeCalendar\"], ngImport: i0, template: \"<div class=\\\"owl-dt-calendar-control\\\">\\n    <!-- focus when keyboard tab (http://kizu.ru/en/blog/keyboard-only-focus/#x) -->\\n    <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-control-arrow-button\\\"\\n            type=\\\"button\\\" tabindex=\\\"0\\\"\\n            [style.visibility]=\\\"showControlArrows? 'visible': 'hidden'\\\"\\n            [disabled]=\\\"!prevButtonEnabled()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\"\\n            (click)=\\\"previousClicked()\\\">\\n        <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n            <!-- <editor-fold desc=\\\"SVG Arrow Left\\\"> -->\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                 version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 250.738 250.738\\\"\\n                 style=\\\"enable-background:new 0 0 250.738 250.738;\\\" xml:space=\\\"preserve\\\"\\n                 width=\\\"100%\\\" height=\\\"100%\\\">\\n                <path style=\\\"fill-rule: evenodd; clip-rule: evenodd;\\\" d=\\\"M96.633,125.369l95.053-94.533c7.101-7.055,7.101-18.492,0-25.546   c-7.1-7.054-18.613-7.054-25.714,0L58.989,111.689c-3.784,3.759-5.487,8.759-5.238,13.68c-0.249,4.922,1.454,9.921,5.238,13.681   l106.983,106.398c7.101,7.055,18.613,7.055,25.714,0c7.101-7.054,7.101-18.491,0-25.544L96.633,125.369z\\\"/>\\n            </svg>\\n            <!-- </editor-fold> -->\\n        </span>\\n    </button>\\n    <div class=\\\"owl-dt-calendar-control-content\\\">\\n        <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-control-period-button\\\"\\n                type=\\\"button\\\" tabindex=\\\"0\\\"\\n                [attr.aria-label]=\\\"periodButtonLabel\\\"\\n                (click)=\\\"toggleViews()\\\">\\n            <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n                {{periodButtonText}}\\n\\n                <span class=\\\"owl-dt-control-button-arrow\\\"\\n                      [style.transform]=\\\"'rotate(' + (isMonthView? 0 : 180) +'deg)'\\\">\\n                    <!-- <editor-fold desc=\\\"SVG Arrow\\\"> -->\\n                    <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n                         width=\\\"50%\\\" height=\\\"50%\\\" viewBox=\\\"0 0 292.362 292.362\\\" style=\\\"enable-background:new 0 0 292.362 292.362;\\\"\\n                         xml:space=\\\"preserve\\\">\\n                        <g>\\n                            <path d=\\\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\\n                                C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\\n                                s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\\\"/>\\n                        </g>\\n                    </svg>\\n                    <!-- </editor-fold> -->\\n                </span>\\n            </span>\\n        </button>\\n    </div>\\n    <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-control-arrow-button\\\"\\n            type=\\\"button\\\" tabindex=\\\"0\\\"\\n            [style.visibility]=\\\"showControlArrows? 'visible': 'hidden'\\\"\\n            [disabled]=\\\"!nextButtonEnabled()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\"\\n            (click)=\\\"nextClicked()\\\">\\n        <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n            <!-- <editor-fold desc=\\\"SVG Arrow Right\\\"> -->\\n        <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n                 viewBox=\\\"0 0 250.738 250.738\\\" style=\\\"enable-background:new 0 0 250.738 250.738;\\\" xml:space=\\\"preserve\\\">\\n                <path style=\\\"fill-rule:evenodd;clip-rule:evenodd;\\\" d=\\\"M191.75,111.689L84.766,5.291c-7.1-7.055-18.613-7.055-25.713,0\\n                    c-7.101,7.054-7.101,18.49,0,25.544l95.053,94.534l-95.053,94.533c-7.101,7.054-7.101,18.491,0,25.545\\n                    c7.1,7.054,18.613,7.054,25.713,0L191.75,139.05c3.784-3.759,5.487-8.759,5.238-13.681\\n                    C197.237,120.447,195.534,115.448,191.75,111.689z\\\"/>\\n            </svg>\\n            <!-- </editor-fold> -->\\n        </span>\\n    </button>\\n</div>\\n<div class=\\\"owl-dt-calendar-main\\\" cdkMonitorSubtreeFocus [ngSwitch]=\\\"currentView\\\" tabindex=\\\"-1\\\">\\n    <owl-date-time-month-view\\n            *ngSwitchCase=\\\"DateView.MONTH\\\"\\n            [pickerMoment]=\\\"pickerMoment\\\"\\n            [firstDayOfWeek]=\\\"firstDayOfWeek\\\"\\n            [selected]=\\\"selected\\\"\\n            [selecteds]=\\\"selecteds\\\"\\n            [selectMode]=\\\"selectMode\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [showCalendarWeeks]=\\\"showCalendarWeeks\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [hideOtherMonths]=\\\"hideOtherMonths\\\"\\n            (pickerMomentChange)=\\\"handlePickerMomentChange($event)\\\"\\n            (selectedChange)=\\\"dateSelected($event)\\\"\\n            (userSelection)=\\\"userSelected()\\\"></owl-date-time-month-view>\\n\\n    <owl-date-time-year-view\\n            *ngSwitchCase=\\\"DateView.YEAR\\\"\\n            [pickerMoment]=\\\"pickerMoment\\\"\\n            [selected]=\\\"selected\\\"\\n            [selecteds]=\\\"selecteds\\\"\\n            [selectMode]=\\\"selectMode\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            (keyboardEnter)=\\\"focusActiveCell()\\\"\\n            (pickerMomentChange)=\\\"handlePickerMomentChange($event)\\\"\\n            (monthSelected)=\\\"selectMonthInYearView($event)\\\"\\n            (change)=\\\"goToDateInView($event, DateView.MONTH)\\\"></owl-date-time-year-view>\\n\\n    <owl-date-time-multi-year-view\\n            *ngSwitchCase=\\\"DateView.MULTI_YEARS\\\"\\n            [pickerMoment]=\\\"pickerMoment\\\"\\n            [selected]=\\\"selected\\\"\\n            [selecteds]=\\\"selecteds\\\"\\n            [selectMode]=\\\"selectMode\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            (keyboardEnter)=\\\"focusActiveCell()\\\"\\n            (pickerMomentChange)=\\\"handlePickerMomentChange($event)\\\"\\n            (yearSelected)=\\\"selectYearInMultiYearView($event)\\\"\\n            (change)=\\\"goToDateInView($event, DateView.YEAR)\\\"></owl-date-time-multi-year-view>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i4.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"], exportAs: [\"cdkMonitorFocus\"] }, { kind: \"component\", type: OwlMultiYearViewComponent, selector: \"owl-date-time-multi-year-view\", inputs: [\"selectMode\", \"selected\", \"selecteds\", \"pickerMoment\", \"dateFilter\", \"minDate\", \"maxDate\"], outputs: [\"change\", \"yearSelected\", \"pickerMomentChange\", \"keyboardEnter\"] }, { kind: \"component\", type: OwlYearViewComponent, selector: \"owl-date-time-year-view\", inputs: [\"selectMode\", \"selected\", \"selecteds\", \"pickerMoment\", \"dateFilter\", \"minDate\", \"maxDate\"], outputs: [\"change\", \"monthSelected\", \"pickerMomentChange\", \"keyboardEnter\"], exportAs: [\"owlMonthView\"] }, { kind: \"component\", type: OwlMonthViewComponent, selector: \"owl-date-time-month-view\", inputs: [\"hideOtherMonths\", \"showCalendarWeeks\", \"firstDayOfWeek\", \"selectMode\", \"selected\", \"selecteds\", \"pickerMoment\", \"dateFilter\", \"minDate\", \"maxDate\"], outputs: [\"selectedChange\", \"userSelection\", \"pickerMomentChange\"], exportAs: [\"owlYearView\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlCalendarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'owl-date-time-calendar', exportAs: 'owlDateTimeCalendar', host: {\n                        '[class.owl-dt-calendar]': 'owlDTCalendarClass'\n                    }, preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"owl-dt-calendar-control\\\">\\n    <!-- focus when keyboard tab (http://kizu.ru/en/blog/keyboard-only-focus/#x) -->\\n    <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-control-arrow-button\\\"\\n            type=\\\"button\\\" tabindex=\\\"0\\\"\\n            [style.visibility]=\\\"showControlArrows? 'visible': 'hidden'\\\"\\n            [disabled]=\\\"!prevButtonEnabled()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\"\\n            (click)=\\\"previousClicked()\\\">\\n        <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n            <!-- <editor-fold desc=\\\"SVG Arrow Left\\\"> -->\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                 version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 250.738 250.738\\\"\\n                 style=\\\"enable-background:new 0 0 250.738 250.738;\\\" xml:space=\\\"preserve\\\"\\n                 width=\\\"100%\\\" height=\\\"100%\\\">\\n                <path style=\\\"fill-rule: evenodd; clip-rule: evenodd;\\\" d=\\\"M96.633,125.369l95.053-94.533c7.101-7.055,7.101-18.492,0-25.546   c-7.1-7.054-18.613-7.054-25.714,0L58.989,111.689c-3.784,3.759-5.487,8.759-5.238,13.68c-0.249,4.922,1.454,9.921,5.238,13.681   l106.983,106.398c7.101,7.055,18.613,7.055,25.714,0c7.101-7.054,7.101-18.491,0-25.544L96.633,125.369z\\\"/>\\n            </svg>\\n            <!-- </editor-fold> -->\\n        </span>\\n    </button>\\n    <div class=\\\"owl-dt-calendar-control-content\\\">\\n        <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-control-period-button\\\"\\n                type=\\\"button\\\" tabindex=\\\"0\\\"\\n                [attr.aria-label]=\\\"periodButtonLabel\\\"\\n                (click)=\\\"toggleViews()\\\">\\n            <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n                {{periodButtonText}}\\n\\n                <span class=\\\"owl-dt-control-button-arrow\\\"\\n                      [style.transform]=\\\"'rotate(' + (isMonthView? 0 : 180) +'deg)'\\\">\\n                    <!-- <editor-fold desc=\\\"SVG Arrow\\\"> -->\\n                    <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n                         width=\\\"50%\\\" height=\\\"50%\\\" viewBox=\\\"0 0 292.362 292.362\\\" style=\\\"enable-background:new 0 0 292.362 292.362;\\\"\\n                         xml:space=\\\"preserve\\\">\\n                        <g>\\n                            <path d=\\\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\\n                                C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\\n                                s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\\\"/>\\n                        </g>\\n                    </svg>\\n                    <!-- </editor-fold> -->\\n                </span>\\n            </span>\\n        </button>\\n    </div>\\n    <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-control-arrow-button\\\"\\n            type=\\\"button\\\" tabindex=\\\"0\\\"\\n            [style.visibility]=\\\"showControlArrows? 'visible': 'hidden'\\\"\\n            [disabled]=\\\"!nextButtonEnabled()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\"\\n            (click)=\\\"nextClicked()\\\">\\n        <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n            <!-- <editor-fold desc=\\\"SVG Arrow Right\\\"> -->\\n        <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n                 viewBox=\\\"0 0 250.738 250.738\\\" style=\\\"enable-background:new 0 0 250.738 250.738;\\\" xml:space=\\\"preserve\\\">\\n                <path style=\\\"fill-rule:evenodd;clip-rule:evenodd;\\\" d=\\\"M191.75,111.689L84.766,5.291c-7.1-7.055-18.613-7.055-25.713,0\\n                    c-7.101,7.054-7.101,18.49,0,25.544l95.053,94.534l-95.053,94.533c-7.101,7.054-7.101,18.491,0,25.545\\n                    c7.1,7.054,18.613,7.054,25.713,0L191.75,139.05c3.784-3.759,5.487-8.759,5.238-13.681\\n                    C197.237,120.447,195.534,115.448,191.75,111.689z\\\"/>\\n            </svg>\\n            <!-- </editor-fold> -->\\n        </span>\\n    </button>\\n</div>\\n<div class=\\\"owl-dt-calendar-main\\\" cdkMonitorSubtreeFocus [ngSwitch]=\\\"currentView\\\" tabindex=\\\"-1\\\">\\n    <owl-date-time-month-view\\n            *ngSwitchCase=\\\"DateView.MONTH\\\"\\n            [pickerMoment]=\\\"pickerMoment\\\"\\n            [firstDayOfWeek]=\\\"firstDayOfWeek\\\"\\n            [selected]=\\\"selected\\\"\\n            [selecteds]=\\\"selecteds\\\"\\n            [selectMode]=\\\"selectMode\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [showCalendarWeeks]=\\\"showCalendarWeeks\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [hideOtherMonths]=\\\"hideOtherMonths\\\"\\n            (pickerMomentChange)=\\\"handlePickerMomentChange($event)\\\"\\n            (selectedChange)=\\\"dateSelected($event)\\\"\\n            (userSelection)=\\\"userSelected()\\\"></owl-date-time-month-view>\\n\\n    <owl-date-time-year-view\\n            *ngSwitchCase=\\\"DateView.YEAR\\\"\\n            [pickerMoment]=\\\"pickerMoment\\\"\\n            [selected]=\\\"selected\\\"\\n            [selecteds]=\\\"selecteds\\\"\\n            [selectMode]=\\\"selectMode\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            (keyboardEnter)=\\\"focusActiveCell()\\\"\\n            (pickerMomentChange)=\\\"handlePickerMomentChange($event)\\\"\\n            (monthSelected)=\\\"selectMonthInYearView($event)\\\"\\n            (change)=\\\"goToDateInView($event, DateView.MONTH)\\\"></owl-date-time-year-view>\\n\\n    <owl-date-time-multi-year-view\\n            *ngSwitchCase=\\\"DateView.MULTI_YEARS\\\"\\n            [pickerMoment]=\\\"pickerMoment\\\"\\n            [selected]=\\\"selected\\\"\\n            [selecteds]=\\\"selecteds\\\"\\n            [selectMode]=\\\"selectMode\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            (keyboardEnter)=\\\"focusActiveCell()\\\"\\n            (pickerMomentChange)=\\\"handlePickerMomentChange($event)\\\"\\n            (yearSelected)=\\\"selectYearInMultiYearView($event)\\\"\\n            (change)=\\\"goToDateInView($event, DateView.YEAR)\\\"></owl-date-time-multi-year-view>\\n</div>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: OwlDateTimeIntl }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_FORMATS]\n                }] }], propDecorators: { minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], pickerMoment: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selecteds: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], selectMode: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], yearOnly: [{\n                type: Input\n            }], showCalendarWeeks: [{\n                type: Input\n            }], multiyearOnly: [{\n                type: Input\n            }], hideOtherMonths: [{\n                type: Input\n            }], pickerMomentChange: [{\n                type: Output\n            }], dateClicked: [{\n                type: Output\n            }], selectedChange: [{\n                type: Output\n            }], userSelection: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }] } });\n\n/**\n * timer-box.component\n */\nclass OwlTimerBoxComponent {\n    get displayValue() {\n        if (this.hasFocus) {\n            // Don't try to reformat the value that user is currently editing\n            return this.valueInput.nativeElement.value;\n        }\n        const value = this.boxValue || this.value;\n        if (value === null || isNaN(value)) {\n            return '';\n        }\n        return value < 10 ? '0' + value.toString() : value.toString();\n    }\n    get owlDTTimerBoxClass() {\n        return true;\n    }\n    constructor() {\n        this.showDivider = false;\n        this.step = 1;\n        this.valueChange = new EventEmitter();\n        this.inputChange = new EventEmitter();\n        this.inputStream = new Subject();\n        this.inputStreamSub = Subscription.EMPTY;\n        this.hasFocus = false;\n        this.onValueInputMouseWheelBind = this.onValueInputMouseWheel.bind(this);\n    }\n    ngOnInit() {\n        this.inputStreamSub = this.inputStream.pipe(debounceTime(750)).subscribe((val) => {\n            if (val) {\n                const inputValue = coerceNumberProperty(val, 0);\n                this.updateValueViaInput(inputValue);\n            }\n        });\n        this.bindValueInputMouseWheel();\n    }\n    ngOnDestroy() {\n        this.unbindValueInputMouseWheel();\n        this.inputStreamSub.unsubscribe();\n    }\n    upBtnClicked() {\n        this.updateValue(this.value + this.step);\n    }\n    downBtnClicked() {\n        this.updateValue(this.value - this.step);\n    }\n    handleInputChange(val) {\n        this.inputStream.next(val);\n    }\n    focusIn() {\n        this.hasFocus = true;\n    }\n    focusOut(value) {\n        this.hasFocus = false;\n        if (value) {\n            const inputValue = coerceNumberProperty(value, 0);\n            this.updateValueViaInput(inputValue);\n        }\n    }\n    updateValue(value) {\n        this.valueChange.emit(value);\n    }\n    updateValueViaInput(value) {\n        if (value > this.max || value < this.min) {\n            return;\n        }\n        this.inputChange.emit(value);\n    }\n    onValueInputMouseWheel(event) {\n        event = event || window.event;\n        const delta = event.wheelDelta || -event.deltaY || -event.detail;\n        if (delta > 0) {\n            if (!this.upBtnDisabled) {\n                this.upBtnClicked();\n            }\n        }\n        else if (delta < 0) {\n            if (!this.downBtnDisabled) {\n                this.downBtnClicked();\n            }\n        }\n        event.preventDefault ? event.preventDefault() : (event.returnValue = false);\n    }\n    bindValueInputMouseWheel() {\n        this.valueInput.nativeElement.addEventListener('onwheel' in document ? 'wheel' : 'mousewheel', this.onValueInputMouseWheelBind);\n    }\n    unbindValueInputMouseWheel() {\n        this.valueInput.nativeElement.removeEventListener('onwheel' in document ? 'wheel' : 'mousewheel', this.onValueInputMouseWheelBind);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlTimerBoxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlTimerBoxComponent, selector: \"owl-date-time-timer-box\", inputs: { showDivider: \"showDivider\", upBtnAriaLabel: \"upBtnAriaLabel\", upBtnDisabled: \"upBtnDisabled\", downBtnAriaLabel: \"downBtnAriaLabel\", downBtnDisabled: \"downBtnDisabled\", boxValue: \"boxValue\", value: \"value\", min: \"min\", max: \"max\", step: \"step\", inputLabel: \"inputLabel\" }, outputs: { valueChange: \"valueChange\", inputChange: \"inputChange\" }, host: { properties: { \"class.owl-dt-timer-box\": \"owlDTTimerBoxClass\" } }, viewQueries: [{ propertyName: \"valueInput\", first: true, predicate: [\"valueInput\"], descendants: true, static: true }], exportAs: [\"owlDateTimeTimerBox\"], ngImport: i0, template: \"<div *ngIf=\\\"showDivider\\\" class=\\\"owl-dt-timer-divider\\\" aria-hidden=\\\"true\\\"></div>\\n<button class=\\\"owl-dt-control-button owl-dt-control-arrow-button\\\"\\n        type=\\\"button\\\" tabindex=\\\"-1\\\"\\n        [disabled]=\\\"upBtnDisabled\\\"\\n        [attr.aria-label]=\\\"upBtnAriaLabel\\\"\\n        (click)=\\\"upBtnClicked()\\\">\\n    <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n        <!-- <editor-fold desc=\\\"SVG Arrow Up\\\"> -->\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                 version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 451.847 451.846\\\"\\n                 style=\\\"enable-background:new 0 0 451.847 451.846;\\\" xml:space=\\\"preserve\\\"\\n                 width=\\\"100%\\\" height=\\\"100%\\\">\\n                    <path d=\\\"M248.292,106.406l194.281,194.29c12.365,12.359,12.365,32.391,0,44.744c-12.354,12.354-32.391,12.354-44.744,0\\n                        L225.923,173.529L54.018,345.44c-12.36,12.354-32.395,12.354-44.748,0c-12.359-12.354-12.359-32.391,0-44.75L203.554,106.4\\n                        c6.18-6.174,14.271-9.259,22.369-9.259C234.018,97.141,242.115,100.232,248.292,106.406z\\\"/>\\n                </svg>\\n        <!-- </editor-fold> -->\\n    </span>\\n</button>\\n<label class=\\\"owl-dt-timer-content\\\">\\n    <input class=\\\"owl-dt-timer-input\\\" maxlength=\\\"2\\\"\\n           [value]=\\\"displayValue\\\"\\n           (keydown.arrowup)=\\\"!upBtnDisabled && upBtnClicked()\\\"\\n           (keydown.arrowdown)=\\\"!downBtnDisabled && downBtnClicked()\\\"\\n           (input)=\\\"handleInputChange(valueInput.value)\\\"\\n           (focusin)=\\\"focusIn()\\\"\\n           (focusout)=\\\"focusOut(valueInput.value)\\\"\\n           #valueInput>\\n    <span class=\\\"owl-hidden-accessible\\\">{{inputLabel}}</span>\\n</label>\\n<button class=\\\"owl-dt-control-button owl-dt-control-arrow-button\\\"\\n        type=\\\"button\\\" tabindex=\\\"-1\\\"\\n        [disabled]=\\\"downBtnDisabled\\\"\\n        [attr.aria-label]=\\\"downBtnAriaLabel\\\"\\n        (click)=\\\"downBtnClicked()\\\">\\n    <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n        <!-- <editor-fold desc=\\\"SVG Arrow Down\\\"> -->\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                 version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 451.847 451.846\\\"\\n                 style=\\\"enable-background:new 0 0 451.847 451.846;\\\" xml:space=\\\"preserve\\\"\\n                 width=\\\"100%\\\" height=\\\"100%\\\">\\n                    <path d=\\\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751\\n                        c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0\\n                        c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\\\"/>\\n                </svg>\\n        <!-- </editor-fold> -->\\n    </span>\\n</button>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlTimerBoxComponent, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'owlDateTimeTimerBox', selector: 'owl-date-time-timer-box', preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '[class.owl-dt-timer-box]': 'owlDTTimerBoxClass'\n                    }, template: \"<div *ngIf=\\\"showDivider\\\" class=\\\"owl-dt-timer-divider\\\" aria-hidden=\\\"true\\\"></div>\\n<button class=\\\"owl-dt-control-button owl-dt-control-arrow-button\\\"\\n        type=\\\"button\\\" tabindex=\\\"-1\\\"\\n        [disabled]=\\\"upBtnDisabled\\\"\\n        [attr.aria-label]=\\\"upBtnAriaLabel\\\"\\n        (click)=\\\"upBtnClicked()\\\">\\n    <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n        <!-- <editor-fold desc=\\\"SVG Arrow Up\\\"> -->\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                 version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 451.847 451.846\\\"\\n                 style=\\\"enable-background:new 0 0 451.847 451.846;\\\" xml:space=\\\"preserve\\\"\\n                 width=\\\"100%\\\" height=\\\"100%\\\">\\n                    <path d=\\\"M248.292,106.406l194.281,194.29c12.365,12.359,12.365,32.391,0,44.744c-12.354,12.354-32.391,12.354-44.744,0\\n                        L225.923,173.529L54.018,345.44c-12.36,12.354-32.395,12.354-44.748,0c-12.359-12.354-12.359-32.391,0-44.75L203.554,106.4\\n                        c6.18-6.174,14.271-9.259,22.369-9.259C234.018,97.141,242.115,100.232,248.292,106.406z\\\"/>\\n                </svg>\\n        <!-- </editor-fold> -->\\n    </span>\\n</button>\\n<label class=\\\"owl-dt-timer-content\\\">\\n    <input class=\\\"owl-dt-timer-input\\\" maxlength=\\\"2\\\"\\n           [value]=\\\"displayValue\\\"\\n           (keydown.arrowup)=\\\"!upBtnDisabled && upBtnClicked()\\\"\\n           (keydown.arrowdown)=\\\"!downBtnDisabled && downBtnClicked()\\\"\\n           (input)=\\\"handleInputChange(valueInput.value)\\\"\\n           (focusin)=\\\"focusIn()\\\"\\n           (focusout)=\\\"focusOut(valueInput.value)\\\"\\n           #valueInput>\\n    <span class=\\\"owl-hidden-accessible\\\">{{inputLabel}}</span>\\n</label>\\n<button class=\\\"owl-dt-control-button owl-dt-control-arrow-button\\\"\\n        type=\\\"button\\\" tabindex=\\\"-1\\\"\\n        [disabled]=\\\"downBtnDisabled\\\"\\n        [attr.aria-label]=\\\"downBtnAriaLabel\\\"\\n        (click)=\\\"downBtnClicked()\\\">\\n    <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n        <!-- <editor-fold desc=\\\"SVG Arrow Down\\\"> -->\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                 version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 451.847 451.846\\\"\\n                 style=\\\"enable-background:new 0 0 451.847 451.846;\\\" xml:space=\\\"preserve\\\"\\n                 width=\\\"100%\\\" height=\\\"100%\\\">\\n                    <path d=\\\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751\\n                        c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0\\n                        c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\\\"/>\\n                </svg>\\n        <!-- </editor-fold> -->\\n    </span>\\n</button>\\n\" }]\n        }], ctorParameters: () => [], propDecorators: { showDivider: [{\n                type: Input\n            }], upBtnAriaLabel: [{\n                type: Input\n            }], upBtnDisabled: [{\n                type: Input\n            }], downBtnAriaLabel: [{\n                type: Input\n            }], downBtnDisabled: [{\n                type: Input\n            }], boxValue: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], inputLabel: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], inputChange: [{\n                type: Output\n            }], valueInput: [{\n                type: ViewChild,\n                args: ['valueInput', { static: true }]\n            }] } });\n\n/**\n * timer.component\n */\nclass OwlTimerComponent {\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n    set pickerMoment(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment =\n            this.getValidDate(value) || this.dateTimeAdapter.now();\n    }\n    get minDateTime() {\n        return this._minDateTime;\n    }\n    set minDateTime(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._minDateTime = this.getValidDate(value);\n    }\n    get maxDateTime() {\n        return this._maxDateTime;\n    }\n    set maxDateTime(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._maxDateTime = this.getValidDate(value);\n    }\n    get hourValue() {\n        return this.dateTimeAdapter.getHours(this.pickerMoment);\n    }\n    /**\n     * The value would be displayed in hourBox.\n     * We need this because the value displayed in hourBox it not\n     * the same as the hourValue when the timer is in hour12Timer mode.\n     * */\n    get hourBoxValue() {\n        let hours = this.hourValue;\n        if (!this.hour12Timer) {\n            return hours;\n        }\n        else {\n            if (hours === 0) {\n                hours = 12;\n                this.isPM = false;\n            }\n            else if (hours > 0 && hours < 12) {\n                this.isPM = false;\n            }\n            else if (hours === 12) {\n                this.isPM = true;\n            }\n            else if (hours > 12 && hours < 24) {\n                hours = hours - 12;\n                this.isPM = true;\n            }\n            return hours;\n        }\n    }\n    get minuteValue() {\n        return this.dateTimeAdapter.getMinutes(this.pickerMoment);\n    }\n    get secondValue() {\n        return this.dateTimeAdapter.getSeconds(this.pickerMoment);\n    }\n    get upHourButtonLabel() {\n        return this.pickerIntl.upHourLabel;\n    }\n    get downHourButtonLabel() {\n        return this.pickerIntl.downHourLabel;\n    }\n    get upMinuteButtonLabel() {\n        return this.pickerIntl.upMinuteLabel;\n    }\n    get downMinuteButtonLabel() {\n        return this.pickerIntl.downMinuteLabel;\n    }\n    get upSecondButtonLabel() {\n        return this.pickerIntl.upSecondLabel;\n    }\n    get downSecondButtonLabel() {\n        return this.pickerIntl.downSecondLabel;\n    }\n    get hour12ButtonLabel() {\n        return this.isPM\n            ? this.pickerIntl.hour12PMLabel\n            : this.pickerIntl.hour12AMLabel;\n    }\n    get owlDTTimerClass() {\n        return true;\n    }\n    get owlDTTimeTabIndex() {\n        return -1;\n    }\n    constructor(ngZone, elmRef, pickerIntl, cdRef, dateTimeAdapter) {\n        this.ngZone = ngZone;\n        this.elmRef = elmRef;\n        this.pickerIntl = pickerIntl;\n        this.cdRef = cdRef;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.isPM = false; // a flag indicates the current timer moment is in PM or AM\n        /**\n         * Hours to change per step\n         */\n        this.stepHour = 1;\n        /**\n         * Minutes to change per step\n         */\n        this.stepMinute = 1;\n        /**\n         * Seconds to change per step\n         */\n        this.stepSecond = 1;\n        this.selectedChange = new EventEmitter();\n    }\n    ngOnInit() { }\n    /**\n     * Focus to the host element\n     * */\n    focus() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                this.elmRef.nativeElement.focus();\n            });\n        });\n    }\n    /**\n     * Set the hour value via typing into timer box input\n     * We need this to handle the hour value when the timer is in hour12 mode\n     * */\n    setHourValueViaInput(hours) {\n        if (this.hour12Timer && this.isPM && hours >= 1 && hours <= 11) {\n            hours = hours + 12;\n        }\n        else if (this.hour12Timer && !this.isPM && hours === 12) {\n            hours = 0;\n        }\n        this.setHourValue(hours);\n    }\n    setHourValue(hours) {\n        const m = this.dateTimeAdapter.setHours(this.pickerMoment, hours);\n        this.selectedChange.emit(m);\n        this.cdRef.markForCheck();\n    }\n    setMinuteValue(minutes) {\n        const m = this.dateTimeAdapter.setMinutes(this.pickerMoment, minutes);\n        this.selectedChange.emit(m);\n        this.cdRef.markForCheck();\n    }\n    setSecondValue(seconds) {\n        const m = this.dateTimeAdapter.setSeconds(this.pickerMoment, seconds);\n        this.selectedChange.emit(m);\n        this.cdRef.markForCheck();\n    }\n    setMeridiem(event) {\n        this.isPM = !this.isPM;\n        let hours = this.hourValue;\n        if (this.isPM) {\n            hours = hours + 12;\n        }\n        else {\n            hours = hours - 12;\n        }\n        if (hours >= 0 && hours <= 23) {\n            this.setHourValue(hours);\n        }\n        this.cdRef.markForCheck();\n        event.preventDefault();\n    }\n    /**\n     * Check if the up hour button is enabled\n     */\n    upHourEnabled() {\n        return (!this.maxDateTime ||\n            this.compareHours(this.stepHour, this.maxDateTime) < 1);\n    }\n    /**\n     * Check if the down hour button is enabled\n     */\n    downHourEnabled() {\n        return (!this.minDateTime ||\n            this.compareHours(-this.stepHour, this.minDateTime) > -1);\n    }\n    /**\n     * Check if the up minute button is enabled\n     */\n    upMinuteEnabled() {\n        return (!this.maxDateTime ||\n            this.compareMinutes(this.stepMinute, this.maxDateTime) < 1);\n    }\n    /**\n     * Check if the down minute button is enabled\n     */\n    downMinuteEnabled() {\n        return (!this.minDateTime ||\n            this.compareMinutes(-this.stepMinute, this.minDateTime) > -1);\n    }\n    /**\n     * Check if the up second button is enabled\n     */\n    upSecondEnabled() {\n        return (!this.maxDateTime ||\n            this.compareSeconds(this.stepSecond, this.maxDateTime) < 1);\n    }\n    /**\n     * Check if the down second button is enabled\n     */\n    downSecondEnabled() {\n        return (!this.minDateTime ||\n            this.compareSeconds(-this.stepSecond, this.minDateTime) > -1);\n    }\n    /**\n     * PickerMoment's hour value +/- certain amount and compare it to the give date\n     * 1 is after the comparedDate\n     * -1 is before the comparedDate\n     * 0 is equal the comparedDate\n     * */\n    compareHours(amount, comparedDate) {\n        const hours = this.dateTimeAdapter.getHours(this.pickerMoment) + amount;\n        const result = this.dateTimeAdapter.setHours(this.pickerMoment, hours);\n        return this.dateTimeAdapter.compare(result, comparedDate);\n    }\n    /**\n     * PickerMoment's minute value +/- certain amount and compare it to the give date\n     * 1 is after the comparedDate\n     * -1 is before the comparedDate\n     * 0 is equal the comparedDate\n     * */\n    compareMinutes(amount, comparedDate) {\n        const minutes = this.dateTimeAdapter.getMinutes(this.pickerMoment) + amount;\n        const result = this.dateTimeAdapter.setMinutes(this.pickerMoment, minutes);\n        return this.dateTimeAdapter.compare(result, comparedDate);\n    }\n    /**\n     * PickerMoment's second value +/- certain amount and compare it to the give date\n     * 1 is after the comparedDate\n     * -1 is before the comparedDate\n     * 0 is equal the comparedDate\n     * */\n    compareSeconds(amount, comparedDate) {\n        const seconds = this.dateTimeAdapter.getSeconds(this.pickerMoment) + amount;\n        const result = this.dateTimeAdapter.setSeconds(this.pickerMoment, seconds);\n        return this.dateTimeAdapter.compare(result, comparedDate);\n    }\n    /**\n     * Get a valid date object\n     */\n    getValidDate(obj) {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlTimerComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: OwlDateTimeIntl }, { token: i0.ChangeDetectorRef }, { token: DateTimeAdapter, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlTimerComponent, selector: \"owl-date-time-timer\", inputs: { pickerMoment: \"pickerMoment\", minDateTime: \"minDateTime\", maxDateTime: \"maxDateTime\", showSecondsTimer: \"showSecondsTimer\", hour12Timer: \"hour12Timer\", stepHour: \"stepHour\", stepMinute: \"stepMinute\", stepSecond: \"stepSecond\" }, outputs: { selectedChange: \"selectedChange\" }, host: { properties: { \"class.owl-dt-timer\": \"owlDTTimerClass\", \"attr.tabindex\": \"owlDTTimeTabIndex\" } }, exportAs: [\"owlDateTimeTimer\"], ngImport: i0, template: \"<owl-date-time-timer-box\\n        [upBtnAriaLabel]=\\\"upHourButtonLabel\\\"\\n        [downBtnAriaLabel]=\\\"downHourButtonLabel\\\"\\n        [upBtnDisabled]=\\\"!upHourEnabled()\\\"\\n        [downBtnDisabled]=\\\"!downHourEnabled()\\\"\\n        [boxValue]=\\\"hourBoxValue\\\"\\n        [value]=\\\"hourValue\\\" [min]=\\\"0\\\" [max]=\\\"23\\\"\\n        [step]=\\\"stepHour\\\" [inputLabel]=\\\"'Hour'\\\"\\n        (inputChange)=\\\"setHourValueViaInput($event)\\\"\\n        (valueChange)=\\\"setHourValue($event)\\\"></owl-date-time-timer-box>\\n<owl-date-time-timer-box\\n        [showDivider]=\\\"true\\\"\\n        [upBtnAriaLabel]=\\\"upMinuteButtonLabel\\\"\\n        [downBtnAriaLabel]=\\\"downMinuteButtonLabel\\\"\\n        [upBtnDisabled]=\\\"!upMinuteEnabled()\\\"\\n        [downBtnDisabled]=\\\"!downMinuteEnabled()\\\"\\n        [value]=\\\"minuteValue\\\" [min]=\\\"0\\\" [max]=\\\"59\\\"\\n        [step]=\\\"stepMinute\\\" [inputLabel]=\\\"'Minute'\\\"\\n        (inputChange)=\\\"setMinuteValue($event)\\\"\\n        (valueChange)=\\\"setMinuteValue($event)\\\"></owl-date-time-timer-box>\\n<owl-date-time-timer-box\\n        *ngIf=\\\"showSecondsTimer\\\"\\n        [showDivider]=\\\"true\\\"\\n        [upBtnAriaLabel]=\\\"upSecondButtonLabel\\\"\\n        [downBtnAriaLabel]=\\\"downSecondButtonLabel\\\"\\n        [upBtnDisabled]=\\\"!upSecondEnabled()\\\"\\n        [downBtnDisabled]=\\\"!downSecondEnabled()\\\"\\n        [value]=\\\"secondValue\\\" [min]=\\\"0\\\" [max]=\\\"59\\\"\\n        [step]=\\\"stepSecond\\\" [inputLabel]=\\\"'Second'\\\"\\n        (inputChange)=\\\"setSecondValue($event)\\\"\\n        (valueChange)=\\\"setSecondValue($event)\\\"></owl-date-time-timer-box>\\n\\n<div *ngIf=\\\"hour12Timer\\\" class=\\\"owl-dt-timer-hour12\\\">\\n    <button class=\\\"owl-dt-control-button owl-dt-timer-hour12-box\\\"\\n            type=\\\"button\\\" tabindex=\\\"0\\\"\\n            (click)=\\\"setMeridiem($event)\\\">\\n        <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n            {{hour12ButtonLabel}}\\n        </span>\\n    </button>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: OwlTimerBoxComponent, selector: \"owl-date-time-timer-box\", inputs: [\"showDivider\", \"upBtnAriaLabel\", \"upBtnDisabled\", \"downBtnAriaLabel\", \"downBtnDisabled\", \"boxValue\", \"value\", \"min\", \"max\", \"step\", \"inputLabel\"], outputs: [\"valueChange\", \"inputChange\"], exportAs: [\"owlDateTimeTimerBox\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlTimerComponent, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'owlDateTimeTimer', selector: 'owl-date-time-timer', preserveWhitespaces: false, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '[class.owl-dt-timer]': 'owlDTTimerClass',\n                        '[attr.tabindex]': 'owlDTTimeTabIndex'\n                    }, template: \"<owl-date-time-timer-box\\n        [upBtnAriaLabel]=\\\"upHourButtonLabel\\\"\\n        [downBtnAriaLabel]=\\\"downHourButtonLabel\\\"\\n        [upBtnDisabled]=\\\"!upHourEnabled()\\\"\\n        [downBtnDisabled]=\\\"!downHourEnabled()\\\"\\n        [boxValue]=\\\"hourBoxValue\\\"\\n        [value]=\\\"hourValue\\\" [min]=\\\"0\\\" [max]=\\\"23\\\"\\n        [step]=\\\"stepHour\\\" [inputLabel]=\\\"'Hour'\\\"\\n        (inputChange)=\\\"setHourValueViaInput($event)\\\"\\n        (valueChange)=\\\"setHourValue($event)\\\"></owl-date-time-timer-box>\\n<owl-date-time-timer-box\\n        [showDivider]=\\\"true\\\"\\n        [upBtnAriaLabel]=\\\"upMinuteButtonLabel\\\"\\n        [downBtnAriaLabel]=\\\"downMinuteButtonLabel\\\"\\n        [upBtnDisabled]=\\\"!upMinuteEnabled()\\\"\\n        [downBtnDisabled]=\\\"!downMinuteEnabled()\\\"\\n        [value]=\\\"minuteValue\\\" [min]=\\\"0\\\" [max]=\\\"59\\\"\\n        [step]=\\\"stepMinute\\\" [inputLabel]=\\\"'Minute'\\\"\\n        (inputChange)=\\\"setMinuteValue($event)\\\"\\n        (valueChange)=\\\"setMinuteValue($event)\\\"></owl-date-time-timer-box>\\n<owl-date-time-timer-box\\n        *ngIf=\\\"showSecondsTimer\\\"\\n        [showDivider]=\\\"true\\\"\\n        [upBtnAriaLabel]=\\\"upSecondButtonLabel\\\"\\n        [downBtnAriaLabel]=\\\"downSecondButtonLabel\\\"\\n        [upBtnDisabled]=\\\"!upSecondEnabled()\\\"\\n        [downBtnDisabled]=\\\"!downSecondEnabled()\\\"\\n        [value]=\\\"secondValue\\\" [min]=\\\"0\\\" [max]=\\\"59\\\"\\n        [step]=\\\"stepSecond\\\" [inputLabel]=\\\"'Second'\\\"\\n        (inputChange)=\\\"setSecondValue($event)\\\"\\n        (valueChange)=\\\"setSecondValue($event)\\\"></owl-date-time-timer-box>\\n\\n<div *ngIf=\\\"hour12Timer\\\" class=\\\"owl-dt-timer-hour12\\\">\\n    <button class=\\\"owl-dt-control-button owl-dt-timer-hour12-box\\\"\\n            type=\\\"button\\\" tabindex=\\\"0\\\"\\n            (click)=\\\"setMeridiem($event)\\\">\\n        <span class=\\\"owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n            {{hour12ButtonLabel}}\\n        </span>\\n    </button>\\n</div>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: OwlDateTimeIntl }, { type: i0.ChangeDetectorRef }, { type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { pickerMoment: [{\n                type: Input\n            }], minDateTime: [{\n                type: Input\n            }], maxDateTime: [{\n                type: Input\n            }], showSecondsTimer: [{\n                type: Input\n            }], hour12Timer: [{\n                type: Input\n            }], stepHour: [{\n                type: Input\n            }], stepMinute: [{\n                type: Input\n            }], stepSecond: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }] } });\n\n/**\n * date-time-picker.animations\n */\nconst owlDateTimePickerAnimations = {\n    transformPicker: trigger('transformPicker', [\n        state('void', style({ opacity: 0, transform: 'scale(1, 0)' })),\n        state('enter', style({ opacity: 1, transform: 'scale(1, 1)' })),\n        transition('void => enter', group([\n            query('@fadeInPicker', animateChild(), { optional: true }),\n            animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('enter => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    fadeInPicker: trigger('fadeInPicker', [\n        state('enter', style({ opacity: 1 })),\n        state('void', style({ opacity: 0 })),\n        transition('void => enter', animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n    ])\n};\n\n/**\n * date-time-picker-container.component\n */\nclass OwlDateTimeContainerComponent {\n    get hidePickerStream() {\n        return this.hidePicker$.asObservable();\n    }\n    get confirmSelectedStream() {\n        return this.confirmSelected$.asObservable();\n    }\n    get beforePickerOpenedStream() {\n        return this.beforePickerOpened$.asObservable();\n    }\n    get pickerOpenedStream() {\n        return this.pickerOpened$.asObservable();\n    }\n    get pickerMoment() {\n        return this._clamPickerMoment;\n    }\n    set pickerMoment(value) {\n        if (value) {\n            this._clamPickerMoment = this.dateTimeAdapter.clampDate(value, this.picker.minDateTime, this.picker.maxDateTime);\n        }\n        this.cdRef.markForCheck();\n    }\n    get pickerType() {\n        return this.picker.pickerType;\n    }\n    get cancelLabel() {\n        return this.pickerIntl.cancelBtnLabel;\n    }\n    get setLabel() {\n        return this.pickerIntl.setBtnLabel;\n    }\n    /**\n     * The range 'from' label\n     * */\n    get fromLabel() {\n        return this.pickerIntl.rangeFromLabel;\n    }\n    /**\n     * The range 'to' label\n     * */\n    get toLabel() {\n        return this.pickerIntl.rangeToLabel;\n    }\n    /**\n     * The range 'from' formatted value\n     * */\n    get fromFormattedValue() {\n        const value = this.picker.selecteds[0];\n        return value\n            ? this.dateTimeAdapter.format(value, this.picker.formatString)\n            : '';\n    }\n    /**\n     * The range 'to' formatted value\n     * */\n    get toFormattedValue() {\n        const value = this.picker.selecteds[1];\n        return value\n            ? this.dateTimeAdapter.format(value, this.picker.formatString)\n            : '';\n    }\n    /**\n     * Cases in which the control buttons show in the picker\n     * 1) picker mode is 'dialog'\n     * 2) picker type is NOT 'calendar' and the picker mode is NOT 'inline'\n     * */\n    get showControlButtons() {\n        return (this.picker.pickerMode === 'dialog' ||\n            (this.picker.pickerType !== 'calendar' &&\n                this.picker.pickerMode !== 'inline'));\n    }\n    get containerElm() {\n        return this.elmRef.nativeElement;\n    }\n    get owlDTContainerClass() {\n        return true;\n    }\n    get owlDTPopupContainerClass() {\n        return this.picker.pickerMode === 'popup';\n    }\n    get owlDTDialogContainerClass() {\n        return this.picker.pickerMode === 'dialog';\n    }\n    get owlDTInlineContainerClass() {\n        return this.picker.pickerMode === 'inline';\n    }\n    get owlDTContainerDisabledClass() {\n        return this.picker.disabled;\n    }\n    get owlDTContainerId() {\n        return this.picker.id;\n    }\n    get owlDTContainerAnimation() {\n        return this.picker.pickerMode === 'inline' ? '' : 'enter';\n    }\n    constructor(cdRef, elmRef, pickerIntl, dateTimeAdapter) {\n        this.cdRef = cdRef;\n        this.elmRef = elmRef;\n        this.pickerIntl = pickerIntl;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.activeSelectedIndex = 0; // The current active SelectedIndex in range select mode (0: 'from', 1: 'to')\n        /**\n         * Stream emits when try to hide picker\n         * */\n        this.hidePicker$ = new Subject();\n        /**\n         * Stream emits when try to confirm the selected value\n         * */\n        this.confirmSelected$ = new Subject();\n        this.beforePickerOpened$ = new Subject();\n        this.pickerOpened$ = new Subject();\n    }\n    ngOnInit() {\n        if (this.picker.selectMode === 'range') {\n            if (this.picker.selecteds[0]) {\n                this.retainStartTime = this.dateTimeAdapter.clone(this.picker.selecteds[0]);\n            }\n            if (this.picker.selecteds[1]) {\n                this.retainEndTime = this.dateTimeAdapter.clone(this.picker.selecteds[1]);\n            }\n        }\n    }\n    ngAfterContentInit() {\n        this.initPicker();\n    }\n    ngAfterViewInit() {\n        this.focusPicker();\n    }\n    handleContainerAnimationStart(event) {\n        const toState = event.toState;\n        if (toState === 'enter') {\n            this.beforePickerOpened$.next(null);\n        }\n    }\n    handleContainerAnimationDone(event) {\n        const toState = event.toState;\n        if (toState === 'enter') {\n            this.pickerOpened$.next(null);\n        }\n    }\n    dateSelected(date) {\n        let result;\n        if (this.picker.isInSingleMode) {\n            result = this.dateSelectedInSingleMode(date);\n            if (result) {\n                this.pickerMoment = result;\n                this.picker.select(result);\n            }\n            else {\n                // we close the picker when result is null and pickerType is calendar.\n                if (this.pickerType === 'calendar') {\n                    this.hidePicker$.next(null);\n                }\n            }\n            return;\n        }\n        if (this.picker.isInRangeMode) {\n            result = this.dateSelectedInRangeMode(date);\n            if (result) {\n                this.pickerMoment = result[this.activeSelectedIndex];\n                this.picker.select(result);\n            }\n        }\n    }\n    timeSelected(time) {\n        this.pickerMoment = this.dateTimeAdapter.clone(time);\n        if (!this.picker.dateTimeChecker(this.pickerMoment)) {\n            return;\n        }\n        if (this.picker.isInSingleMode) {\n            this.picker.select(this.pickerMoment);\n            return;\n        }\n        if (this.picker.isInRangeMode) {\n            const selecteds = [...this.picker.selecteds];\n            // check if the 'from' is after 'to' or 'to'is before 'from'\n            // In this case, we set both the 'from' and 'to' the same value\n            if ((this.activeSelectedIndex === 0 &&\n                selecteds[1] &&\n                this.dateTimeAdapter.compare(this.pickerMoment, selecteds[1]) === 1) ||\n                (this.activeSelectedIndex === 1 &&\n                    selecteds[0] &&\n                    this.dateTimeAdapter.compare(this.pickerMoment, selecteds[0]) === -1)) {\n                selecteds[0] = this.pickerMoment;\n                selecteds[1] = this.pickerMoment;\n            }\n            else {\n                selecteds[this.activeSelectedIndex] = this.pickerMoment;\n            }\n            if (selecteds[0]) {\n                this.retainStartTime = this.dateTimeAdapter.clone(selecteds[0]);\n            }\n            if (selecteds[1]) {\n                this.retainEndTime = this.dateTimeAdapter.clone(selecteds[1]);\n            }\n            this.picker.select(selecteds);\n        }\n    }\n    /**\n     * Handle click on cancel button\n     */\n    onCancelClicked(event) {\n        this.hidePicker$.next(null);\n        event.preventDefault();\n        return;\n    }\n    /**\n     * Handle click on set button\n     */\n    onSetClicked(event) {\n        if (!this.picker.dateTimeChecker(this.pickerMoment)) {\n            this.hidePicker$.next(null);\n            event.preventDefault();\n            return;\n        }\n        this.confirmSelected$.next(event);\n        event.preventDefault();\n        return;\n    }\n    /**\n     * Handle click on inform radio group\n     */\n    handleClickOnInfoGroup(event, index) {\n        this.setActiveSelectedIndex(index);\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * Handle click on inform radio group\n     */\n    handleKeydownOnInfoGroup(event, next, index) {\n        switch (event.keyCode) {\n            case DOWN_ARROW:\n            case RIGHT_ARROW:\n            case UP_ARROW:\n            case LEFT_ARROW:\n                next.focus();\n                this.setActiveSelectedIndex(index === 0 ? 1 : 0);\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n            case SPACE:\n                this.setActiveSelectedIndex(index);\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n            default:\n                return;\n        }\n    }\n    /**\n     * Set the value of activeSelectedIndex\n     */\n    setActiveSelectedIndex(index) {\n        if (this.picker.selectMode === 'range' &&\n            this.activeSelectedIndex !== index) {\n            this.activeSelectedIndex = index;\n            const selected = this.picker.selecteds[this.activeSelectedIndex];\n            if (this.picker.selecteds && selected) {\n                this.pickerMoment = this.dateTimeAdapter.clone(selected);\n            }\n        }\n        return;\n    }\n    initPicker() {\n        this.pickerMoment = this.picker.startAt || this.dateTimeAdapter.now();\n        this.activeSelectedIndex = this.picker.selectMode === 'rangeTo' ? 1 : 0;\n    }\n    /**\n     * Select calendar date in single mode,\n     * it returns null when date is not selected.\n     */\n    dateSelectedInSingleMode(date) {\n        if (this.dateTimeAdapter.isSameDay(date, this.picker.selected)) {\n            return null;\n        }\n        return this.updateAndCheckCalendarDate(date);\n    }\n    /**\n     * Select dates in range Mode\n     */\n    dateSelectedInRangeMode(date) {\n        let from = this.picker.selecteds[0];\n        let to = this.picker.selecteds[1];\n        const result = this.updateAndCheckCalendarDate(date);\n        if (!result) {\n            return null;\n        }\n        // if the given calendar day is after or equal to 'from',\n        // set ths given date as 'to'\n        // otherwise, set it as 'from' and set 'to' to null\n        if (this.picker.selectMode === 'range') {\n            if (this.picker.selecteds &&\n                this.picker.selecteds.length &&\n                !to &&\n                from &&\n                this.dateTimeAdapter.differenceInCalendarDays(result, from) >= 0) {\n                if (this.picker.endAt && !this.retainEndTime) {\n                    to = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(result), this.dateTimeAdapter.getMonth(result), this.dateTimeAdapter.getDate(result), this.dateTimeAdapter.getHours(this.picker.endAt), this.dateTimeAdapter.getMinutes(this.picker.endAt), this.dateTimeAdapter.getSeconds(this.picker.endAt));\n                }\n                else if (this.retainEndTime) {\n                    to = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(result), this.dateTimeAdapter.getMonth(result), this.dateTimeAdapter.getDate(result), this.dateTimeAdapter.getHours(this.retainEndTime), this.dateTimeAdapter.getMinutes(this.retainEndTime), this.dateTimeAdapter.getSeconds(this.retainEndTime));\n                }\n                else {\n                    to = result;\n                }\n                this.activeSelectedIndex = 1;\n            }\n            else {\n                if (this.picker.startAt && !this.retainStartTime) {\n                    from = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(result), this.dateTimeAdapter.getMonth(result), this.dateTimeAdapter.getDate(result), this.dateTimeAdapter.getHours(this.picker.startAt), this.dateTimeAdapter.getMinutes(this.picker.startAt), this.dateTimeAdapter.getSeconds(this.picker.startAt));\n                }\n                else if (this.retainStartTime) {\n                    from = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(result), this.dateTimeAdapter.getMonth(result), this.dateTimeAdapter.getDate(result), this.dateTimeAdapter.getHours(this.retainStartTime), this.dateTimeAdapter.getMinutes(this.retainStartTime), this.dateTimeAdapter.getSeconds(this.retainStartTime));\n                }\n                else {\n                    from = result;\n                }\n                to = null;\n                this.activeSelectedIndex = 0;\n            }\n        }\n        else if (this.picker.selectMode === 'rangeFrom') {\n            from = result;\n            // if the from value is after the to value, set the to value as null\n            if (to && this.dateTimeAdapter.compare(from, to) > 0) {\n                to = null;\n            }\n        }\n        else if (this.picker.selectMode === 'rangeTo') {\n            to = result;\n            // if the from value is after the to value, set the from value as null\n            if (from && this.dateTimeAdapter.compare(from, to) > 0) {\n                from = null;\n            }\n        }\n        return [from, to];\n    }\n    /**\n     * Update the given calendar date's time and check if it is valid\n     * Because the calendar date has 00:00:00 as default time, if the picker type is 'both',\n     * we need to update the given calendar date's time before selecting it.\n     * if it is valid, return the updated dateTime\n     * if it is not valid, return null\n     */\n    updateAndCheckCalendarDate(date) {\n        let result;\n        // if the picker is 'both', update the calendar date's time value\n        if (this.picker.pickerType === 'both') {\n            result = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(date), this.dateTimeAdapter.getMonth(date), this.dateTimeAdapter.getDate(date), this.dateTimeAdapter.getHours(this.pickerMoment), this.dateTimeAdapter.getMinutes(this.pickerMoment), this.dateTimeAdapter.getSeconds(this.pickerMoment));\n            result = this.dateTimeAdapter.clampDate(result, this.picker.minDateTime, this.picker.maxDateTime);\n        }\n        else {\n            result = this.dateTimeAdapter.clone(date);\n        }\n        // check the updated dateTime\n        return this.picker.dateTimeChecker(result) ? result : null;\n    }\n    /**\n     * Focus to the picker\n     * */\n    focusPicker() {\n        if (this.picker.pickerMode === 'inline') {\n            return;\n        }\n        if (this.calendar) {\n            this.calendar.focusActiveCell();\n        }\n        else if (this.timer) {\n            this.timer.focus();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeContainerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: OwlDateTimeIntl }, { token: DateTimeAdapter, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlDateTimeContainerComponent, selector: \"owl-date-time-container\", host: { listeners: { \"@transformPicker.start\": \"handleContainerAnimationStart($event)\", \"@transformPicker.done\": \"handleContainerAnimationDone($event)\" }, properties: { \"class.owl-dt-container\": \"owlDTContainerClass\", \"class.owl-dt-popup-container\": \"owlDTPopupContainerClass\", \"class.owl-dt-dialog-container\": \"owlDTDialogContainerClass\", \"class.owl-dt-inline-container\": \"owlDTInlineContainerClass\", \"class.owl-dt-container-disabled\": \"owlDTContainerDisabledClass\", \"attr.id\": \"owlDTContainerId\", \"@transformPicker\": \"owlDTContainerAnimation\" } }, viewQueries: [{ propertyName: \"calendar\", first: true, predicate: OwlCalendarComponent, descendants: true }, { propertyName: \"timer\", first: true, predicate: OwlTimerComponent, descendants: true }], exportAs: [\"owlDateTimeContainer\"], ngImport: i0, template: \"<div [cdkTrapFocus]=\\\"picker.pickerMode !== 'inline'\\\"\\n     [@fadeInPicker]=\\\"picker.pickerMode === 'inline'? '' : 'enter'\\\"\\n     class=\\\"owl-dt-container-inner\\\">\\n\\n    <owl-date-time-calendar\\n            *ngIf=\\\"pickerType === 'both' || pickerType === 'calendar'\\\"\\n            class=\\\"owl-dt-container-row\\\"\\n            [firstDayOfWeek]=\\\"picker.firstDayOfWeek\\\"\\n            [(pickerMoment)]=\\\"pickerMoment\\\"\\n            [selected]=\\\"picker.selected\\\"\\n            [selecteds]=\\\"picker.selecteds\\\"\\n            [selectMode]=\\\"picker.selectMode\\\"\\n            [minDate]=\\\"picker.minDateTime\\\"\\n            [maxDate]=\\\"picker.maxDateTime\\\"\\n            [dateFilter]=\\\"picker.dateTimeFilter\\\"\\n            [startView]=\\\"picker.startView\\\"\\n            [yearOnly]=\\\"picker.yearOnly\\\"\\n            [showCalendarWeeks]=\\\"picker.showCalendarWeeks\\\"\\n            [multiyearOnly]=\\\"picker.multiyearOnly\\\"\\n            [hideOtherMonths]=\\\"picker.hideOtherMonths\\\"\\n            (yearSelected)=\\\"picker.selectYear($event)\\\"\\n            (monthSelected)=\\\"picker.selectMonth($event)\\\"\\n            (dateClicked)=\\\"picker.selectDate($event)\\\"\\n            (selectedChange)=\\\"dateSelected($event)\\\"></owl-date-time-calendar>\\n\\n    <owl-date-time-timer\\n            *ngIf=\\\"pickerType === 'both' || pickerType === 'timer'\\\"\\n            class=\\\"owl-dt-container-row\\\"\\n            [pickerMoment]=\\\"pickerMoment\\\"\\n            [minDateTime]=\\\"picker.minDateTime\\\"\\n            [maxDateTime]=\\\"picker.maxDateTime\\\"\\n            [showSecondsTimer]=\\\"picker.showSecondsTimer\\\"\\n            [hour12Timer]=\\\"picker.hour12Timer\\\"\\n            [stepHour]=\\\"picker.stepHour\\\"\\n            [stepMinute]=\\\"picker.stepMinute\\\"\\n            [stepSecond]=\\\"picker.stepSecond\\\"\\n            (selectedChange)=\\\"timeSelected($event)\\\"></owl-date-time-timer>\\n\\n    <div *ngIf=\\\"picker.isInRangeMode\\\"\\n         role=\\\"radiogroup\\\"\\n         class=\\\"owl-dt-container-info owl-dt-container-row\\\">\\n        <div role=\\\"radio\\\" [tabindex]=\\\"activeSelectedIndex === 0 ? 0 : -1\\\"\\n             [attr.aria-checked]=\\\"activeSelectedIndex === 0\\\"\\n             class=\\\"owl-dt-control owl-dt-container-range owl-dt-container-from\\\"\\n             [ngClass]=\\\"{'owl-dt-container-info-active': activeSelectedIndex === 0}\\\"\\n             (click)=\\\"handleClickOnInfoGroup($event, 0)\\\"\\n             (keydown)=\\\"handleKeydownOnInfoGroup($event, to, 0)\\\" #from>\\n            <span class=\\\"owl-dt-control-content owl-dt-container-range-content\\\" tabindex=\\\"-1\\\">\\n                <span class=\\\"owl-dt-container-info-label\\\">{{fromLabel}}:</span>\\n                <span class=\\\"owl-dt-container-info-value\\\">{{fromFormattedValue}}</span>\\n            </span>\\n        </div>\\n        <div role=\\\"radio\\\" [tabindex]=\\\"activeSelectedIndex === 1 ? 0 : -1\\\"\\n             [attr.aria-checked]=\\\"activeSelectedIndex === 1\\\"\\n             class=\\\"owl-dt-control owl-dt-container-range owl-dt-container-to\\\"\\n             [ngClass]=\\\"{'owl-dt-container-info-active': activeSelectedIndex === 1}\\\"\\n             (click)=\\\"handleClickOnInfoGroup($event, 1)\\\"\\n             (keydown)=\\\"handleKeydownOnInfoGroup($event, from, 1)\\\" #to>\\n            <span class=\\\"owl-dt-control-content owl-dt-container-range-content\\\" tabindex=\\\"-1\\\">\\n                <span class=\\\"owl-dt-container-info-label\\\">{{toLabel}}:</span>\\n                <span class=\\\"owl-dt-container-info-value\\\">{{toFormattedValue}}</span>\\n            </span>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"showControlButtons\\\" class=\\\"owl-dt-container-buttons owl-dt-container-row\\\">\\n        <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-container-control-button\\\"\\n                type=\\\"button\\\" tabindex=\\\"0\\\"\\n                (click)=\\\"onCancelClicked($event)\\\">\\n            <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n                {{cancelLabel}}\\n            </span>\\n        </button>\\n        <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-container-control-button\\\"\\n                type=\\\"button\\\" tabindex=\\\"0\\\"\\n                (click)=\\\"onSetClicked($event)\\\">\\n            <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n                {{setLabel}}\\n            </span>\\n        </button>\\n    </div>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: [\"cdkTrapFocus\", \"cdkTrapFocusAutoCapture\"], exportAs: [\"cdkTrapFocus\"] }, { kind: \"component\", type: OwlTimerComponent, selector: \"owl-date-time-timer\", inputs: [\"pickerMoment\", \"minDateTime\", \"maxDateTime\", \"showSecondsTimer\", \"hour12Timer\", \"stepHour\", \"stepMinute\", \"stepSecond\"], outputs: [\"selectedChange\"], exportAs: [\"owlDateTimeTimer\"] }, { kind: \"component\", type: OwlCalendarComponent, selector: \"owl-date-time-calendar\", inputs: [\"minDate\", \"maxDate\", \"pickerMoment\", \"selected\", \"selecteds\", \"dateFilter\", \"firstDayOfWeek\", \"selectMode\", \"startView\", \"yearOnly\", \"showCalendarWeeks\", \"multiyearOnly\", \"hideOtherMonths\"], outputs: [\"pickerMomentChange\", \"dateClicked\", \"selectedChange\", \"userSelection\", \"yearSelected\", \"monthSelected\"], exportAs: [\"owlDateTimeCalendar\"] }], animations: [\n            owlDateTimePickerAnimations.transformPicker,\n            owlDateTimePickerAnimations.fadeInPicker\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeContainerComponent, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'owlDateTimeContainer', selector: 'owl-date-time-container', changeDetection: ChangeDetectionStrategy.OnPush, preserveWhitespaces: false, animations: [\n                        owlDateTimePickerAnimations.transformPicker,\n                        owlDateTimePickerAnimations.fadeInPicker\n                    ], host: {\n                        '(@transformPicker.start)': 'handleContainerAnimationStart($event)',\n                        '(@transformPicker.done)': 'handleContainerAnimationDone($event)',\n                        '[class.owl-dt-container]': 'owlDTContainerClass',\n                        '[class.owl-dt-popup-container]': 'owlDTPopupContainerClass',\n                        '[class.owl-dt-dialog-container]': 'owlDTDialogContainerClass',\n                        '[class.owl-dt-inline-container]': 'owlDTInlineContainerClass',\n                        '[class.owl-dt-container-disabled]': 'owlDTContainerDisabledClass',\n                        '[attr.id]': 'owlDTContainerId',\n                        '[@transformPicker]': 'owlDTContainerAnimation',\n                    }, template: \"<div [cdkTrapFocus]=\\\"picker.pickerMode !== 'inline'\\\"\\n     [@fadeInPicker]=\\\"picker.pickerMode === 'inline'? '' : 'enter'\\\"\\n     class=\\\"owl-dt-container-inner\\\">\\n\\n    <owl-date-time-calendar\\n            *ngIf=\\\"pickerType === 'both' || pickerType === 'calendar'\\\"\\n            class=\\\"owl-dt-container-row\\\"\\n            [firstDayOfWeek]=\\\"picker.firstDayOfWeek\\\"\\n            [(pickerMoment)]=\\\"pickerMoment\\\"\\n            [selected]=\\\"picker.selected\\\"\\n            [selecteds]=\\\"picker.selecteds\\\"\\n            [selectMode]=\\\"picker.selectMode\\\"\\n            [minDate]=\\\"picker.minDateTime\\\"\\n            [maxDate]=\\\"picker.maxDateTime\\\"\\n            [dateFilter]=\\\"picker.dateTimeFilter\\\"\\n            [startView]=\\\"picker.startView\\\"\\n            [yearOnly]=\\\"picker.yearOnly\\\"\\n            [showCalendarWeeks]=\\\"picker.showCalendarWeeks\\\"\\n            [multiyearOnly]=\\\"picker.multiyearOnly\\\"\\n            [hideOtherMonths]=\\\"picker.hideOtherMonths\\\"\\n            (yearSelected)=\\\"picker.selectYear($event)\\\"\\n            (monthSelected)=\\\"picker.selectMonth($event)\\\"\\n            (dateClicked)=\\\"picker.selectDate($event)\\\"\\n            (selectedChange)=\\\"dateSelected($event)\\\"></owl-date-time-calendar>\\n\\n    <owl-date-time-timer\\n            *ngIf=\\\"pickerType === 'both' || pickerType === 'timer'\\\"\\n            class=\\\"owl-dt-container-row\\\"\\n            [pickerMoment]=\\\"pickerMoment\\\"\\n            [minDateTime]=\\\"picker.minDateTime\\\"\\n            [maxDateTime]=\\\"picker.maxDateTime\\\"\\n            [showSecondsTimer]=\\\"picker.showSecondsTimer\\\"\\n            [hour12Timer]=\\\"picker.hour12Timer\\\"\\n            [stepHour]=\\\"picker.stepHour\\\"\\n            [stepMinute]=\\\"picker.stepMinute\\\"\\n            [stepSecond]=\\\"picker.stepSecond\\\"\\n            (selectedChange)=\\\"timeSelected($event)\\\"></owl-date-time-timer>\\n\\n    <div *ngIf=\\\"picker.isInRangeMode\\\"\\n         role=\\\"radiogroup\\\"\\n         class=\\\"owl-dt-container-info owl-dt-container-row\\\">\\n        <div role=\\\"radio\\\" [tabindex]=\\\"activeSelectedIndex === 0 ? 0 : -1\\\"\\n             [attr.aria-checked]=\\\"activeSelectedIndex === 0\\\"\\n             class=\\\"owl-dt-control owl-dt-container-range owl-dt-container-from\\\"\\n             [ngClass]=\\\"{'owl-dt-container-info-active': activeSelectedIndex === 0}\\\"\\n             (click)=\\\"handleClickOnInfoGroup($event, 0)\\\"\\n             (keydown)=\\\"handleKeydownOnInfoGroup($event, to, 0)\\\" #from>\\n            <span class=\\\"owl-dt-control-content owl-dt-container-range-content\\\" tabindex=\\\"-1\\\">\\n                <span class=\\\"owl-dt-container-info-label\\\">{{fromLabel}}:</span>\\n                <span class=\\\"owl-dt-container-info-value\\\">{{fromFormattedValue}}</span>\\n            </span>\\n        </div>\\n        <div role=\\\"radio\\\" [tabindex]=\\\"activeSelectedIndex === 1 ? 0 : -1\\\"\\n             [attr.aria-checked]=\\\"activeSelectedIndex === 1\\\"\\n             class=\\\"owl-dt-control owl-dt-container-range owl-dt-container-to\\\"\\n             [ngClass]=\\\"{'owl-dt-container-info-active': activeSelectedIndex === 1}\\\"\\n             (click)=\\\"handleClickOnInfoGroup($event, 1)\\\"\\n             (keydown)=\\\"handleKeydownOnInfoGroup($event, from, 1)\\\" #to>\\n            <span class=\\\"owl-dt-control-content owl-dt-container-range-content\\\" tabindex=\\\"-1\\\">\\n                <span class=\\\"owl-dt-container-info-label\\\">{{toLabel}}:</span>\\n                <span class=\\\"owl-dt-container-info-value\\\">{{toFormattedValue}}</span>\\n            </span>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"showControlButtons\\\" class=\\\"owl-dt-container-buttons owl-dt-container-row\\\">\\n        <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-container-control-button\\\"\\n                type=\\\"button\\\" tabindex=\\\"0\\\"\\n                (click)=\\\"onCancelClicked($event)\\\">\\n            <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n                {{cancelLabel}}\\n            </span>\\n        </button>\\n        <button class=\\\"owl-dt-control owl-dt-control-button owl-dt-container-control-button\\\"\\n                type=\\\"button\\\" tabindex=\\\"0\\\"\\n                (click)=\\\"onSetClicked($event)\\\">\\n            <span class=\\\"owl-dt-control-content owl-dt-control-button-content\\\" tabindex=\\\"-1\\\">\\n                {{setLabel}}\\n            </span>\\n        </button>\\n    </div>\\n</div>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: OwlDateTimeIntl }, { type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { calendar: [{\n                type: ViewChild,\n                args: [OwlCalendarComponent]\n            }], timer: [{\n                type: ViewChild,\n                args: [OwlTimerComponent]\n            }] } });\n\nlet uniqueId = 0;\nclass OwlDialogConfig {\n    constructor() {\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * Whether to focus the dialog when the dialog is opened\n         */\n        this.autoFocus = true;\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** Whether the user can use escape or clicking outside to close a modal. */\n        this.disableClose = false;\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the pane\n         * */\n        this.paneClass = '';\n        /**\n         * Mouse Event\n         * */\n        this.event = null;\n        /**\n         * Custom class for the backdrop\n         * */\n        this.backdropClass = '';\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * */\n        this.closeOnNavigation = true;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /**\n         * The max-width of the overlay panel.\n         * If a number is provided, pixel units are assumed.\n         * */\n        this.maxWidth = '85vw';\n        /**\n         * The scroll strategy when the dialog is open\n         * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\n         * */\n        this.scrollStrategy = new NoopScrollStrategy();\n        this.id = `owl-dialog-${uniqueId++}`;\n    }\n}\n\nclass OwlDialogRef {\n    constructor(overlayRef, container, id, location) {\n        this.overlayRef = overlayRef;\n        this.container = container;\n        this.id = id;\n        this._beforeClose$ = new Subject();\n        this._beforeOpen$ = new Subject();\n        this._afterOpen$ = new Subject();\n        this._afterClosed$ = new Subject();\n        /** Subscription to changes in the user's location. */\n        this.locationChanged = Subscription.EMPTY;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = true;\n        this.disableClose = this.container.config.disableClose;\n        this.container.animationStateChanged\n            .pipe(filter((event) => event.phaseName === 'start' && event.toState === 'enter'), take$1(1))\n            .subscribe(() => {\n            this._beforeOpen$.next(null);\n            this._beforeOpen$.complete();\n        });\n        this.container.animationStateChanged\n            .pipe(filter((event) => event.phaseName === 'done' && event.toState === 'enter'), take$1(1))\n            .subscribe(() => {\n            this._afterOpen$.next(null);\n            this._afterOpen$.complete();\n        });\n        this.container.animationStateChanged\n            .pipe(filter((event) => event.phaseName === 'done' && event.toState === 'exit'), take$1(1))\n            .subscribe(() => {\n            this.overlayRef.dispose();\n            this.locationChanged.unsubscribe();\n            this._afterClosed$.next(this.result);\n            this._afterClosed$.complete();\n            this.componentInstance = null;\n        });\n        this.overlayRef.keydownEvents()\n            .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\n            .subscribe(() => this.close());\n        if (location) {\n            this.locationChanged = location.subscribe(() => {\n                if (this.container.config.closeOnNavigation) {\n                    this.close();\n                }\n            });\n        }\n    }\n    close(dialogResult) {\n        this.result = dialogResult;\n        this.container.animationStateChanged\n            .pipe(filter((event) => event.phaseName === 'start'), take$1(1))\n            .subscribe(() => {\n            this._beforeClose$.next(dialogResult);\n            this._beforeClose$.complete();\n            this.overlayRef.detachBackdrop();\n        });\n        this.container.startExitAnimation();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this.overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this.overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        const strategy = this.getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = 'auto', height = 'auto') {\n        this.getPositionStrategy().width(width).height(height);\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    isAnimating() {\n        return this.container.isAnimating;\n    }\n    beforeOpen() {\n        return this._beforeOpen$.asObservable();\n    }\n    afterOpen() {\n        return this._afterOpen$.asObservable();\n    }\n    beforeClose() {\n        return this._beforeClose$.asObservable();\n    }\n    afterClosed() {\n        return this._afterClosed$.asObservable();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    getPositionStrategy() {\n        return this.overlayRef.getConfig().positionStrategy;\n    }\n}\n\n/**\n * dialog-container.component\n */\nconst zoomFadeIn = {\n    opacity: 0,\n    transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})'\n};\nconst zoomFadeInFrom = {\n    opacity: 0,\n    transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})',\n    transformOrigin: '{{ ox }} {{ oy }}'\n};\nclass OwlDialogContainerComponent extends BasePortalOutlet {\n    get config() {\n        return this._config;\n    }\n    get owlDialogContainerClass() {\n        return true;\n    }\n    get owlDialogContainerTabIndex() {\n        return -1;\n    }\n    get owlDialogContainerId() {\n        return this._config.id;\n    }\n    get owlDialogContainerRole() {\n        return this._config.role || null;\n    }\n    get owlDialogContainerAriaLabelledby() {\n        return this.ariaLabelledBy;\n    }\n    get owlDialogContainerAriaDescribedby() {\n        return this._config.ariaDescribedBy || null;\n    }\n    get owlDialogContainerAnimation() {\n        return { value: this.state, params: this.params };\n    }\n    constructor(changeDetector, elementRef, focusTrapFactory, document) {\n        super();\n        this.changeDetector = changeDetector;\n        this.elementRef = elementRef;\n        this.focusTrapFactory = focusTrapFactory;\n        this.document = document;\n        this.portalOutlet = null;\n        /** ID of the element that should be considered as the dialog's label. */\n        this.ariaLabelledBy = null;\n        /** Emits when an animation state changes. */\n        this.animationStateChanged = new EventEmitter();\n        this.isAnimating = false;\n        this.state = 'enter';\n        // for animation purpose\n        this.params = {\n            x: '0px',\n            y: '0px',\n            ox: '50%',\n            oy: '50%',\n            scale: 0\n        };\n        // A variable to hold the focused element before the dialog was open.\n        // This would help us to refocus back to element when the dialog was closed.\n        this.elementFocusedBeforeDialogWasOpened = null;\n    }\n    ngOnInit() { }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     */\n    attachComponentPortal(portal) {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach dialog content after content is already attached');\n        }\n        this.savePreviouslyFocusedElement();\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n    attachTemplatePortal(portal) {\n        throw new Error('Method not implemented.');\n    }\n    setConfig(config) {\n        this._config = config;\n        if (config.event) {\n            this.calculateZoomOrigin(event);\n        }\n    }\n    onAnimationStart(event) {\n        this.isAnimating = true;\n        this.animationStateChanged.emit(event);\n    }\n    onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this.trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this.restoreFocus();\n        }\n        this.animationStateChanged.emit(event);\n        this.isAnimating = false;\n    }\n    startExitAnimation() {\n        this.state = 'exit';\n        this.changeDetector.markForCheck();\n    }\n    /**\n     * Calculate origin used in the `zoomFadeInFrom()`\n     * for animation purpose\n     */\n    calculateZoomOrigin(event) {\n        if (!event) {\n            return;\n        }\n        const clientX = event.clientX;\n        const clientY = event.clientY;\n        const wh = window.innerWidth / 2;\n        const hh = window.innerHeight / 2;\n        const x = clientX - wh;\n        const y = clientY - hh;\n        const ox = clientX / window.innerWidth;\n        const oy = clientY / window.innerHeight;\n        this.params.x = `${x}px`;\n        this.params.y = `${y}px`;\n        this.params.ox = `${ox * 100}%`;\n        this.params.oy = `${oy * 100}%`;\n        this.params.scale = 0;\n        return;\n    }\n    /**\n     * Save the focused element before dialog was open\n     */\n    savePreviouslyFocusedElement() {\n        if (this.document) {\n            this.elementFocusedBeforeDialogWasOpened = this.document\n                .activeElement;\n            Promise.resolve().then(() => this.elementRef.nativeElement.focus());\n        }\n    }\n    trapFocus() {\n        if (!this.focusTrap) {\n            this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n        }\n        if (this._config.autoFocus) {\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    restoreFocus() {\n        const toFocus = this.elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (toFocus && typeof toFocus.focus === 'function') {\n            toFocus.focus();\n        }\n        if (this.focusTrap) {\n            this.focusTrap.destroy();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDialogContainerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i4.FocusTrapFactory }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlDialogContainerComponent, selector: \"owl-dialog-container\", host: { listeners: { \"@slideModal.start\": \"onAnimationStart($event)\", \"@slideModal.done\": \"onAnimationDone($event)\" }, properties: { \"class.owl-dialog-container\": \"owlDialogContainerClass\", \"attr.tabindex\": \"owlDialogContainerTabIndex\", \"attr.id\": \"owlDialogContainerId\", \"attr.role\": \"owlDialogContainerRole\", \"attr.aria-labelledby\": \"owlDialogContainerAriaLabelledby\", \"attr.aria-describedby\": \"owlDialogContainerAriaDescribedby\", \"@slideModal\": \"owlDialogContainerAnimation\" } }, viewQueries: [{ propertyName: \"portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template [cdkPortalOutlet]></ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i2.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [\n            trigger('slideModal', [\n                transition('void => enter', [\n                    style(zoomFadeInFrom),\n                    animate('300ms cubic-bezier(0.35, 0, 0.25, 1)', style('*')),\n                    animate('150ms', keyframes([\n                        style({ transform: 'scale(1)', offset: 0 }),\n                        style({ transform: 'scale(1.05)', offset: 0.3 }),\n                        style({ transform: 'scale(.95)', offset: 0.8 }),\n                        style({ transform: 'scale(1)', offset: 1.0 })\n                    ])),\n                    animateChild()\n                ], {\n                    params: {\n                        x: '0px',\n                        y: '0px',\n                        ox: '50%',\n                        oy: '50%',\n                        scale: 1\n                    }\n                }),\n                transition('enter => exit', [animateChild(), animate(200, style(zoomFadeIn))], { params: { x: '0px', y: '0px', ox: '50%', oy: '50%' } })\n            ])\n        ] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDialogContainerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'owl-dialog-container', animations: [\n                        trigger('slideModal', [\n                            transition('void => enter', [\n                                style(zoomFadeInFrom),\n                                animate('300ms cubic-bezier(0.35, 0, 0.25, 1)', style('*')),\n                                animate('150ms', keyframes([\n                                    style({ transform: 'scale(1)', offset: 0 }),\n                                    style({ transform: 'scale(1.05)', offset: 0.3 }),\n                                    style({ transform: 'scale(.95)', offset: 0.8 }),\n                                    style({ transform: 'scale(1)', offset: 1.0 })\n                                ])),\n                                animateChild()\n                            ], {\n                                params: {\n                                    x: '0px',\n                                    y: '0px',\n                                    ox: '50%',\n                                    oy: '50%',\n                                    scale: 1\n                                }\n                            }),\n                            transition('enter => exit', [animateChild(), animate(200, style(zoomFadeIn))], { params: { x: '0px', y: '0px', ox: '50%', oy: '50%' } })\n                        ])\n                    ], host: {\n                        '(@slideModal.start)': 'onAnimationStart($event)',\n                        '(@slideModal.done)': 'onAnimationDone($event)',\n                        '[class.owl-dialog-container]': 'owlDialogContainerClass',\n                        '[attr.tabindex]': 'owlDialogContainerTabIndex',\n                        '[attr.id]': 'owlDialogContainerId',\n                        '[attr.role]': 'owlDialogContainerRole',\n                        '[attr.aria-labelledby]': 'owlDialogContainerAriaLabelledby',\n                        '[attr.aria-describedby]': 'owlDialogContainerAriaDescribedby',\n                        '[@slideModal]': 'owlDialogContainerAnimation'\n                    }, template: \"<ng-template [cdkPortalOutlet]></ng-template>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i4.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * object.utils\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nfunction extendObject(dest, ...sources) {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (const source of sources) {\n        if (source != null) {\n            for (const key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * index\n */\n\n/**\n * dialog.service\n */\nconst OWL_DIALOG_DATA = new InjectionToken('OwlDialogData');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * */\nconst OWL_DIALOG_SCROLL_STRATEGY = new InjectionToken('owl-dialog-scroll-strategy');\nfunction OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    const fn = () => overlay.scrollStrategies.block();\n    return fn;\n}\n/** @docs-private */\nconst OWL_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: OWL_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Injection token that can be used to specify default dialog options.\n * */\nconst OWL_DIALOG_DEFAULT_OPTIONS = new InjectionToken('owl-dialog-default-options');\nclass OwlDialogService {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this.parentDialog\n            ? this.parentDialog.openDialogs\n            : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get beforeOpen() {\n        return this.parentDialog\n            ? this.parentDialog.beforeOpen\n            : this._beforeOpenAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpen() {\n        return this.parentDialog\n            ? this.parentDialog.afterOpen\n            : this._afterOpenAtThisLevel;\n    }\n    get _afterAllClosed() {\n        const parent = this.parentDialog;\n        return parent\n            ? parent._afterAllClosed\n            : this._afterAllClosedAtThisLevel;\n    }\n    constructor(overlay, injector, location, scrollStrategy, defaultOptions, parentDialog, overlayContainer) {\n        this.overlay = overlay;\n        this.injector = injector;\n        this.location = location;\n        this.defaultOptions = defaultOptions;\n        this.parentDialog = parentDialog;\n        this.overlayContainer = overlayContainer;\n        this.ariaHiddenElements = new Map();\n        this._openDialogsAtThisLevel = [];\n        this._beforeOpenAtThisLevel = new Subject();\n        this._afterOpenAtThisLevel = new Subject();\n        this._afterAllClosedAtThisLevel = new Subject();\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this._openDialogsAtThisLevel.length\n            ? this._afterAllClosed\n            : this._afterAllClosed.pipe(startWith(undefined)));\n        this.scrollStrategy = scrollStrategy;\n        if (!parentDialog && location) {\n            location.subscribe(() => this.closeAll());\n        }\n    }\n    open(componentOrTemplateRef, config) {\n        config = applyConfigDefaults(config, this.defaultOptions);\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayRef = this.createOverlay(config);\n        const dialogContainer = this.attachDialogContainer(overlayRef, config);\n        const dialogRef = this.attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        if (!this.openDialogs.length) {\n            this.hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef\n            .afterClosed()\n            .subscribe(() => this.removeOpenDialog(dialogRef));\n        this.beforeOpen.next(dialogRef);\n        this.afterOpen.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        let i = this.openDialogs.length;\n        while (i--) {\n            this.openDialogs[i].close();\n        }\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        const dialogRef = new OwlDialogRef(overlayRef, dialogContainer, config.id, this.location);\n        if (config.hasBackdrop) {\n            overlayRef.backdropClick().subscribe(() => {\n                if (!dialogRef.disableClose) {\n                    dialogRef.close();\n                }\n            });\n        }\n        if (componentOrTemplateRef instanceof TemplateRef) {\n        }\n        else {\n            const injector = this.createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, undefined, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config &&\n            config.viewContainerRef &&\n            config.viewContainerRef.injector;\n        const injectionTokens = new WeakMap();\n        injectionTokens.set(OwlDialogRef, dialogRef);\n        injectionTokens.set(OwlDialogContainerComponent, dialogContainer);\n        injectionTokens.set(OWL_DIALOG_DATA, config.data);\n        return new PortalInjector(userInjector || this.injector, injectionTokens);\n    }\n    createOverlay(config) {\n        const overlayConfig = this.getOverlayConfig(config);\n        return this.overlay.create(overlayConfig);\n    }\n    attachDialogContainer(overlayRef, config) {\n        const containerPortal = new ComponentPortal(OwlDialogContainerComponent, config.viewContainerRef);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.setConfig(config);\n        return containerRef.instance;\n    }\n    getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this.overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this.scrollStrategy(),\n            panelClass: dialogConfig.paneClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    removeOpenDialog(dialogRef) {\n        const index = this._openDialogsAtThisLevel.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this.ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this.ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this.overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this.ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDialogService, deps: [{ token: i1.Overlay }, { token: i0.Injector }, { token: i3.Location, optional: true }, { token: OWL_DIALOG_SCROLL_STRATEGY }, { token: OWL_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: OwlDialogService, optional: true, skipSelf: true }, { token: i1.OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDialogService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDialogService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i1.Overlay }, { type: i0.Injector }, { type: i3.Location, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [OWL_DIALOG_SCROLL_STRATEGY]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DIALOG_DEFAULT_OPTIONS]\n                }] }, { type: OwlDialogService, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.OverlayContainer }] });\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default config setting\n * @returns The new configuration object.\n */\nfunction applyConfigDefaults(config, defaultOptions) {\n    return extendObject(new OwlDialogConfig(), config, defaultOptions);\n}\n\n/**\n * date-time-picker.component\n */\n/** Injection token that determines the scroll handling while the dtPicker is open. */\nconst OWL_DTPICKER_SCROLL_STRATEGY = new InjectionToken('owl-dtpicker-scroll-strategy');\n/** @docs-private */\nfunction OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    const fn = () => overlay.scrollStrategies.block();\n    return fn;\n}\n/** @docs-private */\nconst OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER = {\n    provide: OWL_DTPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\nclass OwlDateTimeComponent extends OwlDateTime {\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        if (this._startAt) {\n            return this._startAt;\n        }\n        if (this._dtInput) {\n            if (this._dtInput.selectMode === 'single') {\n                return this._dtInput.value || null;\n            }\n            else if (this._dtInput.selectMode === 'range' ||\n                this._dtInput.selectMode === 'rangeFrom') {\n                return this._dtInput.values[0] || null;\n            }\n            else if (this._dtInput.selectMode === 'rangeTo') {\n                return this._dtInput.values[1] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    set startAt(date) {\n        this._startAt = this.getValidDate(this.dateTimeAdapter.deserialize(date));\n    }\n    get endAt() {\n        if (this._endAt) {\n            return this._endAt;\n        }\n        if (this._dtInput) {\n            if (this._dtInput.selectMode === 'single') {\n                return this._dtInput.value || null;\n            }\n            else if (this._dtInput.selectMode === 'range' ||\n                this._dtInput.selectMode === 'rangeFrom') {\n                return this._dtInput.values[1] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    set endAt(date) {\n        this._endAt = this.getValidDate(this.dateTimeAdapter.deserialize(date));\n    }\n    get pickerType() {\n        return this._pickerType;\n    }\n    set pickerType(val) {\n        if (val !== this._pickerType) {\n            this._pickerType = val;\n            if (this._dtInput) {\n                this._dtInput.formatNativeInputValue();\n            }\n        }\n    }\n    get pickerMode() {\n        return this._pickerMode;\n    }\n    set pickerMode(mode) {\n        if (mode === 'popup') {\n            this._pickerMode = mode;\n        }\n        else {\n            this._pickerMode = 'dialog';\n        }\n    }\n    get disabled() {\n        return this._disabled === undefined && this._dtInput\n            ? this._dtInput.disabled\n            : !!this._disabled;\n    }\n    set disabled(value) {\n        value = coerceBooleanProperty(value);\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this.disabledChange.next(value);\n        }\n    }\n    get opened() {\n        return this._opened;\n    }\n    set opened(val) {\n        val ? this.open() : this.close();\n    }\n    get dtInput() {\n        return this._dtInput;\n    }\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._selected = value;\n        this.changeDetector.markForCheck();\n    }\n    get selecteds() {\n        return this._selecteds;\n    }\n    set selecteds(values) {\n        this._selecteds = values;\n        this.changeDetector.markForCheck();\n    }\n    /** The minimum selectable date. */\n    get minDateTime() {\n        return this._dtInput && this._dtInput.min;\n    }\n    /** The maximum selectable date. */\n    get maxDateTime() {\n        return this._dtInput && this._dtInput.max;\n    }\n    get dateTimeFilter() {\n        return this._dtInput && this._dtInput.dateTimeFilter;\n    }\n    get selectMode() {\n        return this._dtInput.selectMode;\n    }\n    get isInSingleMode() {\n        return this._dtInput.isInSingleMode;\n    }\n    get isInRangeMode() {\n        return this._dtInput.isInRangeMode;\n    }\n    constructor(overlay, viewContainerRef, dialogService, ngZone, changeDetector, dateTimeAdapter, defaultScrollStrategy, dateTimeFormats, document) {\n        super(dateTimeAdapter, dateTimeFormats);\n        this.overlay = overlay;\n        this.viewContainerRef = viewContainerRef;\n        this.dialogService = dialogService;\n        this.ngZone = ngZone;\n        this.changeDetector = changeDetector;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        this.document = document;\n        /** Custom class for the picker backdrop. */\n        this.backdropClass = [];\n        /** Custom class for the picker overlay pane. */\n        this.panelClass = [];\n        /**\n         * Set the type of the dateTime picker\n         *      'both' -- show both calendar and timer\n         *      'calendar' -- show only calendar\n         *      'timer' -- show only timer\n         */\n        this._pickerType = 'both';\n        /**\n         * Whether the picker open as a dialog\n         */\n        this._pickerMode = 'popup';\n        /** Whether the calendar is open. */\n        this._opened = false;\n        /**\n         * Callback when the picker is closed\n         * */\n        this.afterPickerClosed = new EventEmitter();\n        /**\n         * Callback before the picker is open\n         * */\n        this.beforePickerOpen = new EventEmitter();\n        /**\n         * Callback when the picker is open\n         * */\n        this.afterPickerOpen = new EventEmitter();\n        /**\n         * Emits selected year in multi-year view\n         * This doesn't imply a change on the selected date.\n         * */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view\n         * This doesn't imply a change on the selected date.\n         * */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits selected date\n         * */\n        this.dateSelected = new EventEmitter();\n        /**\n         * Emit when the selected value has been confirmed\n         * */\n        this.confirmSelectedChange = new EventEmitter();\n        /**\n         * Emits when the date time picker is disabled.\n         * */\n        this.disabledChange = new EventEmitter();\n        this.dtInputSub = Subscription.EMPTY;\n        this.hidePickerStreamSub = Subscription.EMPTY;\n        this.confirmSelectedStreamSub = Subscription.EMPTY;\n        this.pickerOpenedStreamSub = Subscription.EMPTY;\n        this.pickerBeforeOpenedStreamSub = Subscription.EMPTY;\n        /** The element that was focused before the date time picker was opened. */\n        this.focusedElementBeforeOpen = null;\n        this._selecteds = [];\n        this.defaultScrollStrategy = defaultScrollStrategy;\n    }\n    ngOnInit() { }\n    ngOnDestroy() {\n        this.close();\n        this.dtInputSub.unsubscribe();\n        this.disabledChange.complete();\n        if (this.popupRef) {\n            this.popupRef.dispose();\n        }\n    }\n    registerInput(input) {\n        if (this._dtInput) {\n            throw Error('A Owl DateTimePicker can only be associated with a single input.');\n        }\n        this._dtInput = input;\n        this.dtInputSub = this._dtInput.valueChange.subscribe((value) => {\n            if (Array.isArray(value)) {\n                this.selecteds = value;\n            }\n            else {\n                this.selected = value;\n            }\n        });\n    }\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._dtInput) {\n            throw Error('Attempted to open an DateTimePicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n        // reset the picker selected value\n        if (this.isInSingleMode) {\n            this.selected = this._dtInput.value;\n        }\n        else if (this.isInRangeMode) {\n            this.selecteds = this._dtInput.values;\n        }\n        // when the picker is open , we make sure the picker's current selected time value\n        // is the same as the _startAt time value.\n        if (this.selected && this.pickerType !== 'calendar' && this._startAt) {\n            this.selected = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.selected), this.dateTimeAdapter.getMonth(this.selected), this.dateTimeAdapter.getDate(this.selected), this.dateTimeAdapter.getHours(this._startAt), this.dateTimeAdapter.getMinutes(this._startAt), this.dateTimeAdapter.getSeconds(this._startAt));\n        }\n        this.pickerMode === 'dialog' ? this.openAsDialog() : this.openAsPopup();\n        this.pickerContainer.picker = this;\n        // Listen to picker container's hidePickerStream\n        this.hidePickerStreamSub = this.pickerContainer.hidePickerStream.subscribe(() => {\n            this.close();\n        });\n        // Listen to picker container's confirmSelectedStream\n        this.confirmSelectedStreamSub = this.pickerContainer.confirmSelectedStream.subscribe((event) => {\n            this.confirmSelect(event);\n        });\n    }\n    /**\n     * Selects the given date\n     */\n    select(date) {\n        if (Array.isArray(date)) {\n            this.selecteds = [...date];\n        }\n        else {\n            this.selected = date;\n        }\n        /**\n         * Cases in which automatically confirm the select when date or dates are selected:\n         * 1) picker mode is NOT 'dialog'\n         * 2) picker type is 'calendar' and selectMode is 'single'.\n         * 3) picker type is 'calendar' and selectMode is 'range' and\n         *    the 'selecteds' has 'from'(selecteds[0]) and 'to'(selecteds[1]) values.\n         * 4) selectMode is 'rangeFrom' and selecteds[0] has value.\n         * 5) selectMode is 'rangeTo' and selecteds[1] has value.\n         * */\n        if (this.pickerMode !== 'dialog' &&\n            this.pickerType === 'calendar' &&\n            ((this.selectMode === 'single' && this.selected) ||\n                (this.selectMode === 'rangeFrom' && this.selecteds[0]) ||\n                (this.selectMode === 'rangeTo' && this.selecteds[1]) ||\n                (this.selectMode === 'range' &&\n                    this.selecteds[0] &&\n                    this.selecteds[1]))) {\n            this.confirmSelect();\n        }\n    }\n    /**\n     * Emits the selected year in multi-year view\n     * */\n    selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * */\n    selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Emits the selected date\n     * */\n    selectDate(normalizedDate) {\n        this.dateSelected.emit(normalizedDate);\n    }\n    /**\n     * Hide the picker\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n        if (this.pickerContainerPortal &&\n            this.pickerContainerPortal.isAttached) {\n            this.pickerContainerPortal.detach();\n        }\n        if (this.hidePickerStreamSub) {\n            this.hidePickerStreamSub.unsubscribe();\n            this.hidePickerStreamSub = null;\n        }\n        if (this.confirmSelectedStreamSub) {\n            this.confirmSelectedStreamSub.unsubscribe();\n            this.confirmSelectedStreamSub = null;\n        }\n        if (this.pickerBeforeOpenedStreamSub) {\n            this.pickerBeforeOpenedStreamSub.unsubscribe();\n            this.pickerBeforeOpenedStreamSub = null;\n        }\n        if (this.pickerOpenedStreamSub) {\n            this.pickerOpenedStreamSub.unsubscribe();\n            this.pickerOpenedStreamSub = null;\n        }\n        if (this.dialogRef) {\n            this.dialogRef.close();\n            this.dialogRef = null;\n        }\n        const completeClose = () => {\n            if (this._opened) {\n                this._opened = false;\n                const selected = this.selected || this.selecteds;\n                this.afterPickerClosed.emit(selected);\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Confirm the selected value\n     */\n    confirmSelect(event) {\n        if (this.isInSingleMode) {\n            const selected = this.selected || this.startAt || this.dateTimeAdapter.now();\n            this.confirmSelectedChange.emit(selected);\n        }\n        else if (this.isInRangeMode) {\n            this.confirmSelectedChange.emit(this.selecteds);\n        }\n        this.close();\n        return;\n    }\n    /**\n     * Open the picker as a dialog\n     */\n    openAsDialog() {\n        this.dialogRef = this.dialogService.open(OwlDateTimeContainerComponent, {\n            autoFocus: false,\n            backdropClass: [\n                'cdk-overlay-dark-backdrop',\n                ...coerceArray(this.backdropClass)\n            ],\n            paneClass: ['owl-dt-dialog', ...coerceArray(this.panelClass)],\n            viewContainerRef: this.viewContainerRef,\n            scrollStrategy: this.scrollStrategy || this.defaultScrollStrategy()\n        });\n        this.pickerContainer = this.dialogRef.componentInstance;\n        this.dialogRef.beforeOpen().subscribe(() => {\n            this.beforePickerOpen.emit(null);\n        });\n        this.dialogRef.afterOpen().subscribe(() => {\n            this.afterPickerOpen.emit(null);\n            this._opened = true;\n        });\n        this.dialogRef.afterClosed().subscribe(() => this.close());\n    }\n    /**\n     * Open the picker as popup\n     */\n    openAsPopup() {\n        if (!this.pickerContainerPortal) {\n            this.pickerContainerPortal = new ComponentPortal(OwlDateTimeContainerComponent, this.viewContainerRef);\n        }\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n        if (!this.popupRef.hasAttached()) {\n            const componentRef = this.popupRef.attach(this.pickerContainerPortal);\n            this.pickerContainer = componentRef.instance;\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n            this.pickerBeforeOpenedStreamSub = this.pickerContainer.beforePickerOpenedStream\n                .pipe(take(1))\n                .subscribe(() => {\n                this.beforePickerOpen.emit(null);\n            });\n            // emit open stream\n            this.pickerOpenedStreamSub = this.pickerContainer.pickerOpenedStream\n                .pipe(take(1))\n                .subscribe(() => {\n                this.afterPickerOpen.emit(null);\n                this._opened = true;\n            });\n        }\n    }\n    createPopup() {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: [\n                'cdk-overlay-transparent-backdrop',\n                ...coerceArray(this.backdropClass)\n            ],\n            scrollStrategy: this.scrollStrategy || this.defaultScrollStrategy(),\n            panelClass: ['owl-dt-popup', ...coerceArray(this.panelClass)]\n        });\n        this.popupRef = this.overlay.create(overlayConfig);\n        merge(this.popupRef.backdropClick(), this.popupRef.detachments(), this.popupRef\n            .keydownEvents()\n            .pipe(filter$1(event => event.keyCode === ESCAPE ||\n            (this._dtInput &&\n                event.altKey &&\n                event.keyCode === UP_ARROW)))).subscribe(() => this.close());\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * */\n    createPopupPositionStrategy() {\n        return this.overlay\n            .position()\n            .flexibleConnectedTo(this._dtInput.elementRef)\n            .withTransformOriginOn('.owl-dt-container')\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n                offsetY: -176\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n                offsetY: -352\n            }\n        ]);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeComponent, deps: [{ token: i1.Overlay }, { token: i0.ViewContainerRef }, { token: OwlDialogService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: DateTimeAdapter, optional: true }, { token: OWL_DTPICKER_SCROLL_STRATEGY }, { token: OWL_DATE_TIME_FORMATS, optional: true }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlDateTimeComponent, selector: \"owl-date-time\", inputs: { backdropClass: \"backdropClass\", panelClass: \"panelClass\", startAt: \"startAt\", endAt: \"endAt\", pickerType: \"pickerType\", pickerMode: \"pickerMode\", disabled: \"disabled\", opened: \"opened\", scrollStrategy: \"scrollStrategy\" }, outputs: { afterPickerClosed: \"afterPickerClosed\", beforePickerOpen: \"beforePickerOpen\", afterPickerOpen: \"afterPickerOpen\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", dateSelected: \"dateSelected\" }, exportAs: [\"owlDateTime\"], usesInheritance: true, ngImport: i0, template: \"\", styles: [\"\"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'owl-date-time', exportAs: 'owlDateTime', changeDetection: ChangeDetectionStrategy.OnPush, preserveWhitespaces: false, template: \"\" }]\n        }], ctorParameters: () => [{ type: i1.Overlay }, { type: i0.ViewContainerRef }, { type: OwlDialogService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [OWL_DTPICKER_SCROLL_STRATEGY]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_FORMATS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { backdropClass: [{\n                type: Input\n            }], panelClass: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], endAt: [{\n                type: Input\n            }], pickerType: [{\n                type: Input\n            }], pickerMode: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], scrollStrategy: [{\n                type: Input\n            }], afterPickerClosed: [{\n                type: Output\n            }], beforePickerOpen: [{\n                type: Output\n            }], afterPickerOpen: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], dateSelected: [{\n                type: Output\n            }] } });\n\n/**\n * date-time-picker-input.directive\n */\nconst OWL_DATETIME_VALUE_ACCESSOR$1 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => OwlDateTimeInputDirective),\n    multi: true\n};\nconst OWL_DATETIME_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => OwlDateTimeInputDirective),\n    multi: true\n};\nclass OwlDateTimeInputDirective {\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = value === '' || value;\n        this.validatorOnChange();\n    }\n    /**\n     * The date time picker that this input is associated with.\n     * */\n    set owlDateTime(value) {\n        this.registerDateTimePicker(value);\n    }\n    /**\n     * A function to filter date time\n     */\n    set owlDateTimeFilter(filter) {\n        this._dateTimeFilter = filter;\n        this.validatorOnChange();\n    }\n    get dateTimeFilter() {\n        return this._dateTimeFilter;\n    }\n    get disabled() {\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elmRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n    get selectMode() {\n        return this._selectMode;\n    }\n    set selectMode(mode) {\n        if (mode !== 'single' &&\n            mode !== 'range' &&\n            mode !== 'rangeFrom' &&\n            mode !== 'rangeTo') {\n            throw Error('OwlDateTime Error: invalid selectMode value!');\n        }\n        this._selectMode = mode;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateTimeAdapter.isValid(value);\n        value = this.getValidDate(value);\n        const oldDate = this._value;\n        this._value = value;\n        // set the input property 'value'\n        this.formatNativeInputValue();\n        // check if the input value changed\n        if (!this.dateTimeAdapter.isEqual(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n    get values() {\n        return this._values;\n    }\n    set values(values) {\n        if (values && values.length > 0) {\n            this._values = values.map(v => {\n                v = this.dateTimeAdapter.deserialize(v);\n                return this.getValidDate(v);\n            });\n            this.lastValueValid =\n                (!this._values[0] ||\n                    this.dateTimeAdapter.isValid(this._values[0])) &&\n                    (!this._values[1] ||\n                        this.dateTimeAdapter.isValid(this._values[1]));\n        }\n        else {\n            this._values = [];\n            this.lastValueValid = true;\n        }\n        // set the input property 'value'\n        this.formatNativeInputValue();\n        this.valueChange.emit(this._values);\n    }\n    get elementRef() {\n        return this.elmRef;\n    }\n    get isInSingleMode() {\n        return this._selectMode === 'single';\n    }\n    get isInRangeMode() {\n        return (this._selectMode === 'range' ||\n            this._selectMode === 'rangeFrom' ||\n            this._selectMode === 'rangeTo');\n    }\n    get owlDateTimeInputAriaHaspopup() {\n        return true;\n    }\n    get owlDateTimeInputAriaOwns() {\n        return (this.dtPicker.opened && this.dtPicker.id) || null;\n    }\n    get minIso8601() {\n        return this.min ? this.dateTimeAdapter.toIso8601(this.min) : null;\n    }\n    get maxIso8601() {\n        return this.max ? this.dateTimeAdapter.toIso8601(this.max) : null;\n    }\n    get owlDateTimeInputDisabled() {\n        return this.disabled;\n    }\n    constructor(elmRef, renderer, dateTimeAdapter, dateTimeFormats) {\n        this.elmRef = elmRef;\n        this.renderer = renderer;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        /**\n         * The picker's select mode\n         */\n        this._selectMode = 'single';\n        /**\n         * The character to separate the 'from' and 'to' in input value\n         */\n        this.rangeSeparator = '-';\n        this._values = [];\n        /**\n         * Callback to invoke when `change` event is fired on this `<input>`\n         * */\n        this.dateTimeChange = new EventEmitter();\n        /**\n         * Callback to invoke when an `input` event is fired on this `<input>`.\n         * */\n        this.dateTimeInput = new EventEmitter();\n        this.dtPickerSub = Subscription.EMPTY;\n        this.localeSub = Subscription.EMPTY;\n        this.lastValueValid = true;\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.validatorOnChange = () => { };\n        /** The form control validator for whether the input parses. */\n        this.parseValidator = () => {\n            return this.lastValueValid\n                ? null\n                : { owlDateTimeParse: { text: this.elmRef.nativeElement.value } };\n        };\n        /** The form control validator for the min date. */\n        this.minValidator = (control) => {\n            if (this.isInSingleMode) {\n                const controlValue = this.getValidDate(this.dateTimeAdapter.deserialize(control.value));\n                return !this.min ||\n                    !controlValue ||\n                    this.dateTimeAdapter.compare(this.min, controlValue) <= 0\n                    ? null\n                    : { owlDateTimeMin: { min: this.min, actual: controlValue } };\n            }\n            else if (this.isInRangeMode && control.value) {\n                const controlValueFrom = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[0]));\n                const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\n                return !this.min ||\n                    !controlValueFrom ||\n                    !controlValueTo ||\n                    this.dateTimeAdapter.compare(this.min, controlValueFrom) <= 0\n                    ? null\n                    : {\n                        owlDateTimeMin: {\n                            min: this.min,\n                            actual: [controlValueFrom, controlValueTo]\n                        }\n                    };\n            }\n        };\n        /** The form control validator for the max date. */\n        this.maxValidator = (control) => {\n            if (this.isInSingleMode) {\n                const controlValue = this.getValidDate(this.dateTimeAdapter.deserialize(control.value));\n                return !this.max ||\n                    !controlValue ||\n                    this.dateTimeAdapter.compare(this.max, controlValue) >= 0\n                    ? null\n                    : { owlDateTimeMax: { max: this.max, actual: controlValue } };\n            }\n            else if (this.isInRangeMode && control.value) {\n                const controlValueFrom = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[0]));\n                const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\n                return !this.max ||\n                    !controlValueFrom ||\n                    !controlValueTo ||\n                    this.dateTimeAdapter.compare(this.max, controlValueTo) >= 0\n                    ? null\n                    : {\n                        owlDateTimeMax: {\n                            max: this.max,\n                            actual: [controlValueFrom, controlValueTo]\n                        }\n                    };\n            }\n        };\n        /** The form control validator for the date filter. */\n        this.filterValidator = (control) => {\n            const controlValue = this.getValidDate(this.dateTimeAdapter.deserialize(control.value));\n            return !this._dateTimeFilter ||\n                !controlValue ||\n                this._dateTimeFilter(controlValue)\n                ? null\n                : { owlDateTimeFilter: true };\n        };\n        /**\n         * The form control validator for the range.\n         * Check whether the 'before' value is before the 'to' value\n         * */\n        this.rangeValidator = (control) => {\n            if (this.isInSingleMode || !control.value) {\n                return null;\n            }\n            const controlValueFrom = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[0]));\n            const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\n            return !controlValueFrom ||\n                !controlValueTo ||\n                this.dateTimeAdapter.compare(controlValueFrom, controlValueTo) <= 0\n                ? null\n                : { owlDateTimeRange: true };\n        };\n        /**\n         * The form control validator for the range when required.\n         * Check whether the 'before' and 'to' values are present\n         * */\n        this.requiredRangeValidator = (control) => {\n            if (this.isInSingleMode || !control.value || !this.required) {\n                return null;\n            }\n            const controlValueFrom = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[0]));\n            const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\n            return !controlValueFrom ||\n                !controlValueTo\n                ? { owlRequiredDateTimeRange: [controlValueFrom, controlValueTo] }\n                : null;\n        };\n        /** The combined form control validator for this input. */\n        this.validator = Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator,\n            this.rangeValidator,\n            this.requiredRangeValidator\n        ]);\n        /** Emits when the value changes (either due to user input or programmatic change). */\n        this.valueChange = new EventEmitter();\n        /** Emits when the disabled state has changed */\n        this.disabledChange = new EventEmitter();\n        if (!this.dateTimeAdapter) {\n            throw Error(`OwlDateTimePicker: No provider found for DateTimePicker. You must import one of the following ` +\n                `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\n                `custom implementation.`);\n        }\n        if (!this.dateTimeFormats) {\n            throw Error(`OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\n                `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\n                `custom implementation.`);\n        }\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n    ngOnInit() {\n        if (!this.dtPicker) {\n            throw Error(`OwlDateTimePicker: the picker input doesn't have any associated owl-date-time component`);\n        }\n    }\n    ngAfterContentInit() {\n        this.dtPickerSub = this.dtPicker.confirmSelectedChange.subscribe((selecteds) => {\n            if (Array.isArray(selecteds)) {\n                this.values = selecteds;\n            }\n            else {\n                this.value = selecteds;\n            }\n            this.onModelChange(selecteds);\n            this.onModelTouched();\n            this.dateTimeChange.emit({\n                source: this,\n                value: selecteds,\n                input: this.elmRef.nativeElement\n            });\n            this.dateTimeInput.emit({\n                source: this,\n                value: selecteds,\n                input: this.elmRef.nativeElement\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.dtPickerSub.unsubscribe();\n        this.localeSub.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n    writeValue(value) {\n        if (this.isInSingleMode) {\n            this.value = value;\n        }\n        else {\n            this.values = value;\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    validate(c) {\n        return this.validator ? this.validator(c) : null;\n    }\n    registerOnValidatorChange(fn) {\n        this.validatorOnChange = fn;\n    }\n    /**\n     * Open the picker when user hold alt + DOWN_ARROW\n     * */\n    handleKeydownOnHost(event) {\n        if (event.altKey && event.keyCode === DOWN_ARROW) {\n            this.dtPicker.open();\n            event.preventDefault();\n        }\n    }\n    handleBlurOnHost(event) {\n        this.onModelTouched();\n    }\n    handleInputOnHost(event) {\n        const value = event.target.value;\n        if (this._selectMode === 'single') {\n            this.changeInputInSingleMode(value);\n        }\n        else if (this._selectMode === 'range') {\n            this.changeInputInRangeMode(value);\n        }\n        else {\n            this.changeInputInRangeFromToMode(value);\n        }\n    }\n    handleChangeOnHost(event) {\n        let v;\n        if (this.isInSingleMode) {\n            v = this.value;\n        }\n        else if (this.isInRangeMode) {\n            v = this.values;\n        }\n        this.dateTimeChange.emit({\n            source: this,\n            value: v,\n            input: this.elmRef.nativeElement\n        });\n    }\n    /**\n     * Set the native input property 'value'\n     */\n    formatNativeInputValue() {\n        if (this.isInSingleMode) {\n            this.renderer.setProperty(this.elmRef.nativeElement, 'value', this._value\n                ? this.dateTimeAdapter.format(this._value, this.dtPicker.formatString)\n                : '');\n        }\n        else if (this.isInRangeMode) {\n            if (this._values && this.values.length > 0) {\n                const from = this._values[0];\n                const to = this._values[1];\n                const fromFormatted = from\n                    ? this.dateTimeAdapter.format(from, this.dtPicker.formatString)\n                    : '';\n                const toFormatted = to\n                    ? this.dateTimeAdapter.format(to, this.dtPicker.formatString)\n                    : '';\n                if (!fromFormatted && !toFormatted) {\n                    this.renderer.setProperty(this.elmRef.nativeElement, 'value', null);\n                }\n                else {\n                    if (this._selectMode === 'range') {\n                        this.renderer.setProperty(this.elmRef.nativeElement, 'value', fromFormatted +\n                            ' ' +\n                            this.rangeSeparator +\n                            ' ' +\n                            toFormatted);\n                    }\n                    else if (this._selectMode === 'rangeFrom') {\n                        this.renderer.setProperty(this.elmRef.nativeElement, 'value', fromFormatted);\n                    }\n                    else if (this._selectMode === 'rangeTo') {\n                        this.renderer.setProperty(this.elmRef.nativeElement, 'value', toFormatted);\n                    }\n                }\n            }\n            else {\n                this.renderer.setProperty(this.elmRef.nativeElement, 'value', '');\n            }\n        }\n        return;\n    }\n    /**\n     * Register the relationship between this input and its picker component\n     */\n    registerDateTimePicker(picker) {\n        if (picker) {\n            this.dtPicker = picker;\n            this.dtPicker.registerInput(this);\n        }\n    }\n    /**\n     * Convert a given obj to a valid date object\n     */\n    getValidDate(obj) {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n    /**\n     * Convert a time string to a date-time string\n     * When pickerType is 'timer', the value in the picker's input is a time string.\n     * The dateTimeAdapter parse fn could not parse a time string to a Date Object.\n     * Therefore we need this fn to convert a time string to a date-time string.\n     */\n    convertTimeStringToDateTimeString(timeString, dateTime) {\n        if (timeString) {\n            const v = dateTime || this.dateTimeAdapter.now();\n            const dateString = this.dateTimeAdapter.format(v, this.dateTimeFormats.datePickerInput);\n            return dateString + ' ' + timeString;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Handle input change in single mode\n     */\n    changeInputInSingleMode(inputValue) {\n        let value = inputValue;\n        if (this.dtPicker.pickerType === 'timer') {\n            value = this.convertTimeStringToDateTimeString(value, this.value);\n        }\n        let result = this.dateTimeAdapter.parse(value, this.dateTimeFormats.parseInput);\n        this.lastValueValid = !result || this.dateTimeAdapter.isValid(result);\n        result = this.getValidDate(result);\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\n        // result equals to null means there is input event, but the input value is invalid\n        if (!this.isSameValue(result, this._value) || result === null) {\n            this._value = result;\n            this.valueChange.emit(result);\n            this.onModelChange(result);\n            this.dateTimeInput.emit({\n                source: this,\n                value: result,\n                input: this.elmRef.nativeElement\n            });\n        }\n    }\n    /**\n     * Handle input change in rangeFrom or rangeTo mode\n     */\n    changeInputInRangeFromToMode(inputValue) {\n        const originalValue = this._selectMode === 'rangeFrom'\n            ? this._values[0]\n            : this._values[1];\n        if (this.dtPicker.pickerType === 'timer') {\n            inputValue = this.convertTimeStringToDateTimeString(inputValue, originalValue);\n        }\n        let result = this.dateTimeAdapter.parse(inputValue, this.dateTimeFormats.parseInput);\n        this.lastValueValid = !result || this.dateTimeAdapter.isValid(result);\n        result = this.getValidDate(result);\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\n        if ((this._selectMode === 'rangeFrom' &&\n            this.isSameValue(result, this._values[0]) &&\n            result) ||\n            (this._selectMode === 'rangeTo' &&\n                this.isSameValue(result, this._values[1]) &&\n                result)) {\n            return;\n        }\n        this._values =\n            this._selectMode === 'rangeFrom'\n                ? [result, this._values[1]]\n                : [this._values[0], result];\n        this.valueChange.emit(this._values);\n        this.onModelChange(this._values);\n        this.dateTimeInput.emit({\n            source: this,\n            value: this._values,\n            input: this.elmRef.nativeElement\n        });\n    }\n    /**\n     * Handle input change in range mode\n     */\n    changeInputInRangeMode(inputValue) {\n        const selecteds = inputValue.split(this.rangeSeparator);\n        let fromString = selecteds[0];\n        let toString = selecteds[1];\n        if (this.dtPicker.pickerType === 'timer') {\n            fromString = this.convertTimeStringToDateTimeString(fromString, this.values[0]);\n            toString = this.convertTimeStringToDateTimeString(toString, this.values[1]);\n        }\n        let from = this.dateTimeAdapter.parse(fromString, this.dateTimeFormats.parseInput);\n        let to = this.dateTimeAdapter.parse(toString, this.dateTimeFormats.parseInput);\n        this.lastValueValid =\n            (!from || this.dateTimeAdapter.isValid(from)) &&\n                (!to || this.dateTimeAdapter.isValid(to));\n        from = this.getValidDate(from);\n        to = this.getValidDate(to);\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\n        if (!this.isSameValue(from, this._values[0]) ||\n            !this.isSameValue(to, this._values[1]) ||\n            (from === null && to === null)) {\n            this._values = [from, to];\n            this.valueChange.emit(this._values);\n            this.onModelChange(this._values);\n            this.dateTimeInput.emit({\n                source: this,\n                value: this._values,\n                input: this.elmRef.nativeElement\n            });\n        }\n    }\n    /**\n     * Check if the two value is the same\n     */\n    isSameValue(first, second) {\n        if (first && second) {\n            return this.dateTimeAdapter.compare(first, second) === 0;\n        }\n        return first === second;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeInputDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DateTimeAdapter, optional: true }, { token: OWL_DATE_TIME_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlDateTimeInputDirective, selector: \"input[owlDateTime]\", inputs: { required: \"required\", owlDateTime: \"owlDateTime\", owlDateTimeFilter: \"owlDateTimeFilter\", _disabled: \"_disabled\", min: \"min\", max: \"max\", selectMode: \"selectMode\", rangeSeparator: \"rangeSeparator\", value: \"value\", values: \"values\" }, outputs: { dateTimeChange: \"dateTimeChange\", dateTimeInput: \"dateTimeInput\" }, host: { listeners: { \"keydown\": \"handleKeydownOnHost($event)\", \"blur\": \"handleBlurOnHost($event)\", \"input\": \"handleInputOnHost($event)\", \"change\": \"handleChangeOnHost($event)\" }, properties: { \"attr.aria-haspopup\": \"owlDateTimeInputAriaHaspopup\", \"attr.aria-owns\": \"owlDateTimeInputAriaOwns\", \"attr.min\": \"minIso8601\", \"attr.max\": \"maxIso8601\", \"disabled\": \"owlDateTimeInputDisabled\" } }, providers: [\n            OWL_DATETIME_VALUE_ACCESSOR$1,\n            OWL_DATETIME_VALIDATORS,\n        ], exportAs: [\"owlDateTimeInput\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeInputDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[owlDateTime]',\n                    exportAs: 'owlDateTimeInput',\n                    host: {\n                        '(keydown)': 'handleKeydownOnHost($event)',\n                        '(blur)': 'handleBlurOnHost($event)',\n                        '(input)': 'handleInputOnHost($event)',\n                        '(change)': 'handleChangeOnHost($event)',\n                        '[attr.aria-haspopup]': 'owlDateTimeInputAriaHaspopup',\n                        '[attr.aria-owns]': 'owlDateTimeInputAriaOwns',\n                        '[attr.min]': 'minIso8601',\n                        '[attr.max]': 'maxIso8601',\n                        '[disabled]': 'owlDateTimeInputDisabled'\n                    },\n                    providers: [\n                        OWL_DATETIME_VALUE_ACCESSOR$1,\n                        OWL_DATETIME_VALIDATORS,\n                    ],\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_FORMATS]\n                }] }], propDecorators: { required: [{\n                type: Input\n            }], owlDateTime: [{\n                type: Input\n            }], owlDateTimeFilter: [{\n                type: Input\n            }], _disabled: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], selectMode: [{\n                type: Input\n            }], rangeSeparator: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], values: [{\n                type: Input\n            }], dateTimeChange: [{\n                type: Output\n            }], dateTimeInput: [{\n                type: Output\n            }] } });\n\n/**\n * numberFixedLen.pipe\n */\nclass NumberFixedLenPipe {\n    transform(num, len) {\n        const number = Math.floor(num);\n        const length = Math.floor(len);\n        if (num === null || isNaN(number) || isNaN(length)) {\n            return num;\n        }\n        let numString = number.toString();\n        while (numString.length < length) {\n            numString = '0' + numString;\n        }\n        return numString;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: NumberFixedLenPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"18.0.5\", ngImport: i0, type: NumberFixedLenPipe, name: \"numberFixedLen\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: NumberFixedLenPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'numberFixedLen'\n                }]\n        }] });\n\n/**\n * date-time-inline.component\n */\nconst OWL_DATETIME_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => OwlDateTimeInlineComponent),\n    multi: true\n};\nclass OwlDateTimeInlineComponent extends OwlDateTime {\n    get pickerType() {\n        return this._pickerType;\n    }\n    set pickerType(val) {\n        if (val !== this._pickerType) {\n            this._pickerType = val;\n        }\n    }\n    get disabled() {\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    get selectMode() {\n        return this._selectMode;\n    }\n    set selectMode(mode) {\n        if (mode !== 'single' &&\n            mode !== 'range' &&\n            mode !== 'rangeFrom' &&\n            mode !== 'rangeTo') {\n            throw Error('OwlDateTime Error: invalid selectMode value!');\n        }\n        this._selectMode = mode;\n    }\n    get startAt() {\n        if (this._startAt) {\n            return this._startAt;\n        }\n        if (this.selectMode === 'single') {\n            return this.value || null;\n        }\n        else if (this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom') {\n            return this.values[0] || null;\n        }\n        else if (this.selectMode === 'rangeTo') {\n            return this.values[1] || null;\n        }\n        else {\n            return null;\n        }\n    }\n    set startAt(date) {\n        this._startAt = this.getValidDate(this.dateTimeAdapter.deserialize(date));\n    }\n    get endAt() {\n        if (this._endAt) {\n            return this._endAt;\n        }\n        if (this.selectMode === 'single') {\n            return this.value || null;\n        }\n        else if (this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom') {\n            return this.values[1] || null;\n        }\n        else {\n            return null;\n        }\n    }\n    set endAt(date) {\n        this._endAt = this.getValidDate(this.dateTimeAdapter.deserialize(date));\n    }\n    get dateTimeFilter() {\n        return this._dateTimeFilter;\n    }\n    set dateTimeFilter(filter) {\n        this._dateTimeFilter = filter;\n    }\n    get minDateTime() {\n        return this._min || null;\n    }\n    set minDateTime(value) {\n        this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n        this.changeDetector.markForCheck();\n    }\n    get maxDateTime() {\n        return this._max || null;\n    }\n    set maxDateTime(value) {\n        this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n        this.changeDetector.markForCheck();\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        value = this.dateTimeAdapter.deserialize(value);\n        value = this.getValidDate(value);\n        this._value = value;\n        this.selected = value;\n    }\n    get values() {\n        return this._values;\n    }\n    set values(values) {\n        if (values && values.length > 0) {\n            values = values.map(v => {\n                v = this.dateTimeAdapter.deserialize(v);\n                v = this.getValidDate(v);\n                return v ? this.dateTimeAdapter.clone(v) : null;\n            });\n            this._values = [...values];\n            this.selecteds = [...values];\n        }\n        else {\n            this._values = [];\n            this.selecteds = [];\n        }\n    }\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._selected = value;\n        this.changeDetector.markForCheck();\n    }\n    get selecteds() {\n        return this._selecteds;\n    }\n    set selecteds(values) {\n        this._selecteds = values;\n        this.changeDetector.markForCheck();\n    }\n    get opened() {\n        return true;\n    }\n    get pickerMode() {\n        return 'inline';\n    }\n    get isInSingleMode() {\n        return this._selectMode === 'single';\n    }\n    get isInRangeMode() {\n        return (this._selectMode === 'range' ||\n            this._selectMode === 'rangeFrom' ||\n            this._selectMode === 'rangeTo');\n    }\n    get owlDTInlineClass() {\n        return true;\n    }\n    constructor(changeDetector, dateTimeAdapter, dateTimeFormats) {\n        super(dateTimeAdapter, dateTimeFormats);\n        this.changeDetector = changeDetector;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        /**\n         * Set the type of the dateTime picker\n         *      'both' -- show both calendar and timer\n         *      'calendar' -- show only calendar\n         *      'timer' -- show only timer\n         */\n        this._pickerType = 'both';\n        this._disabled = false;\n        this._selectMode = 'single';\n        this._values = [];\n        /**\n         * Emits selected year in multi-year view\n         * This doesn't imply a change on the selected date.\n         * */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view\n         * This doesn't imply a change on the selected date.\n         * */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits selected date\n         * */\n        this.dateSelected = new EventEmitter();\n        this._selecteds = [];\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n    }\n    ngOnInit() {\n        this.container.picker = this;\n    }\n    writeValue(value) {\n        if (this.isInSingleMode) {\n            this.value = value;\n            this.container.pickerMoment = value;\n        }\n        else {\n            this.values = value;\n            this.container.pickerMoment = this._values[this.container.activeSelectedIndex];\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    select(date) {\n        if (this.disabled) {\n            return;\n        }\n        if (Array.isArray(date)) {\n            this.values = [...date];\n        }\n        else {\n            this.value = date;\n        }\n        this.onModelChange(date);\n        this.onModelTouched();\n    }\n    /**\n     * Emits the selected year in multi-year view\n     * */\n    selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * */\n    selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Emits the selected date\n     * */\n    selectDate(normalizedDate) {\n        this.dateSelected.emit(normalizedDate);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeInlineComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: DateTimeAdapter, optional: true }, { token: OWL_DATE_TIME_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.5\", type: OwlDateTimeInlineComponent, selector: \"owl-date-time-inline\", inputs: { pickerType: \"pickerType\", disabled: \"disabled\", selectMode: \"selectMode\", startAt: \"startAt\", endAt: \"endAt\", dateTimeFilter: [\"owlDateTimeFilter\", \"dateTimeFilter\"], minDateTime: [\"min\", \"minDateTime\"], maxDateTime: [\"max\", \"maxDateTime\"], value: \"value\", values: \"values\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", dateSelected: \"dateSelected\" }, host: { properties: { \"class.owl-dt-inline\": \"owlDTInlineClass\" } }, providers: [OWL_DATETIME_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"container\", first: true, predicate: OwlDateTimeContainerComponent, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<owl-date-time-container></owl-date-time-container>\", styles: [\"\"], dependencies: [{ kind: \"component\", type: OwlDateTimeContainerComponent, selector: \"owl-date-time-container\", exportAs: [\"owlDateTimeContainer\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeInlineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'owl-date-time-inline', host: {\n                        '[class.owl-dt-inline]': 'owlDTInlineClass'\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, preserveWhitespaces: false, providers: [OWL_DATETIME_VALUE_ACCESSOR], template: \"<owl-date-time-container></owl-date-time-container>\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: DateTimeAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_FORMATS]\n                }] }], propDecorators: { container: [{\n                type: ViewChild,\n                args: [OwlDateTimeContainerComponent, { static: true }]\n            }], pickerType: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], selectMode: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], endAt: [{\n                type: Input\n            }], dateTimeFilter: [{\n                type: Input,\n                args: ['owlDateTimeFilter']\n            }], minDateTime: [{\n                type: Input,\n                args: ['min']\n            }], maxDateTime: [{\n                type: Input,\n                args: ['max']\n            }], value: [{\n                type: Input\n            }], values: [{\n                type: Input\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], dateSelected: [{\n                type: Output\n            }] } });\n\n/**\n * dialog.module\n */\nclass OwlDialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDialogModule, declarations: [OwlDialogContainerComponent], imports: [CommonModule, A11yModule, OverlayModule, PortalModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDialogModule, providers: [\n            OWL_DIALOG_SCROLL_STRATEGY_PROVIDER,\n            OwlDialogService,\n        ], imports: [CommonModule, A11yModule, OverlayModule, PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, A11yModule, OverlayModule, PortalModule],\n                    exports: [],\n                    declarations: [\n                        OwlDialogContainerComponent,\n                    ],\n                    providers: [\n                        OWL_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                        OwlDialogService,\n                    ]\n                }]\n        }] });\n\n/**\n * date-time.module\n */\nclass OwlDateTimeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeModule, declarations: [OwlDateTimeTriggerDirective,\n            OwlDateTimeInputDirective,\n            OwlDateTimeComponent,\n            OwlDateTimeContainerComponent,\n            OwlMultiYearViewComponent,\n            OwlYearViewComponent,\n            OwlMonthViewComponent,\n            OwlTimerComponent,\n            OwlTimerBoxComponent,\n            OwlCalendarComponent,\n            OwlCalendarBodyComponent,\n            NumberFixedLenPipe,\n            OwlDateTimeInlineComponent], imports: [CommonModule, OverlayModule, OwlDialogModule, A11yModule], exports: [OwlCalendarComponent,\n            OwlTimerComponent,\n            OwlDateTimeTriggerDirective,\n            OwlDateTimeInputDirective,\n            OwlDateTimeComponent,\n            OwlDateTimeInlineComponent,\n            OwlMultiYearViewComponent,\n            OwlYearViewComponent,\n            OwlMonthViewComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeModule, providers: [\n            OwlDateTimeIntl,\n            OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER,\n            ...optionsProviders,\n        ], imports: [CommonModule, OverlayModule, OwlDialogModule, A11yModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlDateTimeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, OwlDialogModule, A11yModule],\n                    exports: [\n                        OwlCalendarComponent,\n                        OwlTimerComponent,\n                        OwlDateTimeTriggerDirective,\n                        OwlDateTimeInputDirective,\n                        OwlDateTimeComponent,\n                        OwlDateTimeInlineComponent,\n                        OwlMultiYearViewComponent,\n                        OwlYearViewComponent,\n                        OwlMonthViewComponent,\n                    ],\n                    declarations: [\n                        OwlDateTimeTriggerDirective,\n                        OwlDateTimeInputDirective,\n                        OwlDateTimeComponent,\n                        OwlDateTimeContainerComponent,\n                        OwlMultiYearViewComponent,\n                        OwlYearViewComponent,\n                        OwlMonthViewComponent,\n                        OwlTimerComponent,\n                        OwlTimerBoxComponent,\n                        OwlCalendarComponent,\n                        OwlCalendarBodyComponent,\n                        NumberFixedLenPipe,\n                        OwlDateTimeInlineComponent,\n                    ],\n                    providers: [\n                        OwlDateTimeIntl,\n                        OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER,\n                        ...optionsProviders,\n                    ]\n                }]\n        }] });\n\n/**\n * array.utils\n */\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n\n/**\n * date.utils\n */\n/**\n * Creates a date with the given year, month, date, hour, minute and second. Does not allow over/under-flow of the\n * month and date.\n */\nfunction createDate(year, month, date, hours = 0, minutes = 0, seconds = 0) {\n    if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n    if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n    if (hours < 0 || hours > 23) {\n        throw Error(`Invalid hours \"${hours}\". Hours has to be between 0 and 23.`);\n    }\n    if (minutes < 0 || minutes > 59) {\n        throw Error(`Invalid minutes \"${minutes}\". Minutes has to between 0 and 59.`);\n    }\n    if (seconds < 0 || seconds > 59) {\n        throw Error(`Invalid seconds \"${seconds}\". Seconds has to be between 0 and 59.`);\n    }\n    const result = createDateWithOverflow(year, month, date, hours, minutes, seconds);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    // For example, createDate(2017, 1, 31) would try to create a date 2017/02/31 which is invalid\n    if (result.getMonth() !== month) {\n        throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n}\n/**\n * Gets the number of days in the month of the given date.\n */\nfunction getNumDaysInMonth(date) {\n    const lastDateOfMonth = createDateWithOverflow(date.getFullYear(), date.getMonth() + 1, 0);\n    return lastDateOfMonth.getDate();\n}\n/**\n * Creates a date but allows the month and date to overflow.\n */\nfunction createDateWithOverflow(year, month, date, hours = 0, minutes = 0, seconds = 0) {\n    const result = new Date(year, month, date, hours, minutes, seconds);\n    if (year >= 0 && year < 100) {\n        result.setFullYear(result.getFullYear() - 1900);\n    }\n    return result;\n}\n\n/**\n * constants\n */\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n    long: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    short: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n    ],\n    narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    long: [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n/**\n * native-date-time-adapter.class\n */\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:[+\\-]\\d{2}:\\d{2}))?)?$/;\nclass NativeDateTimeAdapter extends DateTimeAdapter {\n    constructor(owlDateTimeLocale, platform) {\n        super();\n        this.owlDateTimeLocale = owlDateTimeLocale;\n        super.setLocale(owlDateTimeLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDay(date) {\n        return date.getDay();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getHours(date) {\n        return date.getHours();\n    }\n    getMinutes(date) {\n        return date.getMinutes();\n    }\n    getSeconds(date) {\n        return date.getSeconds();\n    }\n    getTime(date) {\n        return date.getTime();\n    }\n    getNumDaysInMonth(date) {\n        return getNumDaysInMonth(date);\n    }\n    differenceInCalendarDays(dateLeft, dateRight) {\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n            const dateLeftStartOfDay = this.createDate(this.getYear(dateLeft), this.getMonth(dateLeft), this.getDate(dateLeft));\n            const dateRightStartOfDay = this.createDate(this.getYear(dateRight), this.getMonth(dateRight), this.getDate(dateRight));\n            const timeStampLeft = this.getTime(dateLeftStartOfDay) -\n                dateLeftStartOfDay.getTimezoneOffset() *\n                    this.milliseondsInMinute;\n            const timeStampRight = this.getTime(dateRightStartOfDay) -\n                dateRightStartOfDay.getTimezoneOffset() *\n                    this.milliseondsInMinute;\n            return Math.round((timeStampLeft - timeStampRight) / this.millisecondsInDay);\n        }\n        else {\n            return null;\n        }\n    }\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), {\n                year: 'numeric',\n                timeZone: 'utc'\n            });\n            return this.stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), {\n                month: style,\n                timeZone: 'utc'\n            });\n            return range(12, i => this.stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), {\n                weekday: style,\n                timeZone: 'utc'\n            });\n            return range(7, i => this.stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), {\n                day: 'numeric',\n                timeZone: 'utc'\n            });\n            return range(31, i => this.stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    toIso8601(date) {\n        return date.toISOString();\n    }\n    isEqual(dateLeft, dateRight) {\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n            return dateLeft.getTime() === dateRight.getTime();\n        }\n        else {\n            return false;\n        }\n    }\n    isSameDay(dateLeft, dateRight) {\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n            const dateLeftStartOfDay = this.clone(dateLeft);\n            const dateRightStartOfDay = this.clone(dateRight);\n            dateLeftStartOfDay.setHours(0, 0, 0, 0);\n            dateRightStartOfDay.setHours(0, 0, 0, 0);\n            return (dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime());\n        }\n        else {\n            return false;\n        }\n    }\n    isValid(date) {\n        return date && !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    addCalendarYears(date, amount) {\n        return this.addCalendarMonths(date, amount * 12);\n    }\n    addCalendarMonths(date, amount) {\n        const result = this.clone(date);\n        amount = Number(amount);\n        const desiredMonth = result.getMonth() + amount;\n        const dateWithDesiredMonth = new Date(0);\n        dateWithDesiredMonth.setFullYear(result.getFullYear(), desiredMonth, 1);\n        dateWithDesiredMonth.setHours(0, 0, 0, 0);\n        const daysInMonth = this.getNumDaysInMonth(dateWithDesiredMonth);\n        // Set the last day of the new month\n        // if the original date was the last day of the longer month\n        result.setMonth(desiredMonth, Math.min(daysInMonth, result.getDate()));\n        return result;\n    }\n    addCalendarDays(date, amount) {\n        const result = this.clone(date);\n        amount = Number(amount);\n        result.setDate(result.getDate() + amount);\n        return result;\n    }\n    setHours(date, amount) {\n        const result = this.clone(date);\n        result.setHours(amount);\n        return result;\n    }\n    setMinutes(date, amount) {\n        const result = this.clone(date);\n        result.setMinutes(amount);\n        return result;\n    }\n    setSeconds(date, amount) {\n        const result = this.clone(date);\n        result.setSeconds(amount);\n        return result;\n    }\n    createDate(year, month, date, hours = 0, minutes = 0, seconds = 0) {\n        return createDate(year, month, date, hours, minutes, seconds);\n    }\n    clone(date) {\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date), this.getHours(date), this.getMinutes(date), this.getSeconds(date));\n    }\n    now() {\n        return new Date();\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('JSNativeDate: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            if (this._clampDate &&\n                (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = { ...displayFormat, timeZone: 'utc' };\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), displayFormat);\n            return this.stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this.stripDirectionalityCharacters(date.toDateString());\n    }\n    parse(value, parseFormat) {\n        // There is no way using the native JS Date to set the parse format or locale\n        if (typeof value === 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                const date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     */\n    stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     */\n    _format(dtf, date) {\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: NativeDateTimeAdapter, deps: [{ token: OWL_DATE_TIME_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: NativeDateTimeAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: NativeDateTimeAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_LOCALE]\n                }] }, { type: i1$1.Platform }] });\n\nconst OWL_NATIVE_DATE_TIME_FORMATS = {\n    parseInput: null,\n    fullPickerInput: { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric' },\n    datePickerInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n    timePickerInput: { hour: 'numeric', minute: 'numeric' },\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n};\n\n/**\n * native-date-time.module\n */\nclass NativeDateTimeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: NativeDateTimeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.5\", ngImport: i0, type: NativeDateTimeModule, imports: [PlatformModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: NativeDateTimeModule, providers: [\n            { provide: DateTimeAdapter, useClass: NativeDateTimeAdapter },\n        ], imports: [PlatformModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: NativeDateTimeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [PlatformModule],\n                    providers: [\n                        { provide: DateTimeAdapter, useClass: NativeDateTimeAdapter },\n                    ],\n                }]\n        }] });\nclass OwlNativeDateTimeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlNativeDateTimeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlNativeDateTimeModule, imports: [NativeDateTimeModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlNativeDateTimeModule, providers: [{ provide: OWL_DATE_TIME_FORMATS, useValue: OWL_NATIVE_DATE_TIME_FORMATS }], imports: [NativeDateTimeModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: OwlNativeDateTimeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateTimeModule],\n                    providers: [{ provide: OWL_DATE_TIME_FORMATS, useValue: OWL_NATIVE_DATE_TIME_FORMATS }],\n                }]\n        }] });\n\n/**\n * unix-timestamp-date-time-adapter.class\n */\nclass UnixTimestampDateTimeAdapter extends DateTimeAdapter {\n    constructor(owlDateTimeLocale, platform) {\n        super();\n        this.owlDateTimeLocale = owlDateTimeLocale;\n        super.setLocale(owlDateTimeLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     */\n    static { this.search_ltr_rtl_pattern = '/[\\u200e\\u200f]/g'; }\n    static stripDirectionalityCharacters(str) {\n        return str.replace(UnixTimestampDateTimeAdapter.search_ltr_rtl_pattern, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     */\n    static _format(dtf, date) {\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n    addCalendarDays(date, amount) {\n        const result = new Date(date);\n        amount = Number(amount);\n        result.setDate(result.getDate() + amount);\n        return result.getTime();\n    }\n    addCalendarMonths(date, amount) {\n        const result = new Date(date);\n        amount = Number(amount);\n        const desiredMonth = result.getMonth() + amount;\n        const dateWithDesiredMonth = new Date(0);\n        dateWithDesiredMonth.setFullYear(result.getFullYear(), desiredMonth, 1);\n        dateWithDesiredMonth.setHours(0, 0, 0, 0);\n        const daysInMonth = this.getNumDaysInMonth(dateWithDesiredMonth.getTime());\n        // Set the last day of the new month\n        // if the original date was the last day of the longer month\n        result.setMonth(desiredMonth, Math.min(daysInMonth, result.getDate()));\n        return result.getTime();\n    }\n    addCalendarYears(date, amount) {\n        return this.addCalendarMonths(date, amount * 12);\n    }\n    clone(date) {\n        return date;\n    }\n    createDate(year, month, date, hours = 0, minutes = 0, seconds = 0) {\n        return createDate(year, month, date, hours, minutes, seconds).getTime();\n    }\n    differenceInCalendarDays(dateLeft, dateRight) {\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n            const dateLeftStartOfDay = this.createDate(this.getYear(dateLeft), this.getMonth(dateLeft), this.getDate(dateLeft));\n            const dateRightStartOfDay = this.createDate(this.getYear(dateRight), this.getMonth(dateRight), this.getDate(dateRight));\n            const timeStampLeft = this.getTime(dateLeftStartOfDay) -\n                new Date(dateLeftStartOfDay).getTimezoneOffset() *\n                    this.milliseondsInMinute;\n            const timeStampRight = this.getTime(dateRightStartOfDay) -\n                new Date(dateRightStartOfDay).getTimezoneOffset() *\n                    this.milliseondsInMinute;\n            return Math.round((timeStampLeft - timeStampRight) / this.millisecondsInDay);\n        }\n        else {\n            return null;\n        }\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('JSNativeDate: Cannot format invalid date.');\n        }\n        const jsDate = new Date(date);\n        if (SUPPORTS_INTL_API) {\n            if (this._clampDate &&\n                (jsDate.getFullYear() < 1 || jsDate.getFullYear() > 9999)) {\n                jsDate.setFullYear(Math.max(1, Math.min(9999, jsDate.getFullYear())));\n            }\n            displayFormat = { ...displayFormat, timeZone: 'utc' };\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return UnixTimestampDateTimeAdapter.stripDirectionalityCharacters(UnixTimestampDateTimeAdapter._format(dtf, jsDate));\n        }\n        return UnixTimestampDateTimeAdapter.stripDirectionalityCharacters(jsDate.toDateString());\n    }\n    getDate(date) {\n        return new Date(date).getDate();\n    }\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, {\n                day: 'numeric',\n                timeZone: 'utc'\n            });\n            return range(31, i => UnixTimestampDateTimeAdapter.stripDirectionalityCharacters(UnixTimestampDateTimeAdapter._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    getDay(date) {\n        return new Date(date).getDay();\n    }\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, {\n                weekday: style,\n                timeZone: 'utc'\n            });\n            return range(7, i => UnixTimestampDateTimeAdapter.stripDirectionalityCharacters(UnixTimestampDateTimeAdapter._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    getHours(date) {\n        return new Date(date).getHours();\n    }\n    getMinutes(date) {\n        return new Date(date).getMinutes();\n    }\n    getMonth(date) {\n        return new Date(date).getMonth();\n    }\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, {\n                month: style,\n                timeZone: 'utc'\n            });\n            return range(12, i => UnixTimestampDateTimeAdapter.stripDirectionalityCharacters(UnixTimestampDateTimeAdapter._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    getNumDaysInMonth(date) {\n        return getNumDaysInMonth(new Date(date));\n    }\n    getSeconds(date) {\n        return new Date(date).getSeconds();\n    }\n    getTime(date) {\n        return date;\n    }\n    getYear(date) {\n        return new Date(date).getFullYear();\n    }\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, {\n                year: 'numeric',\n                timeZone: 'utc'\n            });\n            return UnixTimestampDateTimeAdapter.stripDirectionalityCharacters(UnixTimestampDateTimeAdapter._format(dtf, new Date(date)));\n        }\n        return String(this.getYear(date));\n    }\n    invalid() {\n        return NaN;\n    }\n    isDateInstance(obj) {\n        return typeof obj === 'number';\n    }\n    isEqual(dateLeft, dateRight) {\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n            return dateLeft === dateRight;\n        }\n        else {\n            return false;\n        }\n    }\n    isSameDay(dateLeft, dateRight) {\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n            const dateLeftStartOfDay = new Date(dateLeft);\n            const dateRightStartOfDay = new Date(dateRight);\n            dateLeftStartOfDay.setHours(0, 0, 0, 0);\n            dateRightStartOfDay.setHours(0, 0, 0, 0);\n            return (dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime());\n        }\n        else {\n            return false;\n        }\n    }\n    isValid(date) {\n        return (date || date === 0) && !isNaN(date);\n    }\n    now() {\n        return new Date().getTime();\n    }\n    parse(value, parseFormat) {\n        // There is no way using the native JS Date to set the parse format or locale\n        if (typeof value === 'number') {\n            return value;\n        }\n        return value ? new Date(Date.parse(value)).getTime() : null;\n    }\n    setHours(date, amount) {\n        const result = new Date(date);\n        result.setHours(amount);\n        return result.getTime();\n    }\n    setMinutes(date, amount) {\n        const result = new Date(date);\n        result.setMinutes(amount);\n        return result.getTime();\n    }\n    setSeconds(date, amount) {\n        const result = new Date(date);\n        result.setSeconds(amount);\n        return result.getTime();\n    }\n    toIso8601(date) {\n        return new Date(date).toISOString();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: UnixTimestampDateTimeAdapter, deps: [{ token: OWL_DATE_TIME_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: UnixTimestampDateTimeAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.5\", ngImport: i0, type: UnixTimestampDateTimeAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_LOCALE]\n                }] }, { type: i1$1.Platform }] });\n\nconst OWL_UNIX_TIMESTAMP_DATE_TIME_FORMATS = {\n    parseInput: null,\n    fullPickerInput: { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric' },\n    datePickerInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n    timePickerInput: { hour: 'numeric', minute: 'numeric' },\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n};\n\n/**\n * picker\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CalendarCell, DateTimeAdapter, DateView, DefaultOptions, NativeDateTimeAdapter, OWL_DATETIME_VALIDATORS, OWL_DATETIME_VALUE_ACCESSOR$1 as OWL_DATETIME_VALUE_ACCESSOR, OWL_DATE_TIME_FORMATS, OWL_DATE_TIME_LOCALE, OWL_DATE_TIME_LOCALE_PROVIDER, OWL_UNIX_TIMESTAMP_DATE_TIME_FORMATS, OptionsTokens, OwlCalendarBodyComponent, OwlCalendarComponent, OwlDateTimeComponent, OwlDateTimeInlineComponent, OwlDateTimeInputDirective, OwlDateTimeIntl, OwlDateTimeModule, OwlDateTimeTriggerDirective, OwlMonthViewComponent, OwlMultiYearViewComponent, OwlNativeDateTimeModule, OwlTimerComponent, OwlYearViewComponent, UnixTimestampDateTimeAdapter, defaultOptionsFactory, multiYearOptionsFactory, optionsProviders };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE, OWL_DATE_TIME_FORMATS } from '@danielmoncada/angular-datetime-picker';\nimport dayjs from 'dayjs';\nimport localData from 'dayjs/plugin/localeData';\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat';\n\n/**\n * dayjs-date-time-adapter.class\n */\ndayjs.extend(LocalizedFormat);\ndayjs.extend(localData);\n/** InjectionToken for dayjs date adapter to configure options. */\nconst OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS = new InjectionToken('OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false,\n    };\n}\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\nclass DayjsDateTimeAdapter extends DateTimeAdapter {\n    constructor(owlDateTimeLocale, options) {\n        super();\n        this.owlDateTimeLocale = owlDateTimeLocale;\n        this.options = options;\n        this.setLocale(owlDateTimeLocale || dayjs().locale());\n    }\n    setLocale(locale) {\n        super.setLocale(locale);\n        const dayjsLocalData = dayjs().locale(locale).localeData();\n        this._localeData = {\n            longMonths: dayjsLocalData.months(),\n            shortMonths: dayjsLocalData.monthsShort(),\n            longDaysOfWeek: dayjsLocalData.weekdaysShort(),\n            shortDaysOfWeek: dayjsLocalData.weekdaysShort(),\n            narrowDaysOfWeek: dayjsLocalData.weekdaysMin(),\n            dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n        };\n    }\n    getYear(date) {\n        return this.clone(date).year();\n    }\n    getMonth(date) {\n        return this.clone(date).month();\n    }\n    getDay(date) {\n        return this.clone(date).day();\n    }\n    getDate(date) {\n        return this.clone(date).date();\n    }\n    getHours(date) {\n        return this.clone(date).hour();\n    }\n    getMinutes(date) {\n        return this.clone(date).minute();\n    }\n    getSeconds(date) {\n        return this.clone(date).second();\n    }\n    getTime(date) {\n        return this.clone(date).valueOf();\n    }\n    getNumDaysInMonth(date) {\n        return this.clone(date).daysInMonth();\n    }\n    differenceInCalendarDays(dateLeft, dateRight) {\n        return Math.ceil(dateLeft.startOf('day').diff(dateRight.startOf('day'), 'day', true));\n    }\n    getYearName(date) {\n        return date.format('YYYY');\n    }\n    getMonthNames(style) {\n        return style === 'long'\n            ? this._localeData.longMonths\n            : this._localeData.shortMonths;\n    }\n    getDayOfWeekNames(style) {\n        if (style === 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style === 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n    getDateNames() {\n        return this._localeData.dates;\n    }\n    toIso8601(date) {\n        return this.clone(date).toISOString();\n    }\n    isEqual(dateLeft, dateRight) {\n        return this.clone(dateLeft).isSame(this.clone(dateRight));\n    }\n    isSameDay(dateLeft, dateRight) {\n        return this.clone(dateLeft).isSame(this.clone(dateRight), 'day');\n    }\n    isValid(date) {\n        return this.clone(date).isValid();\n    }\n    invalid() {\n        return dayjs(NaN);\n    }\n    isDateInstance(obj) {\n        return dayjs.isDayjs(obj);\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The datepicker will call this method on all of it's `@Input()` properties that accept dates.\n     * It is therefore possible to support passing values from your backend directly to these properties by\n     * overriding this method to also deserialize the format used by your backend.\n     * In this dayjs adapter it accepts Dayjs objects or strings that can be input into the dayjs contructor (e.g. ISO 8601).\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            const constructedDayjs = dayjs(value);\n            return this.isValid(constructedDayjs)\n                ? constructedDayjs\n                : this.invalid();\n        }\n        else if (value == null ||\n            (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    addCalendarYears(date, amount) {\n        return this.clone(date).add(amount, 'year');\n    }\n    addCalendarMonths(date, amount) {\n        return this.clone(date).add(amount, 'month');\n    }\n    addCalendarDays(date, amount) {\n        return this.clone(date).add(amount, 'day');\n    }\n    setHours(date, amount) {\n        return this.clone(date).hour(amount);\n    }\n    setMinutes(date, amount) {\n        return this.clone(date).minute(amount);\n    }\n    setSeconds(date, amount) {\n        return this.clone(date).second(amount);\n    }\n    createDate(year, month, date, hours = 0, minutes = 0, seconds = 0) {\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        if (hours < 0 || hours > 23) {\n            throw Error(`Invalid hours \"${hours}\". Hours has to be between 0 and 23.`);\n        }\n        if (minutes < 0 || minutes > 59) {\n            throw Error(`Invalid minutes \"${minutes}\". Minutes has to between 0 and 59.`);\n        }\n        if (seconds < 0 || seconds > 59) {\n            throw Error(`Invalid seconds \"${seconds}\". Seconds has to be between 0 and 59.`);\n        }\n        let result = this.createDayjs(dayjs());\n        function trySetUnit(date, unitType, amount) {\n            if (amount >= 0) {\n                return date.set(unitType, amount);\n            }\n            return date;\n        }\n        result = trySetUnit(result, 'year', year);\n        result = trySetUnit(result, 'month', month);\n        result = trySetUnit(result, 'date', date);\n        result = trySetUnit(result, 'hour', hours);\n        result = trySetUnit(result, 'minute', minutes);\n        result = trySetUnit(result, 'second', seconds);\n        result.locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    clone(date) {\n        return this.createDayjs(date).clone().locale(this.locale);\n    }\n    now() {\n        return this.clone(dayjs());\n    }\n    format(date, displayFormat) {\n        return this.clone(date).format(displayFormat);\n    }\n    parse(value, parseFormat) {\n        return dayjs(value, parseFormat);\n    }\n    createDayjs(date) {\n        return date === null\n            ? dayjs(null, { utc: this.options.useUtc })\n            : dayjs(date, {\n                utc: this.options.useUtc,\n            });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DayjsDateTimeAdapter, deps: [{ token: OWL_DATE_TIME_LOCALE, optional: true }, { token: OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DayjsDateTimeAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DayjsDateTimeAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DATE_TIME_LOCALE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS]\n                }] }] });\n\nconst OWL_DAYJS_DATE_TIME_FORMATS = {\n    parseInput: 'l LT',\n    fullPickerInput: 'l LT',\n    datePickerInput: 'l',\n    timePickerInput: 'LT',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n};\n\n/**\n * dayjs-date-time.module\n */\nclass DayJsDateTimeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DayJsDateTimeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: DayJsDateTimeModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DayJsDateTimeModule, providers: [\n            {\n                provide: DateTimeAdapter,\n                useClass: DayjsDateTimeAdapter,\n                deps: [OWL_DATE_TIME_LOCALE, OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS]\n            },\n        ] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DayJsDateTimeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: DateTimeAdapter,\n                            useClass: DayjsDateTimeAdapter,\n                            deps: [OWL_DATE_TIME_LOCALE, OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS]\n                        },\n                    ],\n                }]\n        }] });\nclass OwlDayJsDateTimeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: OwlDayJsDateTimeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: OwlDayJsDateTimeModule, imports: [DayJsDateTimeModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: OwlDayJsDateTimeModule, providers: [{ provide: OWL_DATE_TIME_FORMATS, useValue: OWL_DAYJS_DATE_TIME_FORMATS }], imports: [DayJsDateTimeModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: OwlDayJsDateTimeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [DayJsDateTimeModule],\n                    providers: [{ provide: OWL_DATE_TIME_FORMATS, useValue: OWL_DAYJS_DATE_TIME_FORMATS }],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS, OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS_FACTORY, OwlDayJsDateTimeModule };\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport dayjs, { Dayjs } from 'dayjs';\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\r\nimport localeData from 'dayjs/plugin/localeData';\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\r\nimport utc from 'dayjs/plugin/utc';\r\nimport { classLog } from '../../../../shared/logging';\r\n\r\nexport interface MatDayjsDateAdapterOptions {\r\n  /**\r\n   * Turns the use of utc dates on or off.\r\n   * Changing this will change how Angular Material components like DatePicker output dates.\r\n   * @default false\r\n   */\r\n  useUtc?: boolean;\r\n}\r\n\r\n/** InjectionToken for Dayjs date adapter to configure options. */\r\nexport const MAT_DAYJS_DATE_ADAPTER_OPTIONS =\r\n  new InjectionToken<MatDayjsDateAdapterOptions>(\r\n    'MAT_DAYJS_DATE_ADAPTER_OPTIONS',\r\n    {\r\n      providedIn: 'root',\r\n      factory: () => ({\r\n        useUtc: true,\r\n      } satisfies MatDayjsDateAdapterOptions),\r\n    }\r\n  );\r\n\r\n// function MAT_DAYJS_DATE_ADAPTER_OPTIONS_FACTORY(): MatDayjsDateAdapterOptions {\r\n//   return {\r\n//     useUtc: false,\r\n//   } satisfies MatDayjsDateAdapterOptions;\r\n// }\r\n\r\n/**\r\n * This Date Adapter was inspired by @vanrossumict/material-dayjs-adapter\r\n * https://github.com/vanrossumict/material-dayjs-adapter/tree/localization/projects/material-dayjs-adapter\r\n * This adapter wasn't made as a fork because @vanrossumict/material-dayjs-adapter is a fork of @tabuckner/material-dayjs-adapter\r\n * witch since continued to be updated and forked so we didn't want to add to the complexity\r\n */\r\n@Injectable()\r\nexport class MatDayjsDateAdapter extends DateAdapter<Dayjs> {\r\n  \r\n  log = classLog({MatDayjsDateAdapter});\r\n\r\n  private localeData: {\r\n    firstDayOfWeek: number;\r\n    longMonths: string[];\r\n    shortMonths: string[];\r\n    dates: string[];\r\n    longDaysOfWeek: string[];\r\n    shortDaysOfWeek: string[];\r\n    narrowDaysOfWeek: string[];\r\n  };\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_DATE_LOCALE) public dateLocale: string,\r\n    @Optional() @Inject(MAT_DAYJS_DATE_ADAPTER_OPTIONS) private _options?: MatDayjsDateAdapterOptions\r\n  ) {\r\n    super();\r\n\r\n    this.log.a('constructor', { this: this, shouldUseUtc: this.shouldUseUtc, dateLocale, _options });\r\n    if (this.shouldUseUtc)\r\n      dayjs.extend(utc);\r\n\r\n    dayjs.extend(localizedFormat);\r\n    dayjs.extend(customParseFormat);\r\n    dayjs.extend(localeData);\r\n\r\n    this.setLocale(dayjs().locale());\r\n  }\r\n\r\n  /**\r\n   * @vanrossumict/material-dayjs-adapter didn't set dayjs locale in adapter but in the component in witch it was used\r\n   */\r\n  override setLocale(locale: string) {\r\n    super.setLocale(locale);\r\n    const l = this.log.fn('setLocale', { locale });\r\n\r\n    dayjs.locale(locale);\r\n    const localeData = dayjs().locale(locale).localeData();\r\n\r\n    this.localeData = {\r\n      firstDayOfWeek: localeData.firstDayOfWeek(),\r\n      longMonths: dayjs.months(),\r\n      shortMonths: dayjs.monthsShort(),\r\n      dates: this.range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\r\n      longDaysOfWeek: this.range(7, (i) => this.dayJs().set('day', i).format('dddd')),\r\n      shortDaysOfWeek: dayjs.weekdaysShort(),\r\n      narrowDaysOfWeek: dayjs.weekdaysMin(),\r\n    };\r\n    l.r(this.localeData);\r\n  }\r\n\r\n  override getYear(date: Dayjs): number {\r\n    return this.clone(date).year();\r\n  }\r\n\r\n  override getMonth(date: Dayjs): number {\r\n    return this.clone(date).month();\r\n  }\r\n\r\n  override getDate(date: Dayjs): number {\r\n    return this.clone(date).date();\r\n  }\r\n\r\n  override getDayOfWeek(date: Dayjs): number {\r\n    return this.clone(date).day();\r\n  }\r\n\r\n  override getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    return style === 'long'\r\n      ? this.localeData.longMonths\r\n      : this.localeData.shortMonths;\r\n  }\r\n\r\n  override getDateNames(): string[] {\r\n    return this.localeData.dates;\r\n  }\r\n\r\n  override getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (style === 'long') {\r\n      return this.localeData.longDaysOfWeek;\r\n    }\r\n    if (style === 'short') {\r\n      return this.localeData.shortDaysOfWeek;\r\n    }\r\n    return this.localeData.narrowDaysOfWeek;\r\n  }\r\n\r\n  override getYearName(date: Dayjs): string {\r\n    return this.clone(date).format('YYYY');\r\n  }\r\n\r\n  override getFirstDayOfWeek(): number {\r\n    return this.localeData.firstDayOfWeek;\r\n  }\r\n\r\n  override getNumDaysInMonth(date: Dayjs): number {\r\n    return this.clone(date).daysInMonth();\r\n  }\r\n\r\n  override clone(date: Dayjs): Dayjs {\r\n    return this.dayJs(date).clone(); //.locale(this.locale);\r\n  }\r\n\r\n  /**\r\n   * @vanrossumict/material-dayjs-adapter didn't set hours, minutes, seconds and milliseconds to zero but we expect\r\n   * dates to have time set as midnight\r\n   */\r\n  override createDate(year: number, month: number, date: number): Dayjs {\r\n    const returnDayjs = this.dayJs()\r\n      .set('year', year)\r\n      .set('month', month)\r\n      .set('date', date)\r\n      .set('hour', 0)\r\n      .set('minute', 0)\r\n      .set('second', 0)\r\n      .set('millisecond', 0);\r\n    return returnDayjs;\r\n  }\r\n\r\n  override today(): Dayjs {\r\n    return this.dayJs();\r\n  }\r\n\r\n  override parse(value: any, parseFormat: string): Dayjs | null {\r\n    const valueIsString = typeof value === 'string';\r\n    const l = this.log.fn('parse', { value, parseFormat, valueIsString });\r\n    if (value && valueIsString) {\r\n      const longDateFormat = dayjs().localeData().longDateFormat(parseFormat) as string; // MM/DD/YYY or DD-MM-YYYY, etc.\r\n\r\n      let parsed = this.dayJs(value, longDateFormat, this.locale, true);\r\n\r\n      if (parsed.isValid()) {\r\n        // string value is exactly like long date format\r\n        return parsed;\r\n      }\r\n\r\n      if (value.length === 9) {\r\n        // user might have typed 1-12-2020 or 12/1/2020\r\n        // try to parse with D-MM-YYYY or MM/D/YYYY (based on long date format)\r\n        const formatWithSmallDay = longDateFormat.replace('DD', 'D');\r\n        parsed = this.dayJs(value, formatWithSmallDay, this.locale, true);\r\n        if (parsed.isValid()) {\r\n          return parsed;\r\n        }\r\n\r\n        // user might have typed 25-1-2020 or 1/25/2020\r\n        // try to parse with DD-M-YYYY or M/DD/YYYY (based on long date format)\r\n        const formatWithSmallMonth = longDateFormat.replace('MM', 'M');\r\n        parsed = this.dayJs(value, formatWithSmallMonth, this.locale, true);\r\n        if (parsed.isValid()) {\r\n          return parsed;\r\n        }\r\n      }\r\n\r\n      if (value.length === 8) {\r\n        // user might have typed 24012020 or 01242020\r\n        // strip long date format of non-alphabetic characters so we get MMDDYYYY or DDMMYYYY\r\n        const formatWithoutSeparators = longDateFormat.replace(/[\\W_]+/g, '');\r\n        parsed = this.dayJs(value, formatWithoutSeparators, this.locale, true);\r\n        if (parsed.isValid()) {\r\n          return parsed;\r\n        }\r\n\r\n        // user might have typed 1-2-2020 or 2/1/2020\r\n        // try to parse with D-M-YYYY or M/D/YYYY (based on long date format)\r\n        const formatWithSmallDayAndMonth = longDateFormat.replace('DD', 'D').replace('MM', 'M');\r\n        parsed = this.dayJs(value, formatWithSmallDayAndMonth, this.locale, true);\r\n        if (parsed.isValid()) {\r\n          return parsed;\r\n        }\r\n      }\r\n\r\n      if (value.length < 6 && value.length > 2) {\r\n        // user might have typed 01/24, 24-01, 1/24, 24/1 or 24-1\r\n        // try to extract month and day part and parse them with custom format\r\n        let parts = new Array();\r\n        if (value.indexOf('/') !== -1) {\r\n          parts = value.split('/');\r\n        }\r\n        if (value.indexOf('-') !== -1) {\r\n          parts = value.split('-');\r\n        }\r\n        if (value.indexOf('.') !== -1) {\r\n          parts = value.split('.');\r\n        }\r\n        if (parts.length === 2) {\r\n          let dayPart: string;\r\n          let monthPart: string;\r\n          if (longDateFormat.startsWith('D')) {\r\n            dayPart = parts[0];\r\n            monthPart = parts[1];\r\n          } else if (parts.length > 1) {\r\n            monthPart = parts[0];\r\n            dayPart = parts[1];\r\n          }\r\n          if (monthPart.length === 1) {\r\n            monthPart = 0 + monthPart;\r\n          }\r\n          if (dayPart.length === 1) {\r\n            dayPart = 0 + dayPart;\r\n          }\r\n          parsed = this.dayJs(dayPart + monthPart, 'DDMM', this.locale, true);\r\n          if (parsed.isValid()) {\r\n            return parsed;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (value.length === 2) {\r\n        // user might have typed 01, parse DD only\r\n        const format = 'DD';\r\n        parsed = this.dayJs(value, format, this.locale, true);\r\n        if (parsed.isValid()) {\r\n          return parsed;\r\n        }\r\n      }\r\n\r\n      if (value.length === 1) {\r\n        // user might have typed 1, parse D only\r\n        const format = 'D';\r\n        parsed = this.dayJs(value, format, this.locale, true);\r\n\r\n        if (parsed.isValid()) {\r\n          return parsed;\r\n        }\r\n      }\r\n\r\n      // not able to parse anything sensible, return something invalid so input can be corrected\r\n      return this.dayJs(null);\r\n    }\r\n\r\n    return l.r(value ? this.dayJs(value).locale(this.locale) : null);\r\n  }\r\n\r\n  override format(date: Dayjs, displayFormat: string): string {\r\n    const l = this.log.fn('format', { date, displayFormat });\r\n    if (!this.isValid(date))\r\n      throw Error('DayjsDateAdapter: Cannot format invalid date.');\r\n    return l.r(date.locale(this.locale).format(displayFormat));\r\n  }\r\n\r\n  override addCalendarYears(date: Dayjs, years: number): Dayjs {\r\n    return date.add(years, 'year');\r\n  }\r\n\r\n  override addCalendarMonths(date: Dayjs, months: number): Dayjs {\r\n    return date.add(months, 'month');\r\n  }\r\n\r\n  override addCalendarDays(date: Dayjs, days: number): Dayjs {\r\n    return date.add(days, 'day');\r\n  }\r\n\r\n  override toIso8601(date: Dayjs): string {\r\n    return date.toISOString();\r\n  }\r\n\r\n  /**\r\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n   * string). The default implementation does not allow any deserialization, it simply checks that\r\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\r\n   * support passing values from your backend directly to these properties by overriding this method\r\n   * to also deserialize the format used by your backend.\r\n   * @param value The value to be deserialized into a date object.\r\n   * @returns The deserialized date object, either a valid date, null if the value can be\r\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n   */\r\n  override deserialize(value: any): Dayjs | null {\r\n    let date;\r\n    if (value instanceof Date) {\r\n      date = this.dayJs(value);\r\n    } else if (this.isDateInstance(value)) {\r\n      // NOTE: assumes that cloning also sets the correct locale.\r\n      return this.clone(value);\r\n    }\r\n    if (typeof value === 'string') {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n      date = (this.dayJs(value) as unknown as string);\r\n    }\r\n    if (date && this.isValid(date as Dayjs)) {\r\n      return this.dayJs(date);\r\n    }\r\n    return super.deserialize(value);\r\n  }\r\n\r\n  override isDateInstance(obj: any): boolean {\r\n    return dayjs.isDayjs(obj);\r\n  }\r\n\r\n  override isValid(date: Dayjs): boolean {\r\n    return this.clone(date).isValid();\r\n  }\r\n\r\n  override invalid(): Dayjs {\r\n    return this.dayJs(null);\r\n  }\r\n\r\n  /**\r\n   * @vanrossumict/material-dayjs-adapter didn't actually used this.shouldUseUtc function and no matter the chosen option\r\n   * no date used UTC\r\n   */\r\n  private dayJs(input?: string | number | Date | Dayjs | null | undefined, format?: string, locale?: string, isTyped?: boolean): Dayjs {\r\n    isTyped = isTyped || false;\r\n    if (!this.shouldUseUtc) {\r\n      return dayjs(input, format);\r\n    }\r\n    // when user writes date\r\n    if (typeof (input) === 'string') {\r\n      const date = new Date(dayjs(input, format).toDate());\r\n      // this is necessary because for typed dates time is set to midnight, not to the appropriate UTC time\r\n      if (isTyped) {\r\n        date.setUTCHours(date.getUTCHours() - date.getTimezoneOffset() / 60);\r\n      }\r\n      // this is necessary because for -(minus) timezones getDate returns date for previous day\r\n      if (date.getTimezoneOffset() > 0)\r\n        return dayjs(new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()))).add(1, 'day').utc();\r\n      return dayjs(new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()))).utc();\r\n    }\r\n    // when user picks date in date picker\r\n    return dayjs(input, format).utc();\r\n  }\r\n\r\n  private range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n    const valuesArray = Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n      valuesArray[i] = valueFunction(i);\r\n    }\r\n    return valuesArray;\r\n  }\r\n\r\n  private get shouldUseUtc(): boolean {\r\n    const { useUtc }: MatDayjsDateAdapterOptions = this._options || {};\r\n    return !!useUtc;\r\n  }\r\n}\r\n","import { MatDateFormats } from '@angular/material/core';\r\n\r\nconst DEFAULT_DATE_INPUT = 'l';\r\n\r\nexport const MAT_DAYJS_DATE_FORMATS: MatDateFormats = {\r\n  parse: {\r\n    dateInput: DEFAULT_DATE_INPUT,\r\n  },\r\n  display: {\r\n    dateInput: DEFAULT_DATE_INPUT,\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatDayjsDateAdapter, MAT_DAYJS_DATE_ADAPTER_OPTIONS } from './mat-dayjs-date-adapter'\r\nimport { MAT_DAYJS_DATE_FORMATS } from './mat-dayjs-date-formats';\r\nimport { OWL_DATE_TIME_FORMATS } from '@danielmoncada/angular-datetime-picker';\r\nimport { OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS, OwlDayJsDateTimeAdapterOptions } from '@danielmoncada/angular-datetime-picker-dayjs-adapter';\r\n\r\nconst OWL_DAYJS_FORMATS = {\r\n  parseInput: 'l LT',\r\n  fullPickerInput: 'l LT',\r\n  datePickerInput: 'l',\r\n  timePickerInput: 'LT',\r\n  monthYearLabel: 'MMM YYYY',\r\n  dateA11yLabel: 'LL',\r\n  monthYearA11yLabel: 'MMMM YYYY',\r\n};\r\n\r\n@NgModule({\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MAT_DAYJS_DATE_FORMATS },\r\n    { provide: MAT_DAYJS_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } },\r\n    {\r\n      provide: OWL_DATE_TIME_FORMATS,\r\n      useValue: OWL_DAYJS_FORMATS\r\n    },\r\n    {\r\n      // note 2dm: Believe this is used by the Owl DateTimeAdapter<Dayjs> to determine how to handle dates\r\n      provide: OWL_DAYJS_DATE_TIME_ADAPTER_OPTIONS,\r\n      useValue: { useUtc: true } satisfies OwlDayJsDateTimeAdapterOptions,\r\n    },\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MatDayjsDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_DAYJS_DATE_ADAPTER_OPTIONS]\r\n    }\r\n  ],\r\n})\r\nexport class MatDayjsModule { }\r\n","import { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { FieldSettings } from './../../../../../../../edit-types/src/FieldSettings';\r\n\r\nexport class DateTimeDefaultLogic extends FieldLogicBase {\r\n\r\n  constructor() { super({ DateTimeDefaultLogic }); }\r\n\r\n  update({ settings, tools }: FieldLogicUpdate<string[]>): FieldSettings {\r\n    const l = this.log.fn('update', { settings, tools });\r\n    const fixedSettings = settings;\r\n    return l.r(fixedSettings);\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(DateTimeDefaultLogic);\r\n","@if (!useTimePicker()) {\r\n  <!-- Date-Picker only - use the classic Angular-Material date picker -->\r\n  <mat-form-field [formGroup]=\"group\" color=\"accent\" class=\"eav-mat-form-field\">\r\n    <input\r\n      matInput\r\n      class=\"eav-translate-on-dblclick\"\r\n      [disabled]=\"ui().disabled\"\r\n      [matDatepicker]=\"picker\"\r\n      [placeholder]=\"basics().placeholder\"\r\n      [required]=\"basics().required\"\r\n      [value]=\"uiValue()\"\r\n      (dateChange)=\"updateValue($event)\"\r\n    />\r\n    <mat-datepicker-toggle matTextSuffix [for]=\"picker\" tippyTranslate=\"Fields.DateTime.Open\"> </mat-datepicker-toggle>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n    <mat-label>{{ basics().label }}</mat-label>\r\n  </mat-form-field>\r\n} @else {\r\n  <!-- Date & Time Picker - use the OWL picker (not ideal, but looks similar)  -->\r\n  <mat-form-field [formGroup]=\"group\" color=\"accent\" class=\"eav-mat-form-field\">\r\n    <input\r\n      matInput\r\n      class=\"eav-translate-on-dblclick\"\r\n      [disabled]=\"ui().disabled\"\r\n      [owlDateTime]=\"owlPicker\"\r\n      [placeholder]=\"basics().placeholder\"\r\n      [required]=\"basics().required\"\r\n      [value]=\"valueForTimePicker()\"\r\n      (dateTimeChange)=\"updateValue($event)\"\r\n    />\r\n    <mat-datepicker-toggle matTextSuffix [owlDateTimeTrigger]=\"owlPicker\" tippyTranslate=\"Fields.DateTime.Open\"> </mat-datepicker-toggle>\r\n    <owl-date-time #owlPicker></owl-date-time>\r\n    <mat-label>{{ basics().label }}</mat-label>\r\n  </mat-form-field>\r\n}\r\n<app-field-helper-text></app-field-helper-text>\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, computed, inject } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDatepickerInputEvent, MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { DateTimeAdapter, OwlDateTimeModule } from '@danielmoncada/angular-datetime-picker';\r\nimport { OwlDayJsDateTimeModule } from '@danielmoncada/angular-datetime-picker-dayjs-adapter';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport dayjs, { Dayjs } from 'dayjs';\r\nimport utc from 'dayjs/plugin/utc'; // 'neutral' time for OwlDateTime picker\r\nimport { FieldSettingsDateTime } from 'projects/edit-types/src/FieldSettings-DateTime';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { SignalEquals } from '../../../../shared/signals/signal-equals';\r\nimport { MatDayjsDateAdapter, MatDayjsModule } from '../../../shared/date-adapters/date-adapter-api';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { FieldState } from '../../field-state';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { DateTimeDefaultLogic } from './datetime-default-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.DateTimeDefault,\r\n  templateUrl: './datetime-default.component.html',\r\n  styleUrls: ['./datetime-default.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    OwlDateTimeModule,\r\n    FieldHelperTextComponent,\r\n    OwlDayJsDateTimeModule,\r\n    MatDayjsModule,\r\n    DatePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class DatetimeDefaultComponent {\r\n\r\n  log = classLog({DatetimeDefaultComponent});\r\n\r\n  protected fieldState = inject(FieldState) as FieldState<string, FieldSettings & FieldSettingsDateTime>;\r\n\r\n  protected group = this.fieldState.group;\r\n\r\n  protected ui = this.fieldState.ui;\r\n  uiValue = this.fieldState.uiValue;\r\n  protected basics = this.fieldState.basics;\r\n\r\n  protected useTimePicker = this.fieldState.settingExt('UseTimePicker');\r\n\r\n  /** The date/time picker needs the date-info cleaned up, so it doesn't do time-zone handling */\r\n  valueForTimePicker = computed(() => this.uiValue()?.replace('Z', ''), SignalEquals.string);\r\n\r\n  private matDayjsDateAdapter = transient(MatDayjsDateAdapter);\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private owlDayjsDateAdapter: DateTimeAdapter<Dayjs>,\r\n  ) {\r\n    dayjs.extend(utc); // 'neutral' time for OwlDateTime picker\r\n    const currentLang = this.translate.currentLang;\r\n    dayjs.locale(currentLang);\r\n    this.matDayjsDateAdapter.setLocale(currentLang);\r\n    this.owlDayjsDateAdapter.setLocale(currentLang);\r\n    DateTimeDefaultLogic.importMe();\r\n  }\r\n\r\n  updateValue(event: MatDatepickerInputEvent<Dayjs>) {\r\n    const newValue = event.value != null ? event.value.utc(true).toJSON() : null;\r\n    this.ui().setIfChanged(newValue);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.EmptyDefault,\r\n  template: '',\r\n  styleUrls: [],\r\n  standalone: true,\r\n})\r\nexport class EmptyDefaultComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","@if (basics().visible) {\r\n  <div class=\"message-box\" [innerHtml]=\"basics().notes | safeHtml\"></div>\r\n}\r\n","import { Component, inject } from '@angular/core';\r\nimport { FieldState } from '../../field-state';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { SafeHtmlPipe } from '../../../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.EmptyMessage,\r\n  templateUrl: './empty-message.component.html',\r\n  styleUrls: ['./empty-message.component.scss'],\r\n  standalone: true,\r\n  imports: [SafeHtmlPipe,],\r\n})\r\n// TODO: @2dm - remove empty FieldMetadata as not needed any more\r\n@FieldMetadata({ /* This is needed for the field to work */ })\r\nexport class EmptyMessageComponent {\r\n\r\n  protected fieldState = inject(FieldState);\r\n  protected basics = this.fieldState.basics;\r\n\r\n}\r\n","import { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsPickerMerged } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { FieldLogicManager } from '../../logic/field-logic-manager';\r\n\r\nexport class EntityContentBlocksLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.EntityContentBlocks;\r\n\r\n  constructor() { super({ EntityContentBlocksLogic }); }\r\n\r\n  update(specs: FieldLogicUpdate<string[]>): FieldSettings {\r\n    const entityDefaultLogic = FieldLogicManager.singleton().get(InputTypeCatalog.EntityDefault);\r\n    const fs = entityDefaultLogic.update(specs)  as FieldSettings & FieldSettingsPickerMerged;\r\n    fs.EnableRemove = true;\r\n    fs.AllowMultiValue = true;\r\n    fs.EnableAddExisting = false;\r\n    fs.EnableCreate = false;\r\n    fs.EnableEdit = false;\r\n    fs.Visible = false;\r\n\r\n    // Both the query type and create-type are the same\r\n    fs.EntityType = 'ContentGroupReference';\r\n    fs.CreateTypes = fs.EntityType;\r\n\r\n    return fs;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(EntityContentBlocksLogic);\r\n","\r\nexport class DataSourceHelpers {\r\n  /**\r\n   * remove HTML tags from a string, which possibly was created in a WYSIWYG\r\n   */\r\n  public stripHtml(stringWithHtml: string): string {\r\n    if (!stringWithHtml) return '';\r\n    if (!stringWithHtml.includes('<')) return stringWithHtml;\r\n    const div = document.createElement(\"div\");\r\n    div.innerHTML = stringWithHtml ?? '';\r\n    return div.innerText || '';\r\n  }\r\n}\r\n","import { EntityLight } from '../../../../../../../edit-types/src/EntityLight';\r\nimport { FeatureNames } from '../../../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../../../features/features-scoped.service';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { DataSourceHelpers } from './data-source-helpers';\r\nimport { DataSourceMasks } from './data-source-masks.model';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  data2PickerItem: false,\r\n  getMasks: false,\r\n  patchMasks: false,\r\n  parseMasks: false,\r\n  buildMasks: false,\r\n}\r\n\r\n/**\r\n * Helper class to process masks for a DataSource.\r\n * Masks are strings with placeholders, vs. just the name of the field to show.\r\n */\r\nexport class DataSourceMasksHelper {\r\n\r\n  log = classLog({ DataSourceMasksHelper }, logSpecs);\r\n\r\n  constructor(\r\n    private name: string,\r\n    private settings: DataSourceMaskSettings,\r\n    features: FeaturesScopedService,\r\n    private formConfig: FormConfigService,\r\n    parentLog: { enableChildren: boolean }, enableLog?: boolean\r\n  ) {\r\n    this.log.forceEnable(enableLog ?? parentLog.enableChildren ?? false);\r\n    this.#featInfoEnabled = features.allowUse[FeatureNames.PickerUiMoreInfo]();\r\n    this.#isDeveloper = formConfig.config.dialogContext.User?.IsSystemAdmin;\r\n    this.log.a('constructor - settings', { settings, infoEnabled: this.#featInfoEnabled });\r\n  }\r\n\r\n  #featInfoEnabled = false;\r\n  #featInfoWarned = false;\r\n  #isDeveloper = false;\r\n\r\n  #helpers = new DataSourceHelpers();\r\n\r\n  #masks: DataSourceMasks;\r\n\r\n  /** Convert an Entity data to Picker-Item, processing any masks */\r\n  data2PickerItem({ entity, streamName, valueMustUseGuid }\r\n    : { entity: EntityLight; streamName: string | undefined; valueMustUseGuid: boolean; }\r\n  ): PickerItem {\r\n\r\n    const l = this.log.fnIf('data2PickerItem', { entity, streamName, valueMustUseGuid });\r\n    // Check if we have masks, if yes\r\n    const masks = this.#getMasks();\r\n\r\n    // Figure out Value to use if we don't use masks - fallback is to use the Guid\r\n    const value = (() => {\r\n      if (valueMustUseGuid) return entity.Guid;\r\n\r\n      if (entity[masks.value] === undefined) return entity.Value;\r\n\r\n      const maybe = entity[masks.value];\r\n      // the value could be an empty string (pickers); not sure if it can be null though\r\n      return maybe !== undefined ? `${maybe}` : entity.Guid;\r\n    })();\r\n\r\n    // Figure out Title Value if we don't use masks - fallback is to use the title, or the value with asterisk\r\n    const label = (() => {\r\n      const maybeTitle = entity[masks.label];\r\n      return maybeTitle ? `${maybeTitle}` : entity.Title ? `${entity.Title}` : `${value}`; // If there is no title, use value with '*'\r\n    })();\r\n\r\n    const previewValue = (() => {\r\n      const maybePreview = entity[masks.previewValue];\r\n      if (maybePreview) return maybePreview;\r\n      return value;\r\n    })();\r\n\r\n    l.a('debug values', { masks, value, label, previewValue, hasPlaceholders: masks.hasPlaceholders });\r\n\r\n    // If we don't have masks, we are done\r\n    if (!masks.hasPlaceholders) {\r\n      const result: PickerItem = {\r\n        id: entity.Id,\r\n        entity: entity,\r\n        value,\r\n        previewValue,\r\n        label,\r\n        tooltip: masks.tooltip,\r\n        info: masks.info,\r\n        link: masks.link,\r\n        sourceStreamName: streamName ?? null,\r\n      };\r\n      return l.r(result, 'no masks');\r\n    }\r\n\r\n    // Prepare the masks\r\n    const fromMasks = this.#parseMasks(masks, entity);\r\n\r\n    // If the original was not a mask, look up the field\r\n    const finalLabel = masks.label.includes('[') ? fromMasks.label : label;\r\n\r\n    return l.r({\r\n      id: entity.Id,\r\n      entity: entity,\r\n      ...fromMasks,\r\n      value,\r\n      label: finalLabel,\r\n      sourceStreamName: streamName ?? null,\r\n    } as PickerItem, 'with masks');\r\n  }\r\n\r\n  /** Process all placeholders in all masks to get tooltip, info, link and title */\r\n  #parseMasks(masks: DataSourceMasks, data: Record<string, any>): Partial<PickerItem> {\r\n    const l = this.log.fnIf('parseMasks', { masks, data });\r\n    let label = masks.label;\r\n\r\n    // If we have placeholders, but the feature is not enabled, warn about it\r\n    if (!this.#featInfoWarned && !this.#featInfoEnabled && `${masks.tooltip}${masks.info}${masks.link}`.length > 0) {\r\n      const msgAddOn = this.#isDeveloper\r\n        ? `It is enabled for developers, but will be disabled for normal users until it's licensed.`\r\n        : '';\r\n      this.#featInfoWarned = true;\r\n    }\r\n    const useInfos = this.#featInfoEnabled || this.#isDeveloper;\r\n    let tooltip = useInfos ? masks.tooltip : '';\r\n    let info = useInfos ? masks.info : '';\r\n    let link = useInfos ? masks.link : '';\r\n    let previewValue = masks.previewValue;\r\n\r\n    Object.keys(data).forEach(key => {\r\n      // must check for null and use '' instead\r\n      const valueItem = data[key] ?? '';\r\n\r\n      // replace all occurrences of [Item:Key] with value - should be case insensitive\r\n      const search = new RegExp(`\\\\[Item:${key}\\\\]`, 'gi');\r\n\r\n      if (previewValue.includes(\"App:Path\")) {\r\n        // var x = ScriptsLoaderService.resolveUrlTokens(previewValue, this.formConfig.config)\r\n        const portalRoot = (this.formConfig.config.portalRoot).replace(/\\/$/, '');\r\n        const appUrl = portalRoot + this.formConfig.config.appRoot;\r\n        previewValue = previewValue.replace(\"[App:Path]\", appUrl);\r\n      }\r\n\r\n      tooltip = tooltip.replace(search, valueItem);\r\n      info = info.replace(search, valueItem);\r\n      link = link.replace(search, valueItem);\r\n      label = label.replace(search, valueItem);\r\n      previewValue = previewValue.replace(search, valueItem);\r\n    });\r\n\r\n    return l.r({ label, tooltip, info, link, previewValue } satisfies Partial<PickerItem>, 'result');\r\n  }\r\n\r\n  /** Get the mask - if possibly from current objects cache */\r\n  #getMasks() {\r\n    if (!!this.#masks) return this.#masks;\r\n    this.#masks = this.#buildMasks();\r\n    this.log.aIf('getMasks', { masks: this.#masks });\r\n    return this.#masks;\r\n  }\r\n\r\n  // TODO: WE can probably get rid of this now, by just supplying the setting on creation of the object\r\n  /** modify/patch the current objects mask */\r\n  public patchMasks(patch: Partial<DataSourceMasks>) {\r\n    this.#masks = { ...this.#getMasks(), ...patch };\r\n    this.log.aIf('patchMasks', { masks: this.#masks });\r\n  }\r\n\r\n  #buildMasks(): DataSourceMasks {\r\n    const settings = this.settings;\r\n    const l = this.log.fnIf('buildMasks', { settings });\r\n    // Figure out the masks\r\n    const tooltip = !!settings.ItemTooltip ? this.#helpers.stripHtml(settings.ItemTooltip) : '';\r\n    const info = !!settings.ItemInformation ? this.#helpers.stripHtml(settings.ItemInformation) : '';\r\n    const link = settings.ItemLink ?? '';\r\n    const label = settings.Label ?? '';\r\n    const value = settings.Value ?? '';\r\n    const previewValue = settings.PreviewValue ?? '';\r\n    const hasPlaceholders = (tooltip + info + link + label + previewValue).includes('[');\r\n    const result: DataSourceMasks = {\r\n      hasPlaceholders,\r\n      tooltip,\r\n      info,\r\n      link,\r\n      label,\r\n      value,\r\n      previewValue,\r\n    };\r\n\r\n    return l.r(result, 'result');\r\n  }\r\n\r\n}\r\n\r\ninterface DataSourceMaskSettings {\r\n  ItemTooltip: string;\r\n  ItemInformation: string;\r\n  ItemLink: string;\r\n  Label: string;\r\n  Value: string;\r\n  PreviewValue: string;\r\n}\r\n","import { FieldSettingsPicker, FieldSettingsPickerMasks } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { FieldSettingsWithPickerSource } from '../../../../../../../edit-types/src/PickerSources';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { RxHelpers } from '../../../../shared/rxJs/rx.helpers';\r\n\r\n/**\r\n * Helper class for data source, to figure out all the fields we need to retrieve from the server.\r\n */\r\nexport class DataSourceMoreFieldsHelper {\r\n  log = classLog({DataSourceMoreFieldsHelper});\r\n\r\n  fieldListToRetrieveFromServer(settings: FieldSettingsWithPickerSource): string {\r\n    this.log.a('fieldListToRetrieveFromServer', { settings });\r\n\r\n    const treeConfig = (settings as FieldSettingsWithPickerSource & FieldSettingsPicker).PickerTreeConfiguration;\r\n    const maskSettings = settings as FieldSettingsWithPickerSource & FieldSettingsPickerMasks;\r\n    const moreFields = maskSettings.MoreFields?.split(',') ?? [];\r\n    const queryFields = [maskSettings.Value, maskSettings.Label];\r\n    const treeFields = [\r\n      treeConfig?.TreeChildIdField,\r\n      treeConfig?.TreeParentIdField,\r\n      treeConfig?.TreeChildParentRefField,\r\n      treeConfig?.TreeParentChildRefField,\r\n    ];\r\n    const combinedFields = [...['Title', 'Id', 'Guid'], ...moreFields, ...queryFields, ...treeFields]\r\n      // extraction should happen in every field\r\n      .map(field => this.extractFieldNamesFromTokens(field, true)).flat();\r\n\r\n    const stringFields = [settings.ItemTooltip, settings.ItemInformation, settings.ItemLink]\r\n      .map(field => this.extractFieldNamesFromTokens(field, false)).flat();\r\n\r\n    // in the end, we should deduplicate the fields\r\n    const allFields = [...combinedFields, ...stringFields]\r\n      .filter(RxHelpers.distinct);\r\n\r\n    // merging into one long string\r\n    return allFields.join(',');\r\n  }\r\n\r\n\r\n  /**\r\n   * Parse a string to find out the field names in [Item:FieldName] format\r\n   *\r\n   * @param input input string\r\n   * @param enableSimpleFields enable simple fields\r\n   * @returns parsed fields\r\n   */\r\n  extractFieldNamesFromTokens(input: string, enableSimpleFields: boolean = true): string[] {\r\n    this.log.a('extractFieldNamesFromTokens', { input, enableSimpleFields });\r\n    const fields: string[] = [];\r\n\r\n    // 1.) skip processing on null or empty\r\n    if (!(input?.trim().length > 0)) return fields;\r\n\r\n    // 2.) some input parts could have a string such as \"[Item:Color] - [Item:Title]\"\r\n    // these should be extracted, so then we have \"Color\" and \"Title\"\r\n    const regex = /\\[Item:(\\S.*?)\\]/gi;\r\n    let match: RegExpExecArray | null;\r\n    while ((match = regex.exec(input)) !== null) {\r\n      const trimmedMatch = match[1].trim();\r\n      if (trimmedMatch) fields.push(trimmedMatch);\r\n    }\r\n\r\n    // 3.) optionaly, when input parts is simple field name, like \"Color\" - these should be used 1:1\r\n    // so nothing to do, just return input\r\n    if (enableSimpleFields && fields.length === 0) fields.push(input);\r\n\r\n    return fields;\r\n  }\r\n\r\n}\r\n","import { inject, Injectable, Signal } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsPickerMasks, FieldSettingsPickerMerged } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { FieldValue } from '../../../../../../../edit-types/src/FieldValue';\r\nimport { FieldSettingsWithPickerSource } from '../../../../../../../edit-types/src/PickerSources';\r\nimport { FeaturesScopedService } from '../../../../features/features-scoped.service';\r\nimport { classLog, ClassLogger } from '../../../../shared/logging';\r\nimport { RxHelpers } from '../../../../shared/rxJs/rx.helpers';\r\nimport { ServiceBase } from '../../../../shared/services/service-base';\r\nimport { signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { DebugFields } from '../../../edit-debug';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { FieldState } from '../../field-state';\r\nimport { PickerItem } from '../../picker/models/picker-item.model';\r\nimport { DataWithLoading } from '../models/data-with-loading';\r\nimport { DataSourceHelpers } from './data-source-helpers';\r\nimport { DataSourceMasksHelper } from './data-source-masks-helper';\r\nimport { DataSourceMoreFieldsHelper } from './data-source-more-fields-helper';\r\n\r\nexport const logSpecsDataSourceBase = {\r\n  all: false,\r\n  constructor: false,\r\n  data: false,\r\n  triggerGetAll: false,\r\n  addToRefresh: false,\r\n  fields: [...DebugFields],\r\n  newIconOptions: false,\r\n  fileLoadSettings: false,\r\n}\r\n\r\n@Injectable()\r\nexport abstract class DataSourceBase extends ServiceBase {\r\n\r\n  abstract log: ClassLogger<typeof logSpecsDataSourceBase>;\r\n\r\n  /** Field State with settings etc. */\r\n  protected fieldState = inject(FieldState) as FieldState<FieldValue, FieldSettingsWithPickerSource & FieldSettingsPickerMerged>;\r\n\r\n  /** For feature checks in the info/tooltip etc. of picker data */\r\n  protected features = inject(FeaturesScopedService);\r\n\r\n  /** To get info if the current user is a developer */\r\n  protected formConfig = inject(FormConfigService);\r\n\r\n  protected fieldName = this.fieldState.name;\r\n\r\n  constructor() { super(); }\r\n\r\n  constructorEnd() {\r\n    this.log ??= classLog({DataSourceBase});\r\n    this.log.aIf('constructor', { forField: this.fieldState.name });\r\n  }\r\n\r\n  /** Signal containing the data */\r\n  public data: Signal<PickerItem[]>;\r\n\r\n  /** Signal with loading-status */\r\n  public loading = signalObj('loading', true);\r\n\r\n  /** Toggle to trigger a full refresh. */\r\n  protected getAll$ = new BehaviorSubject<boolean>(false);\r\n  protected getAll = signalObj('getAll', false);\r\n\r\n  /**\r\n   * Force refresh of the entities with these guids.\r\n   * Typically for entities which are added or updated.\r\n   * Once an entity has run through any modification, it's safer to refresh it.\r\n   * Since it's difficult to know which ones have been cached or not,\r\n   * for now we'll just keep on retrieving all on each backend access.\r\n   * In future we may enhance this, but we must be sure that previous retrievals are preserved.\r\n   */\r\n  protected guidsToRefresh = signalObj<string[]>('guidsToRefresh', []);\r\n\r\n  protected settings = this.fieldState.settings;\r\n\r\n  protected noItemsLoadingFalse: DataWithLoading<PickerItem[]> = { data: [], loading: false };\r\n  protected noItemsLoadingTrue: DataWithLoading<PickerItem[]> = { data: [], loading: true };\r\n\r\n  public setup(): this { return this; }\r\n\r\n  ngOnDestroy(): void {\r\n    this.getAll$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected fieldsHelper = new DataSourceMoreFieldsHelper();\r\n\r\n  protected helpers = new DataSourceHelpers();\r\n\r\n  triggerGetAll(): void {\r\n    this.log.fnIf('triggerGetAll');\r\n    this.getAll$.next(true);\r\n    this.getAll.set(true);\r\n  }\r\n\r\n  addToRefresh(additionalGuids: string[]): void {\r\n    const l = this.log.fnIf('addToRefresh', { additionalGuids });\r\n    const before = this.guidsToRefresh();\r\n    const merged = [...before, ...additionalGuids].filter(RxHelpers.distinct);\r\n    l.values({ before, additionalGuids, merged });\r\n    this.guidsToRefresh.set(merged);\r\n    l.end();\r\n  }\r\n\r\n  protected createMaskHelper(moreSettings?: Partial<FieldSettings & FieldSettingsPickerMasks>, enableLog?: boolean): DataSourceMasksHelper {\r\n    return new DataSourceMasksHelper(this.fieldName, {...this.settings(), ...moreSettings }, this.features, this.formConfig, this.log, enableLog);\r\n  }\r\n\r\n  protected fieldsToRetrieve(settings: FieldSettingsWithPickerSource): string {\r\n    return this.fieldsHelper.fieldListToRetrieveFromServer(settings);\r\n  }\r\n\r\n}\r\n","import { Injectable, WritableSignal } from '@angular/core';\r\nimport { toObservable, toSignal } from '@angular/core/rxjs-interop';\r\nimport { Observable, combineLatest, distinctUntilChanged, filter, map, switchMap } from \"rxjs\";\r\nimport { transient } from '../../../../../../../core';\r\nimport { ClassLogger } from '../../../../shared/logging';\r\nimport { RxHelpers } from '../../../../shared/rxJs/rx.helpers';\r\nimport { QueryService } from '../../../../shared/services/query.service';\r\nimport { computedObj, signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { DataWithLoading } from '../models/data-with-loading';\r\nimport { PickerItem } from './../models/picker-item.model';\r\nimport { DataSourceBase, logSpecsDataSourceBase } from './data-source-base';\r\n\r\nexport const logSpecsDataSourceEntityQueryBase: typeof logSpecsDataSourceBase & any = {\r\n  ...logSpecsDataSourceBase,\r\n  all: true,\r\n  initPrefetch: false,\r\n  getFromBackend: false,\r\n  addToRefresh: false,\r\n  loadMoreIntoSignal: true,\r\n  ['loadMoreIntoSignal-data']: true,\r\n}\r\n\r\n/**\r\n * This is the base class for data-sources providing data from\r\n * - entities\r\n * - queries\r\n */\r\n@Injectable()\r\nexport abstract class DataSourceEntityQueryBase extends DataSourceBase {\r\n\r\n  //#region Inject and blank constructor\r\n\r\n  abstract log: ClassLogger<typeof logSpecsDataSourceEntityQueryBase>;\r\n\r\n  protected querySvc = transient(QueryService);\r\n\r\n  constructor() { super(); }\r\n\r\n  ngOnDestroy(): void {\r\n    this.getAll$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n  /**\r\n   * The params are either query-url params or the type-name.\r\n   * Implemented as observable, since all requests depend on observables.\r\n   * If there is ever an httpSignal service or something, then this should be migrated.\r\n   */\r\n  #typeOrParams = signalObj<string>('typeOrParams', null);\r\n  #typeOrParams$ = toObservable(this.#typeOrParams);\r\n  #paramsDebounced$ = this.#typeOrParams$.pipe(distinctUntilChanged());\r\n\r\n  /** Get the data from a query - all or only the ones listed in the guids */\r\n  protected abstract getFromBackend(params: string, guids: string[], purposeForLog: string) : Observable<DataWithLoading<PickerItem[]>>;\r\n\r\n\r\n  // /**\r\n  //  * Guids of items which _should_ be in the prefetched cache.\r\n  //  * It's an observable, since it's mostly used as that.\r\n  //  * There is also a corresponding signal.\r\n  //  * @memberof DataSourceEntityQueryBase\r\n  //  */\r\n  // private prefetchEntityGuids$ = new BehaviorSubject<string[]>([]);\r\n  // private prefetchEntityGuids = toSignal(this.prefetchEntityGuids$);\r\n\r\n  // /** Prefetch the data from the initially specified guids - from the prefetch-cache */\r\n  // protected _prefetch = toSignal(this.getPrefetchStream(), { initialValue: this.noItemsLoadingFalse });\r\n\r\n  // /**\r\n  //  * Guids of items which _should_ be refreshed from the backend.\r\n  //  * These are either prefetches which were missing in the cache,\r\n  //  * or items which have been updated or added.\r\n  //  * @memberof DataSourceEntityQueryBase\r\n  //  */\r\n  // private _guidsToForceLoad = computed(() => {\r\n  //   // Check if anything should be prefetched but was missing\r\n  //   // so we can retrieve it from the server\r\n  //   const alreadyFetched = this._prefetch();\r\n  //   const prefetchGuids = this.prefetchEntityGuids();\r\n  //   const notYetFetched = prefetchGuids.filter(guid => !alreadyFetched.data.find(item => item.value === guid));\r\n  //   const additionalGuids = this.guidsToRefresh();\r\n  //   const mergedDistinct = [...notYetFetched, ...additionalGuids].filter(RxHelpers.distinct);\r\n  //   this.log.a('guidsToForceLoad', { prefetchGuids, alreadyFetched, notYetFetched, additionalGuids, mergedDistinct });\r\n  //   return mergedDistinct;\r\n  // }, { equal: RxHelpers.arraysEqual });\r\n\r\n  // /**\r\n  //  * Overriding data items which should be added to the \"all\" list\r\n  //  * or replace the items in the \"all\" list.\r\n  //  * @memberof DataSourceEntityQueryBase\r\n  //  */\r\n  // private _overrides = toSignal(combineLatest([\r\n  //   this.paramsDebounced$,\r\n  //   toObservable(this._guidsToForceLoad)\r\n  // ]).pipe(\r\n  //   mergeMap(([params, guids]) => this.getFromBackend(params, guids, 'overrides')),\r\n  //   // preserve previous requests and stack on each other\r\n  //   pairwise(),\r\n  //   map(([old, current]) => {\r\n  //     const merged = [... new Map([...old.data, ...current.data].map(item => [item.value, item])).values()];\r\n  //     return { data: merged, loading: current.loading } as DataWithLoading<PickerItem[]>;\r\n  //   }),\r\n  //   shareReplay(1),\r\n  // ), { initialValue: this.noItemsLoadingFalse });\r\n\r\n  /**\r\n   * Signal containing \"all\" the data from the backend when not filtered.\r\n   * It's triggered for retrieval when\r\n   * - the params change (in many cases just at start, but sometimes ongoing eg. view-data picker)\r\n   * @memberof DataSourceEntityQueryBase\r\n   */\r\n  #all = toSignal(combineLatest([\r\n    this.#paramsDebounced$,\r\n    this.getAll$.pipe(distinctUntilChanged(), filter(getAll => !!getAll), map(x => [])),\r\n  ]).pipe(\r\n    // SwitchMap ensures that only the latest request is processed\r\n    // This is important if parameters change, so that the old request is not used\r\n    // Otherwise it can lead to scenarios where the old result is used, if the first request takes longer.\r\n    switchMap(([typeName]) => this.getFromBackend(typeName, [], 'getAll')),\r\n  ), { initialValue: this.noItemsLoadingFalse });\r\n\r\n  #prefetchNew = signalObj<DataWithLoading<PickerItem[]>>('prefetchNow', this.noItemsLoadingFalse);\r\n\r\n  /** Additional items which were updated after sub-edits */\r\n  #modified = signalObj<DataWithLoading<PickerItem[]>>('modified', this.noItemsLoadingFalse);\r\n\r\n  public override data = computedObj('data', () => {\r\n    const prefetch = this.#prefetchNew().data;\r\n    const all = this.#all().data;\r\n    const modified = this.#modified().data;\r\n    const data = [...new Map([...prefetch, ...all, ...modified].map(item => [item.value, item])).values()];\r\n    this.log.a('data', { prefetch, all, overrides: modified, data });\r\n    return data;\r\n  });\r\n\r\n  /** Signal with loading-status */\r\n  public override loading = computedObj('loading', () => this.#all().loading || this.#modified().loading) as any;\r\n\r\n  initPrefetch(entityGuids: string[]): void {\r\n    const l = this.log.fnIfInList('initPrefetch', 'fields', this.fieldName, { entityGuids });\r\n    const guids = entityGuids.filter(RxHelpers.distinct);\r\n    this.#loadMoreIntoSignal(this.#prefetchNew, guids, 'initPrefetch');\r\n  }\r\n\r\n  /** Set parameters for retrieval - either contentTypeName or query url parameters */\r\n  setParams(params: string): void {\r\n    this.log.fnIfInList('setParams', 'fields', this.fieldName, { params });\r\n    this.#typeOrParams.set(params);\r\n  }\r\n\r\n\r\n  public override addToRefresh(additionalGuids: string[]): void {\r\n    const l = this.log.fnIf('addToRefresh', { additionalGuids });\r\n    this.#loadMoreIntoSignal(this.#modified, additionalGuids, 'addToRefresh');\r\n    l.end();\r\n  }\r\n\r\n  #loadMoreIntoSignal(cache: WritableSignal<DataWithLoading<PickerItem[]>>, additionalGuids: string[], message: string): void {\r\n    const params = this.#typeOrParams();\r\n    const l = this.log.fnIfInList('loadMoreIntoSignal', 'fields', this.fieldName, { additionalGuids, params });\r\n    if (additionalGuids == null || additionalGuids.length === 0)\r\n      return l.end('no additional guids to load/refresh');\r\n\r\n    // get existing value and set loading to true\r\n    cache.update(before => ({ data: before.data, loading: true }));\r\n\r\n    this.getFromBackend(params, additionalGuids, message)\r\n      .subscribe(additions => {\r\n        const l = this.log.fn('loadMoreIntoSignal-data', { additionalGuids, additions });\r\n        const before = cache();\r\n        cache.update(before => ({\r\n          data: [...new Map([...before.data, ...additions.data].map(item => [item.value, item])).values()],\r\n          loading: false\r\n        }));\r\n        l.values({ before, additions: additions, merged: cache().data });\r\n      });\r\n    l.end();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from \"rxjs\";\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { DataWithLoading } from '../models/data-with-loading';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { DataSourceEntityQueryBase, logSpecsDataSourceEntityQueryBase } from './data-source-entity-query-base';\r\n\r\n@Injectable()\r\nexport class DataSourceAppAssets extends DataSourceEntityQueryBase {\r\n\r\n  log = classLog({ DataSourceAppAssets }, logSpecsDataSourceEntityQueryBase, true);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n  }\r\n\r\n  /**\r\n  * Get the data from the Query System.AppAssets/Default\r\n  */\r\n  protected override getFromBackend(_typeName: string, _guids: string[], purposeForLog: string): Observable<DataWithLoading<PickerItem[]>> {\r\n    const { AssetsRootFolder: rootFolder, AssetsFileFilter: fileFilter, AssetsType: type } = this.settings();\r\n\r\n    const l = this.log.fnIf('getFromBackend', null, purposeForLog);\r\n\r\n    const typeLower = (type ?? '').toLocaleLowerCase();\r\n    const stream = typeLower === 'all'\r\n      ? 'Default'\r\n        : typeLower === 'folders'\r\n          ? 'Folders'\r\n          : 'Files';\r\n\r\n    const data = this.querySvc.getFromQuery(`System.AppAssets/${stream}`, `rootFolder=${rootFolder}&filter=${fileFilter}`, '').pipe(\r\n      map(list => {\r\n        const fieldMask = this.createMaskHelper({ Value: 'Name' });\r\n        const data = list[stream].map(entity => fieldMask.data2PickerItem({ entity, streamName: stream, valueMustUseGuid: false }));\r\n        return { data, loading: false } as DataWithLoading<PickerItem[]>;\r\n      })\r\n    );\r\n    return l.r(data);\r\n  }\r\n\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { EntityLight } from '../../../../../../../edit-types/src/EntityLight';\r\n\r\nexport interface PickerItem {\r\n  /** The title to show in the dropdown */\r\n  label: string;\r\n\r\n  /** The value to store */\r\n  value: string;\r\n\r\n  /** TODO: @2dg later should be required */\r\n  /** The previewValue to Show (Icon, etc.) */\r\n  previewValue?: string;\r\n\r\n  /** Maybe the setting for the visualizer - eg. \"none\", \"text\", \"icon-font\", \"icon-svg\", \"image\" */\r\n  // previewType?: string;\r\n\r\n  /** The HTML to show in the preview */\r\n  previewHtml?: string;\r\n\r\n  /**\r\n   * The entity Id, only used to enable edit etc. if the item is an entity.\r\n   */\r\n  id?: number;\r\n\r\n  /**\r\n   * Prevent edit of this item for whatever reason, v15\r\n   * This property does not come from the server, but must be added by code.\r\n   */\r\n  noEdit?: boolean;\r\n\r\n  noRemove?: boolean;\r\n\r\n  /**\r\n   * Prevent delete of this item for whatever reason, v15\r\n   * This property does not come from the server, but must be added by code.\r\n   */\r\n  noDelete?: boolean;\r\n\r\n  /**\r\n   * Prevent select of this item for whatever reason, v16\r\n   * It was originally added so \"no query\" message will be shown in the dropdown.\r\n   * This property does not come from the server, but must be added by code.\r\n   *\r\n   * TODO: this is not quite correct, the UI seems to use and then look if re-select is allowed,\r\n   * but it's usually true for error messages...\r\n   */\r\n  noSelect?: boolean;\r\n\r\n\r\n  /**\r\n   * The tooltip that is seen on hover over item in the dropdown.\r\n   * This property does not come from the server, but must be added by code from the settings.\r\n   */\r\n  tooltip?: string;\r\n\r\n  /**\r\n   * The data that is seen on click on information icon on item in the dropdown.\r\n   * This property does not come from the server, but must be added by code from the settings.\r\n   */\r\n  info?: string;\r\n\r\n  /**\r\n   * The data that is seen on click on help icon on item in the dropdown.\r\n   * This property does not come from the server, but must be added by code from the settings.\r\n   */\r\n  link?: string;\r\n\r\n  /**\r\n   * The streamName is used for tree config when we have data from multiple streams and they have same Ids.\r\n   * This property does not come from the server, but must be added by code from the settings.\r\n   */\r\n  sourceStreamName?: string;\r\n\r\n  /**\r\n   * Indicate that this item is an error or message, which means it should not be selectable and it should\r\n   * also not be filtered out.\r\n   */\r\n  isMessage?: boolean;\r\n\r\n  /**\r\n   * The data of the underlying original entity.\r\n   * Used in formulas and field masks for all properties.\r\n   */\r\n  entity?: EntityLight;\r\n}\r\n\r\nexport class PickerItemFactory {\r\n\r\n  /** Generate a placeholder item to show in the list to show during loading or in case of error */\r\n  static placeholder(translate: TranslateService, i18nLabel: string, suffix?: string): PickerItem {\r\n    return {\r\n      label: translate.instant(i18nLabel) + (suffix ?? ''),\r\n      value: null,\r\n      noSelect: true,\r\n      isMessage: true,\r\n      noDelete: true,\r\n      noEdit: true,\r\n    } satisfies PickerItem;\r\n  }\r\n\r\n  /** Generate a placeholder item to show in the list to show during loading or in case of error */\r\n  static message(translate: TranslateService, i18nLabel: string, params?: object): PickerItem {\r\n    return {\r\n      label: translate.instant(i18nLabel, params),\r\n      value: null,\r\n      noSelect: true,\r\n      isMessage: true,\r\n      noDelete: true,\r\n      noEdit: true,\r\n    } satisfies PickerItem;\r\n  }\r\n}\r\n","import { Signal } from '@angular/core';\r\nimport { ClassLogger } from '../../../../shared/logging';\r\nimport { computedObj, signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { DebugFields } from '../../../edit-debug';\r\nimport { DataSourceBase } from '../data-sources/data-source-base';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { DeleteEntityProps } from '../models/picker.models';\r\nimport { PickerFeatures } from '../picker-features.model';\r\nimport { StateAdapter } from './state-adapter';\r\n\r\nexport abstract class DataAdapterBase {\r\n\r\n  /** Log Specs to be used as a basis for all inheriting classes */\r\n  static logSpecs = {\r\n    all: false,\r\n    setupEmpty: false,\r\n    connectState: false,\r\n    initPrefetch: false,\r\n    fetchItems: false,\r\n    constructor: false,\r\n    fields: [...DebugFields],\r\n  };\r\n\r\n  log: ClassLogger<typeof DataAdapterBase.logSpecs>;\r\n\r\n  constructor() { }\r\n\r\n  /** Picker Features of this DataAdapter - must be implemented by every data source to communicate it's features */\r\n  public abstract myFeatures: Signal<Partial<PickerFeatures>>;\r\n\r\n  /** a signal for data-sources - may not need a signal, if it's unchanging... */\r\n  public dataSource = signalObj<DataSourceBase>('dataSource', null satisfies DataSourceBase);\r\n\r\n  /**\r\n   * The options to show.\r\n   * Can be different from the underlying data, since it may have error or loading-entries.\r\n   * This is a signal, so it can be used in the template. it will _never_ be null.\r\n   */\r\n  public optionsOrHints: Signal<PickerItem[]> = computedObj('optionsOrHints', () => this.dataSource().data() ?? []);\r\n\r\n  public deleteCallback: (props: DeleteEntityProps) => void;\r\n\r\n  //#region Setup & Init\r\n\r\n  protected abstract dataSourceRaw: DataSourceBase;\r\n\r\n  public connectState(state: StateAdapter): this {\r\n    const l = this.log.fnIf('connectState');\r\n\r\n    this.dataSource.set(this.dataSourceRaw.setup());\r\n\r\n    this.deleteCallback = p => state.doAfterDelete(p);\r\n    return l.rSilent(this);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  /** Sync params - should be implemented eg. in Entity / Query */\r\n  abstract syncParams(): void;\r\n\r\n  onAfterViewInit(): void {\r\n    this.syncParams();\r\n  }\r\n\r\n  abstract initPrefetch(prefetchGuids: string[]): void;\r\n\r\n  abstract forceReloadData(missingData: string[]): void;\r\n\r\n  abstract deleteItem(props: DeleteEntityProps): void;\r\n\r\n  abstract editItem(editParams: { entityGuid: string, entityId: number }, entityType: string): void;\r\n\r\n  abstract fetchItems(): void;\r\n}\r\n","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { inject } from '@angular/core';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { take } from 'rxjs';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { FieldSettingsPickerMerged } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { FieldSettingsWithPickerSource } from '../../../../../../../edit-types/src/PickerSources';\r\nimport { EditForm, EditPrep } from \"../../../../../app/shared/models/edit-form.model\";\r\nimport { EntityService } from \"../../../../../app/shared/services/entity.service\";\r\nimport { ClassLogger } from '../../../../shared/logging/class/class-logger';\r\nimport { computedObj, signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { EntityFormStateService } from '../../../entity-form/entity-form-state.service';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { EditRoutingService } from '../../../routing/edit-routing.service';\r\nimport { FieldMask } from '../../../shared/helpers';\r\nimport { FieldState } from '../../field-state';\r\nimport { DataSourceEntityQueryBase } from '../data-sources/data-source-entity-query-base';\r\nimport { PickerItem, PickerItemFactory } from '../models/picker-item.model';\r\nimport { DeleteEntityProps } from \"../models/picker.models\";\r\nimport { PickerFeatures } from '../picker-features.model';\r\nimport { DataAdapterBase } from \"./data-adapter-base\";\r\n\r\nexport const logSpecsDataAdapterEntityBase = {\r\n  ...DataAdapterBase.logSpecs,\r\n  editItem: true,\r\n  getPrefill: true, // for create Entity & query\r\n};\r\n\r\nexport abstract class DataAdapterEntityBase extends DataAdapterBase {\r\n\r\n  //#region Services, constructor, log\r\n\r\n  log: ClassLogger<typeof DataAdapterBase.logSpecs> & ClassLogger<typeof logSpecsDataAdapterEntityBase>;\r\n\r\n  protected formConfig = inject(FormConfigService);\r\n  #editRoutingService = inject(EditRoutingService);\r\n  protected translate = inject(TranslateService);\r\n  #snackBar = inject(MatSnackBar);\r\n  protected fieldState = inject(FieldState) as FieldState<string[], FieldSettingsWithPickerSource & FieldSettingsPickerMerged>;\r\n  protected group = inject(EntityFormStateService).formGroup;\r\n  #entityService = transient(EntityService);\r\n\r\n  constructor() { super(); }\r\n\r\n  protected name = this.fieldState.name;\r\n\r\n  //#endregion\r\n\r\n  /**\r\n   * Content Type Mask\r\n   * This is a text or mask containing all query parameters.\r\n   * Since it's a mask, it can also contain values from the current item\r\n   */\r\n  #paramsMaskLazy = transient(FieldMask).initSignal('PickerSource-EntityType', this.fieldState.settingExt('EntityType'));\r\n\r\n  protected contentType = computedObj('contentType', () => this.#paramsMaskLazy?.result() ?? '');\r\n\r\n  #createEntityTypes = computedObj('createEntityTypes', () => this.fieldState.settings().CreateTypes);\r\n\r\n  /** The features depend on contentType names being available to support create */\r\n  public myFeatures = computedObj<Partial<PickerFeatures>>('features', () => {\r\n    // if we don't know the content-type, we can't create new entities\r\n    const disableCreate = !this.contentType() && !this.#createEntityTypes();\r\n    return { create: !disableCreate } satisfies Partial<PickerFeatures>;\r\n  });\r\n\r\n  // WIP\r\n  #deletedItemsGuids = signalObj<string[]>('deletedItemsGuids', []);\r\n\r\n  /* Error handling to use in the final options - ATM never really used, since we can't really trigger the problem it was meant for */\r\n  protected errorOptions = signalObj<PickerItem[]>('errorOptions', null);\r\n\r\n  /** The options/hints to show in the UI */\r\n  override optionsOrHints = computedObj('optionsOrHints', () => {\r\n    const errors = this.errorOptions();\r\n    if (errors) return errors;\r\n    const ds = this.dataSource();\r\n    const deleted = this.#deletedItemsGuids();\r\n    const items = ds.data().filter(item => !deleted.some(guid => guid === item.value));\r\n    return ds.loading()\r\n      ? [PickerItemFactory.message(this.translate, 'Fields.Picker.Loading'), ...items]\r\n      : items;\r\n  });\r\n\r\n  initPrefetch(prefetchGuids: string[]): void {\r\n    this.syncParams();\r\n    this.log.fnIfInList('initPrefetch', 'fields', this.name, { prefetchGuids });\r\n    (this.dataSource() as DataSourceEntityQueryBase).initPrefetch?.(prefetchGuids);\r\n  }\r\n\r\n  forceReloadData(missingData: string[]): void {\r\n    const l = this.log.fn('forceReloadData', { missingData });\r\n    this.dataSource().addToRefresh(missingData);\r\n    l.end();\r\n  }\r\n\r\n  // Note: 2dm 2023-01-24 added entityId as parameter #maybeRemoveGuidOnEditEntity\r\n  // not even sure if the guid would still be needed, as I assume the entityId\r\n  // should always be available.\r\n  // Must test all use cases and then probably simplify again.\r\n  editItem(editParams: { entityGuid: string, entityId: number }, entityType: string): void {\r\n    const l = this.log.fnIf('editItem', { editParams });\r\n    const editGuid = editParams?.entityGuid;\r\n    const formParams = this.#urlToObject(editGuid == null ? this.#createParams.result() : this.#editParams.result());\r\n    const form: EditForm = {\r\n      items: [\r\n        {\r\n          ...(editGuid == null)\r\n            ? EditPrep.newFromType(entityType ?? this.contentType(), this.#urlToObject(this.#prefill.result()))\r\n            : EditPrep.editId(this.optionsOrHints().find(item => item.value === editGuid)?.id ?? editParams.entityId),\r\n          ...( formParams ? { ClientData: { parameters: formParams } } : {} ),\r\n        },\r\n      ],\r\n    };\r\n    l.a('form', { form });\r\n    const config = this.fieldState.config;\r\n\r\n    // Open the form\r\n    this.#editRoutingService.open(config.index, config.entityGuid, form);\r\n\r\n    // Monitor for close to reload data\r\n    this.#editRoutingService.childFormClosed()\r\n      .pipe(take(1))\r\n      .subscribe(data => {\r\n        const l2 = this.log.fn('childFormClosed', { editGuid, data });\r\n        if (editGuid) {\r\n          this.forceReloadData([editGuid]);\r\n          return l2.end('forceReloadData', { editGuid });\r\n        }\r\n        l2.end(\"no guid, won't reload data\");\r\n      })\r\n    l.end();\r\n  }\r\n\r\n  deleteItem(props: DeleteEntityProps): void {\r\n    this.log.a('deleteItem', { props });\r\n    const entity = this.optionsOrHints().find(item => item.value === props.entityGuid);\r\n    const id = entity.id;\r\n    const title = entity.label;\r\n    const contentType = this.contentType();\r\n    const config = this.fieldState.config;\r\n    const parentId = config.entityId;\r\n    const parentField = config.fieldName;\r\n\r\n    const confirmed = confirm(this.translate.instant('Data.Delete.Question', { title, id }));\r\n    if (!confirmed) return;\r\n\r\n    this.#snackBar.open(this.translate.instant('Message.Deleting'));\r\n    this.#entityService.delete(this.formConfig.config.appId, contentType, id, false, parentId, parentField).subscribe({\r\n      next: () => {\r\n        this.#snackBar.open(this.translate.instant('Message.Deleted'), null, { duration: 2000 });\r\n        this.deleteCallback(props); // removes value from selected values\r\n        this.#deletedItemsGuids.update(p => [...p, props.entityGuid]);\r\n      },\r\n      error: (_: HttpErrorResponse) => {\r\n        this.#snackBar.dismiss();\r\n        if (!confirm(this.translate.instant('Data.Delete.Question', { title, id }))) return;\r\n        this.#snackBar.open(this.translate.instant('Message.Deleting'));\r\n        this.#entityService.delete(this.formConfig.config.appId, contentType, id, true, parentId, parentField).subscribe({\r\n          next: () => {\r\n            this.#snackBar.open(this.translate.instant('Message.Deleted'), null, { duration: 2000 });\r\n            this.deleteCallback(props); // removes value from selected values\r\n            this.#deletedItemsGuids.update(p => [...p, props.entityGuid]);\r\n          },\r\n          error: (_: HttpErrorResponse) => {\r\n            this.#snackBar.open(this.translate.instant('Message.DeleteError'), null, { duration: 2000 });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Will create a prefill object (if configured) which is based on a field-mask.\r\n   * This allows create-entity to use add prefills.\r\n   * ATM just normal values (text/number) or placeholders like [Title] work.\r\n   * In future we may add more features like dates etc.\r\n   * new 11.11.03\r\n   */\r\n  // #prefill = transient(FieldMask).initSignal('Prefill', this.fieldState.settingExt<FieldSettingsWithPickerSource, 'CreatePrefill'>('CreatePrefill'));\r\n  #prefill = transient(FieldMask).initSignal('Prefill', this.fieldState.settingExt('CreatePrefill'));\r\n  #createParams = transient(FieldMask).initSignal('CreateParams', this.fieldState.settingExt('CreateParameters'));\r\n  #editParams = transient(FieldMask).initSignal('CreateParams', this.fieldState.settingExt('EditParameters'));\r\n\r\n  // #getPrefillSetting() {\r\n  //   const maybe = this.fieldState.settingExt('CreatePrefill');\r\n  //   if (maybe()) return maybe;\r\n  //   return this.fieldState.settingExt('Prefill');\r\n  // }\r\n\r\n\r\n  #urlToObject(prefill: string) {\r\n    const l = this.log.fnIf('getPrefill', { prefill});\r\n    if (!prefill || !prefill.trim())\r\n      return l.r(null, 'empty');\r\n\r\n    // note: 2024-10-03 old code split for '\\n' but I had to add '&'\r\n    // not sure if the \\n is even relevant, so for now I'll remove it\r\n    const result = Object.fromEntries(\r\n      prefill.split('&')\r\n        .map(line => line.split('='))\r\n        .filter(parts => parts.length === 2 && parts[0] && parts[1])\r\n      ) as Record<string, string>;\r\n    \r\n    return l.r(result);\r\n    \r\n  }\r\n}\r\n\r\nexport interface LogSpecsDataAdapterEntityBase {\r\n  all: boolean;\r\n  connectState: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { classLog, ClassLogger } from '../../../../shared/logging';\r\nimport { DataSourceAppAssets } from '../data-sources/data-source-app-assets';\r\nimport { DataAdapterBase } from './data-adapter-base';\r\nimport { DataAdapterEntityBase, logSpecsDataAdapterEntityBase } from \"./data-adapter-entity-base\";\r\n\r\n/**\r\n * App Assets behave a lot like an entity-source,\r\n * since the internals are loaded from a query.\r\n */\r\n@Injectable()\r\nexport class DataAdapterAppAssets extends DataAdapterEntityBase {\r\n\r\n  log = classLog({DataAdapterAppAssets}, logSpecsDataAdapterEntityBase) as ClassLogger<typeof DataAdapterBase.logSpecs> & ClassLogger<typeof logSpecsDataAdapterEntityBase>;\r\n\r\n  protected dataSourceRaw = transient(DataSourceAppAssets);\r\n\r\n  constructor() { super(); }\r\n\r\n  override syncParams(): void { }\r\n\r\n  fetchItems(): void {\r\n    this.syncParams();\r\n    this.dataSource().triggerGetAll();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { EavWindow } from '../../../shared/models/eav-window.model';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { FormConfiguration } from '../../form/form-configuration.model';\r\nimport { UrlHelpers } from '../helpers';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  load: true,\r\n  sortByType: false,\r\n  insertToDom: false,\r\n};\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const FileTypeConstants = {\r\n  CSS: '.css',\r\n  JS: '.js',\r\n} as const;\r\n\r\ninterface LoadFile {\r\n  path: string;\r\n  type: string;\r\n  loaded: boolean;\r\n  domEl: HTMLLinkElement | HTMLScriptElement;\r\n}\r\n\r\n/**\r\n * Service for loading scripts and stylesheets dynamically for an edit form.\r\n * It must be different for each form, since it uses the form's configuration\r\n * to resolve paths pointing to the correct app, zone, etc.\r\n */\r\n@Injectable()\r\nexport class ScriptsLoaderService {\r\n\r\n  log = classLog({ScriptsLoaderService}, logSpecs);\r\n\r\n  #loadedFiles: LoadFile[] = [];\r\n\r\n  constructor(private formConfig: FormConfigService) { }\r\n\r\n  /** Loads CSS and JS files in order (CSS first) and calls callback function when finished */\r\n  load(scripts: string[], callback: () => void) {\r\n    this.log.fnIf('load', {scripts})\r\n    const sortedFiles = this.#sortByType(scripts);\r\n    this.#insertToDom(sortedFiles, callback, 0); // async, called again and again after each script is loaded\r\n  }\r\n\r\n  #sortByType(scripts: string[]): LoadFile[] {\r\n    this.log.fnIf('sortByType', {scripts})\r\n    const cssFiles: LoadFile[] = [];\r\n    const jsFiles: LoadFile[] = [];\r\n    scripts.forEach(script => {\r\n      const file: LoadFile = {\r\n        path: ScriptsLoaderService.resolveUrlTokens(script, this.formConfig.config),\r\n        type: null,\r\n        loaded: false,\r\n        domEl: null\r\n      };\r\n      if (file.path.endsWith(FileTypeConstants.CSS)) {\r\n        file.type = FileTypeConstants.CSS;\r\n        cssFiles.push(file);\r\n      } else if (file.path.endsWith(FileTypeConstants.JS)) {\r\n        file.type = FileTypeConstants.JS;\r\n        jsFiles.push(file);\r\n      }\r\n    });\r\n    return cssFiles.concat(jsFiles);\r\n  }\r\n\r\n  #insertToDom(files: LoadFile[], callback: () => void, increment: number) {\r\n    this.log.fnIf('insertToDom', {files, increment})\r\n    const file = files[increment];\r\n    increment++;\r\n    if (!file) {\r\n      callback();\r\n      return;\r\n    }\r\n    file.path = file.path + '?sxcver=' + window.sxcVersion; // break cache\r\n\r\n    const existing = this.#loadedFiles.find(loadedFile => loadedFile.path === file.path);\r\n    if (existing) {\r\n      if (existing.loaded) {\r\n        this.#insertToDom(files, callback, increment);\r\n      } else {\r\n        const _listener = () => {\r\n          file.loaded = true;\r\n          this.#insertToDom(files, callback, increment);\r\n          existing.domEl.removeEventListener('load', _listener);\r\n          existing.domEl.removeEventListener('error', _listener);\r\n        };\r\n        existing.domEl.addEventListener('load', _listener);\r\n        existing.domEl.addEventListener('error', _listener);\r\n      }\r\n    } else {\r\n      if (file.type === FileTypeConstants.CSS) {\r\n        file.domEl = document.createElement('link');\r\n        file.domEl.rel = 'stylesheet';\r\n        file.domEl.href = file.path;\r\n      } else if (file.type === FileTypeConstants.JS) {\r\n        file.domEl = document.createElement('script');\r\n        file.domEl.type = 'module';\r\n        file.domEl.src = file.path;\r\n      }\r\n\r\n      const _listener = () => {\r\n        file.loaded = true;\r\n        this.#insertToDom(files, callback, increment);\r\n        file.domEl.removeEventListener('load', _listener);\r\n        file.domEl.removeEventListener('error', _listener);\r\n      };\r\n      file.domEl.addEventListener('load', _listener);\r\n      file.domEl.addEventListener('error', _listener);\r\n\r\n      document.querySelector('head').appendChild(file.domEl);\r\n      this.#loadedFiles.push(file);\r\n    }\r\n  }\r\n\r\n  public static resolveUrlTokens(url: string, formConfig: FormConfiguration) {\r\n    return url.replace(/\\[System:Path\\]/i, UrlHelpers.getUrlPrefix('system', formConfig))\r\n      .replace(/\\[Zone:Path\\]/i, UrlHelpers.getUrlPrefix('zone', formConfig))\r\n      .replace(/\\[App:Path\\]/i, UrlHelpers.getUrlPrefix('app', formConfig))\r\n      .replace(/\\[App:PathShared\\]/i, UrlHelpers.getUrlPrefix('appShared', formConfig));\r\n  }\r\n}\r\n","import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n","import escapeRegExp from 'lodash-es/escapeRegExp';\r\nimport { EntityLight } from '../../../../../../../../edit-types/src/EntityLight';\r\nimport { classLog } from '../../../../../shared/logging/logging';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  findAllIconsInCss: false,\r\n};\r\n\r\n/** Calculates available css classes with className prefix. WARNING: Expensive operation */\r\nexport function findAllIconsInCss(cssSelector: string, showPrefix?: boolean): EntityLight[] {\r\n\r\n  const log = classLog({ findAllIconsInCss }, logSpecs);\r\n\r\n  const l = log.fnIf('findAllIconsInCss', { cssSelector, showPrefix });\r\n\r\n  if (!cssSelector)\r\n    return [];\r\n\r\n  const regEx = buildRegEx(cssSelector);\r\n  console.warn(regEx)\r\n\r\n  const allRules = getAllCssRules();\r\n  const foundList: IconOption[] = [];\r\n  const duplicateDetector: Record<string, boolean> = {};\r\n  for (const rules of allRules) {\r\n    const allRulesWithSelector = (Array.from(rules) as CSSStyleRule[])\r\n      .filter(rule => rule.selectorText);\r\n\r\n    for (const rule of allRulesWithSelector) {\r\n      // The full selector text, such as \".fa-x-ray:before\"\r\n      // Note that ATM we're still looking for icons, which is probably not the final solution\r\n      const selector = rule.selectorText;\r\n\r\n      // Reset the regex, otherwise it will only work every second time\r\n      // https://medium.com/codesnips/js-careful-when-reusing-regex-636b92c6bf07\r\n      regEx.lastIndex = 0;\r\n      const groups = regEx.exec(selector)?.groups;\r\n\r\n      // Skip if not found\r\n      if (!groups)\r\n        continue;\r\n      \r\n      console.log('regExed', groups.Value, groups.ValueRaw, groups.Title);\r\n\r\n      const iconClass = groups.ValueRaw;\r\n\r\n      if (duplicateDetector[iconClass]) continue;\r\n\r\n      foundList.push({\r\n        Id: null,\r\n        Guid: null,\r\n        Rule: rule,\r\n        ...groups as { Value: string, ValueRaw: string, Title: string },\r\n        Selector: selector,\r\n      });\r\n      duplicateDetector[iconClass] = true;\r\n    }\r\n  }\r\n\r\n  l.a('findAllIconsInCss', { classPrefix: cssSelector, showPrefix, foundList });\r\n\r\n  return l.r(foundList);\r\n}\r\n\r\nconst fallbackRegex = `(?<ValueRaw>\\\\.(?<Value>(?<Title>[\\\\-a-zA-Z0-9]+)))[:,\\{}]`;\r\nconst fontAwesomeRegex = `(?<ValueRaw>\\\\.(?<Value>fa-(?<Title>[\\\\-a-zA-Z0-9]+))):`;\r\n\r\nfunction buildRegEx(cssSelector: string): RegExp {\r\n  if (!cssSelector)\r\n    return new RegExp(fallbackRegex);\r\n\r\n  // If it contains a <, it's a regex with the names, so use that, but be sure to double-escape the backslashes\r\n  if (cssSelector.includes('<'))\r\n    return new RegExp(cssSelector, 'g');\r\n\r\n  // It's just a starts with, so create the default regex\r\n  const regEx = buildRegExFromPrefixAndSuffix(cssSelector, '[:\\{,]');\r\n\r\n  return new RegExp(regEx, 'g');\r\n}\r\n\r\nexport function buildRegExFromPrefixAndSuffix(prefix: string, suffix: string): string {\r\n  if (!prefix) return '';\r\n  const valueRaw = buildRegExFromPrefix(prefix);\r\n  const withEnding = `${valueRaw}${suffix}`;\r\n  return withEnding;\r\n}\r\n\r\nfunction buildRegExFromPrefix(prefix: string): string {\r\n  if (!prefix)\r\n    return '';\r\n\r\n  // Capturing group called \"Title\" containing the main part of the capture\r\n  const titlePart = '(?<Title>[\\\\-a-zA-Z0-9]+)';\r\n  // Check if it has a dot, which we don't want in the Value, but we want in the ValueRaw\r\n  const startedWithDot = prefix.startsWith('.');\r\n  const cssSelectorPart = startedWithDot ? prefix.substring(1) : prefix;\r\n\r\n  // Capturing group with name Value\r\n  const valuePart = `(?<Value>${escapeRegExp(cssSelectorPart)}${titlePart})`;\r\n\r\n  // If it started with a dot, we want to capture the dot as well\r\n  const valueWithPrefix = startedWithDot ? `${escapeRegExp('.')}${valuePart}` : valuePart;\r\n  // Capturing group with name ValueRaw\r\n  const valueRaw = `(?<ValueRaw>${valueWithPrefix})`;\r\n  return valueRaw;\r\n}\r\n\r\n\r\nfunction getAllCssRules(): CSSRuleList[] {\r\n  const allRules: CSSRuleList[] = Array.from(document.styleSheets)\r\n    .map(getCssRules)\r\n    .filter(Boolean);\r\n  return allRules;\r\n}\r\n\r\nfunction getCssRules(sheet: CSSStyleSheet): CSSRuleList {\r\n  if (!sheet) return null;\r\n  \r\n  // Try old browser API (officially deprecated)\r\n  try {\r\n    return sheet.rules;\r\n  } catch (error) { /* errors happens if browser denies access to css rules */ }\r\n\r\n  // Try newer browser API\r\n  try {\r\n    return sheet.cssRules;\r\n  } catch (error) { /* errors happens if browser denies access to css rules */ }\r\n\r\n  return null;\r\n}\r\n\r\n\r\nexport interface IconOption extends EntityLight {\r\n  Rule: CSSRule;\r\n  /** The Class - which is the main value we're picking */\r\n  Value: string;\r\n  /** Label for showing in the dropdown */\r\n  Title: string;\r\n\r\n  /** Optional: Icon class for new Picker */\r\n  ValueRaw?: string;\r\n  Selector?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityLight } from 'projects/edit-types/src/EntityLight';\r\nimport { getWith } from '../../../../../../../core/object-utilities';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { computedObj, signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { ScriptsLoaderService } from '../../../shared/services/scripts-loader.service';\r\nimport { findAllIconsInCss } from './css/string-font-icon-picker.helpers';\r\nimport { DataSourceBase, logSpecsDataSourceBase } from './data-source-base';\r\nimport { DataSourceMasksHelper } from './data-source-masks-helper';\r\n\r\nconst logSpecs = {\r\n  ...logSpecsDataSourceBase,\r\n  data: false,\r\n  newIconOptions: true,\r\n  fileLoadSettings: false,\r\n  fields: [...logSpecsDataSourceBase.fields, '*'],\r\n};\r\n\r\n@Injectable()\r\nexport class DataSourceCss extends DataSourceBase {\r\n\r\n  log = classLog({ DataSourceCss }, logSpecs, true);\r\n\r\n  constructor(private scriptsLoaderService: ScriptsLoaderService) {\r\n    super();\r\n    this.constructorEnd();\r\n    this.log.fnIf('fileLoadSettings', this.fileLoadSettings());\r\n\r\n    const settings = this.fileLoadSettings();\r\n    this.scriptsLoaderService.load(settings.CssSourceFile.split('\\n'), () => {\r\n      const newIconOptions = findAllIconsInCss(settings.CssSelectorFilter, false);\r\n      this.log.fnIf('newIconOptions', { settings, newIconOptions });\r\n      this.#iconEntities.set(newIconOptions);\r\n    });\r\n\r\n  }\r\n\r\n  loading = signalObj('loading', false);\r\n\r\n  #settings = this.fieldState.settings;\r\n  #iconEntities = signalObj<EntityLight[]>('iconOptions', []);\r\n\r\n  fileLoadSettings = computedObj('fileLoadSettings', () => getWith(this.#settings(), s => ({\r\n    CssSourceFile: s.CssSourceFile,\r\n    CssSelectorFilter: s.CssSelectorFilter,\r\n    PreviewValue: s.PreviewValue,\r\n    Value: s.Value,\r\n  })));\r\n\r\n\r\n\r\n  #dataMaskHelper = (() => {\r\n    // Make sure the converter/builder uses the \"Value\" field for the final 'value'\r\n    const s = this.settings();\r\n    const maskHelper = new DataSourceMasksHelper(this.fieldName, { ...s, Label: s.Label || 'Value' }, this.features, this.formConfig, this.log);\r\n    return maskHelper;\r\n  })();\r\n\r\n  data = computedObj('data', () => {\r\n\r\n    const options = this.#iconEntities();\r\n    const maskHelper = this.#dataMaskHelper;\r\n\r\n    const l = this.log.fnIfInList('data', 'fields', this.fieldName, { options, maskHelper });\r\n\r\n    const result = options.map(entity => {\r\n      const pickerItem = maskHelper.data2PickerItem({ entity, streamName: null, valueMustUseGuid: false });\r\n      l.a('one item', { entity, pickerItem });\r\n      return pickerItem;\r\n    });\r\n    return l.r(result);\r\n  })\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { DataSourceCss } from \"../data-sources/data-source-css\";\r\nimport { DeleteEntityProps } from \"../models/picker.models\";\r\nimport { PickerFeatures } from '../picker-features.model';\r\nimport { DataAdapterBase } from \"./data-adapter-base\";\r\n\r\n@Injectable()\r\nexport class DataAdapterCss extends DataAdapterBase {\r\n\r\n  log = classLog({ DataAdapterCss }, DataAdapterBase.logSpecs);\r\n\r\n  protected dataSourceRaw = transient(DataSourceCss);\r\n\r\n  constructor() {\r\n    super();\r\n    this.log.fnIf('constructor');\r\n  }\r\n\r\n  public myFeatures = signalObj('features', { edit: false, create: false, delete: false, } satisfies Partial<PickerFeatures>);\r\n\r\n  /** should never be needed as we have synchronously all data in settings */\r\n  override initPrefetch(prefetchGuids: string[]): void { }\r\n\r\n  /** should never be needed as we can't add new data */\r\n  override forceReloadData(missingData: string[]): void { }\r\n\r\n  override syncParams(): void { };\r\n\r\n  fetchItems(): void {\r\n    this.log.fnIf('fetchItems');\r\n    this.dataSource().triggerGetAll();\r\n  }\r\n\r\n  deleteItem(props: DeleteEntityProps): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  editItem(editParams: { entityGuid: string; entityId: number; }, entityType: string): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n}\r\n","import { DataSourceBase } from './data-source-base';\r\nimport { Injectable } from '@angular/core';\r\nimport { signalObj, computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { classLog } from '../../../../shared/logging';\r\n\r\n/**\r\n * This is the data-source we plan to attach when a picker is not configured.\r\n * It should only show the information that it's not configured.\r\n */\r\n@Injectable()\r\nexport class DataSourceEmpty extends DataSourceBase {\r\n\r\n  log = classLog({DataSourceEmpty});\r\n\r\n  constructor() { super(); this.constructorEnd() }\r\n  \r\n  loading = signalObj('loading', false);\r\n\r\n  #label = signalObj('label', `something is wrong - using DataSourceEmpty`);\r\n\r\n  public preSetup(label: string): this {\r\n    this.#label.set(label);\r\n    return this;\r\n  }\r\n\r\n  public override data = computedObj('data', () => [{\r\n    value: '',\r\n    label: this.#label() ?? 'No options available',\r\n    notSelectable: true,\r\n    isMessage: true,\r\n  }]);\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { DataSourceEmpty } from '../data-sources/data-source-empty';\r\nimport { DeleteEntityProps } from \"../models/picker.models\";\r\nimport { PickerFeatures } from '../picker-features.model';\r\nimport { DataAdapterBase } from \"./data-adapter-base\";\r\nimport { StateAdapter } from './state-adapter';\r\n\r\n@Injectable()\r\nexport class DataAdapterEmpty extends DataAdapterBase {\r\n\r\n  log = classLog({DataAdapterEmpty}, DataAdapterBase.logSpecs);\r\n\r\n  protected dataSourceRaw = transient(DataSourceEmpty);\r\n\r\n  constructor() { super();}\r\n\r\n  public myFeatures = signalObj('features', { edit: false, create: false, delete: false, } satisfies Partial<PickerFeatures>);\r\n\r\n  public override connectState(state: StateAdapter): this {\r\n    this.dataSourceRaw.preSetup(\"Error: configuration missing\");\r\n    return super.connectState(state);\r\n  }\r\n\r\n  public setupEmpty(): this {\r\n    const l = this.log.fnIf('setupEmpty');\r\n    this.dataSource.set(this.dataSourceRaw.preSetup(\"Error: configuration missing\"));\r\n    return l.rSilent(this);\r\n  }\r\n\r\n  /** should never be needed as we have synchronously all data in settings */\r\n  override initPrefetch(prefetchGuids: string[]): void { }\r\n\r\n  /** should never be needed as we can't add new data */\r\n  override forceReloadData(missingData: string[]): void { }\r\n\r\n  override syncParams(): void { };\r\n\r\n  fetchItems(): void {\r\n    this.log.a('fetchItems');\r\n    this.dataSource().triggerGetAll();\r\n  }\r\n\r\n  deleteItem(props: DeleteEntityProps): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  editItem(editParams: { entityGuid: string; entityId: number; }, entityType: string): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from \"rxjs\";\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { DataWithLoading } from '../models/data-with-loading';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { DataSourceEntityQueryBase, logSpecsDataSourceEntityQueryBase } from './data-source-entity-query-base';\r\n\r\n@Injectable()\r\nexport class DataSourceEntity extends DataSourceEntityQueryBase {\r\n\r\n  log = classLog({ DataSourceEntity }, logSpecsDataSourceEntityQueryBase);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n  }\r\n\r\n  /**\r\n   * Get the data from the backend using the built-in get-Entities query\r\n   */\r\n  protected override getFromBackend(typeName: string, guids: string[], purposeForLog: string): Observable<DataWithLoading<PickerItem[]>> {\r\n    const fields = this.fieldsToRetrieve(this.settings());\r\n    var l = this.log.fnIf('getFromBackend', { typeName, guids, fields }, purposeForLog);\r\n    return this.querySvc.getEntities({ contentTypes: [typeName], itemIds: guids, fields, log: this.log.name })\r\n      .pipe(\r\n        // tap(list => l.a('getEntities', { typeName, list })),\r\n        map(list => {\r\n          const fieldMask = this.createMaskHelper();\r\n          const data = list.Default.map(entity => fieldMask.data2PickerItem({ entity, streamName: null, valueMustUseGuid: true }));\r\n          return { data, loading: false } as DataWithLoading<PickerItem[]>;\r\n        }),\r\n      )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { classLog, ClassLogger } from '../../../../shared/logging';\r\nimport { DataSourceEntity } from \"../data-sources/data-source-entity\";\r\nimport { DataAdapterBase } from './data-adapter-base';\r\nimport { DataAdapterEntityBase, logSpecsDataAdapterEntityBase } from \"./data-adapter-entity-base\";\r\n\r\n@Injectable()\r\nexport class DataAdapterEntity extends DataAdapterEntityBase {\r\n\r\n  log = classLog({DataAdapterEntity}, logSpecsDataAdapterEntityBase) as ClassLogger<typeof DataAdapterBase.logSpecs> & ClassLogger<typeof logSpecsDataAdapterEntityBase>;\r\n\r\n  protected dataSourceRaw = transient(DataSourceEntity);\r\n\r\n  constructor() { super(); }\r\n\r\n  override syncParams(): void {\r\n    this.dataSourceRaw.setParams(this.contentType());\r\n  }\r\n\r\n  fetchItems(): void {\r\n    this.syncParams();\r\n    this.dataSource().triggerGetAll();\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { Observable, map, of } from \"rxjs\";\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { QueryStreams } from '../../../../shared/models/query-stream.model';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { DataWithLoading } from '../models/data-with-loading';\r\nimport { PickerItem, PickerItemFactory } from '../models/picker-item.model';\r\nimport { DataSourceEntityQueryBase, logSpecsDataSourceEntityQueryBase } from './data-source-entity-query-base';\r\n\r\n// TODO: NEXT STEPS\r\n// 5. afterwards check all edge cases.\r\n// - EG. not aggressively loading\r\n// - eg changes to data (edits)\r\n// - deletes - NOT QUITE WORKING ATM\r\n// - I believe some kind of clean-up is still necessary...?\r\n\r\n@Injectable()\r\nexport class DataSourceQuery extends DataSourceEntityQueryBase {\r\n\r\n  log = classLog({DataSourceQuery}, logSpecsDataSourceEntityQueryBase);\r\n\r\n  #translate = inject(TranslateService);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n  }\r\n\r\n  protected formState = inject(FormConfigService);\r\n  #appId = Number(this.formState.config.appId);\r\n  #streamName = computedObj('streamName', () => this.settings().StreamName);\r\n\r\n  /**\r\n   * Behavior changes a bit if the query is meant to supply data for string-inputs\r\n   * ...mainly because the value is allowed to be any field, not just the Guid.\r\n   */\r\n  #isForStringField = this.fieldState.config.inputTypeSpecs.isString;\r\n\r\n  /**\r\n   * Get the data from a query - all or only the ones listed in the guids\r\n   */\r\n  protected override getFromBackend(params: string, guids: string[], purposeForLog: string): Observable<DataWithLoading<PickerItem[]>> {\r\n    var l = this.log.fnIfInList('getFromBackend', 'fields', this.fieldName, { params, guids }, purposeForLog);\r\n    // If the configuration isn't complete, the query can be empty\r\n    const sets = this.settings();\r\n    const streamName = this.#streamName();\r\n    const queryName = sets.Query;\r\n    const queryUrl = !!queryName\r\n      ? queryName.includes('/') ? sets.Query : `${sets.Query}/${streamName}`\r\n      : null;\r\n\r\n    l.a('queryUrl', { queryName, streamName, queryUrl })\r\n\r\n    // If no query, return a dummy item with a message\r\n    const source: Observable<DataWithLoading<QueryStreams>> = (() => {\r\n      // If we don't have a query, return a dummy item\r\n      if (!queryUrl) {\r\n        l.a('noQueryUrl - will create dummy item');\r\n        return of<DataWithLoading<QueryStreams>>({\r\n          data: {\r\n            'Default': [\r\n              {\r\n                Id: -1,\r\n                Guid: null,\r\n                Title: this.#translate.instant('Fields.Picker.QueryNotConfigured'),\r\n              },\r\n            ],\r\n          },\r\n          loading: false,\r\n        });\r\n      }\r\n\r\n      // We have query (default case), get the data\r\n      l.a('queryUrl for request', { queryUrl });\r\n      return this.querySvc\r\n        .getFromQuery(queryUrl, params, this.fieldsToRetrieve(this.settings()), guids)\r\n        .pipe(\r\n          map(data => ({ data, loading: false } as DataWithLoading<QueryStreams>)),\r\n        );\r\n    })();\r\n\r\n    const result = source.pipe(\r\n      map(set => ({\r\n        data: this.#transformData(set.data, streamName),\r\n        loading: set.loading,\r\n      } as DataWithLoading<PickerItem[]>)),\r\n    );\r\n    return l.r(result);\r\n  }\r\n\r\n\r\n  #transformData(data: QueryStreams, streamName: string | null): PickerItem[] {\r\n    const valueMustBeGuid = !this.#isForStringField;\r\n    const l = this.log.fn('transformData', { data, streamName, isForStringField: this.#isForStringField });\r\n    if (!data)\r\n      return [PickerItemFactory.message(this.#translate, 'Fields.Picker.QueryErrorNoData')];\r\n\r\n    let items: PickerItem[] = [];\r\n    let errors: PickerItem[] = [];\r\n    streamName.split(',').forEach(stream => {\r\n      if (!data[stream]) {\r\n        errors.push(PickerItemFactory.placeholder(this.#translate, 'Fields.Picker.QueryStreamNotFound', ' ' + stream));\r\n        return; // TODO: @SDV test if this acts like continue or break\r\n      }\r\n\r\n      items = items.concat(data[stream].map(entity => this.createMaskHelper().data2PickerItem({\r\n        entity,\r\n        streamName: stream,\r\n        valueMustUseGuid: valueMustBeGuid\r\n      })));\r\n    });\r\n    return l.r([...errors, ...this.#setDisableEdit(items)]);\r\n  }\r\n\r\n  #setDisableEdit<T extends PickerItem>(queryEntities: T[]): T[] {\r\n    if (queryEntities)\r\n      queryEntities.forEach(e => {\r\n        const appId = e.entity?.AppId;\r\n        e.noEdit = appId != null && appId !== this.#appId;\r\n        e.noDelete = e.noEdit;\r\n      });\r\n    return queryEntities;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { classLog, ClassLogger } from '../../../../shared/logging';\r\nimport { FieldMask } from '../../../shared/helpers/field-mask.helper';\r\nimport { DataSourceQuery } from \"../data-sources/data-source-query\";\r\nimport { PickerItemFactory } from '../models/picker-item.model';\r\nimport { DataAdapterBase } from './data-adapter-base';\r\nimport { DataAdapterEntityBase, logSpecsDataAdapterEntityBase } from \"./data-adapter-entity-base\";\r\n\r\n@Injectable()\r\nexport class DataAdapterQuery extends DataAdapterEntityBase {\r\n\r\n  log = classLog({DataAdapterQuery}, logSpecsDataAdapterEntityBase) as ClassLogger<typeof DataAdapterBase.logSpecs> & ClassLogger<typeof logSpecsDataAdapterEntityBase>;\r\n\r\n  protected dataSourceRaw = transient(DataSourceQuery);\r\n\r\n  constructor() { super(); }\r\n\r\n  /**\r\n   * Url Parameters - often mask - from settings\r\n   * This is a text or mask containing all query parameters.\r\n   * Since it's a mask, it can also contain values from the current item\r\n   */\r\n  #paramsMaskLazy = transient(FieldMask).initSignal(this.log.name, this.fieldState.settingExt('UrlParameters'));\r\n\r\n  override syncParams(): void {\r\n    this.dataSourceRaw.setParams(this.#paramsMaskLazy?.result());\r\n  }\r\n\r\n  fetchItems(): void {\r\n    const l = this.log.fnIfInList('fetchItems', 'fields', this.name);\r\n    this.syncParams();\r\n    // note: it's kind of hard to produce this error, because the config won't save without a query\r\n    if (!this.fieldState.settings().Query) {\r\n      const errors = [PickerItemFactory.placeholder(this.translate, 'Fields.Picker.QueryNotDefined')];\r\n      this.errorOptions.set(errors);\r\n      return;\r\n    }\r\n    this.dataSourceRaw.triggerGetAll();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityLight } from '../../../../../../../edit-types/src/EntityLight';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { computedObj, signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { DataSourceBase, logSpecsDataSourceBase } from './data-source-base';\r\nimport { DataSourceMasksHelper } from './data-source-masks-helper';\r\n\r\nconst logSpecs = {\r\n  ...logSpecsDataSourceBase,\r\n  data: true,\r\n};\r\n\r\n@Injectable()\r\nexport class DataSourceString extends DataSourceBase {\r\n\r\n  log = classLog({DataSourceString}, logSpecs);\r\n  \r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n  }\r\n\r\n  loading = signalObj('loading', false);\r\n\r\n  #dataMaskHelper = (() => {\r\n    // Make sure the converter/builder uses the \"Value\" field for the final 'value'\r\n    const maskHelper = new DataSourceMasksHelper(this.fieldName, this.settings(), this.features, this.formConfig, this.log);\r\n    maskHelper.patchMasks({ value: 'Value' })\r\n    return maskHelper;\r\n  })();\r\n\r\n  data = computedObj('data', () => {\r\n    const options = this.settings()._options;\r\n    const maskHelper = this.#dataMaskHelper;\r\n    const l = this.log.fnIfInList('data', 'fields', this.fieldName, { options, maskHelper });\r\n    const result = options.map(option => {\r\n      const entity: EntityLight = {\r\n        Id: null,\r\n        Guid: null,\r\n        ...option,  // Must contain at least Title / Value\r\n      };\r\n      const pickerItem = maskHelper.data2PickerItem({ entity, streamName: null, valueMustUseGuid: false });\r\n      l.a('one item', { entity, pickerItem });\r\n      return pickerItem;\r\n    });\r\n    return l.r(result);\r\n  })\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { DataSourceString } from \"../data-sources/data-source-string\";\r\nimport { DeleteEntityProps } from \"../models/picker.models\";\r\nimport { PickerFeatures } from '../picker-features.model';\r\nimport { DataAdapterBase } from \"./data-adapter-base\";\r\n\r\n@Injectable()\r\nexport class DataAdapterString extends DataAdapterBase {\r\n\r\n  log = classLog({DataAdapterString}, DataAdapterBase.logSpecs);\r\n\r\n  protected dataSourceRaw = transient(DataSourceString);\r\n\r\n  constructor() { super();}\r\n\r\n  public myFeatures = signalObj('features', { edit: false, create: false, delete: false, } satisfies Partial<PickerFeatures>);\r\n\r\n\r\n  /** should never be needed as we have synchronously all data in settings */\r\n  override initPrefetch(prefetchGuids: string[]): void { }\r\n\r\n  /** should never be needed as we can't add new data */\r\n  override forceReloadData(missingData: string[]): void { }\r\n\r\n  override syncParams(): void { };\r\n\r\n  fetchItems(): void {\r\n    this.log.fnIf('fetchItems');\r\n    this.dataSource().triggerGetAll();\r\n  }\r\n\r\n  deleteItem(props: DeleteEntityProps): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  editItem(editParams: { entityGuid: string; entityId: number; }, entityType: string): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n}\r\n","import { moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Injectable, Signal, inject } from '@angular/core';\r\nimport { getWith } from '../../../../../../../core';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsOptionsWip, FieldSettingsPickerMerged } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { computedObj, signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { DebugFields } from '../../../edit-debug';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { FieldState } from '../../field-state';\r\nimport { DeleteEntityProps } from '../models/picker.models';\r\nimport { PickerFeatures } from '../picker-features.model';\r\nimport { ReorderIndexes } from '../picker-list/reorder-index.models';\r\nimport { StateUiMapperBase } from './state-ui-mapper-base';\r\n\r\nexport const logSpecsStateAdapter = {\r\n  all: false,\r\n  updateValue: false,\r\n  add: false,\r\n  set: false,\r\n  remove: false,\r\n  reorder: false,\r\n  doAfterDelete: false,\r\n  selectedItems: false,\r\n  sepAndOpts: false,\r\n  createEntityTypes: false,\r\n  attachCallback: false,\r\n  typesForNew: false,\r\n  correctStringEmptyValue: true,\r\n  fields: [...DebugFields, 'Query'],\r\n};\r\n\r\n@Injectable()\r\nexport class StateAdapter {\r\n\r\n  //#region Setup / Inject / Logs\r\n\r\n  log = classLog({StateAdapter}, logSpecsStateAdapter);\r\n\r\n  #formConfigSvc = inject(FormConfigService);\r\n  #fieldState = inject(FieldState) as FieldState<number | string | string[], FieldSettings & FieldSettingsOptionsWip & FieldSettingsPickerMerged>;\r\n\r\n  constructor() { }\r\n\r\n  public setup(fieldName: string, uiMapper: StateUiMapperBase): this {\r\n    this.#fieldName = fieldName;\r\n    this.mapper = uiMapper as StateUiMapperBase<number | string | string[], string[]>;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Mapper to convert between the state and the UI - must be configured in setup.\r\n   * On the UI side, must always be an array of strings.\r\n   */\r\n  public mapper: StateUiMapperBase<number | string | string[], string[]>;\r\n\r\n  /** Field Name - just for selective debugging */\r\n  #fieldName: string;\r\n\r\n  //#endregion\r\n\r\n  protected readonly settings = this.#fieldState.settings;\r\n\r\n  /** The features this source will broadcast, to be merged with other features */\r\n  public myFeatures = signalObj('features', {} as Partial<PickerFeatures>);\r\n\r\n  /** The final valid features, must be provided by the picker-data */\r\n  public features: Signal<PickerFeatures>;\r\n\r\n\r\n  #createTypesRaw = computedObj('createTypesRaw',\r\n    () => getWith(this.settings().CreateTypes,\r\n      ts => ts.split(ts.indexOf('\\n') > -1 ? '\\n' : ',')).filter(Boolean));\r\n\r\n  /**  List of entity types to create for the (+) button; ATM exclusively used in the new pickers for selecting the source. */\r\n  public typesForNew = computedObj('typesForNew', () => {\r\n    const raw = this.#createTypesRaw().map((guid: string) => ({ label: null, guid }));\r\n    \r\n    const l = this.log.fnIfInList('typesForNew', 'fields', this.#fieldName, { raw });\r\n\r\n    // return [];\r\n    // Augment with additional label and guid if we have this\r\n    const updated = raw.map(orig => {\r\n      const guid = orig.guid;\r\n      const ct = this.#formConfigSvc.settings.ContentTypes\r\n        .find(ct => ct.Id === guid || ct.Name == guid);\r\n      return {\r\n        ...orig,\r\n        // replace is a bit temporary, as the names are a bit long...\r\n        label: (ct?.Title ?? ct?.Name ?? `${guid} (not found)`).replace('UI Picker Source - ', ''),\r\n        guid: ct?.Id ?? guid,\r\n      }\r\n    });\r\n    return l.r(updated);\r\n  });\r\n\r\n  /**\r\n   * Lazy Signal telling us if empty values are allowed\r\n   * Should ONLY be used in 'selectedItems' - and never in Values, as we would create a loop\r\n   * since the this will also access the possible options, which in turn is initialized using the selectedItems\r\n   */\r\n  public allowsEmptyLazy = signalObj<Signal<boolean>>('allowsEmptyLazy', signalObj('initial', false));\r\n\r\n  /**\r\n   * Signal with all the currently selected items.\r\n   * The PickerItems are fairly basic, as any additional data is added later on.\r\n   * The only case the additional data matters,\r\n   * is when we have a string-picker with a free-text value that is not in the dropdown.\r\n   * In that case, additional data from here is used to disable edit and delete.\r\n   */\r\n  public selectedItems: Signal<string[]> = computedObj('selectedItems', () => {\r\n    const uiValue = this.#fieldState.uiValue();\r\n    this.log.fnIf('selectedItems', { uiValue });\r\n    const asUi = this.mapper.toUi(uiValue);\r\n    const pickerAllowsEmpty = this.allowsEmptyLazy()();\r\n    const uiFixed = asUi.length == 0 && pickerAllowsEmpty\r\n      ? ['']\r\n      : asUi;\r\n    return uiFixed;\r\n  });\r\n\r\n  //#region Callbacks for setting the focus, like after removing the last selection\r\n\r\n  #focusOnSearchComponent: () => void;\r\n\r\n  public attachCallback(focusCallback: () => void): this {\r\n    const l = this.log.fnIf('attachCallback');\r\n    this.#focusOnSearchComponent = focusCallback;\r\n    return l.rSilent(this);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Conversion back and forth between formats\r\n\r\n  /** Signal with the current values in the picker, as an array */\r\n  public values = computedObj('values', () => {\r\n    const asUi = this.mapper.toUi(this.#fieldState.uiValue());\r\n    return asUi;\r\n  });\r\n\r\n  //#endregion\r\n\r\n  //#region CRUD operations\r\n\r\n  #updateValue(operation: (original: string[]) => string[]): void {\r\n    const l = this.log.fnIfInList('updateValue', 'fields', this.#fieldName);\r\n    // Get original data, and make sure we have a copy, so that ongoing changes won't affect the original\r\n    // If we don't do this, then later change detection can fail!\r\n    const valueArray = [...this.values()];\r\n    const modified = operation(valueArray);\r\n    const newValue = this.mapper.toState(modified);\r\n    this.#fieldState.ui().setIfChanged(newValue);\r\n    l.end('', { newValue });\r\n  }\r\n\r\n  public add(value: string): void {\r\n    this.log.fnIfInList('add', 'fields', this.#fieldName, { value });\r\n    this.#updateValue(list => (this.features().multiValue) ? [...list, value] : [value]);\r\n  }\r\n\r\n  public set(values: string[]): void {\r\n    this.log.fnIf('set', { values });\r\n    this.#updateValue(() => values);\r\n  }\r\n\r\n  public flush(): void {\r\n    this.set([]);\r\n  }\r\n\r\n  public reorder(reorderIndexes: ReorderIndexes) {\r\n    this.log.fnIf('reorder', { reorderIndexes });\r\n    this.#updateValue(list => {\r\n      moveItemInArray(list, reorderIndexes.previousIndex, reorderIndexes.currentIndex);\r\n      return [...list];\r\n    });\r\n  }\r\n\r\n  public remove(index: number) {\r\n    this.log.fnIf('remove', { index });\r\n    this.#updateValue(list => {\r\n      list.splice(index, 1);\r\n      return [...list];\r\n    });\r\n\r\n    // If we have no items left, set focus back to the search component, since this is usually wanted\r\n    if (!this.values().length)\r\n      setTimeout(() => this.#focusOnSearchComponent());\r\n  }\r\n\r\n  public doAfterDelete(props: DeleteEntityProps) {\r\n    this.log.fnIf('doAfterDelete', { props });\r\n    this.remove(props.index);\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","import { Signal } from '@angular/core';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsSharedSeparator } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { FieldValue } from '../../../../../../../edit-types/src/FieldValue';\r\n\r\n/**\r\n * Small helper class to do mapping between the state and the UI.\r\n *\r\n * Basically the reason is that the UI sometimes needs a slightly different representation of the state.\r\n *\r\n * This class should help map both ways.\r\n */\r\nexport abstract class StateUiMapperBase<TState extends FieldValue = FieldValue, TUi extends FieldValue = FieldValue> {\r\n\r\n  constructor(protected fieldName: string, protected settings: Signal<FieldSettings & FieldSettingsSharedSeparator>) { }\r\n\r\n  abstract toUi(state: TState): TUi;\r\n\r\n  abstract toState(uiValue: TUi): TState;\r\n}\r\n\r\n\r\n// export abstract class StateUiMapperWithSettingsBase<TState extends FieldValue = FieldValue, TUi extends FieldValue = FieldValue>\r\n//   extends StateUiMapperBase<TState, TUi> {\r\n//   constructor(fieldName: string, settings: Signal<FieldSettings & FieldSettingsSharedSeparator>) {\r\n//     super(fieldName, settings);\r\n//   }\r\n// }\r\n","import { StateUiMapperBase } from './state-ui-mapper-base';\r\n\r\n/**\r\n * A noop mapper that does nothing, as the data-type for state is the same as the UI.\r\n * \r\n * Typically used in Entity-Picker fields.\r\n */\r\nexport class StateUiMapperNoop extends StateUiMapperBase<any, any> {\r\n  toUi(state: any): any {\r\n    return state;\r\n  }\r\n\r\n  toState(uiValue: any): any {\r\n    return uiValue;\r\n  }\r\n}","import { convertArrayToString } from '../picker.helpers';\r\nimport { StateUiMapperBase } from './state-ui-mapper-base';\r\n\r\n/**\r\n * A mapper that converts a string to a number .\r\n *\r\n * Typically used for string-pickers, where the data is a string but the UI is an array of strings.\r\n */\r\nexport class StateUiMapperNumberArray extends StateUiMapperBase<number, string[]> {\r\n  /**\r\n    * Convert a number to an array of strings for use in the UI.\r\n    */\r\n  toUi(state: number): string[] {\r\n    return state == null\r\n      ? []\r\n      : [state.toString()];\r\n  }\r\n\r\n  /**\r\n  * Convert an array of strings to a number for state.\r\n  */\r\n  toState(uiValue: string[]): number {\r\n    const stringValue = (uiValue == null || uiValue.length === 0)\r\n      ? ''\r\n      : convertArrayToString(uiValue, this.settings().Separator);\r\n\r\n    const parsedNumber = Number(stringValue);\r\n    return isNaN(parsedNumber) ? null : parsedNumber;\r\n  }\r\n}\r\n","import { convertArrayToString } from '../picker.helpers';\r\nimport { StateUiMapperBase } from './state-ui-mapper-base';\r\n\r\n/**\r\n * A mapper that converts a string to an array of strings, and vice versa.\r\n *\r\n * Typically used for string-pickers, where the data is a string but the UI is an array of strings.\r\n */\r\nexport class StateUiMapperStringArray extends StateUiMapperBase<string, string[]> {\r\n  /**\r\n   * Convert a string to an array of strings for use in the UI.\r\n   */\r\n  toUi(state: string): string[] {\r\n    return (state == null || state === '')\r\n      ? []\r\n      : state.split(this.settings().Separator) ?? [];\r\n  }\r\n\r\n  /**\r\n   * The state needs a string, using the specified separator.\r\n   */\r\n  toState(uiValue: string[]): string {\r\n    return (uiValue == null || uiValue.length === 0) \r\n      ? ''\r\n      : convertArrayToString(uiValue, this.settings().Separator);\r\n  }\r\n}","export const PickerSourcesCustom = {\r\n  UiPickerSourceCustomList: 'UiPickerSourceCustomList',\r\n  UiPickerSourceCustomCsv: 'UiPickerSourceCustomCsv',\r\n} as const;\r\n\r\nexport const PickerConfigs = {\r\n  ...PickerSourcesCustom,\r\n  UiPickerSourceQuery: 'UiPickerSourceQuery',\r\n  UiPickerSourceEntity: 'UiPickerSourceEntity',\r\n  UiPickerSourceAppAssets: 'UiPickerSourceAppAssets',\r\n  UiPickerSourceCss: 'UiPickerSourceCss',\r\n} as const;\r\n\r\nexport const UiPickerModeIsTree = 'UiPickerModeTree';\r\n\r\n","import { Injector, ProviderToken } from '@angular/core';\r\nimport { FieldSettingsPicker } from 'projects/edit-types/src/FieldSettings-Pickers';\r\nimport { Of, transient } from '../../../../../../core';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { FieldState } from '../field-state';\r\nimport { DataAdapterAppAssets } from './adapters/data-adapter-app-assets';\r\nimport { DataAdapterBase } from './adapters/data-adapter-base';\r\nimport { DataAdapterCss } from './adapters/data-adapter-css';\r\nimport { DataAdapterEmpty } from './adapters/data-adapter-empty';\r\nimport { DataAdapterEntity } from './adapters/data-adapter-entity';\r\nimport { DataAdapterQuery } from './adapters/data-adapter-query';\r\nimport { DataAdapterString } from './adapters/data-adapter-string';\r\nimport { StateAdapter } from './adapters/state-adapter';\r\nimport { StateUiMapperBase } from './adapters/state-ui-mapper-base';\r\nimport { StateUiMapperNoop } from './adapters/state-ui-mapper-noop';\r\nimport { StateUiMapperNumberArray } from './adapters/state-ui-mapper-number-array';\r\nimport { StateUiMapperStringArray } from './adapters/state-ui-mapper-string-array';\r\nimport { PickerConfigs } from './constants/picker-config-model.constants';\r\nimport { PickerData } from './picker-data';\r\n\r\n/**\r\n * Factory for creating PickerData instances.\r\n * Goal is to move all the logic for which combination of input types\r\n * result in what states etc. to here.\r\n */\r\nexport class PickerDataSetup {\r\n\r\n  log = classLog({ PickerDataSetup }, null);\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  // Notes: previous flow of initialization\r\n  // 1. Final control (eg. StringPickerComponent) gets services which it will use using transient(...)\r\n  // ... and also importMe on the logic\r\n  // 2. PickerComponent.ngOnInit() will\r\n  // ...\r\n  // 3. The control will override initAdaptersAndModel()\r\n  // 3.1 init state with\r\n  // ... it will also attach a CALLBACK! for focused?\r\n\r\n  /**\r\n   * Setup / initialize a Picker Data.\r\n   * Note that it can't be called when fields are being created, but must be called from inside each field.\r\n   * Reason is that objects created later on through DI will need the FieldState and other context objects to be injected.\r\n   */\r\n  setupPickerData(pickerData: PickerData, fieldState: FieldState<FieldValue>): PickerData {\r\n    const pdWithSetupState = pickerData as PickerData & { setupAlreadyStarted: boolean };\r\n    const alreadyStarted = pdWithSetupState.setupAlreadyStarted;\r\n    const inputType = fieldState.config.inputTypeSpecs.inputType;\r\n    const l = this.log.fn('createPickerAdapters', { pickerData, fieldState, inputType, alreadyStarted });\r\n    if (alreadyStarted)\r\n      return l.rSilent(pickerData, 'exist, already started');\r\n    \r\n    pdWithSetupState.setupAlreadyStarted = true;\r\n\r\n    // First get the state, since the sources will depend on it.\r\n    const state = this.#getStateAdapter(fieldState.name, inputType, fieldState.settings as ConstructorParameters<typeof StateUiMapperBase>[1]);\r\n\r\n    const dataSourceType = (fieldState.settings() as FieldSettings & FieldSettingsPicker).dataSourceType;\r\n    const source = this.#getSourceAdapter(inputType, dataSourceType, state);\r\n\r\n    pickerData.setup(fieldState.name, fieldState.settings, state, source);\r\n\r\n    // l.end('ok', { state, source });\r\n\r\n    pickerData.source.onAfterViewInit()\r\n    return l.rSilent(pickerData);\r\n  }\r\n\r\n  #getStateAdapter(fieldName: string, inputType: Of<typeof InputTypeCatalog>, settings: ConstructorParameters<typeof StateUiMapperBase>[1]): StateAdapter {\r\n    const uiMapperType = partsMap[inputType]?.uiMapper as typeof StateUiMapperNoop;\r\n    if (!uiMapperType)\r\n      throw new Error(`No State Adapter found for inputTypeSpecs: ${inputType}`);\r\n\r\n    const stateAdapter = transient(StateAdapter, this.injector);\r\n    const uiMapper = new uiMapperType(fieldName, settings);\r\n    stateAdapter.setup(fieldName, uiMapper);\r\n    return stateAdapter;\r\n  }\r\n\r\n  #getSourceAdapter(inputType: Of<typeof InputTypeCatalog>, dataSourceType: string, state: StateAdapter): DataAdapterBase {\r\n    const l = this.log.fn('getSourceAdapter', { inputType, dataSourceType });\r\n    // Get config for allowed sources / adapters for the current inputType\r\n    const parts = partsMap[inputType];\r\n\r\n    // The config type is either the forced type (from defaults for old pickers) or the specified type\r\n    const dsType = parts.forcePickerConfig ?? dataSourceType;\r\n    l.a(`use config type`, { dataSourceType, forcePickerConfig: parts.forcePickerConfig, dsType });\r\n\r\n    const dataAdapterType = mapNameToDataAdapter[dsType] ?? DataAdapterEmpty;\r\n    this.#throwIfSourceAdapterNotAllowed(inputType, dataAdapterType);\r\n    const result = transient(dataAdapterType, this.injector).connectState(state);\r\n    return l.r(result);\r\n  }\r\n\r\n  #throwIfSourceAdapterNotAllowed(inputType: Of<typeof InputTypeCatalog>, dataSourceType: ProviderToken<unknown>): boolean {\r\n    // Empty is always allowed, as it's usually for errors / missing configs\r\n    if (dataSourceType === DataAdapterEmpty) return false;\r\n    if (partsMap[inputType]?.sources?.includes(dataSourceType)) return false;\r\n    throw new Error(`Specified SourceAdapter not allowed for inputTypeSpecs: ${inputType}: ${DataAdapterString}`);\r\n  }\r\n\r\n}\r\n\r\nconst mapNameToDataAdapter: Record<string, ProviderToken<DataAdapterBase>> = {\r\n  [PickerConfigs.UiPickerSourceCustomList]: DataAdapterString,\r\n  [PickerConfigs.UiPickerSourceCustomCsv]: DataAdapterString,\r\n  [PickerConfigs.UiPickerSourceCss]: DataAdapterCss,\r\n  [PickerConfigs.UiPickerSourceQuery]: DataAdapterQuery,\r\n  [PickerConfigs.UiPickerSourceEntity]: DataAdapterEntity,\r\n  [PickerConfigs.UiPickerSourceAppAssets]: DataAdapterAppAssets,\r\n};\r\n\r\n/**\r\n * Catalog of the parts to be used for each picker type.\r\n * This includes what data-sources and state-adapters to use.\r\n * For older pickers, a predefined source is used.\r\n */\r\nconst partsMap: Record<string, PartMap> = {\r\n  [InputTypeCatalog.StringPicker]: {\r\n    sources: [DataAdapterString, DataAdapterQuery, DataAdapterEntity, DataAdapterCss, DataAdapterAppAssets],\r\n    uiMapper: StateUiMapperStringArray,\r\n  },\r\n  [InputTypeCatalog.StringDropdown]: {\r\n    sources: [DataAdapterString],\r\n    uiMapper: StateUiMapperStringArray,\r\n    forcePickerConfig: PickerConfigs.UiPickerSourceCustomList,\r\n  },\r\n\r\n  [InputTypeCatalog.StringFontIconPicker]: {\r\n    sources: [DataAdapterCss],\r\n    uiMapper: StateUiMapperStringArray,\r\n    forcePickerConfig: PickerConfigs.UiPickerSourceCss,\r\n  },\r\n\r\n  [InputTypeCatalog.NumberDropdown]: {\r\n    sources: [DataAdapterString],\r\n    uiMapper: StateUiMapperNumberArray,\r\n    forcePickerConfig: PickerConfigs.UiPickerSourceCustomList,\r\n  },\r\n\r\n  [InputTypeCatalog.NumberPicker]: {\r\n    sources: [DataAdapterString, DataAdapterQuery, DataAdapterEntity],\r\n    uiMapper: StateUiMapperNumberArray,\r\n  },\r\n  [InputTypeCatalog.StringDropdownQuery]: {\r\n    sources: [DataAdapterQuery],\r\n    uiMapper: StateUiMapperStringArray,\r\n    forcePickerConfig: PickerConfigs.UiPickerSourceQuery,\r\n  },\r\n  [InputTypeCatalog.EntityDefault]: {\r\n    sources: [DataAdapterEntity],\r\n    uiMapper: StateUiMapperNoop,\r\n    forcePickerConfig: PickerConfigs.UiPickerSourceEntity,\r\n  },\r\n  [InputTypeCatalog.EntityQuery]: {\r\n    sources: [DataAdapterQuery],\r\n    uiMapper: StateUiMapperNoop,\r\n    forcePickerConfig: PickerConfigs.UiPickerSourceQuery,\r\n  },\r\n  [InputTypeCatalog.EntityContentBlocks]: {\r\n    sources: [DataAdapterEntity],\r\n    uiMapper: StateUiMapperNoop,\r\n    forcePickerConfig: PickerConfigs.UiPickerSourceEntity,\r\n  },\r\n  [InputTypeCatalog.EntityPicker]: {\r\n    sources: [DataAdapterEntity, DataAdapterQuery, DataAdapterString],\r\n    uiMapper: StateUiMapperNoop,\r\n  },\r\n};\r\n\r\ninterface PartMap {\r\n  sources: ProviderToken<unknown>[],\r\n  uiMapper: typeof StateUiMapperBase | typeof StateUiMapperStringArray | typeof StateUiMapperNumberArray, // ProviderToken<StateUiMapperBase>,\r\n  /** Force some string-sources to assume no-configuration, since the config is in the classic metadata, not in a DataSource config */\r\n  forcePickerConfig?: Of<typeof PickerConfigs>,\r\n}\r\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of, combineLatest, EMPTY, concat } from 'rxjs';\nimport { take, filter, takeUntil, startWith, tap, switchMap, map, reduce, concatMap, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ContentChildren, EventEmitter, ChangeDetectorRef, booleanAttribute, Output, numberAttribute, NgModule } from '@angular/core';\nimport { TREE_KEY_MANAGER } from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceObservable } from '@angular/cdk/coercion/private';\n\n/**\n * Base tree control. It has basic toggle/expand/collapse operations on a single data node.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor. To be removed in a future version.\n * @breaking-change 21.0.0\n */\nclass BaseTreeControl {\n    constructor() {\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode))\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/**\n * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass FlatTreeControl extends BaseTreeControl {\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/**\n * Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass NestedTreeControl extends BaseTreeControl {\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n        if (this.options?.isExpandable) {\n            this.isExpandable = this.options.isExpandable;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean)).subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeOutlet, deps: [{ token: i0.ViewContainerRef }, { token: CDK_TREE_NODE_OUTLET_NODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkTreeNodeOutlet, isStandalone: true, selector: \"[cdkTreeNodeOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeOutlet]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TREE_NODE_OUTLET_NODE]\n                }, {\n                    type: Optional\n                }] }] });\n\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    constructor(template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkTreeNodeDef, isStandalone: true, selector: \"[cdkTreeNodeDef]\", inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeDef]',\n                    inputs: [{ name: 'when', alias: 'cdkTreeNodeDefWhen' }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there is no tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control, levelAccessor, or childrenAccessor for the tree.`);\n}\n/**\n * Returns an error to be thrown when there are multiple ways of specifying children or level\n * provided to the tree.\n * @docs-private\n */\nfunction getMultipleTreeControlsError() {\n    return Error(`More than one of tree control, levelAccessor, or childrenAccessor were provided.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = inject(Directionality);\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /** Level of nodes */\n        this._levels = new Map();\n        /** The immediate parents for a node. This is `null` if there is no parent. */\n        this._parents = new Map();\n        /**\n         * Nodes grouped into each set, which is a list of nodes displayed together in the DOM.\n         *\n         * Lookup key is the parent of a set. Root nodes have key of null.\n         *\n         * Values is a 'set' of tree nodes. Each tree node maps to a treeitem element. Sets are in the\n         * order that it is rendered. Each set maps directly to aria-posinset and aria-setsize attributes.\n         */\n        this._ariaSets = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        /**\n         * Maintain a synchronous cache of flattened data nodes. This will only be\n         * populated after initial render, and in certain cases, will be delayed due to\n         * relying on Observable `getChildren` calls.\n         */\n        this._flattenedNodes = new BehaviorSubject([]);\n        /** The automatically determined node type for the tree. */\n        this._nodeType = new BehaviorSubject(null);\n        /** The mapping between data and the node that is rendered. */\n        this._nodes = new BehaviorSubject(new Map());\n        /**\n         * Synchronous cache of nodes for the `TreeKeyManager`. This is separate\n         * from `_flattenedNodes` so they can be independently updated at different\n         * times.\n         */\n        this._keyManagerNodes = new BehaviorSubject([]);\n        this._keyManagerFactory = inject(TREE_KEY_MANAGER);\n        this._viewInit = false;\n    }\n    ngAfterContentInit() {\n        this._initializeKeyManager();\n    }\n    ngAfterContentChecked() {\n        this._updateDefaultNodeDefinition();\n        this._subscribeToDataChanges();\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // In certain tests, the tree might be destroyed before this is initialized\n        // in `ngAfterContentInit`.\n        this._keyManager?.destroy();\n    }\n    ngOnInit() {\n        this._checkTreeControlUsage();\n        this._initializeDataDiffer();\n    }\n    ngAfterViewInit() {\n        this._viewInit = true;\n    }\n    _updateDefaultNodeDefinition() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n    }\n    /**\n     * Sets the node type for the tree, if it hasn't been set yet.\n     *\n     * This will be called by the first node that's rendered in order for the tree\n     * to determine what data transformations are required.\n     */\n    _setNodeTypeIfUnset(nodeType) {\n        if (this._nodeType.value === null) {\n            this._nodeType.next(nodeType);\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._subscribeToDataChanges();\n        }\n    }\n    _getExpansionModel() {\n        if (!this.treeControl) {\n            this._expansionModel ??= new SelectionModel(true);\n            return this._expansionModel;\n        }\n        return this.treeControl.expansionModel;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _subscribeToDataChanges() {\n        if (this._dataSubscription) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (!dataStream) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                throw getTreeNoValidDataSourceError();\n            }\n            return;\n        }\n        this._dataSubscription = this._getRenderData(dataStream)\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(renderingData => {\n            this._renderDataChanges(renderingData);\n        });\n    }\n    /** Given an Observable containing a stream of the raw data, returns an Observable containing the RenderingData */\n    _getRenderData(dataStream) {\n        const expansionModel = this._getExpansionModel();\n        return combineLatest([\n            dataStream,\n            this._nodeType,\n            // We don't use the expansion data directly, however we add it here to essentially\n            // trigger data rendering when expansion changes occur.\n            expansionModel.changed.pipe(startWith(null), tap(expansionChanges => {\n                this._emitExpansionChanges(expansionChanges);\n            })),\n        ]).pipe(switchMap(([data, nodeType]) => {\n            if (nodeType === null) {\n                return of({ renderNodes: data, flattenedNodes: null, nodeType });\n            }\n            // If we're here, then we know what our node type is, and therefore can\n            // perform our usual rendering pipeline, which necessitates converting the data\n            return this._computeRenderingData(data, nodeType).pipe(map(convertedData => ({ ...convertedData, nodeType })));\n        }));\n    }\n    _renderDataChanges(data) {\n        if (data.nodeType === null) {\n            this.renderNodeChanges(data.renderNodes);\n            return;\n        }\n        // If we're here, then we know what our node type is, and therefore can\n        // perform our usual rendering pipeline.\n        this._updateCachedData(data.flattenedNodes);\n        this.renderNodeChanges(data.renderNodes);\n        this._updateKeyManagerItems(data.flattenedNodes);\n    }\n    _emitExpansionChanges(expansionChanges) {\n        if (!expansionChanges) {\n            return;\n        }\n        const nodes = this._nodes.value;\n        for (const added of expansionChanges.added) {\n            const node = nodes.get(added);\n            node?._emitExpansionState(true);\n        }\n        for (const removed of expansionChanges.removed) {\n            const node = nodes.get(removed);\n            node?._emitExpansionState(false);\n        }\n    }\n    _initializeKeyManager() {\n        const items = combineLatest([this._keyManagerNodes, this._nodes]).pipe(map(([keyManagerNodes, renderNodes]) => keyManagerNodes.reduce((items, data) => {\n            const node = renderNodes.get(this._getExpansionKey(data));\n            if (node) {\n                items.push(node);\n            }\n            return items;\n        }, [])));\n        const keyManagerOptions = {\n            trackBy: node => this._getExpansionKey(node.data),\n            skipPredicate: node => !!node.isDisabled,\n            typeAheadDebounceInterval: true,\n            horizontalOrientation: this._dir.value,\n        };\n        this._keyManager = this._keyManagerFactory(items, keyManagerOptions);\n    }\n    _initializeDataDiffer() {\n        // Provide a default trackBy based on `_getExpansionKey` if one isn't provided.\n        const trackBy = this.trackBy ?? ((_index, item) => this._getExpansionKey(item));\n        this._dataDiffer = this._differs.find([]).create(trackBy);\n    }\n    _checkTreeControlUsage() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Verify that Tree follows API contract of using one of TreeControl, levelAccessor or\n            // childrenAccessor. Throw an appropriate error if contract is not met.\n            let numTreeControls = 0;\n            if (this.treeControl) {\n                numTreeControls++;\n            }\n            if (this.levelAccessor) {\n                numTreeControls++;\n            }\n            if (this.childrenAccessor) {\n                numTreeControls++;\n            }\n            if (!numTreeControls) {\n                throw getTreeControlMissingError();\n            }\n            else if (numTreeControls > 1) {\n                throw getMultipleTreeControlsError();\n            }\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        // Some tree consumers expect change detection to propagate to nodes\n        // even when the array itself hasn't changed; we explicitly detect changes\n        // anyways in order for nodes to update their data.\n        //\n        // However, if change detection is called while the component's view is\n        // still initing, then the order of child views initing will be incorrect;\n        // to prevent this, we only exit early if the view hasn't initialized yet.\n        if (!changes && !this._viewInit) {\n            return;\n        }\n        changes?.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        // If the data itself changes, but keeps the same trackBy, we need to update the templates'\n        // context to reflect the new object.\n        changes?.forEachIdentityChange((record) => {\n            const newData = record.item;\n            if (record.currentIndex != undefined) {\n                const view = viewContainer.get(record.currentIndex);\n                view.context.$implicit = newData;\n            }\n        });\n        // Note: we only `detectChanges` from a top-level call, otherwise we risk overflowing\n        // the call stack since this method is called recursively (see #29733.)\n        // TODO: change to `this._changeDetectorRef.markForCheck()`,\n        // or just switch this component to use signals.\n        if (parentData) {\n            this._changeDetectorRef.markForCheck();\n        }\n        else {\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const levelAccessor = this._getLevelAccessor();\n        const node = this._getNodeDef(nodeData, index);\n        const key = this._getExpansionKey(nodeData);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        parentData ??= this._parents.get(key) ?? undefined;\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (levelAccessor) {\n            context.level = levelAccessor(nodeData);\n        }\n        else if (parentData !== undefined && this._levels.has(this._getExpansionKey(parentData))) {\n            context.level = this._levels.get(this._getExpansionKey(parentData)) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(key, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n    /** Whether the data node is expanded or collapsed. Returns true if it's expanded. */\n    isExpanded(dataNode) {\n        return !!(this.treeControl?.isExpanded(dataNode) ||\n            this._expansionModel?.isSelected(this._getExpansionKey(dataNode)));\n    }\n    /** If the data node is currently expanded, collapse it. Otherwise, expand it. */\n    toggle(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.toggle(dataNode);\n        }\n        else if (this._expansionModel) {\n            this._expansionModel.toggle(this._getExpansionKey(dataNode));\n        }\n    }\n    /** Expand the data node. If it is already expanded, does nothing. */\n    expand(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.expand(dataNode);\n        }\n        else if (this._expansionModel) {\n            this._expansionModel.select(this._getExpansionKey(dataNode));\n        }\n    }\n    /** Collapse the data node. If it is already collapsed, does nothing. */\n    collapse(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.collapse(dataNode);\n        }\n        else if (this._expansionModel) {\n            this._expansionModel.deselect(this._getExpansionKey(dataNode));\n        }\n    }\n    /**\n     * If the data node is currently expanded, collapse it and all its descendants.\n     * Otherwise, expand it and all its descendants.\n     */\n    toggleDescendants(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.toggleDescendants(dataNode);\n        }\n        else if (this._expansionModel) {\n            if (this.isExpanded(dataNode)) {\n                this.collapseDescendants(dataNode);\n            }\n            else {\n                this.expandDescendants(dataNode);\n            }\n        }\n    }\n    /**\n     * Expand the data node and all its descendants. If they are already expanded, does nothing.\n     */\n    expandDescendants(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.expandDescendants(dataNode);\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.select(this._getExpansionKey(dataNode));\n            this._getDescendants(dataNode)\n                .pipe(take(1), takeUntil(this._onDestroy))\n                .subscribe(children => {\n                expansionModel.select(...children.map(child => this._getExpansionKey(child)));\n            });\n        }\n    }\n    /** Collapse the data node and all its descendants. If it is already collapsed, does nothing. */\n    collapseDescendants(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.collapseDescendants(dataNode);\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.deselect(this._getExpansionKey(dataNode));\n            this._getDescendants(dataNode)\n                .pipe(take(1), takeUntil(this._onDestroy))\n                .subscribe(children => {\n                expansionModel.deselect(...children.map(child => this._getExpansionKey(child)));\n            });\n        }\n    }\n    /** Expands all data nodes in the tree. */\n    expandAll() {\n        if (this.treeControl) {\n            this.treeControl.expandAll();\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.select(...this._flattenedNodes.value.map(child => this._getExpansionKey(child)));\n        }\n    }\n    /** Collapse all data nodes in the tree. */\n    collapseAll() {\n        if (this.treeControl) {\n            this.treeControl.collapseAll();\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.deselect(...this._flattenedNodes.value.map(child => this._getExpansionKey(child)));\n        }\n    }\n    /** Level accessor, used for compatibility between the old Tree and new Tree */\n    _getLevelAccessor() {\n        return this.treeControl?.getLevel?.bind(this.treeControl) ?? this.levelAccessor;\n    }\n    /** Children accessor, used for compatibility between the old Tree and new Tree */\n    _getChildrenAccessor() {\n        return this.treeControl?.getChildren?.bind(this.treeControl) ?? this.childrenAccessor;\n    }\n    /**\n     * Gets the direct children of a node; used for compatibility between the old tree and the\n     * new tree.\n     */\n    _getDirectChildren(dataNode) {\n        const levelAccessor = this._getLevelAccessor();\n        const expansionModel = this._expansionModel ?? this.treeControl?.expansionModel;\n        if (!expansionModel) {\n            return of([]);\n        }\n        const key = this._getExpansionKey(dataNode);\n        const isExpanded = expansionModel.changed.pipe(switchMap(changes => {\n            if (changes.added.includes(key)) {\n                return of(true);\n            }\n            else if (changes.removed.includes(key)) {\n                return of(false);\n            }\n            return EMPTY;\n        }), startWith(this.isExpanded(dataNode)));\n        if (levelAccessor) {\n            return combineLatest([isExpanded, this._flattenedNodes]).pipe(map(([expanded, flattenedNodes]) => {\n                if (!expanded) {\n                    return [];\n                }\n                return this._findChildrenByLevel(levelAccessor, flattenedNodes, dataNode, 1);\n            }));\n        }\n        const childrenAccessor = this._getChildrenAccessor();\n        if (childrenAccessor) {\n            return coerceObservable(childrenAccessor(dataNode) ?? []);\n        }\n        throw getTreeControlMissingError();\n    }\n    /**\n     * Given the list of flattened nodes, the level accessor, and the level range within\n     * which to consider children, finds the children for a given node.\n     *\n     * For example, for direct children, `levelDelta` would be 1. For all descendants,\n     * `levelDelta` would be Infinity.\n     */\n    _findChildrenByLevel(levelAccessor, flattenedNodes, dataNode, levelDelta) {\n        const key = this._getExpansionKey(dataNode);\n        const startIndex = flattenedNodes.findIndex(node => this._getExpansionKey(node) === key);\n        const dataNodeLevel = levelAccessor(dataNode);\n        const expectedLevel = dataNodeLevel + levelDelta;\n        const results = [];\n        // Goes through flattened tree nodes in the `flattenedNodes` array, and get all\n        // descendants within a certain level range.\n        //\n        // If we reach a node whose level is equal to or less than the level of the tree node,\n        // we hit a sibling or parent's sibling, and should stop.\n        for (let i = startIndex + 1; i < flattenedNodes.length; i++) {\n            const currentLevel = levelAccessor(flattenedNodes[i]);\n            if (currentLevel <= dataNodeLevel) {\n                break;\n            }\n            if (currentLevel <= expectedLevel) {\n                results.push(flattenedNodes[i]);\n            }\n        }\n        return results;\n    }\n    /**\n     * Adds the specified node component to the tree's internal registry.\n     *\n     * This primarily facilitates keyboard navigation.\n     */\n    _registerNode(node) {\n        this._nodes.value.set(this._getExpansionKey(node.data), node);\n        this._nodes.next(this._nodes.value);\n    }\n    /** Removes the specified node component from the tree's internal registry. */\n    _unregisterNode(node) {\n        this._nodes.value.delete(this._getExpansionKey(node.data));\n        this._nodes.next(this._nodes.value);\n    }\n    /**\n     * For the given node, determine the level where this node appears in the tree.\n     *\n     * This is intended to be used for `aria-level` but is 0-indexed.\n     */\n    _getLevel(node) {\n        return this._levels.get(this._getExpansionKey(node));\n    }\n    /**\n     * For the given node, determine the size of the parent's child set.\n     *\n     * This is intended to be used for `aria-setsize`.\n     */\n    _getSetSize(dataNode) {\n        const set = this._getAriaSet(dataNode);\n        return set.length;\n    }\n    /**\n     * For the given node, determine the index (starting from 1) of the node in its parent's child set.\n     *\n     * This is intended to be used for `aria-posinset`.\n     */\n    _getPositionInSet(dataNode) {\n        const set = this._getAriaSet(dataNode);\n        const key = this._getExpansionKey(dataNode);\n        return set.findIndex(node => this._getExpansionKey(node) === key) + 1;\n    }\n    /** Given a CdkTreeNode, gets the node that renders that node's parent's data. */\n    _getNodeParent(node) {\n        const parent = this._parents.get(this._getExpansionKey(node.data));\n        return parent && this._nodes.value.get(this._getExpansionKey(parent));\n    }\n    /** Given a CdkTreeNode, gets the nodes that renders that node's child data. */\n    _getNodeChildren(node) {\n        return this._getDirectChildren(node.data).pipe(map(children => children.reduce((nodes, child) => {\n            const value = this._nodes.value.get(this._getExpansionKey(child));\n            if (value) {\n                nodes.push(value);\n            }\n            return nodes;\n        }, [])));\n    }\n    /** `keydown` event handler; this just passes the event to the `TreeKeyManager`. */\n    _sendKeydownToKeyManager(event) {\n        this._keyManager.onKeydown(event);\n    }\n    /** Gets all nested descendants of a given node. */\n    _getDescendants(dataNode) {\n        if (this.treeControl) {\n            return of(this.treeControl.getDescendants(dataNode));\n        }\n        if (this.levelAccessor) {\n            const results = this._findChildrenByLevel(this.levelAccessor, this._flattenedNodes.value, dataNode, Infinity);\n            return of(results);\n        }\n        if (this.childrenAccessor) {\n            return this._getAllChildrenRecursively(dataNode).pipe(reduce((allChildren, nextChildren) => {\n                allChildren.push(...nextChildren);\n                return allChildren;\n            }, []));\n        }\n        throw getTreeControlMissingError();\n    }\n    /**\n     * Gets all children and sub-children of the provided node.\n     *\n     * This will emit multiple times, in the order that the children will appear\n     * in the tree, and can be combined with a `reduce` operator.\n     */\n    _getAllChildrenRecursively(dataNode) {\n        if (!this.childrenAccessor) {\n            return of([]);\n        }\n        return coerceObservable(this.childrenAccessor(dataNode)).pipe(take(1), switchMap(children => {\n            // Here, we cache the parents of a particular child so that we can compute the levels.\n            for (const child of children) {\n                this._parents.set(this._getExpansionKey(child), dataNode);\n            }\n            return of(...children).pipe(concatMap(child => concat(of([child]), this._getAllChildrenRecursively(child))));\n        }));\n    }\n    _getExpansionKey(dataNode) {\n        // In the case that a key accessor function was not provided by the\n        // tree user, we'll default to using the node object itself as the key.\n        //\n        // This cast is safe since:\n        // - if an expansionKey is provided, TS will infer the type of K to be\n        //   the return type.\n        // - if it's not, then K will be defaulted to T.\n        return this.expansionKey?.(dataNode) ?? dataNode;\n    }\n    _getAriaSet(node) {\n        const key = this._getExpansionKey(node);\n        const parent = this._parents.get(key);\n        const parentKey = parent ? this._getExpansionKey(parent) : null;\n        const set = this._ariaSets.get(parentKey);\n        return set ?? [node];\n    }\n    /**\n     * Finds the parent for the given node. If this is a root node, this\n     * returns null. If we're unable to determine the parent, for example,\n     * if we don't have cached node data, this returns undefined.\n     */\n    _findParentForNode(node, index, cachedNodes) {\n        // In all cases, we have a mapping from node to level; all we need to do here is backtrack in\n        // our flattened list of nodes to determine the first node that's of a level lower than the\n        // provided node.\n        if (!cachedNodes.length) {\n            return null;\n        }\n        const currentLevel = this._levels.get(this._getExpansionKey(node)) ?? 0;\n        for (let parentIndex = index - 1; parentIndex >= 0; parentIndex--) {\n            const parentNode = cachedNodes[parentIndex];\n            const parentLevel = this._levels.get(this._getExpansionKey(parentNode)) ?? 0;\n            if (parentLevel < currentLevel) {\n                return parentNode;\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a set of root nodes and the current node level, flattens any nested\n     * nodes into a single array.\n     *\n     * If any nodes are not expanded, then their children will not be added into the array.\n     * This will still traverse all nested children in order to build up our internal data\n     * models, but will not include them in the returned array.\n     */\n    _flattenNestedNodesWithExpansion(nodes, level = 0) {\n        const childrenAccessor = this._getChildrenAccessor();\n        // If we're using a level accessor, we don't need to flatten anything.\n        if (!childrenAccessor) {\n            return of([...nodes]);\n        }\n        return of(...nodes).pipe(concatMap(node => {\n            const parentKey = this._getExpansionKey(node);\n            if (!this._parents.has(parentKey)) {\n                this._parents.set(parentKey, null);\n            }\n            this._levels.set(parentKey, level);\n            const children = coerceObservable(childrenAccessor(node));\n            return concat(of([node]), children.pipe(take(1), tap(childNodes => {\n                this._ariaSets.set(parentKey, [...(childNodes ?? [])]);\n                for (const child of childNodes ?? []) {\n                    const childKey = this._getExpansionKey(child);\n                    this._parents.set(childKey, node);\n                    this._levels.set(childKey, level + 1);\n                }\n            }), switchMap(childNodes => {\n                if (!childNodes) {\n                    return of([]);\n                }\n                return this._flattenNestedNodesWithExpansion(childNodes, level + 1).pipe(map(nestedNodes => (this.isExpanded(node) ? nestedNodes : [])));\n            })));\n        }), reduce((results, children) => {\n            results.push(...children);\n            return results;\n        }, []));\n    }\n    /**\n     * Converts children for certain tree configurations.\n     *\n     * This also computes parent, level, and group data.\n     */\n    _computeRenderingData(nodes, nodeType) {\n        // The only situations where we have to convert children types is when\n        // they're mismatched; i.e. if the tree is using a childrenAccessor and the\n        // nodes are flat, or if the tree is using a levelAccessor and the nodes are\n        // nested.\n        if (this.childrenAccessor && nodeType === 'flat') {\n            // This flattens children into a single array.\n            this._ariaSets.set(null, [...nodes]);\n            return this._flattenNestedNodesWithExpansion(nodes).pipe(map(flattenedNodes => ({\n                renderNodes: flattenedNodes,\n                flattenedNodes,\n            })));\n        }\n        else if (this.levelAccessor && nodeType === 'nested') {\n            // In the nested case, we only look for root nodes. The CdkNestedNode\n            // itself will handle rendering each individual node's children.\n            const levelAccessor = this.levelAccessor;\n            return of(nodes.filter(node => levelAccessor(node) === 0)).pipe(map(rootNodes => ({\n                renderNodes: rootNodes,\n                flattenedNodes: nodes,\n            })), tap(({ flattenedNodes }) => {\n                this._calculateParents(flattenedNodes);\n            }));\n        }\n        else if (nodeType === 'flat') {\n            // In the case of a TreeControl, we know that the node type matches up\n            // with the TreeControl, and so no conversions are necessary. Otherwise,\n            // we've already confirmed that the data model matches up with the\n            // desired node type here.\n            return of({ renderNodes: nodes, flattenedNodes: nodes }).pipe(tap(({ flattenedNodes }) => {\n                this._calculateParents(flattenedNodes);\n            }));\n        }\n        else {\n            // For nested nodes, we still need to perform the node flattening in order\n            // to maintain our caches for various tree operations.\n            this._ariaSets.set(null, [...nodes]);\n            return this._flattenNestedNodesWithExpansion(nodes).pipe(map(flattenedNodes => ({\n                renderNodes: nodes,\n                flattenedNodes,\n            })));\n        }\n    }\n    _updateCachedData(flattenedNodes) {\n        this._flattenedNodes.next(flattenedNodes);\n    }\n    _updateKeyManagerItems(flattenedNodes) {\n        this._keyManagerNodes.next(flattenedNodes);\n    }\n    /** Traverse the flattened node data and compute parents, levels, and group data. */\n    _calculateParents(flattenedNodes) {\n        const levelAccessor = this._getLevelAccessor();\n        if (!levelAccessor) {\n            return;\n        }\n        this._parents.clear();\n        this._ariaSets.clear();\n        for (let index = 0; index < flattenedNodes.length; index++) {\n            const dataNode = flattenedNodes[index];\n            const key = this._getExpansionKey(dataNode);\n            this._levels.set(key, levelAccessor(dataNode));\n            const parent = this._findParentForNode(dataNode, index, flattenedNodes);\n            this._parents.set(key, parent);\n            const parentKey = parent ? this._getExpansionKey(parent) : null;\n            const group = this._ariaSets.get(parentKey) ?? [];\n            group.splice(index, 0, dataNode);\n            this._ariaSets.set(parentKey, group);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTree, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkTree, isStandalone: true, selector: \"cdk-tree\", inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", levelAccessor: \"levelAccessor\", childrenAccessor: \"childrenAccessor\", trackBy: \"trackBy\", expansionKey: \"expansionKey\" }, host: { attributes: { \"role\": \"tree\" }, listeners: { \"keydown\": \"_sendKeydownToKeyManager($event)\" }, classAttribute: \"cdk-tree\" }, queries: [{ propertyName: \"_nodeDefs\", predicate: CdkTreeNodeDef, descendants: true }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: CdkTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"cdkTree\"], ngImport: i0, template: `<ng-container cdkTreeNodeOutlet></ng-container>`, isInline: true, dependencies: [{ kind: \"directive\", type: CdkTreeNodeOutlet, selector: \"[cdkTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTree, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-tree',\n                    exportAs: 'cdkTree',\n                    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                    host: {\n                        'class': 'cdk-tree',\n                        'role': 'tree',\n                        '(keydown)': '_sendKeydownToKeyManager($event)',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                    // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                    // declared elsewhere, they are checked when their declaration points are checked.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    standalone: true,\n                    imports: [CdkTreeNodeOutlet],\n                }]\n        }], ctorParameters: () => [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }], propDecorators: { dataSource: [{\n                type: Input\n            }], treeControl: [{\n                type: Input\n            }], levelAccessor: [{\n                type: Input\n            }], childrenAccessor: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], expansionKey: [{\n                type: Input\n            }], _nodeOutlet: [{\n                type: ViewChild,\n                args: [CdkTreeNodeOutlet, { static: true }]\n            }], _nodeDefs: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeDef, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    /**\n     * The role of the tree node.\n     *\n     * @deprecated This will be ignored; the tree will automatically determine the appropriate role\n     * for tree node. This input will be removed in a future version.\n     * @breaking-change 21.0.0\n     */\n    get role() {\n        return 'treeitem';\n    }\n    set role(_role) {\n        // ignore any role setting, we handle this internally.\n    }\n    /**\n     * Whether or not this node is expandable.\n     *\n     * If not using `FlatTreeControl`, or if `isExpandable` is not provided to\n     * `NestedTreeControl`, this should be provided for correct node a11y.\n     */\n    get isExpandable() {\n        return this._isExpandable();\n    }\n    set isExpandable(isExpandable) {\n        this._inputIsExpandable = isExpandable;\n        if ((this.data && !this._isExpandable) || !this._inputIsExpandable) {\n            return;\n        }\n        // If the node is being set to expandable, ensure that the status of the\n        // node is propagated\n        if (this._inputIsExpanded) {\n            this.expand();\n        }\n        else if (this._inputIsExpanded === false) {\n            this.collapse();\n        }\n    }\n    get isExpanded() {\n        return this._tree.isExpanded(this._data);\n    }\n    set isExpanded(isExpanded) {\n        this._inputIsExpanded = isExpanded;\n        if (isExpanded) {\n            this.expand();\n        }\n        else {\n            this.collapse();\n        }\n    }\n    getLabel() {\n        return this.typeaheadLabel || this._elementRef.nativeElement.textContent?.trim() || '';\n    }\n    /**\n     * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n     * in `CdkTree` and set the data to it.\n     */\n    static { this.mostRecentTreeNode = null; }\n    /** The tree node's data. */\n    get data() {\n        return this._data;\n    }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._dataChanges.next();\n        }\n    }\n    /* If leaf node, return true to not assign aria-expanded attribute */\n    get isLeafNode() {\n        // If flat tree node data returns false for expandable property, it's a leaf node\n        if (this._tree.treeControl?.isExpandable !== undefined &&\n            !this._tree.treeControl.isExpandable(this._data)) {\n            return true;\n            // If nested tree node data returns 0 descendants, it's a leaf node\n        }\n        else if (this._tree.treeControl?.isExpandable === undefined &&\n            this._tree.treeControl?.getDescendants(this._data).length === 0) {\n            return true;\n        }\n        return false;\n    }\n    get level() {\n        // If the tree has a levelAccessor, use it to get the level. Otherwise read the\n        // aria-level off the parent node and use it as the level for this node (note aria-level is\n        // 1-indexed, while this property is 0-indexed, so we don't need to increment).\n        return this._tree._getLevel(this._data) ?? this._parentNodeAriaLevel;\n    }\n    /** Determines if the tree node is expandable. */\n    _isExpandable() {\n        if (this._tree.treeControl) {\n            if (this.isLeafNode) {\n                return false;\n            }\n            // For compatibility with trees created using TreeControl before we added\n            // CdkTreeNode#isExpandable.\n            return true;\n        }\n        return this._inputIsExpandable;\n    }\n    /**\n     * Determines the value for `aria-expanded`.\n     *\n     * For non-expandable nodes, this is `null`.\n     */\n    _getAriaExpanded() {\n        if (!this._isExpandable()) {\n            return null;\n        }\n        return String(this.isExpanded);\n    }\n    /**\n     * Determines the size of this node's parent's child set.\n     *\n     * This is intended to be used for `aria-setsize`.\n     */\n    _getSetSize() {\n        return this._tree._getSetSize(this._data);\n    }\n    /**\n     * Determines the index (starting from 1) of this node in its parent's child set.\n     *\n     * This is intended to be used for `aria-posinset`.\n     */\n    _getPositionInSet() {\n        return this._tree._getPositionInSet(this._data);\n    }\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._tabindex = -1;\n        /** This emits when the node has been programatically activated or activated by keyboard. */\n        this.activation = new EventEmitter();\n        /** This emits when the node's expansion status has been changed. */\n        this.expandedChange = new EventEmitter();\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Emits when the node's data has changed. */\n        this._dataChanges = new Subject();\n        this._inputIsExpandable = false;\n        this._inputIsExpanded = undefined;\n        /**\n         * Flag used to determine whether or not we should be focusing the actual element based on\n         * some user interaction (click or focus). On click, we don't forcibly focus the element\n         * since the click could trigger some other component that wants to grab its own focus\n         * (e.g. menu, dialog).\n         */\n        this._shouldFocus = true;\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        CdkTreeNode.mostRecentTreeNode = this;\n    }\n    ngOnInit() {\n        this._parentNodeAriaLevel = getParentNodeAriaLevel(this._elementRef.nativeElement);\n        this._tree\n            ._getExpansionModel()\n            .changed.pipe(map(() => this.isExpanded), distinctUntilChanged())\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n        this._tree._setNodeTypeIfUnset('flat');\n        this._tree._registerNode(this);\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    getParent() {\n        return this._tree._getNodeParent(this) ?? null;\n    }\n    getChildren() {\n        return this._tree._getNodeChildren(this);\n    }\n    /** Focuses this data node. Implemented for TreeKeyManagerItem. */\n    focus() {\n        this._tabindex = 0;\n        if (this._shouldFocus) {\n            this._elementRef.nativeElement.focus();\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Defocus this data node. */\n    unfocus() {\n        this._tabindex = -1;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an activation event. Implemented for TreeKeyManagerItem. */\n    activate() {\n        if (this.isDisabled) {\n            return;\n        }\n        this.activation.next(this._data);\n    }\n    /** Collapses this data node. Implemented for TreeKeyManagerItem. */\n    collapse() {\n        if (this.isExpandable) {\n            this._tree.collapse(this._data);\n        }\n    }\n    /** Expands this data node. Implemented for TreeKeyManagerItem. */\n    expand() {\n        if (this.isExpandable) {\n            this._tree.expand(this._data);\n        }\n    }\n    /** Makes the node focusable. Implemented for TreeKeyManagerItem. */\n    makeFocusable() {\n        this._tabindex = 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    _focusItem() {\n        if (this.isDisabled) {\n            return;\n        }\n        this._tree._keyManager.focusItem(this);\n    }\n    _setActiveItem() {\n        if (this.isDisabled) {\n            return;\n        }\n        this._shouldFocus = false;\n        this._tree._keyManager.focusItem(this);\n        this._shouldFocus = true;\n    }\n    _emitExpansionState(expanded) {\n        this.expandedChange.emit(expanded);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkTreeNode, isStandalone: true, selector: \"cdk-tree-node\", inputs: { role: \"role\", isExpandable: [\"isExpandable\", \"isExpandable\", booleanAttribute], isExpanded: \"isExpanded\", isDisabled: [\"isDisabled\", \"isDisabled\", booleanAttribute], typeaheadLabel: [\"cdkTreeNodeTypeaheadLabel\", \"typeaheadLabel\"] }, outputs: { activation: \"activation\", expandedChange: \"expandedChange\" }, host: { attributes: { \"role\": \"treeitem\" }, listeners: { \"click\": \"_setActiveItem()\", \"focus\": \"_focusItem()\" }, properties: { \"attr.aria-expanded\": \"_getAriaExpanded()\", \"attr.aria-level\": \"level + 1\", \"attr.aria-posinset\": \"_getPositionInSet()\", \"attr.aria-setsize\": \"_getSetSize()\", \"tabindex\": \"_tabindex\" }, classAttribute: \"cdk-tree-node\" }, exportAs: [\"cdkTreeNode\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-tree-node',\n                    exportAs: 'cdkTreeNode',\n                    host: {\n                        'class': 'cdk-tree-node',\n                        '[attr.aria-expanded]': '_getAriaExpanded()',\n                        '[attr.aria-level]': 'level + 1',\n                        '[attr.aria-posinset]': '_getPositionInSet()',\n                        '[attr.aria-setsize]': '_getSetSize()',\n                        '[tabindex]': '_tabindex',\n                        'role': 'treeitem',\n                        '(click)': '_setActiveItem()',\n                        '(focus)': '_focusItem()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: CdkTree }], propDecorators: { role: [{\n                type: Input\n            }], isExpandable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], isExpanded: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], typeaheadLabel: [{\n                type: Input,\n                args: ['cdkTreeNodeTypeaheadLabel']\n            }], activation: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }] } });\nfunction getParentNodeAriaLevel(nodeElement) {\n    let parent = nodeElement.parentElement;\n    while (parent && !isNodeElement(parent)) {\n        parent = parent.parentElement;\n    }\n    if (!parent) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw Error('Incorrect tree structure containing detached node.');\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (parent.classList.contains('cdk-nested-tree-node')) {\n        return numberAttribute(parent.getAttribute('aria-level'));\n    }\n    else {\n        // The ancestor element is the cdk-tree itself\n        return 0;\n    }\n}\nfunction isNodeElement(element) {\n    const classList = element.classList;\n    return !!(classList?.contains('cdk-nested-tree-node') || classList?.contains('cdk-tree'));\n}\n\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    constructor(elementRef, tree, _differs) {\n        super(elementRef, tree);\n        this._differs = _differs;\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        this._tree\n            ._getDirectChildren(this.data)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(result => this.updateChildrenNodes(result));\n        this.nodeOutlet.changes\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        this._tree._setNodeTypeIfUnset('nested');\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkNestedTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkNestedTreeNode, isStandalone: true, selector: \"cdk-nested-tree-node\", host: { classAttribute: \"cdk-nested-tree-node\" }, providers: [\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n        ], queries: [{ propertyName: \"nodeOutlet\", predicate: CdkTreeNodeOutlet, descendants: true }], exportAs: [\"cdkNestedTreeNode\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-nested-tree-node',\n                    exportAs: 'cdkNestedTreeNode',\n                    providers: [\n                        { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'cdk-nested-tree-node',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: CdkTree }, { type: i0.IterableDiffers }], propDecorators: { nodeOutlet: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeOutlet, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n    constructor(_treeNode, _tree, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** CSS units used for the indentation value. */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = (this._treeNode.data && this._tree._getLevel(this._treeNode.data)) ?? null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = isNaN(value) ? null : value;\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = numberAttribute(value);\n        this._setPadding();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodePadding, deps: [{ token: CdkTreeNode }, { token: CdkTree }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkTreeNodePadding, isStandalone: true, selector: \"[cdkTreeNodePadding]\", inputs: { level: [\"cdkTreeNodePadding\", \"level\", numberAttribute], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodePadding]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkTreeNode }, { type: CdkTree }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { level: [{\n                type: Input,\n                args: [{ alias: 'cdkTreeNodePadding', transform: numberAttribute }]\n            }], indent: [{\n                type: Input,\n                args: ['cdkTreeNodePaddingIndent']\n            }] } });\n\n/**\n * Node toggle to expand and collapse the node.\n */\nclass CdkTreeNodeToggle {\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        /** Whether expand/collapse the node recursively. */\n        this.recursive = false;\n    }\n    // Toggle the expanded or collapsed state of this node.\n    //\n    // Focus this node with expanding or collapsing it. This ensures that the active node will always\n    // be visible when expanding and collapsing.\n    _toggle() {\n        this.recursive\n            ? this._tree.toggleDescendants(this._treeNode.data)\n            : this._tree.toggle(this._treeNode.data);\n        this._tree._keyManager.focusItem(this._treeNode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeToggle, deps: [{ token: CdkTree }, { token: CdkTreeNode }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkTreeNodeToggle, isStandalone: true, selector: \"[cdkTreeNodeToggle]\", inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\", booleanAttribute] }, host: { attributes: { \"tabindex\": \"-1\" }, listeners: { \"click\": \"_toggle(); $event.stopPropagation();\", \"keydown.Enter\": \"_toggle(); $event.preventDefault();\", \"keydown.Space\": \"_toggle(); $event.preventDefault();\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeToggle]',\n                    host: {\n                        '(click)': '_toggle(); $event.stopPropagation();',\n                        '(keydown.Enter)': '_toggle(); $event.preventDefault();',\n                        '(keydown.Space)': '_toggle(); $event.preventDefault();',\n                        'tabindex': '-1',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkTree }, { type: CdkTreeNode }], propDecorators: { recursive: [{\n                type: Input,\n                args: [{ alias: 'cdkTreeNodeToggleRecursive', transform: booleanAttribute }]\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeModule, imports: [CdkNestedTreeNode,\n            CdkTreeNodeDef,\n            CdkTreeNodePadding,\n            CdkTreeNodeToggle,\n            CdkTree,\n            CdkTreeNode,\n            CdkTreeNodeOutlet], exports: [CdkNestedTreeNode,\n            CdkTreeNodeDef,\n            CdkTreeNodePadding,\n            CdkTreeNodeToggle,\n            CdkTree,\n            CdkTreeNode,\n            CdkTreeNodeOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: EXPORTED_DECLARATIONS,\n                    exports: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getMultipleTreeControlsError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n","import * as i1 from '@angular/cdk/tree';\nimport { CdkTreeNode, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTree, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport * as i0 from '@angular/core';\nimport { numberAttribute, booleanAttribute, Directive, Attribute, Input, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * Determinte if argument TreeKeyManager is the NoopTreeKeyManager. This function is safe to use with SSR.\n */\nfunction isNoopTreeKeyManager(keyManager) {\n    return !!keyManager._isNoopTreeKeyManager;\n}\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nclass MatTreeNode extends CdkTreeNode {\n    /**\n     * The tabindex of the tree node.\n     *\n     * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n     *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n     *   an unexpected state. Tabindex to be removed in a future version.\n     * @breaking-change 21.0.0 Remove this attribute.\n     */\n    get tabIndexInputBinding() {\n        return this._tabIndexInputBinding;\n    }\n    set tabIndexInputBinding(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndexInputBinding = value;\n    }\n    _getTabindexAttribute() {\n        if (isNoopTreeKeyManager(this._tree._keyManager)) {\n            return this.tabIndexInputBinding;\n        }\n        return this._tabindex;\n    }\n    /**\n     * Whether the component is disabled.\n     *\n     * @deprecated This is an alias for `isDisabled`.\n     * @breaking-change 21.0.0 Remove this input\n     */\n    get disabled() {\n        return this.isDisabled;\n    }\n    set disabled(value) {\n        this.isDisabled = value;\n    }\n    constructor(elementRef, tree, \n    /**\n     * The tabindex of the tree node.\n     *\n     * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n     *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n     *   an unexpected state. Tabindex to be removed in a future version.\n     * @breaking-change 21.0.0 Remove this attribute.\n     */\n    tabIndex) {\n        super(elementRef, tree);\n        /**\n         * The default tabindex of the tree node.\n         *\n         * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n         *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n         *   an unexpected state. Tabindex to be removed in a future version.\n         * @breaking-change 21.0.0 Remove this attribute.\n         */\n        this.defaultTabIndex = 0;\n        this.tabIndexInputBinding = Number(tabIndex) || this.defaultTabIndex;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNode, deps: [{ token: i0.ElementRef }, { token: i1.CdkTree }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatTreeNode, isStandalone: true, selector: \"mat-tree-node\", inputs: { tabIndexInputBinding: [\"tabIndex\", \"tabIndexInputBinding\", (value) => (value == null ? 0 : numberAttribute(value))], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { activation: \"activation\", expandedChange: \"expandedChange\" }, host: { listeners: { \"click\": \"_focusItem()\" }, properties: { \"attr.aria-expanded\": \"_getAriaExpanded()\", \"attr.aria-level\": \"level + 1\", \"attr.aria-posinset\": \"_getPositionInSet()\", \"attr.aria-setsize\": \"_getSetSize()\", \"tabindex\": \"_getTabindexAttribute()\" }, classAttribute: \"mat-tree-node\" }, providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }], exportAs: [\"matTreeNode\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-tree-node',\n                    exportAs: 'matTreeNode',\n                    outputs: ['activation', 'expandedChange'],\n                    providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }],\n                    host: {\n                        'class': 'mat-tree-node',\n                        '[attr.aria-expanded]': '_getAriaExpanded()',\n                        '[attr.aria-level]': 'level + 1',\n                        '[attr.aria-posinset]': '_getPositionInSet()',\n                        '[attr.aria-setsize]': '_getSetSize()',\n                        '(click)': '_focusItem()',\n                        '[tabindex]': '_getTabindexAttribute()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.CdkTree }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { tabIndexInputBinding: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                        alias: 'tabIndex',\n                    }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTreeNodeDef, isStandalone: true, selector: \"[matTreeNodeDef]\", inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeDef]',\n                    inputs: [{ name: 'when', alias: 'matTreeNodeDefWhen' }],\n                    providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }],\n                    standalone: true,\n                }]\n        }], propDecorators: { data: [{\n                type: Input,\n                args: ['matTreeNode']\n            }] } });\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    /**\n     * Whether the node is disabled.\n     *\n     * @deprecated This is an alias for `isDisabled`.\n     * @breaking-change 21.0.0 Remove this input\n     */\n    get disabled() {\n        return this.isDisabled;\n    }\n    set disabled(value) {\n        this.isDisabled = value;\n    }\n    /** Tabindex of the node. */\n    get tabIndex() {\n        return this.isDisabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value;\n    }\n    constructor(elementRef, tree, differs, \n    // Ignore tabindex attribute. MatTree manages its own active state using TreeKeyManager.\n    // Keeping tabIndex in constructor for backwards compatibility with trees created before\n    // introducing TreeKeyManager.\n    tabIndex) {\n        super(elementRef, tree, differs);\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/19145\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #19145 is fixed\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatNestedTreeNode, deps: [{ token: i0.ElementRef }, { token: i1.CdkTree }, { token: i0.IterableDiffers }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatNestedTreeNode, isStandalone: true, selector: \"mat-nested-tree-node\", inputs: { node: [\"matNestedTreeNode\", \"node\"], disabled: [\"disabled\", \"disabled\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, outputs: { activation: \"activation\", expandedChange: \"expandedChange\" }, host: { classAttribute: \"mat-nested-tree-node\" }, providers: [\n            { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n        ], exportAs: [\"matNestedTreeNode\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-nested-tree-node',\n                    exportAs: 'matNestedTreeNode',\n                    outputs: ['activation', 'expandedChange'],\n                    providers: [\n                        { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'mat-nested-tree-node',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.CdkTree }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { node: [{\n                type: Input,\n                args: ['matNestedTreeNode']\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }] } });\n\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodePadding, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatTreeNodePadding, isStandalone: true, selector: \"[matTreeNodePadding]\", inputs: { level: [\"matTreeNodePadding\", \"level\", numberAttribute], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodePadding]',\n                    providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }],\n                    standalone: true,\n                }]\n        }], propDecorators: { level: [{\n                type: Input,\n                args: [{ alias: 'matTreeNodePadding', transform: numberAttribute }]\n            }], indent: [{\n                type: Input,\n                args: ['matTreeNodePaddingIndent']\n            }] } });\n\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeOutlet, deps: [{ token: i0.ViewContainerRef }, { token: CDK_TREE_NODE_OUTLET_NODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTreeNodeOutlet, isStandalone: true, selector: \"[matTreeNodeOutlet]\", providers: [\n            {\n                provide: CdkTreeNodeOutlet,\n                useExisting: MatTreeNodeOutlet,\n            },\n        ], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeOutlet]',\n                    providers: [\n                        {\n                            provide: CdkTreeNodeOutlet,\n                            useExisting: MatTreeNodeOutlet,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TREE_NODE_OUTLET_NODE]\n                }, {\n                    type: Optional\n                }] }] });\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTree extends CdkTree {\n    constructor() {\n        super(...arguments);\n        // Outlets within the tree's template where the dataNodes will be inserted.\n        // We need an initializer here to avoid a TS error. The value will be set in `ngAfterViewInit`.\n        this._nodeOutlet = undefined;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTree, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTree, isStandalone: true, selector: \"mat-tree\", host: { classAttribute: \"mat-tree\" }, providers: [{ provide: CdkTree, useExisting: MatTree }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: MatTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"matTree\"], usesInheritance: true, ngImport: i0, template: `<ng-container matTreeNodeOutlet></ng-container>`, isInline: true, styles: [\".mat-tree{display:block;background-color:var(--mat-tree-container-background-color, var(--mat-app-surface))}.mat-tree-node,.mat-nested-tree-node{color:var(--mat-tree-node-text-color, var(--mat-app-on-surface));font-family:var(--mat-tree-node-text-font, var(--mat-app-body-large-font));font-size:var(--mat-tree-node-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-tree-node-text-weight, var(--mat-app-body-large-weight))}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word;min-height:var(--mat-tree-node-min-height)}.mat-nested-tree-node{border-bottom-width:0}\"], dependencies: [{ kind: \"directive\", type: MatTreeNodeOutlet, selector: \"[matTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTree, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tree', exportAs: 'matTree', template: `<ng-container matTreeNodeOutlet></ng-container>`, host: {\n                        'class': 'mat-tree',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [{ provide: CdkTree, useExisting: MatTree }], standalone: true, imports: [MatTreeNodeOutlet], styles: [\".mat-tree{display:block;background-color:var(--mat-tree-container-background-color, var(--mat-app-surface))}.mat-tree-node,.mat-nested-tree-node{color:var(--mat-tree-node-text-color, var(--mat-app-on-surface));font-family:var(--mat-tree-node-text-font, var(--mat-app-body-large-font));font-size:var(--mat-tree-node-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-tree-node-text-weight, var(--mat-app-body-large-weight))}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word;min-height:var(--mat-tree-node-min-height)}.mat-nested-tree-node{border-bottom-width:0}\"] }]\n        }], propDecorators: { _nodeOutlet: [{\n                type: ViewChild,\n                args: [MatTreeNodeOutlet, { static: true }]\n            }] } });\n\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeToggle, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTreeNodeToggle, isStandalone: true, selector: \"[matTreeNodeToggle]\", inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeToggle]',\n                    providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }],\n                    inputs: [{ name: 'recursive', alias: 'matTreeNodeToggleRecursive' }],\n                    standalone: true,\n                }]\n        }] });\n\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet,\n];\nclass MatTreeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeModule, imports: [CdkTreeModule, MatCommonModule, MatNestedTreeNode,\n            MatTreeNodeDef,\n            MatTreeNodePadding,\n            MatTreeNodeToggle,\n            MatTree,\n            MatTreeNode,\n            MatTreeNodeOutlet], exports: [MatCommonModule, MatNestedTreeNode,\n            MatTreeNodeDef,\n            MatTreeNodePadding,\n            MatTreeNodeToggle,\n            MatTree,\n            MatTreeNode,\n            MatTreeNodeOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeModule, imports: [CdkTreeModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTreeModule, MatCommonModule, ...MAT_TREE_DIRECTIVES],\n                    exports: [MatCommonModule, MAT_TREE_DIRECTIVES],\n                }]\n        }] });\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n *\n * @deprecated Use MatTree#childrenAccessor and MatTreeNode#isExpandable\n * instead. To be removed in a future version.\n * @breaking-change 21.0.0\n */\nclass MatTreeFlattener {\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    _flattenNode(node, level, resultNodes, parentMap) {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe(children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    });\n                }\n            }\n        }\n        return resultNodes;\n    }\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((child, index) => {\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        });\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData) {\n        let resultNodes = [];\n        structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        let results = [];\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach(node => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n        return results;\n    }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass MatTreeFlatDataSource extends DataSource {\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    constructor(_treeControl, _treeFlattener, initialData) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject([]);\n        if (initialData) {\n            // Assign the data through the constructor to ensure that all of the logic is executed.\n            this.data = initialData;\n        }\n    }\n    connect(collectionViewer) {\n        return merge(collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._flattenedData).pipe(map(() => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n    }\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data]).pipe(map(() => this.data));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n","import { Component, inject } from '@angular/core';\r\nimport { FieldSettingsPickerMerged } from '../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { FieldSettingsWithPickerSource } from '../../../../../../edit-types/src/PickerSources';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { FieldState } from '../../fields/field-state';\r\nimport { EditRoutingService } from '../../routing/edit-routing.service';\r\n\r\n/**\r\n * Base class for Picker Part Components.\r\n */\r\n@Component({\r\n  selector: 'app-picker-part-base',\r\n  template: '',\r\n})\r\nexport class PickerPartBaseComponent {\r\n\r\n  //#region Setup: Logging, inject, constructor\r\n\r\n  log = classLog({PickerPartBaseComponent});\r\n\r\n  /** Entire Field State */\r\n  protected fieldState = inject(FieldState) as FieldState<FieldValue, FieldSettingsWithPickerSource & FieldSettingsPickerMerged>;\r\n\r\n  /** Routing service to open edit-dialogs for entities where necessary */\r\n  editRoutingService = inject(EditRoutingService);\r\n\r\n  constructor() { }\r\n\r\n  //#endregion\r\n\r\n  //#region Settings - simple values\r\n\r\n  protected enableTextEntry = this.fieldState.settingExt('EnableTextEntry');\r\n\r\n  //#endregion\r\n\r\n  /** Picker Data Bundle with Source and state etc. */\r\n  protected pickerData = this.fieldState.pickerData;\r\n\r\n  protected isInFreeTextMode = this.pickerData.isInFreeTextMode;\r\n\r\n  protected ui = this.fieldState.ui;\r\n\r\n  /** All Selected Items */\r\n  protected selectedItems = this.pickerData.selectedAll;\r\n  protected selectedItem = this.pickerData.selectedOne;\r\n  itemCount = computedObj('itemCount', () => this.selectedItems().length);\r\n\r\n  /** Field Configuration - from field state */\r\n  protected config = this.fieldState.config;\r\n\r\n  /** Label and other basics to show from the picker data. Is not auto-attached, since it's not the initial/top-level component. */\r\n  protected basics = this.fieldState.basics;\r\n\r\n  /** Features */\r\n  protected features = this.pickerData.features;\r\n\r\n  //#region CRUD style operations\r\n\r\n  expandDialog() {\r\n    const config = this.fieldState.config;\r\n    if (config.initialDisabled) return;\r\n    this.editRoutingService.expand(true, config.index, config.entityGuid);\r\n  }\r\n\r\n  openNewEntityDialog(entityType: string): void {\r\n    this.log.a(`openNewEntityDialog: '${entityType}'`);\r\n    this.pickerData.source.editItem(null, entityType);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  toggleFreeText(disabled: boolean): void {\r\n    this.log.a(`toggleFreeText ${disabled}`);\r\n    if (disabled) return;\r\n    this.pickerData.toggleFreeTextMode();\r\n  }\r\n}\r\n","\r\n@if (buttons().edit)\r\n{\r\n  <!-- Disable edit only if it was disabled in the settings, not if disabled by language change -->\r\n  <!-- note: not sure if the above comment is applied in this code, as it still uses ui().disabled -->\r\n  <button\r\n    mat-icon-button\r\n    matSuffix\r\n    class=\"picker-inline-button\"\r\n    tippyTranslate=\"Fields.Picker.Edit\"\r\n    [disabled]=\"ui().disabled || config.initialDisabled\"\r\n    appClickStopPropagation\r\n    (click)=\"edit(item().value, item().id)\"\r\n  >\r\n    <mat-icon>edit</mat-icon>\r\n  </button>\r\n}\r\n\r\n@if (buttons().remove)\r\n{\r\n  <button\r\n    mat-icon-button\r\n    matSuffix\r\n    class=\"picker-inline-button\"\r\n    tippyTranslate=\"Fields.Picker.Remove\"\r\n    [disabled]=\"ui().disabled\"\r\n    appClickStopPropagation\r\n    (click)=\"removeItem(index())\"\r\n  >\r\n    <mat-icon>do_not_disturb_on</mat-icon>\r\n  </button>\r\n}\r\n\r\n\r\n@if (buttons().delete)\r\n{\r\n  <button\r\n    mat-icon-button\r\n    matSuffix\r\n    class=\"picker-inline-button\"\r\n    tippyTranslate=\"Fields.Picker.Delete\"\r\n    [disabled]=\"ui().disabled\"\r\n    appClickStopPropagation\r\n    (click)=\"deleteItem(index(), item().value)\"\r\n  >\r\n    <mat-icon>delete</mat-icon>\r\n  </button>\r\n}\r\n","import { Component, input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ClickStopPropagationDirective } from '../../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { PickerFeaturesItem } from '../picker-features.model';\r\nimport { PickerPartBaseComponent } from '../picker-part-base.component';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-picker-item-buttons',\r\n  templateUrl: './picker-item-buttons.component.html',\r\n  styleUrl: './picker-item-buttons.component.scss',\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n    ClickStopPropagationDirective,\r\n  ],\r\n})\r\nexport class PickerItemButtonsComponent extends PickerPartBaseComponent {\r\n\r\n  /** The item to show the label/buttons for */\r\n  item = input.required<PickerItem>();\r\n  \r\n  /** The item index, important for certain button actions */\r\n  index = input.required<number>();\r\n\r\n  /** If the buttons should show or not - I believe ATM it's always true */\r\n  show = input.required<boolean>();\r\n\r\n  /** UI Features can let the control determine that certain buttons shouldn't be available, eg. \"remove\" on radio-button */\r\n  uiFeatures = input<Partial<PickerFeaturesItem>>(null);\r\n\r\n  constructor() { super(); }\r\n\r\n  /** Current applicable settings like \"enableEdit\" etc. */\r\n  buttons = computedObj('buttons', () => {\r\n    // note that selected can be null, since a item in the list can be null\r\n    const item = this.item();\r\n    const show = this.show() && !!item;\r\n    const f = this.features();\r\n    const uif = this.uiFeatures();\r\n    return {\r\n      edit: f.edit && uif?.edit != false && show && !item?.noEdit,\r\n      remove: f.remove && uif?.remove != false && show && !item?.noRemove,\r\n      delete: f.delete && uif?.delete != false && show && !item?.noDelete,\r\n    };\r\n  });\r\n  \r\n\r\n  edit(entityGuid: string, entityId: number): void {\r\n    this.log.a(`edit guid: '${entityGuid}'; id: '${entityId}'`);\r\n    this.pickerData.source.editItem({ entityGuid, entityId }, null);\r\n  }\r\n\r\n  removeItem(index: number): void {\r\n    this.log.a(`removeItem index: '${index}'`);\r\n    this.pickerData.state.remove(index);\r\n  }\r\n\r\n  deleteItem(index: number, entityGuid: string): void {\r\n    this.log.a(`deleteItem index: '${index}'; entityGuid: '${entityGuid}'`);\r\n    this.pickerData.source.deleteItem({ index, entityGuid });\r\n  }\r\n\r\n}\r\n","@if (helpLink()) {\r\n  <mat-icon (click)=\"goToLink()\" [tippy]=\"helpLink()\" appClickStopPropagation>open_in_new</mat-icon>\r\n}","import { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ClickStopPropagationDirective } from '../../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-picker-help',\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    TippyDirective,\r\n    ClickStopPropagationDirective,\r\n  ],\r\n  templateUrl: './picker-icon-help.component.html',\r\n})\r\nexport class PickerIconHelpComponent {\r\n  helpLink = input<string>();\r\n\r\n  goToLink(): void {\r\n    window.open(this.helpLink(), '_blank');\r\n  }\r\n}\r\n","@if (infoBox()) {\r\n  <mat-icon [tippy]=\"infoBox()\" [tippyAllowHtml]=\"true\" [tippyArrow]=\"true\" tippyFontSize=\"larger\" appClickStopPropagation>\r\n    info\r\n  </mat-icon>\r\n}\r\n","import { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ClickStopPropagationDirective } from '../../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-picker-icon-info',\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    TippyDirective,\r\n    ClickStopPropagationDirective,\r\n  ],\r\n  templateUrl: './picker-icon-info.component.html',\r\n})\r\nexport class PickerIconInfoComponent {\r\n  infoBox = input<string>();\r\n}\r\n","import { isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, ElementRef, Component, Inject, Input, ViewChild, isDevMode, Injectable, TemplateRef, Directive, NgModule } from '@angular/core';\nimport tippy, { hideAll, createSingleton } from 'tippy.js';\nimport { Subject } from 'rxjs';\n\nconst messagesDict = {\n    instanceAlreadyExist: `Instance with name #tippyName already exist, please pick unique [tippyName]`,\n    instanceNotExist: `Instance with name #tippyName does not exist`,\n    childrenInstancesNotFoundGrouped: `No children tippy instances found within 'ngx-tippy-group' component`,\n    childrenInstancesNotFoundSingleton: `No children tippy instances found within 'ngx-tippy-singleton' component`,\n    singletonInstanceAlreadyExist: `Singleton instance with name #singletonName already exist, please pick unique [singletonName]`,\n};\n\nconst tippyFakeInstance = {\n    clearDelayTimeouts: () => { },\n    destroy: () => { },\n    disable: () => { },\n    enable: () => { },\n    hide: () => { },\n    hideWithInteractivity: () => { },\n    id: 0,\n    plugins: [\n        {\n            name: 'followCursor',\n            defaultValue: false,\n        },\n    ],\n    popper: {\n        state: {},\n    },\n    popperInstance: {},\n    props: {},\n    reference: {},\n    setContent: () => { },\n    setProps: () => { },\n    show: () => { },\n    state: {\n        isEnabled: true,\n        isVisible: true,\n        isDestroyed: false,\n        isMounted: true,\n        isShown: false,\n    },\n    unmount: () => { },\n};\n\nconst NGX_TIPPY_MESSAGES = new InjectionToken('NGX_TIPPY_MESSAGES', {\n    providedIn: 'root',\n    factory: () => messagesDict,\n});\nconst TIPPY_FAKE_INSTANCE = new InjectionToken('TIPPY_FAKE_INSTANCE', {\n    providedIn: 'root',\n    factory: () => tippyFakeInstance,\n});\nconst NGX_TIPPY_CONFIG = new InjectionToken('NGX_TIPPY_CONFIG', {\n    providedIn: 'root',\n    factory: () => ({}),\n});\n\n/**\n * Different tooltip content to many different elements, but only one tippy instance\n */\nclass NgxTippyGroupComponent {\n    constructor(platform, messagesDict, ngxTippyConfig) {\n        this.platform = platform;\n        this.messagesDict = messagesDict;\n        this.ngxTippyConfig = ngxTippyConfig;\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platform))\n            return;\n        this.setTooltips();\n    }\n    setTooltips() {\n        const contentWrapperNativeEl = this.contentWrapper.nativeElement;\n        const tooltips = Array.from(contentWrapperNativeEl.querySelectorAll('[data-tippy-grouped]'));\n        if (tooltips.length) {\n            this.initTippy(tooltips);\n        }\n        else {\n            throw new Error(this.messagesDict.childrenInstancesNotFoundGrouped);\n        }\n    }\n    initTippy(tooltips) {\n        tippy(tooltips, {\n            ...this.ngxTippyConfig,\n            ...this.groupedProps,\n        });\n    }\n}\nNgxTippyGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyGroupComponent, deps: [{ token: PLATFORM_ID }, { token: NGX_TIPPY_MESSAGES }, { token: NGX_TIPPY_CONFIG }], target: i0.ɵɵFactoryTarget.Component });\nNgxTippyGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NgxTippyGroupComponent, selector: \"ngx-tippy-group\", inputs: { groupedProps: \"groupedProps\" }, viewQueries: [{ propertyName: \"contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, read: ElementRef }], ngImport: i0, template: `\n    <div #contentWrapper>\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-tippy-group',\n                    template: `\n    <div #contentWrapper>\n      <ng-content></ng-content>\n    </div>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_TIPPY_MESSAGES]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_TIPPY_CONFIG]\n                }] }]; }, propDecorators: { groupedProps: [{\n                type: Input\n            }], contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { read: ElementRef, static: false }]\n            }] } });\n\nclass DevModeService {\n    isDevMode() {\n        return isDevMode();\n    }\n}\nDevModeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: DevModeService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDevModeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: DevModeService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: DevModeService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nvar InstanceChangeReasonEnum;\n(function (InstanceChangeReasonEnum) {\n    InstanceChangeReasonEnum[\"SetInstance\"] = \"setInstance\";\n    InstanceChangeReasonEnum[\"Show\"] = \"show\";\n    InstanceChangeReasonEnum[\"Hide\"] = \"hide\";\n    InstanceChangeReasonEnum[\"HideWithInteractivity\"] = \"hideWithInteractivity\";\n    InstanceChangeReasonEnum[\"Disable\"] = \"disable\";\n    InstanceChangeReasonEnum[\"Enable\"] = \"enable\";\n    InstanceChangeReasonEnum[\"SetProps\"] = \"setProps\";\n    InstanceChangeReasonEnum[\"SetContent\"] = \"setContent\";\n    InstanceChangeReasonEnum[\"Unmount\"] = \"unmount\";\n    InstanceChangeReasonEnum[\"ClearDelayTimeouts\"] = \"clearDelayTimeouts\";\n    InstanceChangeReasonEnum[\"Destroy\"] = \"destroy\";\n})(InstanceChangeReasonEnum || (InstanceChangeReasonEnum = {}));\nvar NgxTippyNamesEnum;\n(function (NgxTippyNamesEnum) {\n    NgxTippyNamesEnum[\"TippyName\"] = \"tippyName\";\n    NgxTippyNamesEnum[\"SingletonName\"] = \"singletonName\";\n})(NgxTippyNamesEnum || (NgxTippyNamesEnum = {}));\n\nclass CompRef {\n    constructor(args) {\n        this.args = args;\n        this.compRef = this.args.viewContainerRef.createComponent(this.args.component);\n    }\n    detectChanges() {\n        this.compRef?.changeDetectorRef.detectChanges();\n        return this;\n    }\n    getElement() {\n        return this.compRef?.location.nativeElement;\n    }\n    destroy() {\n        this.compRef?.destroy();\n        this.compRef = null;\n    }\n}\n\nconst isComponent = (value) => typeof value === 'function';\n\nconst isHTMLTemplate = (value) => value instanceof HTMLTemplateElement;\n\nconst isTemplateRef = (value) => value instanceof TemplateRef;\n\n/**\n * Set display: \"block\" for content wrapper element\n *\n * @param tippyContent  { NgxTippyContent }\n * @param renderer { Renderer2 }\n */\nconst setTemplateVisible = (tippyContent, renderer) => {\n    tippyContent && tippyContent instanceof Element && renderer.setStyle(tippyContent, 'display', 'block');\n};\n\nclass TplRef {\n    constructor(args) {\n        this.args = args;\n        this.viewRef = this.args.tpl.createEmbeddedView(this.args.context || {});\n        this.viewRef.detectChanges();\n        this.args.appRef.attachView(this.viewRef);\n    }\n    detectChanges() {\n        this.viewRef?.detectChanges();\n        return this;\n    }\n    getElement() {\n        if (!this.viewRef)\n            return null;\n        const rootNodes = this.viewRef.rootNodes;\n        if (rootNodes.length === 1 && rootNodes[0].nodeType === Node.ELEMENT_NODE) {\n            this.element = rootNodes[0];\n        }\n        else {\n            this.element = document.createElement('div');\n            this.element.append(...rootNodes);\n        }\n        return this.element;\n    }\n    destroy() {\n        if (!this.viewRef)\n            return;\n        if (this.viewRef.rootNodes[0] !== 1) {\n            this.element?.parentNode?.removeChild(this.element);\n            this.element = null;\n        }\n        this.viewRef.destroy();\n        this.viewRef = null;\n    }\n}\n\nclass NgxViewService {\n    constructor(appRef) {\n        this.appRef = appRef;\n    }\n    getViewRefInstance(content, tippyName, tippyContext = {}) {\n        let viewRef;\n        if (isTemplateRef(content)) {\n            tippyContext.$implicit = tippyName;\n            viewRef = this.createTemplate(content, tippyContext);\n        }\n        else if (isComponent(content)) {\n            viewRef = this.createComponent(content);\n        }\n        else if (isHTMLTemplate(content)) {\n            viewRef = {\n                getElement: () => content.content,\n            };\n        }\n        else {\n            viewRef = {\n                getElement: () => content,\n            };\n        }\n        return viewRef;\n    }\n    createTemplate(tpl, context) {\n        return new TplRef({\n            tpl,\n            context,\n            appRef: this.appRef,\n        });\n    }\n    createComponent(component) {\n        return new CompRef({\n            component,\n            viewContainerRef: this.viewContainerRef,\n        });\n    }\n}\nNgxViewService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxViewService, deps: [{ token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Injectable });\nNgxViewService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxViewService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxViewService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }]; } });\n\nclass NgxTippyService {\n    constructor(rendererFactory, devModeService, ngxViewService, messagesDict) {\n        this.devModeService = devModeService;\n        this.ngxViewService = ngxViewService;\n        this.messagesDict = messagesDict;\n        this.tippyInstances = new Map();\n        this.tippySingletonEntryInstances = new Map();\n        this.tippyInstances$ = new Subject();\n        this.createRenderer(rendererFactory);\n    }\n    /**\n     * Working with storage\n     */\n    /**\n     * Write tippy instances to storage\n     *\n     * @param name { string } name of tippy instance\n     * @param state { NgxTippyInstance } tippy instance\n     */\n    setInstance(name, state) {\n        const instance = this.tippyInstances.get(name);\n        if (instance) {\n            const errMessage = this.getMessage({\n                reason: 'instanceAlreadyExist',\n                messageFor: NgxTippyNamesEnum.TippyName,\n                name,\n            });\n            this.throwError(errMessage);\n        }\n        else {\n            this.tippyInstances.set(name, state);\n            this.emitInstancesChange({\n                name,\n                reason: InstanceChangeReasonEnum.SetInstance,\n                instance: state,\n            });\n        }\n    }\n    /**\n     * Get specific tippy instance\n     *\n     * @param name { string } name of tippy instance\n     * @returns { NgxTippyInstance | null } specific tippy instance or null\n     */\n    getInstance(name) {\n        return this.tippyInstances.has(name) ? this.tippyInstances.get(name) : null;\n    }\n    /**\n     * Get all tippy instances from storage\n     *\n     * @returns { Map<string, NgxTippyInstance> | null } all tippy instances or null\n     */\n    getInstances() {\n        return this.tippyInstances.size ? this.tippyInstances : null;\n    }\n    /**\n     * Write singleton instances to storage\n     *\n     * @param name { string } name of tippy instance\n     * @param state { NgxTippyInstance } tippy instance\n     */\n    setSingletonInstance(name, state) {\n        if (this.tippySingletonEntryInstances.has(name)) {\n            const errMessage = this.getMessage({\n                reason: 'singletonInstanceAlreadyExist',\n                messageFor: NgxTippyNamesEnum.SingletonName,\n                name,\n            });\n            this.throwError(errMessage);\n        }\n        else {\n            this.tippySingletonEntryInstances.set(name, state);\n        }\n    }\n    /**\n     * Get specific singleton tippy instance\n     *\n     * @param name { string } name of singleton tippy instance\n     * @returns { NgxTippySingletonInstance | null } specific singleton tippy instance or null\n     */\n    getSingletonInstance(name) {\n        return this.tippySingletonEntryInstances.has(name) ? this.tippySingletonEntryInstances.get(name) : null;\n    }\n    /**\n     * Get all singleton tippy instances\n     *\n     * @returns { Map<string, NgxTippyInstance> | null } all singleton tippy instances or null\n     */\n    getSingletonInstances() {\n        return this.tippySingletonEntryInstances.size ? this.tippySingletonEntryInstances : null;\n    }\n    /**\n     * Working with tippy instance methods\n     */\n    /**\n     * Programmatically show the tippy\n     *\n     * @param name { string } name of tippy instance\n     */\n    show(name) {\n        this.callNativeTippyMethod(name, InstanceChangeReasonEnum.Show);\n    }\n    /**\n     * Programmatically hide the tippy\n     *\n     * @param name { string } name of tippy instance\n     */\n    hide(name) {\n        this.callNativeTippyMethod(name, InstanceChangeReasonEnum.Hide);\n    }\n    /**\n     * Will hide the tippy only if the cursor is outside of the tippy's interactive region\n     * This allows you to programmatically hook into interactive behavior upon a mouseleave event if implementing custom event listeners\n     *\n     * @param name { string } name of tippy instance\n     * @param name { mouseEvent } pass the mouse event object in from your event listener\n     */\n    hideWithInteractivity(name, mouseEvent) {\n        this.callNativeTippyMethod(name, InstanceChangeReasonEnum.HideWithInteractivity, mouseEvent);\n    }\n    /**\n     * Prevent a tippy from showing or hiding\n     *\n     * @param name { string } name of tippy instance\n     */\n    disable(name) {\n        this.callNativeTippyMethod(name, InstanceChangeReasonEnum.Disable);\n    }\n    /**\n     * Re-enable a tippy\n     *\n     * @param name { string } name of tippy instance\n     */\n    enable(name) {\n        this.callNativeTippyMethod(name, InstanceChangeReasonEnum.Enable);\n    }\n    /**\n     * Update any tippy props\n     *\n     * @param name { string } name of tippy instance\n     * @param tippyProps { NgxTippyProps } new props\n     */\n    setProps(name, tippyProps) {\n        this.callNativeTippyMethod(name, InstanceChangeReasonEnum.SetProps, tippyProps);\n    }\n    /**\n     * Update the content for tippy\n     *\n     * @param name { string } name of tippy instance\n     * @param tippyContent { NgxTippyContent } new content\n     */\n    setContent(name, tippyContent, tippyContext) {\n        const instance = this.getInstance(name);\n        if (!instance) {\n            this.throwErrorInstanceNotExist(name);\n            return;\n        }\n        if (tippyContent) {\n            const viewRef = this.ngxViewService.getViewRefInstance(tippyContent, instance.tippyName, tippyContext);\n            const content = viewRef.getElement();\n            if (content) {\n                setTemplateVisible(content, this.renderer);\n                instance.setContent(content);\n                instance.viewRef = viewRef;\n                this.emitInstancesChange({\n                    name,\n                    reason: 'setContent',\n                    instance,\n                });\n            }\n            else {\n                this.throwError('message');\n            }\n        }\n    }\n    /**\n     * Unmount the tippy from the DOM\n     *\n     * @param name { string } name of tippy instance\n     */\n    unmount(name) {\n        this.callNativeTippyMethod(name, InstanceChangeReasonEnum.Unmount);\n    }\n    /**\n     * Clears the instances delay timeouts\n     *\n     * @param name { string } name of tippy instance\n     */\n    clearDelayTimeouts(name) {\n        this.callNativeTippyMethod(name, InstanceChangeReasonEnum.ClearDelayTimeouts);\n    }\n    /**\n     * Permanently destroy and clean up the tippy instance\n     *\n     * @param name { string } name of tippy instance\n     */\n    destroy(name) {\n        this.callNativeTippyMethod(name, InstanceChangeReasonEnum.Destroy);\n        this.tippyInstances.delete(name);\n    }\n    /** Working with tippy static methods */\n    /**\n     * Set the default props for each new tippy instance\n     *\n     * @param tippyProps { NgxTippyDefaultProps } default props\n     */\n    setDefaultProps(tippyProps) {\n        tippy.setDefaultProps(tippyProps);\n    }\n    /**\n     * Show all tippies\n     */\n    showAll() {\n        this.tippyInstances.forEach((instance, name) => {\n            instance.show();\n            this.emitInstancesChange({\n                name,\n                reason: 'show',\n                instance,\n            });\n        });\n    }\n    /**\n     * Hide all tippies or hide all except a particular one\n     * Additional hide them with duration\n     *\n     * @param { NgxTippyHideAllOptions } [options] - additional hiding options\n     */\n    hideAll(options) {\n        const exclude = this.getInstance(options?.excludeName || '');\n        const duration = options?.duration;\n        hideAll({ duration, ...exclude });\n    }\n    /**\n     * Subscription to change of tippy instances\n     *\n     * @returns { Observable<InstancesChanges> } observable of tippy instances change\n     */\n    get instancesChanges() {\n        return this.tippyInstances$.asObservable();\n    }\n    /**\n     * Service methods\n     */\n    callNativeTippyMethod(name, method, arg) {\n        const instance = this.getInstance(name);\n        if (instance) {\n            instance[method](arg);\n            this.emitInstancesChange({\n                name,\n                reason: method,\n                instance,\n            });\n        }\n        else {\n            this.throwErrorInstanceNotExist(name);\n        }\n    }\n    emitInstancesChange({ name, reason, instance, }) {\n        this.tippyInstances$.next({ name, reason, instance });\n    }\n    createRenderer(rendererFactory) {\n        this.renderer = rendererFactory.createRenderer(null, null);\n    }\n    throwErrorInstanceNotExist(name) {\n        const errMessage = this.getMessage({\n            reason: 'instanceNotExist',\n            messageFor: NgxTippyNamesEnum.TippyName,\n            name,\n        });\n        this.throwError(errMessage);\n    }\n    throwError(message, errorConstructor = Error) {\n        if (this.devModeService.isDevMode())\n            throw new errorConstructor(message);\n    }\n    getMessage({ reason, messageFor, name, }) {\n        return this.messagesDict[reason].replace(`#${messageFor}`, `'${name}'`);\n    }\n}\nNgxTippyService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyService, deps: [{ token: i0.RendererFactory2 }, { token: DevModeService }, { token: NgxViewService }, { token: NGX_TIPPY_MESSAGES }], target: i0.ɵɵFactoryTarget.Injectable });\nNgxTippyService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.RendererFactory2 }, { type: DevModeService }, { type: NgxViewService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_TIPPY_MESSAGES]\n                }] }]; } });\n\n/**\n * Tippy singleton - single tippy element that takes the place of an array of regular tippy instances\n */\nclass NgxTippySingletonComponent {\n    constructor(platform, ngxTippyService, messagesDict, ngxTippyConfig) {\n        this.platform = platform;\n        this.ngxTippyService = ngxTippyService;\n        this.messagesDict = messagesDict;\n        this.ngxTippyConfig = ngxTippyConfig;\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platform))\n            return;\n        this.setSingleton();\n    }\n    ngOnDestroy() {\n        this.clearSingletonInstance();\n    }\n    /**\n     * Take projected in component tooltips element\n     * Take initiated tippy instances\n     * Initiate `singleton addon` only for projected tooltips for current component instance\n     */\n    setSingleton() {\n        const contentWrapperNativeEl = this.contentWrapper.nativeElement;\n        const singletonTooltipIDs = Array.from(contentWrapperNativeEl.querySelectorAll('[data-tippy-singleton]')).map((el) => el._tippy.id);\n        const tippyInstances = this.ngxTippyService.getInstances();\n        const tippyInstancesSerialized = tippyInstances && [...tippyInstances.values()];\n        this.currentSingletonChildrenTippyInstances =\n            tippyInstancesSerialized &&\n                tippyInstancesSerialized.filter(tippyInstance => singletonTooltipIDs.includes(tippyInstance.id));\n        if (this.currentSingletonChildrenTippyInstances?.length) {\n            this.initTippySingletonEntry(this.currentSingletonChildrenTippyInstances);\n        }\n        else {\n            throw new Error(this.messagesDict.childrenInstancesNotFoundSingleton);\n        }\n    }\n    initTippySingletonEntry(childrenSingletonInstances) {\n        this.singletonInstance = createSingleton(childrenSingletonInstances, {\n            ...this.ngxTippyConfig,\n            ...this.singletonProps,\n        });\n        this.writeSingletonInstanceToStorage(this.singletonInstance);\n    }\n    /**\n     * To manipulate singleton groups, write all instances to storage\n     * `singletonName` used as unique key\n     * If `singletonName` does not provided - it will be generated using id of singletonInstance\n     *\n     * @param tippyInstance { NgxTippySingletonInstance }\n     */\n    writeSingletonInstanceToStorage(singletonInstance) {\n        const extendedSingletonInstance = this.extendShowFn(singletonInstance);\n        this.ngxTippyService.setSingletonInstance(this.singletonName || `singleton-${singletonInstance.id}`, extendedSingletonInstance);\n    }\n    /**\n     * Extend original `show` method\n     * Purpose: manipulate tooltip state by [tippyName]\n     *\n     * @param singletonInstance { NgxTippySingletonInstance }\n     * @returns { NgxTippySingletonInstance }\n     */\n    extendShowFn(singletonInstance) {\n        const originalShowFn = singletonInstance.show;\n        singletonInstance.show = (singletonInstanceIdentifier) => {\n            if (typeof singletonInstanceIdentifier === 'string') {\n                const instance = this.ngxTippyService.getInstance(singletonInstanceIdentifier);\n                instance && originalShowFn(instance);\n            }\n            else {\n                originalShowFn(singletonInstanceIdentifier);\n            }\n        };\n        return singletonInstance;\n    }\n    clearSingletonInstance() {\n        const singletonInstances = this.ngxTippyService.getSingletonInstances();\n        if (singletonInstances && this.singletonInstance) {\n            this.destroySingletonInstance();\n            this.deleteEntryInStorage(singletonInstances);\n        }\n    }\n    destroySingletonInstance() {\n        this.singletonInstance.destroy();\n    }\n    deleteEntryInStorage(singletonInstances) {\n        singletonInstances.delete(this.singletonName || `singleton-${this.singletonInstance.id}`);\n    }\n}\nNgxTippySingletonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippySingletonComponent, deps: [{ token: PLATFORM_ID }, { token: NgxTippyService }, { token: NGX_TIPPY_MESSAGES }, { token: NGX_TIPPY_CONFIG }], target: i0.ɵɵFactoryTarget.Component });\nNgxTippySingletonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NgxTippySingletonComponent, selector: \"ngx-tippy-singleton\", inputs: { singletonProps: \"singletonProps\", singletonName: \"singletonName\" }, viewQueries: [{ propertyName: \"contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, read: ElementRef }], ngImport: i0, template: `\n    <div #contentWrapper>\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippySingletonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-tippy-singleton',\n                    template: `\n    <div #contentWrapper>\n      <ng-content></ng-content>\n    </div>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: NgxTippyService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_TIPPY_MESSAGES]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_TIPPY_CONFIG]\n                }] }]; }, propDecorators: { singletonProps: [{\n                type: Input\n            }], singletonName: [{\n                type: Input\n            }], contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { read: ElementRef, static: false }]\n            }] } });\n\nclass NgxTippyDirective {\n    constructor(tippyEl, renderer, ngxTippyService, ngxViewService, viewContainerRef, platform, ngxTippyConfig) {\n        this.tippyEl = tippyEl;\n        this.renderer = renderer;\n        this.ngxTippyService = ngxTippyService;\n        this.ngxViewService = ngxViewService;\n        this.viewContainerRef = viewContainerRef;\n        this.platform = platform;\n        this.ngxTippyConfig = ngxTippyConfig;\n        this.cachedInstances = new Map();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platform))\n            return;\n        this.ngxViewService.viewContainerRef = this.viewContainerRef;\n        this.initTippy();\n    }\n    ngOnChanges(changes) {\n        this.handleChanges(changes);\n    }\n    ngOnDestroy() {\n        this.destroyTippy();\n    }\n    /**\n     * Tooltip initialize\n     * Content can be directly passed through `ngxTippy` selector\n     */\n    initTippy() {\n        const tippyTarget = this.tippyEl.nativeElement;\n        if (this.ngxTippy === null || this.ngxTippy === undefined)\n            return;\n        const viewRef = this.ngxViewService.getViewRefInstance(this.ngxTippy, this.tippyName, this.tippyContext);\n        const tippyElement = viewRef.getElement();\n        const tInstance = tippy(tippyTarget, {\n            ...(this.ngxTippyConfig),\n            ...(this.tippyProps || {}),\n            ...(tippyElement && { content: tippyElement }),\n        });\n        this.tippyName = this.tippyName || `tippy-${tInstance.id}`;\n        setTemplateVisible(tippyElement, this.renderer);\n        this.setTippyInstance({ tippyTarget, tippyName: this.tippyName, viewRef });\n        this.setClassName(this.tippyInstance, this.tippyClassName);\n        this.writeInstancesToStorage(this.tippyInstance, this.tippyName);\n    }\n    setTippyInstance({ tippyTarget, tippyName, viewRef, }) {\n        this.tippyInstance = { ...tippyTarget._tippy, tippyName, viewRef };\n    }\n    setClassName(tippyInstance, className) {\n        if (!className || !tippyInstance)\n            return;\n        const classNames = className.split(' ');\n        classNames.length &&\n            classNames.forEach(className => {\n                this.renderer.addClass(tippyInstance.popper.firstElementChild, className);\n            });\n    }\n    removeClassName(tippyInstance, className) {\n        if (!className || !tippyInstance)\n            return;\n        const classNames = className.split(' ');\n        classNames.length &&\n            classNames.forEach(className => {\n                this.renderer.removeClass(tippyInstance.popper.firstElementChild, className);\n            });\n    }\n    /**\n     * To manipulate tooltips, write all instances to storage\n     * `tippyName` used as unique key\n     * If `tippyName` does not provided - it will be generated using `tippyInstance.id`\n     *\n     * @param tippyInstance { NgxTippyInstance }\n     */\n    writeInstancesToStorage(tippyInstance, tippyName) {\n        tippyInstance && this.ngxTippyService.setInstance(tippyName, tippyInstance);\n    }\n    handleChanges({ tippyName, ngxTippy, tippyProps, tippyClassName, tippyContext }) {\n        tippyName && !tippyName.firstChange && this.handleNameChanges(tippyName);\n        ngxTippy && !ngxTippy.firstChange && this.handleContentChanges(ngxTippy);\n        tippyProps && !tippyProps.firstChange && this.handlePropsChanges(tippyProps);\n        tippyClassName && !tippyClassName.firstChange && this.handleClassChanges(tippyClassName);\n        tippyContext && !tippyContext.firstChange && this.handleContextChanges(tippyContext);\n    }\n    handleNameChanges({ previousValue, currentValue }) {\n        const tippyInstances = this.cachedTippyInstances();\n        if (!tippyInstances || !this.tippyInstance)\n            return;\n        this.deleteEntryInStorage(tippyInstances, previousValue);\n        this.tippyInstance = { ...this.tippyInstance, tippyName: currentValue };\n        tippyInstances.set(currentValue, this.tippyInstance);\n    }\n    handleContentChanges({ currentValue }) {\n        if (this.tippyInstance && this.tippyName) {\n            this.ngxTippyService.setContent(this.tippyName, currentValue);\n            if (currentValue === null || currentValue === undefined) {\n                this.ngxTippyService.disable(this.tippyName);\n            }\n            else {\n                this.ngxTippyService.enable(this.tippyName);\n            }\n        }\n        else {\n            this.initTippy();\n        }\n    }\n    handlePropsChanges({ currentValue }) {\n        this.tippyName && this.ngxTippyService.setProps(this.tippyName, currentValue);\n    }\n    handleClassChanges({ previousValue, currentValue }) {\n        this.removeClassName(this.tippyInstance, previousValue);\n        this.setClassName(this.tippyInstance, currentValue);\n    }\n    handleContextChanges({ currentValue }) {\n        if (this.tippyInstance && this.tippyName && this.ngxTippy) {\n            this.ngxTippyService.setContent(this.tippyName, this.ngxTippy, currentValue);\n        }\n        else {\n            this.initTippy();\n        }\n    }\n    cachedTippyInstances() {\n        const tippyInstances = this.ngxTippyService.getInstances();\n        if (this.cachedInstances.has(tippyInstances)) {\n            return this.cachedInstances.get(tippyInstances);\n        }\n        else {\n            this.cachedInstances.set(tippyInstances, tippyInstances);\n            return tippyInstances;\n        }\n    }\n    destroyTippy() {\n        const tippyInstances = this.cachedTippyInstances();\n        const tippyInstance = this.tippyInstance;\n        if (!tippyInstance || !tippyInstances)\n            return;\n        this.clearInstance({ tippyInstance, tippyInstances });\n        this.resetLocalInstance();\n        this.clearCachedInstances();\n    }\n    clearInstance({ tippyInstance, tippyInstances, }) {\n        const { tippyName } = tippyInstance;\n        this.clearViewRef(tippyInstance);\n        this.destroyTippyInstance(tippyInstance);\n        this.deleteEntryInStorage(tippyInstances, tippyName);\n    }\n    clearViewRef(tippyInstance) {\n        tippyInstance.viewRef?.destroy && tippyInstance.viewRef.destroy();\n    }\n    destroyTippyInstance(tippyInstance) {\n        tippyInstance.destroy();\n    }\n    deleteEntryInStorage(tippyInstances, tippyName) {\n        tippyInstances.delete(tippyName);\n    }\n    resetLocalInstance() {\n        this.tippyInstance = undefined;\n    }\n    clearCachedInstances() {\n        this.cachedInstances.clear();\n    }\n}\nNgxTippyDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: NgxTippyService }, { token: NgxViewService }, { token: i0.ViewContainerRef }, { token: PLATFORM_ID }, { token: NGX_TIPPY_CONFIG }], target: i0.ɵɵFactoryTarget.Directive });\nNgxTippyDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NgxTippyDirective, selector: \"[ngxTippy]\", inputs: { ngxTippy: \"ngxTippy\", tippyProps: \"tippyProps\", tippyName: \"tippyName\", tippyClassName: \"tippyClassName\", tippyContext: \"tippyContext\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxTippy]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: NgxTippyService }, { type: NgxViewService }, { type: i0.ViewContainerRef }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_TIPPY_CONFIG]\n                }] }]; }, propDecorators: { ngxTippy: [{\n                type: Input\n            }], tippyProps: [{\n                type: Input\n            }], tippyName: [{\n                type: Input\n            }], tippyClassName: [{\n                type: Input\n            }], tippyContext: [{\n                type: Input\n            }] } });\n\nclass NgxTippyModule {\n}\nNgxTippyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxTippyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyModule, declarations: [NgxTippyDirective, NgxTippyGroupComponent, NgxTippySingletonComponent], imports: [CommonModule], exports: [NgxTippyDirective, NgxTippyGroupComponent, NgxTippySingletonComponent] });\nNgxTippyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxTippyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [NgxTippyDirective, NgxTippyGroupComponent, NgxTippySingletonComponent],\n                    exports: [NgxTippyDirective, NgxTippyGroupComponent, NgxTippySingletonComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-tippy-wrapper\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_TIPPY_CONFIG, NgxTippyDirective, NgxTippyGroupComponent, NgxTippyModule, NgxTippyService, NgxTippySingletonComponent };\n","<!-- Type Text for String are Default -->\r\n\r\n<!-- Type Font Icon -->\r\n@if (item()) {\r\n  @switch (settings().PreviewType) {\r\n    @case (\"icon-css\") {\r\n      <i class=\"icon-preview {{ replaceDot(item().previewValue) }}\"></i>\r\n    }\r\n    <!-- Type Material Icon -->\r\n    @case (\"icon-symbol\") {\r\n      <!-- TODO: ATM it can only take material icons, but in future it should be able to also take other icons, in which case the tag would have to be reworked... -->\r\n      <mat-icon>{{ item().previewValue }}</mat-icon> &nbsp;\r\n    }\r\n    <!--  Type SVG Icon -->\r\n    @case (\"svg\") {\r\n      <img [ngxTippy]=\"tippyTemplate\" class=\"image-preview\" [src]=\"item().previewValue\" [alt]=\"item().value\" />\r\n      <!-- Tippy to Show Big Image -->\r\n      <div #tippyTemplate class=\"tippy-custom\">\r\n        <img class=\"image-tippy\" [src]=\"item().previewValue\" [alt]=\"item().value\" />\r\n      </div>\r\n    }\r\n    <!-- Type Image -->\r\n    @case (\"image\") {\r\n      <!-- Small Image Preview -->\r\n      <img [ngxTippy]=\"tippyTemplate\" class=\"image-preview\" [src]=\"imageResize(item().previewValue, 24, 24)\" [alt]=\"item().value\" />\r\n      <!-- Tippy to Show Big Image -->\r\n      <div #tippyTemplate class=\"tippy-custom\">\r\n        <img class=\"image-tippy\" [src]=\"imageResize(item().previewValue, 140, 140)\" [alt]=\"item().value\" />\r\n      </div>\r\n    }\r\n  }\r\n}","import { Component, input } from '@angular/core';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\r\nimport { FieldSettingsWithPickerSource } from '../../../../../../../edit-types/src/PickerSources';\r\nimport { PickerItem } from '../models/picker-item.model';\r\n\r\n@Component({\r\n  selector: 'app-picker-item-preview',\r\n  templateUrl: './picker-item-preview.component.html',\r\n  styleUrl: './picker-item-preview.component.scss',\r\n  standalone: true,\r\n  imports: [\r\n    MatIcon,\r\n    NgxTippyModule,\r\n  ]\r\n})\r\nexport class PickerItemPreviewComponent {\r\n\r\n  item = input.required<PickerItem>();\r\n\r\n  settings = input.required<FieldSettingsWithPickerSource>();\r\n\r\n  replaceDot(value: string): string {\r\n    return value?.replace(/\\./g, '');\r\n  }\r\n\r\n  imageResize(originalImage: string, width: number, height: number): string {\r\n\r\n    // Remove w and h parameters completely\r\n    let optimizedImage = originalImage\r\n      .replace(/[\\?&]w=\\d+/g, '')  // Remove w parameter\r\n      .replace(/[\\?&]h=\\d+/g, ''); // Remove h parameter\r\n\r\n    // Replace width and height if they exist\r\n    optimizedImage = optimizedImage\r\n      .replace(/width=\\d+/g, `width=${width}`)\r\n      .replace(/height=\\d+/g, `height=${height}`);\r\n\r\n    // If width is not present, add it\r\n    if (!optimizedImage.includes('width='))\r\n      optimizedImage += (optimizedImage.includes('?') ? '&' : '?') + `width=${width}`;\r\n\r\n    // If height is not present, add it\r\n    if (!optimizedImage.includes('height='))\r\n      optimizedImage += (optimizedImage.includes('?') ? '&' : '?') + `height=${height}`;\r\n\r\n    return optimizedImage;\r\n  }\r\n\r\n\r\n}\r\n","import { Component, input } from '@angular/core';\r\nimport { FieldSettingsWithPickerSource } from '../../../../../../../edit-types/src/PickerSources';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { PickerFeaturesItem } from '../picker-features.model';\r\nimport { PickerIconHelpComponent } from '../picker-icon-help/picker-icon-help.component';\r\nimport { PickerIconInfoComponent } from '../picker-icon-info/picker-icon-info.component';\r\nimport { PickerItemButtonsComponent } from '../picker-item-buttons/picker-item-buttons.component';\r\nimport { PickerItemPreviewComponent } from '../picker-item-preview/picker-item-preview.component';\r\n\r\n@Component({\r\n  selector: 'app-picker-item-label',\r\n  standalone: true,\r\n  imports: [\r\n    PickerItemPreviewComponent,\r\n    PickerIconHelpComponent,\r\n    PickerIconInfoComponent,\r\n    PickerItemButtonsComponent,\r\n  ],\r\n  templateUrl: './picker-item-label.component.html',\r\n  styleUrl: './picker-item-label.component.scss'\r\n})\r\nexport class PickerPreviewLabelComponent {\r\n  /** The item to show the label/buttons for */\r\n  item = input.required<PickerItem>();\r\n\r\n  /** The item index, important for certain button actions */\r\n  index = input<number>(0);\r\n\r\n  /** Settings, mainly for the preview feature such as icon etc. */\r\n  settings = input.required<FieldSettingsWithPickerSource>();\r\n\r\n  /** UI Features can let the control determine that certain buttons shouldn't be available, eg. \"remove\" on radio-button */\r\n  uiFeatures = input<Partial<PickerFeaturesItem>>(null);\r\n\r\n  /** If the buttons should show or not - I believe ATM it's always true */\r\n  show = input<boolean>(false);\r\n\r\n}\r\n","<div class=\"picker-option-contents\">\r\n  <!-- Preview Type -->\r\n  <div class=\"picker-option\">\r\n    <!-- Show Icon or Image -->\r\n    <app-picker-item-preview [item]=\"item()\" [settings]=\"settings()\"></app-picker-item-preview>\r\n    <span class=\"picker-option-label\"> {{ item().label || item().value }}</span>\r\n  </div>\r\n\r\n  <div class=\"picker-option-info\">\r\n    <app-picker-help [helpLink]=\"item().link\"></app-picker-help>\r\n    <app-picker-icon-info [infoBox]=\"item().info\"></app-picker-icon-info>\r\n    <!-- Action items such as edit, remove, delete -->\r\n    <app-picker-item-buttons class=\"my-item-actions\" [show]=\"show()\" [item]=\"item()\" [index]=\"index()\" [uiFeatures]=\"uiFeatures()\"></app-picker-item-buttons>\r\n  </div>\r\n</div>\r\n","\r\ninterface PickerSourceBase {\r\n  Title: string;\r\n\r\n  ConfigModel: 'UiPickerModeTree';\r\n}\r\n\r\nexport interface UiPickerModeTree extends PickerSourceBase {\r\n  TreeRelationship: typeof RelationshipParentChild | typeof RelationshipChildParent; //child-parent or parent-child\r\n  TreeBranchesStream: string;\r\n  TreeLeavesStream: string;\r\n  TreeParentIdField: string;\r\n  TreeChildIdField: string;\r\n  TreeParentChildRefField: string;\r\n  TreeChildParentRefField: string;\r\n\r\n  TreeShowRoot: boolean;\r\n  TreeDepthMax: number;\r\n\r\n  TreeAllowSelectRoot: boolean;\r\n  TreeAllowSelectBranch: boolean;\r\n  TreeAllowSelectLeaf: boolean;\r\n}\r\n\r\nexport const RelationshipParentChild = 'parent-child';\r\nexport const RelationshipChildParent = 'child-parent';\r\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { RelationshipChildParent, RelationshipParentChild, UiPickerModeTree } from '../../../../../../../edit-types/src/PickerModeTree';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { PickerTreeItem } from '../models/picker-tree.models';\r\n\r\n@Injectable()\r\nexport class PickerTreeDataHelper {\r\n  \r\n  log = classLog({PickerTreeDataHelper});\r\n\r\n  #pickerTreeConfiguration: UiPickerModeTree;\r\n  #treeItems: PickerTreeItem[];\r\n\r\n  dataSource: MatTreeFlatDataSource<PickerItem, PickerTreeItem, PickerTreeItem>\r\n\r\n  constructor() {\r\n    this.build();\r\n  }\r\n\r\n  public updateConfig(pickerConfig: UiPickerModeTree) {\r\n    this.log.a('updateConfigAndSelectedData');\r\n    // set config, which will be accessed on 'this.' whenever it's needed\r\n    this.#pickerTreeConfiguration = pickerConfig;\r\n  }\r\n\r\n  public addTreeItems(treeItems: PickerTreeItem[]) {\r\n    this.log.a('addTreeItems');\r\n    this.#treeItems = treeItems;\r\n  }\r\n\r\n  public updateSelectedData(selectedData: PickerItem[]) {\r\n    this.log.a('updateSelectedData');\r\n    this.dataSource.data = selectedData;\r\n  }\r\n\r\n  public preConvertAllItems(treeConfig: UiPickerModeTree, items: PickerItem[]) {\r\n    this.log.a('preConvertAllItemsToTreeItems', { treeConfig, items });\r\n    const convertedItems = items.map(x => this.#preConvertItemToTreeItem(treeConfig, x, items));\r\n\r\n    // todo: establish relationships\r\n    const withChildren = convertedItems.map(x => {\r\n      if (!x.expandable) return x;\r\n      const children = this.#getChildren(treeConfig, x, convertedItems);\r\n      // important: don't use spread, we really want to modify the object\r\n      // so that all object correctly reference each other\r\n      x.children = children;\r\n      return x;\r\n      // return { ...x, children };\r\n    });\r\n    // todo: open collapse first level...\r\n\r\n    return withChildren;\r\n  }\r\n\r\n  #preConvertItemToTreeItem(treeConfig: UiPickerModeTree, item: PickerItem, allItems: PickerItem[]) {\r\n    // Log and do some initial checks\r\n    this.log.a(`preConvertItemToTreeItem for item ${item?.id}`, { treeConfig, item, allItems });\r\n    if (!treeConfig) throw new Error('No tree configuration found');\r\n    if (!item) throw new Error(\"Can't transform null-item\");\r\n\r\n    // Get the tree configuration\r\n    const isParentChild = treeConfig.TreeRelationship == RelationshipParentChild;\r\n    const cpRef = treeConfig.TreeChildParentRefField;\r\n    const pcRef = treeConfig.TreeParentChildRefField;\r\n    const cId = treeConfig.TreeChildIdField;\r\n    const pId = treeConfig.TreeParentIdField;\r\n    const cStreamName = treeConfig.TreeLeavesStream;\r\n    const pStreamName = treeConfig.TreeBranchesStream;\r\n    const itemInCorrectStream = allItems\r\n      .filter(x => !x.sourceStreamName || x.sourceStreamName == pStreamName)\r\n      .find(x => x == item);\r\n\r\n    // figure out if this node can be expanded\r\n    // todo: first variant isParentChild probably doesn't work yet\r\n    const currentId = item?.entity?.[pId];\r\n    const expandable = isParentChild\r\n      ? itemInCorrectStream && (item.entity[pcRef]?.length > 0 ?? false)\r\n      : itemInCorrectStream && !!allItems.find(x => {\r\n        return (x.entity[cpRef]?.[0]?.[pId] == currentId)\r\n      }\r\n      );\r\n\r\n    const result: PickerTreeItem = {\r\n      ...item,\r\n      level: -1,\r\n      expandable: expandable,\r\n      parent: item.entity[cpRef],\r\n      children: item.entity[pcRef],\r\n    };\r\n    this.log.a('result', { result });\r\n    return result;\r\n  }\r\n\r\n  public build() {\r\n    this.log.a('build');\r\n\r\n    const treeFlattener = new MatTreeFlattener(\r\n      // transformFunction converts an item to a tree-item\r\n      (item: PickerTreeItem, level: number): PickerTreeItem => ({\r\n        ...item,\r\n        level,\r\n      }),\r\n\r\n      // getLevel\r\n      (item): number => { return item.level; },\r\n\r\n      // isExpandable\r\n      (item): boolean => { return item.expandable; },\r\n\r\n      // getChildren\r\n      (item): PickerTreeItem[] => {\r\n        // TODO: @2dm - must determine which method is better\r\n        // getting them here is a bit more functional, but the other model doesn't need the catalog to be stored separately\r\n\r\n        // return item.children; //\r\n        // const getChildren = this.getChildren(this.pickerTreeConfiguration, item, this.treeItems);\r\n        // console.warn('2dm item', item, 'getChildren', getChildren, 'item.children', item.children)\r\n        // return getChildren;\r\n        return item.children;\r\n      },\r\n    );\r\n\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, treeFlattener);\r\n  }\r\n\r\n  #getChildren(treeConfig: UiPickerModeTree, item: PickerTreeItem, allItems: PickerTreeItem[]) {\r\n    const isParentChild = treeConfig.TreeRelationship == RelationshipParentChild;\r\n    const cpRef = treeConfig.TreeChildParentRefField;\r\n    const pcRef = treeConfig.TreeParentChildRefField;\r\n    const cId = treeConfig.TreeChildIdField;\r\n    const pId = treeConfig.TreeParentIdField;\r\n    if (isParentChild)\r\n      return item.entity[pcRef].map((x: any) => {\r\n        const child = allItems.find(y => (y as any)[cId] == (x as any)[cId]);\r\n        return child;\r\n      });\r\n    else if (treeConfig.TreeRelationship == RelationshipChildParent) {\r\n      const itemParentValue = item.entity?.[pId];\r\n      // console.log(`RelationshipChildParent - 2dm for parentIdField: '${pId}' on item: '${itemParentValue}' with parent having id field '${cId}' `);\r\n      return allItems.filter(x => {\r\n        const childParentId = x.entity[cpRef]?.[0]?.[pId];\r\n        return childParentId == itemParentValue;\r\n      });\r\n    }\r\n    else\r\n      throw new Error(`Unknown tree relationship: \"${treeConfig?.TreeRelationship}\"`);\r\n  }\r\n\r\n  /** Needed by material tree to somehow determine the properties */\r\n  treeControl = new FlatTreeControl<PickerTreeItem>(\r\n    item => item.level,\r\n    item => item.expandable,\r\n  );\r\n\r\n\r\n  disableOption(item: PickerTreeItem, selected: PickerItem[], enableReselect: boolean): boolean {\r\n    const treeConfig = this.#pickerTreeConfiguration;\r\n    const selectedButNoReselect = enableReselect\r\n      ? false\r\n      : selected.some(entity => entity.value === item.value);\r\n\r\n    // test code to verify functionality\r\n    // if (item.label?.indexOf('Kawasaki') > -1) {\r\n    //   this.log.enabled = true;\r\n    //   this.log.add('disableOption', item, selected, enableReselect, selectedButNoReselect);\r\n    //   this.log.enabled = false;\r\n    // }\r\n\r\n    const isRootButRootNotAllowed = treeConfig?.TreeAllowSelectRoot\r\n      ? false\r\n      : item.children?.length > 0 && item.parent?.length === 0;\r\n    const isBranchButBranchNotAllowed = treeConfig?.TreeAllowSelectBranch\r\n      ? false\r\n      : item.children?.length > 0 && item.parent?.length > 0;\r\n    const isLeafButLeafNotAllowed = treeConfig?.TreeAllowSelectLeaf\r\n      ? false\r\n      : item.children?.length === 0;\r\n    return selectedButNoReselect || isRootButRootNotAllowed || isBranchButBranchNotAllowed || isLeafButLeafNotAllowed;\r\n  }\r\n\r\n  hasChild = (_: number, item: PickerTreeItem) => item.expandable;\r\n}\r\n","import { Injectable, Injector, Signal, effect, runInInjectionContext } from '@angular/core';\r\nimport { FieldSettingsPicker } from 'projects/edit-types/src/FieldSettings-Pickers';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { RelationshipParentChild } from '../../../../../../../edit-types/src/PickerModeTree';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { PickerTreeItem } from '../models/picker-tree.models';\r\nimport { PickerTreeDataHelper } from './picker-tree-data-helper';\r\n\r\n@Injectable()\r\nexport class PickerTreeDataService {\r\n\r\n  log = classLog({PickerTreeDataService});\r\n\r\n  constructor(public treeHelper: PickerTreeDataHelper, private inject: Injector) { }\r\n\r\n  public init(fieldSettings: Signal<FieldSettings>, allItems: Signal<PickerItem[]>) {\r\n    this.log.a('init');\r\n\r\n    const settings = fieldSettings() as FieldSettings & FieldSettingsPicker;\r\n    const isTree = settings.PickerDisplayMode === 'tree';\r\n\r\n    // if not tree, quit early, nothing has to work then\r\n    if (!isTree) return;\r\n\r\n    // as of now, the tree config can not change at runtime, so pick up early\r\n    const treeConfig = settings.PickerTreeConfiguration;\r\n    const relationshipIsParentChild = treeConfig?.TreeRelationship == RelationshipParentChild;\r\n\r\n    runInInjectionContext(this.inject, () => {\r\n      effect(() => {\r\n        const all = allItems();\r\n        // if the objects don't have a data property, we can't convert them to tree items\r\n        // todo: not sure why this happens, possibly early cycles don't have it yet?\r\n        const treeItems = all?.[0]?.entity == null\r\n          ? [] as PickerTreeItem[]\r\n          : this.treeHelper.preConvertAllItems(treeConfig, all);\r\n\r\n        if (treeItems?.[0]?.entity != undefined) {\r\n          this.treeHelper.updateConfig(treeConfig);\r\n          this.treeHelper.addTreeItems(treeItems);\r\n\r\n          const filteredData = treeItems.filter(x => relationshipIsParentChild //check for two streams type also\r\n            ? !treeItems.some(y => y.entity[treeConfig?.TreeParentChildRefField]?.some((z: { Id: number; }) => z.Id === x.id))\r\n            : x.entity[treeConfig?.TreeChildParentRefField]?.length == 0);\r\n          this.treeHelper.updateSelectedData(filteredData);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","<mat-form-field\r\n  [formGroup]=\"fieldState.group\"\r\n  class=\"eav-mat-form-field my-search\"\r\n  color=\"accent\"\r\n  [ngClass]=\"{ 'mat-form-field-invalid': ui().touchedAndInvalid }\"\r\n  (click)=\"filterSelectionList()\"\r\n>\r\n  <!-- Show Icon or Image -->\r\n  <div class=\"show-input-container\">\r\n    <app-picker-item-preview [item]=\"getSelectedItem(selectedItem()?.value)\" [settings]=\"fieldState.settings()\"></app-picker-item-preview>\r\n\r\n    <!-- The initial input showing the selected value - one only. As soon as there are more, this control won't show any more -->\r\n    <input\r\n      matInput\r\n      class=\"eav-translate-on-dblclick\"\r\n      #autocomplete\r\n      [matAutocomplete]=\"auto\"\r\n      [value]=\"displaySelected(selectedItem())\"\r\n      [placeholder]=\"getPlaceholder()\"\r\n      [disabled]=\"ui().disabled || !settings().enableAddExisting\"\r\n      [tippy]=\"tooltip()\"\r\n      [tippyArrow]=\"true\"\r\n      (focus)=\"pickerData.source.fetchItems()\"\r\n      (blur)=\"markAsTouched()\"\r\n      (input)=\"filterSelectionList()\"\r\n    />\r\n  </div>\r\n\r\n  <!-- Action items such as edit, remove, delete -->\r\n  <app-picker-item-buttons\r\n    matSuffix\r\n    class=\"my-item-actions\"\r\n    [show]=\"showItemEditButtons()\"\r\n    [item]=\"selectedItem()\"\r\n    [index]=\"0\"\r\n  ></app-picker-item-buttons>\r\n\r\n  <!-- \"v\" button to open the drop-down -->\r\n  <button\r\n    mat-icon-button\r\n    matSuffix\r\n    class=\"entity-dropdown-button picker-inline-button\"\r\n    disableRipple=\"true\"\r\n    [disabled]=\"ui().disabled || !settings().enableAddExisting\"\r\n  >\r\n    <mat-icon>arrow_drop_down</mat-icon>\r\n  </button>\r\n\r\n  <!-- Toggle Text Mode -->\r\n  @if (features().textEntry) {\r\n    <span matSuffix>\r\n      <ng-content select=\"[freeTextButtons]\"></ng-content>\r\n    </span>\r\n  }\r\n\r\n  <!-- Help text / error messages -->\r\n  <mat-label [ngClass]=\"{ 'mat-error': ui().touchedAndInvalid }\">\r\n    {{ basics().labelWithRequired }}\r\n  </mat-label>\r\n</mat-form-field>\r\n\r\n<mat-autocomplete\r\n  #auto=\"matAutocomplete\"\r\n  [displayWith]=\"displayFn.bind(this)\"\r\n  [hideSingleSelectionIndicator]=\"true\"\r\n  (optionSelected)=\"optionSelected($event, selectedItem())\"\r\n  (closed)=\"onClosed()\"\r\n  (opened)=\"onOpened(settings().showAsTree)\"\r\n>\r\n  @if (!settings().showAsTree) {\r\n    <!-- Standard List-Search Mode -->\r\n    @for (item of filteredItems(); track item.value) {\r\n      <mat-option\r\n        [value]=\"item.value\"\r\n        class=\"picker-option-wrapper\"\r\n        [disabled]=\"item.noSelect ? true : settings().enableReselect ? false : isOptionDisabled(item.value)\"\r\n        [tippy]=\"item.tooltip\"\r\n        tippyShowDelay=\"500\"\r\n        [tippyAllowHtml]=\"true\"\r\n        [tippyArrow]=\"true\"\r\n      >\r\n        <!-- Show Preview Label -->\r\n        <app-picker-item-label [item]=\"item\" [settings]=\"fieldState.settings()\"></app-picker-item-label>\r\n      </mat-option>\r\n    }\r\n  } @else {\r\n    <!-- Tree Search Mode (BETA not really working) -->\r\n    <mat-tree [dataSource]=\"treeHelper.dataSource\" [treeControl]=\"treeHelper.treeControl\">\r\n      <mat-tree-node *matTreeNodeDef=\"let item\" matTreeNodePadding class=\"eav-tree-node\">\r\n        <button mat-icon-button disabled></button>\r\n        <mat-option\r\n          [value]=\"item.value\"\r\n          class=\"picker-option-wrapper\"\r\n          [disabled]=\"treeHelper.disableOption(item, selectedItems(), settings().enableReselect)\"\r\n          [tippy]=\"item.tooltip\"\r\n          tippyShowDelay=\"500\"\r\n          [tippyAllowHtml]=\"true\"\r\n          [tippyArrow]=\"true\"\r\n        >\r\n          <!-- Show Preview Label -->\r\n          <app-picker-item-label [item]=\"item\" [settings]=\"fieldState.settings()\"></app-picker-item-label>\r\n        </mat-option>\r\n      </mat-tree-node>\r\n      <mat-tree-node *matTreeNodeDef=\"let item; when: hasChild\" matTreeNodePadding class=\"eav-tree-node\">\r\n        <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + item.name\">\r\n          <mat-icon class=\"mat-icon-rtl-mirror\">\r\n            {{ treeHelper.treeControl.isExpanded(item) ? \"expand_more\" : \"chevron_right\" }}\r\n          </mat-icon>\r\n        </button>\r\n        <mat-option\r\n          [value]=\"item.value\"\r\n          class=\"picker-option-wrapper\"\r\n          [disabled]=\"treeHelper.disableOption(item, selectedItems(), settings().enableReselect)\"\r\n          [tippy]=\"item.tooltip\"\r\n          tippyShowDelay=\"500\"\r\n          [tippyAllowHtml]=\"true\"\r\n          [tippyArrow]=\"true\"\r\n        >\r\n          <!-- Show Preview Label -->\r\n          <app-picker-item-label [item]=\"item\" [settings]=\"fieldState.settings()\"></app-picker-item-label>\r\n        </mat-option>\r\n      </mat-tree-node>\r\n    </mat-tree>\r\n  }\r\n</mat-autocomplete>\r\n\r\n<!-- Button to add null-item, in debug-mode only -->\r\n@if (debugEnabled()) {\r\n  <div class=\"null-box\">debug: <span class=\"null-button\" tippy=\"Add null-item\" (click)=\"insertNull()\">add null-item</span></div>\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, ElementRef, OnInit, input, viewChild } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { ClickStopPropagationDirective } from '../../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { GlobalConfigService } from '../../../../shared/services/global-config.service';\r\nimport { computedObj, signalObj } from '../../../../shared/signals/signal.utilities';\r\nimport { DebugFields } from '../../../edit-debug';\r\nimport { PickerItem, PickerItemFactory } from '../models/picker-item.model';\r\nimport { PickerTreeItem } from '../models/picker-tree.models';\r\nimport { PickerItemButtonsComponent } from '../picker-item-buttons/picker-item-buttons.component';\r\nimport { PickerPreviewLabelComponent } from '../picker-item-label/picker-item-label.component';\r\nimport { PickerItemPreviewComponent } from '../picker-item-preview/picker-item-preview.component';\r\nimport { PickerPartBaseComponent } from '../picker-part-base.component';\r\nimport { PickerTreeDataHelper } from '../picker-tree/picker-tree-data-helper';\r\nimport { PickerTreeDataService } from '../picker-tree/picker-tree-data-service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  optionSelected: false,\r\n  focusOnSearchComponent: false,\r\n  tooltip: true,\r\n  fields: [...DebugFields, 'Query', 'Value'],\r\n}\r\n\r\n@Component({\r\n  selector: 'app-picker-search',\r\n  templateUrl: './picker-search.component.html',\r\n  styleUrls: ['./picker-search.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgClass,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatOptionModule,\r\n    MatTreeModule,\r\n    TranslateModule,\r\n    PickerItemButtonsComponent,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    PickerPreviewLabelComponent,\r\n    PickerItemPreviewComponent,\r\n  ]\r\n})\r\nexport class PickerSearchComponent extends PickerPartBaseComponent implements OnInit {\r\n\r\n  /** Main log */\r\n  log = classLog({ PickerSearchComponent }, logSpecs);\r\n\r\n  /** Special log which would fire a lot for each item doing disabled checks etc. */\r\n  #logItemChecks = classLog(`PickerSearchComponent-ItemChecks`);\r\n\r\n  //#region Inputs\r\n\r\n  /** The input field for the search */\r\n  autocomplete = viewChild.required<ElementRef<HTMLInputElement>>('autocomplete');\r\n\r\n  /** Determine if the input field shows the selected items. eg. not when in dialog where it's just a search-box */\r\n  showSelectedItem = input.required<boolean>();\r\n\r\n  /** Determine if edit buttons are possible, eg. not in preview */\r\n  showItemEditButtons = input.required<boolean>();\r\n\r\n  //#endregion\r\n\r\n  /**\r\n   * The tree helper which is used by the tree display.\r\n   * Will only be initialized if we're really showing a tree.\r\n   */\r\n  #treeDataService = transient(PickerTreeDataService);\r\n  public treeHelper = transient(PickerTreeDataHelper);\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private globalConfigService: GlobalConfigService,\r\n  ) { super(); }\r\n\r\n\r\n  #newValue: string = null;\r\n\r\n  /** Currently selected 1 item, as this input will only ever show 1 and it needs to know if certain edit buttons should be shown. */\r\n  public selectedItem = computedObj('selectedItems', () => this.pickerData.selectedOne());\r\n\r\n  /** special trigger to recalculate filtered items; not ideal, should happen automatically */\r\n  #reFilter = signalObj('reFilter', false);\r\n\r\n  public filteredItems = computedObj('filteredItems', () => {\r\n    const _ = this.#reFilter(); // just make a dependency\r\n    const all = this.pickerData.optionsAll();\r\n    const filterInDom = this.autocomplete()?.nativeElement.value;\r\n    const filter = filterInDom?.toLocaleLowerCase();\r\n\r\n    const result = !filter\r\n      ? all\r\n      : all.filter(oItem => ((oItem.label ? oItem.label : oItem.value) ?? '').toLocaleLowerCase().includes(filter));\r\n\r\n    // If the list is empty, show a message about this.\r\n    return result.length > 0\r\n      ? result\r\n      : [PickerItemFactory.message(this.translate, 'Fields.Picker.FilterNoResults', { search: filterInDom })];\r\n  });\r\n\r\n  /** Debug status for UI, mainly to show \"add-null\" button */\r\n  debugEnabled = this.globalConfigService.isDebug;\r\n\r\n  /** Current applicable settings like \"enableEdit\" etc. */\r\n  settings = computedObj('settings', () => {\r\n    const s = this.fieldState.settings();\r\n    return {\r\n      enableAddExisting: s.EnableAddExisting,\r\n      enableReselect: s.EnableReselect,\r\n      showAsTree: s.PickerDisplayMode === 'tree',\r\n    };\r\n  });\r\n\r\n\r\n  ngOnInit(): void {\r\n    const fieldSettings = this.fieldState.settings;\r\n    if (fieldSettings().PickerDisplayMode === 'tree') {\r\n      // Setup Tree Helper - but should only happen, if we're really doing trees\r\n      // Only doing this the first time, as these settings are not expected to change\r\n      this.#treeDataService.init(fieldSettings, this.pickerData.optionsAll);\r\n      this.treeHelper = this.#treeDataService.treeHelper;\r\n\r\n    }\r\n    this.pickerData.state.attachCallback(() => this.focusOnSearchComponent());\r\n  }\r\n\r\n  focusOnSearchComponent(): void {\r\n    this.log.fnIf('focusOnSearchComponent');\r\n    this.autocomplete()?.nativeElement.focus();\r\n  }\r\n\r\n\r\n  displaySelected(item: PickerItem): string {\r\n    return this.showSelectedItem() ? (item?.label ?? '') : '';\r\n  }\r\n\r\n  tooltip(): string {\r\n    const l = this.log.fnIfInList('tooltip', 'fields', this.fieldState.name, null, this.fieldState.name);\r\n    // no tooltip if zero or multiple items selected\r\n    const count = this.pickerData.selectedAll().length;\r\n    if (count != 1)\r\n      return l.r(null, `0 or more than 1 selected: ${count}`);\r\n    return l.r(this.selectedItem().tooltip, 'ok');\r\n  }\r\n\r\n  // 2024-04-30 2dm: seems this is always a string, will simplify the code\r\n  displayFn(value: string): string {\r\n    const selectedItem = this.selectedItem();\r\n    this.#logItemChecks.a(`displayFn: value: '${value}'`, { selectedItem });\r\n    // and probably clean up if it's stable for a few days\r\n    if (value == null) return '';\r\n    let returnValue = this.pickerData.optionsAll().find(ae => ae.value == value)?.label;\r\n\r\n    // If nothing yet, try to return label of selected or fallback to return the value\r\n    // note: not quite sure, but I believe this is for scenarios where a manual entry was done\r\n    // ...so it would return it, even though it's not in the list of available items\r\n    if (!returnValue)\r\n      return selectedItem?.value == value\r\n        ? selectedItem?.label\r\n        : value + \" *\";\r\n    this.log.a('displayFn result', { value, returnValue });\r\n    return returnValue;\r\n  }\r\n\r\n  markAsTouched(): void {\r\n    this.fieldState.ui().markTouched();\r\n  }\r\n\r\n  filterSelectionList(): void {\r\n    this.#reFilter.update(x => !x);\r\n  }\r\n\r\n  /**\r\n   * Event triggered when opening the auto-complete / search\r\n   */\r\n  onOpened(isTreeDisplayMode: boolean): void {\r\n    const domElement = this.autocomplete().nativeElement;\r\n    this.log.a(`onOpened: isTreeDisplayMode ${isTreeDisplayMode}; domValue: '${domElement.value}'`);\r\n    // flush the input so the user can use it to search, otherwise the list is filtered\r\n    domElement.value = '';\r\n    this.#reFilter.update(x => !x);\r\n    // If tree, we need to blur so tree reacts to the first click, otherwise the user must click 2x\r\n    if (isTreeDisplayMode)\r\n      domElement.blur();\r\n  }\r\n\r\n  onClosed(): void {\r\n    const selectedItems = this.selectedItems();\r\n    const selectedItem = this.selectedItem();\r\n    const nativeElement = this.autocomplete().nativeElement;\r\n    this.log.a('onClosed', { selectedItems, selectedItem });\r\n    if (this.showSelectedItem()) {\r\n      // @SDV - improve this\r\n      if (this.#newValue && this.#newValue != selectedItem?.value) {\r\n        //this.autocompleteRef.nativeElement.value = this.availableItems$.value?.find(ae => ae.Value == this.newValue)?.Text;\r\n      }\r\n      else if (selectedItem && selectedItems.length < 2)\r\n        nativeElement.value = selectedItem.label;\r\n    } else {\r\n      // @SDV - improve this\r\n      nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  optionSelected(event: MatAutocompleteSelectedEvent, selectedEntity: PickerItem): void {\r\n    const features = this.features();\r\n    const l = this.log.fnIf('optionSelected', { value: event.option.value, features });\r\n    this.#newValue = event.option.value;\r\n    if (!features.multiValue && selectedEntity) {\r\n      l.a('no multiValue, will flush previous selection');\r\n      this.pickerData.state.flush();\r\n    }\r\n    const selected: string = event.option.value;\r\n    this.pickerData.state.add(selected);\r\n    // @SDV - This is needed so after choosing option element is not focused (it gets focused by default so if blur is outside of setTimeout it will happen before refocus)\r\n    setTimeout(() => {\r\n      this.autocomplete().nativeElement.blur();\r\n    });\r\n  }\r\n\r\n  getPlaceholder(): string {\r\n    const allOptions = this.pickerData.optionsAll();\r\n    var placeholder = allOptions.length > 0\r\n      ? this.translate.instant('Fields.Picker.Search')\r\n      : this.translate.instant('Fields.Picker.QueryNoItems');\r\n    this.#logItemChecks.a(`getPlaceholder error: result '${placeholder}'`, { allOptions });\r\n    return placeholder;\r\n  }\r\n\r\n  insertNull(): void {\r\n    this.log.a('insertNull');\r\n    this.pickerData.state.add(null);\r\n  }\r\n\r\n  isOptionDisabled(value: string): boolean {\r\n    const selected = this.selectedItems();\r\n    const isSelected = selected.some(entity => entity.value === value);\r\n    this.#logItemChecks.a(`sOptionDisabled value: '${value}'; result: ${isSelected}`, { selected });\r\n    return isSelected;\r\n  }\r\n\r\n\r\n  goToLink(helpLink: string): void {\r\n    this.log.a(`goToLink helpLink: '${helpLink}'`);\r\n    window.open(helpLink, '_blank');\r\n  }\r\n\r\n  hasChild = (_: number, item: PickerTreeItem) => this.treeHelper.hasChild(_, item);\r\n\r\n  getSelectedItem(value: string): PickerItem {\r\n    return this.pickerData.optionsAll().find(ae => ae.value === value);\r\n  }\r\n\r\n}\r\n","import { classLog } from '../../../../shared/logging';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { PickerPartBaseComponent } from '../picker-part-base.component';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  options: true,\r\n  select: true,\r\n};\r\n\r\nexport abstract class PickerInlineBaseComponent extends PickerPartBaseComponent {\r\n\r\n  log = classLog({PickerInlineBaseComponent}, logSpecs);\r\n\r\n  constructor() {\r\n    super();\r\n    // Make sure the data is loaded - especially for entity/query sources\r\n    this.pickerData.source.fetchItems();\r\n  }\r\n\r\n  options = computedObj('options', () => {\r\n    const options = this.pickerData.optionsWithMissing();\r\n    const selected = this.selectedItems();\r\n\r\n    // Off all the possible options, mark the ones that are selected\r\n    const final = options.map(o => {\r\n      const isSelected = selected.find((s) => s.value === o.value);\r\n      return { ...o, selected: !!isSelected };\r\n    });\r\n    this.log.aIf('options', { options, selected, final });\r\n\r\n    // TODO: trap if too many hits... since we can almost break the UI if it has too many items\r\n\r\n    return final as (PickerItem & { selected?: boolean})[];\r\n  });\r\n  \r\n  select(item: PickerItem) {\r\n    const l = this.log.fn('select', { item });\r\n    if (item.noSelect) return l.end('noSelect, exit early');\r\n    const allowMulti = this.features().multiValue;\r\n    if (!allowMulti) {\r\n      this.pickerData.state.set([item.value]);\r\n      return l.end('no-multi', { item, allowMulti });\r\n    }\r\n\r\n    const before = this.options();\r\n    const toggled = before.map(o => o.value === item.value ? { ...o, selected: !o.selected } : o);\r\n    const selected = toggled.filter(o => o.selected);\r\n    const values = selected.map(o => o.value);\r\n    this.pickerData.state.set(values);\r\n    l.end('multi', { item, allowMulti, before, toggled, selected, values });\r\n  }\r\n\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { PickerPartBaseComponent } from '../picker-part-base.component';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-picker-inline-header',\r\n  templateUrl: './picker-inline-header.component.html',\r\n  styleUrl: './picker-inline-header.component.scss',\r\n  imports: [\r\n    NgClass,\r\n    FieldHelperTextComponent,\r\n  ],\r\n})\r\nexport class PickerInlineHeaderComponent extends PickerPartBaseComponent {\r\n\r\n}\r\n","<div class=\"my-title-bar\">\r\n  <div>\r\n    <mat-label class=\"c-ew__preview-label\" [ngClass]=\"{\r\n      'mat-caption' : itemCount(),\r\n      'mat-empty' : !itemCount(),\r\n      'mat-error' : ui().touchedAndInvalid && !config.initialDisabled,\r\n      'color__primary' : !ui().touchedAndInvalid && !config.initialDisabled,\r\n      'my-label-disabled' : config.initialDisabled\r\n      }\"\r\n    >\r\n      {{ basics().labelWithRequired }}\r\n    </mat-label>\r\n    <app-field-helper-text [flatIfEmpty]=\"true\" [smallGap]=\"true\"></app-field-helper-text>\r\n  </div>\r\n  <div>\r\n    <ng-content select=\"[addNew]\"></ng-content>\r\n    <ng-content select=\"[freeTextButtons]\"></ng-content>\r\n  </div>\r\n\r\n</div>\r\n","<div class=\"c-ew__preview-holder\">\r\n  <app-picker-inline-header>\r\n    <ng-content addNew select=\"[addNew]\"></ng-content>\r\n    <ng-content freeTextButtons select=\"[freeTextButtons]\"></ng-content>\r\n  </app-picker-inline-header>\r\n\r\n  <!-- <div (click)=\"expandDialog()\"\r\n    [ngClass]=\"{\r\n    'c-ew__preview--invalid' : ui().touchedAndInvalid,\r\n    'c-ew__preview--disabled': config.initialDisabled\r\n    }\"> -->\r\n\r\n  @for (item of options(); track item.value) {\r\n    <mat-checkbox\r\n      class=\"picker-option-wrapper\"\r\n      (click)=\"select(item)\"\r\n      [checked]=\"item.selected\"\r\n      [disabled]=\"ui().disabled || item.noSelect\"\r\n      [tippy]=\"item.tooltip\"\r\n      tippyShowDelay=\"500\"\r\n      [tippyAllowHtml]=\"true\"\r\n      [tippyArrow]=\"true\"\r\n    >\r\n      <!-- Show Label -->\r\n      <app-picker-item-label [item]=\"item\" [show]=\"true\" [index]=\"$index\" [settings]=\"fieldState.settings()\" [uiFeatures]=\"{ remove: false }\"></app-picker-item-label>\r\n    </mat-checkbox>\r\n  }\r\n  <!-- </div> -->\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatCheckbox } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FeatureNames } from '../../../../features/feature-names';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { PickerInlineBaseComponent } from '../picker-inline/picker-inline-base.component';\r\nimport { PickerInlineHeaderComponent } from '../picker-inline/picker-inline-header.component';\r\nimport { PickerPreviewLabelComponent } from '../picker-item-label/picker-item-label.component';\r\n\r\n@Component({\r\n  selector: 'app-picker-checkboxes',\r\n  templateUrl: './picker-checkboxes.component.html',\r\n  styleUrls: ['./picker-checkboxes.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatRippleModule,\r\n    MatCheckbox,\r\n    NgClass,\r\n    TippyDirective,\r\n    PickerInlineHeaderComponent,\r\n    PickerPreviewLabelComponent,\r\n  ],\r\n})\r\nexport class PickerCheckboxesComponent extends PickerInlineBaseComponent {\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldState.requireFeature(FeatureNames.PickerUiCheckbox);\r\n  }\r\n\r\n}\r\n","<div class=\"c-ew__preview-holder\">\r\n  <mat-label class=\"c-ew__preview-label\" [ngClass]=\"{\r\n    'mat-caption' : itemCount(),\r\n    'mat-empty' : !itemCount(),\r\n    'mat-error' : ui().touchedAndInvalid && !config.initialDisabled,\r\n    'color__primary' : !ui().touchedAndInvalid && !config.initialDisabled,\r\n    'my-label-disabled' : config.initialDisabled\r\n    }\">\r\n    {{ basics().labelWithRequired }}\r\n  </mat-label>\r\n  <div matRipple [matRippleAnimation]=\"{ enterDuration: 360 }\" class=\"c-ew__preview mat-ripple\" (click)=\"expandDialog()\"\r\n    [ngClass]=\"{\r\n    'c-ew__preview--invalid' : ui().touchedAndInvalid,\r\n    'c-ew__preview--disabled': config.initialDisabled\r\n    }\">\r\n    <div [ngClass]=\"itemCount() ? 'c-ew__preview-container' : 'c-ew__preview-container--empty'\">\r\n      <div class=\"my-flex\">\r\n        @if (itemCount()) {\r\n          <mat-list class=\"eav-list my-pills\">\r\n            @for (item of selectedItems(); track (item.value + $index)) {\r\n              <mat-list-item role=\"listitem\" class=\"eav-list-item\" [tippy]=\"item.tooltip\">\r\n                <span mat-line>{{ item.label }}</span>\r\n              </mat-list-item>\r\n            }\r\n          </mat-list>\r\n        }\r\n        @if (itemCount() > 3) {\r\n          <span class=\"eav-more-entities\" [ngClass]=\"{'eav-more-entities-margin-right': enableTextEntry() }\">\r\n            {{ itemCount() }}\r\n          </span>\r\n        }\r\n        @if (enableTextEntry()) {\r\n          <span matSuffix>\r\n            <ng-content select=\"[freeTextButtons]\"></ng-content>\r\n          </span>\r\n        }\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { TippyDirective } from 'projects/eav-ui/src/app/shared/directives/tippy.directive';\r\nimport { PickerPartBaseComponent } from '../picker-part-base.component';\r\n\r\n@Component({\r\n  selector: 'app-picker-pills',\r\n  templateUrl: './picker-pills.component.html',\r\n  styleUrls: ['./picker-pills.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    MatRippleModule,\r\n    MatListModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class PickerPillsComponent extends PickerPartBaseComponent { }\r\n","<div class=\"c-ew__preview-holder\">\r\n  <app-picker-inline-header>\r\n    <ng-content addNew select=\"[addNew]\"></ng-content>\r\n    <ng-content freeTextButtons select=\"[freeTextButtons]\"></ng-content>\r\n  </app-picker-inline-header>\r\n\r\n  <!-- <div (click)=\"expandDialog()\"\r\n    [ngClass]=\"{\r\n    'c-ew__preview--invalid' : ui().touchedAndInvalid,\r\n    'c-ew__preview--disabled': config.initialDisabled\r\n    }\"> -->\r\n\r\n    @for (item of options(); track item.value) {\r\n      <div>\r\n        <mat-radio-button\r\n          class=\"picker-option-wrapper\"\r\n          (click)=\"select(item)\"\r\n          [name]=\"name\"\r\n          [checked]=\"item.selected\"\r\n          [disabled]=\"ui().disabled || item.noSelect\"\r\n          [tippy]=\"item.tooltip\"\r\n          tippyShowDelay=\"500\"\r\n          [tippyAllowHtml]=\"true\"\r\n          [tippyArrow]=\"true\"\r\n        >\r\n          <!-- Show Preview Label -->\r\n          <app-picker-item-label [item]=\"item\" [show]=\"true\" [index]=\"$index\" [settings]=\"fieldState.settings()\" [uiFeatures]=\"{ remove: false }\"></app-picker-item-label>\r\n        </mat-radio-button>\r\n      </div>\r\n    }\r\n  <!-- </div> -->\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioButton } from '@angular/material/radio';\r\nimport { FeatureNames } from '../../../../features/feature-names';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { PickerInlineBaseComponent } from '../picker-inline/picker-inline-base.component';\r\nimport { PickerInlineHeaderComponent } from '../picker-inline/picker-inline-header.component';\r\nimport { PickerPreviewLabelComponent } from '../picker-item-label/picker-item-label.component';\r\n\r\n@Component({\r\n  selector: 'app-picker-radio',\r\n  templateUrl: './picker-radio.component.html',\r\n  styleUrls: ['./picker-radio.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatRippleModule,\r\n    MatRadioButton,\r\n    NgClass,\r\n    TippyDirective,\r\n    PickerInlineHeaderComponent,\r\n    PickerPreviewLabelComponent,\r\n  ],\r\n})\r\nexport class PickerRadioComponent extends PickerInlineBaseComponent {\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldState.requireFeature(FeatureNames.PickerUiRadio);\r\n  }\r\n\r\n  /** Name is used to group the radio buttons together in the form */\r\n  name = this.fieldState.name;\r\n\r\n}\r\n","@if (allowText()) {\r\n  <span matSuffix class=\"toggle-buttons\">\r\n    @if (showBoth() || isTextMode()) {\r\n      <button\r\n        mat-icon-button\r\n        class=\"eav-suffix-button\"\r\n        [ngClass]=\"isTextMode() ? '' : 'active'\"\r\n        tippyTranslate=\"Fields.String.Dropdown\"\r\n        [disabled]=\"csDisabled()\"\r\n        appClickStopPropagation\r\n        (click)=\"isTextMode() ? toggleFreeText(csDisabled()) : null\"\r\n      >\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n    }\r\n    @if (showBoth() || !isTextMode()) {\r\n      <button\r\n        mat-icon-button\r\n        class=\"eav-suffix-button\"\r\n        [ngClass]=\"isTextMode() ? 'active' : ''\"\r\n        tippyTranslate=\"Fields.String.Freetext\"\r\n        [disabled]=\"csDisabled()\"\r\n        appClickStopPropagation\r\n        (click)=\"isTextMode() ? null : toggleFreeText(csDisabled())\"\r\n      >\r\n        <mat-icon>text_fields</mat-icon>\r\n      </button>\r\n    }\r\n  </span>\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, inject, input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ClickStopPropagationDirective } from '../../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { FieldState } from '../../field-state';\r\n\r\n@Component({\r\n  selector: 'app-picker-toggle-text',\r\n  templateUrl: './picker-text-toggle.component.html',\r\n  styleUrls: ['./picker-text-toggle.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class PickerTextToggleComponent {\r\n  csDisabled = input<boolean>();\r\n  allowText = input<boolean>();\r\n  isTextMode = input(false);\r\n\r\n  showBoth = input(true);\r\n\r\n  pickerData = inject(FieldState).pickerData;\r\n\r\n  constructor() { }\r\n\r\n  toggleFreeText(disabled: boolean): void {\r\n    if (disabled) return;\r\n    this.pickerData.toggleFreeTextMode();\r\n  }\r\n}\r\n","<div>\r\n  <mat-form-field [formGroup]=\"fieldState.group\" class=\"eav-mat-form-field\" color=\"accent\">\r\n    @if (useMultiLine()) {\r\n      <textarea matInput [required]=\"basics().required\" [formControlName]=\"fieldState.name\"\r\n        [placeholder]=\"basics().placeholder\"></textarea>\r\n    } @else {\r\n      <input matInput [required]=\"basics().required\" [formControlName]=\"fieldState.name\" [placeholder]=\"basics().placeholder\">\r\n    }\r\n    <div matSuffix>\r\n      <ng-content select=\"[freeTextButtons]\"></ng-content>\r\n    </div>\r\n    <mat-label>{{ basics().label }}</mat-label>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { PickerPartBaseComponent } from '../picker-part-base.component';\r\n\r\n@Component({\r\n  selector: 'app-picker-text',\r\n  templateUrl: './picker-text.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n  ],\r\n})\r\nexport class PickerTextComponent extends PickerPartBaseComponent {\r\n  \r\n  log = classLog({PickerTextComponent});\r\n\r\n  constructor() { super(); }\r\n\r\n  /**\r\n   * Tell the text-input to be multi-line, if the separator is a newline.\r\n   * Otherwise, it will be single-line.\r\n   */\r\n  protected useMultiLine = computedObj('useMultiLine', () => {\r\n    const settings = this.fieldState.settings();\r\n    const separator = settings.Separator;\r\n    const isSeparatorNewLine = separator == '\\\\n' /* buggy temp double-slash-n */ || separator == '\\n' /* correct */;\r\n    return isSeparatorNewLine;\r\n  });\r\n}\r\n","<div class=\"my-flex\">\r\n  <!-- The Input field / checkboxes etc. -->\r\n  <div class=\"eav-mat-form-field\">\r\n    @switch (mode()) {\r\n      @case (\"text\") {\r\n        <app-picker-text>\r\n          <ng-container freeTextButtons *ngTemplateOutlet=\"textToggle\"></ng-container>\r\n        </app-picker-text>\r\n      }\r\n      @case (\"checkbox\") {\r\n        <app-picker-checkboxes>\r\n          <ng-container addNew *ngTemplateOutlet=\"addNew\"></ng-container>\r\n          <ng-container freeTextButtons *ngTemplateOutlet=\"textToggle; context: { $implicit: false }\"></ng-container>\r\n        </app-picker-checkboxes>\r\n      }\r\n      @case (\"radio\") {\r\n        <app-picker-radio>\r\n          <ng-container addNew *ngTemplateOutlet=\"addNew\"></ng-container>\r\n          <ng-container freeTextButtons *ngTemplateOutlet=\"textToggle; context: { $implicit: false }\"></ng-container>\r\n        </app-picker-radio>\r\n      }\r\n      @case (\"pills\") {\r\n        <app-picker-pills>\r\n          <ng-container freeTextButtons *ngTemplateOutlet=\"textToggle\"></ng-container>\r\n        </app-picker-pills>\r\n      }\r\n      @case (\"search\") {\r\n        <app-picker-search [showSelectedItem]=\"true\" [showItemEditButtons]=\"true\">\r\n          <ng-container freeTextButtons *ngTemplateOutlet=\"textToggle\"></ng-container>\r\n        </app-picker-search>\r\n      }\r\n    }\r\n  </div>\r\n\r\n  <!-- The edit / add buttons -->\r\n  @if (mode() !== \"radio\" && mode() !== \"checkbox\") {\r\n\r\n    <div class=\"my-flex\">\r\n      <!-- create new entity to add to this list -->\r\n      <ng-container *ngTemplateOutlet=\"addNew\"></ng-container>\r\n      <!-- Open dialog button -->\r\n      @if (features().showGoToListDialogButton) {\r\n        <button\r\n          mat-icon-button\r\n          class=\"picker-inline-button\"\r\n          [disabled]=\"ui().disabled\"\r\n          tippyTranslate=\"Fields.Picker.OpenMultiselect\"\r\n          (click)=\"expandDialog()\"\r\n        >\r\n          <mat-icon>post_add</mat-icon>\r\n        </button>\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<!-- Help text for most controls (not radio/checkbox) -->\r\n@if (!skipHelpText()) {\r\n  <app-field-helper-text></app-field-helper-text>\r\n} @else {\r\n  <!-- Cheap spacer if no help text, should probably be done better some day -->\r\n  <br />\r\n}\r\n\r\n<!-- Part to add the text-toggle to the control -->\r\n<ng-template #textToggle let-showBoth>\r\n  <span [ngClass]=\"{ 'picker-suffix-text': showBoth }\">\r\n    <app-picker-toggle-text\r\n      [csDisabled]=\"ui().disabled\"\r\n      [allowText]=\"features().textEntry\"\r\n      [isTextMode]=\"isInFreeTextMode()\"\r\n      [showBoth]=\"showBoth ?? true\"\r\n    >\r\n    </app-picker-toggle-text>\r\n  </span>\r\n</ng-template>\r\n\r\n<!-- Part for the AddNew button, which will either open the edit, or first show a menu with all the options -->\r\n<ng-template #addNew>\r\n  @if (features().showAddNewButton) {\r\n    @if (pickerData.state.typesForNew().length > 1) {\r\n      <button\r\n        mat-icon-button\r\n        class=\"picker-inline-button\"\r\n        tippyTranslate=\"Fields.Picker.New\"\r\n        [disabled]=\"ui().disabled || !features().create\"\r\n        [matMenuTriggerFor]=\"entityTypesMenu\"\r\n      >\r\n        <mat-icon>add_circle_outline</mat-icon>\r\n      </button>\r\n      <mat-menu #entityTypesMenu=\"matMenu\">\r\n        @for (ct of pickerData.state.typesForNew(); track ct) {\r\n          <button mat-menu-item (click)=\"openNewEntityDialog(ct.guid)\">\r\n            <span>{{ ct.label }}</span>\r\n          </button>\r\n        }\r\n      </mat-menu>\r\n    } @else {\r\n      <button\r\n        mat-icon-button\r\n        class=\"picker-inline-button\"\r\n        tippyTranslate=\"Fields.Picker.New\"\r\n        [disabled]=\"ui().disabled || !features().create\"\r\n        (click)=\"openNewEntityDialog(null)\"\r\n      >\r\n        <mat-icon>add_circle_outline</mat-icon>\r\n      </button>\r\n    }\r\n  }\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { PickerCheckboxesComponent } from '../picker-checkboxes/picker-checkboxes.component';\r\nimport { PickerPartBaseComponent } from '../picker-part-base.component';\r\nimport { PickerPillsComponent } from '../picker-pills/picker-pills.component';\r\nimport { PickerRadioComponent } from '../picker-radio/picker-radio.component';\r\nimport { PickerSearchComponent } from '../picker-search/picker-search.component';\r\nimport { PickerTextToggleComponent } from '../picker-text-toggle/picker-text-toggle.component';\r\nimport { PickerTextComponent } from '../picker-text/picker-text.component';\r\n\r\n@Component({\r\n  selector: 'app-picker-preview',\r\n  templateUrl: './picker-preview.component.html',\r\n  styleUrls: ['./picker-preview.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgTemplateOutlet,\r\n    NgClass,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n    PickerPillsComponent,\r\n    PickerTextToggleComponent,\r\n    PickerSearchComponent,\r\n    PickerTextComponent,\r\n    PickerCheckboxesComponent,\r\n    PickerRadioComponent,\r\n    FieldHelperTextComponent,\r\n  ],\r\n})\r\nexport class PickerPreviewComponent extends PickerPartBaseComponent {\r\n\r\n  log = classLog({PickerPreviewComponent});\r\n\r\n  constructor() { super(); }\r\n\r\n  #pickerMode = this.fieldState.settingExt('PickerDisplayMode');\r\n\r\n  mode = computedObj('mode', () => {\r\n    if (this.isInFreeTextMode()) return 'text';\r\n    const pdm = this.#pickerMode();\r\n    switch (pdm) {\r\n      case 'radio': return 'radio';\r\n      case 'checkbox': return 'checkbox';\r\n      case 'auto-inline':\r\n        // TODO: Check if the selected exist in the options, if not, default to text\r\n        const pd = this.fieldState.pickerData;\r\n\r\n\r\n        // Multi-value should automatically use checkboxes\r\n        if (this.features().multiValue) return 'checkbox';\r\n        return 'radio';\r\n      case 'list':\r\n      default:\r\n        if (this.selectedItems().length > 1) return 'pills';\r\n        return 'search';\r\n    }\r\n  });\r\n\r\n  skipHelpText = computedObj('helpTextOnTop', () => {\r\n    const mode = this.mode();\r\n    return mode === 'radio' || mode === 'checkbox';\r\n  });\r\n\r\n}\r\n","\r\n@if (!features().multiValue) {\r\n  <mat-label class=\"field-label\"\r\n    [ngClass]=\"{ 'disabled': ui().disabled }\">\r\n    {{ basics().labelWithRequired }}\r\n  </mat-label>\r\n}\r\n@if (selectedItems().length > 0) {\r\n  <div\r\n    cdkDropList\r\n    [cdkDropListDisabled]=\"!features().multiValue || ui().disabled\"\r\n    (cdkDropListDropped)=\"drop($event)\"\r\n    class=\"my-list\"\r\n    [ngClass]=\"'my-list-' + (features().multiValue ? 'draggable' : 'static')\"\r\n  >\r\n    <!-- Normal list usually shows only one item, but can show \"empty slot\" / \"null-item\" in debug mode -->\r\n    @for (item of selectedItems(); track (item.value + $index); let index = $index) {\r\n      <div cdkDrag class=\"my-item\" [ngClass]=\"('my-item-' + (features().multiValue ? 'draggable' : 'static')) + ' ' + (ui().disabled ? 'disabled' : '')\">\r\n        <div class=\"item-title\" [ngClass]=\"{ 'disabled': ui().disabled }\">\r\n          <!-- visual Drag-Handle if sortable -->\r\n          @if (features().multiValue) {\r\n            <mat-icon class=\"item-title__icon\"\r\n              tippyTranslate=\"Fields.Picker.DragMove\"\r\n              [tippyDisabled]=\"ui().disabled\">\r\n              drag_handle\r\n            </mat-icon>\r\n          }\r\n          <span class=\"item-title__text\" [tippy]=\"item.tooltip\">\r\n            {{ item.label }}\r\n          </span>\r\n        </div>\r\n        <app-picker-item-buttons matSuffix class=\"my-item-actions\" [show]=\"true\" [item]=\"item\" [index]=\"index\"></app-picker-item-buttons>\r\n      </div>\r\n    }\r\n  </div>\r\n}\r\n","import { CdkDrag, CdkDragDrop, CdkDropList } from '@angular/cdk/drag-drop';\r\nimport { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MousedownStopPropagationDirective } from '../../../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { PickerItem } from '../models/picker-item.model';\r\nimport { PickerItemButtonsComponent } from '../picker-item-buttons/picker-item-buttons.component';\r\nimport { PickerPartBaseComponent } from '../picker-part-base.component';\r\nimport { ReorderIndexes } from './reorder-index.models';\r\n\r\n@Component({\r\n  selector: 'app-picker-list',\r\n  templateUrl: './picker-list.component.html',\r\n  styleUrls: ['./picker-list.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    NgClass,\r\n    CdkDropList,\r\n    CdkDrag,\r\n    PickerItemButtonsComponent,\r\n    TippyDirective,\r\n    MousedownStopPropagationDirective,\r\n  ],\r\n})\r\nexport class PickerListComponent extends PickerPartBaseComponent {\r\n  \r\n  log = classLog({PickerListComponent});\r\n\r\n  constructor() { super(); }\r\n\r\n  drop(event: CdkDragDrop<PickerItem[]>): void {\r\n    this.pickerData.state.reorder({\r\n      previousIndex: event.previousIndex,\r\n      currentIndex: event.currentIndex,\r\n    } satisfies ReorderIndexes);\r\n  }\r\n\r\n}\r\n","<app-picker-list></app-picker-list>\r\n\r\n@if (!isInFreeTextMode()) {\r\n  <app-picker-search\r\n    [showSelectedItem]=\"false\"\r\n    [showItemEditButtons]=\"false\">\r\n  </app-picker-search>\r\n}\r\n@else {\r\n  <app-picker-text></app-picker-text>\r\n}\r\n<app-field-helper-text></app-field-helper-text>\r\n\r\n<!-- Note: this is almost the same as in picker-preview, but the styling (FAB) and icons are a bit different -->\r\n<!-- add new entity -->\r\n@if (showAddNewEntityButtonInDialog()) {\r\n  <div style=\"display: flex; justify-content: end\">\r\n    @if (pickerData.state.typesForNew().length > 1) {\r\n      <button\r\n        mat-mini-fab\r\n        color=\"accent\"\r\n        tippyTranslate=\"Fields.Picker.New\"\r\n        [disabled]=\"ui().disabled || !features().create\"\r\n        [matMenuTriggerFor]=\"entityTypesMenu\"\r\n      >\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n      <mat-menu #entityTypesMenu=\"matMenu\">\r\n        @for (ct of pickerData.state.typesForNew(); track ct) {\r\n          <button mat-menu-item (click)=\"openNewEntityDialog(ct.guid)\">\r\n            <span>{{ ct.label }}</span>\r\n          </button>\r\n        }\r\n      </mat-menu>\r\n    } @else {\r\n      <button\r\n        mat-mini-fab\r\n        color=\"accent\"\r\n        tippyTranslate=\"Fields.Picker.New\"\r\n        [disabled]=\"ui().disabled || !features().create\"\r\n        (click)=\"openNewEntityDialog(null)\"\r\n      >\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    }\r\n  </div>\r\n}\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { PickerListComponent } from '../picker-list/picker-list.component';\r\nimport { PickerPartBaseComponent } from '../picker-part-base.component';\r\nimport { PickerSearchComponent } from '../picker-search/picker-search.component';\r\nimport { PickerTextComponent } from '../picker-text/picker-text.component';\r\n\r\n@Component({\r\n  selector: 'app-picker-dialog',\r\n  templateUrl: './picker-dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    PickerListComponent,\r\n    PickerSearchComponent,\r\n    PickerTextComponent,\r\n    FieldHelperTextComponent,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class PickerDialogComponent extends PickerPartBaseComponent {\r\n\r\n  protected showAddNewEntityButtonInDialog = computedObj('showAddNewEntityButtonInDialog', () => {\r\n    const features = this.features();\r\n    const settings = this.fieldState.settings();\r\n    const showAddNew = !this.isInFreeTextMode()\r\n      && settings.EnableCreate\r\n      && settings.CreateTypes\r\n      && features.multiValue;\r\n    return showAddNew;\r\n  });\r\n\r\n}\r\n","<!--\r\nThis template is used for all entity like fields,\r\ne.g. EntityDefault, EntityContentBlocks, EntityQuery, StringDropdownQuery\r\n-->\r\n<!-- <pre>Field.Picker Start - showPreview: {{ showPreview() }}</pre> -->\r\n@if (showPreview()) {\r\n  <!-- Had to disable defer 2024-06-14 2dm when Upgrading to Angular 17.3 from 17.0 before, seems to be module-related\r\n        can probably reactivate once modules are gone\r\n  -->\r\n  <!-- @defer { -->\r\n    <!-- <div>preview</div> -->\r\n    <app-picker-preview></app-picker-preview>\r\n  <!-- } -->\r\n}\r\n@else {\r\n  <!-- @defer { -->\r\n    <!-- <div>search, not preview</div> -->\r\n    <app-picker-dialog></app-picker-dialog>\r\n  <!-- } -->\r\n}\r\n<!-- <pre>Field.Picker End</pre> -->","import { Component, inject, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { FieldSettingsWithPickerSource } from '../../../../../../edit-types/src/PickerSources';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { classLog, ClassLogger } from '../../../shared/logging';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { FieldState } from '../../fields/field-state';\r\nimport { EditRoutingService } from '../../routing/edit-routing.service';\r\nimport { PickerDataSetup } from './picker-data-setup';\r\nimport { PickerImports } from './picker-providers.constant';\r\nimport { PickerSearchComponent } from './picker-search/picker-search.component';\r\n\r\n@Component({\r\n  // selector: none since it's a base class\r\n  templateUrl: './picker.component.html',\r\n  standalone: true,\r\n  imports: PickerImports,\r\n})\r\nexport abstract class PickerComponent extends BaseComponent implements OnInit, OnDestroy {\r\n\r\n  /** Typed Log Specs for inheriting classes to reuse */\r\n  static logSpecs = {\r\n    all: false,\r\n    focusOnSearchComponent: true,\r\n    refreshOnChildClosed: false,\r\n    childFormResult: true,\r\n  };\r\n\r\n  log: ClassLogger<typeof PickerComponent.logSpecs>;\r\n  \r\n  constructor() { super(); }\r\n  \r\n  constructorEnd() {\r\n    this.log ??= classLog({PickerComponent}, PickerComponent.logSpecs);\r\n    this.log.a('constructor');\r\n    const pickerDataFactory = new PickerDataSetup(this.#injector);\r\n    pickerDataFactory.setupPickerData(this.#pickerData, this.#fieldState);\r\n  }\r\n\r\n  @ViewChild(PickerSearchComponent) protected entitySearchComponent: PickerSearchComponent;\r\n\r\n  /** The injector is used by most children to get transient one-time objects */\r\n  #injector = inject(Injector);\r\n  #editRoutingService = inject(EditRoutingService);\r\n  #fieldState = inject(FieldState) as FieldState<FieldValue, FieldSettingsWithPickerSource>;\r\n\r\n  #pickerData = this.#fieldState.pickerData;\r\n\r\n  /**\r\n   * Whether to show the preview or not,\r\n   * since this control is used both for preview and dialog.\r\n   */\r\n  showPreview = computedObj('showPreview', () => {\r\n    const s = this.#pickerData.features();\r\n    return !s.multiValue || (s.multiValue && !this.#fieldState.isOpen());\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    if (this.#pickerData.closeWatcherAttachedWIP)\r\n      return;\r\n    this.#refreshOnChildClosed();\r\n    this.#pickerData.closeWatcherAttachedWIP = true;\r\n  }\r\n\r\n  #refreshOnChildClosed(): void {\r\n    const l = this.log.fnIf('refreshOnChildClosed');\r\n\r\n    // this is used when new entity is created in child form it automatically adds it to the picker as selected item\r\n    const config = this.#fieldState.config;\r\n    this.subscriptions.add(\r\n      // TODO: 2dm 2024-09-05 I believe this doesn't work as expected\r\n      this.#editRoutingService.childFormResult(config.index, config.entityGuid)\r\n        .subscribe(result => {\r\n          const l2 = this.log.fnIf('childFormResult', { result });\r\n          return l2.r(this.#pickerData.addNewlyCreatedItem(result));\r\n        })\r\n    );\r\n    l.end();\r\n  }\r\n}\r\n","import { PickerOptionCustom } from '../../../../../../../edit-types/src/DropdownOption';\r\n\r\n\r\n/**\r\n * For String-Picker field - will prepare settings (usually in the form of multiline-CSV)\r\n * and convert them to options, for further use in the picker.\r\n */\r\nexport function calculateDropdownOptions(\r\n  currentValue: string,\r\n  type: 'string' | 'number',\r\n  dropdownValuesFormat: '' | 'value-label', // first one is empty as a compatibility with old 2sxc versions\r\n  dropdownValues: string\r\n): PickerOptionCustom[] {\r\n  let options: PickerOptionCustom[] = [];\r\n\r\n  if (dropdownValues) {\r\n    const dropdownValuesArray = dropdownValues.replace(/\\r/g, '').split('\\n');\r\n\r\n    switch (dropdownValuesFormat) {\r\n      case '':\r\n        options = dropdownValuesArray.map(e => {\r\n          const s = e.split(':');\r\n          const maybeWantedEmptyVal = s[1];\r\n          const key = s.shift();\r\n          const val = s.join(':');\r\n          const option: PickerOptionCustom = {\r\n            Title: key,\r\n            Value: (val || maybeWantedEmptyVal === '') ? val : key\r\n          };\r\n          return option;\r\n        });\r\n        break;\r\n      case 'value-label':\r\n        options = dropdownValuesArray.map(valueLabel => {\r\n          // remove backslash escapes\r\n          const chars: { char: string, escaped: boolean }[] = [];\r\n          for (let i = 0; i < valueLabel.length; i++) {\r\n            const current = valueLabel[i];\r\n            const next = valueLabel[i + 1];\r\n\r\n            if (current === '\\\\' && next != null) {\r\n              chars.push({ char: next, escaped: true });\r\n              i++;\r\n              continue;\r\n            }\r\n\r\n            chars.push({ char: current, escaped: false });\r\n          }\r\n\r\n          // dropdownValues split with \":\", but ignore if escaped\r\n          const separatorIndex = chars.findIndex(c => c.char === ':' && c.escaped === false);\r\n          const option: PickerOptionCustom = {\r\n            Title: separatorIndex >= 0\r\n              ? chars.slice(separatorIndex + 1, chars.length).map(c => c.char).join('')\r\n              : chars.map(c => c.char).join(''),\r\n            Value: separatorIndex >= 0\r\n              ? chars.slice(0, separatorIndex).map(c => c.char).join('')\r\n              : chars.map(c => c.char).join(''),\r\n          };\r\n          if (type === 'number') {\r\n            option.Value = option.Value != null && option.Value !== ''\r\n              ? !isNaN(Number(option.Value)) ? Number(option.Value) : null\r\n              : null;\r\n          }\r\n          return option;\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  const currentValueFound = options.some(o => o.Value === currentValue);\r\n  if (!currentValueFound && !currentValue && currentValue !== '') {\r\n    options.push({\r\n      Title: currentValue,\r\n      Value: currentValue,\r\n    });\r\n  }\r\n  return options;\r\n}\r\n","import Papa from 'papaparse';\r\nimport { PickerOptionCustomExtended } from '../../../../../../../edit-types/src/DropdownOption';\r\nimport { classLog } from '../../../../shared/logging';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  parse: true,\r\n};\r\n\r\nexport class DataSourceParserCsv {\r\n  \r\n  log = classLog({DataSourceParserCsv}, logSpecs);\r\n\r\n  constructor() { }\r\n\r\n  parse(csv: string): PickerOptionCustomExtended[] {\r\n\r\n    const l = this.log.fnIf('parse', { csv });\r\n\r\n    const x = Papa.parse<PickerOptionCustomExtended>(csv, {\r\n      header: true,\r\n      skipEmptyLines: true,\r\n      transformHeader: (header: string) => header.trim(),\r\n      transform: (value: string, header: string) => header == 'Value' ? value : value.trim(),\r\n      dynamicTyping: true,  // auto-detect booleans, numbers, etc\r\n    });\r\n\r\n    // If no data, return empty array\r\n    const data = x?.data;\r\n    if (!data || !Array.isArray(data) || data.length == 0) return [];\r\n\r\n    // Filter out all without a value property (but empty strings are ok)\r\n    const filtered = data.filter(d => d.Value !== undefined);\r\n\r\n    if (filtered.length != data.length)\r\n      console.warn('CSV contains rows without a value', { data, filtered });\r\n\r\n    // Use header to create empty object with all fields\r\n    const header = x?.meta.fields ?? [];\r\n    const preEmpty = header.reduce((acc, h) => ({\r\n      ...acc,\r\n      [h]: null }),\r\n      {}\r\n    ) as { [key: string]: any };\r\n    const { Value, ...empty } = preEmpty;\r\n    \r\n    l.a('Parsed CSV', { header, empty, data, filtered });\r\n\r\n    // Make sure all the rows have all the fields\r\n    const complete = filtered.map(f => ({\r\n      ...empty,\r\n      ...f,\r\n      Value: f.Value ?? '' // this is necessary, because the 'dynamicTyping' option will make it a null if it's empty\r\n    }));\r\n\r\n    return l.r(complete);\r\n  }\r\n}","import { Of } from '../../../../../../core';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsEntity, FieldSettingsPicker, FieldSettingsPickerMerged } from '../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { RelationshipParentChild, UiPickerModeTree } from '../../../../../../edit-types/src/PickerModeTree';\r\nimport { FieldSettingsWithPickerSource, PickerSourceCustomCsv, PickerSourceCustomList, PickerSourceEntity, PickerSourceQuery, UiPickerSourcesAll } from '../../../../../../edit-types/src/PickerSources';\r\nimport { FeatureNames } from '../../../features/feature-names';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { EavEntity } from '../../shared/models/eav';\r\nimport { calculateDropdownOptions } from '../basic/string-picker/string-picker.helpers';\r\nimport { FieldLogicUpdate } from '../logic/field-logic-base';\r\nimport { FieldLogicTools } from '../logic/field-logic-tools';\r\nimport { PickerConfigs, PickerSourcesCustom, UiPickerModeIsTree } from './constants/picker-config-model.constants';\r\nimport { DataSourceParserCsv } from './data-sources/data-source-parser-csv';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getDataSourceAndSetupFieldSettings: true,\r\n  data: true,\r\n};\r\n\r\nexport class PickerLogicShared {\r\n\r\n  log = classLog({ PickerLogicShared }, logSpecs);\r\n\r\n  constructor() { }\r\n\r\n  static setDefaultSettings(settings: FieldSettings): FieldSettings {\r\n    const s = settings as FieldSettings & FieldSettingsPickerMerged;\r\n    s.AllowMultiValue ??= false;\r\n    s.EnableEdit ??= true;\r\n    s.EnableCreate ??= true;\r\n    s.EnableAddExisting ??= true;\r\n    // if multi-value is ever allowed, then we must also enable remove...\r\n    s.EnableRemove ??= true;\r\n    s.EnableDelete ??= false;\r\n    s.Label ??= '';\r\n    s.EnableTextEntry ??= false;\r\n\r\n    s.noAutoFocus = true;\r\n\r\n    return s;\r\n  }\r\n\r\n  static maybeOverrideEditRestrictions(fsUntyped: FieldSettings, tools: FieldLogicTools): { fs: FieldSettings, removeEditRestrictions: boolean } {\r\n    const fs = fsUntyped as FieldSettings & FieldSettingsPickerMerged;\r\n    if (!(tools.eavConfig.removeEditRestrictions && tools.debug))\r\n      return { fs, removeEditRestrictions: false };\r\n\r\n    console.log(`SystemAdmin + Debug: Overriding edit restrictions for field \\'${fs.Name}\\' (EntityType: \\'${fs.EntityType}\\').`);\r\n    fs.EnableEdit = true;\r\n    fs.EnableCreate = true;\r\n    fs.EnableAddExisting = true;\r\n    fs.EnableRemove = true;\r\n    fs.EnableDelete = true;\r\n    return { fs, removeEditRestrictions: true };\r\n  }\r\n\r\n  preUpdate({ settings, tools, value }: FieldLogicUpdate) {\r\n\r\n    const fsDefaults = PickerLogicShared.setDefaultSettings({ ...settings });\r\n\r\n    const { fs: fsRaw, removeEditRestrictions } = PickerLogicShared.maybeOverrideEditRestrictions(fsDefaults, tools);\r\n\r\n    const { fs, typeConfig } = new PickerLogicShared().#getDataSourceAndSetupFieldSettings(value, fsRaw, tools);\r\n\r\n    return { fs, removeEditRestrictions, typeConfig };\r\n  }\r\n\r\n\r\n  #getDataSourceAndSetupFieldSettings(value: FieldValue, fsBasic: FieldSettings, tools: FieldLogicTools) {\r\n    // Define field settings to be a merged FieldSettings and PickerSources\r\n    const fs = fsBasic as FieldSettingsWithPickerSource & FieldSettingsPickerMerged;\r\n\r\n    const dataSources: EavEntity[] = (fs.DataSources?.length > 0)\r\n      ? tools.contentTypeItemSvc.getMany(fs.DataSources)\r\n      : [];\r\n\r\n    // Transfer configuration\r\n    const dataSource = dataSources[0];\r\n    const typeName = dataSource?.Type.Name as Of<typeof PickerConfigs>;\r\n    fs.dataSourceType = typeName ?? '' as Of<typeof PickerConfigs>;\r\n\r\n    // DataSource may not be configured yet, in which case the object is just {}\r\n    const typeConfig = tools.reader.flatten<UiPickerSourcesAll>(dataSource);\r\n\r\n    const isKnownType = Object.values(PickerConfigs).includes(typeName);\r\n\r\n    const l = this.log.fn('dataSources', { dataSources });\r\n\r\n    l.values({ typeName, isKnownType, dataSources, typeConfig });\r\n\r\n    if (!isKnownType) {\r\n      console.error(`Unknown picker source type: '${typeName}' on field ${fs.Name}`);\r\n      return { fs, typeConfig };\r\n    }\r\n\r\n    // Properties to transfer from both query and entity\r\n    fs.CreateTypes = typeConfig.CreateTypes ?? '';// possible multiple types\r\n    fs.MoreFields = typeConfig.MoreFields ?? '';\r\n    fs.Label = typeConfig.Label ?? '';\r\n    fs.ItemInformation = typeConfig.ItemInformation ?? '';\r\n    fs.ItemTooltip = typeConfig.ItemTooltip ?? '';\r\n    fs.ItemLink = typeConfig.ItemLink ?? '';\r\n    fs.PreviewType = typeConfig.PreviewType ?? '';\r\n\r\n    const sourceIsQuery = typeName === PickerConfigs.UiPickerSourceQuery;\r\n    const sourceIsEntity = typeName === PickerConfigs.UiPickerSourceEntity;\r\n    const sourceIsCss = typeName === PickerConfigs.UiPickerSourceCss;\r\n    const sourceIsAppAssets = typeName === PickerConfigs.UiPickerSourceAppAssets;\r\n\r\n    l.values({ sourceIsQuery, sourceIsEntity, sourceIsCss, sourceIsAppAssets });\r\n\r\n    const isCustomSource = Object.values(PickerSourcesCustom).includes(typeName as Of<typeof PickerSourcesCustom>);\r\n\r\n    /** Query Data Source */\r\n    if (sourceIsQuery) {\r\n      const specsQuery = typeConfig as PickerSourceQuery;\r\n      fs.Query = specsQuery.Query ?? '';\r\n      fs.StreamName = specsQuery.StreamName ?? 'Default';// stream name could be multiple stream names\r\n      fs.UrlParameters = specsQuery.QueryParameters ?? '';\r\n\r\n      // The Query may specify another value to be used as the value (but it's unlikely)\r\n      fs.Value = specsQuery.Value ?? '';\r\n    }\r\n\r\n    /** Entity Data Source */\r\n    if (sourceIsEntity) {\r\n      const specsEntity = typeConfig as PickerSourceEntity;\r\n      (fs as unknown as FieldSettingsEntity).EntityType = specsEntity.ContentTypeNames ?? '';// possible multiple types\r\n    }\r\n\r\n    // Do this for all, as it's a common property - e.g. Css, AppAssets, etc.\r\n    fs.PreviewValue = typeConfig.PreviewValue ?? '';\r\n\r\n    /** Css File Data Source */\r\n    if (sourceIsCss) {\r\n      fs.CssSourceFile = typeConfig.CssSourceFile ?? '';\r\n      fs.CssSelectorFilter = typeConfig.CssSelectorFilter ?? '';\r\n      fs.Value = typeConfig.Value ?? '';\r\n    }\r\n\r\n    /** App Assets Source */\r\n    if (sourceIsAppAssets) {\r\n      fs.AssetsRootFolder = typeConfig.AssetsRootFolder ?? '/';\r\n      fs.AssetsFileFilter = typeConfig.AssetsFileFilter ?? '*.*';\r\n      fs.AssetsType = typeConfig.AssetsType ?? 'files';\r\n      fs.requiredFeatures = [FeatureNames.PickerSourceAppAssets];\r\n    }\r\n\r\n    if (isCustomSource) {\r\n      if (typeName === PickerConfigs.UiPickerSourceCustomList) {\r\n        const valuesRaw = (typeConfig as unknown as PickerSourceCustomList).Values ?? '';\r\n        // note that 'value-label' is the only format supported by the new picker config\r\n        fs._options ??= calculateDropdownOptions(value as string, 'string', 'value-label', valuesRaw) ?? [];\r\n      } else if (typeName === PickerConfigs.UiPickerSourceCustomCsv) {\r\n        const csv = (typeConfig as unknown as PickerSourceCustomCsv).Csv;\r\n        fs._options ??= new DataSourceParserCsv().parse(csv);\r\n        fs.requiredFeatures = [FeatureNames.PickerSourceCsv];\r\n        fs.PreviewValue = typeConfig.PreviewValue ?? '';\r\n      }\r\n    }\r\n\r\n    // If AllowMultiValue is false then EnableReselect must be false\r\n    fs.AllowMultiValue ? fs.EnableReselect ??= false : fs.EnableReselect = false;\r\n    // If AllowMultiValue is false then AllowMultiMin and AllowMultiMax must be 0 so we don't trigger the validation\r\n    if (fs.AllowMultiValue) {\r\n      fs.AllowMultiMin ??= 0;\r\n      fs.AllowMultiMax ??= 0;\r\n    } else {\r\n      fs.AllowMultiMin = 0;\r\n      fs.AllowMultiMax = 0;\r\n    }\r\n\r\n    // Display Mode and configuration of that\r\n    fs.PickerDisplayMode ??= 'list';\r\n    fs.PickerDisplayConfiguration ??= [];\r\n\r\n    // Tree configuration WIP\r\n    fs.PickerTreeConfiguration = this.#getTreeConfigOnce(fs, tools);\r\n\r\n    return { fs, typeConfig };\r\n  }\r\n\r\n  /** Get the tree config, unless it was already created, in which case we reuse it. */\r\n  #getTreeConfigOnce(fs: FieldSettings & FieldSettingsPicker, tools: FieldLogicTools): UiPickerModeTree {\r\n    if (fs.PickerTreeConfiguration)\r\n      return fs.PickerTreeConfiguration;\r\n\r\n    if (fs.PickerDisplayMode !== 'tree')\r\n      return null;\r\n\r\n    // Tree configuration WIP\r\n    const pickerDisplayConfigurations: EavEntity[] = (fs.PickerDisplayConfiguration?.length > 0)\r\n      ? tools.contentTypeItemSvc.getMany(fs.PickerDisplayConfiguration)\r\n      : [];\r\n\r\n    const pickerDisplayConfigName = pickerDisplayConfigurations[0]?.Type.Name;\r\n\r\n    if (pickerDisplayConfigName !== UiPickerModeIsTree)\r\n      return null;\r\n\r\n    const specs = tools.reader.flatten(pickerDisplayConfigurations[0]) as UiPickerModeTree;\r\n    const final: UiPickerModeTree = {\r\n      Title: specs.Title ?? '',\r\n      ConfigModel: UiPickerModeIsTree,\r\n      TreeRelationship: specs.TreeRelationship ?? RelationshipParentChild,\r\n      TreeBranchesStream: specs.TreeBranchesStream ?? 'Default',\r\n      TreeLeavesStream: specs.TreeLeavesStream ?? 'Default',\r\n      TreeParentIdField: specs.TreeParentIdField ?? 'Id',\r\n      TreeChildIdField: specs.TreeChildIdField ?? 'Id',\r\n      TreeParentChildRefField: specs.TreeParentChildRefField ?? 'Children',\r\n      TreeChildParentRefField: specs.TreeChildParentRefField ?? 'Parent',\r\n      TreeShowRoot: specs.TreeShowRoot ?? true,\r\n      TreeDepthMax: specs.TreeDepthMax ?? 10,\r\n      TreeAllowSelectRoot: specs.TreeAllowSelectRoot ?? true,\r\n      TreeAllowSelectBranch: specs.TreeAllowSelectBranch ?? true,\r\n      TreeAllowSelectLeaf: specs.TreeAllowSelectLeaf ?? true,\r\n    } satisfies UiPickerModeTree;\r\n    return final;\r\n  }\r\n\r\n}\r\n","import { PickerSourceEntity } from 'projects/edit-types/src/PickerSources';\r\nimport { FieldSettingsEntity, FieldSettingsSharedCreate } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { PickerLogicShared } from '../../picker/picker-logic-shared';\r\nimport { FieldSettings } from './../../../../../../../edit-types/src/FieldSettings';\r\n\r\nexport class EntityDefaultLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.EntityDefault;\r\n  \r\n  constructor() { super({ EntityDefaultLogic }); }\r\n\r\n  update({ settings, tools }: FieldLogicUpdate): FieldSettings {\r\n    \r\n    const fsRaw = PickerLogicShared.setDefaultSettings({ ...settings }) as FieldSettings & FieldSettingsSharedCreate & FieldSettingsEntity;\r\n    \r\n    // Both the query type and create-type are the same\r\n    fsRaw.EntityType ??= '';\r\n    fsRaw.CreateTypes = fsRaw.EntityType ?? '';\r\n\r\n    // The old entity-type has a prefill, which is now the create-prefill\r\n    (fsRaw as unknown as PickerSourceEntity).CreatePrefill ??= fsRaw.Prefill;\r\n    delete fsRaw.Prefill;\r\n\r\n    const fs = PickerLogicShared.maybeOverrideEditRestrictions(fsRaw, tools).fs;\r\n    \r\n    return fs;\r\n  }\r\n\r\n}\r\n\r\nFieldLogicBase.add(EntityDefaultLogic);\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\nimport { PickerComponent } from '../../picker/picker.component';\r\nimport { EntityDefaultLogic } from './entity-default-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.EntityDefault,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: PickerImports,\r\n})\r\nexport class EntityDefaultComponent extends PickerComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({EntityDefaultComponent}, PickerComponent.logSpecs);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n    EntityDefaultLogic.importMe();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { EntityContentBlocksLogic } from './entity-content-blocks-logic';\r\nimport { EntityDefaultComponent } from '../entity-default/entity-default.component';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.EntityContentBlocks,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: PickerImports,\r\n})\r\nexport class EntityContentBlockComponent extends EntityDefaultComponent implements OnInit, OnDestroy {\r\n\r\n  constructor() {\r\n    super();\r\n    EntityContentBlocksLogic.importMe();\r\n  }\r\n}\r\n","import { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { PickerLogicShared } from '../../picker/picker-logic-shared';\r\n\r\nexport class EntityPickerLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.EntityPicker;\r\n\r\n  constructor() { super({ EntityPickerLogic }); }\r\n\r\n  update(specs: FieldLogicUpdate): FieldSettings {\r\n    return new PickerLogicShared().preUpdate(specs).fs;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(EntityPickerLogic);\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\nimport { PickerComponent } from '../../picker/picker.component';\r\nimport { EntityPickerLogic } from './entity-picker-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.EntityPicker,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: PickerImports,\r\n})\r\nexport class EntityPickerComponent extends PickerComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({EntityPickerComponent}, PickerComponent.logSpecs);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n    EntityPickerLogic.importMe();\r\n  }\r\n\r\n}\r\n","import { FieldSettingsEntityQuery } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { FieldLogicManager } from '../../logic/field-logic-manager';\r\nimport { EntityDefaultLogic } from '../entity-default/entity-default-logic';\r\nimport { FieldSettings } from './../../../../../../../edit-types/src/FieldSettings';\r\n\r\nexport class EntityQueryLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.EntityQuery;\r\n\r\n  constructor() { super({ EntityQueryLogic }); }\r\n\r\n  update(updateSpecs: FieldLogicUpdate<string[]>): FieldSettings {\r\n    const entityDefaultLogic = FieldLogicManager.singleton().get(InputTypeCatalog.EntityDefault) as EntityDefaultLogic;\r\n    const s = entityDefaultLogic.update(updateSpecs) as FieldSettings & FieldSettingsEntityQuery;\r\n    s.Query ??= '';\r\n    s.StreamName ||= 'Default';\r\n    s.UrlParameters ??= '';\r\n    return s;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(EntityQueryLogic);\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\nimport { PickerComponent } from '../../picker/picker.component';\r\nimport { EntityQueryLogic } from './entity-query-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.EntityQuery,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: PickerImports,\r\n})\r\nexport class EntityQueryComponent extends PickerComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({EntityQueryComponent}, PickerComponent.logSpecs);\r\n  \r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n    EntityQueryLogic.importMe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AdamConfig } from '../../../../../../edit-types/src/AdamConfig';\r\nimport { AdamItem } from '../../../../../../edit-types/src/AdamItem';\r\nimport { HttpServiceBase } from '../../../shared/services/http-service-base';\r\nimport { LinkInfo } from '../../dialog/main/edit-dialog-main.models';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { SanitizeHelper } from '../helpers';\r\n\r\n/**\r\n * Form wide ADAM helper to get files, add folders etc.\r\n * Must be created once per edit-form, as it needs the exact app etc.\r\n */\r\n@Injectable()\r\nexport class AdamService extends HttpServiceBase {\r\n\r\n  constructor(private formConfig: FormConfigService) {\r\n    super();\r\n  }\r\n\r\n  getAll(url: string, config: AdamConfig) {\r\n    return this.getHttp<AdamItem[]>(\r\n      url + '/items',\r\n      {\r\n        params: {\r\n          subfolder: config.subfolder,\r\n          usePortalRoot: config.usePortalRoot.toString(),\r\n          appId: this.formConfig.config.appId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  addFolder(newFolderName: string, url: string, config: AdamConfig) {\r\n    return this.http.post<AdamItem[]>(\r\n      url + '/folder',\r\n      {},\r\n      {\r\n        params: {\r\n          subfolder: config.subfolder,\r\n          newFolder: SanitizeHelper.sanitizeName(newFolderName),\r\n          usePortalRoot: config.usePortalRoot.toString(),\r\n          appId: this.formConfig.config.appId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  rename(item: AdamItem, newName: string, url: string, config: AdamConfig) {\r\n    return this.getHttp<boolean>(\r\n      url + '/rename',\r\n      {\r\n        params: {\r\n          subfolder: config.subfolder,\r\n          isFolder: item.IsFolder.toString(),\r\n          id: item.Id.toString(),\r\n          usePortalRoot: config.usePortalRoot.toString(),\r\n          newName: SanitizeHelper.sanitizeName(newName),\r\n          appId: this.formConfig.config.appId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteItem(item: AdamItem, url: string, config: AdamConfig) {\r\n    return this.getHttp<boolean>(\r\n      url + '/delete',\r\n      {\r\n        params: {\r\n          subfolder: config.subfolder,\r\n          isFolder: item.IsFolder.toString(),\r\n          id: item.Id.toString(),\r\n          usePortalRoot: config.usePortalRoot.toString(),\r\n          appId: this.formConfig.config.appId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getLinkInfo(\r\n    link: string,\r\n    contentType: string,\r\n    guid: string,\r\n    field: string\r\n  ): Observable<LinkInfo> {\r\n    return this.getHttp<LinkInfo>(\r\n      this.apiUrl('cms/edit/linkInfo'),\r\n      {\r\n        params: {\r\n          link,\r\n          ...(guid && { guid }),\r\n          ...(contentType && { contentType }),\r\n          ...(field && { field }),\r\n          appid: this.formConfig.config.appId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Connector } from '../../../../../../edit-types/src/Connector';\r\nimport { ConnectorDialog } from '../../../../../../edit-types/src/ConnectorDialog';\r\nimport { ConnectorData } from '../../../../../../edit-types/src/ConnectorData';\r\nimport { FieldConfig } from '../../../../../../edit-types/src/FieldConfig';\r\nimport { ExperimentalProps } from '../../../../../../edit-types/src/ExperimentalProps';\r\nimport { loadScripts } from '../../../shared/helpers/load-scripts.helper';\r\nimport { FormConfiguration } from '../../form/form-configuration.model';\r\nimport { Signal } from '@angular/core';\r\nimport { ScriptsLoaderService } from '../../shared/services/scripts-loader.service';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\nimport { classLog } from '../../../shared/logging';\r\n\r\nexport class ConnectorInstance<T = any> implements Connector<T> {\r\n  \r\n  log = classLog({ConnectorInstance});\r\n  \r\n  data: ConnectorData<T>;\r\n  dialog: ConnectorDialog;\r\n  loadScript: (...args: any[]) => void;\r\n\r\n  get field() { return this.fieldConfigSignal(); }\r\n\r\n  get field$() { return this.#field$ ??= toObservable(this.fieldConfigSignal, { injector: this._experimental.injector }) }\r\n  #field$: Observable<FieldConfig>;\r\n\r\n  constructor(\r\n    _connectorHost: ConnectorHost<T>,\r\n    value$: Observable<T>,\r\n    private fieldConfigSignal: Signal<FieldConfig>,\r\n    public _experimental: ExperimentalProps,\r\n    formConfig: FormConfiguration,\r\n  ) {\r\n    this.data = new ConnectorDataInstance<T>(_connectorHost, value$);\r\n    this.dialog = new ConnectorDialogInstance<T>(_connectorHost);\r\n\r\n    this.loadScript = (\r\n      testOrScripts: string | (() => boolean) | { test: string | (() => boolean); src: string }[],\r\n      srcOrCallback: string | (() => void),\r\n      callback?: () => void,\r\n    ) => {\r\n      // one script (3 parameters: global or test, script url and a callback)\r\n      const isMainSignature = (typeof testOrScripts === 'string' || typeof testOrScripts === 'function')\r\n        && typeof srcOrCallback === 'string'\r\n        && typeof callback === 'function';\r\n      if (isMainSignature) {\r\n        srcOrCallback = ScriptsLoaderService.resolveUrlTokens(srcOrCallback as string, formConfig);\r\n        loadScripts([{ test: testOrScripts, src: srcOrCallback }], callback);\r\n        return;\r\n      }\r\n      // multiple scripts (2 parameters: scripts array and a callback)\r\n      if (Array.isArray(testOrScripts) && typeof srcOrCallback === 'function') {\r\n        for (const script of testOrScripts)\r\n          script.src = ScriptsLoaderService.resolveUrlTokens(script.src, formConfig);\r\n        loadScripts(testOrScripts, srcOrCallback);\r\n        return;\r\n      }\r\n      throw new Error('Unrecognized parameters. Please double check your input');\r\n    };\r\n  }\r\n}\r\n\r\nclass ConnectorDataInstance<T> implements ConnectorData<T> {\r\n  value: T;\r\n  clientValueChangeListeners: ((newValue: T) => void)[] = [];\r\n\r\n  constructor(private _connectorHost: ConnectorHost<T>, public value$: Observable<T>) {\r\n    // Host will complete this observable. Therefore unsubscribe is not required\r\n    this.value$.subscribe(newValue => {\r\n      this.value = newValue;\r\n      this.clientValueChangeListeners.forEach(callback => callback(newValue));\r\n    });\r\n  }\r\n\r\n  update(newValue: T) {\r\n    this._connectorHost.update(newValue);\r\n  }\r\n\r\n  onValueChange(callback: (newValue: T) => void) {\r\n    this.clientValueChangeListeners.push(callback);\r\n  }\r\n}\r\n\r\nclass ConnectorDialogInstance<T> implements ConnectorDialog {\r\n  constructor(private _connectorHost: ConnectorHost<T>) { }\r\n\r\n  open(componentTag?: string) {\r\n    return this._connectorHost.expand(true, componentTag);\r\n  }\r\n\r\n  close() {\r\n    this._connectorHost.expand(false);\r\n  }\r\n}\r\n\r\n/** Props and methods available to the connector to communicate with the host */\r\nexport interface ConnectorHost<T = any> {\r\n  update: (value: T) => void;\r\n  expand: (expand: boolean, componentTag?: string) => void;\r\n}\r\n","import { ChangeDetectorRef, ElementRef, Injectable, Injector, NgZone, OnDestroy, ViewContainerRef, computed, effect, inject } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { EavCustomInputField } from '../../../../../../edit-types/src/EavCustomInputField';\r\nimport { FieldConfig } from '../../../../../../edit-types/src/FieldConfig';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FeatureNames } from '../../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../../features/features-scoped.service';\r\nimport { openFeatureDialog } from '../../../features/shared/base-feature.component';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { ServiceBase } from '../../../shared/services/service-base';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { EditRoutingService } from '../../routing/edit-routing.service';\r\nimport { AdamService } from '../../shared/adam/adam.service';\r\nimport { ContentTypeService } from '../../shared/content-types/content-type.service';\r\nimport { UiControl } from '../../shared/controls/ui-control';\r\nimport { FieldMask } from '../../shared/helpers';\r\nimport { InputTypeService } from '../../shared/input-types/input-type.service';\r\nimport { FieldConfigSet } from '../field-config-set.model';\r\nimport { FieldState } from '../field-state';\r\nimport { PagePicker } from '../page-picker/page-picker.helper';\r\nimport { ExperimentalProps } from './../../../../../../edit-types/src/ExperimentalProps';\r\nimport { FieldValue } from './../../../../../../edit-types/src/FieldValue';\r\nimport { ConnectorHost, ConnectorInstance } from './connector-instance.model';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  constructor: false,\r\n  init: true,\r\n  getUrlOfId: false,\r\n  updateControl: false,\r\n  openFeatureDisabledWarning: false,\r\n};\r\n\r\n@Injectable()\r\nexport class ConnectorHelper extends ServiceBase implements OnDestroy {\r\n  \r\n  log = classLog({ConnectorHelper}, logSpecs);\r\n  \r\n  #injector = inject(Injector);\r\n  #fieldState = inject(FieldState);\r\n  #formConfig = inject(FormConfigService);\r\n  #translateService = inject(TranslateService);\r\n  #contentTypeService = inject(ContentTypeService);\r\n  #inputTypeService = inject(InputTypeService);\r\n  #featuresService = inject(FeaturesScopedService);\r\n  #editRoutingService = inject(EditRoutingService);\r\n  #dialog = inject(MatDialog);\r\n  #snackBar = inject(MatSnackBar);\r\n  #zone = inject(NgZone);\r\n  \r\n  #adamService = transient(AdamService);\r\n\r\n  constructor() {\r\n    super();\r\n    this.log.aIf('constructor')\r\n  }\r\n\r\n  #customEl: EavCustomInputField;\r\n  #value$ = this.#fieldState.ui().control.valueChanges.pipe(startWith(this.#fieldState.uiValue()), distinctUntilChanged(isEqual));\r\n\r\n  #config = this.#fieldState.config;\r\n  #group = this.#fieldState.group;\r\n\r\n  #viewContainerRef: ViewContainerRef;\r\n  #changeDetectorRef: ChangeDetectorRef;\r\n\r\n  public init(\r\n    customElName: string,\r\n    customElContainerRef: ElementRef,\r\n    viewContainerRef: ViewContainerRef,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n  ): this {\r\n    this.log.a('init');\r\n    this.#viewContainerRef = viewContainerRef;\r\n    this.#changeDetectorRef = changeDetectorRef;\r\n    this.#customEl = document.createElement(customElName) as EavCustomInputField;\r\n    this.#customEl.connector = this.#buildConnector();\r\n    customElContainerRef.nativeElement.appendChild(this.#customEl);\r\n    return this;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.log.a('ngOnDestroy');\r\n    this.#customEl?.parentNode.removeChild(this.#customEl);\r\n    this.#customEl = null;\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  #buildConnector() {\r\n    const connectorHost = this.#getCallbacks();\r\n    const experimental = this.#buildExperimentalProps();\r\n    const fieldConfigSignal = computed(() => {\r\n      const settings = this.#fieldState.settings();\r\n      return toFieldConfig(this.#config, settings);\r\n    }, { equal: isEqual});\r\n    const connector = new ConnectorInstance(connectorHost, this.#value$, fieldConfigSignal, experimental, this.#formConfig.config);\r\n\r\n    effect(() => {\r\n      const s = this.#fieldState.settings();\r\n      const field = connector.field as FieldConfig;\r\n      field.settings = s;\r\n      field.label = s.Name;\r\n      field.placeholder = s.Placeholder;\r\n      field.required = s.valueRequired;\r\n    }, { injector: this.#injector });\r\n    return connector;\r\n  }\r\n\r\n  #getCallbacks() {\r\n    const connectorHost: ConnectorHost = {\r\n      update: (value) => {\r\n        this.#zone.run(() => this.#updateControl(value));\r\n      },\r\n      expand: (expand, componentTag) => {\r\n        this.#zone.run(() => this.#editRoutingService.expand(expand, this.#config.index, this.#config.entityGuid, componentTag));\r\n      },\r\n    };\r\n    return connectorHost;\r\n  }\r\n\r\n  #buildExperimentalProps() {\r\n    const contentType = this.#contentTypeService.get(this.#config.contentTypeNameId);\r\n    const allInputTypeNames = this.#inputTypeService.getAttributeInputTypes(contentType.Attributes);\r\n\r\n    const lEx = classLog(\"ConnectorHelperExperimental\");\r\n\r\n    const experimentalProps: ExperimentalProps = {\r\n      entityGuid: this.#config.entityGuid,\r\n      allInputTypeNames,\r\n      formGroup: this.#group,\r\n      translateService: this.#translateService,\r\n      isExpanded$: this.#editRoutingService.isExpanded$(this.#config.index, this.#config.entityGuid),\r\n      dropzone: this.#config.dropzone,\r\n      adam: this.#config.adam,\r\n      updateField: (name, value) => {\r\n        lEx.fn('updateField', { name, value });\r\n        this.#zone.run(() => { this.#updateControl(value, this.#group.controls[name]); });\r\n      },\r\n      isFeatureEnabled: this.#featuresService.isEnabled,\r\n      setFocused: (focused) => {\r\n        lEx.fn('setFocused', { focused });\r\n        this.#zone.run(() => { this.#config.focused$.next(focused); });\r\n      },\r\n      openPagePicker: (callback) => {\r\n        lEx.fn('openPagePicker');\r\n        this.#zone.run(() => {\r\n          PagePicker.open(this.#config, this.#group, this.#dialog, this.#viewContainerRef, this.#changeDetectorRef, callback);\r\n        });\r\n      },\r\n      featureDisabledWarning: (featureNameId) => {\r\n        lEx.fn('featureDisabledWarning', { featureNameId });\r\n        this.#zone.run(() => {\r\n          this.#openFeatureDisabledWarning(featureNameId);\r\n        });\r\n      },\r\n      getUrlOfId: (value, callback) => {\r\n        lEx.fn('getUrlOfId', { value });\r\n        this.#zone.run(() => { this.#getUrlOfId(value, callback); });\r\n      },\r\n      getSettings: (name) => this.#formConfig.config.settings?.Values[name],\r\n\r\n      getFieldMask: (mask: string, name?: string) => {\r\n        return transient(FieldMask, this.#injector).init(name, mask);\r\n      },\r\n\r\n      injector: this.#injector,\r\n    };\r\n\r\n    return experimentalProps;\r\n  }\r\n\r\n  #getUrlOfId(value: string, callback: (value: string) => void) {\r\n    if (!value) return;\r\n\r\n    // handle short-ID links like file:17\r\n    const contentType = this.#config.contentTypeNameId;\r\n    const entityGuid = this.#config.entityGuid;\r\n    const field = this.#config.fieldName;\r\n    this.#adamService.getLinkInfo(value, contentType, entityGuid, field).subscribe(linkInfo => {\r\n      if (!linkInfo) return;\r\n      callback(linkInfo.Value);\r\n    });\r\n  }\r\n\r\n  #updateControl(value: FieldValue, control: AbstractControl = null) {\r\n    const ui = control ? new UiControl(control) : this.#fieldState.ui();\r\n    if (ui.disabled) return;\r\n    this.#fieldState.ui().setIfChanged(value);\r\n  }\r\n\r\n  #openFeatureDisabledWarning(featureNameId: string) { \r\n    if (featureNameId === FeatureNames.PasteImageFromClipboard) {\r\n      this.#snackBar.open(this.#translateService.instant('Message.PastingFilesIsNotEnabled'), this.#translateService.instant('Message.FindOutMore'), { duration: 3000 })\r\n        .onAction()\r\n        .subscribe(() => openFeatureDialog(this.#dialog, FeatureNames.PasteImageFromClipboard, this.#viewContainerRef, this.#changeDetectorRef));\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This function must stay here and not be in the edit-types folder,\r\n * otherwise too many dependencies are added because the FieldConfigSet is used.\r\n * @param config \r\n * @param settings \r\n * @returns \r\n */\r\nfunction toFieldConfig(config: FieldConfigSet, settings: FieldSettings): FieldConfig {\r\n  return {\r\n    name: config.fieldName,\r\n    index: config.index,\r\n    label: settings.Name,\r\n    placeholder: settings.Placeholder,\r\n    inputType: config.inputTypeSpecs.inputType,\r\n    type: config.type,\r\n    required: settings.valueRequired,\r\n    disabled: config.initialDisabled,\r\n    settings,\r\n  } satisfies FieldConfig;\r\n}","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, inject, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { transient } from '../../../../../../core/transient';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { FieldState } from '../field-state';\r\nimport { ConnectorHelper } from './connector.helper';\r\n\r\n@Component({\r\n  selector: 'app-connector',\r\n  templateUrl: './connector.component.html',\r\n  standalone: true,\r\n})\r\nexport class ConnectorComponent implements AfterViewInit {\r\n\r\n  log = classLog({ConnectorComponent});\r\n\r\n  /** Child tag which will contain the inner html */\r\n  @ViewChild('customElContainer') private customElContainerRef: ElementRef;\r\n\r\n  protected fieldState = inject(FieldState);\r\n  private connectorCreator = transient(ConnectorHelper);\r\n  private viewContainerRef = inject(ViewContainerRef);\r\n  private changeDetectorRef = inject(ChangeDetectorRef);\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fn('ngAfterViewInit');\r\n    const componentTag = history?.state?.componentTag || this.fieldState.config.inputTypeSpecs.componentTagDialogName;\r\n    l.a('Connector created for:', { componentTag });\r\n    this.connectorCreator.init(\r\n      componentTag,\r\n      this.customElContainerRef,\r\n      this.viewContainerRef,\r\n      this.changeDetectorRef,\r\n    );\r\n  }\r\n\r\n}\r\n","<div #customElContainer style=\"height:100%; position:relative;\"></div>\r\n","import { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\n\r\nexport class CustomGpsLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.CustomGps;\r\n\r\n  constructor() { super({ CustomGpsLogic }); }\r\n\r\n  update({ settings }: FieldLogicUpdate): FieldSettings {\r\n    const fixedSettings: FieldSettings = { ...settings };\r\n    // fixedSettings.DisableAutoTranslation = true;\r\n    return fixedSettings;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(CustomGpsLogic);\r\n","import { StringWysiwyg } from 'projects/edit-types/src/FieldSettings-String';\r\nimport { AdamItem } from '../../../../../../../edit-types/src/AdamItem';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../../../edit-types/src/FieldValue';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { FieldLogicWithValueInit } from '../../logic/field-logic-with-init';\r\n\r\n\r\nexport class StringWysiwygLogic extends FieldLogicBase implements FieldLogicWithValueInit {\r\n  name = InputTypeCatalog.StringWysiwyg;\r\n\r\n  constructor() { super({ StringWysiwygLogic }); }\r\n\r\n  canAutoTranslate = true;\r\n\r\n  update({ settings, tools }: FieldLogicUpdate): FieldSettings {\r\n    const fixedSettings = { ...settings } as FieldSettings & StringWysiwyg;\r\n    // If the `Dialog` setting is blank, it means start inline (default) and allow switching to dialog.\r\n    fixedSettings._allowDialog ??= fixedSettings.Dialog == null || fixedSettings.Dialog === '';\r\n    fixedSettings.Dialog ||= 'inline';\r\n    fixedSettings.ButtonSource ||= '';\r\n    fixedSettings.ButtonAdvanced ||= '';\r\n    fixedSettings.ContentCss ||= '';\r\n    fixedSettings.InlineInitialHeight ||= '3';\r\n\r\n    // New - configuration bundles\r\n    fixedSettings._advanced = this.findAndMergeAdvanced(tools, fixedSettings.WysiwygConfiguration, {\r\n      Mode: 'default',\r\n      Json: '',\r\n    });\r\n\r\n    return fixedSettings;\r\n  }\r\n\r\n  /** Checks if dataCmsId is same as file name and if it is switches img src with adam item url */\r\n  processValueOnLoad(value: FieldValue, adamItems: AdamItem[]): FieldValue {\r\n    try {\r\n      const doc = new DOMParser().parseFromString(value as string, 'text/html');\r\n      doc.body.querySelectorAll('img').forEach((img) => {\r\n        const dataCmsid = img.getAttribute('data-cmsid')?.replace('file:', '');\r\n        const src = img.getAttribute('src');\r\n        if (dataCmsid && src) {\r\n          const fileName = src.split('/').pop();\r\n          if (dataCmsid === fileName) {\r\n            const adamItem = adamItems.find(x => x.Name === dataCmsid);\r\n            if (adamItem)\r\n              img.setAttribute('src', adamItem.Url);\r\n          }\r\n        }\r\n      });\r\n      return doc.body.innerHTML;\r\n    } catch (error) {\r\n      console.error('Error while cleaning wysiwyg content', error);\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(StringWysiwygLogic);\r\n\r\n","@if (loading()) {\r\n  <mat-spinner color=\"accent\"></mat-spinner>\r\n}\r\n@else if (this.fieldState.isOpen()) {\r\n  <app-connector></app-connector>\r\n}\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component, inject, signal } from '@angular/core';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { ScriptsLoaderService } from '../../../shared/services/scripts-loader.service';\r\nimport { ConnectorComponent } from '../../connector/connector.component';\r\nimport { FieldState } from '../../field-state';\r\nimport { CustomGpsLogic } from './custom-gps-logic';\r\nimport { StringWysiwygLogic } from './string-wysiwyg-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.ExternalWebComponent,\r\n  templateUrl: './external-web-component.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatProgressSpinnerModule,\r\n    ConnectorComponent,\r\n    AsyncPipe,\r\n  ],\r\n})\r\nexport class ExternalWebComponentComponent {\r\n\r\n  log = classLog({ExternalWebComponentComponent});\r\n\r\n  protected fieldState = inject(FieldState);\r\n  protected config = this.fieldState.config;\r\n \r\n  protected loading = signal<boolean>(true)\r\n\r\n  constructor(\r\n    private scriptsLoaderService: ScriptsLoaderService,\r\n  ) {\r\n    StringWysiwygLogic.importMe();\r\n    CustomGpsLogic.importMe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadAssets();\r\n  }\r\n\r\n  private loadAssets() {\r\n    const assets = this.config.inputTypeSpecs.metadata.AngularAssets.split('\\n');\r\n    if (assets.length === 0) return;\r\n    this.scriptsLoaderService.load(assets, this.assetsLoaded.bind(this));\r\n  }\r\n\r\n  private assetsLoaded() {\r\n    this.log.fn('assetsLoaded ' + this.config.fieldName);\r\n    this.loading.set(false);\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, ElementRef, input, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FeatureNames } from '../../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../../features/features-scoped.service';\r\nimport { openFeatureDialog } from '../../../features/shared/base-feature.component';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { ElementEventListener } from '../../shared/controls/element-event-listener.model';\r\nimport { FieldConfigSet } from '../field-config-set.model';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  constructor: false,\r\n  handleImage: false,\r\n};\r\n\r\n\r\n@Directive({\r\n  selector: '[appPasteClipboardImage]',\r\n  standalone: true\r\n})\r\nexport class PasteClipboardImageDirective implements OnInit, OnDestroy {\r\n\r\n  log = classLog({PasteClipboardImageDirective}, logSpecs, false);\r\n\r\n  config = input<FieldConfigSet>();\r\n  elementType = input<string>();\r\n  #eventListeners: ElementEventListener[] = [];\r\n\r\n  #pasteImageEnabled = this.features.isEnabled[FeatureNames.PasteImageFromClipboard]();\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private features: FeaturesScopedService,\r\n    private snackBar: MatSnackBar,\r\n    private translate: TranslateService,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.log.fn('constructor', { elementType: this.elementType(), pasteImageEnabled: this.#pasteImageEnabled });\r\n  }\r\n\r\n  ngOnInit() {\r\n    switch (this.elementType()) {\r\n      case 'input':\r\n        this.elementRef.nativeElement.pastableTextarea();\r\n        break;\r\n      case 'element':\r\n        this.elementRef.nativeElement.pastableNonInputable();\r\n        break;\r\n    }\r\n\r\n\r\n    const handleImage = (event: CustomEvent) => { this.#handleImage(event); };\r\n    this.elementRef.nativeElement.addEventListener('handleImage', handleImage);\r\n\r\n    this.#eventListeners.push(\r\n      { element: this.elementRef.nativeElement, type: 'handleImage', listener: handleImage },\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // spm 2019-10-24 paste.js which handles clipboard paste doesn't destroy listeners\r\n    this.#eventListeners.forEach(({ element, type, listener }) => {\r\n      element.removeEventListener(type, listener);\r\n    });\r\n  }\r\n\r\n  #handleImage(event: CustomEvent) {\r\n    const enabled = this.#pasteImageEnabled;\r\n    const l = this.log.fnIf('handleImage', { event }, 'handling paste image - ' + (enabled ? 'enabled' : 'disabled') );\r\n    if (enabled) {\r\n      const image = this.#getFile(event.detail as PasteClipboardImageEventDetail);\r\n      this.config().dropzone.uploadFile(image);\r\n      l.end('started upload');\r\n    } else {\r\n      this.snackBar.open(this.translate.instant('Message.PastingFilesIsNotEnabled'), this.translate.instant('Message.FindOutMore'), { duration: 3000 }).onAction().subscribe(() => {\r\n        openFeatureDialog(this.matDialog, FeatureNames.PasteImageFromClipboard, this.viewContainerRef, this.changeDetectorRef);\r\n      });\r\n      l.end('not enabled, showing snackbar');\r\n    }\r\n  }\r\n\r\n  #getFile(data: PasteClipboardImageEventDetail) {\r\n    let newFile = data.file; // for fallback\r\n\r\n    try {\r\n      // File.name is readonly so we do this\r\n      const formData = new FormData();\r\n      formData.append('file', data.file, data.imageFileName);\r\n      newFile = formData.get('file') as File;\r\n    } catch (e) {\r\n      console.error('paste image error', e);\r\n    }\r\n    return newFile;\r\n  }\r\n}\r\n\r\ninterface PasteClipboardImageEventDetail {\r\n  file: File;\r\n  imageFileName: string;\r\n  originalEvent: ClipboardEvent;\r\n}\r\n","import { ChangeDetectorRef, Component, Injector, OnInit, ViewContainerRef, effect, inject, signal } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Hyperlink, HyperlinkLibrary } from 'projects/edit-types/src/FieldSettings-Hyperlink';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { AdamItem } from '../../../../../../../edit-types/src/AdamItem';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { eavConstants } from '../../../../shared/constants/eav.constants';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { EditForm, EditPrep } from '../../../../shared/models/edit-form.model';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { FormsStateService } from '../../../form/forms-state.service';\r\nimport { EditRoutingService } from '../../../routing/edit-routing.service';\r\nimport { AdamService } from '../../../shared/adam/adam.service';\r\nimport { LinkCacheService } from '../../../shared/adam/link-cache.service';\r\nimport { FileTypeHelpers, UrlHelpers } from '../../../shared/helpers';\r\nimport { FieldState } from '../../field-state';\r\nimport { PagePicker } from '../../page-picker/page-picker.helper';\r\nimport { Preview } from './hyperlink-default.models';\r\n\r\n@Component({\r\n  selector: 'app-base-field-hyperlink-component',\r\n  template: ''\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class HyperlinkDefaultBaseComponent implements OnInit {\r\n\r\n  log = classLog({HyperlinkDefaultBaseComponent});\r\n\r\n  preview = signal<Preview>({\r\n    url: '',\r\n    thumbnailUrl: '',\r\n    previewUrl: '',\r\n    floatingText: '',\r\n    isImage: false,\r\n    isKnownType: false,\r\n    icon: '',\r\n  });\r\n\r\n  protected fieldState = inject(FieldState) as FieldState<string, FieldSettings & Hyperlink & HyperlinkLibrary>;\r\n\r\n  protected settings = this.fieldState.settings;\r\n  protected basics = this.fieldState.basics;\r\n  public config = this.fieldState.config;\r\n  public group = this.fieldState.group;\r\n  protected ui = this.fieldState.ui;\r\n  protected uiValue = this.fieldState.uiValue;\r\n\r\n  #injector = inject(Injector);\r\n  #editRoutingService = inject(EditRoutingService);\r\n\r\n  public adamService = transient(AdamService);\r\n\r\n  constructor(\r\n    private formConfig: FormConfigService,\r\n    public matDialog: MatDialog,\r\n    public viewContainerRef: ViewContainerRef,\r\n    public changeDetectorRef: ChangeDetectorRef,\r\n    public linkCacheService: LinkCacheService,\r\n    public formsStateService: FormsStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    effect(() => {\r\n      this.log.a('controlStatus effect');\r\n      const status = this.fieldState.uiValue();\r\n      this.fetchLink(status);\r\n    }, { injector: this.#injector, allowSignalWrites: true });\r\n  }\r\n\r\n  adamItem = computedObj('adamItem', () => {\r\n    const value = this.uiValue();\r\n    const adamItems = this.config.adam.items() as AdamItem[];\r\n\r\n    if (!value || !adamItems.length) return;\r\n\r\n    const match = value.trim().match(/^file:([0-9]+)$/i);\r\n    if (!match) return;\r\n\r\n    const adamItemId = parseInt(match[1], 10);\r\n    const adamItem = adamItems.find(i => i.Id === adamItemId);\r\n    return adamItem;\r\n  });\r\n\r\n\r\n  openPagePicker() {\r\n    PagePicker.open(this.config, this.group, this.matDialog, this.viewContainerRef, this.changeDetectorRef, (page) => {\r\n      // convert to page:xyz format (if it wasn't cancelled)\r\n      if (!page) return;\r\n      this.fieldState.ui().setIfChanged(`page:${page.id}`);\r\n    });\r\n  }\r\n\r\n  openImageConfiguration(adamItem?: AdamItem) {\r\n    if (this.formsStateService.readOnly().isReadOnly || !adamItem?._imageConfigurationContentType)\r\n      return;\r\n\r\n    const form: EditForm = {\r\n      items: [\r\n        adamItem._imageConfigurationId > 0\r\n          ? EditPrep.editId(adamItem._imageConfigurationId)\r\n          : EditPrep.newMetadata(adamItem.ReferenceId, adamItem._imageConfigurationContentType, eavConstants.metadata.cmsObject),\r\n      ],\r\n    };\r\n    this.#editRoutingService.open(this.config.index, this.config.entityGuid, form);\r\n  }\r\n\r\n  private fetchLink(value: string) {\r\n    this.log.a('fetchLink', { value });\r\n    if (!value) {\r\n      this.setPreview(value, false);\r\n      return;\r\n    }\r\n\r\n    const isFileOrPage = this.isFileOrPage(value);\r\n    if (!isFileOrPage) {\r\n      this.setPreview(value, false);\r\n      return;\r\n    }\r\n\r\n    const cached = this.linkCacheService.get(value);\r\n    if (cached) {\r\n      const isResolved = !this.isFileOrPage(cached.Value);\r\n      this.setPreview(cached.Value, isResolved, cached.Adam);\r\n      return;\r\n    }\r\n\r\n    // handle short-ID links like file:17\r\n    const contentType = this.config.contentTypeNameId;\r\n    const entityGuid = this.config.entityGuid;\r\n    const field = this.config.fieldName;\r\n    this.adamService.getLinkInfo(value, contentType, entityGuid, field)\r\n      .subscribe(linkInfo => {\r\n        if (!linkInfo) {\r\n          this.setPreview(value, false);\r\n          return;\r\n        }\r\n        this.linkCacheService.addLink(value, linkInfo);\r\n        const isResolved = !this.isFileOrPage(linkInfo.Value);\r\n        this.setPreview(linkInfo.Value, isResolved, linkInfo.Adam);\r\n      });\r\n  }\r\n\r\n  private setPreview(value: string, isResolved: boolean, adam?: AdamItem) {\r\n    const preview = this.getPreview(value, isResolved, adam);\r\n    this.preview.set(preview);\r\n  }\r\n\r\n  private getPreview(value: string, isResolved: boolean, adam?: AdamItem): Preview {\r\n    // for preview resolve [App:Path]\r\n    value = value.replace(/\\[App:Path\\]/i, UrlHelpers.getUrlPrefix('app', this.formConfig.config));\r\n\r\n    return {\r\n      url: value,\r\n      floatingText: isResolved ? `.../${value.substring(value.lastIndexOf('/') + 1)}` : '',\r\n      thumbnailUrl: `url(\"${adam?.ThumbnailUrl ?? this.buildUrl(value, 1)}\")`,\r\n      previewUrl: adam?.PreviewUrl ?? this.buildUrl(value, 2),\r\n      isImage: FileTypeHelpers.isImage(value),\r\n      isKnownType: FileTypeHelpers.isKnownType(value),\r\n      icon: FileTypeHelpers.getIconClass(value),\r\n    } satisfies Preview;\r\n  }\r\n\r\n  private buildUrl(url: string, size?: 1 | 2): string {\r\n    let query = '';\r\n    if (size === 1)\r\n      query += 'w=80&h=80&mode=crop';\r\n    if (size === 2)\r\n      query += 'w=800&h=800&mode=max';\r\n    if (query && !url.includes('?'))\r\n      query = '?' + query;\r\n    return url + query;\r\n  }\r\n\r\n  private isFileOrPage(value: string) {\r\n    const cleanValue = value.trim().toLocaleLowerCase();\r\n    const isFileOrPage = cleanValue.startsWith('file:') || cleanValue.startsWith('page:');\r\n    return isFileOrPage;\r\n  }\r\n}\r\n","import { Hyperlink } from 'projects/edit-types/src/FieldSettings-Hyperlink';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\n\r\nexport class HyperlinkDefaultLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.HyperlinkDefault;\r\n\r\n  constructor() { super({ HyperlinkDefaultLogic }); }\r\n\r\n  update({ settings }: FieldLogicUpdate): FieldSettings {\r\n    const fixedSettings = { ...settings } as FieldSettings & Hyperlink;\r\n    fixedSettings.Buttons ||= 'adam,more';\r\n    fixedSettings.FileFilter ??= '';\r\n    fixedSettings.Paths ??= '';\r\n    fixedSettings.ServerResourceMapping ??= '';\r\n    fixedSettings.EnableImageConfiguration ??= true; // 2022-11-08 v14.12 changed default to true // false;\r\n    return fixedSettings;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(HyperlinkDefaultLogic);\r\n","@if (preview(); as preV) {\r\n  @if (this.fieldState.isOpen()) {\r\n    <div class=\"fabs-box\">\r\n      @if (buttonAdam()) {\r\n        <button\r\n          mat-mini-fab\r\n          color=\"accent\"\r\n          tippyTranslate=\"Fields.Hyperlink.Default.AdamTip\"\r\n          [disabled]=\"ui().disabled\"\r\n          (click)=\"toggleAdam(false, false)\"\r\n        >\r\n          <mat-icon svgIcon=\"apple-outlined\"></mat-icon>\r\n        </button>\r\n      }\r\n      <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        [disabled]=\"!adamItem()?._imageConfigurationContentType\"\r\n        [ngClass]=\"{ 'metadata-exists': adamItem()?._imageConfigurationId > 0 }\"\r\n        tippyTranslate=\"Fields.Hyperlink.AdamFileManager.ImageSettings\"\r\n        (click)=\"openImageConfiguration(adamItem())\"\r\n      >\r\n        <mat-icon\r\n          [tippyTranslate]=\"\r\n            enableImageConfiguration()\r\n              ? 'Fields.Hyperlink.AdamFileManager.ImageSettingsUnavailable'\r\n              : 'Fields.Hyperlink.AdamFileManager.ImageSettingsDisabled'\r\n          \"\r\n          [tippyDisabled]=\"adamItem()?._imageConfigurationContentType\"\r\n          >filter_center_focus</mat-icon\r\n        >\r\n      </button>\r\n      @if (buttonPage()) {\r\n        <button\r\n          mat-mini-fab\r\n          color=\"primary\"\r\n          tippyTranslate=\"Fields.Hyperlink.Default.PageTip\"\r\n          [disabled]=\"ui().disabled\"\r\n          (click)=\"openPagePicker()\"\r\n        >\r\n          <mat-icon svgIcon=\"sitemap\"></mat-icon>\r\n        </button>\r\n      }\r\n      @if (buttonMore()) {\r\n        <button\r\n          mat-mini-fab\r\n          color=\"primary\"\r\n          tippyTranslate=\"Fields.Hyperlink.Default.MoreOptions\"\r\n          [disabled]=\"ui().disabled\"\r\n          [matMenuTriggerFor]=\"menu\"\r\n        >\r\n          <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n      }\r\n    </div>\r\n    <mat-menu #menu=\"matMenu\" class=\"menu-box\">\r\n      <ng-template matMenuContent>\r\n        @if (showAdam()) {\r\n          <button mat-menu-item (click)=\"toggleAdam(false, false)\">\r\n            <mat-icon svgIcon=\"apple-outlined\"></mat-icon>\r\n            <span>{{ \"Fields.Hyperlink.Default.MenuAdam\" | translate }}</span>\r\n          </button>\r\n        }\r\n        @if (showPagePicker()) {\r\n          <button mat-menu-item (click)=\"openPagePicker()\">\r\n            <mat-icon svgIcon=\"sitemap\"></mat-icon>\r\n            <span>{{ \"Fields.Hyperlink.Default.MenuPage\" | translate }}</span>\r\n          </button>\r\n        }\r\n        @if (showImageManager()) {\r\n          <button mat-menu-item (click)=\"toggleAdam(true, true)\">\r\n            <mat-icon svgIcon=\"file-image\"></mat-icon>\r\n            <span>{{ \"Fields.Hyperlink.Default.MenuImage\" | translate }}</span>\r\n          </button>\r\n        }\r\n        @if (showFileManager()) {\r\n          <button mat-menu-item (click)=\"toggleAdam(true, false)\">\r\n            <mat-icon svgIcon=\"file\"></mat-icon>\r\n            <span>{{ \"Fields.Hyperlink.Default.MenuDocs\" | translate }}</span>\r\n          </button>\r\n        }\r\n      </ng-template>\r\n    </mat-menu>\r\n    <!-- content -->\r\n    <div class=\"eav-layout-grid\">\r\n      <div class=\"eav-layout-grid__inner\">\r\n        <mat-card class=\"eav-card eav-layout-grid__cell--span-12 hyperlink-card shadow-bottom-z-1\">\r\n          <div class=\"hyperlink-input-link-wrapper\">\r\n            <!-- input -->\r\n            <mat-form-field [formGroup]=\"group\" color=\"accent\" class=\"eav-mat-form-field\">\r\n              <input\r\n                matInput\r\n                [formControlName]=\"config.fieldName\"\r\n                tippyTranslate=\"Fields.Hyperlink.Default.Tooltip\"\r\n                tippyPlacement=\"top\"\r\n                [placeholder]=\"basics().placeholder\"\r\n                [required]=\"basics().required\"\r\n                appPasteClipboardImage\r\n                [config]=\"config\"\r\n                [elementType]=\"'input'\"\r\n              />\r\n              <mat-label>{{ basics().label }}</mat-label>\r\n            </mat-form-field>\r\n            <!-- link absolutely positioned above input -->\r\n            @if (preV?.floatingText) {\r\n              <div class=\"hyperlink-floating\">\r\n                <div class=\"hyperlink-floating__value\">{{ uiValue() }}</div>\r\n                <div class=\"hyperlink-floating__url-box\">\r\n                  <a [href]=\"preV.url\" target=\"_blank\" class=\"hyperlink-floating__url\" [tippy]=\"preV.url\">\r\n                    <span>{{ preV.floatingText }}</span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          @if (uiValue()) {\r\n            <div class=\"preview-wrapper\">\r\n              @if (preV.isImage) {\r\n                <!-- image -->\r\n                <a [href]=\"preV.url\" target=\"_blank\">\r\n                  <div class=\"preview-image-box\">\r\n                    <img [src]=\"preV.previewUrl\" class=\"preview-image\" />\r\n                  </div>\r\n                </a>\r\n              } @else {\r\n                <!-- icon -->\r\n                <a [href]=\"preV.url\" target=\"_blank\" [tippy]=\"preV.url\" tippyPlacement=\"right\">\r\n                  <div class=\"preview-icon-box\">\r\n                    <mat-icon [svgIcon]=\"preV.icon\"></mat-icon>\r\n                  </div>\r\n                </a>\r\n              }\r\n            </div>\r\n          }\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, effect, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AdamItem } from '../../../../../../../edit-types/src/AdamItem';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { SignalEquals } from '../../../../shared/signals/signal-equals';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { FormsStateService } from '../../../form/forms-state.service';\r\nimport { LinkCacheService } from '../../../shared/adam/link-cache.service';\r\nimport { PasteClipboardImageDirective } from '../../directives/paste-clipboard-image.directive';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { WrappersCatalog } from '../../wrappers/wrappers.constants';\r\nimport { HyperlinkDefaultBaseComponent } from './hyperlink-default-base.component';\r\nimport { HyperlinkDefaultLogic } from './hyperlink-default-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.HyperlinkDefault,\r\n  templateUrl: './hyperlink-default.component.html',\r\n  styleUrls: ['./hyperlink-default.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    NgClass,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    PasteClipboardImageDirective,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\n@FieldMetadata({\r\n  wrappers: [\r\n    WrappersCatalog.DropzoneWrapper,\r\n    WrappersCatalog.LocalizationWrapper,\r\n    WrappersCatalog.HyperlinkDefaultExpandableWrapper,\r\n    WrappersCatalog.AdamWrapper,\r\n  ],\r\n})\r\nexport class HyperlinkDefaultComponent extends HyperlinkDefaultBaseComponent implements OnInit {\r\n  protected buttonAdam = computed(() => this.settings().Buttons.includes('adam'), SignalEquals.bool);\r\n  protected buttonPage = computed(() => this.settings().Buttons.includes('page'), SignalEquals.bool);\r\n  protected buttonMore = computed(() => this.settings().Buttons.includes('more'), SignalEquals.bool);\r\n  protected showAdam = this.fieldState.settingExt('ShowAdam');\r\n  protected showPagePicker = this.fieldState.settingExt('ShowPagePicker');\r\n  protected showImageManager = this.fieldState.settingExt('ShowImageManager');\r\n  protected showFileManager = this.fieldState.settingExt('ShowFileManager');\r\n  protected enableImageConfiguration = this.fieldState.settingExt('EnableImageConfiguration');\r\n\r\n  constructor(\r\n    eavService: FormConfigService,\r\n    matDialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    linkCacheService: LinkCacheService,\r\n    formsStateService: FormsStateService,\r\n  ) {\r\n    super(\r\n      eavService,\r\n      matDialog,\r\n      viewContainerRef,\r\n      changeDetectorRef,\r\n      linkCacheService,\r\n      formsStateService,\r\n    );\r\n    HyperlinkDefaultLogic.importMe();\r\n\r\n    // ADAM Settings, in a way which ensures they only fire on relevant changes\r\n    // must be in constructor for effect() to work\r\n    const adamSettings = computedObj('adamSettings', () => {\r\n      const s = this.fieldState.settings();\r\n      return {\r\n        rootSubfolder: s.Paths,\r\n        fileFilter: s.FileFilter,\r\n        autoLoad: true,\r\n      };\r\n    });\r\n\r\n    effect(() => {\r\n      const config = adamSettings();\r\n      // console.warn('adamConfig in Hyperlink-Default', config);\r\n      this.config.adam.setConfig(config);\r\n    }, { allowSignalWrites: true });\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    // Should probably be in ngOnInit, because this.config.adam is created late\r\n    this.config.adam.onItemClick = (item: AdamItem) => { this.setValue(item); };\r\n    this.config.adam.onItemUpload = (item: AdamItem) => { this.setValue(item); };\r\n  }\r\n\r\n  toggleAdam(usePortalRoot: boolean, showImagesOnly: boolean) {\r\n    this.config.adam.toggle(usePortalRoot, showImagesOnly);\r\n  }\r\n\r\n  private setValue(item: AdamItem) {\r\n    const usePath = this.settings().ServerResourceMapping === 'url';\r\n    const newValue = !usePath ? item.ReferenceId : item.Url;\r\n    this.fieldState.ui().setIfChanged(newValue);\r\n  }\r\n}\r\n","import { HyperlinkLibrary } from 'projects/edit-types/src/FieldSettings-Hyperlink';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\n\r\nexport class HyperlinkLibraryLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.HyperlinkLibrary;\r\n\r\n  constructor() { super({ HyperlinkLibraryLogic }); }\r\n\r\n  update({ settings }: FieldLogicUpdate): FieldSettings {\r\n    const fixedSettings = { ...settings } as FieldSettings & HyperlinkLibrary;\r\n    fixedSettings.EnableImageConfiguration ??= true; // 2022-11-08 v14.12 changed default to true // false;\r\n    return fixedSettings;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(HyperlinkLibraryLogic);\r\n","import { Component, effect, inject, Injector, OnInit } from '@angular/core';\r\nimport { HyperlinkLibraryLogic } from './hyperlink-library-logic';\r\nimport { AdamControl } from './hyperlink-library.models';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldState } from '../../field-state';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { WrappersCatalog } from '../../wrappers/wrappers.constants';\r\nimport { AdamConfig } from '../../../../../../../edit-types/src/AdamConfig';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.HyperlinkLibrary,\r\n  template: '', // note: no template - it will just show the adam component in the popup\r\n  styleUrls: [],\r\n  standalone: true,\r\n})\r\n@FieldMetadata({\r\n  wrappers: [\r\n    WrappersCatalog.DropzoneWrapper,\r\n    WrappersCatalog.LocalizationWrapper,\r\n    WrappersCatalog.HyperlinkLibraryExpandableWrapper,\r\n    WrappersCatalog.AdamWrapper,\r\n  ],\r\n})\r\nexport class HyperlinkLibraryComponent implements OnInit {\r\n\r\n  protected fieldState = inject(FieldState);\r\n\r\n  private injector = inject(Injector);\r\n\r\n  constructor() {\r\n    HyperlinkLibraryLogic.importMe();\r\n\r\n    let first = true;\r\n    effect(() => {\r\n      const control = this.fieldState.ui().control as AdamControl;\r\n      // Patch length info to the control state, so the validator can pick it up\r\n      control.adamItems = this.fieldState.config.adam.items().length;\r\n      // Update the validity of the control - but not during initialization, only on later changes\r\n      // otherwise the field would glow red right from the start\r\n      if (!first)\r\n        control.updateValueAndValidity();\r\n      first = false;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.attachAdamConfig();\r\n    // this.attachAdamValidator();\r\n  }\r\n\r\n  private attachAdamConfig() {\r\n    const adamConfig = computedObj('adamConfig', () => {\r\n      const s = this.fieldState.settings();\r\n      return {\r\n        allowAssetsInRoot: s.AllowAssetsInRoot,\r\n        autoLoad: true,\r\n        enableSelect: false,\r\n        rootSubfolder: s.Paths,\r\n        fileFilter: s.FileFilter,\r\n        folderDepth: s.FolderDepth || 0,\r\n        metadataContentTypes: s.MetadataContentTypes,\r\n      } as AdamConfig;\r\n    });\r\n\r\n    effect(() => {\r\n      const config = adamConfig();\r\n      // console.warn('adamConfig in HyperlinkLibrary', config);\r\n      this.fieldState.config.adam.setConfig(config);\r\n    }, { injector: this.injector, allowSignalWrites: true });\r\n  }\r\n}\r\n","import { Of } from '../../../../../../../core';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsPickerMerged, StringDropdown } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { PickerLogicShared } from '../../picker/picker-logic-shared';\r\nimport { calculateDropdownOptions } from '../string-picker/string-picker.helpers';\r\n\r\nexport class StringDropdownLogic extends FieldLogicBase {\r\n  name: Of<typeof InputTypeCatalog> = InputTypeCatalog.StringDropdown;\r\n  type: 'string' | 'number' = 'string';\r\n\r\n  constructor() { super({ StringDropdownLogic }); }\r\n\r\n  update({ settings, value }: FieldLogicUpdate<string>): FieldSettings {\r\n    const fs = PickerLogicShared.setDefaultSettings({ ...settings }) as FieldSettings & StringDropdown & FieldSettingsPickerMerged;\r\n    // fixedSettings.EnableTextEntry ??= false;\r\n    // fixedSettings.DropdownValues ??= '';\r\n    // fixedSettings.DropdownValuesFormat ??= '';// maybe we should change this to 'value-label' in the future\r\n    fs._options = calculateDropdownOptions(value, this.type, fs.DropdownValuesFormat || '', fs.DropdownValues || '');\r\n    \r\n    // Both the query type and create-type are the same\r\n    fs.EntityType ??= '';\r\n    fs.CreateTypes = fs.EntityType;\r\n\r\n    fs.EnableEdit ??= false;\r\n    fs.EnableCreate ??= false;\r\n    // fixedSettings.EnableAddExisting ??= true;\r\n    // fixedSettings.EnableDelete ??= false;\r\n    // if multi-value is ever allowed, then we must also enable remove\r\n    // since we're migrating to pickers, we don't plan to implement multi-value dropdowns here\r\n    // fixedSettings.AllowMultiValue ??= false;\r\n    fs.EnableRemove ??= fs.AllowMultiValue;\r\n    return fs;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(StringDropdownLogic);\r\n","import { FieldLogicUpdate, FieldLogicBase } from '../../logic/field-logic-base';\r\nimport { StringDropdownLogic } from '../string-dropdown/string-dropdown-logic';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\n\r\n\r\nexport class NumberDefaultLogic extends StringDropdownLogic {\r\n  name = InputTypeCatalog.NumberDefault;\r\n\r\n  update(specs: FieldLogicUpdate<string>): FieldSettings {\r\n    const fixedSettings: FieldSettings = { ...super.update(specs) };\r\n    // fixedSettings.DisableAutoTranslation = true;\r\n    return fixedSettings;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(NumberDefaultLogic);\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { FieldState } from '../../field-state';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { NumberDefaultLogic } from './number-default-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.NumberDefault,\r\n  templateUrl: './number-default.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    FieldHelperTextComponent,\r\n    AsyncPipe,\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class NumberDefaultComponent {\r\n\r\n  protected fieldState = inject(FieldState);\r\n\r\n  protected group = this.fieldState.group;\r\n  protected config = this.fieldState.config;\r\n\r\n  protected basics = this.fieldState.basics;\r\n\r\n  protected min = this.fieldState.settingExt('Min');\r\n  protected max = this.fieldState.settingExt('Max');\r\n\r\n  constructor() {\r\n    NumberDefaultLogic.importMe();\r\n  }\r\n\r\n}\r\n","<mat-form-field [formGroup]=\"group\" color=\"accent\" class=\"eav-mat-form-field\">\r\n  <input matInput type=\"number\"\r\n    class=\"eav-translate-on-dblclick\"\r\n    [formControlName]=\"config.fieldName\"\r\n    [required]=\"basics().required\"\r\n    [placeholder]=\"basics().placeholder\"\r\n    [min]=\"min()\"\r\n    [max]=\"max()\">\r\n  <mat-label>{{ basics().label }}</mat-label>\r\n</mat-form-field>\r\n<app-field-helper-text></app-field-helper-text>\r\n","import { FieldLogicUpdate, FieldLogicBase } from '../../logic/field-logic-base';\r\nimport { StringDropdownLogic } from '../string-dropdown/string-dropdown-logic';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\n\r\n\r\nexport class NumberDropdownLogic extends StringDropdownLogic {\r\n  name = InputTypeCatalog.NumberDropdown;\r\n  type = 'number' as 'number';\r\n\r\n  update(specs: FieldLogicUpdate<string>): FieldSettings {\r\n    const fixedSettings: FieldSettings = { ...super.update(specs) };\r\n    // fixedSettings.DisableAutoTranslation = true;\r\n    return fixedSettings;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(NumberDropdownLogic);\r\n","import { Component } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\nimport { PickerComponent } from '../../picker/picker.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { NumberDropdownLogic } from './number-dropdown-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.NumberDropdown,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    PickerImports\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class NumberDropdownComponent extends PickerComponent {\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n    NumberDropdownLogic.importMe();\r\n    // EntityDefaultLogic.importMe();\r\n  }\r\n}\r\n","import { Of } from '../../../../../../../core/type-utilities';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { FieldLogicManager } from '../../logic/field-logic-manager';\r\nimport { StringPickerLogic } from '../string-picker/string-picker-logic';\r\n\r\nexport class NumberPickerLogic extends FieldLogicBase {\r\n  name: Of<typeof InputTypeCatalog> = InputTypeCatalog.NumberPicker;\r\n\r\n  constructor() { super({ NumberPickerLogic }); }\r\n\r\n  update(specs: FieldLogicUpdate<string>): FieldSettings {\r\n\r\n    const stringLogic = FieldLogicManager.singleton().get(InputTypeCatalog.StringPicker) as StringPickerLogic;\r\n    return stringLogic.update(specs);\r\n\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(NumberPickerLogic);\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging/logging';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\nimport { PickerComponent } from '../../picker/picker.component';\r\nimport { NumberPickerLogic } from './number-picker-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.NumberPicker,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: PickerImports,\r\n})\r\nexport class NumberPickerComponent extends PickerComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({ NumberPickerComponent }, PickerComponent.logSpecs);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n    NumberPickerLogic.importMe();\r\n  }\r\n}\r\n\r\n\r\n","import { FieldSettingsStringDefault } from 'projects/edit-types/src/FieldSettings-String';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\n\r\nexport class StringDefaultLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.StringDefault;\r\n\r\n  constructor() { super({ StringDefaultLogic }); }\r\n\r\n  canAutoTranslate = true;\r\n\r\n  update(specs: FieldLogicUpdate): FieldSettings {\r\n    const fixedSettings = { ...specs.settings } as FieldSettings & FieldSettingsStringDefault;\r\n    fixedSettings.InputFontFamily ??= '';\r\n    fixedSettings.RowCount ||= 1;\r\n    return fixedSettings;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(StringDefaultLogic);\r\n","\r\n<mat-form-field [formGroup]=\"group\" color=\"accent\" class=\"eav-mat-form-field\" [ngClass]=\"{'textarea-field': rowCount() > 1}\">\r\n  @if (!isMultiline()) {\r\n    <!-- Single Line field -->\r\n    <input matInput class=\"eav-translate-on-dblclick\"\r\n      [formControlName]=\"config.fieldName\"\r\n      [placeholder]=\"basics().placeholder\"\r\n      [required]=\"basics().required\"\r\n      [ngStyle]=\"{ 'font-family': inputFontFamily() }\">\r\n  }\r\n  @else {\r\n    <!-- Multi Line field -->\r\n    <textarea matInput class=\"eav-translate-on-dblclick\"\r\n      [formControlName]=\"config.fieldName\"\r\n      [rows]=\"rowCount()\"\r\n      [placeholder]=\"basics().placeholder\"\r\n      [required]=\"basics().required\"\r\n      [ngStyle]=\"{ 'font-family': inputFontFamily(), 'white-space': textWrap() }\">\r\n    </textarea>\r\n  }\r\n  <mat-label>{{ basics().label }}</mat-label>\r\n</mat-form-field>\r\n<app-field-helper-text></app-field-helper-text>\r\n","import { NgClass, NgStyle } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FieldSettingsStringDefault } from 'projects/edit-types/src/FieldSettings-String';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { FieldState } from '../../field-state';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { StringDefaultLogic } from './string-default-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.StringDefault,\r\n  templateUrl: './string-default.component.html',\r\n  styleUrls: ['./string-default.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgClass,\r\n    MatInputModule,\r\n    NgStyle,\r\n    FieldHelperTextComponent,\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class StringDefaultComponent {\r\n\r\n  protected fieldState = inject(FieldState) as FieldState<string, FieldSettings & FieldSettingsStringDefault>;\r\n\r\n  protected group = this.fieldState.group;\r\n  protected config = this.fieldState.config;\r\n\r\n  protected settings = this.fieldState.settings;\r\n  protected basics = this.fieldState.basics;\r\n\r\n  /**\r\n   * Row Count as it is in the settings\r\n   * It has an undocumented feature - ATM only used in icon-picker,\r\n   * where the row count can be negative to create a multi-line picker.\r\n   * This is not an official feature, as we may add a toggle to this some day instead, and then fix the icon-picker.\r\n   */\r\n  protected rowCountRaw = this.fieldState.settingExt('RowCount');\r\n\r\n  /**\r\n   * Row Count corrected and also neutralize negative numbers, as it's an undocumented feature to create multi-line with 1 line\r\n   */\r\n  protected rowCount = computedObj('rowCount', () => Math.abs(this.rowCountRaw() || 1));\r\n  \r\n  protected isMultiline = computedObj('isMultiline', () => {\r\n    const rc = this.rowCountRaw() || 1;\r\n    return rc < 0 || rc > 1;\r\n  });\r\n  \r\n  protected inputFontFamily = this.fieldState.settingExt('InputFontFamily');\r\n  protected textWrap = this.fieldState.settingExt('TextWrapping');\r\n\r\n  constructor() {\r\n    StringDefaultLogic.importMe();\r\n  }\r\n\r\n}\r\n","import { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsSharedSeparator } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { FieldLogicManager } from '../../logic/field-logic-manager';\r\nimport { EntityDefaultLogic } from '../entity-default/entity-default-logic';\r\n\r\nexport class StringDropdownQueryLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.StringDropdownQuery;\r\n\r\n  constructor() { super({ StringDropdownQueryLogic }); }\r\n\r\n  update(specs: FieldLogicUpdate<string[]>): FieldSettings {\r\n    const entityDefaultLogic = FieldLogicManager.singleton().get(InputTypeCatalog.EntityDefault) as EntityDefaultLogic;\r\n    const fs = entityDefaultLogic.update(specs) as FieldSettings & FieldSettingsSharedSeparator;\r\n    fs.Separator ||= ',';\r\n\r\n    // New features should not be supported in this old input, so commented out\r\n    // fixedSettings.Value ??= '';\r\n    // fixedSettings.Label ??= '';\r\n    // fixedSettings.MoreFields ??= '';\r\n    return fs;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(StringDropdownQueryLogic);\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\nimport { PickerComponent } from '../../picker/picker.component';\r\nimport { StringDropdownQueryLogic } from './string-dropdown-query-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.StringDropdownQuery,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: PickerImports,\r\n})\r\nexport class StringDropdownQueryComponent extends PickerComponent {\r\n\r\n  log = classLog({StringDropdownQueryComponent}, PickerComponent.logSpecs);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n    StringDropdownQueryLogic.importMe();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\nimport { PickerComponent } from '../../picker/picker.component';\r\nimport { EntityDefaultLogic } from '../entity-default/entity-default-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.StringDropdown,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: PickerImports,\r\n})\r\nexport class StringDropdownComponent extends PickerComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({StringDropdownComponent}, PickerComponent.logSpecs);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n    EntityDefaultLogic.importMe();\r\n  }\r\n\r\n}\r\n","import { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldSettingsPicker, FieldSettingsPickerMasks, FieldSettingsStringFontIconPicker } from '../../../../../../../edit-types/src/FieldSettings-Pickers';\r\nimport { PickerSourceCss } from '../../../../../../../edit-types/src/PickerSources';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { buildRegExFromPrefixAndSuffix } from '../../picker/data-sources/css/string-font-icon-picker.helpers';\r\n\r\n/**\r\n * Logic for the StringFontIconPicker field.\r\n * This is an older field, which was standalone till ca. v18.01.\r\n * \r\n * In v18.02 it was changed to use the standard picker,\r\n * so it now ports the configuration from the names in the old config entity\r\n * to how the new picker expects them.\r\n */\r\nexport class StringFontIconPickerLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.StringFontIconPicker;\r\n\r\n  constructor() { super({ StringFontIconPickerLogic }); }\r\n\r\n  update({ fieldName, settings }: FieldLogicUpdate): FieldSettings {\r\n    const l = this.log.fnIfInList('update', 'fields', fieldName, { fieldName, settings });\r\n\r\n    // Cast settings to type which knows about the properties\r\n    // and the raw settings which show what values can be read\r\n    const fs = { ...settings } as FieldSettings & FieldSettingsPickerMasks & PickerSourceCss & FieldSettingsPicker;\r\n    const raw = fs as unknown as FieldSettingsStringFontIconPicker;\r\n\r\n    ///// OLD Settings\r\n    // fixedSettings.Files ??= '';\r\n    // fixedSettings.CssPrefix ??= '';\r\n    // fixedSettings.ShowPrefix ??= false;\r\n\r\n    // Note: the original Files was multi-line. We assume it was never used, but we can't be sure.\r\n    fs.CssSourceFile = raw.Files ?? '';\r\n    fs.CssSelectorFilter = raw.CssPrefix ?? '';\r\n    fs.CssSelectorFilter = buildRegExFromPrefixAndSuffix(raw.CssPrefix ?? '', ':');\r\n    fs.PreviewValue = `${raw.PreviewCss} [Item:Value]`;\r\n\r\n    fs.PreviewType ='icon-css';\r\n    fs.EnableTextEntry = false;\r\n    fs.EnableAddExisting = true;\r\n    fs.AllowMultiValue = false;\r\n\r\n    fs.noAutoFocus = true;\r\n\r\n    // The label should either be the entire class, or just the part after the prefix\r\n    // These values will be in the `Value` or `Title` fields, respectively.\r\n    fs.Label = raw.ShowPrefix ? 'Value' : 'Title';\r\n    return l.r(fs);\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(StringFontIconPickerLogic);\r\n","import { Component } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\nimport { PickerComponent } from '../../picker/picker.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { StringFontIconPickerLogic } from './string-font-icon-picker-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.StringFontIconPicker,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    PickerImports,\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class StringFontIconPickerComponent extends PickerComponent {\r\n\r\n  log = classLog({StringFontIconPickerComponent}, PickerComponent.logSpecs);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n    StringFontIconPickerLogic.importMe();\r\n  }\r\n}\r\n","import { Of } from '../../../../../../../core/type-utilities';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\nimport { PickerSourcesCustom } from '../../picker/constants/picker-config-model.constants';\r\nimport { PickerLogicShared } from '../../picker/picker-logic-shared';\r\n\r\nexport class StringPickerLogic extends FieldLogicBase {\r\n  name: Of<typeof InputTypeCatalog> = InputTypeCatalog.StringPicker;\r\n\r\n  constructor() { super({StringPickerLogic}); }\r\n\r\n  update(specs: FieldLogicUpdate<string>): FieldSettings {\r\n    \r\n    var log = classLog({StringPickerLogic}, null);\r\n\r\n    const l = log.fn('update', { specs });\r\n\r\n    const { fs, removeEditRestrictions, typeConfig } = new PickerLogicShared().preUpdate(specs);\r\n\r\n    fs.Separator ??= '\\n'; //'\\\\n';\r\n    if (fs.Separator == '\\\\n') fs.Separator = '\\n'; //buggy temp double-slash-n\r\n\r\n    /** Dropdown data source aka custom-list picker */\r\n    const typeName = fs.dataSourceType;\r\n    const isCustomSource = Object.values(PickerSourcesCustom).includes(typeName as Of<typeof PickerSourcesCustom>);\r\n    l.a(`type: ${typeName}`, { typeConfig, isCustomSource });\r\n\r\n    if (isCustomSource) {\r\n      if (!removeEditRestrictions) {\r\n        fs.EnableEdit = false;\r\n        fs.EnableCreate = false;\r\n        fs.EnableDelete = false;\r\n      }\r\n    } else\r\n      l.a('type: not UiPickerSourceCustom-List/Csv', { typeConfig });\r\n\r\n    return l.r(fs);\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(StringPickerLogic);\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { PickerImports } from '../../picker/picker-providers.constant';\r\nimport { PickerComponent } from '../../picker/picker.component';\r\nimport { StringPickerLogic } from './string-picker-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.StringPicker,\r\n  templateUrl: '../../picker/picker.component.html',\r\n  standalone: true,\r\n  imports: PickerImports,\r\n})\r\nexport class StringPickerComponent extends PickerComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({ StringPickerComponent }, PickerComponent.logSpecs);\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructorEnd();\r\n    StringPickerLogic.importMe();\r\n  }\r\n\r\n}\r\n","import { TemplateTypes } from './string-template-picker.models';\r\n\r\nexport const templateTypes: TemplateTypes = {\r\n  Token: {\r\n    ext: '.html',\r\n    purpose: 'Template',\r\n    type: 'Token',\r\n  },\r\n  'C# Razor': {\r\n    ext: '.cshtml',\r\n    purpose: 'Template',\r\n    type: 'Razor',\r\n  },\r\n  // New in 12.02 - won't show up in the selection-dropdown but is used for Controller-Selectors\r\n  'C# Search': {\r\n    ext: '.cs',\r\n    purpose: 'Search',\r\n  },\r\n} as const;\r\n","  <div class=\"picker-wrapper\">\r\n    <mat-form-field [formGroup]=\"group\" color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-select [formControlName]=\"config.fieldName\" [required]=\"basics().required\" class=\"eav-translate-on-dblclick\">\r\n        <mat-option value=\"\">{{ 'Fields.TemplatePicker.NotSelected' | translate }}</mat-option>\r\n        @for (file of files(); track file) {\r\n          <mat-option [value]=\"file\">\r\n            {{ file }}\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n      <mat-label>{{ basics().label }}</mat-label>\r\n    </mat-form-field>\r\n    <button mat-icon-button tippyTranslate=\"Fields.TemplatePicker.NewTemplate\" [disabled]=\"ui().disabled\" (click)=\"createTemplate()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n  <app-field-helper-text></app-field-helper-text>\r\n","import { Component, Injector, ViewContainerRef, effect, inject, signal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { StringTemplatePicker } from 'projects/edit-types/src/FieldSettings-String';\r\nimport { take } from 'rxjs';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { SourceService } from '../../../../code-editor/services/source.service';\r\nimport { CreateFileDialogComponent } from '../../../../create-file-dialog/create-file-dialog.component';\r\nimport { CreateFileDialogData, CreateFileDialogResult } from '../../../../create-file-dialog/create-file-dialog.models';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { FieldMask } from '../../../shared/helpers';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { FieldState } from '../../field-state';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { templateTypes } from './string-template-picker.constants';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.StringTemplatePicker,\r\n  templateUrl: './string-template-picker.component.html',\r\n  styleUrls: ['./string-template-picker.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FieldHelperTextComponent,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class StringTemplatePickerComponent {\r\n  \r\n  log = classLog({StringTemplatePickerComponent});\r\n\r\n  #fieldState = inject(FieldState) as FieldState<string, FieldSettings & StringTemplatePicker>;\r\n\r\n  // needed to create more FieldMasks as needed\r\n  #injector = inject(Injector);\r\n\r\n  // If we have a configured type, use that, otherwise use the field mask\r\n  // We'll still use the field-mask (even though it wouldn't be needed) to keep the logic simple\r\n  #typeMask = transient(FieldMask).init('typeMask', this.#fieldState.settings().FileType ?? '[Type]');\r\n\r\n  #locationMask = transient(FieldMask).init('String-LocationMask', '[Location]');\r\n\r\n  #sourceService = transient(SourceService);\r\n\r\n  protected group = this.#fieldState.group;\r\n  protected config = this.#fieldState.config;\r\n\r\n  protected basics = this.#fieldState.basics;\r\n  protected ui = this.#fieldState.ui;\r\n\r\n  protected files = signal<string[]>([]);\r\n\r\n  #activeSpec = templateTypes.Token;\r\n  #templates: string[] = [];\r\n  #global = false;\r\n\r\n  /** Reset only after templates have been fetched once */\r\n  #resetIfNotFound = false;\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    // Watch for location changes to update the files in the dropdown\r\n    effect(() => this.#onLocationChange(this.#locationMask.result()));\r\n\r\n    // Watch for changes to the Type mask\r\n    effect(() => this.#setFileConfig(this.#typeMask.result()), { allowSignalWrites: true });\r\n  }\r\n\r\n  #setFileConfig(type: string) {\r\n    this.#activeSpec = templateTypes[type];\r\n    this.#setTemplateOptions();\r\n  }\r\n\r\n  #prevLocation = '';\r\n  #onLocationChange(location: string) {\r\n    const l = this.log.fn('onLocationChange', { location });\r\n    this.#global = (\r\n      location === 'Host File System' // Original value used from 2sxc up until v12.01\r\n      || location === 'Global' // New key used in 2sxc 12.02 and later\r\n    );\r\n\r\n    if (this.#prevLocation === location)\r\n      return;\r\n    this.#prevLocation = location;\r\n\r\n    this.#sourceService.getAll().pipe(take(1)).subscribe(files => {\r\n      this.#templates = files.filter(file => file.Shared === this.#global).map(file => file.Path);\r\n      this.#resetIfNotFound = true;\r\n      this.#setTemplateOptions();\r\n    });\r\n  }\r\n\r\n  #setTemplateOptions() {\r\n    const ext = this.#activeSpec.ext;\r\n    const filtered = this.#templates\r\n      // new feature in v11 - '.code.xxx' files shouldn't be shown, they are code-behind\r\n      .filter(template => !/\\.code\\.[a-zA-Z0-9]+$/.test(template))\r\n      .filter(template => template.endsWith(ext));\r\n    this.files.set(filtered);\r\n\r\n    const resetValue = this.#resetIfNotFound && !filtered.some(template => template === this.#fieldState.uiValue());\r\n    if (resetValue)\r\n      this.ui().setIfChanged('');\r\n  }\r\n\r\n  createTemplate() {\r\n    const nameMask = transient(FieldMask, this.#injector).init('String-NameMask', '[Name]');\r\n    const data: CreateFileDialogData = {\r\n      global: this.#global,\r\n      purpose: this.#activeSpec.purpose,\r\n      type: this.#activeSpec.type,\r\n      name: nameMask.result(),\r\n    };\r\n    nameMask.destroy();\r\n    const dialogRef = this.matDialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) return;\r\n\r\n      this.#sourceService.create(result.name, this.#global, result.templateKey).subscribe(res => {\r\n        if (res === false) {\r\n          alert('Server reported that create failed - the file probably already exists');\r\n        } else {\r\n          this.#templates.push(result.name);\r\n          this.#setTemplateOptions();\r\n          this.ui().setIfChanged(result.name);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { StringUrlPath } from 'projects/edit-types/src/FieldSettings-String';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\n\r\nexport class StringUrlPathLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.StringUrlPath;\r\n\r\n  constructor() { super({ InputTypeCatalog }); }\r\n\r\n  update({ settings }: FieldLogicUpdate): FieldSettings {\r\n    const fixedSettings = { ...settings } as FieldSettings & StringUrlPath;\r\n    fixedSettings.AutoGenerateMask ??= null;\r\n    fixedSettings.AllowSlashes ??= false;\r\n    return fixedSettings;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(StringUrlPathLogic);\r\n","import { Component, computed, effect, inject, signal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { FieldMask, UrlHelpers } from '../../../shared/helpers';\r\nimport { FieldMetadata } from '../../field-metadata.decorator';\r\nimport { FieldState } from '../../field-state';\r\nimport { FieldHelperTextComponent } from '../../help-text/field-help-text.component';\r\nimport { WrappersLocalizationOnly } from '../../wrappers/wrappers.constants';\r\nimport { StringUrlPathLogic } from './string-url-path-logic';\r\n\r\n@Component({\r\n  selector: InputTypeCatalog.StringUrlPath,\r\n  templateUrl: './string-url-path.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    FieldHelperTextComponent,\r\n  ],\r\n})\r\n@FieldMetadata({ ...WrappersLocalizationOnly })\r\nexport class StringUrlPathComponent {\r\n\r\n  log = classLog({StringUrlPathComponent});\r\n\r\n  protected fieldState = inject(FieldState);\r\n\r\n  protected group = this.fieldState.group;\r\n\r\n  protected settings = this.fieldState.settings;\r\n  protected basics = this.fieldState.basics;\r\n\r\n  /** The mask to use comes from the field settings */\r\n  #maskFromSettings = this.fieldState.settingExt('AutoGenerateMask');\r\n\r\n  /**\r\n   * Blocks external update if field was changed manually and doesn't match external updates.\r\n   * WARNING: Doesn't work on language change\r\n   * TODO: MAKE work on language change\r\n   */\r\n  #lastAutoCopy = signal('');\r\n\r\n  /** The Field-Mask Helper which will continuously parse the result */\r\n  #fieldMask = transient(FieldMask)\r\n    // .logChanges()\r\n    .initPreClean((_, value) => typeof value === 'string' ? value.replace('/', '-').replace('\\\\', '-') : value)\r\n    .initSignal('UrlPath', this.#maskFromSettings);\r\n\r\n  /** The cleaned value, ready for broadcasting back to the field */\r\n  #maskedValueCleaned = computed(() => {\r\n    const newValue = this.#fieldMask.result();\r\n    return UrlHelpers.stripNonUrlCharacters(newValue, this.settings().AllowSlashes, true);\r\n  });\r\n\r\n  constructor() {\r\n    StringUrlPathLogic.importMe();\r\n\r\n    // Listen to value changes to correct spaces and other non-allowed characters\r\n    effect(() => {\r\n      const _ = this.fieldState.uiValue();\r\n      this.clean(false);\r\n    });\r\n\r\n    // Listen to the mask changes to update the field\r\n    effect(() => this.#publishFieldMaskResult(this.#maskedValueCleaned()), { allowSignalWrites: true });\r\n  }\r\n\r\n\r\n  #publishFieldMaskResult(cleanedNewValue: string) {\r\n    const l = this.log.fn('#onSourcesChanged', { newValue: cleanedNewValue });\r\n\r\n    const v = {\r\n      uiValue: this.fieldState.uiValue(),\r\n      lastAutoCopy: this.#lastAutoCopy(),\r\n      allowSlashes: this.settings().AllowSlashes,\r\n      cleaned: cleanedNewValue,\r\n    };\r\n\r\n    // Exit early if the UI is a) not empty and b) doesn't have the last copy of the stripped value\r\n    if (v.uiValue && (v.uiValue !== v.lastAutoCopy))\r\n      return l.end(`UI not empty but manually modified, so no auto-update`, v);\r\n\r\n    if (!v.cleaned)\r\n      return l.end('cleaned is empty', v);\r\n\r\n    if (v.uiValue === v.cleaned)\r\n      return l.end('no changes', v);\r\n\r\n    this.#lastAutoCopy.set(v.cleaned);\r\n    this.fieldState.ui().setIfChanged(v.cleaned);\r\n    l.end(`updated to \"${v.cleaned}\"`, v);\r\n  }\r\n\r\n  clean(trimEnd: boolean) {\r\n    const l = this.log.fn('clean', { trimEnd });\r\n    const value = this.fieldState.uiValue();\r\n    const cleaned = UrlHelpers.stripNonUrlCharacters(value, this.settings().AllowSlashes, trimEnd);\r\n    this.fieldState.ui().setIfChanged(cleaned);\r\n  }\r\n}\r\n","<mat-form-field [formGroup]=\"group\" color=\"accent\" class=\"eav-mat-form-field\">\r\n  <input matInput class=\"eav-translate-on-dblclick\"\r\n    [formControlName]=\"fieldState.name\"\r\n    (blur)=\"clean(true)\"\r\n    [placeholder]=\"basics().placeholder\"\r\n    [required]=\"basics().required\">\r\n  <mat-label>{{ basics().label }}</mat-label>\r\n</mat-form-field>\r\n<app-field-helper-text></app-field-helper-text>\r\n","import { AdamConfig } from '../../../../../../../../edit-types/src/AdamConfig';\r\nimport { FieldConfigSet } from '../../../field-config-set.model';\r\n\r\nexport class AdamConfigInstance implements AdamConfig {\r\n  //#region Field settings\r\n  rootSubfolder = '';\r\n  fileFilter = '';\r\n  allowAssetsInRoot = true;\r\n  folderDepth = 0;\r\n  metadataContentTypes = '';\r\n  //#endregion\r\n\r\n  //#region Toggle\r\n  usePortalRoot = false;\r\n  showImagesOnly = false;\r\n  //#endregion\r\n\r\n  //#region Calculated\r\n  autoLoad = false;\r\n  enableSelect = true;\r\n  subfolder = '';\r\n  allowEdit = true;\r\n  disabled = true;\r\n  maxDepthReached = false;\r\n  //#endregion\r\n\r\n  constructor(disabled: boolean) {\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  static completeConfig(config: Partial<AdamConfig>, fieldConfig: FieldConfigSet, oldConfig?: AdamConfigInstance): AdamConfigInstance {\r\n    // set new values and use old ones where new value is not provided\r\n    const startDisabled = fieldConfig.inputTypeSpecs.isExternal;\r\n    oldConfig = oldConfig ?? new AdamConfigInstance(startDisabled);\r\n    const newConfig = new AdamConfigInstance(startDisabled);\r\n\r\n    for (const key of Object.keys(newConfig))\r\n      (newConfig as any)[key] = (config as any)[key] ?? (oldConfig as any)[key];\r\n\r\n    // fixes\r\n    const resetSubfolder = oldConfig.usePortalRoot !== newConfig.usePortalRoot;\r\n    if (resetSubfolder)\r\n      newConfig.subfolder = '';\r\n\r\n    if (newConfig.usePortalRoot) {\r\n      const fixBackSlashes = newConfig.rootSubfolder.includes('\\\\');\r\n      if (fixBackSlashes)\r\n        newConfig.rootSubfolder = newConfig.rootSubfolder.replace(/\\\\/g, '/');\r\n      const fixStartingSlash = newConfig.rootSubfolder.startsWith('/');\r\n      if (fixStartingSlash)\r\n        newConfig.rootSubfolder = newConfig.rootSubfolder.replace('/', '');\r\n      const fixRoot = !newConfig.subfolder.startsWith(newConfig.rootSubfolder);\r\n      if (fixRoot)\r\n        newConfig.subfolder = newConfig.rootSubfolder;\r\n      newConfig.maxDepthReached = false; // when using portal root depth is infinite\r\n    }\r\n\r\n    if (!newConfig.usePortalRoot) {\r\n      const currentDepth = newConfig.subfolder ? newConfig.subfolder.split('/').length : 0;\r\n      const fixDepth = currentDepth >= newConfig.folderDepth;\r\n      if (fixDepth) {\r\n        let folders = newConfig.subfolder.split('/');\r\n        folders = folders.slice(0, newConfig.folderDepth);\r\n        newConfig.subfolder = folders.join('/');\r\n        newConfig.maxDepthReached = true;\r\n      } else\r\n        newConfig.maxDepthReached = false;\r\n    }\r\n\r\n    return newConfig;\r\n  }\r\n\r\n}\r\n","<div class=\"dropzone\" [@adamShowAnimate]=\"adamConfig()?.autoLoad ? 'open' : 'closed'\">\r\n  @if (adamConfig()?.autoLoad && this.fieldState.isOpen()) {\r\n    <div\r\n      [ngClass]=\"{\r\n        'adam-scope-site': adamConfig().usePortalRoot,\r\n        'adam-scope-field': !adamConfig().usePortalRoot,\r\n      }\"\r\n    >\r\n      @if (!disabled() && allowAddButtons()) {\r\n        <!-- click to upload -->\r\n        <div class=\"dz-preview dropzone-adam\" (click)=\"openUploadClick($event)\" tippyTranslate=\"Fields.Hyperlink.AdamFileManager.UploadTip\">\r\n          <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n            <mat-icon>cloud_upload</mat-icon>\r\n            <div class=\"adam-upload-label\">\r\n              {{ 'Fields.Hyperlink.AdamFileManager.UploadLabel' | translate }}\r\n              &nbsp;\r\n              @if (adamConfig().usePortalRoot) {\r\n                <mat-icon>public</mat-icon>\r\n              } @else {\r\n                <mat-icon svgIcon=\"apple-outlined\"></mat-icon>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- paste image from clipboard -->\r\n        <div\r\n          #pasteDiv\r\n          appPasteClipboardImage\r\n          [config]=\"config\"\r\n          [elementType]=\"'element'\"\r\n          class=\"dz-preview dropzone-adam paste-image\"\r\n          tippyTranslate=\"Fields.Hyperlink.AdamFileManager.UploadPasteTip\"\r\n          (click)=\"openFeatureInfoDialog()\"\r\n        >\r\n          <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n            <mat-icon\r\n              class=\"adam-filter-mat-icon-with-grey-mat-badge\"\r\n              [matBadgeHidden]=\"isPasteImageFromClipboardEnabled()\"\r\n              matBadgeSize=\"large\"\r\n              matBadge=\"💎\"\r\n              matBadgePosition=\"below after\"\r\n              matBadgeOverlap=\"true\"\r\n              aria-hidden=\"false\"\r\n            >\r\n              filter\r\n            </mat-icon>\r\n\r\n            <!-- TODO: @2dm -->\r\n            <div class=\"adam-upload-label\">\r\n              {{\r\n                !isPasteImageFromClipboardEnabled()\r\n                  ? 'Fields.Hyperlink.AdamFileManager.UploadPasteLabel'\r\n                  : pasteDiv.classList.contains('pastable-focus')\r\n                    ? 'Fields.Hyperlink.AdamFileManager.UploadPasteFocusedLabel'\r\n                    : ('Fields.Hyperlink.AdamFileManager.UploadPasteLabel' | translate)\r\n              }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- add folder -->\r\n      @if (!adamConfig().maxDepthReached && !disabled() && allowAddButtons()) {\r\n        <div class=\"dz-preview\" (click)=\"addFolder()\" tippyTranslate=\"Fields.Hyperlink.AdamFileManager.NewFolderTip\">\r\n          <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n            <mat-icon svgIcon=\"folder-plus\"></mat-icon>\r\n            <div class=\"adam-short-label\">{{ 'Fields.Hyperlink.AdamFileManager.NewFolder' | translate }}</div>\r\n          </div>\r\n          <div class=\"dz-details\" style=\"opacity: 1\"></div>\r\n        </div>\r\n      }\r\n      <!-- browse up a folder -->\r\n      @if (adamConfig().subfolder !== '' || (adamConfig().usePortalRoot && adamConfig().subfolder !== adamConfig().rootSubfolder)) {\r\n        <div class=\"dz-preview\" (click)=\"goUp()\" tippyTranslate=\"Fields.Hyperlink.AdamFileManager.BackFolderTip\">\r\n          <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n            <mat-icon svgIcon=\"folder\"></mat-icon>\r\n            <div class=\"adam-short-label\">{{ 'Fields.Hyperlink.AdamFileManager.BackFolder' | translate }}</div>\r\n          </div>\r\n          <div class=\"adam-background adam-browse-background-icon\">\r\n            <mat-icon class=\"adam-back-folder-arrow\">arrow_back</mat-icon>\r\n          </div>\r\n        </div>\r\n      }\r\n      @for (item of items(); track item.Id) {\r\n        <!-- folders -->\r\n        @if (item.IsFolder) {\r\n          <div class=\"dz-preview\" (click)=\"goIntoFolder(item)\">\r\n            <div class=\"dz-image adam-blur adam-browse-background-icon adam-browse-background\">\r\n              <mat-icon svgIcon=\"folder\"></mat-icon>\r\n              <div class=\"short-label\">{{ item.Name }}</div>\r\n            </div>\r\n            <div class=\"dz-details file-type-{{ item.Type }}\">\r\n              @if (adamConfig().allowEdit) {\r\n                <mat-icon\r\n                  (click)=\"del(item)\"\r\n                  appClickStopPropagation\r\n                  class=\"adam-delete-button\"\r\n                  tippyTranslate=\"Fields.Hyperlink.AdamFileManager.Delete\"\r\n                  [ngClass]=\"{ 'adam-button-disabled': disabled() }\"\r\n                  >clear</mat-icon\r\n                >\r\n\r\n                <mat-icon\r\n                  (click)=\"rename(item)\"\r\n                  appClickStopPropagation\r\n                  class=\"adam-rename-button\"\r\n                  tippyTranslate=\"Fields.Hyperlink.AdamFileManager.Edit\"\r\n                  [ngClass]=\"{ 'adam-button-disabled': disabled() }\"\r\n                  >edit</mat-icon\r\n                >\r\n              }\r\n              <div class=\"adam-full-name-area\">\r\n                <div class=\"adam-full-name\" [title]=\"item.Name\">{{ item.Name }}</div>\r\n              </div>\r\n            </div>\r\n            @if (item._metadataContentType) {\r\n              <mat-icon\r\n                class=\"adam-tag\"\r\n                appClickStopPropagation\r\n                [ngClass]=\"{ 'metadata-exists': item._metadataId > 0 }\"\r\n                tippy=\"{{ item._metadataContentType }}: {{ item._metadataId }}\"\r\n                (click)=\"editItemMetadata(item, item._metadataContentType, item._metadataId)\"\r\n                >local_offer</mat-icon\r\n              >\r\n            }\r\n          </div>\r\n        }\r\n        <!-- files -->\r\n        @if (!item.IsFolder) {\r\n          <div\r\n            class=\"dz-preview\"\r\n            (click)=\"select(item)\"\r\n            [ngClass]=\"{\r\n              'dz-success': value() === 'file:' + item.Id,\r\n              'disable-select': !adamConfig().enableSelect,\r\n            }\"\r\n          >\r\n            @if (item.Type !== 'image') {\r\n              <div class=\"dz-image adam-blur adam-browse-background-icon adam-browse-background\">\r\n                <mat-icon>{{ item._icon }}</mat-icon>\r\n                <div class=\"adam-short-label\">{{ item.Name }}</div>\r\n              </div>\r\n            } @else {\r\n              <div class=\"dz-image adam-browse-background-image\">\r\n                <img vm-dz-thumbnail=\"\" [alt]=\"item.Id + ':' + item.Name\" [src]=\"item.ThumbnailUrl\" />\r\n              </div>\r\n            }\r\n            <div class=\"dz-details file-type-{{ item.Type }}\">\r\n              @if (adamConfig().allowEdit) {\r\n                <mat-icon\r\n                  (click)=\"del(item)\"\r\n                  appClickStopPropagation\r\n                  class=\"adam-delete-button\"\r\n                  tippyTranslate=\"Fields.Hyperlink.AdamFileManager.Delete\"\r\n                  [ngClass]=\"{ 'adam-button-disabled': disabled() }\"\r\n                  >clear</mat-icon\r\n                >\r\n\r\n                <mat-icon\r\n                  (click)=\"rename(item)\"\r\n                  appClickStopPropagation\r\n                  class=\"adam-rename-button\"\r\n                  tippyTranslate=\"Fields.Hyperlink.AdamFileManager.Edit\"\r\n                  [ngClass]=\"{ 'adam-button-disabled': disabled() }\"\r\n                  >edit</mat-icon\r\n                >\r\n              }\r\n              <div class=\"adam-full-name-area\">\r\n                <div class=\"adam-full-name\" [title]=\"item.Name\">{{ item.Name }}</div>\r\n              </div>\r\n              <div class=\"dz-filename adam-short-label\" appClickStopPropagation title=\"#{{ item.Id }} - {{ item._displaySize }} KB\">\r\n                <span>#{{ item.Id }} - {{ item._displaySize }} KB</span>\r\n              </div>\r\n              <a class=\"adam-link-button\" target=\"_blank\" [href]=\"item.Url\" appClickStopPropagation>\r\n                <mat-icon tippyTranslate=\"Fields.Hyperlink.AdamFileManager.Show\">open_in_new</mat-icon>\r\n              </a>\r\n              @if (item.Type === 'image') {\r\n                <mat-icon\r\n                  class=\"image-configuration-button\"\r\n                  appClickStopPropagation\r\n                  [ngClass]=\"{\r\n                    'adam-button-disabled': !item._imageConfigurationContentType,\r\n                    'metadata-exists': item._imageConfigurationId > 0,\r\n                  }\"\r\n                  [tippyTranslate]=\"\r\n                    item._imageConfigurationContentType\r\n                      ? 'Fields.Hyperlink.AdamFileManager.ImageSettings'\r\n                      : 'Fields.Hyperlink.AdamFileManager.ImageSettingsDisabled'\r\n                  \"\r\n                  (click)=\"editItemMetadata(item, item._imageConfigurationContentType, item._imageConfigurationId)\"\r\n                >\r\n                  filter_center_focus</mat-icon\r\n                >\r\n              }\r\n            </div>\r\n            @if (item._metadataContentType) {\r\n              <mat-icon\r\n                class=\"adam-tag\"\r\n                appClickStopPropagation\r\n                [ngClass]=\"{ 'metadata-exists': item._metadataId > 0 }\"\r\n                tippy=\"{{ item._metadataContentType }}: {{ item._metadataId }}\"\r\n                (click)=\"editItemMetadata(item, item._metadataContentType, item._metadataId)\"\r\n                >local_offer</mat-icon\r\n              >\r\n            }\r\n            <div class=\"dz-success-mark\">\r\n              <svg\r\n                width=\"54px\"\r\n                height=\"54px\"\r\n                viewBox=\"0 0 54 54\"\r\n                version=\"1.1\"\r\n                xmlns=\"https://www.w3.org/2000/svg\"\r\n                xmlns:xlink=\"https://www.w3.org/1999/xlink\"\r\n                xmlns:sketch=\"https://www.bohemiancoding.com/sketch/ns\"\r\n              >\r\n                <title>Check</title>\r\n                <defs></defs>\r\n                <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                  <path\r\n                    d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\"\r\n                    id=\"Oval-2\"\r\n                    stroke-opacity=\"0.198794158\"\r\n                    stroke=\"#747474\"\r\n                    fill-opacity=\"0.816519475\"\r\n                    fill=\"#FFFFFF\"\r\n                    sketch:type=\"MSShapeGroup\"\r\n                  ></path>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        }\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { AsyncPipe, NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, effect, inject, OnInit, output, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { transient } from '../../../../../../../../core/transient';\r\nimport { AdamConfig } from '../../../../../../../../edit-types/src/AdamConfig';\r\nimport { AdamItem } from '../../../../../../../../edit-types/src/AdamItem';\r\nimport { FeatureNames } from '../../../../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../../../../features/features-scoped.service';\r\nimport { openFeatureDialog } from '../../../../../features/shared/base-feature.component';\r\nimport { eavConstants } from '../../../../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../../../shared/logging';\r\nimport { EditForm, EditPrep } from '../../../../../shared/models/edit-form.model';\r\nimport { DialogRoutingService } from '../../../../../shared/routing/dialog-routing.service';\r\nimport { computedObj, signalObj } from '../../../../../shared/signals/signal.utilities';\r\nimport { FormsStateService } from '../../../../form/forms-state.service';\r\nimport { EditRoutingService } from '../../../../routing/edit-routing.service';\r\nimport { AdamCacheService } from '../../../../shared/adam/adam-cache.service';\r\nimport { AdamService } from '../../../../shared/adam/adam.service';\r\nimport { LinkCacheService } from '../../../../shared/adam/link-cache.service';\r\nimport { FileTypeHelpers } from '../../../../shared/helpers';\r\nimport { PasteClipboardImageDirective } from '../../../directives/paste-clipboard-image.directive';\r\nimport { FieldState } from '../../../field-state';\r\nimport { AdamConfigInstance } from './adam-browser.models';\r\nimport { AdamConnector } from './adam-connector';\r\nimport { fixDropzone } from './dropzone-helper';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  constructor: false,\r\n  editItemMetadata: false,\r\n  setConfig: false,\r\n  fetchItems: true,\r\n  processFetchedItems: true,\r\n}\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'adam-browser',\r\n  templateUrl: './adam-browser.component.html',\r\n  styleUrls: ['./adam-browser.component.scss'],\r\n  animations: [\r\n    trigger('adamShowAnimate', [\r\n      state('closed', style({\r\n        height: '0',\r\n        overflow: 'hidden',\r\n      })),\r\n      state('open', style({\r\n        height: '*',\r\n        overflow: 'hidden',\r\n      })),\r\n      transition('closed => open', [\r\n        animate('300ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\r\n      ]),\r\n    ]),\r\n  ],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    PasteClipboardImageDirective,\r\n    MatBadgeModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AdamBrowserComponent implements OnInit {\r\n  \r\n  openUpload = output<void>();\r\n\r\n  log = classLog({ AdamBrowserComponent }, logSpecs);\r\n\r\n  protected fieldState = inject(FieldState);\r\n  #editRoutingService = inject(EditRoutingService);\r\n  #features = inject(FeaturesScopedService);\r\n\r\n  #adamService = transient(AdamService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dnnContext: DnnContext,\r\n    private adamCacheService: AdamCacheService,\r\n    private linkCacheService: LinkCacheService,\r\n    private formsStateService: FormsStateService,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const l = this.log.fnIf('constructor');\r\n    // Ensure that we fetch items when we have the configuration\r\n    effect(() => {\r\n      const adamConfig = this.adamConfig();\r\n      if (adamConfig == null) return;\r\n      this.fetchItems();\r\n    });\r\n\r\n    const cnf = this.config;\r\n    this.#url = this.dnnContext.$2sxc.http.apiUrl(`app/auto/data/${cnf.contentTypeNameId}/${cnf.entityGuid}/${cnf.fieldName}`);\r\n  }\r\n\r\n  protected config = this.fieldState.config;\r\n  protected group = this.fieldState.group;\r\n  #ui = this.fieldState.ui;\r\n\r\n  protected disabled = computedObj('disabled', () => this.#ui().disabled);\r\n\r\n  protected value = computedObj('value', () => this.fieldState.uiValue());\r\n\r\n  public adamConfig = signalObj<AdamConfig>('adamConfig', null); // here the change detection is critical\r\n  public items = signalObj<AdamItem[]>('items', []);\r\n\r\n  #url: string;\r\n  #firstFetch = true;\r\n\r\n  allowAddButtons = computedObj('allowAddButtons', () => {\r\n    const cnf = this.adamConfig();\r\n    return cnf.allowEdit && !((cnf.subfolder === '' || cnf.usePortalRoot && cnf.subfolder === cnf.rootSubfolder) && !cnf.allowAssetsInRoot)\r\n  });\r\n\r\n  protected isPasteImageFromClipboardEnabled = this.#features.isEnabled[FeatureNames.PasteImageFromClipboard];\r\n\r\n  ngOnInit() {\r\n    // Update data if a child-form closes\r\n    this.#dialogRouter.doOnDialogClosed(() => this.fetchItems());\r\n\r\n    // Attach this browser to the AdamConnector\r\n    (this.config.adam as AdamConnector).setBrowser(this);\r\n  }\r\n\r\n  addFolder() {\r\n    if (this.#ui().disabled) return;\r\n\r\n    const folderName = window.prompt('Please enter a folder name'); // todo i18n\r\n    if (!folderName) return;\r\n\r\n    this.#adamService.addFolder(folderName, this.#url, this.adamConfig())\r\n      .subscribe(() => this.fetchItems());\r\n  }\r\n\r\n  del(item: AdamItem) {\r\n    if (this.#ui().disabled) return;\r\n\r\n    const ok = window.confirm('Are you sure you want to delete this item?'); // todo i18n\r\n    if (!ok) return;\r\n\r\n    this.#adamService.deleteItem(item, this.#url, this.adamConfig())\r\n      .subscribe(() => this.fetchItems());\r\n  }\r\n\r\n  editItemMetadata(adamItem: AdamItem, contentTypeName: string, metadataId: number) {\r\n    const l = this.log.fnIf('editItemMetadata', {adamItem, contentTypeName, metadataId});\r\n    if (this.formsStateService.readOnly().isReadOnly || !contentTypeName)\r\n      return l.end('readonly or no content type');\r\n\r\n    const form: EditForm = {\r\n      items: [\r\n        metadataId > 0\r\n          ? EditPrep.editId(metadataId)\r\n          : EditPrep.newMetadata(adamItem.ReferenceId, contentTypeName, eavConstants.metadata.cmsObject),\r\n      ],\r\n    };\r\n    this.#editRoutingService.open(this.config.index, this.config.entityGuid, form);\r\n  }\r\n\r\n  goUp() {\r\n    let subfolder = this.adamConfig().subfolder;\r\n    subfolder = subfolder.includes('/') ? subfolder.slice(0, subfolder.lastIndexOf('/')) : '';\r\n    this.setConfig({ subfolder });\r\n  }\r\n\r\n  #getImageConfigurationContentType(item: AdamItem) {\r\n    // allow image configuration if file is type image and if image configuration is enabled in settings\r\n    const settings = this.fieldState.settings();\r\n    return settings.EnableImageConfiguration && item.Type === 'image'\r\n      ? eavConstants.contentTypes.imageDecorator\r\n      : null;\r\n  }\r\n\r\n  #getMetadataContentType(item: AdamItem) {\r\n    let found: string[];\r\n\r\n    // check if it's a folder and if this has a special registration\r\n    if (item.Type === 'folder') {\r\n      found = this.adamConfig().metadataContentTypes.match(/^(folder)(:)([^\\n]*)/im);\r\n      if (found) {\r\n        return found[3];\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // check if the extension has a special registration\r\n    // -- not implemented yet\r\n\r\n    // check if the type \"image\" or \"document\" has a special registration\r\n    // -- not implemented yet\r\n\r\n    // nothing found so far, go for the default with nothing as the prefix\r\n    found = this.adamConfig().metadataContentTypes.match(/^([^:\\n]*)(\\n|$)/im);\r\n    if (found) { return found[1]; }\r\n\r\n    // this is if we don't find anything\r\n    return null;\r\n  }\r\n\r\n  goIntoFolder(item: AdamItem) {\r\n    let subfolder = this.adamConfig().subfolder;\r\n    subfolder = subfolder ? `${subfolder}/${item.Name}` : item.Name;\r\n    this.setConfig({ subfolder });\r\n  }\r\n\r\n  openUploadClick(event: MouseEvent) {\r\n    this.openUpload.emit();\r\n  }\r\n\r\n  rename(item: AdamItem) {\r\n    if (this.#ui().disabled) return;\r\n\r\n    const newName = window.prompt('Rename the file / folder to: ', item.Name); // todo i18n\r\n    if (!newName) return;\r\n\r\n    this.#adamService.rename(item, newName, this.#url, this.adamConfig())\r\n      .subscribe(() => this.fetchItems());\r\n  }\r\n\r\n  select(item: AdamItem) {\r\n    if (this.#ui().disabled || !this.adamConfig().enableSelect) return;\r\n    this.config.adam.onItemClick(item);\r\n  }\r\n\r\n  /**\r\n   * Note: since all fetch-items happen in a timeout or subscribe, it doesn't need to be in the NgZone\r\n   * @returns\r\n   */\r\n  public fetchItems() {\r\n    const adamConfig = this.adamConfig();\r\n    const l = this.log.fnIf('fetchItems', { adamConfig, firstFetch: this.#firstFetch, usePortalRoot: adamConfig?.usePortalRoot });\r\n    if (adamConfig == null) return;\r\n    if (!adamConfig.autoLoad) return;\r\n\r\n    if (this.#firstFetch) {\r\n      this.#firstFetch = false;\r\n      const adamItems = this.adamCacheService.getAdamSnapshot(this.config.entityGuid, this.config.fieldName);\r\n      if (adamItems) {\r\n        const clonedItems = adamItems.map(adamItem => ({ ...adamItem } satisfies AdamItem));\r\n        setTimeout(() => this.#processFetchedItems(clonedItems, adamConfig));\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.#adamService.getAll(this.#url, adamConfig)\r\n      .subscribe(items => this.#processFetchedItems(items, adamConfig));\r\n  }\r\n\r\n  openFeatureInfoDialog() {\r\n    if (!this.isPasteImageFromClipboardEnabled())\r\n      openFeatureDialog(this.matDialog, FeatureNames.PasteImageFromClipboard, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  #processFetchedItems(items: AdamItem[], adamConfig: AdamConfig): void {\r\n    const l = this.log.fnIf('processFetchedItems', { items, adamConfig, usePortalRoot: adamConfig.usePortalRoot });\r\n    this.linkCacheService.addAdam(items);\r\n\r\n    const filteredItems: AdamItem[] = [];\r\n    const extensionsFilter = getExtensionsFilter(adamConfig.fileFilter);\r\n\r\n    for (const item of items) {\r\n      if (item.Name === '.') { // is root\r\n        const allowEdit = item.AllowEdit;\r\n        if (allowEdit !== adamConfig.allowEdit)\r\n          this.setConfig({ allowEdit });\r\n        continue;\r\n      }\r\n      if (item.Name === '2sxc' || item.Name === 'adam')\r\n        continue;\r\n      if (!item.IsFolder && adamConfig.showImagesOnly && item.Type !== 'image')\r\n        continue;\r\n      if (item.IsFolder && adamConfig.maxDepthReached)\r\n        continue;\r\n      if (extensionsFilter.length > 0) {\r\n        const extension = item.Name.substring(item.Name.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n        if (!extensionsFilter.includes(extension)) continue;\r\n      }\r\n\r\n      item._imageConfigurationContentType = this.#getImageConfigurationContentType(item);\r\n      item._imageConfigurationId = item.Metadata?.find(m => m.Type.Name === item._imageConfigurationContentType)?.Id ?? 0;\r\n      item._metadataContentType = this.#getMetadataContentType(item);\r\n      item._metadataId = item.Metadata?.find(m => m.Type.Name === item._metadataContentType)?.Id ?? 0;\r\n      item._icon = FileTypeHelpers.getIconClass(item.Name);\r\n      item._isMaterialIcon = FileTypeHelpers.isKnownType(item.Name);\r\n      item._displaySize = (item.Size / 1024).toFixed(0);\r\n      filteredItems.push(item);\r\n    }\r\n\r\n    filteredItems.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n    filteredItems.sort((a, b) => b.IsFolder.toString().localeCompare(a.IsFolder.toString()));\r\n    this.items.set(filteredItems);\r\n  }\r\n\r\n  public setConfig(config: Partial<AdamConfig>) {\r\n    const l = this.log.fnIf('setConfig', config);\r\n    const newConfig = AdamConfigInstance.completeConfig(config, this.config, this.adamConfig());\r\n\r\n    // There is a high risk of infinite loops here, so we need to ensure that we don't do this too often\r\n    if (isEqual(newConfig, this.adamConfig())) {\r\n      l.end('no change');\r\n      return;\r\n    }\r\n\r\n    this.adamConfig.set(newConfig);\r\n    fixDropzone(newConfig, this.config);\r\n    l.end();\r\n  }\r\n\r\n\r\n  public toggle(usePortalRoot: boolean, showImagesOnly: boolean) {\r\n    const newConfig: AdamConfig = { ...this.adamConfig(), ...{ usePortalRoot, showImagesOnly } };\r\n\r\n    if (isEqual(newConfig, this.adamConfig()))\r\n      newConfig.autoLoad = !newConfig.autoLoad;\r\n    else if (!newConfig.autoLoad)\r\n      newConfig.autoLoad = true;\r\n\r\n    this.setConfig(newConfig);\r\n  }\r\n}\r\n\r\nfunction getExtensionsFilter(fileFilter: string) {\r\n  if (!fileFilter) return [];\r\n\r\n  const extensions = fileFilter.split(',').map(extension => {\r\n    extension = extension.trim();\r\n\r\n    if (extension.startsWith('*.'))\r\n      extension = extension.replace('*.', '');\r\n    else if (extension.startsWith('*'))\r\n      extension = extension.replace('*', '');\r\n\r\n    return extension.toLocaleLowerCase();\r\n  });\r\n\r\n  return extensions;\r\n}\r\n\r\n","import { DropzoneConfigExt } from '../../../../../../../../edit-types/src/DropzoneConfigExt';\r\nimport { UrlHelpers } from '../../../../shared/helpers';\r\nimport { FieldConfigSet } from '../../../field-config-set.model';\r\nimport { AdamConfigInstance } from './adam-browser.models';\r\n\r\nexport function fixDropzone(newConfig: AdamConfigInstance, fieldConfig: FieldConfigSet) {\r\n  const oldDzConfig = fieldConfig.dropzone.getConfig();\r\n  const newDzConfig: Partial<DropzoneConfigExt> = {};\r\n  const dzUrlParams = UrlHelpers.getUrlParams(oldDzConfig.url as string);\r\n  const dzSubfolder = dzUrlParams.subfolder || '';\r\n  const dzUsePortalRoot = dzUrlParams.usePortalRoot;\r\n  const fixUploadUrl = dzSubfolder !== newConfig.subfolder || dzUsePortalRoot !== newConfig.usePortalRoot.toString();\r\n\r\n  if (fixUploadUrl) {\r\n    let newUrl = oldDzConfig.url as string;\r\n    newUrl = UrlHelpers.replaceUrlParam(newUrl, 'subfolder', newConfig.subfolder);\r\n    newUrl = UrlHelpers.replaceUrlParam(newUrl, 'usePortalRoot', newConfig.usePortalRoot.toString());\r\n    newDzConfig.url = newUrl;\r\n  }\r\n\r\n  const uploadDisabled = !newConfig.allowEdit\r\n    || (\r\n      (newConfig.subfolder === '' || newConfig.usePortalRoot && newConfig.subfolder === newConfig.rootSubfolder)\r\n      && !newConfig.allowAssetsInRoot\r\n    );\r\n\r\n  const fixDisabled = oldDzConfig.disabled !== uploadDisabled;\r\n  if (fixDisabled)\r\n    newDzConfig.disabled = uploadDisabled;\r\n\r\n  if (Object.keys(newDzConfig).length > 0)\r\n    fieldConfig.dropzone.setConfig(newDzConfig);\r\n}\r\n","<mat-divider></mat-divider>\r\n\r\n<div class=\"hint-box u-border-radius-bottom mat-caption u-shadow-top\">\r\n  <div class=\"hint-box__hint\">{{ \"Fields.Hyperlink.AdamFileManager.Hint\" | translate }}</div>\r\n  <div class=\"hint-box__sponsor\">\r\n    <a\r\n      href=\"https://2sxc.org/help?tag=adam\"\r\n      target=\"_blank\"\r\n      tabindex=\"-1\"\r\n      class=\"adam-link\"\r\n      tippyTranslate=\"Fields.Hyperlink.AdamFileManager.HelpTooltip\"\r\n    >\r\n      <mat-icon svgIcon=\"apple-outlined\"></mat-icon>\r\n      <span>{{ \"Fields.Hyperlink.AdamFileManager.Name\" | translate }}</span>\r\n    </a>\r\n    @if (!hideAdamSponsor()) {\r\n      &nbsp;\r\n      <span>{{ \"Fields.Hyperlink.AdamFileManager.SponsorLine\" | translate }}</span>\r\n      &nbsp;\r\n      <a href=\"https://www.2sic.com\" target=\"_blank\" tabindex=\"-1\">2sic.com</a>\r\n    }\r\n  </div>\r\n</div>\r\n","import { FeatureNames } from './../../../../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../../../../features/features-scoped.service';\r\nimport { Component, inject } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { TippyDirective } from '../../../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'adam-hint',\r\n  templateUrl: './adam-hint.component.html',\r\n  styleUrls: ['./adam-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AdamHintComponent {\r\n  public features = inject(FeaturesScopedService);\r\n  protected hideAdamSponsor = this.features.isEnabled[FeatureNames.NoSponsoredByToSic];\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, ElementRef, inject, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldState } from '../../field-state';\r\nimport { WrappersCatalog } from '../wrappers.constants';\r\nimport { AdamBrowserComponent } from './adam-browser/adam-browser.component';\r\nimport { AdamHintComponent } from './adam-hint/adam-hint.component';\r\n\r\n@Component({\r\n  selector: WrappersCatalog.AdamWrapper,\r\n  templateUrl: './adam-wrapper.component.html',\r\n  styleUrls: ['./adam-wrapper.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    AdamBrowserComponent,\r\n    NgClass,\r\n    AdamHintComponent,\r\n  ],\r\n})\r\nexport class AdamWrapperComponent implements OnInit {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('invisibleClickable') invisibleClickableRef: ElementRef;\r\n\r\n  protected fieldState = inject(FieldState);\r\n  protected config = this.fieldState.config;\r\n\r\n  constructor() { }\r\n\r\n  fullscreenAdam: boolean;\r\n  adamDisabled = this.config.adam.isDisabled;\r\n\r\n\r\n  ngOnInit() {\r\n    this.fullscreenAdam = this.config.inputTypeSpecs.inputType === InputTypeCatalog.HyperlinkLibrary;\r\n  }\r\n\r\n  openUpload() {\r\n    this.invisibleClickableRef.nativeElement.click();\r\n  }\r\n}\r\n","<div [ngClass]=\"{ 'adam-in-popup': this.fieldState.isOpen(), 'c-ew__dialog-content--empty': fullscreenAdam }\">\r\n  <div class=\"adam-dialog-content\">\r\n    <ng-container #fieldComponent></ng-container>\r\n  </div>\r\n  <adam-browser\r\n    (openUpload)=\"openUpload()\"\r\n    class=\"u-shadow-top\"\r\n    [ngClass]=\"{\r\n      'adam-browser-container--short u-hide-scrollbar': !fullscreenAdam,\r\n      'u-display-none': adamDisabled(),\r\n    }\"\r\n  >\r\n  </adam-browser>\r\n  <div class=\"{{ config.dropzonePreviewsClass }}\" [ngClass]=\"{ 'u-display-none': adamDisabled() }\">\r\n    <div class=\"dropzone-previews\"></div>\r\n    <span #invisibleClickable class=\"invisible-clickable\" data-note=\"just a fake, invisible area for dropzone\"></span>\r\n  </div>\r\n  <adam-hint class=\"field-hints\" [ngClass]=\"{ 'u-display-none': adamDisabled() }\"></adam-hint>\r\n</div>\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, PLATFORM_ID, Directive, Inject, Optional, Input, Output, Component, ViewEncapsulation, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport Dropzone from 'dropzone';\n\nconst DROPZONE_CONFIG = new InjectionToken('DROPZONE_CONFIG');\nconst DropzoneEvents = [\n    'error',\n    'success',\n    'sending',\n    'canceled',\n    'complete',\n    'processing',\n    'drop',\n    'dragStart',\n    'dragEnd',\n    'dragEnter',\n    'dragOver',\n    'dragLeave',\n    'thumbnail',\n    'addedFile',\n    'addedFiles',\n    'removedFile',\n    'uploadProgress',\n    'maxFilesReached',\n    'maxFilesExceeded',\n    'errorMultiple',\n    'successMultiple',\n    'sendingMultiple',\n    'canceledMultiple',\n    'completeMultiple',\n    'processingMultiple',\n    'reset',\n    'queueComplete',\n    'totalUploadProgress'\n];\nclass DropzoneConfig {\n    constructor(config = {}) {\n        this.assign(config);\n    }\n    assign(config = {}, target) {\n        target = target || this;\n        for (const key in config) {\n            if (config[key] != null && !(Array.isArray(config[key])) &&\n                typeof config[key] === 'object' && !(config[key] instanceof HTMLElement)) {\n                target[key] = {};\n                this.assign(config[key], target[key]);\n            }\n            else {\n                target[key] = config[key];\n            }\n        }\n    }\n}\n\nclass DropzoneDirective {\n    constructor(zone, renderer, elementRef, differs, platformId, defaults) {\n        this.zone = zone;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.differs = differs;\n        this.platformId = platformId;\n        this.defaults = defaults;\n        this.configDiff = null;\n        this.disabled = false;\n        this.DZ_INIT = new EventEmitter();\n        this.DZ_ERROR = new EventEmitter();\n        this.DZ_SUCCESS = new EventEmitter();\n        this.DZ_SENDING = new EventEmitter();\n        this.DZ_CANCELED = new EventEmitter();\n        this.DZ_COMPLETE = new EventEmitter();\n        this.DZ_PROCESSING = new EventEmitter();\n        this.DZ_DROP = new EventEmitter();\n        this.DZ_DRAGSTART = new EventEmitter();\n        this.DZ_DRAGEND = new EventEmitter();\n        this.DZ_DRAGENTER = new EventEmitter();\n        this.DZ_DRAGOVER = new EventEmitter();\n        this.DZ_DRAGLEAVE = new EventEmitter();\n        this.DZ_THUMBNAIL = new EventEmitter();\n        this.DZ_ADDEDFILE = new EventEmitter();\n        this.DZ_ADDEDFILES = new EventEmitter();\n        this.DZ_REMOVEDFILE = new EventEmitter();\n        this.DZ_UPLOADPROGRESS = new EventEmitter();\n        this.DZ_MAXFILESREACHED = new EventEmitter();\n        this.DZ_MAXFILESEXCEEDED = new EventEmitter();\n        this.DZ_ERRORMULTIPLE = new EventEmitter();\n        this.DZ_SUCCESSMULTIPLE = new EventEmitter();\n        this.DZ_SENDINGMULTIPLE = new EventEmitter();\n        this.DZ_CANCELEDMULTIPLE = new EventEmitter();\n        this.DZ_COMPLETEMULTIPLE = new EventEmitter();\n        this.DZ_PROCESSINGMULTIPLE = new EventEmitter();\n        this.DZ_RESET = new EventEmitter();\n        this.DZ_QUEUECOMPLETE = new EventEmitter();\n        this.DZ_TOTALUPLOADPROGRESS = new EventEmitter();\n        const dz = Dropzone;\n        dz.autoDiscover = false;\n    }\n    ngOnInit() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const params = new DropzoneConfig(this.defaults);\n        params.assign(this.config); // Custom configuration\n        this.renderer.addClass(this.elementRef.nativeElement, (params.maxFiles === 1) ? 'dz-single' : 'dz-multiple');\n        this.renderer.removeClass(this.elementRef.nativeElement, (params.maxFiles === 1) ? 'dz-multiple' : 'dz-single');\n        this.zone.runOutsideAngular(() => {\n            this.instance = new Dropzone(this.elementRef.nativeElement, params);\n        });\n        if (this.disabled) {\n            this.instance.disable();\n        }\n        if (this.DZ_INIT.observers.length) {\n            this.zone.run(() => {\n                this.DZ_INIT.emit(this.instance);\n            });\n        }\n        // Add auto reset handling for events\n        this.instance.on('success', () => {\n            if (params.autoReset != null) {\n                setTimeout(() => this.reset(), params.autoReset);\n            }\n        });\n        this.instance.on('error', () => {\n            if (params.errorReset != null) {\n                setTimeout(() => this.reset(), params.errorReset);\n            }\n        });\n        this.instance.on('canceled', () => {\n            if (params.cancelReset != null) {\n                setTimeout(() => this.reset(), params.cancelReset);\n            }\n        });\n        // Add native Dropzone event handling\n        DropzoneEvents.forEach((eventName) => {\n            this.instance.on(eventName.toLowerCase(), (...args) => {\n                args = (args.length === 1) ? args[0] : args;\n                const output = `DZ_${eventName.toUpperCase()}`;\n                const emitter = this[output];\n                if (emitter.observers.length > 0) {\n                    this.zone.run(() => {\n                        emitter.emit(args);\n                    });\n                }\n            });\n        });\n        if (!this.configDiff) {\n            this.configDiff = this.differs.find(this.config || {}).create();\n            this.configDiff.diff(this.config || {});\n        }\n    }\n    ngOnDestroy() {\n        if (this.instance) {\n            this.zone.runOutsideAngular(() => {\n                this.instance.destroy();\n            });\n            this.instance = null;\n        }\n    }\n    ngDoCheck() {\n        if (!this.disabled && this.configDiff) {\n            const changes = this.configDiff.diff(this.config || {});\n            if (changes && this.instance) {\n                this.ngOnDestroy();\n                this.ngOnInit();\n            }\n        }\n    }\n    ngOnChanges(changes) {\n        if (this.instance && changes['disabled']) {\n            if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n                if (changes['disabled'].currentValue === false) {\n                    this.zone.runOutsideAngular(() => {\n                        this.instance.enable();\n                    });\n                }\n                else if (changes['disabled'].currentValue === true) {\n                    this.zone.runOutsideAngular(() => {\n                        this.instance.disable();\n                    });\n                }\n            }\n        }\n    }\n    dropzone() {\n        return this.instance;\n    }\n    reset(cancel) {\n        if (this.instance) {\n            this.zone.runOutsideAngular(() => {\n                this.instance.removeAllFiles(cancel);\n            });\n        }\n    }\n}\nDropzoneDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: DropzoneDirective, deps: [{ token: i0.NgZone }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.KeyValueDiffers }, { token: PLATFORM_ID }, { token: DROPZONE_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nDropzoneDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.5\", type: DropzoneDirective, selector: \"[dropzone]\", inputs: { disabled: \"disabled\", config: [\"dropzone\", \"config\"] }, outputs: { DZ_INIT: \"init\", DZ_ERROR: \"error\", DZ_SUCCESS: \"success\", DZ_SENDING: \"sending\", DZ_CANCELED: \"canceled\", DZ_COMPLETE: \"complete\", DZ_PROCESSING: \"processing\", DZ_DROP: \"drop\", DZ_DRAGSTART: \"dragStart\", DZ_DRAGEND: \"dragEnd\", DZ_DRAGENTER: \"dragEnter\", DZ_DRAGOVER: \"dragOver\", DZ_DRAGLEAVE: \"dragLeave\", DZ_THUMBNAIL: \"thumbnail\", DZ_ADDEDFILE: \"addedFile\", DZ_ADDEDFILES: \"addedFiles\", DZ_REMOVEDFILE: \"removedFile\", DZ_UPLOADPROGRESS: \"uploadProgress\", DZ_MAXFILESREACHED: \"maxFilesReached\", DZ_MAXFILESEXCEEDED: \"maxFilesExceeded\", DZ_ERRORMULTIPLE: \"errorMultiple\", DZ_SUCCESSMULTIPLE: \"successMultiple\", DZ_SENDINGMULTIPLE: \"sendingMultiple\", DZ_CANCELEDMULTIPLE: \"canceledMultiple\", DZ_COMPLETEMULTIPLE: \"completeMultiple\", DZ_PROCESSINGMULTIPLE: \"processingMultiple\", DZ_RESET: \"reset\", DZ_QUEUECOMPLETE: \"queueComplete\", DZ_TOTALUPLOADPROGRESS: \"totalUploadProgress\" }, exportAs: [\"ngxDropzone\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: DropzoneDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dropzone]',\n                    exportAs: 'ngxDropzone'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.KeyValueDiffers }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DROPZONE_CONFIG]\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], config: [{\n                type: Input,\n                args: ['dropzone']\n            }], DZ_INIT: [{\n                type: Output,\n                args: ['init']\n            }], DZ_ERROR: [{\n                type: Output,\n                args: ['error']\n            }], DZ_SUCCESS: [{\n                type: Output,\n                args: ['success']\n            }], DZ_SENDING: [{\n                type: Output,\n                args: ['sending']\n            }], DZ_CANCELED: [{\n                type: Output,\n                args: ['canceled']\n            }], DZ_COMPLETE: [{\n                type: Output,\n                args: ['complete']\n            }], DZ_PROCESSING: [{\n                type: Output,\n                args: ['processing']\n            }], DZ_DROP: [{\n                type: Output,\n                args: ['drop']\n            }], DZ_DRAGSTART: [{\n                type: Output,\n                args: ['dragStart']\n            }], DZ_DRAGEND: [{\n                type: Output,\n                args: ['dragEnd']\n            }], DZ_DRAGENTER: [{\n                type: Output,\n                args: ['dragEnter']\n            }], DZ_DRAGOVER: [{\n                type: Output,\n                args: ['dragOver']\n            }], DZ_DRAGLEAVE: [{\n                type: Output,\n                args: ['dragLeave']\n            }], DZ_THUMBNAIL: [{\n                type: Output,\n                args: ['thumbnail']\n            }], DZ_ADDEDFILE: [{\n                type: Output,\n                args: ['addedFile']\n            }], DZ_ADDEDFILES: [{\n                type: Output,\n                args: ['addedFiles']\n            }], DZ_REMOVEDFILE: [{\n                type: Output,\n                args: ['removedFile']\n            }], DZ_UPLOADPROGRESS: [{\n                type: Output,\n                args: ['uploadProgress']\n            }], DZ_MAXFILESREACHED: [{\n                type: Output,\n                args: ['maxFilesReached']\n            }], DZ_MAXFILESEXCEEDED: [{\n                type: Output,\n                args: ['maxFilesExceeded']\n            }], DZ_ERRORMULTIPLE: [{\n                type: Output,\n                args: ['errorMultiple']\n            }], DZ_SUCCESSMULTIPLE: [{\n                type: Output,\n                args: ['successMultiple']\n            }], DZ_SENDINGMULTIPLE: [{\n                type: Output,\n                args: ['sendingMultiple']\n            }], DZ_CANCELEDMULTIPLE: [{\n                type: Output,\n                args: ['canceledMultiple']\n            }], DZ_COMPLETEMULTIPLE: [{\n                type: Output,\n                args: ['completeMultiple']\n            }], DZ_PROCESSINGMULTIPLE: [{\n                type: Output,\n                args: ['processingMultiple']\n            }], DZ_RESET: [{\n                type: Output,\n                args: ['reset']\n            }], DZ_QUEUECOMPLETE: [{\n                type: Output,\n                args: ['queueComplete']\n            }], DZ_TOTALUPLOADPROGRESS: [{\n                type: Output,\n                args: ['totalUploadProgress']\n            }] } });\n\nclass DropzoneComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.disabled = false;\n        this.message = 'Click or drag files to upload';\n        this.placeholder = '';\n        this.useDropzoneClass = true;\n        this.DZ_INIT = new EventEmitter();\n        this.DZ_ERROR = new EventEmitter();\n        this.DZ_SUCCESS = new EventEmitter();\n        this.DZ_SENDING = new EventEmitter();\n        this.DZ_CANCELED = new EventEmitter();\n        this.DZ_COMPLETE = new EventEmitter();\n        this.DZ_PROCESSING = new EventEmitter();\n        this.DZ_DROP = new EventEmitter();\n        this.DZ_DRAGSTART = new EventEmitter();\n        this.DZ_DRAGEND = new EventEmitter();\n        this.DZ_DRAGENTER = new EventEmitter();\n        this.DZ_DRAGOVER = new EventEmitter();\n        this.DZ_DRAGLEAVE = new EventEmitter();\n        this.DZ_THUMBNAIL = new EventEmitter();\n        this.DZ_ADDEDFILE = new EventEmitter();\n        this.DZ_ADDEDFILES = new EventEmitter();\n        this.DZ_REMOVEDFILE = new EventEmitter();\n        this.DZ_UPLOADPROGRESS = new EventEmitter();\n        this.DZ_MAXFILESREACHED = new EventEmitter();\n        this.DZ_MAXFILESEXCEEDED = new EventEmitter();\n        this.DZ_ERRORMULTIPLE = new EventEmitter();\n        this.DZ_SUCCESSMULTIPLE = new EventEmitter();\n        this.DZ_SENDINGMULTIPLE = new EventEmitter();\n        this.DZ_CANCELEDMULTIPLE = new EventEmitter();\n        this.DZ_COMPLETEMULTIPLE = new EventEmitter();\n        this.DZ_PROCESSINGMULTIPLE = new EventEmitter();\n        this.DZ_RESET = new EventEmitter();\n        this.DZ_QUEUECOMPLETE = new EventEmitter();\n        this.DZ_TOTALUPLOADPROGRESS = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        window.setTimeout(() => {\n            DropzoneEvents.forEach((eventName) => {\n                if (this.directiveRef) {\n                    const output = `DZ_${eventName.toUpperCase()}`;\n                    const directiveOutput = output;\n                    const componentOutput = output;\n                    this.directiveRef[directiveOutput] = this[componentOutput];\n                }\n            });\n        }, 0);\n    }\n    getPlaceholder() {\n        return 'url(' + encodeURI(this.placeholder) + ')';\n    }\n}\nDropzoneComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: DropzoneComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nDropzoneComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.5\", type: DropzoneComponent, selector: \"dropzone\", inputs: { disabled: \"disabled\", config: \"config\", message: \"message\", placeholder: \"placeholder\", useDropzoneClass: \"useDropzoneClass\" }, outputs: { DZ_INIT: \"init\", DZ_ERROR: \"error\", DZ_SUCCESS: \"success\", DZ_SENDING: \"sending\", DZ_CANCELED: \"canceled\", DZ_COMPLETE: \"complete\", DZ_PROCESSING: \"processing\", DZ_DROP: \"drop\", DZ_DRAGSTART: \"dragStart\", DZ_DRAGEND: \"dragEnd\", DZ_DRAGENTER: \"dragEnter\", DZ_DRAGOVER: \"dragOver\", DZ_DRAGLEAVE: \"dragLeave\", DZ_THUMBNAIL: \"thumbnail\", DZ_ADDEDFILE: \"addedFile\", DZ_ADDEDFILES: \"addedFiles\", DZ_REMOVEDFILE: \"removedFile\", DZ_UPLOADPROGRESS: \"uploadProgress\", DZ_MAXFILESREACHED: \"maxFilesReached\", DZ_MAXFILESEXCEEDED: \"maxFilesExceeded\", DZ_ERRORMULTIPLE: \"errorMultiple\", DZ_SUCCESSMULTIPLE: \"successMultiple\", DZ_SENDINGMULTIPLE: \"sendingMultiple\", DZ_CANCELEDMULTIPLE: \"canceledMultiple\", DZ_COMPLETEMULTIPLE: \"completeMultiple\", DZ_PROCESSINGMULTIPLE: \"processingMultiple\", DZ_RESET: \"reset\", DZ_QUEUECOMPLETE: \"queueComplete\", DZ_TOTALUPLOADPROGRESS: \"totalUploadProgress\" }, viewQueries: [{ propertyName: \"directiveRef\", first: true, predicate: DropzoneDirective, descendants: true, static: true }], exportAs: [\"ngxDropzone\"], ngImport: i0, template: \"<div class=\\\"dz-wrapper\\\" [class.dropzone]=\\\"useDropzoneClass\\\" [dropzone]=\\\"config\\\" [disabled]=\\\"disabled\\\" (init)=\\\"DZ_INIT.emit($event)\\\">\\n  <div class=\\\"dz-message\\\" [class.disabled]=\\\"disabled\\\" [class.dz-placeholder]=\\\"placeholder\\\">\\n    <div class=\\\"dz-text\\\" [innerHTML]=\\\"config?.dictDefaultMessage || message\\\"></div>\\n\\n    <div *ngIf=\\\"placeholder\\\" class=\\\"dz-image\\\" [style.background-image]=\\\"getPlaceholder()\\\"></div>\\n  </div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\"dropzone{display:block;width:100%;height:auto}dropzone[fxflex]{display:flex;flex-direction:inherit;min-width:0;min-height:0}dropzone[fxflex]>.dropzone.dz-wrapper{flex:1 1 auto;min-width:0;min-height:0;-webkit-box-flex:1}dropzone[fxlayout]{align-items:inherit;align-content:inherit;justify-content:inherit;-webkit-box-align:inherit;-webkit-box-pack:inherit}dropzone[fxlayout]>.dropzone.dz-wrapper.dz-single{display:flex;flex-direction:column;align-items:center;align-content:center;justify-content:center;-webkit-box-align:center;-webkit-box-pack:center}dropzone[fxlayout]>.dropzone.dz-wrapper.dz-multiple{display:flex;flex-flow:row wrap;align-items:flex-start;align-content:flex-start;justify-content:space-between;-webkit-box-align:flex-start;-webkit-box-pack:flex-start}dropzone>.dropzone.dz-wrapper{position:relative;overflow:auto;width:100%;min-height:0;max-height:100%;padding:0;border:none;color:#666;background:transparent}dropzone>.dropzone.dz-wrapper .dz-message{position:relative;display:inline-block;overflow:auto;width:calc(100% - 16px);min-width:calc(100% - 16px);min-height:40px;max-width:calc(100% - 16px);max-height:100%;margin:8px;border:2px dashed #aaa;background-color:#eee}dropzone>.dropzone.dz-wrapper .dz-message .dz-text{position:absolute;top:50%;width:100%;padding:8px 16px;text-align:center;transform:translateY(-50%)}dropzone>.dropzone.dz-wrapper .dz-message .dz-image{width:100%;height:100%;background-size:contain;background-repeat:no-repeat;background-position:50% 50%}dropzone>.dropzone.dz-wrapper .dz-message.disabled{cursor:not-allowed}dropzone>.dropzone.dz-wrapper .dz-message.disabled .dz-text{opacity:.5}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder{border-color:rgba(#aaa,0)}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder .dz-text{position:absolute;z-index:1;top:0;right:10%;left:10%;opacity:0;font-weight:700;background-color:rgba(#fff,.5);transform:translateY(-50%);transition:filter .25s ease-in-out,opacity .25s ease-in-out,border-color .25s ease-in-out}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder:hover:not(.disabled){border-color:#aaa}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder:hover:not(.disabled) .dz-text{opacity:1}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder:hover:not(.disabled) .dz-image{filter:blur(8px)}dropzone>.dropzone.dz-wrapper .dz-preview{margin:8px}dropzone>.dropzone.dz-wrapper .dz-preview .dz-details{padding:24px}dropzone>.dropzone.dz-wrapper .dz-preview .dz-progress{width:80%;margin-left:-40%;border:1px solid #aaa;border-radius:4px}dropzone>.dropzone.dz-wrapper .dz-preview .dz-progress .dz-upload{background-color:#666}dropzone>.dropzone.dz-wrapper .dz-preview .dz-filename span{display:block;overflow:hidden;width:100%;max-width:100%;text-overflow:ellipsis}dropzone>.dropzone.dz-wrapper .dz-preview .dz-filename span:hover{overflow:visible;white-space:normal;word-wrap:break-word}dropzone>.dropzone.dz-wrapper.dz-single .dz-message{width:100%;height:100%}dropzone>.dropzone.dz-wrapper.dz-single.dz-started .dz-message{display:none}dropzone>.dropzone.dz-wrapper.dz-single .dz-preview{width:calc(100% - 16px);height:100%}dropzone>.dropzone.dz-wrapper.dz-single .dz-preview .dz-image{width:100%;height:100%;border-radius:0}dropzone>.dropzone.dz-wrapper.dz-single .dz-preview .dz-image img{display:block;width:100%;height:auto;margin:0}dropzone>.dropzone.dz-wrapper.dz-single .dz-error-message{top:50%;left:50%;transform:translate(-50%) translateY(100%)}dropzone>.dropzone.dz-wrapper.dz-multiple.dz-started .dz-message{display:inline-block}\\n\", \"@keyframes passing-through{0%{opacity:0;transform:translateY(40px)}30%,70%{opacity:1;transform:translateY(0)}to{opacity:0;transform:translateY(-40px)}}@keyframes slide-in{0%{opacity:0;transform:translateY(40px)}30%{opacity:1;transform:translateY(0)}}@keyframes pulse{0%{transform:scale(1)}10%{transform:scale(1.1)}20%{transform:scale(1)}}.dropzone,.dropzone *{box-sizing:border-box}.dropzone{min-height:150px;border:2px solid rgba(0,0,0,.3);background:#fff;padding:20px}.dropzone.dz-clickable{cursor:pointer}.dropzone.dz-clickable *{cursor:default}.dropzone.dz-clickable .dz-message,.dropzone.dz-clickable .dz-message *{cursor:pointer}.dropzone.dz-started .dz-message{display:none}.dropzone.dz-drag-hover{border-style:solid}.dropzone.dz-drag-hover .dz-message{opacity:.5}.dropzone .dz-message{text-align:center;margin:2em 0}.dropzone .dz-message .dz-button{background:none;color:inherit;border:none;padding:0;font:inherit;cursor:pointer;outline:inherit}.dropzone .dz-preview{position:relative;display:inline-block;vertical-align:top;margin:16px;min-height:100px}.dropzone .dz-preview:hover{z-index:1000}.dropzone .dz-preview.dz-file-preview .dz-image{border-radius:20px;background:#999;background:linear-gradient(to bottom,#eee,#ddd)}.dropzone .dz-preview.dz-file-preview .dz-details{opacity:1}.dropzone .dz-preview.dz-image-preview{background:#fff}.dropzone .dz-preview.dz-image-preview .dz-details{transition:opacity .2s linear}.dropzone .dz-preview .dz-remove{font-size:14px;text-align:center;display:block;cursor:pointer;border:none}.dropzone .dz-preview .dz-remove:hover{text-decoration:underline}.dropzone .dz-preview:hover .dz-details{opacity:1}.dropzone .dz-preview .dz-details{z-index:20;position:absolute;top:0;left:0;opacity:0;font-size:13px;min-width:100%;max-width:100%;padding:2em 1em;text-align:center;color:#000000e6;line-height:150%}.dropzone .dz-preview .dz-details .dz-size{margin-bottom:1em;font-size:16px}.dropzone .dz-preview .dz-details .dz-filename{white-space:nowrap}.dropzone .dz-preview .dz-details .dz-filename:hover span{border:1px solid rgba(200,200,200,.8);background-color:#fffc}.dropzone .dz-preview .dz-details .dz-filename:not(:hover){overflow:hidden;text-overflow:ellipsis}.dropzone .dz-preview .dz-details .dz-filename:not(:hover) span{border:1px solid transparent}.dropzone .dz-preview .dz-details .dz-filename span,.dropzone .dz-preview .dz-details .dz-size span{background-color:#fff6;padding:0 .4em;border-radius:3px}.dropzone .dz-preview:hover .dz-image img{transform:scale(1.05);filter:blur(8px)}.dropzone .dz-preview .dz-image{border-radius:20px;overflow:hidden;width:120px;height:120px;position:relative;display:block;z-index:10}.dropzone .dz-preview .dz-image img{display:block}.dropzone .dz-preview.dz-success .dz-success-mark{animation:passing-through 3s cubic-bezier(.77,0,.175,1)}.dropzone .dz-preview.dz-error .dz-error-mark{opacity:1;animation:slide-in 3s cubic-bezier(.77,0,.175,1)}.dropzone .dz-preview .dz-success-mark,.dropzone .dz-preview .dz-error-mark{pointer-events:none;opacity:0;z-index:500;position:absolute;display:block;top:50%;left:50%;margin-left:-27px;margin-top:-27px}.dropzone .dz-preview .dz-success-mark svg,.dropzone .dz-preview .dz-error-mark svg{display:block;width:54px;height:54px}.dropzone .dz-preview.dz-processing .dz-progress{opacity:1;transition:all .2s linear}.dropzone .dz-preview.dz-complete .dz-progress{opacity:0;transition:opacity .4s ease-in}.dropzone .dz-preview:not(.dz-processing) .dz-progress{animation:pulse 6s ease infinite}.dropzone .dz-preview .dz-progress{opacity:1;z-index:1000;pointer-events:none;position:absolute;height:16px;left:50%;top:50%;margin-top:-8px;width:80px;margin-left:-40px;background:rgba(255,255,255,.9);-webkit-transform:scale(1);border-radius:8px;overflow:hidden}.dropzone .dz-preview .dz-progress .dz-upload{background:#333;background:linear-gradient(to bottom,#666,#444);position:absolute;top:0;left:0;bottom:0;width:0;transition:width .3s ease-in-out}.dropzone .dz-preview.dz-error .dz-error-message{display:block}.dropzone .dz-preview.dz-error:hover .dz-error-message{opacity:1;pointer-events:auto}.dropzone .dz-preview .dz-error-message{pointer-events:none;z-index:1000;position:absolute;display:block;display:none;opacity:0;transition:opacity .3s ease;border-radius:8px;font-size:13px;top:130px;left:-10px;width:140px;background:#be2626;background:linear-gradient(to bottom,#be2626,#a92222);padding:.5em 1.2em;color:#fff}.dropzone .dz-preview .dz-error-message:after{content:\\\"\\\";position:absolute;top:-6px;left:64px;width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:6px solid #be2626}\\n\"], directives: [{ type: DropzoneDirective, selector: \"[dropzone]\", inputs: [\"disabled\", \"dropzone\"], outputs: [\"init\", \"error\", \"success\", \"sending\", \"canceled\", \"complete\", \"processing\", \"drop\", \"dragStart\", \"dragEnd\", \"dragEnter\", \"dragOver\", \"dragLeave\", \"thumbnail\", \"addedFile\", \"addedFiles\", \"removedFile\", \"uploadProgress\", \"maxFilesReached\", \"maxFilesExceeded\", \"errorMultiple\", \"successMultiple\", \"sendingMultiple\", \"canceledMultiple\", \"completeMultiple\", \"processingMultiple\", \"reset\", \"queueComplete\", \"totalUploadProgress\"], exportAs: [\"ngxDropzone\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: DropzoneComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'dropzone', exportAs: 'ngxDropzone', encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"dz-wrapper\\\" [class.dropzone]=\\\"useDropzoneClass\\\" [dropzone]=\\\"config\\\" [disabled]=\\\"disabled\\\" (init)=\\\"DZ_INIT.emit($event)\\\">\\n  <div class=\\\"dz-message\\\" [class.disabled]=\\\"disabled\\\" [class.dz-placeholder]=\\\"placeholder\\\">\\n    <div class=\\\"dz-text\\\" [innerHTML]=\\\"config?.dictDefaultMessage || message\\\"></div>\\n\\n    <div *ngIf=\\\"placeholder\\\" class=\\\"dz-image\\\" [style.background-image]=\\\"getPlaceholder()\\\"></div>\\n  </div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\"dropzone{display:block;width:100%;height:auto}dropzone[fxflex]{display:flex;flex-direction:inherit;min-width:0;min-height:0}dropzone[fxflex]>.dropzone.dz-wrapper{flex:1 1 auto;min-width:0;min-height:0;-webkit-box-flex:1}dropzone[fxlayout]{align-items:inherit;align-content:inherit;justify-content:inherit;-webkit-box-align:inherit;-webkit-box-pack:inherit}dropzone[fxlayout]>.dropzone.dz-wrapper.dz-single{display:flex;flex-direction:column;align-items:center;align-content:center;justify-content:center;-webkit-box-align:center;-webkit-box-pack:center}dropzone[fxlayout]>.dropzone.dz-wrapper.dz-multiple{display:flex;flex-flow:row wrap;align-items:flex-start;align-content:flex-start;justify-content:space-between;-webkit-box-align:flex-start;-webkit-box-pack:flex-start}dropzone>.dropzone.dz-wrapper{position:relative;overflow:auto;width:100%;min-height:0;max-height:100%;padding:0;border:none;color:#666;background:transparent}dropzone>.dropzone.dz-wrapper .dz-message{position:relative;display:inline-block;overflow:auto;width:calc(100% - 16px);min-width:calc(100% - 16px);min-height:40px;max-width:calc(100% - 16px);max-height:100%;margin:8px;border:2px dashed #aaa;background-color:#eee}dropzone>.dropzone.dz-wrapper .dz-message .dz-text{position:absolute;top:50%;width:100%;padding:8px 16px;text-align:center;transform:translateY(-50%)}dropzone>.dropzone.dz-wrapper .dz-message .dz-image{width:100%;height:100%;background-size:contain;background-repeat:no-repeat;background-position:50% 50%}dropzone>.dropzone.dz-wrapper .dz-message.disabled{cursor:not-allowed}dropzone>.dropzone.dz-wrapper .dz-message.disabled .dz-text{opacity:.5}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder{border-color:rgba(#aaa,0)}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder .dz-text{position:absolute;z-index:1;top:0;right:10%;left:10%;opacity:0;font-weight:700;background-color:rgba(#fff,.5);transform:translateY(-50%);transition:filter .25s ease-in-out,opacity .25s ease-in-out,border-color .25s ease-in-out}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder:hover:not(.disabled){border-color:#aaa}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder:hover:not(.disabled) .dz-text{opacity:1}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder:hover:not(.disabled) .dz-image{filter:blur(8px)}dropzone>.dropzone.dz-wrapper .dz-preview{margin:8px}dropzone>.dropzone.dz-wrapper .dz-preview .dz-details{padding:24px}dropzone>.dropzone.dz-wrapper .dz-preview .dz-progress{width:80%;margin-left:-40%;border:1px solid #aaa;border-radius:4px}dropzone>.dropzone.dz-wrapper .dz-preview .dz-progress .dz-upload{background-color:#666}dropzone>.dropzone.dz-wrapper .dz-preview .dz-filename span{display:block;overflow:hidden;width:100%;max-width:100%;text-overflow:ellipsis}dropzone>.dropzone.dz-wrapper .dz-preview .dz-filename span:hover{overflow:visible;white-space:normal;word-wrap:break-word}dropzone>.dropzone.dz-wrapper.dz-single .dz-message{width:100%;height:100%}dropzone>.dropzone.dz-wrapper.dz-single.dz-started .dz-message{display:none}dropzone>.dropzone.dz-wrapper.dz-single .dz-preview{width:calc(100% - 16px);height:100%}dropzone>.dropzone.dz-wrapper.dz-single .dz-preview .dz-image{width:100%;height:100%;border-radius:0}dropzone>.dropzone.dz-wrapper.dz-single .dz-preview .dz-image img{display:block;width:100%;height:auto;margin:0}dropzone>.dropzone.dz-wrapper.dz-single .dz-error-message{top:50%;left:50%;transform:translate(-50%) translateY(100%)}dropzone>.dropzone.dz-wrapper.dz-multiple.dz-started .dz-message{display:inline-block}\\n\", \"@keyframes passing-through{0%{opacity:0;transform:translateY(40px)}30%,70%{opacity:1;transform:translateY(0)}to{opacity:0;transform:translateY(-40px)}}@keyframes slide-in{0%{opacity:0;transform:translateY(40px)}30%{opacity:1;transform:translateY(0)}}@keyframes pulse{0%{transform:scale(1)}10%{transform:scale(1.1)}20%{transform:scale(1)}}.dropzone,.dropzone *{box-sizing:border-box}.dropzone{min-height:150px;border:2px solid rgba(0,0,0,.3);background:#fff;padding:20px}.dropzone.dz-clickable{cursor:pointer}.dropzone.dz-clickable *{cursor:default}.dropzone.dz-clickable .dz-message,.dropzone.dz-clickable .dz-message *{cursor:pointer}.dropzone.dz-started .dz-message{display:none}.dropzone.dz-drag-hover{border-style:solid}.dropzone.dz-drag-hover .dz-message{opacity:.5}.dropzone .dz-message{text-align:center;margin:2em 0}.dropzone .dz-message .dz-button{background:none;color:inherit;border:none;padding:0;font:inherit;cursor:pointer;outline:inherit}.dropzone .dz-preview{position:relative;display:inline-block;vertical-align:top;margin:16px;min-height:100px}.dropzone .dz-preview:hover{z-index:1000}.dropzone .dz-preview.dz-file-preview .dz-image{border-radius:20px;background:#999;background:linear-gradient(to bottom,#eee,#ddd)}.dropzone .dz-preview.dz-file-preview .dz-details{opacity:1}.dropzone .dz-preview.dz-image-preview{background:#fff}.dropzone .dz-preview.dz-image-preview .dz-details{transition:opacity .2s linear}.dropzone .dz-preview .dz-remove{font-size:14px;text-align:center;display:block;cursor:pointer;border:none}.dropzone .dz-preview .dz-remove:hover{text-decoration:underline}.dropzone .dz-preview:hover .dz-details{opacity:1}.dropzone .dz-preview .dz-details{z-index:20;position:absolute;top:0;left:0;opacity:0;font-size:13px;min-width:100%;max-width:100%;padding:2em 1em;text-align:center;color:#000000e6;line-height:150%}.dropzone .dz-preview .dz-details .dz-size{margin-bottom:1em;font-size:16px}.dropzone .dz-preview .dz-details .dz-filename{white-space:nowrap}.dropzone .dz-preview .dz-details .dz-filename:hover span{border:1px solid rgba(200,200,200,.8);background-color:#fffc}.dropzone .dz-preview .dz-details .dz-filename:not(:hover){overflow:hidden;text-overflow:ellipsis}.dropzone .dz-preview .dz-details .dz-filename:not(:hover) span{border:1px solid transparent}.dropzone .dz-preview .dz-details .dz-filename span,.dropzone .dz-preview .dz-details .dz-size span{background-color:#fff6;padding:0 .4em;border-radius:3px}.dropzone .dz-preview:hover .dz-image img{transform:scale(1.05);filter:blur(8px)}.dropzone .dz-preview .dz-image{border-radius:20px;overflow:hidden;width:120px;height:120px;position:relative;display:block;z-index:10}.dropzone .dz-preview .dz-image img{display:block}.dropzone .dz-preview.dz-success .dz-success-mark{animation:passing-through 3s cubic-bezier(.77,0,.175,1)}.dropzone .dz-preview.dz-error .dz-error-mark{opacity:1;animation:slide-in 3s cubic-bezier(.77,0,.175,1)}.dropzone .dz-preview .dz-success-mark,.dropzone .dz-preview .dz-error-mark{pointer-events:none;opacity:0;z-index:500;position:absolute;display:block;top:50%;left:50%;margin-left:-27px;margin-top:-27px}.dropzone .dz-preview .dz-success-mark svg,.dropzone .dz-preview .dz-error-mark svg{display:block;width:54px;height:54px}.dropzone .dz-preview.dz-processing .dz-progress{opacity:1;transition:all .2s linear}.dropzone .dz-preview.dz-complete .dz-progress{opacity:0;transition:opacity .4s ease-in}.dropzone .dz-preview:not(.dz-processing) .dz-progress{animation:pulse 6s ease infinite}.dropzone .dz-preview .dz-progress{opacity:1;z-index:1000;pointer-events:none;position:absolute;height:16px;left:50%;top:50%;margin-top:-8px;width:80px;margin-left:-40px;background:rgba(255,255,255,.9);-webkit-transform:scale(1);border-radius:8px;overflow:hidden}.dropzone .dz-preview .dz-progress .dz-upload{background:#333;background:linear-gradient(to bottom,#666,#444);position:absolute;top:0;left:0;bottom:0;width:0;transition:width .3s ease-in-out}.dropzone .dz-preview.dz-error .dz-error-message{display:block}.dropzone .dz-preview.dz-error:hover .dz-error-message{opacity:1;pointer-events:auto}.dropzone .dz-preview .dz-error-message{pointer-events:none;z-index:1000;position:absolute;display:block;display:none;opacity:0;transition:opacity .3s ease;border-radius:8px;font-size:13px;top:130px;left:-10px;width:140px;background:#be2626;background:linear-gradient(to bottom,#be2626,#a92222);padding:.5em 1.2em;color:#fff}.dropzone .dz-preview .dz-error-message:after{content:\\\"\\\";position:absolute;top:-6px;left:64px;width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:6px solid #be2626}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], config: [{\n                type: Input\n            }], message: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], useDropzoneClass: [{\n                type: Input\n            }], DZ_INIT: [{\n                type: Output,\n                args: ['init']\n            }], DZ_ERROR: [{\n                type: Output,\n                args: ['error']\n            }], DZ_SUCCESS: [{\n                type: Output,\n                args: ['success']\n            }], DZ_SENDING: [{\n                type: Output,\n                args: ['sending']\n            }], DZ_CANCELED: [{\n                type: Output,\n                args: ['canceled']\n            }], DZ_COMPLETE: [{\n                type: Output,\n                args: ['complete']\n            }], DZ_PROCESSING: [{\n                type: Output,\n                args: ['processing']\n            }], DZ_DROP: [{\n                type: Output,\n                args: ['drop']\n            }], DZ_DRAGSTART: [{\n                type: Output,\n                args: ['dragStart']\n            }], DZ_DRAGEND: [{\n                type: Output,\n                args: ['dragEnd']\n            }], DZ_DRAGENTER: [{\n                type: Output,\n                args: ['dragEnter']\n            }], DZ_DRAGOVER: [{\n                type: Output,\n                args: ['dragOver']\n            }], DZ_DRAGLEAVE: [{\n                type: Output,\n                args: ['dragLeave']\n            }], DZ_THUMBNAIL: [{\n                type: Output,\n                args: ['thumbnail']\n            }], DZ_ADDEDFILE: [{\n                type: Output,\n                args: ['addedFile']\n            }], DZ_ADDEDFILES: [{\n                type: Output,\n                args: ['addedFiles']\n            }], DZ_REMOVEDFILE: [{\n                type: Output,\n                args: ['removedFile']\n            }], DZ_UPLOADPROGRESS: [{\n                type: Output,\n                args: ['uploadProgress']\n            }], DZ_MAXFILESREACHED: [{\n                type: Output,\n                args: ['maxFilesReached']\n            }], DZ_MAXFILESEXCEEDED: [{\n                type: Output,\n                args: ['maxFilesExceeded']\n            }], DZ_ERRORMULTIPLE: [{\n                type: Output,\n                args: ['errorMultiple']\n            }], DZ_SUCCESSMULTIPLE: [{\n                type: Output,\n                args: ['successMultiple']\n            }], DZ_SENDINGMULTIPLE: [{\n                type: Output,\n                args: ['sendingMultiple']\n            }], DZ_CANCELEDMULTIPLE: [{\n                type: Output,\n                args: ['canceledMultiple']\n            }], DZ_COMPLETEMULTIPLE: [{\n                type: Output,\n                args: ['completeMultiple']\n            }], DZ_PROCESSINGMULTIPLE: [{\n                type: Output,\n                args: ['processingMultiple']\n            }], DZ_RESET: [{\n                type: Output,\n                args: ['reset']\n            }], DZ_QUEUECOMPLETE: [{\n                type: Output,\n                args: ['queueComplete']\n            }], DZ_TOTALUPLOADPROGRESS: [{\n                type: Output,\n                args: ['totalUploadProgress']\n            }], directiveRef: [{\n                type: ViewChild,\n                args: [DropzoneDirective, { static: true }]\n            }] } });\n\nclass DropzoneModule {\n}\nDropzoneModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: DropzoneModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropzoneModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: DropzoneModule, declarations: [DropzoneComponent, DropzoneDirective], imports: [CommonModule], exports: [CommonModule, DropzoneComponent, DropzoneDirective] });\nDropzoneModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: DropzoneModule, imports: [[CommonModule], CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: DropzoneModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [DropzoneComponent, DropzoneDirective],\n                    exports: [CommonModule, DropzoneComponent, DropzoneDirective]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPZONE_CONFIG, DropzoneComponent, DropzoneConfig, DropzoneDirective, DropzoneModule };\n","import { DropzoneConfigExt } from '../../../../../../../edit-types/src/DropzoneConfigExt';\r\n\r\nexport type DropzoneType = any;\r\n\r\nexport class DropzoneConfigInstance implements DropzoneConfigExt {\r\n  /** Subfolder and UsePortalRoot are updated from AdamBrowser */\r\n  disabled: boolean;\r\n  url: string;\r\n  headers: Record<string, string>;\r\n  acceptedFiles: string = null;\r\n  maxFiles = 1000;\r\n  parallelUploads = 1000;\r\n  autoReset: number = null;\r\n  errorReset: number = null;\r\n  cancelReset: number = null;\r\n  /** In MB. Upload will also be stopped on the server if file is larger than allowed */\r\n  maxFilesize = 20000;\r\n  /** In milliseconds */\r\n  timeout = 1800000;\r\n  paramName = 'uploadfile';\r\n  maxThumbnailFilesize = 10;\r\n  dictDefaultMessage = '';\r\n  addRemoveLinks = false;\r\n  previewsContainer = '.dropzone-previews';\r\n  /**\r\n   * We need a clickable, because otherwise the entire area is clickable,\r\n   * so i'm just making the preview clickable, as it's not important\r\n   */\r\n  clickable = '.dropzone-previews';\r\n\r\n  constructor(disabled: boolean, url: string, headers: Record<string, string>) {\r\n    this.disabled = disabled;\r\n    this.url = url;\r\n    this.headers = headers;\r\n  }\r\n}\r\n","export class WysiwygConstants {\r\n\r\n  /** Constant to mark the WYSIWYG dom tag */\r\n  static readonly classToDetectWysiwyg = \"class-distinguish-from-adam-dropzone\";\r\n}","import { WysiwygConstants } from '../../../../../../../field-string-wysiwyg/shared/wysiwyg.constants';\r\n\r\n\r\n/**\r\n * Special helper / constants so Dropzone works together with the WYSIWYG editor\r\n */\r\nexport class DropzoneWysiwyg {\r\n\r\n  /** If the last drop was on a WYSIWYG field */\r\n  isStringWysiwyg = false;\r\n\r\n  /** Allowed image / mime types on WYSIWYG */\r\n  imageTypes: string[] = [\"image/jpeg\", \"image/png\"];\r\n\r\n  // on onDrop we check if drop is on wysiwyg or not\r\n  detectWysiwygOnDrop(event: any) {\r\n    this.isStringWysiwyg = DropzoneWysiwyg.isParentWysiwyg((event.toElement as HTMLElement));\r\n  }\r\n  \r\n  // here we check if file is image type so we can cancel upload if it is also uploaded on wysiwyg\r\n  removeFilesHandledByWysiwyg(dropzone: any, file: any) {\r\n    if (this.isStringWysiwyg && this.imageTypes.some(x => x === file.type))\r\n      dropzone.removeFile(file);\r\n  }\r\n\r\n\r\n  static isParentWysiwyg(element: HTMLElement): boolean {\r\n    // Traverse the DOM to see if we can find the wysiwyg editor\r\n    do {\r\n      if (element == null) return false;\r\n      if (element?.classList.contains(WysiwygConstants.classToDetectWysiwyg)) return true;\r\n      element = element.parentElement;\r\n    } while (!element?.classList.contains(WysiwygConstants.classToDetectWysiwyg) || element.parentElement != document.body);\r\n    return false;\r\n  }\r\n\r\n}","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { NgClass } from '@angular/common';\r\nimport { AfterViewInit, Component, computed, inject, signal, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { DropzoneDirective, DropzoneModule } from 'ngx-dropzone-wrapper';\r\nimport { AdamItem } from '../../../../../../../edit-types/src/AdamItem';\r\nimport { DropzoneConfigExt } from '../../../../../../../edit-types/src/DropzoneConfigExt';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { FieldState } from '../../field-state';\r\nimport { WrappersCatalog } from '../wrappers.constants';\r\nimport { DropzoneConfigInstance, DropzoneType } from './dropzone-wrapper.models';\r\nimport { DropzoneWysiwyg } from './dropzone-wysiwyg';\r\n\r\n@Component({\r\n  selector: WrappersCatalog.DropzoneWrapper,\r\n  templateUrl: './dropzone-wrapper.component.html',\r\n  styleUrls: ['./dropzone-wrapper.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    DropzoneModule,\r\n  ],\r\n})\r\nexport class DropzoneWrapperComponent implements AfterViewInit {\r\n  \r\n  log = classLog({DropzoneWrapperComponent});\r\n\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild(DropzoneDirective) dropzoneRef: DropzoneDirective;\r\n\r\n  #fieldState = inject(FieldState);\r\n  #config = this.#fieldState.config;\r\n\r\n  dropzoneConfig = signal<DropzoneConfigExt>(null);\r\n  dropzoneDisabled = computed(() => this.#fieldState.ui().disabled || (this.dropzoneConfig()?.disabled ?? true));\r\n  \r\n  #wysiwygHelper = new DropzoneWysiwyg();\r\n\r\n  constructor(\r\n    private formConfig: FormConfigService,\r\n    private dnnContext: DnnContext,\r\n  ) {\r\n    this.extendFieldConfigWithDropZone();\r\n    this.#setConfig({});\r\n  }\r\n\r\n  extendFieldConfigWithDropZone() {\r\n    this.#config.dropzone = {\r\n      setConfig: (config) => this.#setConfig(config),\r\n      getConfig: () => this.dropzoneConfig(),\r\n      uploadFile: (image) => this.#uploadFile(image),\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.#setConfig({\r\n      previewsContainer: `.${this.#config.dropzonePreviewsClass} .dropzone-previews`,\r\n      clickable: `.${this.#config.dropzonePreviewsClass} .invisible-clickable`,\r\n    });\r\n  }\r\n\r\n  // on onDrop we check if drop is on wysiwyg or not\r\n  onDrop(event: any) {\r\n    this.#wysiwygHelper.detectWysiwygOnDrop(event);\r\n  }\r\n\r\n  // here we check if file is image type so we can cancel upload if it is also uploaded on wysiwyg\r\n  onAddedFile(file: any) {\r\n    this.#wysiwygHelper.removeFilesHandledByWysiwyg(this.dropzoneRef.dropzone(), file);\r\n  }\r\n\r\n  onUploadError(event: DropzoneType) {\r\n    this.log.fn('onUploadError', { event });\r\n    alert(`Dropzone upload error. Event ${event}`);\r\n    this.dropzoneRef.reset();\r\n  }\r\n\r\n  onUploadSuccess(event: DropzoneType) {\r\n    const l = this.log.fn('onUploadSuccess', { event });\r\n    const response: AdamItem = event[1]; // gets the server response as second argument.\r\n    if (!response.Error) {\r\n      if (this.#config.adam) {\r\n        this.#config.adam.onItemUpload(response);\r\n        this.#config.adam.refresh();\r\n      } else {\r\n        l.a(`Upload failed because: ADAM reference doesn't exist`);\r\n      }\r\n    } else {\r\n      l.a(`Upload failed because: ${response.Error}`);\r\n      alert(`Upload failed because: ${response.Error}`);\r\n    }\r\n    this.dropzoneRef.reset();\r\n  }\r\n\r\n  #setConfig(config: Partial<DropzoneConfigExt>) {\r\n    const contentType = this.#config.contentTypeNameId;\r\n    const entityGuid = this.#config.entityGuid;\r\n    const field = this.#config.fieldName;\r\n    const appId = this.formConfig.config.appId;\r\n\r\n    const startDisabled = this.#config.inputTypeSpecs.isExternal;\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(`app/auto/data/${contentType}/${entityGuid}/${field}?subfolder=&usePortalRoot=false&appId=${appId}`);\r\n    const headers = this.dnnContext.sxc.webApi.headers();\r\n\r\n    const newConfig = new DropzoneConfigInstance(startDisabled, url, headers);\r\n    const oldConfig = this.dropzoneConfig() ?? newConfig;\r\n\r\n    for (const key of Object.keys(newConfig))\r\n      (newConfig as any)[key] = (config as any)[key] ?? (oldConfig as any)[key];\r\n\r\n    // fixes\r\n    const syncUploadLimit = newConfig.maxFiles !== newConfig.parallelUploads;\r\n    if (syncUploadLimit) {\r\n      const uploadLimit = (newConfig.maxFiles >= newConfig.parallelUploads)\r\n        ? newConfig.maxFiles\r\n        : newConfig.parallelUploads;\r\n      newConfig.maxFiles = uploadLimit;\r\n      newConfig.parallelUploads = uploadLimit;\r\n    }\r\n\r\n    // Make sure dropzone accepts all files, since we'll process it afterwards\r\n    // only way to tell dropzone to accept all files is to remove acceptedFiles from config\r\n    // so if the config exists but is empty/null, we must completely remove it\r\n    const fixAcceptedFiles = newConfig.acceptedFiles == null || newConfig.acceptedFiles === '';\r\n    if (fixAcceptedFiles)\r\n      delete newConfig.acceptedFiles; \r\n\r\n    this.dropzoneConfig.set(newConfig);\r\n  }\r\n\r\n  #uploadFile(file: File & { upload?: { chunked: boolean; }; }) {\r\n    const dropzone = this.dropzoneRef.dropzone();\r\n    file.upload = { chunked: dropzone.defaultOptions.chunking };\r\n    dropzone.processFile(file);\r\n  }\r\n}\r\n","<div class=\"dropzone dropzone-container\" [ngClass]=\"{ 'dropzone-disabled': dropzoneDisabled() }\"\r\n  [dropzone]=\"dropzoneConfig()\" [disabled]=\"dropzoneDisabled()\" (error)=\"onUploadError($event)\"\r\n  (success)=\"onUploadSuccess($event)\" (addedFile)=\"onAddedFile($event)\" (drop)=\"onDrop($event)\">\r\n  <ng-container #fieldComponent></ng-container>\r\n</div>","import { NgZone } from '@angular/core';\r\nimport { EavWindow } from '../../../shared/models/eav-window.model';\r\nimport { ElementEventListener } from '../../shared/controls/element-event-listener.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport class DropzoneDraggingHelper {\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(private zone: NgZone) { }\r\n\r\n  /** Starts listening for dragover and drop events on a given element */\r\n  attach(htmlEl: HTMLElement) {\r\n    this.zone.runOutsideAngular(() => {\r\n      htmlEl.addEventListener('dragover', dragoverListener, { passive: true });\r\n      htmlEl.addEventListener('drop', dropListener, { passive: true });\r\n\r\n      this.eventListeners.push(\r\n        { element: htmlEl, type: 'dragover', listener: dragoverListener },\r\n        { element: htmlEl, type: 'drop', listener: dropListener },\r\n      );\r\n\r\n      function dragoverListener() {\r\n        clearTimeouts(window.windowBodyTimeouts); // clear timeouts from global array of timeouts which clear draggingClass from body\r\n        document.body.classList.add(window.draggingClass);\r\n      }\r\n      function dropListener() {\r\n        document.body.classList.remove(window.draggingClass);\r\n      }\r\n      function clearTimeouts(timeoutsArray: number[]) {\r\n        for (const timeout of timeoutsArray)\r\n          clearTimeout(timeout);\r\n        timeoutsArray.splice(0, timeoutsArray.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Removes event listeners from registered elements */\r\n  detach() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(({ element, type, listener }) => element.removeEventListener(type, listener));\r\n    });\r\n  }\r\n}\r\n","import { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const ContentExpandAnimation = [\r\n  trigger('itemShrinkAnimation', [\r\n    state(\r\n      'open',\r\n      style({\r\n        height: '30vh',\r\n      }),\r\n    ),\r\n    state(\r\n      'closed',\r\n      style({\r\n        height: '0vh',\r\n      }),\r\n    ),\r\n    transition('open => closed', [animate('300ms cubic-bezier(0.4, 0.0, 0.2, 1)')]),\r\n  ]),\r\n  trigger('contentExpandAnimation', [\r\n    state(\r\n      'closed',\r\n      style({\r\n        height: '0',\r\n      }),\r\n    ),\r\n    state(\r\n      'expanded',\r\n      style({\r\n        height: 'calc(100vh - {{bottomPixels}})', // 100px on desktop, 50px on mobile\r\n        maxHeight: 'calc(100vh - {{bottomPixels}})',\r\n      }),\r\n      { params: { bottomPixels: window.innerWidth > 600 ? '100px' : '50px' } },\r\n    ),\r\n    transition(\r\n      'closed => expanded',\r\n      [\r\n        animate(\r\n          '300ms cubic-bezier(0.4, 0.0, 0.2, 1)',\r\n          keyframes([\r\n            style({ height: '0vh', overflow: 'hidden' }),\r\n            style({ height: 'calc(100vh - {{bottomPixels}})', overflow: 'hidden' }),\r\n          ]),\r\n        ),\r\n      ],\r\n      { params: { bottomPixels: window.innerWidth > 600 ? '100px' : '50px' } },\r\n    ),\r\n  ]),\r\n];\r\n","import { Directive, ElementRef, input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({ selector: '[extended-fab-speed-dial-action]', standalone: true })\r\nexport class ExtendedFabSpeedDialActionDirective implements OnChanges {\r\n  disabled = input<boolean>(false);\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled != null) {\r\n      this.elementRef.nativeElement.toggleAttribute('disabled', this.disabled());\r\n    }\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extendedFabSpeedDialActionsContent]',\r\n  standalone: true\r\n})\r\nexport class ExtendedFabSpeedDialActionsContentDirective {\r\n  constructor(public templateRef: TemplateRef<unknown>) { }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extendedFabSpeedDialTriggerContent]',\r\n  standalone: true\r\n})\r\nexport class ExtendedFabSpeedDialTriggerContentDirective {\r\n  constructor(public templateRef: TemplateRef<unknown>) { }\r\n}\r\n","// tslint:disable-next-line:max-line-length\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { AfterContentInit, Component, ContentChild, ContentChildren, ElementRef, input, OnDestroy, QueryList, ViewEncapsulation } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, startWith } from 'rxjs';\r\nimport { BaseComponent } from '../../components/base.component';\r\nimport { ExtendedFabSpeedDialActionDirective } from './extended-fab-speed-dial-action.directive';\r\nimport { ExtendedFabSpeedDialActionsContentDirective } from './extended-fab-speed-dial-actions-content.directive';\r\nimport { ExtendedFabSpeedDialTriggerContentDirective } from './extended-fab-speed-dial-trigger-content.directive';\r\nimport { ExtendedFabSpeedDialTriggerDirective } from './extended-fab-speed-dial-trigger.directive';\r\n\r\n/**\r\n * Special Speed-Dial kind of FAB which opens more menu items on hover.\r\n *\r\n * IMPORTANT: to work it needs ca. 4 more directives.\r\n * So never import this component directly, but instead import the ExtendedFabSpeedDialImports.\r\n */\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'extended-fab-speed-dial',\r\n  templateUrl: './extended-fab-speed-dial.component.html',\r\n  styleUrls: ['./extended-fab-speed-dial.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  standalone: true,\r\n  imports: [\r\n    ExtendedFabSpeedDialTriggerContentDirective,\r\n    ExtendedFabSpeedDialActionsContentDirective,\r\n    ExtendedFabSpeedDialTriggerDirective,\r\n    ExtendedFabSpeedDialActionDirective,\r\n    NgTemplateOutlet\r\n  ],\r\n})\r\nexport class ExtendedFabSpeedDialComponent extends BaseComponent implements AfterContentInit, OnDestroy {\r\n  @ContentChild(ExtendedFabSpeedDialTriggerContentDirective) trigger: ExtendedFabSpeedDialTriggerContentDirective;\r\n  @ContentChild(ExtendedFabSpeedDialActionsContentDirective) actions: ExtendedFabSpeedDialActionsContentDirective;\r\n  @ContentChildren(ExtendedFabSpeedDialActionDirective, { read: ElementRef }) actionButtons: QueryList<ElementRef<HTMLButtonElement>>;\r\n\r\n  disabled = input<boolean>(false);\r\n\r\n  open$ = new BehaviorSubject(false);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.open$.pipe(distinctUntilChanged()),\r\n        this.actionButtons.changes.pipe(startWith(undefined)),\r\n      ]).subscribe(([open]) => {\r\n        this.actionButtons.forEach((btn, i, all) => {\r\n          const min = 0.3;\r\n          const max = Math.min(min + (all.length - 1) * 0.05, 0.6);\r\n          const step = (max - min) / (all.length - 1);\r\n          const transitionDuration = `${open ? min + step * i : max - step * i}s`;\r\n          if (btn.nativeElement.style.transitionDuration !== transitionDuration) {\r\n            btn.nativeElement.style.transitionDuration = transitionDuration;\r\n          }\r\n        });\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.open$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  setOpen(event: PointerEvent, open: boolean): void {\r\n    if (event.pointerType === 'touch') return;\r\n    this.open$.next(open);\r\n  }\r\n}\r\n","<div class=\"extended-fab-speed-dial\" [attr.disabled]=\"disabled() || null\" (pointerenter)=\"setOpen($event, true)\"\r\n  (pointerleave)=\"setOpen($event, false)\">\r\n  <div class=\"extended-fab-speed-dial-trigger\">\r\n    <ng-container [ngTemplateOutlet]=\"trigger?.templateRef\"></ng-container>\r\n  </div>\r\n  <div class=\"extended-fab-speed-dial-actions\">\r\n    <ng-container [ngTemplateOutlet]=\"actions?.templateRef\"></ng-container>\r\n  </div>\r\n</div>\r\n","import { Directive, ElementRef, input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extended-fab-speed-dial-trigger]',\r\n  standalone: true\r\n})\r\nexport class ExtendedFabSpeedDialTriggerDirective implements OnChanges {\r\n  disabled = input<boolean>(false);\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled != null) {\r\n      this.elementRef.nativeElement.toggleAttribute('disabled', this.disabled());\r\n    }\r\n  }\r\n}\r\n","<div [ngClass]=\"open() ? 'c-ew__container' : 'u-display-none'\">\r\n  <div #backdrop class=\"c-ew__backdrop\" (click)=\"closeDialog()\"></div>\r\n  <div #dialog class=\"c-ew__dialog mat-elevation-z24 u-border-radius\">\r\n    <div [ngClass]=\"{ 'c-ew__dialog-header mat-elevation-z2': open() }\">\r\n      <mat-card appearance=\"raised\" class=\"mat-elevation-z0\">\r\n        <button mat-icon-button class=\"back-arrow\" tippyTranslate=\"Form.Buttons.Return.Tip\" (click)=\"closeDialog()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span class=\"title mat-headline-4\">{{ basics().label }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <div [@itemShrinkAnimation]=\"open() ? 'closed' : 'open'\"></div>\r\n      <div\r\n        [class]=\"\r\n          'c-ew__dialog-content u-border-radius-bottom u-add-scrollbar u-hide-scrollbar' +\r\n          (applyEmptyClass() ? ' c-ew__dialog-content--empty' : '')\r\n        \"\r\n        [@contentExpandAnimation]=\"{\r\n          value: open() ? 'expanded' : 'closed',\r\n          params: { bottomPixels: calculateBottomPixels() },\r\n        }\"\r\n      >\r\n        <!-- This is where the content comes from the parent / calling HTML -->\r\n        <ng-content></ng-content>\r\n\r\n        <extended-fab-speed-dial class=\"adam\">\r\n          <ng-template extendedFabSpeedDialTriggerContent>\r\n            <button extended-fab-speed-dial-trigger matRipple (click)=\"closeDialog()\" [disabled]=\"isSaving()\">\r\n              <mat-icon>done</mat-icon>\r\n              <span>{{ 'Form.Buttons.Return.Tip' | translate }}</span>\r\n            </button>\r\n          </ng-template>\r\n          <ng-template extendedFabSpeedDialActionsContent>\r\n            <button\r\n              extended-fab-speed-dial-action\r\n              matRipple\r\n              [disabled]=\"formsStateService.saveButtonDisabled() || isSaving()\"\r\n              (click)=\"saveAll(false)\"\r\n            >\r\n              <span>{{ 'Form.Buttons.Save' | translate }}</span>\r\n              <mat-icon>save</mat-icon>\r\n            </button>\r\n            <button\r\n              extended-fab-speed-dial-action\r\n              matRipple\r\n              [disabled]=\"formsStateService.saveButtonDisabled() || isSaving()\"\r\n              (click)=\"saveAll(true)\"\r\n            >\r\n              <span>{{ 'Form.Buttons.SaveAndClose' | translate }}</span>\r\n              <mat-icon>done_all</mat-icon>\r\n            </button>\r\n          </ng-template>\r\n        </extended-fab-speed-dial>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AsyncPipe, CommonModule, NgClass } from '@angular/common';\r\nimport { Component, computed, effect, ElementRef, inject, input, NgZone, ViewChild } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from 'projects/core';\r\nimport { FeatureNames } from '../../../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../../../features/features-scoped.service';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { ExtendedFabSpeedDialImports } from '../../../../shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.imports';\r\nimport { EntityFormStateService } from '../../../entity-form/entity-form-state.service';\r\nimport { FormsStateService } from '../../../form/forms-state.service';\r\nimport { EditRoutingService } from '../../../routing/edit-routing.service';\r\nimport { FieldState } from '../../field-state';\r\nimport { DropzoneDraggingHelper } from '../dropzone-dragging.helper';\r\nimport { ContentExpandAnimation } from '../expand-dialog/content-expand.animation';\r\nimport { WrappersCatalog } from '../wrappers.constants';\r\n\r\n@Component({\r\n  selector: WrappersCatalog.DialogPopup,\r\n  templateUrl: './dialog-popup.component.html',\r\n  styleUrls: ['./dialog-popup.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatCardModule,\r\n    MatRippleModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TranslateModule,\r\n    ...ExtendedFabSpeedDialImports,\r\n    TippyDirective,\r\n    CommonModule,\r\n    AsyncPipe,\r\n  ],\r\n})\r\n// tslint:disable-next-line:max-line-length\r\nexport class DialogPopupComponent {\r\n  @ViewChild('backdrop') private backdropRef: ElementRef;\r\n  @ViewChild('dialog') private dialogRef: ElementRef;\r\n\r\n  protected fieldState = inject(FieldState);\r\n\r\n  public config = this.fieldState.config;\r\n  public basics = this.fieldState.basics;\r\n  #editRoutingService = inject(EditRoutingService);\r\n\r\n  applyEmptyClass = input<boolean>();\r\n\r\n  #dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n\r\n  #entityFormStateService = transient(EntityFormStateService);\r\n  isSaving = this.#entityFormStateService.isSaving;\r\n  te = this.#entityFormStateService.isSaving();\r\n\r\n  isSavingStatus: boolean;\r\n\r\n\r\n\r\n  constructor(\r\n    public formsStateService: FormsStateService,\r\n    private featuresService: FeaturesScopedService,\r\n    private zone: NgZone,\r\n  ) {\r\n\r\n    effect(() => {\r\n      this.isSavingStatus = this.#entityFormStateService.isSaving();\r\n    }, { allowSignalWrites: true });\r\n\r\n\r\n\r\n  }\r\n  open = this.fieldState.isOpen\r\n\r\n  ngAfterViewInit() {\r\n    this.#dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n    this.#dropzoneDraggingHelper.attach(this.backdropRef.nativeElement);\r\n    this.#dropzoneDraggingHelper.attach(this.dialogRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#dropzoneDraggingHelper.detach();\r\n  }\r\n\r\n  #hideAdamSponsor = this.featuresService.isEnabled[FeatureNames.NoSponsoredByToSic];\r\n  adamSponsorI18nKey = computed(() => this.#hideAdamSponsor()\r\n    ? 'Fields.Hyperlink.AdamFileManager.Name'\r\n    : 'Fields.Hyperlink.Default.Sponsor'\r\n  );\r\n\r\n  calculateBottomPixels() {\r\n    return window.innerWidth > 600 ? '100px' : '50px';\r\n  }\r\n\r\n  closeDialog() {\r\n    this.#editRoutingService.expand(false, this.config.index, this.config.entityGuid);\r\n  }\r\n\r\n  saveAll(close: boolean) {\r\n    this.formsStateService.triggerSave(close);\r\n  }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { AfterViewInit, ChangeDetectorRef, Component, computed, ElementRef, inject, NgZone, OnDestroy, signal, ViewChild, ViewContainerRef } from \"@angular/core\";\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { vh } from '../../../../shared/helpers/viewport.helpers';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { FormsStateService } from \"../../../form/forms-state.service\";\r\nimport { ConnectorHelper } from \"../../connector/connector.helper\";\r\nimport { FieldState } from \"../../field-state\";\r\nimport { FieldHelperTextComponent } from \"../../help-text/field-help-text.component\";\r\nimport { DialogPopupComponent } from \"../dialog-popup/dialog-popup.component\";\r\nimport { DropzoneDraggingHelper } from \"../dropzone-dragging.helper\";\r\nimport { WrappersCatalog } from \"../wrappers.constants\";\r\nimport { ContentExpandAnimation } from \"./content-expand.animation\";\r\nimport { PreviewHeight } from \"./expandable-wrapper.models\";\r\n\r\n@Component({\r\n  selector: WrappersCatalog.ExpandableWrapper,\r\n  templateUrl: './expandable-wrapper.component.html',\r\n  styleUrls: ['./expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  standalone: true,\r\n  imports: [\r\n    FieldHelperTextComponent,\r\n    DialogPopupComponent,\r\n    CommonModule,\r\n    DialogPopupComponent,\r\n    FieldHelperTextComponent\r\n],\r\n})\r\nexport class ExpandableWrapperComponent implements AfterViewInit, OnDestroy {\r\n  \r\n  log = classLog({ExpandableWrapperComponent});\r\n\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  /** Child tag which will contain the inner html */\r\n  @ViewChild('previewContainer') private previewContainerRef: ElementRef;\r\n\r\n  protected fieldState = inject(FieldState);\r\n  public config = this.fieldState.config;\r\n  protected basics = this.fieldState.basics;\r\n\r\n  protected settings = this.fieldState.settings;\r\n  protected ui = this.fieldState.ui;\r\n  protected uiValue = this.fieldState.uiValue;\r\n\r\n  focused = signal(false);\r\n\r\n  adamDisabled = this.config.adam.isDisabled;\r\n\r\n  previewHeight = computed(() => {\r\n    const settings = this.settings();\r\n    const previewHeight: PreviewHeight = {\r\n      minHeight: '36px',\r\n      maxHeight: '50vh',\r\n    };\r\n\r\n    if (this.config.inputTypeSpecs.inputType !== InputTypeCatalog.StringWysiwyg && settings.Dialog !== 'inline')\r\n      return previewHeight;\r\n\r\n    let rows = parseInt(settings.InlineInitialHeight, 10);\r\n    if (rows < 1)\r\n      rows = 1;\r\n\r\n    // header + rows\r\n    const maxHeightInPx = vh(50);\r\n    let minHeight = 40 + rows * 36;\r\n\r\n    if (minHeight > maxHeightInPx)\r\n      minHeight = maxHeightInPx;\r\n\r\n    previewHeight.minHeight = `${minHeight}px`;\r\n\r\n    return previewHeight;\r\n  })\r\n\r\n  private connectorCreator = transient(ConnectorHelper);\r\n  private dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    public formsStateService: FormsStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.config.focused$.subscribe(this.focused.set);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fn('ngAfterViewInit');\r\n\r\n    const componentTagName = this.config.inputTypeSpecs.componentTagName;\r\n    l.a('ExpandableWrapper created for:', { componentTagName });\r\n    this.connectorCreator.init(\r\n      componentTagName,\r\n      this.previewContainerRef,\r\n      this.viewContainerRef,\r\n      this.changeDetectorRef,\r\n    );\r\n\r\n    this.dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.log.fn('ngOnDestroy', null, 'destroying ExpandableWrapper');\r\n    this.dropzoneDraggingHelper.detach();\r\n  }\r\n}\r\n","export function vh(percentage: number) {\r\n  const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n  return (percentage * viewportHeight) / 100;\r\n}\r\n\r\nexport function vw(percentage: number) {\r\n  const viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n  return (percentage * viewportWidth) / 100;\r\n}\r\n","<app-dialog-popup>\r\n  <ng-container #fieldComponent></ng-container>\r\n</app-dialog-popup>\r\n<div class=\"c-ew__preview-holder\">\r\n  <mat-label class=\"c-ew__preview-label\" [ngClass]=\"{\r\n      'mat-caption' : uiValue(),\r\n      'mat-empty' : !uiValue(),\r\n      'mat-error' : ui().invalid && (ui().touched || ui().dirty) && !ui().disabled,\r\n      'color__primary' : !(ui().touchedAndInvalid) && !ui().disabled,\r\n      'my-label-disabled' : ui().disabled,\r\n      'c-ew__preview-label--focused': focused()\r\n      }\">\r\n    {{basics().labelWithRequired}}\r\n  </mat-label>\r\n  <div class=\"c-ew__preview\" [ngClass]=\"{\r\n      'c-ew__preview--invalid' : ui().invalid && (ui().touched || ui().dirty),\r\n      'c-ew__preview--disabled': ui().disabled,\r\n      'c-ew__preview--focused': focused()\r\n      }\">\r\n    <div class=\"c-ew__preview-container\">\r\n      <div #previewContainer class=\"c-ew__preview-content u-hide-scrollbar\" [ngClass]=\"{\r\n          'c-ew__preview-content--disabled': ui().disabled\r\n          }\" [ngStyle]=\"{\r\n          'min-height': previewHeight().minHeight,\r\n          'max-height': previewHeight().maxHeight\r\n          }\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-field-helper-text></app-field-helper-text>\r\n</div>\r\n","<!-- <pre>Wrapper.FeatureWarning Start - rEQ1: '{{ requiredFeatures()[0] }}'</pre> -->\r\n<div [ngClass]=\"{ mark: requiredFeatures().length }\">\r\n  <ng-container #fieldComponent></ng-container>\r\n  <!-- 2dm: for now, don't show the required features on the field, as we have it in the entire form -->\r\n  @if (false && requiredFeatures().length > 0) {\r\n    <div class=\"feature-warning\">\r\n      This uses features which are not licensed:\r\n      @for (feature of requiredFeatures(); track feature) {\r\n        {{ feature }}\r\n        <app-feature-icon [featureNameId]=\"feature\"></app-feature-icon>\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n<!-- <pre>Wrapper.FeatureWarning End</pre> -->\r\n","import { Component, inject, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { FieldState } from '../../field-state';\r\nimport { WrappersCatalog } from '../wrappers.constants';\r\nimport { computedObj } from '../../../../shared/signals/signal.utilities';\r\nimport { NgClass } from '@angular/common';\r\nimport { FeaturesScopedService } from '../../../../features/features-scoped.service';\r\nimport { FeatureIconComponent } from '../../../../features/feature-icon/feature-icon.component';\r\n\r\n@Component({\r\n  selector: WrappersCatalog.FeatureWarningWrapper,\r\n  templateUrl: './feature-warning-wrapper.component.html',\r\n  styleUrls: ['./feature-warning-wrapper.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    FeatureIconComponent,\r\n  ],\r\n})\r\nexport class FeatureWarningWrapperComponent {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  #fieldState = inject(FieldState);\r\n\r\n  #features = inject(FeaturesScopedService);\r\n\r\n  constructor() { }\r\n\r\n  requiredFeatures = computedObj('requiredFeatures', () => {\r\n    const req = this.#fieldState.requiredFeatures();\r\n    if (req.length === 0) return req;\r\n    // Check if feature is allowed to be used - NOT if it's enabled\r\n    return req.filter(f => !this.#features.allowUse[f]());\r\n  });\r\n\r\n  protected basics = this.#fieldState.basics;\r\n}\r\n","import { EmptyDefault } from 'projects/edit-types/src/FieldSettings-EmptyDefault';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from '../../logic/field-logic-base';\r\n\r\nexport class EmptyDefaultLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.EmptyDefault;\r\n\r\n  constructor() { super({ EmptyDefaultLogic }); }\r\n\r\n  update({ settings }: FieldLogicUpdate): FieldSettings {\r\n    const fixedSettings = { ...settings } as FieldSettings & EmptyDefault;\r\n    fixedSettings.Visible ??= true;\r\n    fixedSettings.Collapsed ??= false;\r\n    fixedSettings.Notes ??= '';\r\n    return fixedSettings;\r\n  }\r\n}\r\n\r\nFieldLogicBase.add(EmptyDefaultLogic);\r\n","<mat-card appearance=\"raised\" class=\"eav-card-group-child shadow-bottom-z-1\" [ngClass]=\"{ 'force-hide': basics().visible === false }\">\r\n\r\n  <!-- The title bar with ^v buttons to toggle state -->\r\n  <div class=\"eav-card-header-group-child\" (click)=\"toggleCollapse()\">\r\n    <div class=\"my-title-bar eav-card-title-group mat-body-2\">\r\n      <mat-icon class=\"title-arrow\">{{ collapsed() ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}\r\n      </mat-icon>\r\n      <span class=\"title\">\r\n        {{ basics().label || config.fieldName }}\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- The notes and all inner components -->\r\n  <mat-card-content class=\"eav-card-content-group-child\" [style.display]=\"collapsed() ? 'none' : 'block'\">\r\n    <div class=\"eav-layout-grid\">\r\n      <div class=\"eav-layout-grid__inner\">\r\n        <!-- Notes -->\r\n        @if (basics().notes; as note) {\r\n          <div class=\"eav-layout-grid__cell--span-12 mat-body-2\" align=\"start\">\r\n            <div class=\"description\" appChangeAnchorTarget [innerHtml]=\"note | safeHtml\"></div>\r\n          </div>\r\n        }\r\n        <!-- Components inside this -->\r\n        <div class=\"eav-layout-grid__cell--span-12\">\r\n          <ng-container #fieldComponent></ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>","import { NgClass } from '@angular/common';\r\nimport { Component, ViewChild, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EmptyDefault } from 'projects/edit-types/src/FieldSettings-EmptyDefault';\r\nimport { FieldSettings } from '../../../../../../../edit-types/src/FieldSettings';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { SafeHtmlPipe } from '../../../../shared/pipes/safe-html.pipe';\r\nimport { FieldsSettingsService } from '../../../state/fields-settings.service';\r\nimport { ChangeAnchorTargetDirective } from '../../directives/change-anchor-target.directive';\r\nimport { FieldState } from '../../field-state';\r\nimport { WrappersCatalog } from '../wrappers.constants';\r\nimport { EmptyDefaultLogic } from './collapsible-wrapper-logic';\r\n\r\n\r\n@Component({\r\n  selector: WrappersCatalog.CollapsibleWrapper,\r\n  templateUrl: './collapsible-wrapper.component.html',\r\n  styleUrls: ['./collapsible-wrapper.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    ChangeAnchorTargetDirective,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class CollapsibleWrapperComponent {\r\n\r\n  log = classLog({CollapsibleWrapperComponent});\r\n\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  #fieldState = inject(FieldState);\r\n  protected config = this.#fieldState.config;\r\n  protected group = this.#fieldState.group;\r\n  protected basics = this.#fieldState.basics;\r\n\r\n  /** Collapsed state - will be updated in various scenarios */\r\n  collapsed= this.#fieldState.settingExt('Collapsed');\r\n\r\n  #fieldsSettingsSvc = inject(FieldsSettingsService);\r\n\r\n  constructor() {\r\n    EmptyDefaultLogic.importMe();\r\n  }\r\n\r\n  toggleCollapse(): void {\r\n    const before = this.collapsed();\r\n    this.log.a('toggleCollapse', { before })\r\n    this.#fieldsSettingsSvc.updateSetting<FieldSettings & EmptyDefault>(this.#fieldState.name, { Collapsed: !before }, \"CollapsibleWrapperComponent\");\r\n  }\r\n}\r\n","import { Component, inject, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { FieldState } from '../../field-state';\r\nimport { WrappersCatalog } from '../wrappers.constants';\r\n\r\n@Component({\r\n  selector: WrappersCatalog.HiddenWrapper,\r\n  templateUrl: './hidden-wrapper.component.html',\r\n  standalone: true,\r\n  imports: [],\r\n})\r\nexport class HiddenWrapperComponent {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  protected fieldState = inject(FieldState);\r\n  protected basics = this.fieldState.basics;\r\n\r\n  constructor() { }\r\n}\r\n","<!-- <pre>Wrapper.Hidden Start - VisibleAndEnabled: '{{ basics().visibleAndEnabled }}'</pre> -->\r\n<div [hidden]=\"!basics().visible\">\r\n  <ng-container #fieldComponent></ng-container>\r\n</div>\r\n<!-- <pre>Wrapper.Hidden End</pre> -->\r\n","<app-dialog-popup>\r\n  <ng-container #fieldComponent></ng-container>\r\n</app-dialog-popup>\r\n\r\n<!-- preview -->\r\n@if (preview(); as preV) {\r\n  <div class=\"c-hyperlink-default-field-preview\">\r\n    <div\r\n      class=\"c-ew__preview c-ew__preview--hyperlink\"\r\n      [ngClass]=\"{\r\n        'c-ew__preview--disabled': ui().disabled,\r\n        'c-ew__preview--last-in-group': config.isLastInGroup,\r\n      }\"\r\n    >\r\n      <!-- image / icon -->\r\n      <div\r\n        class=\"thumbnail-before-input\"\r\n        tippyTranslate=\"Fields.Hyperlink.Default.Fullscreen\"\r\n        [tippyDisabled]=\"ui().disabled\"\r\n        [ngClass]=\"{\r\n          'icon-before-input': uiValue() && !preV.isImage,\r\n          'thumbnail-before-input--disabled': ui().disabled,\r\n        }\"\r\n        [ngStyle]=\"{ 'background-image': uiValue() && preV.isImage ? preV.thumbnailUrl : '' }\"\r\n        (click)=\"expandDialog()\"\r\n      >\r\n        @if (uiValue() && !preV.isImage) {\r\n          <mat-icon [tippy]=\"preV.url\" tippyPlacement=\"right\" [svgIcon]=\"preV.icon\"></mat-icon>\r\n        }\r\n      </div>\r\n      <!-- field -->\r\n      <div class=\"c-ew__preview-field--short\">\r\n        <!-- input -->\r\n        <div class=\"hyperlink-input-link-wrapper\">\r\n          <mat-form-field\r\n            color=\"accent\"\r\n            class=\"eav-mat-form-field\"\r\n            [ngClass]=\"{\r\n              'mat-form-field-invalid': ui().touchedAndInvalid,\r\n            }\"\r\n          >\r\n            <input\r\n              matInput\r\n              class=\"eav-translate-on-dblclick\"\r\n              tippyTranslate=\"Fields.Hyperlink.Default.Tooltip\"\r\n              tippyPlacement=\"top\"\r\n              [placeholder]=\"basics().placeholder\"\r\n              (change)=\"setValue($event)\"\r\n              [disabled]=\"ui().disabled\"\r\n              (blur)=\"markAsTouched()\"\r\n              [value]=\"uiValue()\"\r\n              (keyup)=\"setValue($event)\"\r\n              appPasteClipboardImage\r\n              [config]=\"config\"\r\n              [elementType]=\"'input'\"\r\n            />\r\n            @if (buttonAdam() || buttonPage()) {\r\n              <div matTextSuffix class=\"c-ew__preview-suffix\">\r\n                <div\r\n                  class=\"c-ew__preview-suffix-text\"\r\n                  fxHide\r\n                  fxShow.gt-xs\r\n                  [ngClass]=\"{\r\n                    'c-ew__preview-suffix-text--disabled': ui().disabled,\r\n                  }\"\r\n                >\r\n                  {{ buttonAdam() ? ('Fields.Hyperlink.AdamFileManager.Hint' | translate) : '' }}\r\n                </div>\r\n                <!-- Open Dialog -->\r\n                @if (buttonAdam()) {\r\n                  <button\r\n                    mat-icon-button\r\n                    class=\"c-ew__preview-suffix-icon\"\r\n                    tippyTranslate=\"Fields.Hyperlink.Default.Fullscreen\"\r\n                    appClickStopPropagation\r\n                    [disabled]=\"ui().disabled\"\r\n                    (click)=\"expandDialog()\"\r\n                  >\r\n                    <mat-icon svgIcon=\"apple-outlined\"></mat-icon>\r\n                  </button>\r\n                }\r\n                <button\r\n                  mat-icon-button\r\n                  class=\"c-ew__preview-suffix-icon\"\r\n                  appClickStopPropagation\r\n                  [disabled]=\"!adamItem()?._imageConfigurationContentType\"\r\n                  [ngClass]=\"{ 'metadata-exists': adamItem()?._imageConfigurationId > 0 }\"\r\n                  tippyTranslate=\"Fields.Hyperlink.AdamFileManager.ImageSettings\"\r\n                  (click)=\"openImageConfiguration(adamItem())\"\r\n                >\r\n                  <mat-icon\r\n                    [tippyTranslate]=\"\r\n                      enableImageConfiguration()\r\n                        ? 'Fields.Hyperlink.AdamFileManager.ImageSettingsUnavailable'\r\n                        : 'Fields.Hyperlink.AdamFileManager.ImageSettingsDisabled'\r\n                    \"\r\n                    [tippyDisabled]=\"adamItem()?._imageConfigurationContentType\"\r\n                    >filter_center_focus</mat-icon\r\n                  >\r\n                </button>\r\n                @if (buttonPage()) {\r\n                  <button\r\n                    mat-icon-button\r\n                    class=\"c-ew__preview-suffix-icon\"\r\n                    tippyTranslate=\"Fields.Hyperlink.Default.PageTip\"\r\n                    appClickStopPropagation\r\n                    [disabled]=\"ui().disabled\"\r\n                    (click)=\"openPagePicker()\"\r\n                  >\r\n                    <mat-icon svgIcon=\"sitemap\"></mat-icon>\r\n                  </button>\r\n                }\r\n              </div>\r\n            }\r\n            <mat-label [ngClass]=\"{ 'mat-error': ui().touchedAndInvalid }\">\r\n              {{ basics().labelWithRequired }}\r\n            </mat-label>\r\n          </mat-form-field>\r\n          <!-- link absolutely positioned above input -->\r\n          @if (preV.floatingText) {\r\n            <div class=\"hyperlink-floating\" fxHide fxShow.gt-xs>\r\n              <div class=\"hyperlink-floating__value\">{{ uiValue() }}</div>\r\n              <div class=\"hyperlink-floating__url-box\">\r\n                <a [href]=\"preV.url\" target=\"_blank\" tabindex=\"-1\" class=\"hyperlink-floating__url\" [tippy]=\"preV.url\">\r\n                  <span>{{ preV.floatingText }}</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n        <!-- helper text and adam text -->\r\n        <div class=\"c__helper-wrapper\">\r\n          <app-field-helper-text class=\"c__helper-wrapper--left\" [hyperlinkDefaultWrapperFix]=\"true\"> </app-field-helper-text>\r\n          @if (buttonAdam()) {\r\n            <div class=\"c-ew__preview-field-hint c__helper-wrapper--right\">\r\n              <span>{{ adamSponsorI18nKey() | translate }}</span>\r\n              <app-feature-icon-text [featureNameId]=\"'NoSponsoredByToSic'\"></app-feature-icon-text>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { CommonModule, NgClass, NgStyle } from \"@angular/common\";\r\nimport { AfterViewInit, ChangeDetectorRef, Component, computed, inject, NgZone, OnDestroy, ViewChild, ViewContainerRef } from \"@angular/core\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { FeatureIconTextComponent } from '../../../../features/feature-icon-text/feature-icon-text.component';\r\nimport { FeatureNames } from '../../../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../../../features/features-scoped.service';\r\nimport { SignalEquals } from '../../../../shared/signals/signal-equals';\r\nimport { FormConfigService } from \"../../../form/form-config.service\";\r\nimport { FormsStateService } from \"../../../form/forms-state.service\";\r\nimport { EditRoutingService } from \"../../../routing/edit-routing.service\";\r\nimport { LinkCacheService } from \"../../../shared/adam/link-cache.service\";\r\nimport { HyperlinkDefaultBaseComponent } from \"../../basic/hyperlink-default/hyperlink-default-base.component\";\r\nimport { PasteClipboardImageDirective } from \"../../directives/paste-clipboard-image.directive\";\r\nimport { FieldState } from \"../../field-state\";\r\nimport { FieldHelperTextComponent } from \"../../help-text/field-help-text.component\";\r\nimport { DialogPopupComponent } from \"../dialog-popup/dialog-popup.component\";\r\nimport { DropzoneDraggingHelper } from \"../dropzone-dragging.helper\";\r\nimport { ContentExpandAnimation } from \"../expand-dialog/content-expand.animation\";\r\nimport { WrappersCatalog } from \"../wrappers.constants\";\r\nimport { TippyDirective } from './../../../../shared/directives/tippy.directive';\r\n\r\n\r\n@Component({\r\n  selector: WrappersCatalog.HyperlinkDefaultExpandableWrapper,\r\n  templateUrl: './hyperlink-default-expandable-wrapper.component.html',\r\n  styleUrls: ['./hyperlink-default-expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    NgStyle,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    DialogPopupComponent,\r\n    FieldHelperTextComponent,\r\n    FeatureIconTextComponent,\r\n    PasteClipboardImageDirective,\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n  ],\r\n})\r\n// tslint:disable-next-line:max-line-length\r\nexport class HyperlinkDefaultExpandableWrapperComponent extends HyperlinkDefaultBaseComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  protected fieldState = inject(FieldState);\r\n  public config = this.fieldState.config;\r\n  protected basics = this.fieldState.basics;\r\n\r\n  protected buttonAdam = computed(() => this.fieldState.settings().Buttons.includes('adam'), SignalEquals.bool);\r\n  protected buttonPage = computed(() => this.fieldState.settings().Buttons.includes('page'), SignalEquals.bool);\r\n  protected enableImageConfiguration= this.fieldState.settingExt('EnableImageConfiguration');\r\n\r\n  private dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n  private editRoutingService: EditRoutingService;\r\n\r\n  constructor(\r\n    eavService: FormConfigService,\r\n    matDialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    linkCacheService: LinkCacheService,\r\n    editRoutingService: EditRoutingService,\r\n    private zone: NgZone,\r\n    public formsStateService: FormsStateService,\r\n    private featuresService: FeaturesScopedService,\r\n  ) {\r\n    super(\r\n      eavService,\r\n      matDialog,\r\n      viewContainerRef,\r\n      changeDetectorRef,\r\n      linkCacheService,\r\n      formsStateService,\r\n    );\r\n    this.editRoutingService = editRoutingService;\r\n  }\r\n\r\n  #hideAdamSponsor = this.featuresService.isEnabled[FeatureNames.NoSponsoredByToSic];\r\n  adamSponsorI18nKey = computed(() => this.#hideAdamSponsor()\r\n    ? 'Fields.Hyperlink.AdamFileManager.Name'\r\n    : 'Fields.Hyperlink.Default.Sponsor'\r\n  );\r\n\r\n  ngAfterViewInit() {\r\n    this.dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dropzoneDraggingHelper.detach();\r\n  }\r\n\r\n  markAsTouched() {\r\n    this.fieldState.ui().markTouched();\r\n  }\r\n\r\n  setValue(event: Event) {\r\n    const newValue = (event.target as HTMLInputElement).value;\r\n    this.fieldState.ui().setIfChanged(newValue);\r\n  }\r\n\r\n  expandDialog() {\r\n    if (this.fieldState.ui().disabled) return;\r\n    this.editRoutingService.expand(true, this.config.index, this.config.entityGuid);\r\n  }\r\n}\r\n","<app-dialog-popup [applyEmptyClass]=\"true\">\r\n  <ng-container #fieldComponent></ng-container>\r\n</app-dialog-popup>\r\n\r\n<!-- preview -->\r\n<div class=\"c-ew__preview-holder\">\r\n  <mat-label\r\n    class=\"c-ew__preview-label c-ew__color--primary\"\r\n    [ngClass]=\"{\r\n      'mat-caption': itemsNumber() > 0,\r\n      'mat-empty': itemsNumber() === 0,\r\n      'mat-error': ui().invalid && !config.initialDisabled,\r\n      color__primary: !ui().invalid && !config.initialDisabled,\r\n      'my-label-disabled': config.initialDisabled,\r\n    }\"\r\n  >\r\n    {{ basics().labelWithRequired }}\r\n  </mat-label>\r\n  <div\r\n    matRipple\r\n    class=\"c-ew__preview mat-ripple\"\r\n    [matRippleAnimation]=\"{ enterDuration: 360 }\"\r\n    (click)=\"expandDialog()\"\r\n    [ngClass]=\"{\r\n      'c-ew__preview--invalid': ui().invalid,\r\n      'c-ew__preview--disabled': config.initialDisabled,\r\n    }\"\r\n  >\r\n    <div [ngClass]=\"uiValue() ? 'c-ew__preview-container' : 'c-ew__preview-container--empty'\">\r\n      <div class=\"c-ew__preview-content\">\r\n        @for (item of items(); track trackByFn($index, item)) {\r\n          <!-- folders -->\r\n          @if (item.IsFolder) {\r\n            <div>\r\n              <div class=\"adam-browse-background-icon\">\r\n                <mat-icon svgIcon=\"folder\"></mat-icon>\r\n                <div class=\"adam-short-label mat-caption\">{{ item.Name }}</div>\r\n              </div>\r\n            </div>\r\n          }\r\n          <!-- files -->\r\n          @if (!item.IsFolder) {\r\n            <div>\r\n              @if (item.Type !== \"image\") {\r\n                <div class=\"adam-browse-background-icon\">\r\n                  @if (item._isMaterialIcon) {\r\n                    <mat-icon>{{ item._icon }}</mat-icon>\r\n                  }\r\n                  @if (!item._isMaterialIcon) {\r\n                    <mat-icon>{{ item._icon }}</mat-icon>\r\n                  }\r\n                  <div class=\"adam-short-label mat-caption\">{{ item.Name }}</div>\r\n                </div>\r\n              }\r\n              @if (item.Type === \"image\") {\r\n                <div class=\"adam-browse-background-image\">\r\n                  <img vm-dz-thumbnail=\"\" alt=\"{{ item.Id }}:{{ item.Name }}\" [src]=\"item.ThumbnailUrl\" />\r\n                </div>\r\n              }\r\n            </div>\r\n          }\r\n        }\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- hints -->\r\n  <div class=\"mat-caption c-ew__preview-hint\">\r\n    <div class=\"c__helper-wrapper--left\">\r\n      <app-field-helper-text></app-field-helper-text>\r\n    </div>\r\n    <div class=\"c__helper-wrapper--right c-ew__preview-hint-text\" fxHide fxShow.gt-xs>\r\n      <span>{{ adamSponsorI18nKey() | translate }} </span>\r\n      <app-feature-icon-text [featureNameId]=\"'NoSponsoredByToSic'\"></app-feature-icon-text>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { AfterViewInit, Component, computed, inject, NgZone, OnDestroy, ViewChild, ViewContainerRef } from \"@angular/core\";\r\nimport { MatRippleModule } from \"@angular/material/core\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { AdamItem } from '../../../../../../../edit-types/src/AdamItem';\r\nimport { FeatureIconTextComponent } from \"../../../../features/feature-icon-text/feature-icon-text.component\";\r\nimport { FeatureNames } from '../../../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../../../features/features-scoped.service';\r\nimport { SignalEquals } from '../../../../shared/signals/signal-equals';\r\nimport { FormsStateService } from \"../../../form/forms-state.service\";\r\nimport { EditRoutingService } from \"../../../routing/edit-routing.service\";\r\nimport { FieldState } from \"../../field-state\";\r\nimport { FieldHelperTextComponent } from \"../../help-text/field-help-text.component\";\r\nimport { DialogPopupComponent } from \"../dialog-popup/dialog-popup.component\";\r\nimport { DropzoneDraggingHelper } from \"../dropzone-dragging.helper\";\r\nimport { ContentExpandAnimation } from \"../expand-dialog/content-expand.animation\";\r\nimport { WrappersCatalog } from \"../wrappers.constants\";\r\n\r\n@Component({\r\n  selector: WrappersCatalog.HyperlinkLibraryExpandableWrapper,\r\n  templateUrl: './hyperlink-library-expandable-wrapper.component.html',\r\n  styleUrls: ['./hyperlink-library-expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  standalone: true,\r\n  imports: [\r\n    DialogPopupComponent,\r\n    MatIconModule,\r\n    MatRippleModule,\r\n    FieldHelperTextComponent,\r\n    FeatureIconTextComponent,\r\n    TranslateModule,\r\n    CommonModule,\r\n  ],\r\n})\r\n// tslint:disable-next-line:max-line-length\r\nexport class HyperlinkLibraryExpandableWrapperComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  protected fieldState = inject(FieldState);\r\n  protected config = this.fieldState.config;\r\n  protected basics = this.fieldState.basics;\r\n\r\n  protected ui = this.fieldState.ui;\r\n  protected uiValue = this.fieldState.uiValue;\r\n\r\n  protected items = computed(() => this.config.adam.items().slice(0, 9));\r\n  protected itemsNumber = computed(() => this.config.adam.items().length, SignalEquals.number);\r\n\r\n  #hideAdamSponsor = this.featuresService.isEnabled[FeatureNames.NoSponsoredByToSic];\r\n  adamSponsorI18nKey = computed(() => this.#hideAdamSponsor()\r\n    ? 'Fields.Hyperlink.AdamFileManager.Name'\r\n    : 'Fields.Hyperlink.Default.Sponsor'\r\n  );\r\n\r\n  private dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n\r\n  constructor(\r\n    private zone: NgZone,\r\n    private editRoutingService: EditRoutingService,\r\n    public formsStateService: FormsStateService,\r\n    private featuresService: FeaturesScopedService,\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dropzoneDraggingHelper.detach();\r\n  }\r\n\r\n  trackByFn(index: number, item: AdamItem) {\r\n    return item.Id;\r\n  }\r\n\r\n  expandDialog() {\r\n    if (this.config.initialDisabled) return;\r\n    this.editRoutingService.expand(true, this.config.index, this.config.entityGuid);\r\n  }\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { Component, inject, ViewChild, ViewContainerRef } from \"@angular/core\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { FormsStateService } from \"../../../form/forms-state.service\";\r\nimport { FieldState } from \"../../field-state\";\r\nimport { DialogPopupComponent } from \"../dialog-popup/dialog-popup.component\";\r\nimport { ContentExpandAnimation } from \"../expand-dialog/content-expand.animation\";\r\nimport { WrappersCatalog } from \"../wrappers.constants\";\r\n\r\n\r\n@Component({\r\n  selector: WrappersCatalog.PickerExpandableWrapper,\r\n  templateUrl: './picker-expandable-wrapper.component.html',\r\n  styleUrls: ['./picker-expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    DialogPopupComponent,\r\n    DialogPopupComponent,\r\n    CommonModule,\r\n  ],\r\n})\r\nexport class PickerExpandableWrapperComponent {\r\n\r\n  log = classLog({ PickerExpandableWrapperComponent });\r\n\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('previewComponent', { static: true, read: ViewContainerRef }) previewComponent: ViewContainerRef;\r\n\r\n  protected fieldState = inject(FieldState);\r\n  public config = this.fieldState.config;\r\n  protected basics = this.fieldState.basics;\r\n\r\n  constructor(\r\n    public formsStateService: FormsStateService,\r\n  ) { }\r\n}\r\n","<!--\r\n  Dialog part for large picker\r\n  Should only show when dialogIsOpen() is true.\r\n  It must be part of the DOM already (so no @if) as it is used in the code.\r\n-->\r\n<app-dialog-popup>\r\n  <div class=\"eav-layout-grid\">\r\n    <div class=\"eav-layout-grid__inner\">\r\n      <mat-card class=\"eav-card eav-layout-grid__cell--span-12 u-border-radius shadow-bottom-z-1\">\r\n        <ng-container #fieldComponent></ng-container>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</app-dialog-popup>\r\n<!-- Preview = inline search or pills -->\r\n<ng-container #previewComponent></ng-container>","import { Type } from '@angular/core';\r\nimport { InputTypeCatalog } from '../../shared/fields/input-type-catalog';\r\nimport { LocalizationWrapperComponent } from '../fields/wrappers/localization/localization-wrapper.component';\r\nimport { BooleanDefaultComponent } from './basic/boolean-default/boolean-default.component';\r\nimport { BooleanTristateComponent } from './basic/boolean-tristate/boolean-tristate.component';\r\nimport { CustomDefaultComponent } from './basic/custom-default/custom-default.component';\r\nimport { CustomJsonEditorComponent } from './basic/custom-json-editor/custom-json-editor.component';\r\nimport { DatetimeDefaultComponent } from './basic/datetime-default/datetime-default.component';\r\nimport { EmptyDefaultComponent } from './basic/empty-default/empty-default.component';\r\nimport { EmptyMessageComponent } from './basic/empty-message/empty-message.component';\r\nimport { EntityContentBlockComponent } from './basic/entity-content-blocks/entity-content-blocks.component';\r\nimport { EntityDefaultComponent } from './basic/entity-default/entity-default.component';\r\nimport { EntityPickerComponent } from './basic/entity-picker/entity-picker.component';\r\nimport { EntityQueryComponent } from './basic/entity-query/entity-query.component';\r\nimport { ExternalWebComponentComponent } from './basic/external-web-component/external-web-component.component';\r\nimport { HyperlinkDefaultComponent } from './basic/hyperlink-default/hyperlink-default.component';\r\nimport { HyperlinkLibraryComponent } from './basic/hyperlink-library/hyperlink-library.component';\r\nimport { NumberDefaultComponent } from './basic/number-default/number-default.component';\r\nimport { NumberDropdownComponent } from './basic/number-dropdown/number-dropdown.component';\r\nimport { NumberPickerComponent } from './basic/number-picker/number-picker.component';\r\nimport { StringDefaultComponent } from './basic/string-default/string-default.component';\r\nimport { StringDropdownQueryComponent } from './basic/string-dropdown-query/string-dropdown-query.component';\r\nimport { StringDropdownComponent } from './basic/string-dropdown/string-dropdown.component';\r\nimport { StringFontIconPickerComponent } from './basic/string-font-icon-picker/string-font-icon-picker.component';\r\nimport { StringPickerComponent } from './basic/string-picker/string-picker.component';\r\nimport { StringTemplatePickerComponent } from './basic/string-template-picker/string-template-picker.component';\r\nimport { StringUrlPathComponent } from './basic/string-url-path/string-url-path.component';\r\nimport { AdamWrapperComponent } from './wrappers/adam/adam-wrapper.component';\r\nimport { DropzoneWrapperComponent } from './wrappers/dropzone/dropzone-wrapper.component';\r\nimport { ExpandableWrapperComponent } from './wrappers/expand-dialog/expandable-wrapper.component';\r\nimport { FeatureWarningWrapperComponent } from './wrappers/feature-warning/feature-warning-wrapper.component';\r\nimport { CollapsibleWrapperComponent } from './wrappers/group/collapsible-wrapper.component';\r\nimport { HiddenWrapperComponent } from './wrappers/hidden/hidden-wrapper.component';\r\nimport { HyperlinkDefaultExpandableWrapperComponent } from './wrappers/hyperlink-dialog/hyperlink-default-expandable-wrapper.component';\r\nimport { HyperlinkLibraryExpandableWrapperComponent } from './wrappers/hyperlink-library-dialog/hyperlink-library-expandable-wrapper.component';\r\nimport { PickerExpandableWrapperComponent } from './wrappers/picker-dialog/picker-expandable-wrapper.component';\r\nimport { WrappersCatalog } from './wrappers/wrappers.constants';\r\n\r\nexport const InputComponents: Record<string, Type<any>> = {\r\n  // Wrappers\r\n  [WrappersCatalog.AdamWrapper]: AdamWrapperComponent,\r\n  [WrappersCatalog.CollapsibleWrapper]: CollapsibleWrapperComponent,\r\n  [WrappersCatalog.DropzoneWrapper]: DropzoneWrapperComponent,\r\n  [WrappersCatalog.PickerExpandableWrapper]: PickerExpandableWrapperComponent,\r\n  [WrappersCatalog.ExpandableWrapper]: ExpandableWrapperComponent,\r\n  [WrappersCatalog.HiddenWrapper]: HiddenWrapperComponent,\r\n  [WrappersCatalog.FeatureWarningWrapper]: FeatureWarningWrapperComponent,\r\n  [WrappersCatalog.HyperlinkDefaultExpandableWrapper]: HyperlinkDefaultExpandableWrapperComponent,\r\n  [WrappersCatalog.HyperlinkLibraryExpandableWrapper]: HyperlinkLibraryExpandableWrapperComponent,\r\n  [WrappersCatalog.LocalizationWrapper]: LocalizationWrapperComponent,\r\n\r\n  // Input Types\r\n  [InputTypeCatalog.BooleanDefault]: BooleanDefaultComponent,\r\n  [InputTypeCatalog.BooleanTristate]: BooleanTristateComponent,\r\n  [InputTypeCatalog.CustomDefault]: CustomDefaultComponent,\r\n  [InputTypeCatalog.CustomJsonEditor]: CustomJsonEditorComponent,\r\n  [InputTypeCatalog.DateTimeDefault]: DatetimeDefaultComponent,\r\n  [InputTypeCatalog.EmptyDefault]: EmptyDefaultComponent,\r\n  [InputTypeCatalog.EmptyMessage]: EmptyMessageComponent,\r\n  [InputTypeCatalog.EntityContentBlocks]: EntityContentBlockComponent,\r\n  [InputTypeCatalog.EntityDefault]: EntityDefaultComponent,\r\n  [InputTypeCatalog.EntityQuery]: EntityQueryComponent,\r\n  [InputTypeCatalog.ExternalWebComponent]: ExternalWebComponentComponent,\r\n  [InputTypeCatalog.HyperlinkDefault]: HyperlinkDefaultComponent,\r\n  [InputTypeCatalog.HyperlinkLibrary]: HyperlinkLibraryComponent,\r\n  [InputTypeCatalog.NumberDefault]: NumberDefaultComponent,\r\n  [InputTypeCatalog.NumberDropdown]: NumberDropdownComponent,\r\n  [InputTypeCatalog.StringDefault]: StringDefaultComponent,\r\n  [InputTypeCatalog.StringDropdown]: StringDropdownComponent,\r\n  [InputTypeCatalog.StringDropdownQuery]: StringDropdownQueryComponent,\r\n  [InputTypeCatalog.StringFontIconPicker]: StringFontIconPickerComponent,\r\n  [InputTypeCatalog.StringJson]: CustomJsonEditorComponent,\r\n  [InputTypeCatalog.StringTemplatePicker]: StringTemplatePickerComponent,\r\n  [InputTypeCatalog.StringUrlPath]: StringUrlPathComponent,\r\n\r\n  // Pickers\r\n  [InputTypeCatalog.EntityPicker]: EntityPickerComponent,\r\n  [InputTypeCatalog.StringPicker]: StringPickerComponent,\r\n  [InputTypeCatalog.NumberPicker]: NumberPickerComponent,\r\n};\r\n","import { computed, signal } from '@angular/core';\r\nimport { computedObj } from 'projects/eav-ui/src/app/shared/signals/signal.utilities';\r\nimport { Adam } from '../../../../../../../../edit-types/src/Adam';\r\nimport { AdamConfig } from '../../../../../../../../edit-types/src/AdamConfig';\r\nimport { AdamItem } from '../../../../../../../../edit-types/src/AdamItem';\r\nimport { classLog } from '../../../../../shared/logging';\r\nimport { AdamBrowserComponent } from './adam-browser.component';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  setConfig: true,\r\n  refresh: true,\r\n}\r\n\r\n/**\r\n * Helper to connect ADAM.\r\n * It will be added to the field state early on, but won't work until the browser is initialized.\r\n */\r\nexport class AdamConnector implements Adam {\r\n  \r\n  log = classLog({AdamConnector}, logSpecs);\r\n\r\n  get browser() {\r\n    const b = this.#browser();\r\n    if (b) return b;\r\n    throw new Error('Browser not set');\r\n  }\r\n\r\n  public setBrowser(browser: AdamBrowserComponent) {\r\n    this.#browser.set(browser);\r\n  }\r\n  #browser = signal<AdamBrowserComponent>(null);\r\n\r\n  #items = computedObj('items', () => this.#browser()?.items() ?? [] satisfies AdamItem[]);\r\n  get items() { return this.#items };\r\n\r\n  public toggle(usePortalRoot: boolean, showImagesOnly: boolean) {\r\n    this.log.fn('toggle', { usePortalRoot, showImagesOnly });\r\n    this.browser.toggle(usePortalRoot, showImagesOnly)\r\n  };\r\n\r\n  #count = 0;\r\n\r\n  public setConfig(config: Partial<AdamConfig>) {\r\n    const l = this.log.fnIf('setConfig', { config, count: this.#count });\r\n    this.#count++;\r\n\r\n    if (this.#count > 10)\r\n      throw new Error('Infinite loop');\r\n\r\n    this.browser.setConfig(config);\r\n    l.end();\r\n  };\r\n  public getConfig() { return this.browser.adamConfig() };\r\n\r\n  public isDisabled = computed(() => this.#browser()?.adamConfig()?.disabled ?? true);\r\n\r\n  onItemClick() { return; }\r\n\r\n  onItemUpload() { return; }\r\n\r\n  refresh() {\r\n    this.log.fnIf('refresh');\r\n    this.browser.fetchItems()\r\n  }\r\n\r\n}","import { FieldSettings } from './FieldSettings';\r\nimport { EmptyDefault } from './FieldSettings-EmptyDefault';\r\n\r\n/**\r\n * Goal of this is to provide the basic settings for a control\r\n * in the BaseFieldComponent<T = FieldValue>\r\n * to replace all the many subscriptions etc.\r\n * with a simple signal containing the important settings.\r\n */\r\nexport class BasicControlSettings {\r\n  /** Label to show on an input field */\r\n  label: string;\r\n\r\n  /** Notes to show below an input field */\r\n  notes: string;\r\n\r\n  /** Label with a * if required */\r\n  labelWithRequired: string;\r\n\r\n  /** Placeholder to show on an input field */\r\n  placeholder: string;\r\n\r\n  /** If the field is required */\r\n  required: boolean;\r\n\r\n  /** Real final visibility. Also respects if it was disabled by the ItemFieldVisibility. */\r\n  visible: boolean;\r\n\r\n  // /** Original visibility, more as info. ATM not used any where. */\r\n  // visibilityRaw: boolean;\r\n\r\n  // /** Information if this field was forcibly disabled */\r\n  // visibilityDisabled: boolean;\r\n\r\n  /** If the field is collapsed */\r\n  collapsed: boolean;\r\n\r\n\r\n  static fromSettings(s: FieldSettings): BasicControlSettings {\r\n    const label = s?.Name ?? 'loading...';\r\n    const notes = s?.Notes ?? '';\r\n    const required = s?.valueRequired ?? true;\r\n    const visibilityRaw = s?.Visible ?? true;\r\n    const visibilityDisabled = s?.VisibleDisabled ?? false;\r\n    const visible = visibilityRaw && !visibilityDisabled;\r\n    const collapsed = (s as FieldSettings & EmptyDefault)?.Collapsed ?? false;\r\n    // if (label == 'loading...') {\r\n    //   console.log('s', s);\r\n    // }\r\n    return {\r\n      label,\r\n      notes,\r\n      placeholder: s?.Placeholder ?? 'loading...',\r\n      required,\r\n      labelWithRequired: label + (required ? ' *' : ''),\r\n      visible,\r\n      // visibilityRaw,\r\n      // visibilityDisabled,\r\n      collapsed,\r\n    };\r\n  }\r\n}\r\n","import { EnvironmentInjector, Injectable, Injector, Signal, createEnvironmentInjector, inject, runInInjectionContext } from '@angular/core';\r\nimport { toObservable, toSignal } from '@angular/core/rxjs-interop';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { combineLatest, tap } from 'rxjs';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { FeaturesScopedService } from '../../../features/features-scoped.service';\r\nimport { InputTypeHelpers } from '../../../shared/fields/input-type-helpers';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { mapUntilObjChanged } from '../../../shared/rxJs/mapUntilChanged';\r\nimport { computedObj, signalObj } from '../../../shared/signals/signal.utilities';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { EntityFormStateService } from '../../entity-form/entity-form-state.service';\r\nimport { FieldState } from '../../fields/field-state';\r\nimport { EditRoutingService } from '../../routing/edit-routing.service';\r\nimport { UiControl } from '../../shared/controls/ui-control';\r\nimport { InputTypeSpecs } from '../../shared/input-types/input-type-specs.model';\r\nimport { FieldsSettingsService } from '../../state/fields-settings.service';\r\nimport { FieldConfigSet } from '../field-config-set.model';\r\nimport { BasicControlSettings } from './../../../../../../edit-types/src/BasicControlSettings';\r\nimport { InjectorBundle } from './injector-bundle.model';\r\n\r\nconst logSpecs = {\r\n  getInjectors: true,\r\n  fields: [...DebugFields] as string[], // example: ['Boolean'],\r\n};\r\n\r\nconst detailedDebug = false;\r\n\r\n/**\r\n * This service creates custom injectors for each field.\r\n * It's used in the fields-builder to initialize dynamic controls.\r\n */\r\n@Injectable()\r\nexport class FieldStateInjectorFactory {\r\n\r\n  log = classLog({FieldStateInjectorFactory}, logSpecs, false);\r\n\r\n  #injector = inject(Injector);\r\n  #envInjector = inject(EnvironmentInjector);\r\n  #fieldsSettingsSvc = inject(FieldsSettingsService);\r\n  #entityFormStateSvc = inject(EntityFormStateService);\r\n  #featuresSvc = inject(FeaturesScopedService);\r\n\r\n  #editRoutingService = inject(EditRoutingService);\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Get the injectors for a specific form field.\r\n   * Requires that the angular form has already created the field.\r\n   * \r\n   * IMPORTANT: It also has a side-effect that it adds picker data to the FieldStateService.\r\n   * this is not elegant ATM.\r\n   * @param fieldConfig \r\n   * @param inputType \r\n   * @returns an injector bundle with control and environment injectors\r\n   */\r\n  public getInjectors(fieldConfig: FieldConfigSet, inputType: InputTypeSpecs): InjectorBundle {\r\n    const l = this.log.fnIf('getInjectors', { fieldConfig, inputType });\r\n\r\n    const name = fieldConfig.fieldName;\r\n\r\n    // Create settings() and basics() signal for further use\r\n    const settings = this.#fieldsSettingsSvc.settings[name];\r\n    const basics = computedObj('basics', () => BasicControlSettings.fromSettings(settings()));\r\n\r\n    // Control and Control Status\r\n    const formGroup = this.#entityFormStateSvc.formGroup;\r\n    const control = formGroup.controls[name];    \r\n    const controlStatusChangeSignal = this.#buildUiSignal(name, control, inputType, settings);\r\n\r\n    /** The UI Value changes. Since it can also contain arrays, so we're using the strong equal */\r\n    const uiValue: Signal<FieldValue> = (() => {\r\n      if (!control) return signalObj('value-change-empty', null);\r\n      const debouncedValue$ = control.valueChanges.pipe(\r\n        // tap(v => console.warn('2dm value change on UI - before equals', v)),\r\n        // distinctUntilChanged((p, c) => {\r\n        //   const eq = isEqual(p, c);\r\n        //   console.warn('2dm value change on UI - equals', p, c, eq);\r\n        //   return eq;\r\n        // }),\r\n        mapUntilObjChanged(v => v),\r\n        // tap(v => console.warn('2dm value change on UI - after equals', v)),\r\n      );\r\n      return toSignal(debouncedValue$, { injector: this.#injector, initialValue: control.value });\r\n    })();\r\n\r\n    const fieldState = new FieldState(\r\n      name,\r\n      fieldConfig,\r\n      formGroup,\r\n      settings,\r\n      basics,\r\n      controlStatusChangeSignal,\r\n      uiValue,\r\n      this.#fieldsSettingsSvc.translationState[name],\r\n      this.#editRoutingService.isExpandedSignal(fieldConfig.index, fieldConfig.entityGuid, this.#injector),\r\n      this.#fieldsSettingsSvc.pickerData[name] ?? null,\r\n      this.#featuresSvc,\r\n      this.#injector,\r\n    );\r\n\r\n    const injectors = this.#createInjectors(fieldState);\r\n    return l.r(injectors);\r\n  }\r\n\r\n  /**\r\n   * Create a signal for the control status - mainly disabled etc.\r\n   */\r\n  #buildUiSignal(fieldName: string, control: AbstractControl, inputType: InputTypeSpecs, settings: Signal<FieldSettings>): Signal<UiControl> {\r\n    // Conditional logger for detailed logging\r\n    const lDetailed = this.log.fnCond(this.log.specs.fields.includes(fieldName), 'buildControlChangeSignal', { fieldName, inputType });\r\n\r\n    // Create a signal to watch for control-state changes\r\n    if (control) {\r\n      const settings$ = toObservable(settings, { injector: this.#injector });\r\n\r\n      return runInInjectionContext(this.#injector, () => {\r\n        // Watch the control for state changes - this is triggered on the ValueChanges\r\n        // but we only want to continue triggering if a relevant state changed.\r\n        const uiStateChange$ = control.valueChanges.pipe(\r\n          mapUntilObjChanged(_ => ({ dirty: control.dirty, invalid: control.invalid, touched: control.touched, disabled: control.disabled })),\r\n          tap(state => detailedDebug && console.error('controlStateChange', state)),\r\n        );\r\n\r\n        // disabled can be caused by settings in addition to the control status\r\n        // since the control doesn't cause a `valueChanged` on disabled, we need to watch the settings\r\n        const uiStatus$ = combineLatest([\r\n          uiStateChange$,\r\n          settings$.pipe(mapUntilObjChanged(s => s.uiDisabled)),\r\n        ]).pipe(\r\n          tap(([_, disabled]) => lDetailed.a('controlStateChange on control', { control, disabled })),\r\n          mapUntilObjChanged(([_, disabled]) => new UiControl(control, fieldName, disabled)),\r\n          tap(result => lDetailed.a('controlStatusChangeSignal', { result })),\r\n        );\r\n\r\n        // Build controlStatus observable.\r\n        // Should be changed to a pure signal without the observables probably in Angular 18\r\n        // which probably has a signal for this as well...\r\n        return toSignal(uiStatus$, { initialValue: new UiControl(control, fieldName, settings().uiDisabled) });\r\n      });\r\n    }\r\n    \r\n    // No control found - could be a problem, could be expected\r\n    // If it's an empty message field, this is kind of expected, since it doesn't have a value control in the form\r\n    if (!InputTypeHelpers.isEmpty(inputType.inputType)) {\r\n      console.error(`Error: can't create signal for control of ${fieldName} (not found). Input type is not empty, it's ${inputType.inputType}.`);\r\n      // try to have a temporary result, so that in most cases it won't just fail\r\n      return signalObj('control-status-empty', UiControl.emptyControl());\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Create the injector definitions to use for this field.\r\n   */\r\n  #createInjectors(fieldState: FieldState<FieldValue>) {\r\n    const providers = [\r\n      { provide: FieldState, useValue: fieldState },\r\n    ];\r\n\r\n    // Component injector, not actually sure if it's used, because standalone only use environmentInjector AFAIK\r\n    const injector = Injector.create({\r\n      providers: providers,\r\n      parent: this.#injector,\r\n      name: 'FieldInjector',\r\n    });\r\n\r\n    // Environment injector\r\n    const environmentInjector = createEnvironmentInjector(\r\n      providers,\r\n      this.#envInjector,\r\n      'FieldEnvInjector'\r\n    );\r\n    return { injector, environmentInjector };\r\n  }\r\n}\r\n","import { ComponentRef, Directive, ElementRef, OnDestroy, OnInit, Renderer2, Type, ViewContainerRef, effect, inject, signal, untracked } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { InputTypeHelpers } from '../../../shared/fields/input-type-helpers';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { EntityFormStateService } from '../../entity-form/entity-form-state.service';\r\nimport { InputComponents } from '../../fields/input-components.constant';\r\nimport { PickerExpandableWrapperComponent } from '../../fields/wrappers/picker-dialog/picker-expandable-wrapper.component';\r\nimport { FieldProps } from '../../state/fields-configs.model';\r\nimport { FieldsSettingsService } from '../../state/fields-settings.service';\r\nimport { CustomDefaultComponent } from '../basic/custom-default/custom-default.component';\r\nimport { FieldConfigSet } from '../field-config-set.model';\r\nimport { FieldMetadataKey, FieldMetadataModel } from '../field-metadata.decorator';\r\nimport { AdamConnector } from '../wrappers/adam/adam-browser/adam-connector';\r\nimport { FieldStateInjectorFactory } from './field-injector.service';\r\nimport { InjectorBundle } from './injector-bundle.model';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  createWrapper: true,\r\n};\r\n\r\n/**\r\n * This directive is responsible for creating the dynamic fields based on the field settings.\r\n * It will create the fields based on the settings and attach them to the view.\r\n */\r\n@Directive({\r\n  selector: '[appEditControlsBuilder]',\r\n  standalone: true,\r\n})\r\nexport class EditControlsBuilderDirective implements OnInit, OnDestroy {\r\n\r\n  index: number;\r\n\r\n  // In the class, inject Renderer2\r\n  private renderer = inject(Renderer2);\r\n  #firstInputFocused = false;\r\n\r\n  log = classLog({ EditControlsBuilderDirective }, logSpecs);\r\n\r\n  /** Service to create custom injectors for each field */\r\n  #fieldInjectorFac = transient(FieldStateInjectorFactory);\r\n\r\n  /** Ref to this HTML DOM, for adding controls */\r\n  #myContainerRef = inject(ViewContainerRef);\r\n\r\n  /** Service to get all settings for each field */\r\n  #fieldsSettingsSvc = inject(FieldsSettingsService);\r\n\r\n\r\n  constructor(private formConfigService: EntityFormStateService, private el: ElementRef) {\r\n    effect(() => {\r\n      const onInitReady = this.onInitReady();\r\n      const controlsCreated = this.formConfigService.controlsCreated();\r\n      this.log.a('createControls - effect', { onInitReady, controlsCreated });\r\n      if (!(onInitReady && controlsCreated))\r\n        return;\r\n\r\n      this.log.a('createControls RUN');\r\n      // TODO: NOT YET CLEAR IF THIS IS THE RIGHT SOLUTION\r\n      untracked(() => this.createControls());\r\n    });\r\n  }\r\n\r\n  /** Field Configs for clean-up after the control closes */\r\n  #fieldConfigSets: FieldConfigSet[] = [];\r\n\r\n  onInitReady = signal(false);\r\n\r\n  ngOnInit() {\r\n    this.onInitReady.set(true);\r\n    // Get the Index from the HTML element attribute\r\n    this.index = parseInt(this.el.nativeElement.getAttribute('data-index'));\r\n  }\r\n\r\n  createControls() {\r\n    // clear container\r\n    this.#myContainerRef.clear();\r\n\r\n    // Set the current container to be \"This\" = the main container (not a specific group)\r\n    // When groups open/close, this will be set to that group,\r\n    // so fields are then inside that container.\r\n    let currentContainer = this.#myContainerRef;\r\n    const fieldsProps = this.#fieldsSettingsSvc.allProps();\r\n\r\n    // Loop through each field and create the component\r\n    // If we encounter a group, we create a new container and set it as the main one\r\n    for (const [fieldName, fieldProps] of Object.entries(fieldsProps)) {\r\n      const fieldConfig: FieldConfigSet = {\r\n        ...fieldProps.constants,\r\n        fieldName: fieldName,\r\n        focused$: new BehaviorSubject(false),\r\n        adam: new AdamConnector(),\r\n      };\r\n      this.#fieldConfigSets.push(fieldConfig);\r\n      const inputType = fieldProps.constants.inputTypeSpecs.inputType;\r\n\r\n      if (InputTypeHelpers.isGroupStart(inputType)) {\r\n        // If we encounter a group-start, then create a new container based on the main container\r\n        currentContainer = this.#createGroup(this.#myContainerRef, fieldProps, fieldConfig);\r\n      } else if (InputTypeHelpers.isGroupEnd(inputType)) {\r\n        // If we encounter a group-end, set the main container to be the default one again\r\n        currentContainer = this.#myContainerRef;\r\n      } else {\r\n        // Just create the normal component within the current container\r\n        this.#createComponent(currentContainer, fieldProps, fieldConfig);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const fieldConfig of this.#fieldConfigSets)\r\n      fieldConfig.focused$.complete();\r\n  }\r\n\r\n  #createGroup(containerRef: ViewContainerRef, fieldProps: FieldProps, fieldConfig: FieldConfigSet): ViewContainerRef {\r\n    const injectors = this.#fieldInjectorFac.getInjectors(fieldConfig, fieldProps.constants.inputTypeSpecs);\r\n    let wrapperInfo = new DynamicControlInfo(null, containerRef, injectors);\r\n    if (fieldProps.buildWrappers)\r\n      wrapperInfo = this.#createWrappers(wrapperInfo, fieldProps.buildWrappers);\r\n    return wrapperInfo.contentsRef;\r\n  }\r\n\r\n  #createComponent(containerRef: ViewContainerRef, fieldProps: FieldProps, fieldConfig: FieldConfigSet) {\r\n    const inputSpecs = fieldProps.constants.inputTypeSpecs;\r\n    this.log.a('createComponent', { inputSpecs });\r\n\r\n    // Add injector to first wrapper, so that it will be attached to the top level, and then dropped\r\n    const injectors = this.#fieldInjectorFac.getInjectors(fieldConfig, inputSpecs);\r\n    let wrapperInfo = new DynamicControlInfo(null, containerRef, injectors);\r\n    if (fieldProps.buildWrappers)\r\n      wrapperInfo = this.#createWrappers(wrapperInfo, fieldProps.buildWrappers);\r\n\r\n    const componentName = inputSpecs.isExternal ? InputTypeCatalog.ExternalWebComponent : inputSpecs.inputType;\r\n    const componentType = this.#readComponentType(componentName);\r\n\r\n    // create component - ideally with metadata if provided (ATM can specify alternate wrapper)\r\n    const componentMd: FieldMetadataModel = Reflect.getMetadata(FieldMetadataKey, componentType);\r\n\r\n    // generate wrappers if they are defined\r\n    if (componentMd?.wrappers)\r\n      wrapperInfo = this.#createWrappers(wrapperInfo, componentMd.wrappers);\r\n\r\n    // generate the real input field component\r\n    // this.log.a('createComponent - add component', { componentType });\r\n    const componentRef = this.#generateAndAttachField(componentType, wrapperInfo.contentsRef, wrapperInfo.injectors);\r\n\r\n\r\n    // generate the picker preview component if it exists\r\n    const pickerPreviewContainerRef = (wrapperInfo.wrapperRef?.instance as PickerExpandableWrapperComponent)?.previewComponent;\r\n    if (pickerPreviewContainerRef != null) {\r\n      const previewType = this.#readComponentType(inputSpecs.inputType);\r\n      this.log.a('createComponent - add preview', { previewType });\r\n      this.#generateAndAttachField(previewType, pickerPreviewContainerRef, wrapperInfo.injectors);\r\n    }\r\n    // Set only the first input to be focused, if it is the first input\r\n    if (this.#firstInputFocused === false && this.index === 0 && fieldProps.settings.noAutoFocus !== true) {\r\n      this.#setAutoFocus(componentRef);\r\n      this.#firstInputFocused = true;\r\n    }\r\n  }\r\n\r\n  #setAutoFocus(componentRef: ComponentRef<any>) {\r\n    setTimeout(() => {\r\n      // Get the input element from the component\r\n      const nativeElement = componentRef.location.nativeElement.querySelector('input');\r\n      if (nativeElement) {\r\n        this.renderer.setAttribute(nativeElement, 'autofocus', 'true');\r\n        nativeElement?.focus(); // Focus the input element - with null check in case we're too early\r\n      }\r\n    }, 250); // Wait for the input to be created before focusing\r\n\r\n  }\r\n\r\n  #generateAndAttachField(componentType: Type<any>, container: ViewContainerRef, injectors: InjectorBundle): ComponentRef<any> {\r\n    return container.createComponent(componentType, injectors); // Return the ComponentRef\r\n  }\r\n\r\n  #createWrappers(outerWrapper: DynamicControlInfo, wrappers: string[]): DynamicControlInfo {\r\n    let wrapperInfo = outerWrapper;\r\n    for (const wrapperName of wrappers)\r\n      wrapperInfo = this.#createWrapper(wrapperInfo, wrapperName);\r\n    return wrapperInfo;\r\n  }\r\n\r\n  #createWrapper(wrapperInfo: DynamicControlInfo, wrapperName: string): DynamicControlInfo {\r\n    const l = this.log.fnIf('createWrapper', { wrapperName });\r\n    const componentType = this.#readComponentType(wrapperName);\r\n    const ref = wrapperInfo.contentsRef.createComponent(componentType, wrapperInfo.injectors);\r\n    return new DynamicControlInfo(ref, ref.instance.fieldComponent, null /* no injectors for following wrappers */);\r\n  }\r\n\r\n  #readComponentType(selector: string): Type<any> {\r\n    const componentType = InputComponents[selector];\r\n    if (componentType == null) {\r\n      console.error(`Missing component class for: ${selector}`);\r\n      return CustomDefaultComponent;\r\n    }\r\n    return componentType;\r\n  }\r\n\r\n}\r\n\r\n\r\nclass DynamicControlInfo {\r\n  constructor(\r\n    public wrapperRef: ComponentRef<any>,\r\n    public contentsRef: ViewContainerRef,\r\n    // will only need to be set the first time\r\n    public injectors: InjectorBundle,\r\n  ) { }\r\n}\r\n","import { inject, Injectable, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { filter, map, Subscription } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ItemHistoryResult } from '../../item-history/models/item-history-result.model';\r\nimport { classLog } from '../../shared/logging';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { EditEntryComponent } from '../dialog/entry/edit-entry.component';\r\nimport { UrlHelpers } from '../shared/helpers';\r\nimport { NavigateFormResult } from './edit-routing.service';\r\nimport { EditUrlParams } from './edit-url-params.model';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  watchToRefreshOnVersionsClosed: true,\r\n}\r\n\r\n/**\r\n * Special helper to watch for history-dialog closing.\r\n */\r\n@Injectable()\r\nexport class EditForceReloadService implements OnDestroy {\r\n\r\n  log = classLog({EditForceReloadService}, logSpecs);\r\n\r\n  #dialogRef = inject(MatDialogRef<EditEntryComponent>);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  ngOnDestroy() {\r\n    this.#watcher?.unsubscribe();\r\n  }\r\n  #watcher: Subscription;\r\n\r\n  watchToRefreshOnVersionsClosed() {\r\n    const l = this.log.fnIf('watchToRefreshOnVersionsClosed');\r\n    this.#watcher = this.#dialogRouter.childDialogClosed$().pipe(\r\n      map(() => this.#dialogRouter.state<ItemHistoryResult>()),\r\n      filter(result => result?.refreshEdit === true),\r\n    ).subscribe(_ => {\r\n      const l2 = this.log.fnIf('watchToRefreshOnVersionsClosed', null, 'refreshEdit');\r\n      l.a('version closed, refreshing edit dialog');\r\n      const p = this.#dialogRouter.snapshot.params as EditUrlParams;\r\n      const newUrl = UrlHelpers.newUrlIfCurrentContainsOldUrl(this.#dialogRouter.route,`edit/${p.items}`, `edit/refresh/${p.items}`);\r\n      if (newUrl == null) return l2.end('no change');\r\n      this.#dialogRef.close({ navigateUrl: newUrl } satisfies NavigateFormResult);\r\n      l2.end(`routed away to :${newUrl}`);\r\n    })\r\n    l.end();\r\n  }\r\n}\r\n","@if (language().current !== language().primary)\r\n{\r\n  <div>\r\n    <button mat-button [disabled]=\"readOnly().isReadOnly || slotIsEmpty()\" [matMenuTriggerFor]=\"menu\">\r\n      <span class=\"my-flex-inside\">\r\n        {{ 'LangMenu.Translate' | translate | uppercase }}\r\n        &nbsp;&nbsp;\r\n        <mat-icon class=\"eav-translate-icon\">translate</mat-icon>\r\n      </span>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <ng-template matMenuContent>\r\n        <button mat-menu-item (click)=\"unlockAll()\">{{ 'LangMenu.TranslateAll' | translate }}</button>\r\n        <button mat-menu-item (click)=\"autoTranslateMany()\">\r\n          {{ 'LangMenu.AutoTranslateAll' | translate }}\r\n          <app-feature-icon-indicator [featureNameId]=\"'EditUiTranslateWithGoogle'\"></app-feature-icon-indicator>\r\n        </button>\r\n        <button mat-menu-item (click)=\"lockAll()\">{{ 'LangMenu.NoTranslateAll' | translate }}</button>\r\n      </ng-template>\r\n    </mat-menu>\r\n  </div>\r\n}\r\n","import { UpperCasePipe } from '@angular/common';\r\nimport { Component, computed, inject, input, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FeatureIconIndicatorComponent } from '../../../features/feature-icon-indicator/feature-icon-indicator.component';\r\nimport { SignalEquals } from '../../../shared/signals/signal-equals';\r\nimport { TranslateMenuDialogConfig, TranslateMenuDialogData } from '../../fields/wrappers/localization/translate-menu-dialog/translate-menu-dialog.models';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { FormsStateService } from '../../form/forms-state.service';\r\nimport { AutoTranslateDisabledWarningDialog } from '../../localization/auto-translate-disabled-warning-dialog/auto-translate-disabled-warning-dialog.component';\r\nimport { AutoTranslateMenuDialogComponent } from '../../localization/auto-translate-menu-dialog/auto-translate-menu-dialog.component';\r\nimport { FieldsSettingsService } from '../../state/fields-settings.service';\r\nimport { FieldsTranslateService } from '../../state/fields-translate.service';\r\nimport { ItemService } from '../../state/item.service';\r\n\r\n@Component({\r\n  selector: 'app-entity-translate-menu',\r\n  templateUrl: './entity-translate-menu.component.html',\r\n  styleUrls: ['./entity-translate-menu.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    FeatureIconIndicatorComponent,\r\n    UpperCasePipe,\r\n    TranslateModule,\r\n  ],\r\n})\r\nexport class EntityTranslateMenuComponent {\r\n  entityGuid = input<string>();\r\n\r\n  private formsStateService = inject(FormsStateService);\r\n  protected readOnly = this.formsStateService.readOnly;\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private itemService: ItemService,\r\n    private eavService: FormConfigService,\r\n    private fieldTranslateSvc: FieldsTranslateService,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private fieldSettingsSvc: FieldsSettingsService,\r\n  ) {\r\n    // debug...\r\n    // effect(() => {\r\n    //   console.log(`2dm ${this.entityGuid()} slotIsEmpty:` + this.slotIsEmpty());\r\n    //   console.log(`2dm autoTranslatableFields:` + this.#autoTranslatableFields());\r\n    // });\r\n  }\r\n\r\n  #autoTranslatableFields = computed(() => {\r\n    // console.log(`2dm #AutoTrans:`, val, (this.fieldsTranslateService as any).entityGuid);\r\n    return this.fieldTranslateSvc.findAutoTranslatableFields();\r\n  });\r\n\r\n  protected slotIsEmpty = computed(() => {\r\n    return this.itemService.slotIsEmpty(this.entityGuid())();\r\n  }, SignalEquals.bool);\r\n\r\n  language = this.eavService.language;\r\n\r\n  unlockAll() {\r\n    this.fieldTranslateSvc.toggleUnlockOnAll(true);\r\n  }\r\n\r\n  lockAll() {\r\n    this.fieldTranslateSvc.toggleUnlockOnAll(false);\r\n  }\r\n\r\n  autoTranslateMany(): void {\r\n    const autoTransFields = this.#autoTranslatableFields();\r\n    if (autoTransFields.length === 0) \r\n      return this.fieldTranslateSvc.showMessageNoTranslatableFields(true);\r\n\r\n    // Translation state of any field, to detect the languages\r\n    const translationStateAny = this.fieldSettingsSvc.translationState[autoTransFields[0]]();\r\n    if (autoTransFields.length > 0) {\r\n      const config: TranslateMenuDialogConfig = {\r\n        entityGuid: this.entityGuid(),\r\n        fieldName: autoTransFields[0],\r\n      }\r\n      const dialogData: TranslateMenuDialogData = {\r\n        config,\r\n        translationState: {\r\n          language: translationStateAny.language,\r\n          linkType: translationStateAny.linkType,\r\n        },\r\n        isTranslateMany: true,\r\n        translatableFields: autoTransFields,\r\n      };\r\n      this.matDialog.open(AutoTranslateMenuDialogComponent, {\r\n        autoFocus: false,\r\n        data: dialogData,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n    } else {\r\n      this.matDialog.open(AutoTranslateDisabledWarningDialog, {\r\n        autoFocus: false,\r\n        data: { isAutoTranslateAll: true },\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<!--\r\n Header containing title, notes, slot empty toggle, metadata-for information, history button and translate menu\r\n-->\r\n<mat-card appearance=\"raised\" class=\"eav-card-group-parent shadow-bottom-z-1\">\r\n  <div class=\"my-title-bar-outer eav-card-header-group-parent\">\r\n    <!-- ^v icon to indicate state + Title -->\r\n    <div class=\"my-title-bar eav-card-title-group mat-headline-4\" (click)=\"toggleCollapse()\">\r\n      <mat-icon class=\"title-arrow\">\r\n        {{ collapse ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}\r\n      </mat-icon>\r\n      <span class=\"title\">\r\n        {{ ctSettings().itemTitle || ('ItemCard.DefaultTitle' | translate) }}\r\n      </span>\r\n    </div>\r\n\r\n    <!-- Notes button -->\r\n    @if (ctSettings().showNotes) {\r\n      <button\r\n        type=\"button\"\r\n        #noteTrigger\r\n        mat-icon-button\r\n        class=\"eav-note {{ noteProps().triggerClass }}\"\r\n        [disabled]=\"readOnly()\"\r\n        [tippyTranslate]=\"noteProps().tooltip\"\r\n        [tippyDisabled]=\"readOnly()\"\r\n        [disableRipple]=\"noteProps().itemNotSaved\"\r\n        (pointerenter)=\"noteProps().note ? toggleNote($event) : null\"\r\n        (pointerleave)=\"noteProps().note ? toggleNote($event) : null\"\r\n        (click)=\"noteProps().note ? toggleNote($event) : editNote()\"\r\n      >\r\n        <mat-icon>{{ noteProps().iconName }}</mat-icon>\r\n      </button>\r\n    }\r\n\r\n    <!-- Note template to show on demand -->\r\n    <ng-template #noteTemplate>\r\n      <div\r\n        class=\"eav-note-wrapper {{ noteProps().noteClass }}\"\r\n        cdkDrag\r\n        cdkDragRootElement=\".cdk-overlay-pane\"\r\n        cdkDragBoundary=\"body\"\r\n        (pointerdown)=\"noteTouched = true\"\r\n      >\r\n        <div class=\"eav-note-actions\" cdkDragHandle>\r\n          <button mat-icon-button appMousedownStopPropagation (click)=\"editNote(noteProps().note)\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button appMousedownStopPropagation (click)=\"deleteNote(noteProps().note)\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n          <button mat-icon-button appMousedownStopPropagation (click)=\"toggleNote($event)\">\r\n            <mat-icon>close</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"eav-note-content eav-hide-scrollbar\" [innerHtml]=\"noteProps().noteHtml | safeHtml\"></div>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <!-- Slot Empty Toggle -->\r\n    @if (ctSettings().slotCanBeEmpty) {\r\n      <mat-slide-toggle\r\n        class=\"empty-slot-toggle\"\r\n        (change)=\"toggleSlotIsEmpty()\"\r\n        [checked]=\"!ctSettings().slotIsEmpty\"\r\n        [disabled]=\"readOnly() || languages().current !== languages().primary\"\r\n        [tippyTranslate]=\"!ctSettings().slotIsEmpty ? 'ItemCard.SlotUsedTrue' : 'ItemCard.SlotUsedFalse'\"\r\n        [tippyDisabled]=\"readOnly() || languages().current !== languages().primary\"\r\n      >\r\n      </mat-slide-toggle>\r\n    }\r\n\r\n    <!-- Metadata-For Information -->\r\n    @if (ctSettings().showMdFor && itemForTooltip()) {\r\n      <div class=\"icon-box\" [tippy]=\"itemForTooltip()\">\r\n        <mat-icon>local_offer</mat-icon>\r\n      </div>\r\n    }\r\n\r\n    <!-- History Button -->\r\n    @if (formConfig.config.enableHistory) {\r\n      <button type=\"button\" mat-icon-button tippyTranslate=\"Form.Buttons.History.Tip\" [disabled]=\"readOnly()\" (click)=\"openHistory()\">\r\n        <mat-icon>history</mat-icon>\r\n      </button>\r\n    }\r\n    <app-entity-translate-menu [entityGuid]=\"entityGuid()\"> </app-entity-translate-menu>\r\n  </div>\r\n  <mat-card-content class=\"eav-card-content-group-parent\" [style.display]=\"collapse ? 'none' : 'block'\">\r\n    <div class=\"eav-layout-grid\">\r\n      <div class=\"eav-layout-grid__inner\">\r\n        @if (ctSettings().editInstructions) {\r\n          <div class=\"eav-layout-grid__cell--span-12 mat-body-2\" align=\"start\">\r\n            <div class=\"description\" appChangeAnchorTarget [innerHtml]=\"ctSettings().editInstructions | safeHtml\"></div>\r\n          </div>\r\n        }\r\n        <div class=\"eav-layout-grid__cell--span-12\">\r\n          <!-- Inputs index weiter geben -->\r\n          <div appEditControlsBuilder [attr.data-index]=\"index()\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { CdkDrag, CdkDragHandle } from '@angular/cdk/drag-drop';\r\nimport { AfterViewChecked, Component, ElementRef, inject, input, OnDestroy, OnInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialog, MatDialogRef, MatDialogState } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../core';\r\nimport { FeatureNames } from '../../../features/feature-names';\r\nimport { FeaturesScopedService } from '../../../features/features-scoped.service';\r\nimport { eavConstants } from '../../../shared/constants/eav.constants';\r\nimport { MousedownStopPropagationDirective } from '../../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { EditForm, EditPrep, ItemIdentifierHeader } from '../../../shared/models/edit-form.model';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { DialogRoutingService } from '../../../shared/routing/dialog-routing.service';\r\nimport { EntityService } from '../../../shared/services/entity.service';\r\nimport { computedObj, signalObj } from '../../../shared/signals/signal.utilities';\r\nimport { EditControlsBuilderDirective } from '../../fields/builder/fields-builder.directive';\r\nimport { ChangeAnchorTargetDirective } from '../../fields/directives/change-anchor-target.directive';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { FormDataService } from '../../form/form-data.service';\r\nimport { FormsStateService } from '../../form/forms-state.service';\r\nimport { EditForceReloadService } from '../../routing/edit-force-reload.service';\r\nimport { EditRoutingService } from '../../routing/edit-routing.service';\r\nimport { EntityReader } from '../../shared/helpers/entity-reader';\r\nimport { EavEntity, EavItem } from '../../shared/models/eav';\r\nimport { FieldsSettingsService } from '../../state/fields-settings.service';\r\nimport { ItemService } from '../../state/item.service';\r\nimport { buildContentTypeFeatures, getItemForTooltip, getNoteProps } from '../entity-form.helpers';\r\nimport { EntityTranslateMenuComponent } from '../entity-translate-menu/entity-translate-menu.component';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  fetchNote: true,\r\n  noteFormData: true,\r\n};\r\n\r\n/**\r\n * This wraps a single entity in the multi-entities-form.\r\n */\r\n@Component({\r\n  selector: 'app-edit-entity-form',\r\n  templateUrl: './entity-form.component.html',\r\n  styleUrls: ['./entity-form.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    CdkDrag,\r\n    CdkDragHandle,\r\n    MatSlideToggleModule,\r\n    EntityTranslateMenuComponent,\r\n    ChangeAnchorTargetDirective,\r\n    EditControlsBuilderDirective,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n    MousedownStopPropagationDirective,\r\n  ],\r\n})\r\nexport class EntityFormComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n\r\n  log = classLog({EntityFormComponent}, logSpecs);\r\n\r\n  @ViewChild('noteTrigger', { read: ElementRef }) private noteTriggerRef?: ElementRef<HTMLButtonElement>;\r\n  @ViewChild('noteTemplate') private noteTemplateRef?: TemplateRef<undefined>;\r\n\r\n  entityGuid = input<string>();\r\n  index = input<number>();\r\n\r\n  protected formConfig = inject(FormConfigService);\r\n  #fieldsSettingsSvc = inject(FieldsSettingsService);\r\n  #formsStateSvc = inject(FormsStateService);\r\n  #translate = inject(TranslateService);\r\n  #versioningReloader = transient(EditForceReloadService);\r\n\r\n  collapse = false;\r\n  noteTouched: boolean = false;\r\n\r\n  #features = inject(FeaturesScopedService);\r\n  #editUiShowNotes = this.#features.isEnabled[FeatureNames.EditUiShowNotes];\r\n  #editUiShowMetadataFor = this.#features.isEnabled[FeatureNames.EditUiShowMetadataFor];\r\n\r\n  /** Languages */\r\n  languages = this.formConfig.language;\r\n\r\n  /** Content-Type Settings */\r\n  ctSettings = computedObj('ctSettings', () => {\r\n    const s = this.#fieldsSettingsSvc.contentTypeSettings();\r\n    const features = s.Features;\r\n    const ctFeatures = buildContentTypeFeatures(s.Features);\r\n\r\n    return {\r\n      itemTitle: s._itemTitle,\r\n      slotCanBeEmpty: s._slotCanBeEmpty,\r\n      slotIsEmpty: s._slotIsEmpty,\r\n      editInstructions: s.EditInstructions,\r\n      features,\r\n      showNotes: ctFeatures[FeatureNames.EditUiShowNotes] ?? this.#editUiShowNotes(),\r\n      showMdFor: ctFeatures[FeatureNames.EditUiShowMetadataFor] ?? this.#editUiShowMetadataFor(),\r\n    };\r\n  });\r\n\r\n  readOnly = computedObj('readOnly', () => this.#formsStateSvc.readOnly().isReadOnly);\r\n\r\n  /** Item-For (Target) Tooltip */\r\n  itemForTooltip = computedObj('itemForTooltip', () => {\r\n    const item = this.itemSvc.getItemFor(this.entityGuid());\r\n    return getItemForTooltip(item, this.#translate);\r\n  });\r\n\r\n  #retriggerNoteProps = signalObj<boolean>('retriggerNoteProps', false);\r\n  noteProps = computedObj('noteProps', () => {\r\n    this.#retriggerNoteProps(); // dependency to retrigger when #retriggerNoteProps changes\r\n    const entityGuid = this.entityGuid();\r\n    const languages = this.formConfig.language();\r\n    const note = this.itemSvc.getItemNote(entityGuid);\r\n    const notCreatedYet = this.itemSvc.get(entityGuid).Entity.Id === 0;\r\n    return getNoteProps(note, languages, notCreatedYet);\r\n  });\r\n\r\n  private noteRef?: MatDialogRef<undefined, any>;\r\n\r\n  #formDataSvc = transient(FormDataService);\r\n  #entitySvc = transient(EntityService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private itemSvc: ItemService,\r\n    private editRoutingSvc: EditRoutingService,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // change detection inside note template seems to be independent of this component and without forcing checks\r\n    // throws ExpressionChangedAfterItHasBeenCheckedError\r\n    (this.noteRef?._containerInstance as any)?._changeDetectorRef?.detectChanges();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Update the notes whenever a child form is closed\r\n    this.#dialogRouter.doOnDialogClosed(() => this.#fetchNote());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.noteRef?.close();\r\n  }\r\n\r\n  toggleCollapse() {\r\n    this.collapse = !this.collapse;\r\n  }\r\n\r\n  toggleSlotIsEmpty() {\r\n    const entityGuid = this.entityGuid();\r\n    const oldHeader = this.itemSvc.getItemHeader(entityGuid);\r\n    const newHeader: ItemIdentifierHeader = {\r\n      ...oldHeader,\r\n      IsEmpty: !oldHeader.IsEmpty,\r\n    };\r\n    const l = this.log.fn('toggleSlotIsEmpty', { oldHeader, newHeader });\r\n    this.itemSvc.updater.updateItemHeader(entityGuid, newHeader);\r\n    l.end();\r\n  }\r\n\r\n  openHistory() {\r\n    const item = this.itemSvc.get(this.entityGuid());\r\n    this.#versioningReloader.watchToRefreshOnVersionsClosed();\r\n    this.#dialogRouter.navRelative([`versions/${item.Entity.Id}`]);\r\n  }\r\n\r\n  toggleNote(event: Event) {\r\n    const isOpen = this.noteRef?.getState() === MatDialogState.OPEN;\r\n    if (event.type === 'pointerenter' && this.noteTouched == false) this.openNote();\r\n    else if (event.type === 'pointerleave' && this.noteTouched == false) this.noteRef?.close();\r\n    else if (event.type === 'click' && isOpen) {\r\n      if (this.noteTouched == false)\r\n        this.noteTouched = true;\r\n      else {\r\n        this.noteRef?.close();\r\n        this.noteTouched = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  openNote() {\r\n    const triggerPosition = this.noteTriggerRef.nativeElement.getBoundingClientRect();\r\n    this.noteRef = this.matDialog.open(this.noteTemplateRef, {\r\n      autoFocus: false,\r\n      hasBackdrop: false,\r\n      disableClose: true,\r\n      restoreFocus: false,\r\n      closeOnNavigation: false,\r\n      position: {\r\n        top: `${triggerPosition.bottom}px`,\r\n        left: `${triggerPosition.left - 200}px`,\r\n      },\r\n      viewContainerRef: this.viewContainerRef,\r\n      panelClass: 'note-dialog',\r\n    });\r\n  }\r\n\r\n  editNote(note?: EavEntity) {\r\n    const entityGuid = this.entityGuid();\r\n    const l = this.log.fn('editNote', { note });\r\n    const item = this.itemSvc.get(entityGuid);\r\n    if (item.Entity.Id === 0) {\r\n      l.end('Item not saved yet, ID = 0');\r\n      return;\r\n    }\r\n\r\n    const form: EditForm = {\r\n      items: [\r\n        note == null\r\n          ? EditPrep.newMetadata(entityGuid, eavConstants.contentTypes.notes, eavConstants.metadata.entity, true)\r\n          : EditPrep.editId(note.Id),\r\n      ],\r\n    };\r\n    this.editRoutingSvc.open(null, null, form);\r\n  }\r\n\r\n  deleteNote(note: EavEntity) {\r\n    const language = this.formConfig.language();\r\n    const title = new EntityReader(language).getBestValue(note.Attributes.Title); // LocalizationHelpers.translate(language, note.Attributes.Title, null);\r\n    const id = note.Id;\r\n    if (!confirm(this.#translate.instant('Data.Delete.Question', { title, id })))\r\n      return;\r\n    this.#entitySvc.delete(this.formConfig.config.appId, eavConstants.contentTypes.notes, note.Id, false).subscribe(() => {\r\n      this.noteRef?.close();\r\n      this.#fetchNote();\r\n    });\r\n  }\r\n\r\n  #fetchNote() {\r\n    const entityGuid = this.entityGuid();\r\n    const item = this.itemSvc.get(entityGuid);\r\n    const l = this.log.fnIf('fetchNote', { entityGuid, item, id: item.Entity.Id });\r\n    if (item.Entity.Id === 0)\r\n      return l.end('no change');\r\n\r\n    const editItems = [EditPrep.editId(item.Entity.Id)];\r\n    this.#formDataSvc.fetchFormData(JSON.stringify(editItems))\r\n      .subscribe(formData => {\r\n        const l2 = this.log.fn('noteFormData', { formData });\r\n        // Check if the item is still in the service being edited, as it could have been flushed when this triggers on version-restore\r\n        if (!this.itemSvc.get(entityGuid))\r\n          return l2.end(`Item ${entityGuid} not found in service, was probably flushed for reload`);\r\n\r\n        // Parse and update the note metadata\r\n        const items = formData.Items.map(i => EavItem.convert(i));\r\n        this.itemSvc.updater.updateItemMetadata(entityGuid, items[0].Entity.Metadata);\r\n        this.#retriggerNoteProps.set(true);\r\n        l2.end('updated note');\r\n      });\r\n    l.end('started note-loading');\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { FormLanguage } from '../form/form-languages.model';\r\nimport { EntityReader } from '../shared/helpers';\r\nimport { EavEntity, EavFor } from '../shared/models/eav';\r\nimport { NoteProps } from './note-props.model';\r\n\r\nexport function getItemForTooltip(itemFor: EavFor, translate: TranslateService) {\r\n  if (!itemFor) return;\r\n  return translate.instant('Form.Buttons.Metadata.Tip')\r\n    + `\\nTarget: ${itemFor.Target}`\r\n    + `\\nTargetType: ${itemFor.TargetType}`\r\n    + (itemFor.Number ? `\\nNumber: ${itemFor.Number}` : '')\r\n    + (itemFor.String ? `\\nString: ${itemFor.String}` : '')\r\n    + (itemFor.Guid ? `\\nGuid: ${itemFor.Guid}` : '')\r\n    + (itemFor.Title ? `\\nTitle: ${itemFor.Title}` : '');\r\n}\r\n\r\nexport function getNoteProps(note: EavEntity, language: FormLanguage, itemNotSaved: boolean): NoteProps {\r\n  const noteProps: NoteProps = {\r\n    note,\r\n    tooltip: itemNotSaved ? 'Form.Buttons.Note.ItemNotSaved' : 'Form.Buttons.Note.Add',\r\n    triggerClass: `no-note ${itemNotSaved ? 'item-not-saved' : ''}`,\r\n    iconName: 'sticky_note_2',\r\n    noteClass: '',\r\n    noteHtml: undefined,\r\n    itemNotSaved,\r\n  };\r\n  if (!note) { return noteProps; }\r\n\r\n  noteProps.tooltip = undefined;\r\n  const reader = new EntityReader(language);\r\n  noteProps.noteHtml = reader.getBestValue(note.Attributes.Note);\r\n\r\n  const noteType = reader.getBestValue(note.Attributes.NoteType);\r\n  if (noteType === 'note') {\r\n    noteProps.triggerClass = 'has-note';\r\n  } else if (noteType === 'warning') {\r\n    noteProps.triggerClass = 'has-warning';\r\n    noteProps.iconName = 'warning';\r\n    noteProps.noteClass = 'warning';\r\n  }\r\n  return noteProps;\r\n}\r\n\r\nexport function buildContentTypeFeatures(contentTypeFeatures: string): Record<string, boolean> {\r\n  const features = contentTypeFeatures\r\n    .split('\\n')\r\n    .reduce((result, contentTypeFeature) => {\r\n      if (!contentTypeFeature)\r\n        return result;\r\n      const nameAndValue = contentTypeFeature.split('=');\r\n      const name = nameAndValue[0];\r\n      const value = nameAndValue[1] === 'true';\r\n      result[name] = value;\r\n      return result;\r\n    }, {} as Record<string, boolean>);\r\n  return features;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { combineLatest, distinctUntilChanged, map, startWith } from 'rxjs';\r\nimport { classLog } from '../../shared/logging';\r\nimport { mapUntilChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { FormConfigService } from '../form/form-config.service';\r\nimport { FormsStateService } from '../form/forms-state.service';\r\nimport { FieldValueHelpers } from '../shared/helpers/field-value.helpers';\r\nimport { ItemValuesOfLanguage } from '../state/item-values-of-language.model';\r\nimport { ItemService } from '../state/item.service';\r\nimport { EntityFormStateService } from './entity-form-state.service';\r\n\r\n/**\r\n * A Service to ....\r\n * \r\n * Important: This is specific to a single entity.\r\n */\r\n@Injectable()\r\nexport class EntityFormSyncService extends ServiceBase {\r\n\r\n  log = classLog({EntityFormSyncService});\r\n\r\n  constructor(\r\n    private entityFormSvc: EntityFormStateService,\r\n    private formsStateSvc: FormsStateService,\r\n    private formConfig: FormConfigService,\r\n    private itemSvc: ItemService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  public setupSync(entityGuid: string) {\r\n    const form = this.entityFormSvc.formGroup;\r\n\r\n    // 1. Sync dirty state upwards\r\n    this.subscriptions.add(\r\n      form.valueChanges.pipe(\r\n        map(() => form.dirty),\r\n        startWith(form.dirty),\r\n        // We can't have distinctUntilChanged because dirty state is not reset on form save.\r\n        // leave this comment and the code below for future reference, so people don't add it back.\r\n        // distinctUntilChanged(),\r\n      ).subscribe(isDirty => {\r\n        this.formsStateSvc.setFormDirty(entityGuid, isDirty);\r\n      })\r\n    );\r\n\r\n    // 2. Sync form-valid state to the global states\r\n    // 2.1. Get the form-valid state\r\n    const formValid$ = form.valueChanges.pipe(\r\n      map(() => !form.invalid),\r\n      startWith(!form.invalid),\r\n      mapUntilChanged(m => m),\r\n    );\r\n\r\n    // 2.2. Get the item header. Note that it will be null during destruction\r\n    const itemHeader$ = this.itemSvc.getItemHeader$(entityGuid);\r\n\r\n    // 2.3. Setup sync\r\n    this.subscriptions.add(\r\n      combineLatest([formValid$, itemHeader$]).pipe(\r\n        mapUntilChanged(([formValid, itemHeader]) => itemHeader?.IsEmpty || formValid),\r\n      ).subscribe(isValid => {\r\n        this.formsStateSvc.setFormValid(entityGuid, isValid);\r\n      })\r\n    );\r\n\r\n    // 3. Sync raw values as they change from the form...\r\n    // TODO: THIS LOOKS a bit fishy, since I think we have another service syncing form values to the controls\r\n    this.subscriptions.add(\r\n      form.valueChanges.pipe(\r\n        map(() => form.getRawValue() as ItemValuesOfLanguage),\r\n        distinctUntilChanged((previous, current) => FieldValueHelpers.getItemValuesChanges(previous, current) == null),\r\n      ).subscribe(formValues => {\r\n        const language = this.formConfig.language();\r\n        this.itemSvc.updater.updateItemAttributesValues(entityGuid, formValues, language);\r\n      })\r\n    );\r\n\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { InputTypeHelpers } from '../../../shared/fields/input-type-helpers';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { FieldLogicManager } from '../../fields/logic/field-logic-manager';\r\nimport { FieldLogicWithValueInit } from '../../fields/logic/field-logic-with-init';\r\nimport { AdamCacheService } from '../../shared/adam/adam-cache.service';\r\nimport { ValidationHelpers, ValidationHelperSpecs } from '../../shared/validation/validation.helpers';\r\nimport { FieldsSettingsService } from '../../state/fields-settings.service';\r\nimport { EntityFormStateService } from '../entity-form-state.service';\r\nimport { FieldInitSpecs } from './field-init-specs.model';\r\n\r\n@Injectable()\r\nexport class FormFieldsBuilderService {\r\n\r\n  log = classLog({FormFieldsBuilderService}, null);\r\n\r\n  constructor(\r\n    private fieldsSettingsSvc: FieldsSettingsService,\r\n    private adamCacheSvc: AdamCacheService,\r\n    private formBuilder: UntypedFormBuilder,\r\n    private entityFormConfigSvc: EntityFormStateService,\r\n  ) { }\r\n\r\n  public createFields(entityGuid: string, form: UntypedFormGroup, allFields: FieldInitSpecs[]) {\r\n\r\n    const l = this.log.fn('createFields');\r\n\r\n    // 1. create missing controls - usually just on first cycle\r\n    const fieldsToCreate = allFields.filter(({ inputType, hasControl }) =>\r\n      !InputTypeHelpers.isEmpty(inputType)    // Empty type, skip\r\n      && !hasControl                          // If control already exists, skip\r\n    );\r\n\r\n    this.log.a(`create missing controls ${fieldsToCreate.length} of ${allFields.length}`, { fieldsForNgForm: fieldsToCreate });\r\n\r\n    // Generate any fields which don't exist yet (usually only on first cycle)\r\n    for (const fields of fieldsToCreate) {\r\n      const { name: fieldName, props: fieldProps, inputType, value } = fields;\r\n      // The initial value at the moment the control is first created in this language\r\n      let initialValue = value;\r\n\r\n      // Special treatment for wysiwyg fields\r\n      // Note by 2dm 2024-08-19 - not sure if this actually works, because the changed buildValue is maybe never reused\r\n      // ...except for directly below\r\n      if (inputType === InputTypeCatalog.StringWysiwyg && initialValue) {\r\n        const logic = FieldLogicManager.singleton().get(InputTypeCatalog.StringWysiwyg);\r\n        const adamItems = this.adamCacheSvc.getAdamSnapshot(entityGuid, fieldName);\r\n        fields.value = initialValue = (logic as unknown as FieldLogicWithValueInit).processValueOnLoad(initialValue, adamItems);\r\n      }\r\n\r\n      // Build control in the Angular form with validators\r\n      const disabled = fieldProps.settings.uiDisabled;\r\n      const fss = this.fieldsSettingsSvc;\r\n      const valSpecs = new ValidationHelperSpecs(fieldName, inputType, fss.settings[fieldName], fss.fieldProps[fieldName], () => fss.pickerData);\r\n      const validators = ValidationHelpers.getValidators(valSpecs, inputType);\r\n      const newControl = this.formBuilder.control({ disabled, value: initialValue }, validators);\r\n      // TODO: build all fields at once. That should be faster\r\n      form.addControl(fieldName, newControl);\r\n    }\r\n\r\n    this.entityFormConfigSvc.controlsCreated.set(true);\r\n    l.end();\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ServiceBase } from '../../../shared/services/service-base';\r\nimport { FieldValueHelpers } from '../../shared/helpers/field-value.helpers';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { FieldInitSpecs } from './field-init-specs.model';\r\nimport { UiControl } from '../../shared/controls/ui-control';\r\n\r\nconst logSpecs = {\r\n  keepFieldsAndStateInSync: true,\r\n};\r\n\r\n@Injectable()\r\nexport class FormFieldsSyncService extends ServiceBase {\r\n\r\n  log = classLog({FormFieldsSyncService}, logSpecs);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  keepFieldsAndStateInSync(form: UntypedFormGroup, fieldsToProcess: Observable<FieldInitSpecs[]>) {\r\n    const l = this.log.fnIf('keepFieldsAndStateInSync');\r\n    // This has multiple features, possibly we should separate them\r\n    // 2. Sync values between form and fieldProps - eg. on value changes which are from formulas\r\n    // 3. Ensure disabled state is in sync eg. after settings recalculations\r\n    // 4. Ensure validators are run in such scenarios\r\n    this.subscriptions.add(\r\n      fieldsToProcess.subscribe(allFields => {\r\n        // Figure out which fields may require further processing\r\n        const fieldsOnForm = allFields.filter(set => set.hasControl);\r\n\r\n        // 2. sync values - create list comparing the old raw values and new fieldProps - eg. modified by formulas\r\n        l.a(`sync values for max ${fieldsOnForm.length} controls`);\r\n        const oldValues: ItemValuesOfLanguage = form.getRawValue();\r\n        const newValues: ItemValuesOfLanguage = {};\r\n        for (const { name: fieldName, value } of fieldsOnForm)\r\n          newValues[fieldName] = value;\r\n\r\n        const changes = FieldValueHelpers.getItemValuesChanges(oldValues, newValues);\r\n        if (changes != null) {\r\n          l.a(`patching form as it changed (${Object.keys(changes).length}`, { changes, oldValues, newValues })\r\n          // controls probably don't need to set touched and dirty for this kind of update.\r\n          // This update usually happens for language change, formula or updates on same entity in another Edit Ui.\r\n          // In case controls should be updated, update with control.markAsTouched and control.markAsDirty.\r\n          // Marking the form will not mark controls, but marking controls marks the form\r\n          form.patchValue(changes);\r\n        } else\r\n          l.a('no changes detected', { oldValues, newValues });\r\n\r\n        // 3. sync disabled if state not matching\r\n        // Important: Fires valueChange event for every single control\r\n        l.a('sync \"disabled\" state');\r\n        for (const { control, props } of fieldsOnForm)\r\n          UiControl.disable(control, props.settings.uiDisabled);\r\n\r\n        // 4. run validators - required because formulas can recalculate validators and if value doesn't change, new validator will not run\r\n        l.a('run validators');\r\n        for (const { control } of fieldsOnForm)\r\n          control.updateValueAndValidity();\r\n      })\r\n    );\r\n\r\n    l.end();\r\n  }\r\n}\r\n","import { Component, inject, Injector, input, OnDestroy, OnInit } from '@angular/core';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { filter, map, Observable, take } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { FormulaDesignerService } from '../../formulas/designer/formula-designer.service';\r\nimport { FieldsSettingsService } from '../../state/fields-settings.service';\r\nimport { FieldsTranslateService } from '../../state/fields-translate.service';\r\nimport { EntityFormComponent } from '../entity-form-component/entity-form.component';\r\nimport { EntityFormStateService } from '../entity-form-state.service';\r\nimport { EntityFormSyncService } from '../entity-form-sync.service';\r\nimport { FieldInitSpecs } from './field-init-specs.model';\r\nimport { FormFieldsBuilderService } from './form-fields-builder.service';\r\nimport { FormFieldsSyncService } from './form-fields-sync.service';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getFieldsToProcess: false,\r\n  ngOnInit: false,\r\n  ['fieldsToProcess$']: true,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-entity-form-builder',\r\n  templateUrl: './form-builder.component.html',\r\n  styleUrls: ['./form-builder.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    EntityFormComponent,\r\n  ],\r\n  providers: [\r\n    FieldsSettingsService,  // used for all field settings - must be shared from here\r\n    FieldsTranslateService, // used for field translations and uses FieldsSettingsService, so also shared here\r\n    EntityFormStateService, // used for sharing information about this entity form\r\n  ],\r\n})\r\nexport class EntityFormBuilderComponent implements OnInit, OnDestroy {\r\n  entityGuid = input<string>();\r\n  index = input<number>();\r\n\r\n  log = classLog({EntityFormBuilderComponent}, logSpecs);\r\n\r\n  /** Inject the form state service to start it here */\r\n  #formStateSvc = inject(EntityFormStateService);\r\n\r\n  #formulaDesignerService = inject(FormulaDesignerService);\r\n  #fieldsTranslateSvc = inject(FieldsTranslateService);\r\n  #fieldsSettingsSvc = inject(FieldsSettingsService);\r\n  #injector = inject(Injector);\r\n\r\n  // Transient services\r\n  #formFieldsBuilderService = transient(FormFieldsBuilderService);\r\n  #fieldsSyncSvc = transient(FormFieldsSyncService);\r\n  #formSyncSvc = transient(EntityFormSyncService);\r\n\r\n  constructor() { }\r\n\r\n  public form = this.#formStateSvc.formGroup;\r\n\r\n  ngOnInit() {\r\n    const entityGuid = this.entityGuid();\r\n    const l = this.log.fnIf('ngOnInit', { entityGuid });\r\n    this.#fieldsSettingsSvc.init(entityGuid);\r\n    this.#formulaDesignerService.itemSettingsServices[entityGuid] = this.#fieldsSettingsSvc;\r\n    this.#fieldsTranslateSvc.init(entityGuid);\r\n\r\n    const fields$ = this.#getFieldsToProcess$(entityGuid);\r\n\r\n    // Create all the controls in the form right at the beginning\r\n    fields$.pipe(take(1)).subscribe(allFields => this.#formFieldsBuilderService.createFields(entityGuid, this.form, allFields));\r\n\r\n    this.#fieldsSyncSvc.keepFieldsAndStateInSync(this.form, fields$);\r\n\r\n    // Sync state to parent: dirty, isValid, value changes\r\n    this.#formSyncSvc.setupSync(entityGuid);\r\n\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#fieldsSettingsSvc.disableForCleanUp();\r\n  }\r\n\r\n  #getFieldsToProcess$(entityGuid: string): Observable<FieldInitSpecs[]> {\r\n    const l = this.log.fnIf('getFieldsToProcess', null, entityGuid);\r\n    const form = this.form;\r\n\r\n    const allProps = this.#fieldsSettingsSvc.allProps;\r\n    const allProps$ = toObservable(allProps, { injector: this.#injector });\r\n\r\n    // 1. Prepare: Take field props and enrich initial values and input types\r\n    const fieldsToProcess: Observable<FieldInitSpecs[]> = allProps$\r\n      .pipe(\r\n        filter(fields => fields != null && Object.keys(fields).length > 0),\r\n        map(allFields => {\r\n          const fields: FieldInitSpecs[] = Object.entries(allFields)\r\n            .map(([name, props]) => {\r\n              const hasControl = form.controls.hasOwnProperty(name);\r\n              const control = hasControl ? form.controls[name] : null;\r\n              return {\r\n                name,\r\n                props,\r\n                inputType: props.constants.inputTypeSpecs.inputType,\r\n                value: props.value,\r\n                hasControl,\r\n                control,\r\n              } satisfies FieldInitSpecs;\r\n            });\r\n          this.log.aIf('fieldsToProcess$', { entityGuid, fields });\r\n          return fields;\r\n        }),\r\n      );\r\n    return l.rSilent(fieldsToProcess);\r\n  }\r\n}\r\n","<form class=\"dynamic-form\" [formGroup]=\"form\">\r\n  <app-edit-entity-form [entityGuid]=\"entityGuid()\" [index]=\"index()\"></app-edit-entity-form>\r\n</form>\r\n","import { EavField } from '../eav';\r\n\r\n/**\r\n * A JSON representation of EavValues.\r\n * The keys are a string containing a CSV list of assigned dimensions, the values are the values.\r\n * This is a DTO (Data Transfer Object).\r\n */\r\nexport class EavValuesDto<T> {\r\n  [languages: string]: T;\r\n\r\n  static valuesToDto<T>(eavValues: EavField<T>): EavValuesDto<T> {\r\n    const dtoValue: EavValuesDto<T> = {};\r\n    for (const value of eavValues.Values) {\r\n      const dimensions = value.Dimensions.map(dimension => dimension.Value).join();\r\n      dtoValue[dimensions] = value.Value;\r\n    }\r\n    return dtoValue;\r\n  }\r\n}\r\n","import { EavAttributesOfTypeDto, EavValuesDto } from '.';\r\nimport { EavEntityAttributes } from '../eav';\r\n\r\n/**\r\n * A JSON representation of EavAttributes.\r\n * It's basically a list containing each type (string, number, etc.).\r\n * That then contains an array of all the attributes of that type.\r\n * This is a DTO (Data Transfer Object).\r\n */\r\nexport class EavAttributesDto {\r\n  [attributeType: string]: EavAttributesOfTypeDto<any>;\r\n\r\n  static attributesToDto(attributes: EavEntityAttributes): EavAttributesDto {\r\n    const attributesDto: EavAttributesDto = {};\r\n\r\n    for (const [name, values] of Object.entries(attributes)) {\r\n      const type = values.Type;\r\n      if (attributesDto[type] == null) {\r\n        attributesDto[type] = {};\r\n      }\r\n      attributesDto[type][name] = EavValuesDto.valuesToDto(values);\r\n    }\r\n    return attributesDto;\r\n  }\r\n}\r\n","import { EavAttributesDto } from '.';\r\nimport { EavEntity, EavFor, EavType } from '../eav';\r\n\r\n/**\r\n * A JSON representation of an EavEntity.\r\n * This is a DTO (Data Transfer Object).\r\n */\r\nexport class EavEntityDto {\r\n  Attributes: EavAttributesDto;\r\n  Guid: string;\r\n  Id: number;\r\n  Owner: string;\r\n  Type: EavType;\r\n  Version: number;\r\n  For?: EavFor;\r\n  Metadata?: EavEntityDto[];\r\n\r\n  static entityToDto(entity: EavEntity): EavEntityDto {\r\n    const attributesDto = EavAttributesDto.attributesToDto(entity.Attributes);\r\n    const metadataDto = this.entitiesToDto(entity.Metadata);\r\n\r\n    const entityDto: EavEntityDto = {\r\n      Attributes: attributesDto,\r\n      Guid: entity.Guid,\r\n      Id: entity.Id,\r\n      Owner: entity.Owner,\r\n      Type: entity.Type,\r\n      Version: entity.Version,\r\n      For: entity.For,\r\n      Metadata: metadataDto,\r\n    };\r\n    return entityDto;\r\n  }\r\n\r\n  private static entitiesToDto(entities: EavEntity[]): EavEntityDto[] {\r\n    if (entities == null) { return null; }\r\n\r\n    const entities1 = entities.map(entity => EavEntityDto.entityToDto(entity));\r\n    return entities1;\r\n  }\r\n}\r\n","import { EavEntityDto } from '.';\r\nimport { EavItem } from '../eav';\r\nimport { ItemIdentifierHeader } from '../../../../shared/models/edit-form.model';\r\n\r\n/**\r\n * A bundle/set for an Entity.\r\n * Contains the Entity and the Header.\r\n * This is a DTO (Data Transfer Object).\r\n */\r\nexport class EavEntityBundleDto {\r\n  Entity: EavEntityDto;\r\n  Header: ItemIdentifierHeader;\r\n\r\n  static bundleToDto(item: EavItem): EavEntityBundleDto {\r\n    const entity1 = EavEntityDto.entityToDto(item.Entity);\r\n\r\n    const bundleDto: EavEntityBundleDto = {\r\n      Entity: entity1,\r\n      Header: item.Header,\r\n    };\r\n    return bundleDto;\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Preview of Features which are not Licensed</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p>\r\n      99% of all features in 2sxc are free. But some very advanced features are only for patrons (supporters) and enterprise customers. You\r\n      are permitted to try these features, but to really use them you must get a license.\r\n    </p>\r\n    <p>\r\n      This message should remind you 😉 of that.\r\n      <br />\r\n      Please contact your account manager to get them licensed, or visit the\r\n      <a href=\"https://patrons.2sxc.org/\" target=\"_blank\">patrons</a> to learn more.\r\n    </p>\r\n    <p>The following features are currently in preview:</p>\r\n    @for (feature of features(); track feature.nameId) {\r\n      <app-feature-details-dialog\r\n        [specs]=\"{ feature: feature, showGuid: false, showStatus: true, showClose: false }\"\r\n      ></app-feature-details-dialog>\r\n      <br />\r\n    }\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, inject, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../core';\r\nimport { FeatureDetailsDialogComponent } from '../../apps-management/licence-info/feature-details-dialog/feature-details-dialog.component';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { classLog, commonSpecs } from '../../shared/logging';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { FeaturesScopedService } from '../features-scoped.service';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\nconst logSpecs = {\r\n  ...commonSpecs,\r\n  unlicensedFeatures: false,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-features-used-but-unlicensed-dialog',\r\n  templateUrl: './features-used-but-unlicensed-dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n    FeatureDetailsDialogComponent,\r\n  ]\r\n})\r\nexport class FeaturesUsedButUnlicensedComponent {\r\n\r\n  log = classLog({ FeaturesUsedButUnlicensedComponent }, logSpecs, true);\r\n\r\n  #features = inject(FeaturesScopedService);\r\n\r\n  #featureDetails = transient(FeatureDetailService);\r\n\r\n  constructor() {\r\n    const l = this.log.fnIf('constructor');\r\n  }\r\n\r\n  protected features = this.#featureDetails.getFeatureDetails(this.#features.unlicensedFeatures());\r\n\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param dialog\r\n * @param viewContainerRef the container ref is important to get services (eg. features) from the parent component\r\n */\r\nexport function openFeaturesUsedButUnlicensedDialog(dialog: MatDialog, viewContainerRef: ViewContainerRef) {\r\n  dialog.open(FeaturesUsedButUnlicensedComponent, {\r\n    autoFocus: false,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '600px',\r\n  });\r\n}\r\n","import { AsyncPipe, NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { Of } from '../../../../../../../core';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { FormPublishingService } from '../../../form/form-publishing.service';\r\nimport { PublishModes } from '../../main/edit-dialog-main.models';\r\nimport { isCtrlS } from '../../main/keyboard-shortcuts';\r\n\r\n\r\n@Component({\r\n    selector: 'app-publish-status-dialog',\r\n    templateUrl: './publish-status-dialog.component.html',\r\n    styleUrls: ['./publish-status-dialog.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        MatCardModule,\r\n        MatListModule,\r\n        NgClass,\r\n        MatIconModule,\r\n        AsyncPipe,\r\n        TranslateModule,\r\n    ],\r\n})\r\nexport class PublishStatusDialogComponent {\r\n  PublishModes = PublishModes;\r\n\r\n  protected publishMode = this.publishStatusService.getPublishMode(this.formConfig.config.formId)\r\n  protected options = this.formConfig.config.versioningOptions;\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<PublishStatusDialogComponent>,\r\n    private publishStatusService: FormPublishingService,\r\n    private formConfig: FormConfigService,\r\n  ) {\r\n    this.dialog.keydownEvents().subscribe(event => {\r\n      if (isCtrlS(event))\r\n        event.preventDefault();\r\n    });\r\n  }\r\n\r\n  setPublishMode(publishMode: Of<typeof PublishModes>) {\r\n    this.publishStatusService.setPublishMode(publishMode, this.formConfig.config.formId, this.formConfig);\r\n    this.closeDialog();\r\n  }\r\n\r\n  private closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{ 'PublishStatus.Dialog.Title' | translate }}</mat-card-title>\r\n    <mat-card-subtitle>{{ 'PublishStatus.Dialog.Intro' | translate }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content class=\"eav-card-content__no-padding\">\r\n    <mat-nav-list toggle>\r\n      <mat-list-item lines=\"3\" (click)=\"setPublishMode(PublishModes.Show)\"\r\n        [disabled]=\"options[PublishModes.Show] !== true\"\r\n        [ngClass]=\"{ 'eav-list-item__focus': publishMode() === PublishModes.Show }\">\r\n        <mat-icon matListItemIcon>visibility</mat-icon>\r\n        <span matListItemTitle>{{ 'PublishStatus.Dialog.Show.Title' | translate }}</span>\r\n        <span>{{ 'PublishStatus.Dialog.Show.Body' | translate }}</span>\r\n      </mat-list-item>\r\n      <mat-list-item lines=\"3\" (click)=\"setPublishMode(PublishModes.Hide)\"\r\n        [disabled]=\"options[PublishModes.Hide] !== true\"\r\n        [ngClass]=\"{ 'eav-list-item__focus': publishMode() === PublishModes.Hide }\">\r\n        <mat-icon matListItemIcon>visibility_off</mat-icon>\r\n        <span matListItemTitle>{{ 'PublishStatus.Dialog.Hide.Title' | translate }}</span>\r\n        <span>{{ 'PublishStatus.Dialog.Hide.Body' | translate }}</span>\r\n      </mat-list-item>\r\n      <mat-list-item lines=\"3\" (click)=\"setPublishMode(PublishModes.Branch)\"\r\n        [disabled]=\"options[PublishModes.Branch] !== true\"\r\n        [ngClass]=\"{ 'eav-list-item__focus': publishMode() === PublishModes.Branch }\">\r\n        <mat-icon matListItemIcon svgIcon=\"draft-branch\"></mat-icon>\r\n        <span matListItemTitle>{{ 'PublishStatus.Dialog.Branch.Title' | translate }}</span>\r\n        <span>{{ 'PublishStatus.Dialog.Branch.Body' | translate }}</span>\r\n      </mat-list-item>\r\n    </mat-nav-list>\r\n  </mat-card-content>\r\n</mat-card>\r\n","<mat-card class=\"eav-header\">\r\n  <!-- Close button to the left -->\r\n  <button\r\n    mat-icon-button\r\n    class=\"eav-exit-button\"\r\n    (click)=\"close()\"\r\n    [tippyTranslate]=\"'Form.Buttons.' + (config.isParentDialog ? 'Exit' : 'Return') + '.Tip'\"\r\n  >\r\n    <mat-icon class=\"eav-icon\">{{ config.isParentDialog ? 'clear' : 'arrow_back' }}</mat-icon>\r\n  </button>\r\n\r\n  <!-- Language Bar (if used). The empty div is always needed because ATM the alignment would otherwise be off (should fix) -->\r\n  <div class=\"eav-languages\">\r\n    @if (hasLanguages()) {\r\n      @defer {\r\n        <app-language-switcher [disabled]=\"disabled()\"></app-language-switcher>\r\n      }\r\n    }\r\n  </div>\r\n\r\n  <!-- END -->\r\n  @if (readOnly().isReadOnly) {\r\n    <mat-icon class=\"eav-hint-icon\" [tippyTranslate]=\"'General.ReadOnlyHint.' + readOnly().reason\"> lock </mat-icon>\r\n  }\r\n  @if (config.isCopy) {\r\n    <mat-icon class=\"eav-hint-icon\" tippyTranslate=\"General.CopyHint\"> file_copy </mat-icon>\r\n  }\r\n  <button\r\n    mat-button\r\n    class=\"eav-publish-button\"\r\n    [disabled]=\"readOnly().isReadOnly\"\r\n    (click)=\"openPublishStatusDialog()\"\r\n    [tippyTranslate]=\"'PublishStatus.' + publishMode() + '.Tip'\"\r\n  >\r\n    <span class=\"eav-publish-mode\">\r\n      {{ 'PublishStatus.Label' | translate }}\r\n      <b>{{ 'PublishStatus.' + publishMode() | translate | uppercase }}</b>\r\n    </span>\r\n  </button>\r\n  @if (showLicenseWarning()) {\r\n    <button mat-button tippyTranslate=\"License-EditUi-Warning-Tooltip\" (click)=\"openUnlicensedDialog()\">\r\n      {{ 'License-EditUi-Warning-Label' | translate }} 🛡️\r\n    </button>\r\n  }\r\n</mat-card>\r\n","import { UpperCasePipe } from '@angular/common';\r\nimport { Component, computed, inject, input, output, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FeaturesScopedService } from '../../../features/features-scoped.service';\r\nimport { openFeaturesUsedButUnlicensedDialog } from '../../../features/features-used-but-missing-dialog/features-used-but-unlicensed-dialog.component';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { FormPublishingService } from '../../form/form-publishing.service';\r\nimport { FormsStateService } from '../../form/forms-state.service';\r\nimport { LanguageService } from '../../localization/language.service';\r\nimport { LanguageSwitcherComponent } from './language-switcher/language-switcher.component';\r\nimport { PublishStatusDialogComponent } from './publish-status-dialog/publish-status-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-dialog-header',\r\n  templateUrl: './edit-dialog-header.component.html',\r\n  styleUrls: ['./edit-dialog-header.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    LanguageSwitcherComponent,\r\n    UpperCasePipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class EditDialogHeaderComponent {\r\n  disabled = input<boolean>();\r\n  protected closeDialog = output<void>();\r\n\r\n  #formsStateSvc = inject(FormsStateService);\r\n  #features = inject(FeaturesScopedService);\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private languageService: LanguageService,\r\n    private publishStatusService: FormPublishingService,\r\n    public formConfig: FormConfigService,\r\n  ) { }\r\n\r\n  protected config = this.formConfig.config;\r\n  protected readOnly = this.#formsStateSvc.readOnly;\r\n  protected publishMode = this.publishStatusService.getPublishMode(this.formConfig.config.formId)\r\n\r\n  protected hasLanguages = computed(() => {\r\n    const languages = this.languageService.getAllSignal();\r\n    return languages().length > 0\r\n  });\r\n\r\n  protected showLicenseWarning = this.#features.hasUnlicensedFeatures;\r\n\r\n  close() {\r\n    this.closeDialog.emit();\r\n  }\r\n\r\n  openPublishStatusDialog() {\r\n    this.matDialog.open(PublishStatusDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '350px',\r\n    });\r\n  }\r\n\r\n  openUnlicensedDialog() {\r\n    openFeaturesUsedButUnlicensedDialog(this.matDialog, this.viewContainerRef);\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { delay, filter, fromEvent, map, merge, pairwise } from 'rxjs';\r\nimport { BaseDirective } from '../../../shared/directives/base.directive';\r\nimport { mapUntilChanged } from '../../../shared/rxJs/mapUntilChanged';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { LanguageService } from '../../localization/language.service';\r\nimport { classLog } from '../../../shared/logging';\r\n\r\nconst classNext = 'next';\r\nconst classPrevious = 'previous';\r\nconst animationNames = ['move-next', 'move-previous'];\r\n\r\n@Directive({\r\n  selector: '[appFormSlide]',\r\n  standalone: true\r\n})\r\nexport class FormSlideDirective extends BaseDirective implements OnInit, OnDestroy {\r\n\r\n  log = classLog({FormSlideDirective});\r\n\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    private languageService: LanguageService,\r\n    private formConfig: FormConfigService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const l = this.log.fn('ngOnInit');\r\n    const languages = this.languageService.getAll();\r\n    const nativeElement = this.elementRef.nativeElement;\r\n    this.subscriptions.add(\r\n      merge(\r\n        // emit 'next' and 'previous' slide direction based on language change\r\n        this.formConfig.language$.pipe(\r\n          map(language => language.current),\r\n          mapUntilChanged(m => m),\r\n          // distinctUntilChanged(),\r\n          pairwise(),\r\n          map(([previousLang, currentLang]) => {\r\n            l.a('toggle', { previousLang, currentLang });\r\n            const prevIndex = languages.findIndex(lang => lang.NameId === previousLang);\r\n            const currentIndex = languages.findIndex(lang => lang.NameId === currentLang);\r\n            const slide = (prevIndex > currentIndex) ? classPrevious : classNext;\r\n            l.a('slide', { prevIndex, currentIndex, slide });\r\n            return slide;\r\n          }),\r\n        ),\r\n        // emit '' to stop the slide animation\r\n        fromEvent<AnimationEvent>(nativeElement, 'animationend').pipe(\r\n          filter(event => animationNames.find(an => event.animationName.endsWith(an)) !== undefined),\r\n          map(() => ''),\r\n          delay(0), // small delay because animationend fires a bit too early\r\n        ),\r\n      ).subscribe(slide => {\r\n        const classList = nativeElement.classList;\r\n        if (slide === '') {\r\n          l.a('stop-slide');\r\n          classList.remove(classNext);\r\n          classList.remove(classPrevious);\r\n        } else {\r\n          l.a(`start-slide to '${slide}'`);\r\n          classList.add(slide);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"save-errors-container\">\r\n  <div>{{ 'Errors.SaveErrors' | translate }}</div>\r\n  <br />\r\n  @for (error of snackBarData.fieldErrors; track error) {\r\n    <div>\r\n      <span>{{ error.field }}<span>: {{ error.message | translate }}</span></span>\r\n    </div>\r\n  }\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { SaveErrorsSnackBarData } from './snack-bar-save-errors.models';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'app-snack-bar-save-errors',\r\n    templateUrl: './snack-bar-save-errors.component.html',\r\n    styleUrls: ['./snack-bar-save-errors.component.scss'],\r\n    standalone: true,\r\n    imports: [TranslateModule],\r\n})\r\nexport class SnackBarSaveErrorsComponent {\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public snackBarData: SaveErrorsSnackBarData) { }\r\n}\r\n","import { UpperCasePipe } from '@angular/common';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material/snack-bar';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { UnsavedChangesSnackBarData } from './snack-bar-unsaved-changes.models';\r\n\r\n@Component({\r\n  selector: 'app-snack-bar-unsaved-changes',\r\n  templateUrl: './snack-bar-unsaved-changes.component.html',\r\n  styleUrls: ['./snack-bar-unsaved-changes.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    UpperCasePipe,\r\n    TranslateModule,\r\n    UpperCasePipe\r\n  ],\r\n})\r\nexport class SnackBarUnsavedChangesComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<SnackBarUnsavedChangesComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) private snackBarData: UnsavedChangesSnackBarData,\r\n  ) { }\r\n\r\n  saveChanges(save: boolean) {\r\n    this.snackBarData.save = save;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","<!-- The message -->\r\n<span class=\"error-message\">\r\n  {{ 'Errors.UnsavedChanges' | translate }}\r\n</span>\r\n\r\n<!-- The save / exit buttons -->\r\n<div class=\"my-flex-right\">\r\n  <button mat-button color=\"primary\" (click)=\"saveChanges(false)\">\r\n    {{ 'General.Buttons.NotSave' | translate | uppercase }}\r\n  </button>\r\n  <button mat-button color=\"primary\" (click)=\"saveChanges(true)\">\r\n    {{ 'General.Buttons.Save' | translate | uppercase }}\r\n  </button>\r\n</div>\r\n","import { CdkScrollable } from '@angular/cdk/scrolling';\r\nimport { AsyncPipe, NgClass } from '@angular/common';\r\nimport { AfterViewInit, Component, computed, effect, inject, OnDestroy, OnInit, QueryList, signal, ViewChildren } from '@angular/core';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport 'reflect-metadata';\r\nimport { delay, fromEvent, of, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { ToggleDebugDirective } from '../../../shared/directives/toggle-debug.directive';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { ExtendedFabSpeedDialImports } from '../../../shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.imports';\r\nimport { GlobalConfigService } from '../../../shared/services/global-config.service';\r\nimport { computedWithPrev } from '../../../shared/signals/signal.utilities';\r\nimport { UserPreferences } from '../../../shared/user/user-preferences.service';\r\nimport { LoadIconsService } from '../../assets/icons/load-icons.service';\r\nimport { EntityFormBuilderComponent } from '../../entity-form/entity-form-builder/form-builder.component';\r\nimport { EntityFormStateService } from '../../entity-form/entity-form-state.service';\r\nimport { PickerTreeDataHelper } from '../../fields/picker/picker-tree/picker-tree-data-helper';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { FormDataService } from '../../form/form-data.service';\r\nimport { FormLanguageService } from '../../form/form-language.service';\r\nimport { FormPublishingService } from '../../form/form-publishing.service';\r\nimport { FormsStateService } from '../../form/forms-state.service';\r\nimport { FormulaDesignerService } from '../../formulas/designer/formula-designer.service';\r\nimport { LanguageService } from '../../localization/language.service';\r\nimport { EditRoutingService } from '../../routing/edit-routing.service';\r\nimport { AdamCacheService } from '../../shared/adam/adam-cache.service';\r\nimport { LinkCacheService } from '../../shared/adam/link-cache.service';\r\nimport { ContentTypeItemService } from '../../shared/content-types/content-type-item.service';\r\nimport { ContentTypeService } from '../../shared/content-types/content-type.service';\r\nimport { InputTypeService } from '../../shared/input-types/input-type.service';\r\nimport { EavEntityBundleDto } from '../../shared/models/json-format-v1';\r\nimport { ValidationMsgHelper } from '../../shared/validation/validation-messages.helpers';\r\nimport { ItemService } from '../../state/item.service';\r\nimport { MetadataDecorators } from '../../state/metadata-decorators.constants';\r\nimport { SaveResult } from '../../state/save-result.model';\r\nimport { EditEntryComponent } from '../entry/edit-entry.component';\r\nimport { EditDialogFooterComponent } from '../footer/edit-dialog-footer.component';\r\nimport { footerPreferences } from '../footer/footer-preferences';\r\nimport { EditDialogHeaderComponent } from '../header/edit-dialog-header.component';\r\nimport { SaveEavFormData } from './edit-dialog-main.models';\r\nimport { FormSlideDirective } from './form-slide.directive';\r\nimport { isCtrlS, isEscape } from './keyboard-shortcuts';\r\nimport { SnackBarSaveErrorsComponent } from './snack-bar-save-errors/snack-bar-save-errors.component';\r\nimport { FieldErrorMessage, SaveErrorsSnackBarData } from './snack-bar-save-errors/snack-bar-save-errors.models';\r\nimport { SnackBarUnsavedChangesComponent } from './snack-bar-unsaved-changes/snack-bar-unsaved-changes.component';\r\nimport { UnsavedChangesSnackBarData } from './snack-bar-unsaved-changes/snack-bar-unsaved-changes.models';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  constructor: true,\r\n}\r\n\r\n/**\r\n * The edit-main component is the complete edit component containing:\r\n * - Header (which also contains the languages and publish state)\r\n * - Each entity form\r\n * - Footer\r\n */\r\n@Component({\r\n  selector: 'app-edit-dialog-main',\r\n  templateUrl: './edit-dialog-main.component.html',\r\n  styleUrls: ['./edit-dialog-main.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogActions,\r\n    NgClass,\r\n    EditDialogHeaderComponent,\r\n    CdkScrollable,\r\n    FormSlideDirective,\r\n    EntityFormBuilderComponent,\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    EditDialogFooterComponent,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    ...ExtendedFabSpeedDialImports,\r\n    ToggleDebugDirective,\r\n  ],\r\n  providers: [\r\n    EditRoutingService,\r\n    FormsStateService,\r\n    // This is shared across all entities on this form\r\n    FormulaDesignerService,\r\n\r\n    // TODO: probably move to each picker component (Errors)\r\n    PickerTreeDataHelper,\r\n  ],\r\n})\r\nexport class EditDialogMainComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  log = classLog({ EditDialogMainComponent }, logSpecs);\r\n\r\n  @ViewChildren(EntityFormBuilderComponent) formBuilderRefs: QueryList<EntityFormBuilderComponent>;\r\n\r\n  #globalConfigService = inject(GlobalConfigService);\r\n  #formConfig = inject(FormConfigService);\r\n\r\n\r\n  /** Signal to tell the UI if the footer should show and/or the footer needs more space (changes CSS) */\r\n  #prefManager = inject(UserPreferences).part(footerPreferences)\r\n  footerSize = computed(() => this.#prefManager.data().size);\r\n\r\n  #loadIconsService = transient(LoadIconsService);\r\n  #formDataService = transient(FormDataService);\r\n  #entityFormStateService = transient(EntityFormStateService);\r\n  isSaving = this.#entityFormStateService.isSaving;\r\n\r\n\r\n  protected viewInitiated = signal(false);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<EditEntryComponent>,\r\n    private contentTypeItemService: ContentTypeItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private inputTypeService: InputTypeService,\r\n    private itemService: ItemService,\r\n    private languageService: LanguageService,\r\n    private languageStore: FormLanguageService,\r\n    private snackBar: MatSnackBar,\r\n    private translate: TranslateService,\r\n    private editRoutingService: EditRoutingService,\r\n    private publishStatusService: FormPublishingService,\r\n    private formsStateService: FormsStateService,\r\n    private adamCacheService: AdamCacheService,\r\n    private linkCacheService: LinkCacheService,\r\n    private formulaDesignerService: FormulaDesignerService,\r\n  ) {\r\n    super();\r\n    const l = this.log.fnIf('constructor');\r\n    this.dialog.disableClose = true;\r\n\r\n\r\n    // Initialize default user preferences for footer show/hide\r\n    const pref = this.#prefManager;\r\n    if (pref.data().pinned == null)\r\n      pref.set('pinned', this.#formConfig.config.dialogContext.User?.IsSystemAdmin ?? false);\r\n\r\n    // Watch to save based on messages from sub-dialogs.\r\n    // effect(() => {\r\n    //   console.log(this.formsStateService.triggerTrySaveAndMaybeClose())\r\n    //   // TODO: Old Code Wird x fach aufgerufen\r\n    //   const { tryToSave, close } = this.formsStateService.triggerTrySaveAndMaybeClose();\r\n    //   if (!tryToSave) return;\r\n    //   this.saveAll(close);\r\n    // }, { allowSignalWrites: true });\r\n\r\n    let previousState = { tryToSave: false, close: false };\r\n\r\n    effect(() => {\r\n      const currentState = this.formsStateService.triggerTrySaveAndMaybeClose();\r\n\r\n      if (currentState.tryToSave && (currentState.tryToSave !== previousState.tryToSave || currentState.close !== previousState.close)) {\r\n        this.saveAll(currentState.close);\r\n      }\r\n\r\n      previousState = currentState;  // Zustand aktualisieren\r\n    }, { allowSignalWrites: true });\r\n\r\n  }\r\n\r\n  #saveResult: SaveResult;\r\n\r\n  protected items = this.itemService.getManySignal(this.#formConfig.config.itemGuids);\r\n\r\n  protected formsValid = this.formsStateService.formsValidTemp;\r\n  protected saveButtonDisabled = this.formsStateService.saveButtonDisabled;\r\n  protected hideHeader = this.languageStore.getHideHeaderSignal(this.#formConfig.config.formId);\r\n\r\n  //#region Footer - Show once or more, hide again, and expand footer (extra large footer)\r\n\r\n  /** Signal to determine if we should show the footer. Will affect style.display of the footer tag */\r\n  protected footerShow = computed(() => {\r\n    // if debug is true, then it was set once using the keyboard shortcut\r\n    if (this.#globalConfigService.isDebug()) {\r\n      this.#debugWasModified = true;\r\n      return true;\r\n    }\r\n\r\n    // If debug is false, and was never modified, show based on system admin status\r\n    return !this.#debugWasModified && this.#prefManager.data().pinned;\r\n  });\r\n\r\n  /** Show footer once or more - basically stays true if it was ever shown */\r\n  protected footerShowOnceOrMore = computedWithPrev(prev => prev || this.footerShow(), false);\r\n\r\n  /** Special variable to check if debug was ever triggered, to allow super-users to re-hide the footer */\r\n  #debugWasModified = false;\r\n\r\n\r\n  //#endregion\r\n\r\n  /** delay showing the form, but not quite sure why. maybe to prevent flickering? */\r\n  protected delayForm = toSignal(\r\n    of(false).pipe(\r\n      delay(0),\r\n      startWith(true)\r\n    ));\r\n\r\n\r\n  ngOnInit() {\r\n    this.editRoutingService.init();\r\n    this.#loadIconsService.load();\r\n    this.formsStateService.init();\r\n    this.formulaDesignerService.cache.init();\r\n\r\n    this.#startSubscriptions();\r\n    this.#watchKeyboardShortcuts();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => this.viewInitiated.set(true));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.languageStore.remove(this.#formConfig.config.formId);\r\n    this.publishStatusService.remove(this.#formConfig.config.formId);\r\n\r\n    if (this.#formConfig.config.isParentDialog) {\r\n      // clear the rest of the store\r\n      this.languageStore.clearCache();\r\n      this.languageService.clearCache();\r\n      this.itemService.clearCache();\r\n      this.inputTypeService.clearCache();\r\n      this.contentTypeItemService.clearCache();\r\n      this.contentTypeService.clearCache();\r\n      this.publishStatusService.clearCache();\r\n      this.adamCacheService.clearCache();\r\n      this.linkCacheService.clearCache();\r\n    }\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(forceClose?: boolean): void {\r\n    if (forceClose)\r\n      return this.dialog.close(this.#formConfig.config.createMode ? this.#saveResult : undefined);\r\n\r\n    if (!this.formsStateService.readOnly().isReadOnly && this.formsStateService.formsAreDirty())\r\n      return this.#snackBarYouHaveUnsavedChanges();\r\n\r\n    this.dialog.close(this.#formConfig.config.createMode ? this.#saveResult : undefined);\r\n  }\r\n\r\n  /** Save all forms */\r\n  saveAll(close: boolean) {\r\n    this.#entityFormStateService.isSaving.set(true);\r\n\r\n    const l = this.log.fn('saveAll', { close });\r\n    if (this.formsStateService.formsAreValid()) {\r\n\r\n      const items = this.formBuilderRefs\r\n        .map(formBuilderRef => {\r\n          const eavItem = this.itemService.get(formBuilderRef.entityGuid());\r\n          const isValid = this.formsStateService.getFormValid(eavItem.Entity.Guid);\r\n          if (!isValid)\r\n            return null;\r\n\r\n          // do not try to save item which doesn't have any fields, nothing could have changed about it\r\n          // but enable saving if there is a special metadata\r\n          const hasAttributes = Object.keys(eavItem.Entity.Attributes).length > 0;\r\n          const contentType = this.contentTypeService.getContentTypeOfItem(eavItem);\r\n          const saveIfEmpty = contentType.Metadata.some(m => m.Type.Name === MetadataDecorators.SaveEmptyDecorator);\r\n          if (!hasAttributes && !saveIfEmpty)\r\n            return null;\r\n\r\n          const item = EavEntityBundleDto.bundleToDto(eavItem);\r\n          return item;\r\n        })\r\n        .filter(item => item != null);\r\n\r\n      const publishStatus = this.publishStatusService.get(this.#formConfig.config.formId);\r\n\r\n      const saveFormData: SaveEavFormData = {\r\n        Items: items,\r\n        IsPublished: publishStatus.IsPublished,\r\n        DraftShouldBranch: publishStatus.DraftShouldBranch,\r\n      };\r\n      l.a('SAVE FORM DATA:', { saveFormData });\r\n      this.snackBar.open(this.translate.instant('Message.Saving'), null, { duration: 2000 });\r\n\r\n      this.#formDataService.saveFormData(saveFormData, this.#formConfig.config.partOfPage).subscribe({\r\n        next: result => {\r\n          l.a('SAVED!, result:', { result, close });\r\n          this.itemService.updater.updateItemId(result);\r\n          this.snackBar.open(this.translate.instant('Message.Saved'), null, { duration: 2000 });\r\n          this.formsStateService.formsAreDirty.set(false);\r\n          this.#saveResult = result;\r\n          if (close)\r\n            this.closeDialog();\r\n\r\n          setTimeout(() =>\r\n            this.#entityFormStateService.isSaving.set(false)\r\n\r\n            , 500);\r\n\r\n        },\r\n        error: err => {\r\n          l.a('SAVE FAILED:', err);\r\n          this.snackBar.open('Error', null, { duration: 2000 });\r\n          this.#entityFormStateService.isSaving.set(false)\r\n        },\r\n      });\r\n    } else {\r\n      // Case form is not valid\r\n\r\n      // check if there is even a formBuilder to process, otherwise exit\r\n      if (this.formBuilderRefs == null)\r\n        return;\r\n\r\n      const formErrors: Record<string, string>[] = [];\r\n      this.formBuilderRefs.forEach(formBuilderRef => {\r\n        if (!formBuilderRef.form.invalid)\r\n          return;\r\n        formErrors.push(ValidationMsgHelper.validateForm(formBuilderRef.form));\r\n      });\r\n\r\n      const fieldErrors: FieldErrorMessage[] = [];\r\n      formErrors.forEach(formError => {\r\n        Object.keys(formError).forEach(key => {\r\n          fieldErrors.push({ field: key, message: formError[key] });\r\n        });\r\n      });\r\n\r\n      this.snackBar.openFromComponent(SnackBarSaveErrorsComponent, {\r\n        data: {\r\n          fieldErrors,\r\n        } satisfies SaveErrorsSnackBarData,\r\n        duration: 5000,\r\n      });\r\n    }\r\n  }\r\n\r\n  #startSubscriptions() {\r\n    this.subscriptions.add(\r\n      fromEvent<BeforeUnloadEvent>(window, 'beforeunload').subscribe(event => {\r\n        if (this.formsStateService.readOnly().isReadOnly || !this.formsStateService.formsAreDirty())\r\n          return;\r\n        event.preventDefault();\r\n        event.returnValue = ''; // fix for Chrome\r\n        this.#snackBarYouHaveUnsavedChanges();\r\n      })\r\n    );\r\n\r\n    this.subscriptions.add(\r\n      this.dialog.backdropClick().subscribe(_ => this.closeDialog())\r\n    );\r\n  }\r\n\r\n  #watchKeyboardShortcuts(): void {\r\n    this.dialog.keydownEvents().subscribe(event => {\r\n      if (isEscape(event))\r\n        return this.closeDialog();\r\n\r\n      if (isCtrlS(event)) {\r\n        event.preventDefault();\r\n        if (!this.formsStateService.readOnly().isReadOnly && !this.#entityFormStateService.isSaving())\r\n          this.saveAll(event.altKey);\r\n      }\r\n    });\r\n  }\r\n\r\n  #snackBarYouHaveUnsavedChanges(): void {\r\n    const snackBarRef = this.snackBar.openFromComponent(SnackBarUnsavedChangesComponent, {\r\n      data: {\r\n        save: false,\r\n      } satisfies UnsavedChangesSnackBarData,\r\n      duration: 5000,\r\n    });\r\n\r\n    snackBarRef.onAction().subscribe(() => {\r\n      if ((snackBarRef.containerInstance.snackBarConfig.data as UnsavedChangesSnackBarData).save)\r\n        return this.saveAll(true);\r\n\r\n      this.closeDialog(true);\r\n    });\r\n  }\r\n}\r\n","<div style=\"position: relative\" mat-dialog__container appToggleDebug>\r\n  <div mat-dialog-actions class=\"form-header-container\" [ngClass]=\"{ 'u-display-none': hideHeader() }\">\r\n    <app-edit-dialog-header class=\"multi-item-edit-form-header\" [disabled]=\"!formsValid()\"\r\n      (closeDialog)=\"closeDialog()\">\r\n    </app-edit-dialog-header>\r\n  </div>\r\n  <div style=\"position: relative\">\r\n    <!-- cdkScrollable is required when using matAutocomplete with scrollable element that is not body. Fixes matAutocomplete not following input  -->\r\n    <!-- TODO_(mdc-migration) -->\r\n    <div mat-mdc-dialog-content cdkScrollable class=\"eav-dialog-content u-hide-scrollbar\" [ngClass]=\"{\r\n        'debug-enabled': footerShow(),\r\n        'debug-info-is-open': footerShow() && footerSize(),\r\n        'footer-xl': footerShow() && (footerSize() == 2),\r\n        'hide-header-height-fix': hideHeader()\r\n        }\">\r\n      <div class=\"eav-layout-grid\">\r\n        <div class=\"eav-layout-grid__inner\">\r\n          @if (!delayForm())\r\n          {\r\n          <div class=\"eav-layout-grid__cell--span-12\" appFormSlide>\r\n            @for (item of items(); track item.Entity.Guid; let i = $index)\r\n            {\r\n            <div>\r\n              <app-edit-entity-form-builder [entityGuid]=\"item.Entity.Guid\" [index]=\"i\"></app-edit-entity-form-builder>\r\n            </div>\r\n            }\r\n          </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    @if (viewInitiated()) {\r\n      <extended-fab-speed-dial [disabled]=\"saveButtonDisabled()\">\r\n        <ng-template extendedFabSpeedDialTriggerContent>\r\n          <button extended-fab-speed-dial-trigger matRipple [disabled]=\"saveButtonDisabled() || isSaving()\" (click)=\"saveAll(true)\">\r\n            <mat-icon (click)=\"saveButtonDisabled() && saveAll(false)\">done</mat-icon>\r\n            <span>{{ 'Form.Buttons.SaveAndClose' | translate }}</span>\r\n          </button>\r\n        </ng-template>\r\n        <ng-template extendedFabSpeedDialActionsContent>\r\n          <button extended-fab-speed-dial-action matRipple [disabled]=\"saveButtonDisabled() || isSaving()\" (click)=\"saveAll(false)\">\r\n            <span>{{ 'Form.Buttons.Save' | translate }}</span>\r\n            <mat-icon>save</mat-icon>\r\n          </button>\r\n        </ng-template>\r\n      </extended-fab-speed-dial>\r\n    }\r\n  </div>\r\n  @if (footerShowOnceOrMore()) {\r\n    @defer {\r\n    <app-edit-dialog-footer [style.display]=\"footerShow() ? 'block' : 'none'\" mat-dialog-actions>\r\n    </app-edit-dialog-footer>\r\n    }\r\n  }\r\n</div>\r\n","<router-outlet></router-outlet>\r\n\r\n@if (editInitializerService.loaded()) {\r\n  <app-edit-dialog-main></app-edit-dialog-main>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EditDialogMainComponent } from '../main/edit-dialog-main.component';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { Context } from '../../../shared/services/context';\r\nimport { EditInitializerService } from '../../form/edit-initializer.service';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { ScriptsLoaderService } from '../../shared/services/scripts-loader.service';\r\nimport { LoggingService } from '../../shared/services/logging.service';\r\nimport { FeaturesScopedService } from '../../../features/features-scoped.service';\r\n\r\n/**\r\n * This component is the entry point for every edit dialog.\r\n * It initializes the form data and the form itself.\r\n *\r\n * Each edit-entry can show multiple entities, as the form can contain multiple sections each having an entity.\r\n * But if a sub-dialog is opened, this will start anew, with it's own provided services etc.\r\n */\r\n@Component({\r\n  selector: 'app-edit-entry',\r\n  templateUrl: './edit-entry.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    EditDialogMainComponent,\r\n  ],\r\n  providers: [\r\n    // must be by Providers\r\n    LoggingService,\r\n\r\n    // Shared Services across the edit form\r\n    FeaturesScopedService,    // for checking if features are enabled - this can change from dialog to dialog\r\n    EditInitializerService,   // for loading the data and having it ready downstream\r\n    Context,                  // Form context, such as what app etc. - the same for the entire form\r\n    FormConfigService,        // form configuration valid for this entire form; will be initialized by the EditInitializerService\r\n    ScriptsLoaderService,     // Loader for external scripts. Shared as it keeps track of what's been loaded. Maybe should be providedIn: 'root'?\r\n  ],\r\n})\r\nexport class EditEntryComponent implements OnInit {\r\n\r\n  constructor(protected editInitializerService: EditInitializerService, temp: FeaturesScopedService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Load the data - when it's loaded, the HTML will show the rest\r\n    this.editInitializerService.fetchFormData();\r\n  }\r\n}\r\n","import { Of } from '../../../../../../core/type-utilities';\r\nimport { DebugTypes } from './edit-dialog-footer.models';\r\n\r\n/**\r\n * User preferences how the footer should be displayed.\r\n */\r\nexport const footerPreferences = {\r\n  key: 'edit-dialog-footer',\r\n  data: {\r\n    /** Which tab is expanded (or none) */\r\n    tab: null as Of<typeof DebugTypes>,\r\n    /**  */\r\n    expanded: false,\r\n    /** Expansion size, as it can be larger (2) */\r\n    size: 0,\r\n    /** If the footer is pinned, e.g. visible on load. If null, will be prefilled with user-host-status */\r\n    pinned: null as boolean,\r\n  }\r\n};\r\n","\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return (event.key === 's' || event.key === 'S') && (event.ctrlKey || event.metaKey);\r\n}\r\n","import { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { classLog, ClassLogger } from '../../../shared/logging';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { FieldLogicManager } from './field-logic-manager';\r\nimport { FieldLogicTools } from './field-logic-tools';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  constructor: true,\r\n  update: true,\r\n  fields: [...DebugFields, 'Icon'],\r\n}\r\n\r\nexport abstract class FieldLogicBase {\r\n\r\n  /** Logger - lazy created on first access if not yet created */\r\n  get log() { return this.#log ??= classLog({FieldLogicBase}, logSpecs).extendName(`[${this.name}]`) };\r\n  \r\n  #log: ClassLogger<typeof logSpecs>;\r\n\r\n  constructor(inheritingClass: Record<string, unknown> | string, logThis?: boolean) {\r\n    this.#log = classLog(inheritingClass ?? {FieldLogicBase}, logSpecs, logThis);\r\n    this.name ??= this.#log.name;\r\n    this.log.fnIf('constructor');\r\n  }\r\n\r\n  /** Input type name */\r\n  name: string;\r\n\r\n  /** If this field supports AutoTranslate (new v15.x) */\r\n  public canAutoTranslate = false;\r\n\r\n  /** Adds Logic to FieldLogicManager */\r\n  static add(logic: LogicConstructor) {\r\n    const logicInstance = new logic();\r\n    FieldLogicManager.singleton().add(logicInstance);\r\n  }\r\n\r\n  /** Run this dummy method from component to make sure Logic files are not tree shaken */\r\n  static importMe(): void { }\r\n\r\n  /**\r\n   * Entity fields for empty items are prefilled on the backend with []\r\n   * so I can never know if entity field is brand new, or just emptied out by the user\r\n   * \r\n   * Note: 2dm 2023-08-31 moved from InputFieldHelpers; in future, each logic can override this\r\n   */\r\n  isValueEmpty(value: FieldValue, isCreateMode: boolean): boolean {\r\n    const l = this.log.fn('isValueEmpty', { value, isCreateMode });\r\n    const emptyEntityField = Array.isArray(value) && value.length === 0 && isCreateMode;\r\n    return l.r(value === undefined || emptyEntityField);\r\n  }\r\n\r\n  /** \r\n   * Update field settings - typically used on init and in every formula cycle\r\n   */\r\n  abstract update(updateSpecs: FieldLogicUpdate): FieldSettings;\r\n\r\n  /**\r\n   * Lookup advanced (external) configuration.\r\n   * These are usually stored in the eavConfig.settings.\r\n   * Needs defaults to merge for anything that is not defined in the external config.\r\n   * @param possibleGuid - guid of the external config, if empty, return defaults\r\n   * @param defaults - defaults to merge with external config\r\n   */\r\n  findAndMergeAdvanced<T>(tools: FieldLogicTools, possibleGuid: string, defaults: T): T {\r\n    if (!possibleGuid) return defaults;\r\n\r\n    const wysiwygConfig = tools.eavConfig.settings.Entities.find(e => e.Guid === possibleGuid);\r\n    if (!wysiwygConfig) return defaults;\r\n\r\n    const advanced = tools.reader.flatten(wysiwygConfig) as T;\r\n    return { ...defaults, ...advanced };\r\n  }\r\n}\r\n\r\nexport interface FieldLogicUpdate<T = FieldValue> {\r\n  /** The field name, to better debug */\r\n  fieldName: string;\r\n\r\n  /** Settings before logic update */\r\n  settings: FieldSettings;\r\n\r\n  /** Tools for doing various kind of work in the logic, which is singleton and may need context-specific tools */\r\n  tools: FieldLogicTools;\r\n\r\n  /** The field value which the settings-update sometimes needs to know, eg. to indicated selected option in a dropdown */\r\n  value?: T;\r\n}\r\n\r\ntype LogicConstructor = new (...args: any[]) => FieldLogicBase;","import { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from './field-logic-base';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\n\r\nexport class UnknownLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.Unknown;\r\n  \r\n  constructor() { super({UnknownLogic}); }\r\n\r\n  canAutoTranslate = false;\r\n\r\n  update({ settings }: FieldLogicUpdate): FieldSettings {\r\n    return settings;\r\n  }\r\n}\r\n\r\n// Don't register here, the manager will register it as a fallback\r\n// FieldLogicBase.add(UnknownLogic);\r\n\r\n","import { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { FieldLogicBase } from './field-logic-base';\r\nimport { UnknownLogic } from './field-logic-unknown';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  get: true,\r\n}\r\n\r\n// declare const window; //: EavWindow;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    eavFieldLogicManager: FieldLogicManager;\r\n  }\r\n}\r\n\r\nexport class FieldLogicManager {\r\n  private logics: Record<string, FieldLogicBase> = {};\r\n\r\n  log = classLog({FieldLogicManager}, logSpecs);\r\n\r\n  private constructor() {\r\n    // add unknown as a fallback for all scenarios\r\n    this.add(new UnknownLogic());\r\n  }\r\n\r\n  static singleton(): FieldLogicManager {\r\n    return window.eavFieldLogicManager ??= new FieldLogicManager();\r\n  }\r\n\r\n  /** Add settings logic */\r\n  add(logic: FieldLogicBase): void {\r\n    this.logics[logic.name] = logic;\r\n  }\r\n\r\n  /** Get settings logic for input type */\r\n  get(inputTypeName: string): FieldLogicBase {\r\n    const l = this.log.fnIf('get', { inputTypeName });\r\n    const r = this.logics[inputTypeName] ?? null;\r\n    return l.r(r);\r\n  }\r\n\r\n  /** Get or use unknown - temporary solution v16.04 to prevent any scenario where there is none */\r\n  getOrUnknown(inputTypeName: string): FieldLogicBase {\r\n    return this.get(inputTypeName) ?? this.get(InputTypeCatalog.Unknown);\r\n  }\r\n}\r\n","import { Of } from '../../../../../../../../core';\r\nimport { TranslationLinks } from '../../../../localization/translation-link.constants';\r\n\r\nexport class TranslateMenuHelpers {\r\n\r\n  static getTranslationStateClass(linkType: Of<typeof TranslationLinks>) {\r\n    switch (linkType) {\r\n      case TranslationLinks.MissingDefaultLangValue:\r\n        return 'localization-missing-default-lang-value';\r\n      case TranslationLinks.Translate:\r\n      case TranslationLinks.LinkCopyFrom:\r\n        return 'localization-translate';\r\n      case TranslationLinks.DontTranslate:\r\n        return '';\r\n      case TranslationLinks.LinkReadOnly:\r\n        return 'localization-link-read-only';\r\n      case TranslationLinks.LinkReadWrite:\r\n        return 'localization-link-read-write';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static calculateSharedInfoMessage(dimensions: string[], currentLanguage: string): string {\r\n    dimensions = TranslateMenuHelpers.calculateShortDimensions(dimensions, currentLanguage);\r\n    const result = TranslateMenuHelpers.calculateEditAndReadDimensions(dimensions);\r\n    const editableDimensions = result.editableDimensions;\r\n    const readOnlyDimensions = result.readOnlyDimensions;\r\n    let infoMessage = '';\r\n\r\n    const editableExist = editableDimensions.length > 0;\r\n    const readOnlyExist = readOnlyDimensions.length > 0;\r\n    if (editableExist && readOnlyExist) {\r\n      infoMessage = `${editableDimensions.join(', ')}, (${readOnlyDimensions.join(', ')})`;\r\n    } else if (editableExist) {\r\n      infoMessage = editableDimensions.join(', ');\r\n    } else if (readOnlyExist) {\r\n      infoMessage = `(${readOnlyDimensions.join(', ')})`;\r\n    }\r\n\r\n    return infoMessage;\r\n  }\r\n\r\n  private static calculateShortDimensions(dimensions: string[], currentLanguage: string): string[] {\r\n    const dimMap: Record<string, string[]> = {};\r\n    const langCode = currentLanguage.slice(0, currentLanguage.indexOf('-'));\r\n\r\n    dimMap[langCode] = [langCode];\r\n\r\n    dimensions.forEach(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (!dimMap[shortNoReadOnly]) {\r\n        dimMap[shortNoReadOnly] = [dimension];\r\n      } else {\r\n        dimMap[shortNoReadOnly].push(dimension);\r\n      }\r\n    });\r\n\r\n    dimensions = dimensions.map(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (dimMap[shortNoReadOnly].length > 1) {\r\n        return dimension;\r\n      } else {\r\n        return shortDimension;\r\n      }\r\n    });\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  private static calculateEditAndReadDimensions(dimensions: string[]) {\r\n    return {\r\n      editableDimensions: [] as string[],\r\n      readOnlyDimensions: dimensions.map(d => d.replace('~', '')),\r\n    };\r\n  }\r\n}\r\n","import { Of } from '../../../../../../core';\r\nimport { FormulaFunction, FormulaVersions, runFormulaPrefix } from '../formula-definitions';\r\n\r\n/**\r\n * Contains methods for building formulas.\r\n */\r\n\r\nexport class FormulaSourceCodeHelper {\r\n  /**\r\n   * Used to clean formula text.\r\n   * @param formula Formula text to clean\r\n   * @returns Cleaned formula text\r\n   */\r\n  static #cleanFormula(formula: string): string {\r\n    if (!formula)\r\n      return formula;\r\n\r\n    // Clean and remove any leading single-line comments\r\n    let cleanFormula = formula.trim();\r\n    if (cleanFormula.startsWith('//'))\r\n      cleanFormula = cleanFormula.replace(/^\\/\\/.*\\n/gm, '').trim();\r\n\r\n    /*\r\n      Valid function string:\r\n      function NAME (...ARGS) { BODY }\r\n \r\n      Must build function string for these inputs:\r\n      v1 (...ARGS) { BODY }\r\n      function v1 (...ARGS) { BODY }\r\n      v2((...ARGS) => { BODY });\r\n \r\n      Everything else is ignored.\r\n      TODO: do this properly with regex if it's not too slow\r\n    */\r\n    if (cleanFormula.startsWith(FormulaVersions.V1))\r\n      return `${runFormulaPrefix}${cleanFormula}`;\r\n\r\n    if (cleanFormula.startsWith(`${runFormulaPrefix}${FormulaVersions.V1}`))\r\n      return cleanFormula;\r\n\r\n    if (cleanFormula.startsWith('v2(')) {\r\n      cleanFormula = cleanFormula.substring(3, cleanFormula.lastIndexOf('}') + 1);\r\n      cleanFormula = cleanFormula.replace('=>', '');\r\n      return `${runFormulaPrefix}v2 ${cleanFormula}`;\r\n    }\r\n\r\n    return cleanFormula;\r\n  }\r\n\r\n  /**\r\n   * Used to find formula version.\r\n   * @param formula Formula text\r\n   * @returns If formula is V1 or V2\r\n   */\r\n  static findFormulaVersion(formula: string): Of<typeof FormulaVersions> {\r\n    const cleanFormula = this.#cleanFormula(formula);\r\n    const versionPart = cleanFormula.substring(runFormulaPrefix.length, cleanFormula.indexOf('(')).trim();\r\n    const validVersions = Object.values(FormulaVersions);\r\n\r\n    return (validVersions).includes(versionPart as Of<typeof FormulaVersions>)\r\n      ? versionPart as Of<typeof FormulaVersions>\r\n      : undefined;\r\n  }\r\n\r\n  /**\r\n   * Used to build executable formula function from formula text.\r\n   * @param formula Formula text\r\n   * @returns Executable formula function\r\n   */\r\n  static buildFormulaFunction(formula: string): FormulaFunction {\r\n    const cleanFormula = this.#cleanFormula(formula);\r\n    const fn: FormulaFunction = new Function(`return ${cleanFormula}`)();\r\n    return fn;\r\n  }\r\n}\r\n","import { Sxc } from '@2sic.com/2sxc-typings';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, combineLatest, filter, from, map, switchMap } from 'rxjs';\r\nimport { Of } from '../../../../../../core';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { DialogContextUser } from '../../../shared/models/dialog-context.models';\r\nimport { ServiceBase } from '../../../shared/services/service-base';\r\nimport { FormConfigService } from '../../form/form-config.service';\r\nimport { ContentTypeItemService } from '../../shared/content-types/content-type-item.service';\r\nimport { ContentTypeService } from '../../shared/content-types/content-type.service';\r\nimport { ContentTypeSettingsHelpers, EntityReader } from '../../shared/helpers';\r\nimport { InputTypeSpecs } from '../../shared/input-types/input-type-specs.model';\r\nimport { InputTypeService } from '../../shared/input-types/input-type.service';\r\nimport { EavItem } from '../../shared/models/eav/eav-item';\r\nimport { LoggingService, LogSeverities } from '../../shared/services/logging.service';\r\nimport { FieldsSettingsHelpers } from '../../state/field-settings.helper';\r\nimport { ItemService } from '../../state/item.service';\r\nimport { FormulaFunction } from '../formula-definitions';\r\nimport { FormulaPromise } from '../promise/formula-promise-result.model';\r\nimport { FieldValueOrResultRaw, FormulaIdentifier } from '../results/formula-results.models';\r\nimport { FormulaV1CtxApp, FormulaV1CtxTargetEntity, FormulaV1CtxUser } from '../run/formula-run-context.model';\r\nimport { FormulaDefaultTargets, FormulaSpecialPickerTargets, FormulaTargets, SettingsFormulaPrefix } from '../targets/formula-targets';\r\nimport { FormulaCacheItem, FormulaCacheItemConstants } from './formula-cache.model';\r\nimport { FormulaCacheService } from './formula-cache.service';\r\nimport { FormulaSourceCodeHelper } from './source-code-helper';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  buildFormulaCache: false,\r\n  updateFormulaFromEditor: false,\r\n  createPromisedParts: false,\r\n  getSharedParts: false,\r\n};\r\n\r\n/**\r\n * Service just to cache formulas for execution and use in the designer.\r\n */\r\n@Injectable()\r\nexport class FormulaCacheBuilder extends ServiceBase {\r\n  log = classLog({FormulaCacheBuilder}, logSpecs);\r\n  constructor(\r\n    private formConfig: FormConfigService,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private contentTypeItemService: ContentTypeItemService,\r\n    private loggingService: LoggingService,\r\n    private translate: TranslateService,\r\n    private inputTypes: InputTypeService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Used for building the initial formula cache.\r\n   * @returns\r\n   */\r\n  public buildFormulaCache(cacheSvc: FormulaCacheService): FormulaCacheItem[] {\r\n    const l = this.log.fnIf('buildFormulaCache');\r\n    const formulaCache: FormulaCacheItem[] = [];\r\n    const language = this.formConfig.language();\r\n    const reader = new EntityReader(language);\r\n\r\n    const fss = new FieldsSettingsHelpers(this.log.name);\r\n\r\n    for (const entityGuid of this.formConfig.config.itemGuids) {\r\n      const item = this.itemService.get(entityGuid);\r\n\r\n      const shared = this.#getSharedParts(entityGuid, item);\r\n\r\n      const contentType = this.contentTypeService.getContentTypeOfItem(item);\r\n      for (const attribute of contentType.Attributes) {\r\n        // Get field settings\r\n        const settings = fss.getDefaultSettings(reader.flatten<FieldSettings>(attribute.Metadata));\r\n\r\n        // get input type specs\r\n        const inputType = this.inputTypes.getSpecs(attribute);\r\n\r\n        // Get all formulas for the field\r\n        const formulaEntities = this.contentTypeItemService\r\n          .getMany(settings.Formulas)\r\n          .filter(f => reader.getBestValue<boolean>(f.Attributes.Enabled));\r\n\r\n        for (const fEntity of formulaEntities) {\r\n          const sourceCode = reader.getBestValue<string>(fEntity.Attributes.Formula);\r\n          if (!sourceCode) \r\n            continue;\r\n\r\n          const target: Of<typeof FormulaTargets> = reader.getBestValue<string>(fEntity.Attributes.Target);\r\n\r\n          // create cleaned formula function, or if this fails, add info to log & results\r\n          let formulaFunction: FormulaFunction;\r\n          try {\r\n            formulaFunction = FormulaSourceCodeHelper.buildFormulaFunction(sourceCode);\r\n          } catch (error) {\r\n            cacheSvc.cacheResults({ entityGuid, fieldName: attribute.Name, target } satisfies FormulaIdentifier, undefined, true, false);\r\n            const itemTitle = ContentTypeSettingsHelpers.getTitle(contentType, language);\r\n            this.loggingService.addLog(LogSeverities.Error, `Error building formula for Entity: \"${itemTitle}\", Field: \"${attribute.Name}\", Target: \"${target}\"`, error);\r\n            this.loggingService.showMessage(this.translate.instant('Errors.FormulaConfiguration'), 2000);\r\n          }\r\n\r\n          const formulaCacheItem: FormulaCacheItem = {\r\n            cache: {},\r\n            entityGuid,\r\n            fieldName: attribute.Name,\r\n            fn: formulaFunction?.bind({}),\r\n            isDraft: formulaFunction == null,\r\n            sourceCode,\r\n            sourceCodeSaved: sourceCode,\r\n            sourceCodeGuid: fEntity.Guid,\r\n            sourceCodeId: fEntity.Id,\r\n            target,\r\n            ...this.#inputTypeSpecsForCacheItem(target, inputType),\r\n            version: FormulaSourceCodeHelper.findFormulaVersion(sourceCode),\r\n            ...shared,\r\n            stop: false,\r\n            sleep: false,\r\n            fieldIsSpecialPicker: FormulaSpecialPickerTargets.includes(target),\r\n            ...this.#createPromisedParts(),\r\n            ...this.#targetInfoForCacheItem(target),\r\n          };\r\n\r\n          formulaCache.push(formulaCacheItem);\r\n        }\r\n      }\r\n    }\r\n\r\n    return l.r(formulaCache);\r\n  }\r\n\r\n\r\n  #inputTypeSpecsForCacheItem(target: Of<typeof FormulaTargets>, inputType: InputTypeSpecs): Pick<FormulaCacheItem, 'inputType' | 'isNewPicker' | 'disabled' | 'disabledReason'> {\r\n\r\n    // Disable picker checks WIP\r\n    /* if (!inputType.isNewPicker) */\r\n    return { inputType: inputType, isNewPicker: inputType.isNewPicker, disabled: false, disabledReason: '' };\r\n    // return [FormulaDefaultTargets.Value /*, FormulaNewPickerTargets.Options */].includes(target)\r\n    //   ? { isNewPicker: true, disabled: true, disabledReason: 'New picker is not supported in formulas yet' }\r\n    //   : { isNewPicker: true, disabled: false, disabledReason: '' };\r\n  }\r\n\r\n  #targetInfoForCacheItem(target: Of<typeof FormulaTargets>): Pick<FormulaCacheItem, 'isSetting' | 'settingName' | 'isValue' | 'isValidation'> {\r\n    return target.startsWith(SettingsFormulaPrefix)\r\n      ? { isSetting: true, settingName: target.substring(SettingsFormulaPrefix.length), isValue: false, isValidation: false }\r\n      : { isSetting: false, settingName: '', isValue: target === FormulaDefaultTargets.Value, isValidation: target === FormulaDefaultTargets.Validation };\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Used for building shared parts of formula cache item.\r\n   * @param item\r\n   * @param entityGuid\r\n   * @returns\r\n   */\r\n  #getSharedParts(entityGuid: string, item: EavItem = null): FormulaCacheItemConstants {\r\n    this.log.fnIf('getSharedParts', { item, entityGuid });\r\n\r\n    if (this.#sharedPartsCache[entityGuid])\r\n      return this.#sharedPartsCache[entityGuid];\r\n\r\n    item = item ?? this.itemService.get(entityGuid);\r\n    const entity = item.Entity;\r\n    const mdFor = entity.For;\r\n    const targetEntity: FormulaV1CtxTargetEntity = {\r\n      guid: entity.Guid,\r\n      id: entity.Id,\r\n      type: {\r\n        guid: entity.Type.Id,\r\n        name: entity.Type.Name,\r\n      },\r\n      // New v15.04\r\n      for: {\r\n        targetType: mdFor?.TargetType ?? 0,\r\n        guid: mdFor?.Guid,\r\n        number: mdFor?.Number,\r\n        string: mdFor?.String,\r\n      },\r\n    };\r\n    const formConfig = this.formConfig.config;\r\n    const user = formConfig.dialogContext.User ?? {} as Partial<DialogContextUser>;\r\n    const shared = {\r\n      targetEntity,\r\n      user: {\r\n        email: user.Email,\r\n        guid: user.Guid,\r\n        id: user.Id,\r\n        isAnonymous: user.IsAnonymous,\r\n        isSiteAdmin: user.IsSiteAdmin,\r\n        isContentAdmin: user.IsContentAdmin,\r\n        isSystemAdmin: user.IsSystemAdmin,\r\n        name: user.Name,\r\n        username: user.Username,\r\n      } satisfies FormulaV1CtxUser,\r\n      app: {\r\n        appId: formConfig.appId,\r\n        zoneId: formConfig.zoneId,\r\n        isGlobal: formConfig.dialogContext.App.IsGlobalApp,\r\n        isSite: formConfig.dialogContext.App.IsSiteApp,\r\n        isContent: formConfig.dialogContext.App.IsContentApp,\r\n        getSetting: (key: string) => undefined,\r\n      } satisfies FormulaV1CtxApp,\r\n      sxc: window.$2sxc({\r\n        zoneId: formConfig.zoneId,\r\n        appId: formConfig.appId,\r\n        pageId: formConfig.tabId,\r\n        moduleId: formConfig.moduleId,\r\n        _noContextInHttpHeaders: true,  // disable pageid etc. headers in http headers, because it would make debugging very hard\r\n        _autoAppIdsInUrl: true,         // auto-add appid and zoneid to url so formula developer can see what's happening\r\n      } as any) satisfies Sxc,\r\n    } satisfies FormulaCacheItemConstants;\r\n    this.#sharedPartsCache[entityGuid] = shared;\r\n    return shared;\r\n  }\r\n  #sharedPartsCache: Record<string, FormulaCacheItemConstants> = {};\r\n\r\n\r\n  /**\r\n   * Used for pacing promises$ and callback$ triggers. Callback$ triggers for the first time when the last promise is resolved.\r\n   * @returns\r\n   */\r\n  #createPromisedParts() {\r\n    this.log.fnIf('createPromisedParts');\r\n    const promises$ = new BehaviorSubject<FormulaPromise>(null);\r\n    const updateCallback$ = new BehaviorSubject<(result: FieldValueOrResultRaw) => void>(null);\r\n    const promiseSpecs = promises$.pipe(\r\n      filter(x => !!x),\r\n      switchMap(set => from(set.promise).pipe(map(result => ({ set, result })))),\r\n    );\r\n    // This combineLatest triggers the callback for the first time when the last promise is resolved\r\n    this.subscriptions.add(combineLatest([promiseSpecs, updateCallback$.pipe(filter(x => !!x))])\r\n      .subscribe(\r\n        ([promise, callback]) => {\r\n          promise.set.completed = true;\r\n          promise.set.sleep = false;\r\n          return callback(promise.result);\r\n        },\r\n      ));\r\n\r\n    return { promises$, updateCallback$ };\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Used for updating formula from editor.\r\n   * @param entityGuid\r\n   * @param fieldName\r\n   * @param target\r\n   * @param sourceCode\r\n   * @param run\r\n   */\r\n  public updateFormulaFromEditor(cacheSvc: FormulaCacheService, id: FormulaIdentifier, sourceCode: string, run: boolean) {\r\n    this.log.fnIf('updateFormulaFromEditor', { id, sourceCode, run });\r\n    // important: the designer contains too much info, so we need to extract the essentials\r\n    // to not have it in the cache - which would trigger loads of changes to that signal later on.\r\n    let formulaFunction: FormulaFunction;\r\n\r\n    // If we should also run it, push it to the formulas cache so it will be executed\r\n    if (run)\r\n      try {\r\n        formulaFunction = FormulaSourceCodeHelper.buildFormulaFunction(sourceCode);\r\n      } catch (error) {\r\n        cacheSvc.cacheResults(id, /* value: */ undefined, /* isError: */ true, /* isPromise */ false);\r\n        const item = this.itemService.get(id.entityGuid);\r\n        const contentType = this.contentTypeService.getContentTypeOfItem(item);\r\n        const language = this.formConfig.language();\r\n        const itemTitle = ContentTypeSettingsHelpers.getTitle(contentType, language);\r\n        const errorLabel = `Error building formula for Entity: \"${itemTitle}\", Field: \"${id.fieldName}\", Target: \"${id.target}\"`;\r\n        this.loggingService.addLog(LogSeverities.Error, errorLabel, error);\r\n\r\n        console.error(errorLabel, error);\r\n      }\r\n\r\n    // find input type\r\n    const item = this.itemService.get(id.entityGuid);\r\n    const attribute = this.contentTypeService.getAttributeOfItem(item, id.fieldName);\r\n    const inputType = this.inputTypes.getSpecs(attribute);\r\n\r\n    // Find original in case we had it already (as we would then update it)\r\n    const { list, index, value } = cacheSvc.formulaListIndexAndOriginal(id);\r\n    const formula = value ?? {} as FormulaCacheItem;\r\n\r\n    // Get shared calculated properties, which we need in case the old-formula doesn't have them yet\r\n    const shared = this.#getSharedParts(id.entityGuid);\r\n\r\n    const streams = (formula.promises$ && formula.updateCallback$)\r\n      ? { promises$: value.promises$, updateCallback$: value.updateCallback$ }\r\n      : this.#createPromisedParts();\r\n\r\n    const newFormulaItem: FormulaCacheItem = {\r\n      ...id,\r\n      cache: formula.cache ?? {},\r\n      fn: formulaFunction?.bind({}),\r\n      isDraft: run ? formulaFunction == null : true,\r\n      sourceCode,\r\n      sourceCodeSaved: formula.sourceCodeSaved,\r\n      sourceCodeGuid: formula.sourceCodeGuid,\r\n      sourceCodeId: formula.sourceCodeId,\r\n      version: FormulaSourceCodeHelper.findFormulaVersion(sourceCode),\r\n      ...this.#inputTypeSpecsForCacheItem(id.target, inputType),\r\n      ...shared,\r\n      stop: false,\r\n      sleep: false,\r\n      fieldIsSpecialPicker: FormulaSpecialPickerTargets.includes(id.target),\r\n      ...streams,\r\n      ...this.#targetInfoForCacheItem(id.target),\r\n    };\r\n\r\n    const newCache = index >= 0\r\n      ? [...list.slice(0, index), newFormulaItem, ...list.slice(index + 1)]\r\n      : [newFormulaItem, ...list];\r\n    return newCache;\r\n  }\r\n\r\n}","import { Injectable, untracked } from '@angular/core';\r\nimport { Of, transient } from '../../../../../../core';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { signalObj } from '../../../shared/signals/signal.utilities';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { FormulaIdentifier } from '../results/formula-results.models';\r\nimport { FormulaDefaultTargetValues, FormulaNewPickerTargetValues, FormulaOptionalTargetValues, FormulaTargets } from '../targets/formula-targets';\r\nimport { FormulaCacheBuilder } from './formula-cache.builder';\r\nimport { FormulaCacheItem, FormulaResultCacheItem } from './formula-cache.model';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getActive: true,\r\n  fields: [...DebugFields],\r\n};\r\n\r\n/**\r\n * Service just to cache formulas for execution and use in the designer.\r\n */\r\n@Injectable()\r\nexport class FormulaCacheService {\r\n\r\n  log = classLog({FormulaCacheService}, logSpecs, false);\r\n\r\n  #cacheBuilder = transient(FormulaCacheBuilder);\r\n\r\n  constructor() { }\r\n\r\n  /** All the formulas with various additional info to enable execution and editing */\r\n  public formulas = signalObj<FormulaCacheItem[]>('formulas', []);\r\n\r\n  /** All the formula results */\r\n  #results = signalObj<FormulaResultCacheItem[]>('formula-results', []);\r\n\r\n  init() {\r\n    const formulaCache = this.#cacheBuilder.buildFormulaCache(this);\r\n    this.formulas.set(formulaCache);\r\n  }\r\n\r\n  //#region Formulas Get / Find\r\n\r\n  /**\r\n   * Used for returning formulas filtered by optional entity, field or target.\r\n   * @param entityGuid Optional entity guid\r\n   * @param fieldName Optional field\r\n   * @param target Optional target\r\n   * @param allowDraft\r\n   * @returns Filtered formula array\r\n   */\r\n  #findFormulas(entityGuid?: string, fieldName?: string, target?: Of<typeof FormulaTargets>[], allowDraft?: boolean): FormulaCacheItem[] {\r\n    return this.formulas().filter(f =>\r\n        (entityGuid ? f.entityGuid === entityGuid : true)\r\n        && (fieldName ? f.fieldName === fieldName : true)\r\n        && (target ? target?.find(target => f.target == target) : true)\r\n        && (allowDraft ? true : !f.isDraft)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Find formulas of the current field which are still running.\r\n   * Uses the designerService as that can modify the behavior while developing a formula.\r\n   */\r\n  public getActive(entityGuid: string, name: string, forNewPicker: boolean): FormulaCacheItem[] {\r\n    const l = this.log.fnIfInList('getActive', 'fields', name, () => ({ name, forNewPicker, formulas: this.formulas() }));\r\n    const targets = FormulaDefaultTargetValues\r\n      .concat(forNewPicker ? FormulaNewPickerTargetValues : FormulaOptionalTargetValues);\r\n    \r\n    const all = this.#findFormulas(entityGuid, name, targets, /* allowDraft: */ false);\r\n\r\n    const unstopped = all.filter(f => !f.stop);\r\n\r\n    return l.r(unstopped, `all: ${all.length}, unstopped: ${unstopped.length}`);\r\n  }\r\n\r\n\r\n\r\n  public formulaListIndexAndOriginal(fOrDs: FormulaIdentifier) {\r\n    const list = this.formulas();\r\n    const index = list.findIndex(f => f.entityGuid === fOrDs.entityGuid && f.fieldName === fOrDs.fieldName && f.target === fOrDs.target);\r\n    const value = list[index];\r\n    return { list, index, value };\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Formulas CRUD\r\n\r\n  /**\r\n   * Used for saving updated formula from editor.\r\n   */\r\n  public updateSaved(formulaItem: FormulaCacheItem, sourceGuid: string, sourceId: number): void {\r\n    const { list, index, value } = this.formulaListIndexAndOriginal(formulaItem);\r\n    if (value == null)\r\n      return;\r\n\r\n    const updated: FormulaCacheItem = {\r\n      ...value,\r\n      sourceCodeSaved: formulaItem.sourceCode,\r\n      sourceCodeGuid: sourceGuid,\r\n      sourceCodeId: sourceId,\r\n    };\r\n\r\n    const newCache = [...list.slice(0, index), updated, ...list.slice(index + 1)];\r\n    this.formulas.set(newCache);\r\n  }\r\n\r\n  /**\r\n   * Used for updating formula from editor.\r\n   */\r\n  public updateFormulaFromEditor(id: FormulaIdentifier, formula: string, run: boolean): void {\r\n    const newCache = this.#cacheBuilder.updateFormulaFromEditor(this, id, formula, run);\r\n    this.formulas.set(newCache);\r\n  }\r\n\r\n  /**\r\n   * Used for deleting formula.\r\n   */\r\n  public delete(id: FormulaIdentifier): void {\r\n    const { list, index } = this.formulaListIndexAndOriginal(id);\r\n    if (index < 0) return;\r\n    const newCache = [...list.slice(0, index), ...list.slice(index + 1)];\r\n    this.formulas.set(newCache);\r\n  }\r\n\r\n  /**\r\n   * Used for resetting formula.\r\n   */\r\n  public resetFormula(id: FormulaIdentifier): void {\r\n    this.#deleteResult(id);\r\n\r\n    // If we reset to saved code, then do that, otherwise delete/flush\r\n    const sourceCodeSaved = this.formulaListIndexAndOriginal(id).value?.sourceCodeSaved;\r\n    if (sourceCodeSaved != null)\r\n      this.updateFormulaFromEditor(id, sourceCodeSaved, true);\r\n    else \r\n      this.delete(id);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Get Results & Delete\r\n\r\n  /**\r\n   * Cache the results of a formula - mainly for showing formula result in editor.\r\n   * @param entityGuid\r\n   * @param fieldName\r\n   * @param target\r\n   * @param value\r\n   * @param isError\r\n   * @param isOnlyPromise\r\n   */\r\n  public cacheResults(formulaItem: FormulaIdentifier, value: FieldValue, isError: boolean, isOnlyPromise: boolean): void {\r\n    const newResult: FormulaResultCacheItem = {\r\n      entityGuid: formulaItem.entityGuid,\r\n      fieldName: formulaItem.fieldName,\r\n      target: formulaItem.target,\r\n      value,\r\n      isError,\r\n      isOnlyPromise,\r\n    };\r\n    const l = this.log.fn('cacheResults', { newResult });\r\n\r\n    // We should not track reading the list during formula execution\r\n    // since we don't depend on it!\r\n    untracked(() => {\r\n      const { list, index } = this.resultListIndexAndOriginal(formulaItem);\r\n      const newResults = index >= 0\r\n        ? [...list.slice(0, index), newResult, ...list.slice(index + 1)]\r\n        : [newResult, ...list];\r\n\r\n      // side effect within props calculations\r\n        l.a('set results', { list, index, newResults});\r\n        this.#results.set(newResults);\r\n    });\r\n    l.end('ok');\r\n  }\r\n\r\n  public resultListIndexAndOriginal(id: FormulaIdentifier) {\r\n    const list = this.#results();\r\n    const index = list.findIndex(r => r.entityGuid === id.entityGuid && r.fieldName === id.fieldName && r.target === id.target);\r\n    const value = list[index];\r\n    return { list, index, value };\r\n  }\r\n\r\n  /**\r\n   * Delete Results from cache.\r\n   */\r\n  #deleteResult(id: FormulaIdentifier): void {\r\n    const { list, index } = this.resultListIndexAndOriginal(id);\r\n    if (index < 0) return;\r\n    const newResults = [...list.slice(0, index), ...list.slice(index + 1)];\r\n    this.#results.set(newResults);\r\n  }  \r\n\r\n  //#endregion\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Of } from '../../../../../../core';\r\nimport { InputTypeHelpers } from '../../../shared/fields/input-type-helpers';\r\nimport { TargetOption } from '../../dialog/footer/formula-designer/formula-designer.models';\r\nimport { ContentTypeService } from '../../shared/content-types/content-type.service';\r\nimport { ItemService } from '../../state/item.service';\r\nimport { FormulaCacheItem } from '../cache/formula-cache.model';\r\nimport { FormulaIdentifier } from '../results/formula-results.models';\r\nimport { FormulaDefaultTargets, FormulaNewPickerTargets, FormulaOptionalTargets, FormulaTargets } from './formula-targets';\r\n\r\n/**\r\n * Small helper service to get the target options for the formula designer.\r\n * \r\n * The purpose is to figure out what targets are possible for each field (eg. Settings.Name, etc.)\r\n * and to ensure that the information (eg. hasFormula) is correct.\r\n */\r\n@Injectable()\r\nexport class FormulaTargetsService {\r\n\r\n  constructor(\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n  ) { }\r\n\r\n  getTargetOptions(id: FormulaIdentifier, formulas: FormulaCacheItem[]): TargetOption[] {\r\n    // Create a list of formula targets for the selected field - eg. Value, Tooltip, ListItem.Label, ListItem.Tooltip etc.\r\n    const targetOptions: TargetOption[] = [];\r\n    if (id.entityGuid == null || id.fieldName == null)\r\n      return targetOptions;\r\n\r\n    const fieldFormulas = formulas.filter(f => f.entityGuid === id.entityGuid && f.fieldName === id.fieldName);\r\n\r\n    // default targets\r\n    for (const target of Object.values(FormulaDefaultTargets)) {\r\n      const targetOption: TargetOption = {\r\n        hasFormula: fieldFormulas.some(f => f.target === target),\r\n        label: target.substring(target.lastIndexOf('.') + 1),\r\n        target,\r\n      };\r\n      targetOptions.push(targetOption);\r\n    }\r\n\r\n    // optional targets\r\n    const item = this.itemService.get(id.entityGuid);\r\n    const attribute = this.contentTypeService.getAttributeOfItem(item, id.fieldName);\r\n    const inputType = attribute.InputType;\r\n    if (InputTypeHelpers.isGroupStart(inputType)) {\r\n      for (const target of [FormulaOptionalTargets.Collapsed]) {\r\n        const targetOption: TargetOption = {\r\n          hasFormula: fieldFormulas.some(f => f.target === target),\r\n          label: target.substring(target.lastIndexOf('.') + 1),\r\n          target: target as Of<typeof FormulaTargets>,\r\n        };\r\n        targetOptions.push(targetOption);\r\n      }\r\n    }\r\n    if (InputTypeHelpers.isOldValuePicker(inputType)) {\r\n      for (const target of [FormulaOptionalTargets.DropdownValues]) {\r\n        const targetOption: TargetOption = {\r\n          hasFormula: fieldFormulas.some(f => f.target === target),\r\n          label: target.substring(target.lastIndexOf('.') + 1),\r\n          target: target as Of<typeof FormulaTargets>,\r\n        };\r\n        targetOptions.push(targetOption);\r\n      }\r\n    }\r\n\r\n    // TODO: HERE\r\n    if (InputTypeHelpers.isNewPicker(inputType)) {\r\n      for (const target of Object.values(FormulaNewPickerTargets)) {\r\n        const targetOption: TargetOption = {\r\n          hasFormula: fieldFormulas.some(f => f.target === target),\r\n          label: \"Picker \" + target.substring(target.lastIndexOf('.') + 1),\r\n          target: target as Of<typeof FormulaTargets>,\r\n        };\r\n        targetOptions.push(targetOption);\r\n      }\r\n    }\r\n\r\n    /* TODO: for picker types WIP\r\n      add formulas -> Field.ListItem.Label\r\n                      Field.ListItem.Tooltip\r\n                      Field.ListItem.Information\r\n                      Field.ListItem.HelpLink\r\n                      Field.ListItem.Disabled\r\n\r\n      Template for all new type formulas\r\n      v2((data, context, item) => {\r\n        return data.value;\r\n      });\r\n\r\n      old template for all of the rest\r\n\r\n      run formulas upon dropdowning the picker, upon each opening\r\n    */\r\n\r\n    // targets for formulas\r\n    for (const formula of fieldFormulas) {\r\n      const formulaExists = targetOptions.some(t => t.target === formula.target);\r\n      if (formulaExists) \r\n        continue;\r\n\r\n      const targetOption: TargetOption = {\r\n        hasFormula: true,\r\n        label: formula.target.substring(formula.target.lastIndexOf('.') + 1),\r\n        target: formula.target,\r\n      };\r\n      targetOptions.push(targetOption);\r\n    }\r\n\r\n    // currently selected target\r\n    const selectedExists = targetOptions.some(t => t.target === id.target);\r\n    if (!selectedExists) {\r\n      const targetOption: TargetOption = {\r\n        hasFormula: fieldFormulas.some(f => f.target === id.target),\r\n        label: id.target.substring(id.target.lastIndexOf('.') + 1),\r\n        target: id.target,\r\n      };\r\n      targetOptions.push(targetOption);\r\n    }\r\n    return targetOptions;    \r\n  }\r\n\r\n}","import { DesignerSnippet, FieldOption } from '../../dialog/footer/formula-designer/formula-designer.models';\r\nimport { FormulaVersions } from '../formula-definitions';\r\nimport { FormulaCacheItem } from '../cache/formula-cache.model';\r\nimport { FormulaPropsParameters, FormulaRunOneHelpersFactory } from '../formula-run-one-helpers.factory';\r\n\r\nexport class FormulaV1Helpers {\r\n\r\n  /**\r\n   * Used to build the designer snippets context for use in formulas.\r\n   * @param formula\r\n   * @returns Designer snippets context for use in formulas\r\n   */\r\n  static buildDesignerSnippetsContext(formula: FormulaCacheItem): DesignerSnippet[] {\r\n    switch (formula.version) {\r\n      case FormulaVersions.V1:\r\n        const snippets = [\r\n          'app.appId',\r\n          'app.zoneId',\r\n          'app.isGlobal',\r\n          'app.isSite',\r\n          'app.isContent',\r\n          'cache.ChangeThis',\r\n          'culture.code',\r\n          'culture.name',\r\n          'debug',\r\n          'features.isEnabled(\\'nameId\\')',\r\n          'form.runFormulas()',\r\n          'sxc.ChangeThis',\r\n          'target.entity.id',\r\n          'target.entity.guid',\r\n          'target.name',\r\n          'target.type',\r\n          'user.id',\r\n          'user.isAnonymous',\r\n          'user.isSiteAdmin',\r\n          'user.isSystemAdmin',\r\n        ].map(name => {\r\n          const code = `context.${name}`;\r\n          const fieldSnippet: DesignerSnippet = {\r\n            code,\r\n            label: code,\r\n          };\r\n          return fieldSnippet;\r\n        });\r\n        return snippets;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Used to build the designer snippets for use in formulas.\r\n   * @param formula\r\n   * @param fieldOptions\r\n   * @param itemHeader\r\n   * @returns Designer snippets for use in formulas\r\n   */\r\n  static getSnippets(formula: FormulaCacheItem, fieldOptions: FieldOption[], prefill: Record<string, unknown>): DesignerSnippet[] {\r\n    switch (formula.version) {\r\n      case FormulaVersions.V1:\r\n        const formulaPropsParameters = new FormulaPropsParameters(prefill).all;\r\n        const snippets = [\r\n          'value',\r\n          'default',\r\n          'prefill',\r\n          'initial',\r\n          ...fieldOptions.map(f => f.fieldName),\r\n          'parameters.ChangeThis',\r\n          ...Object.keys(formulaPropsParameters).map(key => `parameters.${key}`),\r\n        ].map(name => {\r\n          const code = `data.${name}`;\r\n          const fieldSnippet: DesignerSnippet = {\r\n            code,\r\n            label: code,\r\n          };\r\n          return fieldSnippet;\r\n        });\r\n        return snippets;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n}","import { FieldOption } from '../../dialog/footer/formula-designer/formula-designer.models';\r\nimport { FormulaVersions } from '../formula-definitions';\r\nimport { FormulaCacheItem } from '../cache/formula-cache.model';\r\nimport { FormulaV1Data } from '../run/formula-run-data.model';\r\nimport { FormulaV1Context } from '../run/formula-run-context.model';\r\nimport { FormulaV1Experimental } from '../run/formula-run-experimental.model';\r\nimport { PickerItem } from '../../fields/picker/models/picker-item.model';\r\nimport { FormulaPropsParameters, FormulaRunOneHelpersFactory } from '../formula-run-one-helpers.factory';\r\n\r\n// Import the type definitions for intellisense\r\nimport editorTypesForIntellisense from '!raw-loader!./editor-intellisense-function-v2.rawts';\r\n\r\nexport class IntellisenseV2 {\r\n  /**\r\n   * Used to build the formula typings for use in intellisense.\r\n   * @param formula\r\n   * @param fieldOptions\r\n   * @param itemHeader\r\n   * @returns Formula typings for use in intellisense\r\n   */\r\n  static getTypings(formula: FormulaCacheItem, fieldOptions: FieldOption[], prefill: Record<string, unknown>): string {\r\n    switch (formula.version) {\r\n      case FormulaVersions.V2: {\r\n        const formulaPropsParameters = new FormulaPropsParameters(prefill).all;\r\n\r\n        const allFields = fieldOptions.map(f => `${f.fieldName}: ${this.#inputTypeToDataType(f.inputType)};`).join('\\n');\r\n        const allParameters = Object.keys(formulaPropsParameters).map(key => `${key}: any;`).join('\\n');\r\n        const final = editorTypesForIntellisense\r\n          .replace('/* [inject:AllFields] */', allFields)\r\n          .replace('/* [inject:AllParameters] */', allParameters);\r\n\r\n        return final;\r\n\r\n        // TODO: probably update the entity-type info which was added in v14.07.05\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  static #inputTypeToDataType(inputType: string) {\r\n    const lower = inputType.toLowerCase();\r\n    if (lower.startsWith('string')) return 'string';\r\n    if (lower.startsWith('number')) return 'number';\r\n    if (lower.startsWith('date')) return 'Date';\r\n    if (lower.startsWith('boolean')) return 'boolean';\r\n    return \"any\";\r\n  }\r\n}\r\n\r\n\r\ninterface FormulaPropsV1 {\r\n  data: FormulaV1Data;\r\n  context: FormulaV1Context;\r\n  experimental: FormulaV1Experimental;\r\n  item?: PickerItem; //@SDV possibly add PickerTreeItem also\r\n}\r\n\r\n\r\n","export default \"/*\\r\\n  This is a special file which is not compiled as a normal TypeScript.\\r\\n  Instead it's loaded as raw text, to hand over to Monaco.\\r\\n  It ensures that v2 functions have intellisense.\\r\\n\\r\\n  TIP: To edit this file, briefly rename it to ...raw.ts, then back to ...rawts\\r\\n       This will make VSCode load it as a normal TypeScript file, so you can edit it.\\r\\n\\r\\n  - Try to keep in sync with the real code in the 2sxc project.\\r\\n  - The comments are _documentation_ for the user, so they can see what's available\\r\\n  - If you need any \\\"internal\\\" comments, use // instead\\r\\n  - Note that the [inject:...] comments are replaced by the build process\\r\\n*/\\r\\n\\r\\n/**\\r\\n * The data object is the main object for figuring out what the field or setting contained and what other fields currently store.\\r\\n * It has properties such as `.value` etc.\\r\\n * Just start typing to see the intellisense.\\r\\n */\\r\\n// Note that the type must be explicitly like `string | boolean | number | string[]`\\r\\n// Otherwise it won't show the details to the user\\r\\ndeclare interface FormulaData {\\r\\n  /**\\r\\n   * The value of the current field/setting when the formula runs.\\r\\n   *\\r\\n   * _It's exact type depends on the underlying type._\\r\\n   */\\r\\n  value: string | boolean | number | string[];\\r\\n  /**\\r\\n   * The _default_ value of the current field/setting as defined in the field settings.\\r\\n   *\\r\\n   * _It's exact type depends on the underlying type._\\r\\n   */\\r\\n  default: string | boolean | number | string[];\\r\\n  /**\\r\\n   * A prefill value that was passed into the form when it was loaded.\\r\\n   *\\r\\n   * _It's exact type depends on the underlying type._\\r\\n   */\\r\\n  prefill: string | boolean | number | string[];\\r\\n  /**\\r\\n   * The value of the current field/setting when the form initially loaded.\\r\\n   *\\r\\n   * _It's exact type depends on the underlying type._\\r\\n   */\\r\\n  initial: string | boolean | number | string[];\\r\\n  /* [inject:AllFields] */\\r\\n  /**\\r\\n   * All parameters which were passed to the form when it was loaded\\r\\n   *\\r\\n   * _It's exact type depends on the parameter, but it's usually a string._\\r\\n   */\\r\\n  parameters: {\\r\\n    /* [inject:AllParameters] */\\r\\n  };\\r\\n}\\r\\n\\r\\ndeclare interface FormulaContext {\\r\\n  /**\\r\\n   * Information about the current App\\r\\n   */\\r\\n  app: {\\r\\n    /** The current App ID */\\r\\n    appId: number;\\r\\n    /** The current Zone ID */\\r\\n    zoneId: number;\\r\\n    /** Determines if the current App is the global App */\\r\\n    isGlobal: boolean;\\r\\n    /** Determines if the current App is the primary (main) App on the site */\\r\\n    isSite: boolean;\\r\\n    /** Determines if the current App is a content App */\\r\\n    isContent: boolean;\\r\\n    /**\\r\\n     * Retrieve a setting like an App setting.\\r\\n     * You need the full path like `Settings.ShowCategories`.\\r\\n     * \\r\\n     * Important: For security reasons formulas will only get settings which where configured in the ContentType for use in Formulas.\\r\\n     */\\r\\n    getSetting(settingPath: string): string;\\r\\n  };\\r\\n  /**\\r\\n   * Cache for this formula. You can store any data here and it will be available in the next run.\\r\\n   */\\r\\n  cache: Record<string, any>;\\r\\n  /**\\r\\n   * Information about the current language\\r\\n   */\\r\\n  culture: {\\r\\n    code: string;\\r\\n    name: string;\\r\\n  };\\r\\n  debug: boolean;\\r\\n  /**\\r\\n   * API to detect what features are currently enabled/available\\r\\n   */\\r\\n  features: {\\r\\n    // /**\\r\\n    //  * Get internal information about a feature if it's available. This is rarely used.\\r\\n    //  * @param nameId The name of the feature, eg. `PasteImageFromClipboard`\\r\\n    //  */\\r\\n    // get(nameId: string): Record<string, any>;\\r\\n    /** Find out if the feature is enabled. Eg. `...isEnabled('PasteImageFromClipboard')` */\\r\\n    isEnabled(nameId: string): boolean;\\r\\n  };\\r\\n  /**\\r\\n   * Work with the current form\\r\\n   */\\r\\n  form: {\\r\\n    // v16 Deprecated for v2\\r\\n    // /** Re-trigger all formulas. Usually used inside promises when they complete. */\\r\\n    // runFormulas(): void;\\r\\n  };\\r\\n  /**\\r\\n   * The standard sxc object for the current App.\\r\\n   * It's the same as the sxc-instance in the page.\\r\\n   *\\r\\n   * You can use it to make API calls to the server.\\r\\n   */\\r\\n  sxc: {\\r\\n    /** The module ID */\\r\\n    id: number;\\r\\n    /** The Content-Block ID - matches the module ID unless it's an inner-content block inside another module */\\r\\n    cbid: number;\\r\\n    /** The sxc WebAPI object. Check the docs: https://docs.2sxc.org/api/js/SxcWebApi.html */\\r\\n    webApi: {\\r\\n      /**\\r\\n       * Get data from a url and return the json-object\\r\\n       * @param url Url to call. It's usually a virtual url such as `app/auto/api/basic/hello`\\r\\n       * @param data Optional data. If provided, it will use a POST\\r\\n       * @param method Optional method, default is `GET` unless you specify data, then it's `POST`\\r\\n       */\\r\\n      fetchJson<TData>(url: string, data?: string | Record<string, any>, method?: string): Promise<TData>;\\r\\n      /**\\r\\n       * Get data from a url and return the response (not a nice object)\\r\\n       * @param url Url to call. It's usually a virtual url such as `app/auto/api/basic/hello`\\r\\n       * @param data Optional data. If provided, it will use a POST\\r\\n       * @param method Optional method, default is `GET` unless you specify data, then it's `POST`\\r\\n       */\\r\\n      fetchRaw<TData>(url: string, data?: string | Record<string, any>, method?: string): Promise<TData>;\\r\\n    };\\r\\n    // turn off for now v16.00 - confusing\\r\\n    // [key: string]: any;\\r\\n  };\\r\\n  /**\\r\\n   * Information about the item this formula targets.\\r\\n   */\\r\\n  target: {\\r\\n    /** The entity the current formula affects */\\r\\n    entity: {\\r\\n      /** The entity ID */\\r\\n      id: number;\\r\\n      /** The entity GUID */\\r\\n      guid: string;\\r\\n      /** Metadata For information */\\r\\n      for: {\\r\\n        /** The target type like `4` (Entity). `0` if it's not metadata  */\\r\\n        targetType: number;\\r\\n        /** The int-key if it uses number keys, otherwise null */\\r\\n        number?: number;\\r\\n        /** The string-key if it uses string keys, otherwise null */\\r\\n        string?: string;\\r\\n        /** The GUID-key if it uses GUIDs, otherwise null */\\r\\n        guid?: string;\\r\\n      }\\r\\n    };\\r\\n    name: string;\\r\\n    /** The entity type name */\\r\\n    type: string;\\r\\n  };\\r\\n  /**\\r\\n   * Information about the current user\\r\\n   */\\r\\n  user: {\\r\\n    /** The current user ID */\\r\\n    id: number;\\r\\n    /** Check if the current user is anonymous eg. not logged in */\\r\\n    isAnonymous: boolean;\\r\\n    /** Check if the current user is a content admin */\\r\\n    isContentAdmin: boolean;\\r\\n    /** Check if the current user is a site admin */\\r\\n    isSiteAdmin: boolean;\\r\\n    /** Check if the current user is a system admin */\\r\\n    isSystemAdmin: boolean;\\r\\n    /** current user e-mail */\\r\\n    email: string;\\r\\n    /** The user GUID */\\r\\n    guid: string;\\r\\n    /** the name usually shown in greetings */\\r\\n    name: string;\\r\\n    /** The user name used for login */\\r\\n    username: string;\\r\\n  };\\r\\n}\\r\\n\\r\\n// /**\\r\\n//  * Test docs\\r\\n//  * @param data The data object\\r\\n//  */\\r\\n// declare function callbackV2(data: FormulaData): string | string[];\\r\\n\\r\\n// /**\\r\\n//  * test docs 3\\r\\n//  * @param callback The real code of the formula\\r\\n//  */\\r\\n// declare function v3(callback: typeof callbackV2);\\r\\n\\r\\n/**\\r\\n * This `v2` wrapper is required for the intellisense to work.\\r\\n * @param callback The real code of the formula\\r\\n * @returns A string, boolean, number, date or an advanced object\\r\\n */\\r\\ndeclare function v2(\\r\\n  // The main function - adding comments here does not show up, so we don't have them ATM\\r\\n  callback: (\\r\\n    data: FormulaData,\\r\\n    context: FormulaContext,\\r\\n  ) => string | boolean | number | Date | {\\r\\n    value?: string | boolean | number | Date | { severity: 'warning' | 'error', message: string },\\r\\n    fields?: {\\r\\n      name: string,\\r\\n      value: string | boolean | number | Date\\r\\n    }[],\\r\\n    promise?: Promise<any>,\\r\\n    stop?: boolean,\\r\\n  },\\r\\n): void;\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { transient } from '../../../../../../core';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { computedObj, signalObj } from '../../../shared/signals/signal.utilities';\r\nimport { EntityOption, FieldOption, TargetOption } from '../../dialog/footer/formula-designer/formula-designer.models';\r\nimport { FieldsSettingsService } from '../../state/fields-settings.service';\r\nimport { ItemService } from '../../state/item.service';\r\nimport { FormulaCacheItem } from '../cache/formula-cache.model';\r\nimport { FormulaCacheService } from '../cache/formula-cache.service';\r\nimport { FormulaTargets } from '../targets/formula-targets';\r\nimport { FormulaTargetsService } from '../targets/formula-targets.service';\r\nimport { DesignerState } from './designer-state.model';\r\nimport { FormulaV1Helpers } from './formula-v1-snippets';\r\nimport { IntellisenseV2 } from './intellisense-v2';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  constructor: false,\r\n  setDesignerOpen: false,\r\n}\r\n\r\n/**\r\n * Contains methods for extended CRUD operations for formulas.\r\n */\r\n@Injectable()\r\nexport class FormulaDesignerService {\r\n\r\n  log = classLog({FormulaDesignerService}, logSpecs);\r\n\r\n  public cache = transient(FormulaCacheService);\r\n  #targetsService = transient(FormulaTargetsService);\r\n\r\n  constructor(private itemService: ItemService) {\r\n    this.log.fnIf('constructor');\r\n  }\r\n\r\n  /**\r\n   * Contain all the settings to all items/settings in this form\r\n   * for rare cases (formulas) which need to access settings of all items\r\n   */\r\n  public itemSettingsServices: Record<string, FieldsSettingsService> = {};\r\n\r\n  /** The current state of the UI, what field is being edited etc. */\r\n  public designerState = signalObj<DesignerState>('designerState', {\r\n    editMode: false,\r\n    entityGuid: undefined,\r\n    fieldName: undefined,\r\n    isOpen: false,\r\n    target: undefined,\r\n  } satisfies DesignerState);\r\n\r\n  /** Formula result of the formula which is currently open in the editor */\r\n  formulaResult = computedObj('formulaResult', () => {\r\n    const state = this.designerState();\r\n    return this.cache.resultListIndexAndOriginal(state).value;\r\n  });\r\n\r\n  currentTargetOptions = computedObj<TargetOption[]>('currentTargetOptions', () => {\r\n    const state = this.designerState();\r\n    const formulas = this.cache.formulas();\r\n    return this.#targetsService.getTargetOptions(state, formulas);\r\n  });\r\n\r\n  /** Possible entities incl. state if they have formulas */\r\n  entityOptions = computedObj<EntityOption[]>('entityOptions', () => {\r\n    // this is a signal, so this will change when the data is loaded...\r\n    const formulas = this.cache.formulas();\r\n    return Object.entries(this.itemSettingsServices).map(([entityGuid, settingsSvc]) => {\r\n      const entityFormulas = formulas.filter(f => f.entityGuid === entityGuid);\r\n      return {\r\n        entityGuid: entityGuid,\r\n        formulas: entityFormulas,\r\n        hasFormula: entityFormulas.length > 0,\r\n        label: settingsSvc.contentTypeSettings()._itemTitle,\r\n      } satisfies EntityOption;\r\n    })\r\n  });\r\n\r\n  /** possible fields of the current entity incl. state such as if it has formulas */\r\n  fieldsOptions = computedObj<FieldOption[]>('fieldsOptions', () => {\r\n    const guid = this.designerState().entityGuid;\r\n    if (guid == null)\r\n      return [];\r\n    const entityFormulas = this.entityOptions().find(e => e.entityGuid == guid).formulas;\r\n    // find the current fieldSettingsService to get all properties\r\n    const selectedSettings = this.itemSettingsServices[guid];\r\n    const fieldsProps = selectedSettings.allProps();\r\n    const fieldOptions: FieldOption[] = Object.keys(fieldsProps).map(fieldName => {\r\n      const formulas = entityFormulas.filter(f => f.fieldName === fieldName);\r\n      return {\r\n        fieldName,\r\n        formulas,\r\n        hasFormula: formulas.length > 0,\r\n        inputType: fieldsProps[fieldName].settings.InputType,\r\n        label: fieldName,\r\n      } satisfies FieldOption;\r\n    });\r\n    return fieldOptions;\r\n  });\r\n\r\n  initAfterItemSettingsAreReady(): void {\r\n    // Initialize the first designer state to contain the first item and field\r\n    const oldState = this.designerState();\r\n    const [entityGuid, settingsSvc] = Object.entries(this.itemSettingsServices)[0];\r\n    const fieldsProps = settingsSvc.allProps();\r\n    const firstFieldName = Object.keys(fieldsProps)[0];\r\n    const target = firstFieldName != null ? FormulaTargets.Value : null;\r\n\r\n    const newState: DesignerState = {\r\n      ...oldState,\r\n      entityGuid,\r\n      fieldName: firstFieldName,\r\n      target,\r\n    };\r\n    this.designerState.set(newState);\r\n  }\r\n\r\n  /** The currently selected formula or null */\r\n  currentFormula = computedObj<FormulaCacheItem>('currentFormula', () => {\r\n    const s = this.designerState();\r\n    const { value } = this.cache.formulaListIndexAndOriginal(s);\r\n    return value;\r\n  });\r\n\r\n  /** Snippets for the current formula based on it's version */\r\n  v1ContextSnippets = computedObj('v1ContextSnippets', () => {\r\n    const current = this.currentFormula();\r\n    return current != null\r\n    ? FormulaV1Helpers.buildDesignerSnippetsContext(current)\r\n    : [];\r\n  });\r\n\r\n  /** Snippets for the current item header based on the current formulas target guid */\r\n  #currentItemHeader = computedObj('currentItemHeader', () => {\r\n    const guid = this.designerState().entityGuid;\r\n    return guid == null ? null : this.itemService.getItemHeader(guid);\r\n  });\r\n\r\n  /** JS Typings for V2 formulas - all the properties and type names */\r\n  v2JsTypings = computedObj('v2JsTypings', () => {\r\n    const formula = this.currentFormula();\r\n    const itemHeader = this.#currentItemHeader();\r\n    return formula != null && itemHeader != null\r\n      ? IntellisenseV2.getTypings(formula, this.fieldsOptions(), itemHeader.Prefill)\r\n      : ''\r\n  });\r\n\r\n  /** Data snippets for the current formula V1 - all the data that can be used in formulas */\r\n  v1DataSnippets = computedObj('v1DataSnippets', () => {\r\n    const formula = this.currentFormula();\r\n    const itemHeader = this.#currentItemHeader();\r\n    return formula != null && itemHeader != null\r\n    ? FormulaV1Helpers.getSnippets(formula, this.fieldsOptions(), itemHeader.Prefill)\r\n    : []\r\n  });\r\n\r\n\r\n  /**\r\n   * Used for opening or closing designer\r\n   * @param isOpen\r\n   */\r\n  setDesignerOpen(isOpen: boolean): void {\r\n    this.log.fnIf('setDesignerOpen', { isOpen });\r\n    this.designerState.set({\r\n      ...this.designerState(),\r\n      isOpen,\r\n    } satisfies DesignerState);\r\n  }\r\n}\r\n","import { FieldValueOrResultRaw } from './results/formula-results.models';\r\nimport { FormulaV1Context } from './run/formula-run-context.model';\r\nimport { FormulaV1Data } from './run/formula-run-data.model';\r\nimport { FormulaV1Experimental } from './run/formula-run-experimental.model';\r\n\r\n//#region Formula strings / parts to process and show templates\r\n\r\n/**\r\n * This must be in front of every formula so that JavaScript will run it.\r\n * Normally it's not there, so it's added before running the code.\r\n */\r\nexport const runFormulaPrefix = 'function ';\r\n\r\n// V1 sample, just for reference\r\n// const defaultFormulaV1 = `${requiredFormulaPrefix}v1 (data, context) {\r\n//   return data.value;\r\n// }`;\r\n\r\n// new\r\nconst defaultFormulaV2 = `v2((data, context) => {\r\n  return data.value;\r\n});`;\r\n\r\nexport const defaultFormula = defaultFormulaV2;\r\n\r\nconst listItemFormulaV2 = `v2((data, context, item) => {\r\n  return data.value;\r\n});`;\r\n\r\nexport const defaultListItemFormula = listItemFormulaV2;\r\n\r\n//#endregion\r\n\r\n//#region Formula Function Types\r\n\r\nexport type FormulaFunction = FormulaFunctionDefault | FormulaFunctionV1;\r\n\r\nexport type FormulaFunctionDefault = () => FieldValueOrResultRaw;\r\n\r\nexport type FormulaFunctionV1 = (data: FormulaV1Data, context: FormulaV1Context, experimental: FormulaV1Experimental) => FieldValueOrResultRaw;\r\n\r\n//#endregion\r\n\r\n//#region Formula Versions\r\n\r\nexport const FormulaVersions = {\r\n  V1: 'v1',\r\n  V2: 'v2',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\n//#endregion","import { FormulaFieldValidation } from '../targets/formula-targets';\r\nimport { FormulaV1Data } from './formula-run-data.model';\r\nimport { FormulaExecutionSpecsWithRunParams, FormulaRunParameters, FormulaRunPickers } from './formula-objects-internal-data';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { PickerItem } from '../../fields/picker/models/picker-item.model';\r\nimport { StateUiMapperBase } from '../../fields/picker/adapters/state-ui-mapper-base';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\n\r\n/**\r\n * The object containing data information.\r\n * Usually given to a formula on the first parameter.\r\n * eg v2((DATA, ctx) => { ... })\r\n */\r\nexport class FormulaDataObject implements FormulaV1Data {\r\n  /** Private variable containing the data used in the getters */\r\n  #propsData: FormulaExecutionSpecsWithRunParams;\r\n  #params: FormulaRunParameters;\r\n  #valueMapper: StateUiMapperBase;\r\n  #picker: FormulaRunPickers;\r\n\r\n  constructor(propsData: FormulaExecutionSpecsWithRunParams) {\r\n    this.#propsData = propsData;\r\n    this.#params = propsData.runParameters;\r\n    this.#picker = this.#params.pickerHelper.infos;\r\n    this.#valueMapper = this.#params.pickerHelper.infos.mapper;\r\n  }\r\n\r\n  get default(): FieldValue {\r\n    const { formula } = this.#params;\r\n    if (formula.isValue)\r\n      return this.#value(this.#params.defaultValueHelper().getDefaultOrPrefillValue());\r\n\r\n    if (formula.isSetting)\r\n      return (this.#params.settingsInitial)[formula.settingName as keyof FieldSettings] as FieldValue;\r\n\r\n    if (formula.isNewPicker)\r\n      return this.#picker.options.list as unknown as FieldValue;\r\n  }\r\n\r\n  get initial(): FieldValue {\r\n    const formula = this.#params.formula;\r\n    return formula.isValue\r\n      ? this.#value(this.#propsData.initialFormValues[formula.fieldName])\r\n      : null;\r\n  }\r\n\r\n  get parameters(): Record<string, any> {\r\n    return this.#propsData.parameters.all();\r\n  }\r\n\r\n  get prefill(): FieldValue {\r\n    const { formula } = this.#params;\r\n    return formula.isValue\r\n      ? this.#value(this.#params.defaultValueHelper().getDefaultOrPrefillValue(true))\r\n      : null;\r\n  }\r\n\r\n  get value(): FieldValue | FormulaFieldValidation {\r\n    const formula = this.#params.formula;\r\n\r\n    if (formula.isValue)\r\n      return this.#value(this.#params.currentValues[formula.fieldName]);\r\n\r\n    if (formula.isSetting)\r\n      return (this.#params.settingsCurrent)[formula.settingName as keyof FieldSettings] as FieldValue;\r\n\r\n    if (formula.isValidation)\r\n      return {\r\n        severity: '',\r\n        message: '',\r\n      } satisfies FormulaFieldValidation;\r\n  }\r\n\r\n  /** Get the selected data - make sure it's a copy of each item, so changes don't affect the source! */\r\n  get selected(): PickerItem[] { return this.#getSelected('list'); }\r\n\r\n  get selectedRaw(): PickerItem[] { return this.#getSelected('listRaw'); }\r\n\r\n  #getSelected(part: 'list' | 'listRaw') {\r\n    const list = this.#picker.selected[part];\r\n    return this.#picker.picker.selectedCopy(list);\r\n  }\r\n\r\n  get options(): PickerItem[] {\r\n    return this.#getOptions('list');\r\n  }\r\n\r\n  get optionsRaw(): PickerItem[] {\r\n    return this.#getOptions('listRaw');\r\n  }\r\n\r\n  #getOptions(part: 'list' | 'listRaw') {\r\n    // TODO: create copy!\r\n    const list = this.#picker.options[part];\r\n    return list;\r\n  }\r\n\r\n\r\n  #value(raw: FieldValue): FieldValue {\r\n    return this.#valueMapper?.toUi(raw) ?? raw;\r\n  }\r\n}\r\n","import { Sxc } from '@2sic.com/2sxc-typings';\r\nimport { FormulaVersions } from '../formula-definitions';\r\nimport { FormulaV1Context, FormulaV1CtxApp, FormulaV1CtxCulture, FormulaV1CtxFeatures, FormulaV1CtxForm, FormulaV1CtxTarget, FormulaV1CtxTargetEntity, FormulaV1CtxUser } from './formula-run-context.model';\r\nimport { FormulaExecutionSpecsWithRunParams } from './formula-objects-internal-data';\r\nimport { FormulaExperimentalObject } from './formula-experimental-object';\r\nimport { FormulaContextEntityInfo } from './formula-run-experimental.model';\r\n\r\n/**\r\n * The object containing context information.\r\n * Usually given to a formula on the second parameter.\r\n * eg v2((data, CTX) => { ... })\r\n */\r\nexport class FormulaContextObject implements FormulaV1Context {\r\n\r\n  cache: Record<string, any>;\r\n  debug: boolean;\r\n  sxc: Sxc;\r\n  user: FormulaV1CtxUser;\r\n  app: FormulaV1CtxApp;\r\n  culture: FormulaV1CtxCulture;\r\n\r\n  /**\r\n   * new v18.01\r\n   */\r\n  entities: FormulaContextEntities;\r\n\r\n  features: FormulaV1CtxFeatures;\r\n  form: FormulaV1CtxForm;\r\n  target: FormulaV1CtxTarget;\r\n\r\n  xp: FormulaExperimentalObject;\r\n\r\n  constructor(specs: FormulaExecutionSpecsWithRunParams, experimental: FormulaExperimentalObject) {\r\n    const formula = specs.runParameters.formula;\r\n    this.cache = formula.cache;\r\n    this.debug = specs.debugEnabled;\r\n    this.sxc = formula.sxc;\r\n    this.user = formula.user;\r\n\r\n    // Build the App, but don't include the getSetting method which would be an empty method\r\n    const { getSetting, ...partialApp } = specs.runParameters.formula.app;\r\n    this.app = Object.assign(new FormulaContextApp(specs), partialApp);\r\n\r\n    this.target = new FormulaContextTarget(specs);\r\n\r\n    const language = specs.language;\r\n    const languages = specs.languages\r\n    this.culture = {\r\n      code: language.current,\r\n      name: languages.find(l => l.NameId === language.current)?.Culture,\r\n    };\r\n\r\n    this.features = new FormulaContextFeatures(specs);\r\n\r\n    this.form = new FormulaContextForm(specs);\r\n\r\n    this.entities = new FormulaContextEntities(specs);\r\n\r\n    this.xp = experimental;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * new v18.01\r\n */\r\nclass FormulaContextEntities {\r\n  constructor(private specs: FormulaExecutionSpecsWithRunParams) { }\r\n\r\n  /**\r\n   * \r\n   * @returns All entities in the context\r\n   * new v18.01\r\n   */\r\n  getAll() {\r\n    const v1Entities = this.specs.itemService.getMany(this.specs.formConfig.config.itemGuids).map(i => ({\r\n      guid: i.Entity.Guid,\r\n      id: i.Entity.Id,\r\n      type: {\r\n        guid: i.Entity.Type.Id,\r\n        name: i.Entity.Type.Name,\r\n      }\r\n    } satisfies FormulaContextEntityInfo));\r\n    return v1Entities;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param guidOrName \r\n   * @returns The first entity in the context which matches the guid or name\r\n   * new v18.01\r\n   */\r\n  getOfType(guidOrName: string) {\r\n    return this.getAll().find(a => a.type.guid == guidOrName || a.type.name == guidOrName);\r\n  }\r\n}\r\n\r\nclass FormulaContextFeatures implements FormulaV1CtxFeatures {\r\n  constructor(private specs: FormulaExecutionSpecsWithRunParams) { }\r\n\r\n  isEnabled(name: string): boolean {\r\n    return this.specs.features().find(f => f.nameId === name)?.isEnabled ?? false;\r\n  }\r\n}\r\n\r\nclass FormulaContextForm implements FormulaV1CtxForm {\r\n  constructor(private specs: FormulaExecutionSpecsWithRunParams) { }\r\n\r\n  runFormulas(): void {\r\n    const formula = this.specs.runParameters.formula;\r\n    if (formula.version === FormulaVersions.V1) {\r\n      console.error('form.runFormulas() is being deprecated and will stop working end of 2024. Use V2 formulas and return the promise. Formulas will auto-run when it completes.');\r\n      this.specs.fieldsSettingsSvc.retriggerFormulas('form.runFormulas()');\r\n      return;\r\n    }\r\n    \r\n    console.error('form.runFormulas() is not supported in V2 formulas. Just return a promise.');\r\n  }\r\n}\r\n\r\n/**\r\n * The object containing app context information.\r\n * Usually on the context.app property.\r\n * \r\n * Note that most properties are assigned to this object from outside, which is why we don't initialize them.\r\n * This is because they are created once, and don't need to be re-created for each formula run.\r\n */\r\nclass FormulaContextApp implements FormulaV1CtxApp {\r\n  /** Private variable containing the data used in the getters */\r\n  #propsData: FormulaExecutionSpecsWithRunParams;\r\n\r\n  constructor(propsData: FormulaExecutionSpecsWithRunParams) {\r\n    this.#propsData = propsData;\r\n  }\r\n\r\n  appId: number;\r\n  zoneId: number;\r\n  isGlobal: boolean;\r\n  isSite: boolean;\r\n  isContent: boolean;\r\n  getSetting(settingPath: string) {\r\n    if (this.#propsData.runParameters.formula.version === FormulaVersions.V1) {\r\n      console.warn('app.getSetting() is not available in v1 formulas, please use v2.');\r\n      return '⚠️ error - see console';\r\n    }\r\n\r\n    const result = this.#propsData.formConfig.config.settings.Values[settingPath];\r\n    if (result != null)\r\n      return result;\r\n    console.warn(`Error: Setting '${settingPath}' not found. Did you configure it in the ContentType to be included? ` +\r\n      `See https://go.2sxc.org/formulas`);\r\n    return '⚠️ error - see console';\r\n  }\r\n}\r\n\r\n/**\r\n * The object containing formula target information.\r\n * So it says what the formula is for, which entity, field, setting/value etc.\r\n * Usually on the context.target property.\r\n */\r\nclass FormulaContextTarget implements FormulaV1CtxTarget {\r\n\r\n  entity: FormulaV1CtxTargetEntity;\r\n  name: string;\r\n  type: string;\r\n\r\n  /** Private variable containing the data used in the getters */\r\n  #propsData: FormulaExecutionSpecsWithRunParams;\r\n\r\n  constructor(propsData: FormulaExecutionSpecsWithRunParams) {\r\n    this.#propsData = propsData;\r\n    const def = propsData.runParameters.formula;\r\n    this.entity = def.targetEntity;\r\n\r\n    // Name and type are truncated from the original target string if it's a setting\r\n    const isValueOrValidation = def.isValue || def.isValidation;\r\n    this.name = isValueOrValidation\r\n      ? def.fieldName\r\n      : def.target.substring(def.target.lastIndexOf('.') + 1);\r\n    this.type = isValueOrValidation\r\n      ? def.target\r\n      : def.target.substring(0, def.target.lastIndexOf('.'))\r\n  }\r\n\r\n}","import { FormulaContextEntityInfo } from './formula-run-experimental.model';\r\nimport { FormulaV1Experimental } from './formula-run-experimental.model';\r\nimport { FormulaExecutionSpecsWithRunParams } from './formula-objects-internal-data';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\nimport { EntityReader } from '../../shared/helpers';\r\n\r\nconst messageObsolete = 'A formula in this dialog is using an experimental feature: \"{0}\" - this will be removed soon.';\r\n\r\n/**\r\n * The object containing experimental information which can change at any time.\r\n * Usually given to a formula on the third parameter, but not officially documented.\r\n * eg v2((data, ctx, experimental) => { ... })\r\n */\r\nexport class FormulaExperimentalObject implements FormulaV1Experimental {\r\n\r\n  constructor(private specs: FormulaExecutionSpecsWithRunParams) { }\r\n\r\n  getEntities(): FormulaContextEntityInfo[] {\r\n    this.#showWarningObsolete('getEntities');\r\n    const v1Entities = this.specs.itemService.getMany(this.specs.formConfig.config.itemGuids).map(i => ({\r\n      guid: i.Entity.Guid,\r\n      id: i.Entity.Id,\r\n      type: {\r\n        guid: i.Entity.Type.Id,\r\n        name: i.Entity.Type.Name,\r\n      }\r\n    } satisfies FormulaContextEntityInfo));\r\n    return v1Entities;\r\n  }\r\n\r\n  getSettings(fieldName: string): FieldSettings {\r\n    this.#showWarningObsolete('getSettings');\r\n    return this.specs.fieldsSettingsSvc.settings[fieldName]();\r\n  }\r\n\r\n  getValues(entityGuid: string): ItemValuesOfLanguage {\r\n    this.#showWarningObsolete('getValues');\r\n    const item = this.specs.itemService.get(entityGuid);\r\n    const reader = new EntityReader(this.specs.language);\r\n    return reader.currentValues(item.Entity.Attributes);\r\n  }\r\n\r\n  #showWarningObsolete(name: string) {\r\n    const msg = messageObsolete.replace('{0}', name);\r\n    console.error(msg);\r\n\r\n    if (this.specs.warningsObsolete[name])\r\n      return;\r\n    this.specs.warningsObsolete[name] = true;\r\n    alert(msg);\r\n  }\r\n}","import { untracked } from '@angular/core';\r\nimport { FormulaCacheItem } from './cache/formula-cache.model';\r\nimport { FormulaDesignerService } from './designer/formula-designer.service';\r\nimport { FormulaPropsV1 } from './formula-run-one-helpers.factory';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LoggingService, LogSeverities } from '../shared/services/logging.service';\r\nimport { FieldValue } from '../../../../../edit-types/src/FieldValue';\r\n\r\nexport class FormulaDeveloperHelper {\r\n\r\n  constructor(\r\n    private designerSvc: FormulaDesignerService,\r\n    private translate: TranslateService,\r\n    private logSvc: LoggingService,\r\n    private formula: FormulaCacheItem,\r\n    private ctTitle: string,\r\n    private formulaProps: FormulaPropsV1,\r\n  ) {\r\n    this.isOpen = this.#isDesignerOpen(formula);\r\n  }\r\n  \r\n  /** The designer is currently open, so we should show more information to the developer */\r\n  public isOpen: boolean = false;\r\n\r\n  showStart() {\r\n    if (!this.isOpen) return;\r\n    const f = this.formula;\r\n    console.log(`Running formula${f.version?.toLocaleUpperCase()} for Entity: \"${this.ctTitle}\", Field: \"${f.fieldName}\", Target: \"${f.target}\", arguments:`, this.formulaProps);\r\n  }\r\n\r\n  showResult(value: FieldValue, isError: boolean, isOnlyPromise: boolean) {\r\n    this.designerSvc.cache.cacheResults(this.formula, value, false, false);\r\n    if (this.isOpen)\r\n      console.log('Formula result:', value);\r\n  }\r\n\r\n  showError(error: unknown) {\r\n    const formula = this.formula;\r\n    const errorLabel = `Error in formula calculation for Entity: \"${this.ctTitle}\", Field: \"${formula.fieldName}\", Target: \"${formula.target}\"`;\r\n    this.designerSvc.cache.cacheResults(formula, undefined, true, false);\r\n    this.logSvc.addLog(LogSeverities.Error, errorLabel, error);\r\n    if (this.isOpen)\r\n      console.error(errorLabel, error);\r\n    else\r\n      this.logSvc.showMessage(this.translate.instant('Errors.FormulaCalculation'), 2000);\r\n  }\r\n\r\n  /**\r\n   * Used for checking if the currently running formula is open in designer.\r\n   * @param f\r\n   * @returns True if formula is open in designer, otherwise false\r\n   */\r\n  #isDesignerOpen(f: FormulaCacheItem): boolean {\r\n    return untracked(() => {\r\n      const ds = this.designerSvc.designerState();\r\n      const isOpenInDesigner = ds.isOpen && ds.entityGuid === f.entityGuid && ds.fieldName === f.fieldName && ds.target === f.target;\r\n      return isOpenInDesigner;\r\n    });\r\n  }\r\n}","\r\nimport { FormulaVersions } from './formula-definitions';\r\nimport { FormulaDataObject } from './run/formula-run-data';\r\nimport { FormulaExecutionSpecsWithRunParams } from './run/formula-objects-internal-data';\r\nimport { FormulaContextObject } from './run/formula-run-context';\r\nimport { FormulaExperimentalObject } from './run/formula-experimental-object';\r\nimport { FormulaV1Data } from './run/formula-run-data.model';\r\nimport { FormulaV1Context } from './run/formula-run-context.model';\r\nimport { FormulaV1Experimental } from './run/formula-run-experimental.model';\r\nimport { FormulaDesignerService } from './designer/formula-designer.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LoggingService } from '../shared/services/logging.service';\r\nimport { FormulaDeveloperHelper } from './formula-developer-helper';\r\nimport { FormulaValueCorrections } from './results/formula-value-corrections.helper';\r\n\r\n/**\r\n * Helper to run a single formula.\r\n * Will be initialized for each field as it's about to run all, and can then provide\r\n * helper objects and build the formula props (data/context/experimental).\r\n */\r\nexport class FormulaRunOneHelpersFactory {\r\n\r\n  constructor(\r\n    private designerSvc: FormulaDesignerService,\r\n    private translate: TranslateService,\r\n    private logSvc: LoggingService,\r\n    public ctTitle: string,\r\n  ) { }\r\n\r\n  public getPartsFor(execSpecs: FormulaExecutionSpecsWithRunParams) {\r\n    const f = execSpecs.runParameters.formula;\r\n    const params = this.#dataAndCtx(execSpecs);\r\n    const devHelper = new FormulaDeveloperHelper(this.designerSvc, this.translate, this.logSvc, f, this.ctTitle, params);\r\n\r\n    return {\r\n      formula: f,\r\n      fieldName: f.fieldName,\r\n      params,\r\n      title: this.ctTitle,\r\n      devHelper,\r\n      valHelper: new FormulaValueCorrections(f.fieldName, f.isValue, f.inputType, devHelper.isOpen, execSpecs.runParameters.pickerHelper.infos.mapper),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Used to build formula props parameters.\r\n   * @returns Formula properties\r\n   */\r\n  #dataAndCtx(runParams: FormulaExecutionSpecsWithRunParams,): FormulaPropsV1 {\r\n    const { formula, currentValues: formValues } = runParams.runParameters;\r\n    \r\n    switch (formula.version) {\r\n      case FormulaVersions.V1:\r\n      case FormulaVersions.V2:\r\n\r\n        // Create the data object and add all value properties of the form to it\r\n        const data = Object.assign(new FormulaDataObject(runParams), formValues);\r\n\r\n        const experimental = new FormulaExperimentalObject(runParams);\r\n\r\n        const context = new FormulaContextObject(runParams, experimental);\r\n\r\n        return {\r\n          data,\r\n          context,\r\n          experimental,\r\n        } satisfies FormulaPropsV1;\r\n\r\n      default:\r\n        // default should never happen, so don't return any data to use; will probably error if this happens\r\n        // 2024-09-10 2dm adding throw error here to see if it's anywhere\r\n        // TODO: REMOVE option default everywhere ca. 2024-Q3\r\n        throw new Error(`Formula version unknown not supported`);\r\n        // return;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Used to build the formula props parameters as a record of key-value pairs.\r\n * @param prefillAsParameters\r\n * @returns\r\n */\r\nexport class FormulaPropsParameters {\r\n  constructor(private prefill: Record<string, unknown>) { }\r\n\r\n  all(): Record<string, any> {\r\n    if (!this.#cache)\r\n      this.#cache = this.prefill ? JSON.parse(JSON.stringify(this.prefill)) : {};\r\n    return this.#cache;\r\n  }\r\n  #cache: Record<string, any>;\r\n}\r\n\r\n\r\n\r\nexport interface FormulaPropsV1 {\r\n  data: FormulaV1Data;\r\n  context: FormulaV1Context;\r\n  experimental: FormulaV1Experimental;\r\n}\r\n","import { DataTypeCatalog } from \"../../../shared/fields/data-type-catalog\";\r\nimport { InputTypeCatalog } from \"../../../shared/fields/input-type-catalog\";\r\nimport { FieldFormulasResultRaw, FieldValueOrResultRaw } from \"./formula-results.models\";\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { PickerItem } from '../../fields/picker/models/picker-item.model';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { InputTypeSpecs } from '../../shared/input-types/input-type-specs.model';\r\nimport { StateUiMapperBase } from '../../fields/picker/adapters/state-ui-mapper-base';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  v1: false,\r\n  v2: false,\r\n  allValues: true,\r\n  oneValue: true,\r\n  fields: [...DebugFields],\r\n}\r\n\r\n/**\r\n * Contains methods for correcting formula results.\r\n */\r\nexport class FormulaValueCorrections {\r\n\r\n  log = classLog({FormulaValueCorrections}, logSpecs, true);\r\n\r\n  constructor(\r\n    private fieldName: string,\r\n    private isValue: boolean,\r\n    private inputType: InputTypeSpecs,\r\n    private isOpen: boolean,\r\n    private valueMapper?: StateUiMapperBase,\r\n  ) { }\r\n\r\n\r\n  v1(v1Result: FieldValueOrResultRaw): { ok: boolean, v1Result: FieldFormulasResultRaw } {\r\n    const isArray = v1Result && Array.isArray(v1Result) && v1Result.every(r => typeof r === 'string');\r\n    const resultIsPure = ['string', 'number', 'boolean'].includes(typeof v1Result) || v1Result instanceof Date || isArray || !v1Result;\r\n    if (!resultIsPure)\r\n      return { ok: false, v1Result: this.toFormulaResult(undefined) };\r\n\r\n    const v1Value = this.isValue\r\n      ? this.#oneValue(v1Result as FieldValue)\r\n      : v1Result as FieldValue;\r\n    return { ok: true, v1Result: this.toFormulaResult(v1Value) };\r\n  }\r\n\r\n  v2(result: FieldValueOrResultRaw): FieldFormulasResultRaw {\r\n    const raw = this.allValues(result);\r\n    return { ...raw, openInDesigner: this.isOpen };\r\n  }\r\n\r\n  /**\r\n   * This method is used to support duck typing in the formula result and from it to fill FormulaResultRaw object with corrected values.\r\n   * @param target Formula target\r\n   * @param result Formula result\r\n   * @param inputType InputType is needed to check if the result is a date which needs to be corrected\r\n   * @returns Strongly typed FormulaResultRaw object\r\n   */\r\n  allValues(result: FieldValueOrResultRaw): FieldFormulasResultRaw {\r\n    const l = this.log.fnIfInList('allValues', 'fields', this.fieldName, { result });\r\n\r\n    // if (l.enabled)\r\n    //   debugger;\r\n\r\n    // 2024-09-10 21:15 2dm changed this, as I believe all cases have a clear stop-value\r\n    // const stop = (result as FormulaResultRaw)?.stop ?? null;\r\n    const defaults: Partial<FieldFormulasResultRaw> = { value: undefined, fields: [], stop: null, sleep: null };\r\n    if (result == null)\r\n      return l.r({ ...defaults, value: result as FieldValue}, 'null/empty');\r\n    \r\n    const targetIsValue = this.isValue;\r\n\r\n    // Show warning if array - new v18 newPicker\r\n    if (Array.isArray(result)) {\r\n      console.warn('Formula result was an array - this is not allowed. Please return an object containing the array instead: { value: [...] }.', result);\r\n      return l.r(defaults, 'array');\r\n    }\r\n\r\n    // Handle object results - the larger / more complex case\r\n    if (typeof result === 'object') {\r\n      if (result instanceof Date && targetIsValue)\r\n        return l.r({ ...defaults, value: this.#oneValue(result) }, 'date');\r\n\r\n      if (result instanceof Promise)\r\n        return l.r({\r\n          ...defaults,\r\n          value: undefined,\r\n          promise: result as Promise<FieldFormulasResultRaw>,\r\n        }, 'promise');\r\n\r\n      const raw: FieldFormulasResultRaw = result as FieldFormulasResultRaw;\r\n\r\n      // fix stop so it's never undefined\r\n      raw.stop ??= null;\r\n      raw.sleep ??= null;\r\n\r\n      // Fix single value - but only if it's not an array, in which case we must leave as is\r\n      if (raw.value && targetIsValue)\r\n        raw.value = Array.isArray(raw.value)\r\n          ? this.valueMapper?.toState(raw.value) ?? raw.value\r\n          : this.#oneValue(raw.value);\r\n\r\n      // fix fields\r\n      if (raw.fields)\r\n        raw.fields = raw.fields?.map(f => {\r\n          f.value = this.#oneValue(f.value);\r\n          return f;\r\n        });\r\n\r\n      // test options\r\n      if (raw.options) {\r\n        if (!Array.isArray(raw.options)) {\r\n          console.error('options is not an array', raw.options);\r\n          raw.options = [];\r\n        } else if (raw.options.length > 0) {\r\n          if (raw.options.find(o => !o || o.value == null)) {\r\n            console.error('some options are missing value', raw.options);\r\n            raw.options = [];\r\n          }\r\n          if (hasDuplicateValues(raw.options)) {\r\n            console.error('duplicate values in options', raw.options);\r\n            raw.options = [];\r\n          }\r\n        }\r\n      }\r\n      return l.r(raw, 'object');\r\n    }\r\n\r\n    // Non-Object results\r\n    const value: FieldFormulasResultRaw = { value: result as FieldValue };\r\n\r\n    // Handle value only result\r\n    // atm we are only correcting Value formulas\r\n    if (targetIsValue)\r\n      return l.r({ ...defaults, value: this.#oneValue(value.value) }, 'non-object, value');\r\n    return l.r(value, 'non-object, non-value');\r\n  }\r\n\r\n  /**\r\n   * Used to correct datetime field value from formula result.\r\n   * @param value Field value from formula result\r\n   * @param inputType InputType is needed to check if the result is a date which needs to be corrected\r\n   * @returns Corrected field value\r\n   */\r\n  #oneValue(value: FieldValue | Date): FieldValue {\r\n    if (value == null)\r\n      return value as FieldValue;\r\n\r\n    const inputType = this.inputType.inputType;\r\n    \r\n    if (inputType === InputTypeCatalog.DateTimeDefault || value instanceof Date) {\r\n      const date = new Date(value as string | number | Date);\r\n\r\n      // if value is not ISO string, nor milliseconds, correct timezone\r\n      if (!(typeof value === 'string' && value.endsWith('Z')) && date.getTime() !== value)\r\n        date.setTime(date.getTime() - date.getTimezoneOffset() * 60000);\r\n\r\n      date.setMilliseconds(0);\r\n      return date.toJSON();\r\n    }\r\n    \r\n    if (typeof (value) !== 'string' && (inputType?.startsWith(DataTypeCatalog.String.toLocaleLowerCase())\r\n      || inputType?.startsWith(DataTypeCatalog.Hyperlink.toLocaleLowerCase()))) {\r\n      return value.toString();\r\n    }\r\n    return value;\r\n  }\r\n\r\n\r\n  toFormulaResult(value: FieldValue): FieldFormulasResultRaw {\r\n    return {\r\n      value,\r\n      fields: [],\r\n      stop: null,\r\n      sleep: null,\r\n      openInDesigner: this.isOpen\r\n    };\r\n  }\r\n}\r\n\r\nfunction hasDuplicateValues(options: PickerItem[]) {\r\n  var ids = options.map(o => o.value);\r\n  var uniqueIds = new Set(ids);\r\n  if (ids.length !== uniqueIds.size) {\r\n    console.error('Duplicate values in options', options);\r\n    return true;\r\n  }\r\n  return false;\r\n}","/** Prefix for any kind of field settings */\r\nexport const SettingsFormulaPrefix = 'Field.Settings.';\r\n\r\n\r\n\r\n/** Default targets for formulas */\r\nexport const FormulaDefaultTargets = {\r\n  Disabled: `${SettingsFormulaPrefix}Disabled`,\r\n  Name: `${SettingsFormulaPrefix}Name`,\r\n  Notes: `${SettingsFormulaPrefix}Notes`,\r\n  Required: `${SettingsFormulaPrefix}Required`,\r\n  Value: 'Field.Value',\r\n  Visible: `${SettingsFormulaPrefix}Visible`,\r\n  Validation: 'Field.Validation',\r\n};\r\n\r\n/** Values of the Default Targets (used often, so precalculated) */\r\nexport const FormulaDefaultTargetValues = Object.values(FormulaDefaultTargets);\r\n\r\n\r\n\r\n/** Targets for new Pickers only */\r\nexport const FormulaNewPickerTargets = {\r\n  Options: 'Field.Options',\r\n  Selected: 'Field.Selected',\r\n};\r\n\r\n/** Values of the NewPicker Targets (used often, so precalculated) */\r\nexport const FormulaNewPickerTargetValues = Object.values(FormulaNewPickerTargets);\r\n\r\nexport const FormulaSpecialPickerTargets = [\r\n  FormulaNewPickerTargets.Options,\r\n  // FormulaDefaultTargets.Value,\r\n  FormulaNewPickerTargets.Selected,\r\n];\r\n\r\n/** These formulas should auto-sleep unless specified otherwise */\r\nexport const FormulaSpecialPickerAutoSleep = [\r\n  FormulaNewPickerTargets.Options,\r\n  FormulaNewPickerTargets.Selected,\r\n];\r\n\r\n\r\n\r\nexport const FormulaOptionalTargets = {\r\n  Collapsed: `${SettingsFormulaPrefix}Collapsed`,\r\n  DropdownValues: `${SettingsFormulaPrefix}DropdownValues`,\r\n};\r\n\r\nexport const FormulaOptionalTargetValues = Object.values(FormulaOptionalTargets);\r\n\r\n\r\n\r\n/** All possible targets for formulas (merged) */\r\nexport const FormulaTargets = {\r\n  ...FormulaDefaultTargets,\r\n  ...FormulaOptionalTargets,\r\n  ...FormulaNewPickerTargets,\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\n/** Validation object interface */\r\nexport interface FormulaFieldValidation {\r\n  severity: '' | 'error' | 'warning';\r\n  message?: string;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { classLog } from '../../shared/logging';\r\nimport { Language } from '../../shared/models/language.model';\r\nimport { SignalStoreBase } from '../shared/store/signal-store-base';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LanguageService extends SignalStoreBase<string, Language> {\r\n\r\n  constructor() {\r\n    super(classLog({LanguageService}));\r\n  }\r\n\r\n  override getId = (item: Language) => item.NameId.toLocaleLowerCase();\r\n}\r\n","export const TranslationLinks = {\r\n  Translate: 'Translate',\r\n  DontTranslate: 'DontTranslate',\r\n  MissingDefaultLangValue: 'MissingDefaultLangValue',\r\n  LinkReadOnly: 'LinkReadOnly',\r\n  LinkReadWrite: 'LinkReadWrite',\r\n  LinkCopyFrom: 'LinkCopyFrom',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Injectable } from '@angular/core';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { EavEntity } from '../models/eav';\r\nimport { EavEntityDto } from '../models/json-format-v1';\r\nimport { SignalStoreBase } from '../store/signal-store-base';\r\n\r\n/**\r\n * Content-Type Items are additional entities which the ContentType info needs.\r\n * For example, external formulas.\r\n * \r\n * This service stores / retrieves these.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeItemService extends SignalStoreBase<string, EavEntity> {\r\n\r\n  constructor() {\r\n    super(classLog({ContentTypeItemService}));\r\n  }\r\n\r\n  override getId = (item: EavEntity) => item.Guid;\r\n\r\n  addContentTypeItems(contentTypeItems: EavEntityDto[]): void {\r\n    const converted = EavEntity.convertMany(contentTypeItems);\r\n    this.addMany(converted);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EavContentType, EavContentTypeAttribute, EavItem } from '../models/eav';\r\nimport { EavContentTypeDto } from '../models/json-format-v1';\r\nimport { ItemHelper } from '../helpers/item.helper';\r\nimport { SignalStoreBase } from '../store/signal-store-base';\r\nimport { classLog } from '../../../shared/logging';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeService extends SignalStoreBase<string, EavContentType> {\r\n\r\n  constructor() {\r\n    super(classLog({ContentTypeService}));\r\n  }\r\n  \r\n  override getId = (item: EavContentType) => item.Id;\r\n\r\n  addContentTypes(contentTypes: EavContentTypeDto[]): void {\r\n    const converted = EavContentType.convertMany(contentTypes);\r\n    this.addMany(converted);\r\n  }\r\n\r\n  getContentTypeOfItem(item: EavItem): EavContentType {\r\n    const nameId = ItemHelper.getContentTypeNameId(item);\r\n    return this.get(nameId);\r\n  }\r\n\r\n  getAttribute(guid: string, name: string): EavContentTypeAttribute {\r\n    return this.get(guid).Attributes.find(a => a.Name === name);\r\n  }\r\n\r\n  getAttributeOfItem(item: EavItem, name: string): EavContentTypeAttribute {\r\n    return this.getContentTypeOfItem(item).Attributes.find(a => a.Name === name);\r\n  }\r\n}\r\n","import { ItemAddIdentifier } from '../../../shared/models/edit-form.model';\r\nimport { EavItem } from '../models/eav';\r\n\r\nexport class ItemHelper {\r\n  static getContentTypeNameId(item: EavItem): string {\r\n    return item.Entity.Type?.Id\r\n      ?? (item.Header as ItemAddIdentifier).ContentTypeName;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Of } from '../../../../../../core';\r\nimport { AttributeInputType } from '../../../../../../edit-types/src/InputTypeName';\r\nimport { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { InputTypeHelpers } from '../../../shared/fields/input-type-helpers';\r\nimport { InputTypeMetadata } from '../../../shared/fields/input-type-metadata.model';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { EavContentTypeAttribute } from '../models/eav';\r\nimport { SignalStoreBase } from '../store/signal-store-base';\r\nimport { InputTypeSpecs } from './input-type-specs.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InputTypeService extends SignalStoreBase<string, InputTypeMetadata> {\r\n\r\n  constructor() {\r\n    super(classLog({InputTypeService}, null));\r\n  }\r\n\r\n  override getId = (item: InputTypeMetadata) => item.Type;\r\n\r\n  /**\r\n   * Get Name specs with a nice name and a longer name\r\n   * Note: ATM only used in the external connector, not sure why it's even here.\r\n   */\r\n  getAttributeInputTypes(attributes: EavContentTypeAttribute[]): AttributeInputType[] {\r\n    const inputTypes = this.getAll();\r\n    return attributes.map(attribute => {\r\n      const specs = this.getSpecsInternal(attribute, inputTypes);\r\n      return {\r\n        name: attribute.Name,\r\n        inputType: specs.inputType,\r\n      } satisfies AttributeInputType;\r\n    });\r\n  }\r\n\r\n  getSpecs(attribute: EavContentTypeAttribute): InputTypeSpecs {\r\n    return this.getSpecsInternal(attribute, this.getAll());\r\n  }\r\n\r\n  private getSpecsInternal(attribute: EavContentTypeAttribute, inputTypes: InputTypeMetadata[]): InputTypeSpecs {\r\n    const inputTypeMetadata = inputTypes.find(i => i.Type === attribute.InputType);\r\n    const inputType = attribute.InputType as Of<typeof InputTypeCatalog>;\r\n    const calculated: InputTypeSpecs = {\r\n      inputType,\r\n      isExternal: !!inputTypeMetadata?.AngularAssets,\r\n      isString: inputType.toString().startsWith('string'),\r\n      componentTagName: `field-${inputType}`,\r\n      componentTagDialogName: `field-${inputType}-dialog`,\r\n      metadata: inputTypeMetadata,\r\n      isNewPicker: InputTypeHelpers.isNewPicker(inputType),\r\n    };\r\n    return calculated;\r\n  }\r\n\r\n\r\n}\r\n","import { EavEntity, EavEntityAttributes } from '.';\r\nimport { Of } from '../../../../../../../core';\r\nimport { InputTypeCatalog } from '../../../../shared/fields/input-type-catalog';\r\nimport { EavContentTypeAttributesDto } from '../json-format-v1';\r\n\r\nexport class EavContentTypeAttribute {\r\n  InputType: Of<typeof InputTypeCatalog>;\r\n  IsTitle: boolean;\r\n  Metadata: EavEntity[];\r\n  Name: string;\r\n  Settings: EavEntityAttributes;\r\n  Type: string;\r\n\r\n  private static convertOne(ctAttributeDto: EavContentTypeAttributesDto): EavContentTypeAttribute {\r\n    const metadata = EavEntity.convertMany(ctAttributeDto.Metadata);\r\n    const settings = EavEntityAttributes.mergeSettings(metadata);\r\n\r\n    const attribute: EavContentTypeAttribute = {\r\n      InputType: ctAttributeDto.InputType,\r\n      IsTitle: ctAttributeDto.IsTitle,\r\n      Metadata: metadata,\r\n      Name: ctAttributeDto.Name,\r\n      Settings: settings,\r\n      Type: ctAttributeDto.Type,\r\n    };\r\n    return attribute;\r\n  }\r\n\r\n  static convertMany(ctAttributesDto: EavContentTypeAttributesDto[]): EavContentTypeAttribute[] {\r\n    if (ctAttributesDto == null) { return []; }\r\n\r\n    const attributes = ctAttributesDto.map(attribute1 => EavContentTypeAttribute.convertOne(attribute1));\r\n    return attributes;\r\n  }\r\n}\r\n","import { EavContentTypeAttribute, EavEntity, EavEntityAttributes } from '.';\r\nimport { EavContentTypeDto } from '../json-format-v1';\r\n\r\nexport class EavContentType {\r\n  Attributes: EavContentTypeAttribute[];\r\n  /** The NameId / Guid of this Content-Type */\r\n  Id: string;\r\n  Metadata: EavEntity[];\r\n  Name: string;\r\n  Scope: string;\r\n  Settings: EavEntityAttributes;\r\n\r\n  /** WIP v18.02 */\r\n  Title: string;\r\n\r\n  static convertOne(contentTypeDto: EavContentTypeDto): EavContentType {\r\n    const attributes = EavContentTypeAttribute.convertMany(contentTypeDto.Attributes);\r\n    const metadata = EavEntity.convertMany(contentTypeDto.Metadata);\r\n    const settings = EavEntityAttributes.mergeSettings(metadata);\r\n\r\n    const contentType: EavContentType = {\r\n      Attributes: attributes,\r\n      Id: contentTypeDto.Id,\r\n      Metadata: metadata,\r\n      Name: contentTypeDto.Name,\r\n      Scope: contentTypeDto.Scope,\r\n      Settings: settings,\r\n      Title: contentTypeDto.Title,\r\n    };\r\n    return contentType;\r\n  }\r\n\r\n  static convertMany(contentTypesDto: EavContentTypeDto[]): EavContentType[] {\r\n    if (contentTypesDto == null) { return null; }\r\n\r\n    const contentTypes = contentTypesDto.map(contentTypeDto => EavContentType.convertOne(contentTypeDto));\r\n    return contentTypes;\r\n  }\r\n}\r\n","export class EavDimension {\r\n  Value: string;\r\n\r\n  static create(value: string): EavDimension {\r\n    return { Value: value, } satisfies EavDimension;\r\n  }\r\n}\r\n","import { EavValue } from '.';\r\nimport { EavValuesDto } from '../json-format-v1';\r\n\r\nexport class EavField<T> {\r\n  Values: EavValue<T>[];\r\n  Type: string;\r\n\r\n  static convert<T>(valueDto: EavValuesDto<T>, type: string): EavField<T> {\r\n    const values = EavValue.convert(valueDto);\r\n    return {\r\n      Values: values,\r\n      Type: type,\r\n    } satisfies EavField<T>;\r\n  }\r\n}\r\n","import { EavEntity, EavField } from '.';\r\nimport { EavAttributesDto } from '../json-format-v1';\r\n\r\nexport class EavEntityAttributes {\r\n  [attributeName: string]: EavField<any>;\r\n\r\n  static convert(attributesDto: EavAttributesDto): EavEntityAttributes {\r\n    const attributes: EavEntityAttributes = {};\r\n\r\n    // loop attribute types - String, Boolean, ...\r\n    for (const [typeName, attributeDto] of Object.entries(attributesDto)) {\r\n      // loop attribute names - Description, Name, ...\r\n      for (const [attributeName, valueDto] of Object.entries(attributeDto)) {\r\n        attributes[attributeName] = EavField.convert(valueDto, typeName);\r\n      }\r\n    }\r\n    return attributes;\r\n  }\r\n\r\n  static mergeSettings(metadataItems: EavEntity[]): EavEntityAttributes {\r\n    if (metadataItems == null) { return {}; }\r\n\r\n    const merged: EavEntityAttributes = {};\r\n    // copy metadata settings which are not @All\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id === '@All') continue;\r\n\r\n      for (const [name, value] of Object.entries(item.Attributes)) {\r\n        const copy: EavField<any> = { ...value };\r\n        merged[name] = copy;\r\n      }\r\n    }\r\n\r\n    // copy @All metadata settings, overwriting previous settings\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id !== '@All') continue;\r\n\r\n      for (const [name, value] of Object.entries(item.Attributes)) {\r\n        // do not overwrite previous settings if @All is empty\r\n        const exists = merged[name] != null;\r\n        const emptyAll = value.Values[0].Value === '';\r\n        if (exists && emptyAll) continue;\r\n\r\n        const copy: EavField<any> = { ...value };\r\n        merged[name] = copy;\r\n      }\r\n    }\r\n    return merged;\r\n  }\r\n}\r\n","import { EavEntityAttributes, EavFor, EavType } from '.';\r\nimport { EavEntityDto } from '../json-format-v1';\r\n\r\nexport class EavEntity {\r\n  Attributes: EavEntityAttributes;\r\n  Guid: string;\r\n  Id: number;\r\n  Owner: string;\r\n  Type: EavType;\r\n  Version: number;\r\n  For?: EavFor;\r\n  Metadata?: EavEntity[];\r\n\r\n  static convertOne(entityDto: EavEntityDto): EavEntity {\r\n    const attributes = EavEntityAttributes.convert(entityDto.Attributes);\r\n    const metadata = this.convertMany(entityDto.Metadata);\r\n\r\n    const entity: EavEntity = {\r\n      Attributes: attributes,\r\n      Guid: entityDto.Guid,\r\n      Id: entityDto.Id,\r\n      Owner: entityDto.Owner,\r\n      Type: entityDto.Type,\r\n      Version: entityDto.Version,\r\n      For: entityDto.For,\r\n      Metadata: metadata,\r\n    };\r\n    return entity;\r\n  }\r\n\r\n  static convertMany(entitiesDto: EavEntityDto[]): EavEntity[] {\r\n    if (entitiesDto == null) { return null; }\r\n\r\n    const entities = entitiesDto.map(entityDto => EavEntity.convertOne(entityDto));\r\n    return entities;\r\n  }\r\n}\r\n","import { EavEntity } from '.';\r\nimport { EavEntityBundleDto } from '../json-format-v1';\r\nimport { ItemIdentifierHeader } from '../../../../shared/models/edit-form.model';\r\n\r\nexport class EavItem {\r\n  Entity: EavEntity;\r\n  Header: ItemIdentifierHeader;\r\n\r\n  static convert(entityBundleDto: EavEntityBundleDto): EavItem {\r\n    const entity = EavEntity.convertOne(entityBundleDto.Entity);\r\n\r\n    const item: EavItem = {\r\n      Entity: entity,\r\n      Header: entityBundleDto.Header,\r\n    };\r\n    return item;\r\n  }\r\n}\r\n","import { EavDimension } from '.';\r\nimport { EavValuesDto } from '../json-format-v1';\r\n\r\nexport class EavValue<T> {\r\n  Value: T;\r\n  Dimensions: EavDimension[];\r\n\r\n  static create<T>(value: T, dimensions: EavDimension[]): EavValue<T> {\r\n    const eavValue: EavValue<T> = {\r\n      Value: value,\r\n      Dimensions: dimensions,\r\n    };\r\n    return eavValue;\r\n  }\r\n\r\n  static convert<T>(valuesDto: EavValuesDto<T>): EavValue<T>[] {\r\n    const values = Object.entries(valuesDto).map(([langs, value]) => {\r\n      const dimensions = langs.split(',').map(lang => EavDimension.create(lang));\r\n      return this.create(value, dimensions);\r\n    });\r\n    return values;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy, Signal } from '@angular/core';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Of } from '../../../../../../core';\r\n\r\n/**\r\n * Logging service - ATM not really used, but would be great\r\n * to show logs in the debug-panel.\r\n * So don't delete - reconsider how to use.\r\n */\r\n@Injectable()\r\nexport class LoggingService implements OnDestroy {\r\n  private logs$ = new BehaviorSubject<LogEntry[]>([]);\r\n  private logLimit = 50;\r\n  private lastSnackBarTime = 0;\r\n  private snackBarDebounce = 10000;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.logs$.complete();\r\n  }\r\n\r\n  addLog(severity: Of<typeof LogSeverities>, label: string, error: any): void {\r\n    const newLogEntry: LogEntry = {\r\n      error,\r\n      label,\r\n      severity,\r\n      time: Date.now(),\r\n    };\r\n    const oldLogs = this.logs$.value;\r\n    const newLogs = [newLogEntry, ...oldLogs.slice(0, this.logLimit - 2)];\r\n    this.logs$.next(newLogs);\r\n  }\r\n\r\n  /** Show snackBar to the user. By default snackBars have debounce timer, but you can force snackBar to show instantly */\r\n  showMessage(message: string, duration: number, force?: boolean): void {\r\n    const nowTime = Date.now();\r\n    if (!force && (nowTime - this.lastSnackBarTime) <= this.snackBarDebounce) {\r\n      return;\r\n    }\r\n\r\n    if (duration != null && duration > 0) {\r\n      this.snackBar.open(message, null, { duration });\r\n    } else {\r\n      this.snackBar.open(message);\r\n    }\r\n    this.lastSnackBarTime = nowTime;\r\n  }\r\n\r\n  getLogs$(): Observable<LogEntry[]> {\r\n    return this.logs$.asObservable();\r\n  }\r\n\r\n  getLogsSignal(): Signal<LogEntry[]> {\r\n    return toSignal(this.logs$);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface LogEntry {\r\n  error: any;\r\n  label: string;\r\n  severity: Of<typeof LogSeverities>;\r\n  time: number;\r\n}\r\n\r\nexport const LogSeverities = {\r\n  Error: 'error',\r\n  Log: 'log',\r\n  Warn: 'warn',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { EmptyDefault } from 'projects/edit-types/src/FieldSettings-EmptyDefault';\r\nimport { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { InputTypeHelpers } from '../../shared/fields/input-type-helpers';\r\nimport { classLog } from '../../shared/logging';\r\nimport { DebugFields } from '../edit-debug';\r\nimport { FieldLogicManager } from '../fields/logic/field-logic-manager';\r\nimport { TranslateMenuHelpers } from '../fields/wrappers/localization/translate-menu/translate-menu.helpers';\r\nimport { FormLanguage } from '../form/form-languages.model';\r\nimport { FieldReader } from '../localization/field-reader';\r\nimport { TranslationState, TranslationStateCore } from '../localization/translate-state.model';\r\nimport { TranslationLinks } from '../localization/translation-link.constants';\r\nimport { EavContentType, EavContentTypeAttribute, EavField } from '../shared/models/eav';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  mergeGenericSettings: true,\r\n  getDefaultSettings: false,\r\n  fields: [...DebugFields, 'GroupPreview'],\r\n};\r\n\r\n/**\r\n * Helper to figure out / initialize field settings.\r\n * \r\n * It is, and must be, stateless.\r\n */\r\nexport class FieldsSettingsHelpers {\r\n\r\n  // TODO: conditionally create logger based on source name\r\n  log = classLog({FieldsSettingsHelpers}, logSpecs);\r\n\r\n  constructor(source: string) { }\r\n\r\n  /**\r\n   * Special feature in 18.02\r\n   * Generic settings are metadata which contain a JSON to basically set anything for which there is no Content-Type metadata.\r\n   * @param settings \r\n   * @param genericSettings \r\n   */\r\n  mergeGenericSettings(fieldName: string, settings: FieldSettings): FieldSettings {\r\n    const l = this.log.fnIfInList('mergeGenericSettings', 'fields', fieldName, { fieldName, settings });\r\n    const asWithGenericSettings = settings as unknown as { SettingsGeneric: string };\r\n    if (asWithGenericSettings.SettingsGeneric == null)\r\n      return l.r(settings, 'No generic settings');\r\n\r\n    try {\r\n      const genericSettings = JSON.parse(asWithGenericSettings.SettingsGeneric);\r\n      return l.r({ ...settings, ...genericSettings }, 'Merged generic settings');\r\n    } catch (error) {\r\n      console.error('mergeGenericSettings', error);\r\n      return l.r(settings, 'Error parsing generic settings');\r\n    }\r\n  }\r\n\r\n  getDefaultSettings(settings: FieldSettings): FieldSettings {\r\n    const defSettings = AllDeprecated.moveDeprecatedSettings({ ...settings }) as FieldSettings & EmptyDefault;\r\n    // update @All settings\r\n    defSettings.Name ??= '';\r\n    defSettings.Placeholder ??= '';\r\n    defSettings.Notes ??= '';\r\n    defSettings.Required ??= false;\r\n    defSettings.Disabled ??= false;\r\n    defSettings.DisableTranslation ??= false;\r\n    defSettings.Visible ??= true;\r\n    if (defSettings.DefaultCollapsed != null) {\r\n      defSettings.Collapsed = defSettings.DefaultCollapsed;\r\n      delete defSettings.DefaultCollapsed;\r\n    }\r\n    defSettings.Formulas ??= [];\r\n    let logic = FieldLogicManager.singleton().get(settings.InputType);\r\n    defSettings.DisableAutoTranslation ??= !logic?.canAutoTranslate;\r\n    return defSettings;\r\n  }\r\n\r\n  isLastInGroup(contentType: EavContentType, attribute: EavContentTypeAttribute): boolean {\r\n    const index = contentType.Attributes.indexOf(attribute);\r\n    if (contentType.Attributes[index + 1] == null) return true;\r\n\r\n    const indexOfFirstEmpty = contentType.Attributes.findIndex(a => InputTypeHelpers.isGroupStart(a.InputType));\r\n    if (index < indexOfFirstEmpty) return false;\r\n\r\n    if (InputTypeHelpers.isGroupEnd(attribute.InputType)) return true;\r\n\r\n    if (InputTypeHelpers.endsPreviousGroup(contentType.Attributes[index + 1].InputType)) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  getDisabledBecauseTranslations(\r\n    attributeValues: EavField<any>,\r\n    disableTranslation: boolean,\r\n    language: FormLanguage\r\n  ): boolean {\r\n    const fieldReader = new FieldReader(attributeValues, language);\r\n    if (language.current === language.primary) return false;\r\n    if (!fieldReader.hasPrimary) return true;\r\n    if (disableTranslation) return true;\r\n    if (fieldReader.hasEditableValues) return false;\r\n    if (fieldReader.hasCurrentReadonly) return true;\r\n    return true;\r\n  }\r\n\r\n  getTranslationState(attributeValues: EavField<any>, disableTranslation: boolean, language: FormLanguage, debug: boolean): TranslationState {\r\n    if (debug)\r\n      this.log.fn('getTranslationState', { attributeValues, disableTranslation, language });\r\n\r\n    let infoLabel: string;\r\n    let infoMessage: string;\r\n\r\n    const fieldReader = new FieldReader(attributeValues, language);\r\n\r\n    if (disableTranslation) {\r\n      infoLabel = 'LangMenu.InAllLanguages';\r\n      infoMessage = '';\r\n    } else if (!fieldReader.hasPrimary) {\r\n      infoLabel = 'LangMenu.MissingDefaultLangValue';\r\n      infoMessage = language.primary;\r\n    } else {\r\n      const hasEditable = fieldReader.hasEditableValues;\r\n      const hasReadonly = fieldReader.hasCurrentReadonly;\r\n\r\n      if (hasEditable || hasReadonly) {\r\n        const dimensions = fieldReader.current\r\n          .Dimensions.map(dimension => dimension.Value)\r\n          .filter(dimension => !dimension.includes(language.current));\r\n\r\n        const isShared = dimensions.length > 0;\r\n        if (isShared) {\r\n          if (hasEditable)\r\n            infoLabel = 'LangMenu.In';\r\n          else if (hasReadonly)\r\n            infoLabel = 'LangMenu.From';\r\n\r\n          infoMessage = TranslateMenuHelpers.calculateSharedInfoMessage(dimensions, language.current);\r\n        } else {\r\n          infoLabel = '';\r\n          infoMessage = '';\r\n        }\r\n      } else {\r\n        infoLabel = 'LangMenu.UseDefault';\r\n        infoMessage = '';\r\n      }\r\n    }\r\n    const state = this.#getTranslationStateCore(attributeValues, disableTranslation, language);\r\n    const translationState: TranslationState = {\r\n      infoLabel,\r\n      infoMessage,\r\n      language: state.language,\r\n      linkType: state.linkType,\r\n    };\r\n    return translationState;\r\n  }\r\n\r\n  #getTranslationStateCore(\r\n    attributeValues: EavField<any>,\r\n    disableTranslation: boolean,\r\n    language: FormLanguage\r\n  ): TranslationStateCore {\r\n    const fieldReader = new FieldReader(attributeValues, language);\r\n    // Determine is control disabled or enabled and info message\r\n    if (!fieldReader.hasPrimary)\r\n      return { language: '', linkType: TranslationLinks.MissingDefaultLangValue };\r\n\r\n    if (disableTranslation)\r\n      return { language: '', linkType: TranslationLinks.DontTranslate };\r\n\r\n    if (fieldReader.hasEditableValues) {\r\n      const editableElements = fieldReader.current\r\n        .Dimensions.filter(d => d.Value !== language.current);\r\n\r\n      return (editableElements.length > 0)\r\n        ? { language: editableElements[0].Value, linkType: TranslationLinks.LinkReadWrite }\r\n        : { language: '', linkType: TranslationLinks.Translate };\r\n    }\r\n\r\n    if (fieldReader.hasCurrentReadonly) {\r\n      const readOnlyElements = fieldReader.current\r\n        .Dimensions.filter(d => d.Value !== language.current);\r\n\r\n      return { language: readOnlyElements[0].Value, linkType: TranslationLinks.LinkReadOnly, };\r\n    }\r\n\r\n    return { language: '', linkType: TranslationLinks.DontTranslate, };\r\n  }\r\n}\r\nclass AllDeprecated {\r\n  /** @deprecated */\r\n  VisibleInEditUI: boolean;\r\n  /** VisibleInEditUi is copied Visible and then deleted */\r\n  static moveDeprecatedSettings(settings: FieldSettings): FieldSettings {\r\n    var asDeprecated = settings as unknown as AllDeprecated;\r\n    if (asDeprecated.VisibleInEditUI == null) return settings;\r\n    settings.Visible = asDeprecated.VisibleInEditUI;\r\n    delete asDeprecated.VisibleInEditUI;\r\n    return settings;\r\n  }\r\n}\r\n","import { FormLanguage } from '../form/form-languages.model';\r\nimport { EavDimension } from '../shared/models/eav/eav-dimension';\r\nimport { EavEntityAttributes } from '../shared/models/eav/eav-entity-attributes';\r\nimport { EavValue } from '../shared/models/eav/eav-value';\r\nimport { EavField } from '../shared/models/eav/eav-values';\r\nimport { ItemValuesOfLanguage } from '../state/item-values-of-language.model';\r\nimport { FieldReader } from './field-reader';\r\nimport { DimensionReader } from './dimension-reader';\r\nimport { FieldValue } from '../../../../../edit-types/src/FieldValue';\r\nimport { classLog } from '../../shared/logging';\r\n\r\nexport class FieldWriter {\r\n\r\n  log = classLog({FieldWriter});\r\n\r\n  /** Copy attributes from item */\r\n  #updateAttribute(\r\n    oldAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    attribute: EavField<any>,\r\n  ): EavEntityAttributes {\r\n    const newAttributes: EavEntityAttributes = {};\r\n    if (Object.keys(oldAttributes).length === 0) {\r\n      const attributeCopy: EavField<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n      return newAttributes;\r\n    }\r\n\r\n    for (const key of Object.keys(oldAttributes)) {\r\n      if (key === attributeKey) {\r\n        const attributeCopy: EavField<any> = { ...attribute };\r\n        newAttributes[key] = attributeCopy;\r\n      } else {\r\n        const attributeCopy: EavField<any> = { ...oldAttributes[key] };\r\n        newAttributes[key] = attributeCopy;\r\n      }\r\n    }\r\n\r\n    if (oldAttributes[attributeKey] == null) {\r\n      const attributeCopy: EavField<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n    }\r\n    return newAttributes;\r\n  }\r\n\r\n  /** Update values for languageKey */\r\n  updateAttributesValues(\r\n    allFields: EavEntityAttributes,\r\n    updateValues: ItemValuesOfLanguage,\r\n    language: FormLanguage,\r\n  ): EavEntityAttributes {\r\n    const l = this.log.fn('updateAttributesValues', { allFields, updateValues, language });\r\n    // copy attributes from item\r\n    const eavAttributes: EavEntityAttributes = {};\r\n    Object.keys(allFields).forEach(attributeKey => {\r\n      const newItemValue = updateValues[attributeKey];\r\n      // if new value exist update attribute for languageKey   \r\n      // it's important to check for undefined, because empty string and sometimes null (bool-tristate) are valid values\r\n      if (newItemValue !== undefined) {\r\n        const fr = new FieldReader(allFields[attributeKey], language);\r\n        const valueWithLanguageExist = fr.isEditableOrReadonlyTranslationExist();\r\n\r\n        // if valueWithLanguageExist update value for languageKey\r\n        if (valueWithLanguageExist) {\r\n          const newValues: EavField<any> = {\r\n            ...allFields[attributeKey],\r\n            Values: allFields[attributeKey].Values.map(val => {\r\n              const hasLanguage = new DimensionReader(val.Dimensions, language).hasCurrent;\r\n              const newValue: EavValue<any> = hasLanguage\r\n                // Update value for languageKey\r\n                ? {\r\n                    ...val,\r\n                    Value: newItemValue,\r\n                  }\r\n                  : val;\r\n              return newValue;\r\n            })\r\n          };\r\n          eavAttributes[attributeKey] = newValues;\r\n        } else { // else add new value with dimension languageKey\r\n          l.a('saveAttributeValues add values ', { newItemValue });\r\n          const newEavValue = EavValue.create(newItemValue, [EavDimension.create(language.current)]);\r\n          eavAttributes[attributeKey] = {\r\n            ...allFields[attributeKey],\r\n            Values: [...allFields[attributeKey].Values, newEavValue]\r\n          } satisfies EavField<any>;\r\n        }\r\n      } else { // else copy item attributes\r\n        eavAttributes[attributeKey] = { ...allFields[attributeKey] };\r\n      }\r\n    });\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** update attribute value, and change language readonly state if needed */\r\n  updateAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    updateValue: FieldValue,\r\n    language: FormLanguage,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = language.current;\r\n\r\n    if (isReadOnly)\r\n      newLanguageValue = `~${language.current}`;\r\n\r\n    const attribute: EavField<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(val => {\r\n        const hasLanguage = new DimensionReader(val.Dimensions, language).hasCurrent;\r\n        const newValue: EavValue<any> = hasLanguage\r\n          // Update value and dimension\r\n          ? {\r\n            ...val,\r\n            // update value\r\n            Value: updateValue,\r\n            // update languageKey with newLanguageValue\r\n            Dimensions: val.Dimensions.map(d => {\r\n              const dimensionIsForLanguage = (d.Value === language.current\r\n                || d.Value === `~${language.current}`\r\n                || (language.current === language.primary && d.Value === '*'));\r\n              return dimensionIsForLanguage\r\n                ? { Value: newLanguageValue } satisfies EavDimension\r\n                : d;\r\n            })\r\n          }\r\n          : val;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.#updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  addAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeValue: EavValue<any>,\r\n    attributeKey: string,\r\n    attributeType: string,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    const attribute: EavField<any> =\r\n      Object.keys(allAttributes).length === 0 || !allAttributes[attributeKey]\r\n        ? {\r\n          ...allAttributes[attributeKey],\r\n          Values: [attributeValue],\r\n          Type: attributeType\r\n        }\r\n        : {\r\n          ...allAttributes[attributeKey],\r\n          Values: [...allAttributes[attributeKey].Values, attributeValue],\r\n          Type: attributeType\r\n        };\r\n    eavAttributes = this.#updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Add dimension to value with existing dimension */\r\n  addAttributeDimension(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    newDimensionValue: string,\r\n    existingDimensionValue: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = newDimensionValue;\r\n\r\n    if (isReadOnly) {\r\n      newLanguageValue = `~${newDimensionValue}`;\r\n    }\r\n\r\n    const attribute: EavField<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(eavValue => {\r\n        const newValue: EavValue<any> = eavValue.Dimensions.find(d => d.Value === existingDimensionValue\r\n          || (existingDimensionValue === defaultLanguage && d.Value === '*'))\r\n          // Update dimension for current language\r\n          ? {\r\n            ...eavValue,\r\n            // if languageKey already exist\r\n            Dimensions: eavValue.Dimensions.concat({ Value: newLanguageValue })\r\n          }\r\n          : eavValue;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.#updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Removes dimension (language) from attribute. If multiple dimensions exist, delete only dimension, else delete value and dimension */\r\n  removeAttributeDimension(attributes: EavEntityAttributes, attributeKey: string, language: string): EavEntityAttributes {\r\n    const oldAttributes = attributes;\r\n    const validDimensions = [language, `~${language}`];\r\n\r\n    const value = oldAttributes[attributeKey].Values.find(eavValue => {\r\n      const dimensionExists = eavValue.Dimensions.some(d => validDimensions.includes(d.Value));\r\n      return dimensionExists;\r\n    });\r\n\r\n    // given dimension doesn't exist for this attribute so no change is needed\r\n    if (!value) {\r\n      const attributesCopy: EavEntityAttributes = { ...oldAttributes };\r\n      return attributesCopy;\r\n    }\r\n\r\n    let newAttribute: EavField<any>;\r\n    if (value.Dimensions.length > 1) {\r\n      // if multiple dimensions exist delete only dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.map(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(d => validDimensions.includes(d.Value));\r\n          return (!dimensionExists)\r\n            ? eavValue\r\n            : {\r\n                ...eavValue,\r\n                Dimensions: eavValue.Dimensions.filter(d => !validDimensions.includes(d.Value)),\r\n              } satisfies EavValue<any>;\r\n        })\r\n      };\r\n    } else if (value.Dimensions.length === 1) {\r\n      // if only one dimension exists delete value and dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.filter(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(d => validDimensions.includes(d.Value));\r\n          return !dimensionExists;\r\n        })\r\n      };\r\n    }\r\n\r\n    const newAttributes = this.#updateAttribute(oldAttributes, attributeKey, newAttribute);\r\n    return newAttributes;\r\n  }\r\n\r\n}","import { FieldSettings } from '../../../../../edit-types/src/FieldSettings';\r\nimport { FieldValue } from '../../../../../edit-types/src/FieldValue';\r\nimport { InputTypeMetadata } from '../../shared/fields/input-type-metadata.model';\r\nimport { classLog } from '../../shared/logging';\r\nimport { ItemEditIdentifier, ItemIdentifierHeader } from '../../shared/models/edit-form.model';\r\nimport { FormLanguage, Language } from '../form/form-languages.model';\r\nimport { FieldReader } from '../localization/field-reader';\r\nimport { FieldWriter } from '../localization/field-writer';\r\nimport { EntityReader, FieldDefaults } from '../shared/helpers';\r\nimport { FieldValueHelpers } from '../shared/helpers/field-value.helpers';\r\nimport { EavContentTypeAttribute, EavDimension, EavEntity, EavItem, EavValue } from '../shared/models/eav';\r\nimport { ItemValuesOfLanguage } from './item-values-of-language.model';\r\nimport { ItemService } from './item.service';\r\nimport { SaveResult } from './save-result.model';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  updateItemId: false,\r\n  updateItemHeader: false,\r\n  addItemAttributeValue: false,\r\n  updateItemAttributeValue: false,\r\n  setDefaultValue: false,\r\n  updateItemAttributesValues: false,\r\n  addItemAttributeDimension: false,\r\n  removeItemAttributeDimension: false,\r\n  updateItemMetadata: false,\r\n};\r\n\r\nexport class ItemUpdateHelper {\r\n\r\n  log = classLog({ItemUpdateHelper}, logSpecs);\r\n  \r\n  constructor(private itemSvc: ItemService) { }\r\n\r\n  updateItemId(saveResult: SaveResult): void {\r\n    const l = this.log.fnIf('updateItemId', { saveResult });\r\n    const entityGuid = Object.keys(saveResult)[0];\r\n    const entityId = saveResult[entityGuid];\r\n    const oldItem = this.itemSvc.get(entityGuid);\r\n    if (!oldItem || ((oldItem.Header as ItemEditIdentifier).EntityId !== 0 && oldItem.Entity.Id !== 0))\r\n      return;\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Header: {\r\n        ...oldItem.Header,\r\n        EntityId: entityId,\r\n      },\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Id: entityId,\r\n      }\r\n    };\r\n    this.itemSvc.add(newItem);\r\n  }\r\n\r\n\r\n  /** Update parts of the header; ATM just to tell us about the slot being empty */\r\n  updateItemHeader(entityGuid: string, header: ItemIdentifierHeader): void {\r\n    const l = this.log.fnIf('updateItemHeader', { entityGuid, header });\r\n    const oldItem = this.itemSvc.get(entityGuid);\r\n    if (!oldItem) return;\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Header: {\r\n        ...header\r\n      }\r\n    };\r\n    this.itemSvc.add(newItem);\r\n    l.end();\r\n  }\r\n\r\n  //#region Item Attribute - Single Value\r\n\r\n  addItemAttributeValue(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    newValue: FieldValue,\r\n    currentLanguage: string,\r\n    isReadOnly: boolean,\r\n    attributeType: string,\r\n    isTransaction = false,\r\n    transactionItem?: EavItem,\r\n  ): EavItem {\r\n    const l = this.log.fnIf('addItemAttributeValue', { entityGuid, attributeKey, newValue, currentLanguage, isReadOnly, attributeType, isTransaction, transactionItem });\r\n    const newValueDimension = isReadOnly ? `~${currentLanguage}` : currentLanguage;\r\n    const newEavValue = EavValue.create(newValue, [EavDimension.create(newValueDimension)]);\r\n    const oldItem = transactionItem ?? this.itemSvc.get(entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: new FieldWriter().addAttributeValue(oldItem.Entity.Attributes, newEavValue, attributeKey, attributeType),\r\n      }\r\n    };\r\n\r\n    // if we're in a transaction, then save/update will happen later on, so don't trigger state changes yet\r\n    if (!isTransaction) \r\n      this.itemSvc.add(newItem);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  updateItemAttributeValue(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    newValue: FieldValue,\r\n    language: FormLanguage,\r\n    isReadOnly: boolean,\r\n  ): void {\r\n    const l = this.log.fnIf('updateItemAttributeValue', { entityGuid, attributeKey, newValue, language, isReadOnly });\r\n    const oldItem = this.itemSvc.get(entityGuid);\r\n    if (!oldItem) return;\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: new FieldWriter().updateAttributeValue(\r\n          oldItem.Entity.Attributes, attributeKey, newValue, language, isReadOnly,\r\n        ),\r\n      }\r\n    };\r\n    this.itemSvc.add(newItem);\r\n  }\r\n\r\n  setDefaultValue(\r\n    item: EavItem,\r\n    ctAttribute: EavContentTypeAttribute,\r\n    inputType: InputTypeMetadata,\r\n    settings: FieldSettings,\r\n    languages: Language[],\r\n    defaultLanguage: string,\r\n  ): FieldValue {\r\n    const l = this.log.fnIf('setDefaultValue', { item, ctAttribute, inputType, settings, languages, defaultLanguage }, `Name: ${ctAttribute.Name}`);\r\n    const defaultValue = new FieldDefaults(ctAttribute.Name, inputType?.Type, settings, item.Header).getDefaultOrPrefillValue();\r\n\r\n    // const defaultLanguageValue = LocalizationHelpers.getBestValue(\r\n    //   item.Entity.Attributes[ctAttribute.Name],\r\n    //   defaultLanguage,\r\n    //   // defaultLanguage,\r\n    //   BestValueModes.Strict,\r\n    // );\r\n    const defaultLanguageValue = new FieldReader(item.Entity.Attributes[ctAttribute.Name], defaultLanguage).currentOrDefault?.Value;\r\n\r\n    // 2023-08-31 2dm simplified; leave comments in till EOY in case I broke something\r\n    const languageCode = (languages.length === 0 || inputType?.DisableI18n) ? '*' : defaultLanguage;\r\n    if (defaultLanguageValue === undefined) {\r\n      this.addItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, languageCode, false, ctAttribute.Type);\r\n    } else {\r\n      // most likely used only for entity fields because we can never know if they were cleaned out or brand new\r\n      this.updateItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, { current: languageCode, primary: defaultLanguage }, false);\r\n    }\r\n\r\n    // return what was used, so it can be checked on form-init\r\n    return l.r(defaultValue);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Item Attribute - Multi Value\r\n\r\n  updateItemAttributesValues(entityGuid: string, newValues: ItemValuesOfLanguage, language: FormLanguage): void {\r\n    const l = this.log.fnIf('updateItemAttributesValues', { entityGuid, newValues, language });\r\n    const oldItem = this.itemSvc.get(entityGuid);\r\n    if (!oldItem) return l.end('Item not found');\r\n\r\n    const reader = new EntityReader(language);\r\n    const oldValues: ItemValuesOfLanguage = {};\r\n    const relevantValues = Object.entries(oldItem.Entity.Attributes)\r\n      .filter(([name]) => newValues.hasOwnProperty(name));\r\n    for (const [name, values] of relevantValues)\r\n      oldValues[name] = reader.getBestValue(values);\r\n\r\n    const changes = FieldValueHelpers.getItemValuesChanges(oldValues, newValues);\r\n    if (changes == null)\r\n      return l.end('No changes');\r\n\r\n    const newAttributes = new FieldWriter().updateAttributesValues(oldItem.Entity.Attributes, changes, language);\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: newAttributes,\r\n      }\r\n    };\r\n    this.itemSvc.add(newItem);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Item Value Dimensions\r\n\r\n  /**\r\n   * Update entity attribute dimension. Add readonly languageKey to existing useFromLanguageKey.\r\n   * Example to useFrom en-us add fr-fr = \"en-us,-fr-fr\"\r\n   */\r\n  addItemAttributeDimension(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    currentLanguage: string,\r\n    shareWithLanguage: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n    transactionItem?: EavItem,\r\n  ): void {\r\n    const l = this.log.fnIf('addItemAttributeDimension', { entityGuid, attributeKey, currentLanguage, shareWithLanguage, defaultLanguage, isReadOnly, transactionItem });\r\n    const oldItem = transactionItem ?? this.itemSvc.get(entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: new FieldWriter().addAttributeDimension(\r\n          oldItem.Entity.Attributes, attributeKey, currentLanguage, shareWithLanguage, defaultLanguage, isReadOnly,\r\n        ),\r\n      }\r\n    };\r\n    this.itemSvc.add(newItem);\r\n  }\r\n\r\n  // TODO:: Old Code, remove after testing ist done\r\n  removeItemAttributeDimension(\r\n    entityGuid: string,\r\n    fieldName: string,\r\n    current: string,\r\n    delayUpsert = false,\r\n    transactionItem?: EavItem,\r\n  ): EavItem {\r\n    const l = this.log.fnIf('removeItemAttributeDimension', { entityGuid, attributeKey: fieldName, currentLanguage: current, isTransaction: delayUpsert, transactionItem });\r\n    const oldItem = transactionItem ?? this.itemSvc.get(entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: new FieldWriter().removeAttributeDimension(oldItem.Entity.Attributes, fieldName, current),\r\n      }\r\n    };\r\n\r\n    if (!delayUpsert)\r\n      this.itemSvc.add(newItem);\r\n    return l.r(newItem);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Metadata\r\n\r\n  updateItemMetadata(entityGuid: string, metadata: EavEntity[]): void {\r\n    const l = this.log.fnIf('updateItemMetadata', { entityGuid, metadata });\r\n    const oldItem = this.itemSvc.get(entityGuid);\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Metadata: metadata,\r\n      }\r\n    };\r\n    this.itemSvc.add(newItem);\r\n    l.end('ok', { newItem });\r\n  }\r\n\r\n  //#endregion\r\n\r\n}","import { Injectable, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { EavEntity, EavFor, EavItem } from '../shared/models/eav';\r\nimport { EavEntityBundleDto } from '../shared/models/json-format-v1';\r\nimport { ItemIdentifierHeader } from '../../shared/models/edit-form.model';\r\nimport { mapUntilChanged, mapUntilObjChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { ItemUpdateHelper } from './item-updater.helper';\r\nimport { ComputedCacheHelper } from '../../shared/signals/computed-cache';\r\nimport { EavEntityAttributes } from '../shared/models/eav/eav-entity-attributes';\r\nimport { SignalStoreObservableBase } from '../shared/store/signal-store-observable-base';\r\nimport { classLog } from '../../shared/logging';\r\n\r\n/**\r\n * This class provides access to the items / entities cache which are being edited in the UI.\r\n * \r\n * It's undergoing a lot of refactoring to get rid of observables, so ATM it's a bit confusing.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItemService extends SignalStoreObservableBase<string, EavItem> {\r\n\r\n  constructor() {\r\n    super(classLog({ItemService}));\r\n  }\r\n\r\n  override getId = (item: EavItem) => item.Entity.Guid;\r\n\r\n  public updater = new ItemUpdateHelper(this);\r\n\r\n  //#region Loaders and Updaters\r\n\r\n  loadItems(dtoItems: EavEntityBundleDto[]): void {\r\n    const items = dtoItems.map(item => EavItem.convert(item));\r\n    this.addMany(items);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Item Attributes\r\n\r\n  itemAttributesSignal(entityGuid: string): Signal<EavEntityAttributes> {\r\n    const l = this.log.fn('itemAttributes', { entityGuid });\r\n    const result = this.#itemAttributesCache.getOrCreate(entityGuid, () => this.getSignal(entityGuid)()?.Entity.Attributes);\r\n    return l.r(result);\r\n  }\r\n  #itemAttributesCache = new ComputedCacheHelper<string, EavEntityAttributes>('itemAttributes');\r\n\r\n  getItemAttributes(entityGuid: string): EavEntityAttributes {\r\n    const l = this.log.fn('getItemAttributes', { entityGuid });\r\n    const result = this.get(entityGuid)?.Entity.Attributes;\r\n    return l.r(result);\r\n  }\r\n\r\n  getItemAttributes$(entityGuid: string): Observable<EavEntityAttributes> {\r\n    return this.list$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)?.Entity.Attributes),\r\n      mapUntilChanged(m => m),\r\n    );\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Item Headers\r\n\r\n  getItemHeader(entityGuid: string): ItemIdentifierHeader {\r\n    return this.get(entityGuid)?.Header;\r\n  };\r\n\r\n  getItemHeader$(entityGuid: string): Observable<ItemIdentifierHeader> {\r\n    return this.list$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)?.Header),\r\n      mapUntilObjChanged(m => m),\r\n    );\r\n  }\r\n\r\n  getItemHeaderSignal(entityGuid: string): Signal<ItemIdentifierHeader> {\r\n    return this.#itemHeaderCache.getOrCreate(entityGuid, () => this.getSignal(entityGuid)()?.Header);\r\n  }\r\n  #itemHeaderCache = new ComputedCacheHelper<string, ItemIdentifierHeader>('itemHeader');\r\n\r\n  //#endregion\r\n\r\n  //#region Item Header Properties\r\n\r\n  slotIsEmpty(entityGuid: string): Signal<boolean> {\r\n    return this.#slotIsEmptyCache.getOrCreate(entityGuid, () => {\r\n      const header = this.getSignal(entityGuid)()?.Header;\r\n      return header == null ? true : header.IsEmptyAllowed && header.IsEmpty;\r\n    });\r\n  }\r\n  #slotIsEmptyCache = new ComputedCacheHelper<string, boolean>('slotIsEmpty');\r\n\r\n  //#endregion\r\n\r\n  //#region Item Metadata & For (Metadata Target)\r\n\r\n  /** Sync get-item-for info to show metadata-target info on an entity in the UI */\r\n  getItemFor(entityGuid: string): EavFor {\r\n    return this.get(entityGuid)?.Entity.For;\r\n  }\r\n\r\n\r\n  getItemNote(entityGuid: string): EavEntity | undefined {\r\n    return this.get(entityGuid)?.Entity.Metadata\r\n      ?.find(metadata => metadata.Type.Name === eavConstants.contentTypes.notes);\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * A newer base component, without Log being created / requested.\r\n * This is so it's easier to inherit than the BaseComponent,\r\n * which would make typed log with specs harder to implement.\r\n * \r\n * Note that as with time, we wish to get away from these, as we don't want to use many observables any more.\r\n */\r\n@Component({\r\n  selector: 'app-base-component',\r\n  template: ''\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseComponent implements OnDestroy {\r\n  \r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseDirective implements OnDestroy {\r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml', standalone: true })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { EntityLightIdentifier } from '../../../../../edit-types/src/EntityLight';\r\nimport { classLog } from '../logging';\r\nimport { HttpServiceBase } from './http-service-base';\r\nimport { QueryService } from './query.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getEntities: false,\r\n  getAvailableEntities: false,\r\n  delete: false,\r\n};\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService extends HttpServiceBase {\r\n\r\n  log = classLog({ EntityService }, logSpecs);\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityLightIdentifier[]> {\r\n    this.log.fnIf('getEntities');\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityLightIdentifier[]> {\r\n    var log = this.log.fnIf('getAvailableEntities');\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(appId: number, contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    this.log.fnIf('delete', { appId, contentType, entityId, force, parentId, parent });\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\nimport { Context } from './context';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getAvailableEntities: false,\r\n  getEntities: false,\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = classLog({QueryService}, logSpecs);\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getFromQuery(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { languageLabels, languageUi } from '../constants/session.constants';\r\nimport { StateManagerLocal } from '../user/state-manager';\r\n\r\nconst storeKey = 'user-language';\r\n\r\n@Injectable({ providedIn: 'root' }) // TODO: MAYBE don't use root. probably get with transient - 2dm must review this before we finalize\r\nexport class UserLanguageService {\r\n\r\n  constructor() { }\r\n\r\n  #stateManager = new StateManagerLocal(storeKey);\r\n\r\n  /**\r\n   * Get the preferred label language - either specified by the opening URL or from the session.\r\n   * @returns The language or null/empty string.\r\n   */\r\n  getLabel(): string {\r\n    const fromUrl = sessionStorage.getItem(languageLabels);\r\n    if (fromUrl?.endsWith('!'))\r\n      return fromUrl.slice(0, -1);\r\n    return this.getLabelStored() ?? fromUrl;\r\n  }\r\n\r\n  /** Get label as stored - for the config UI */\r\n  getLabelStored(): string {\r\n    return this.#stateManager.get('labels');\r\n  }\r\n\r\n  /** Set the label in the store */\r\n  setLabel(language: string) {\r\n    this.#stateManager.add('labels', language);\r\n  }\r\n\r\n  /** Get the UI mixing url, stored etc. */\r\n  #getUi(fallback?: string): string {\r\n    // Check if URL overrides everything\r\n    const fromUrl = sessionStorage.getItem(languageUi);\r\n    if (fromUrl?.endsWith('!'))\r\n      return fromUrl.slice(0, -1);\r\n    return this.getUiStored() ?? fromUrl ?? fallback;\r\n  }\r\n\r\n  /** Get the code like 'en' or 'de' for setting the language */\r\n  getUiCode(fallback?: string): string {\r\n    return this.#getUi(fallback)?.toLocaleLowerCase().split('-')[0];\r\n  }\r\n\r\n  /** Get the UI as stored, for the config-UI */\r\n  getUiStored(): string {\r\n    return this.#stateManager.get('ui');\r\n  }\r\n\r\n  /** Set the UI language in the store */\r\n  setUi(language: string) {\r\n    this.#stateManager.add('ui', language);\r\n  }\r\n}\r\n","import { Injectable, signal, WritableSignal } from '@angular/core';\r\nimport { classLog } from '../logging';\r\nimport { StateManagerLocal, StateManagerSession } from './state-manager';\r\n\r\nconst storeKey = 'user-settings';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserPreferences {\r\n\r\n  log = classLog({UserPreferences});\r\n\r\n  constructor() {\r\n    this.log.fn('constructor');\r\n  }\r\n\r\n  get local() { return this.#local ??= new StateManagerLocal(storeKey); }\r\n  #local: StateManagerLocal;\r\n\r\n  get session() { return this.#session ??= new StateManagerSession(storeKey); }\r\n  #session: StateManagerSession;\r\n\r\n  get<T>(key: string, longTerm = false): T {\r\n    return (longTerm ? this.local : this.session).get(key);\r\n  }\r\n\r\n  set<T>(key: string, value: T, longTerm = false) {\r\n    (longTerm ? this.local : this.session).add(key, value);\r\n  }\r\n\r\n  part<T extends Record<string, unknown>>({ key, data }: { key: string; data: T; }): UserPreferencesPart<T> {\r\n    return this.#getPart(key, data, true);\r\n  }\r\n\r\n  #getPart<T extends Record<string, unknown>>(key: string, data: T, longTerm = false): UserPreferencesPart<T> {\r\n    if (this.#partCache[key]) return this.#partCache[key] as unknown as UserPreferencesPart<T>;\r\n    const created = new UserPreferencesPart(this, key, data, longTerm);\r\n    this.#partCache[key] = created;\r\n    return created as unknown as UserPreferencesPart<T>;\r\n  }\r\n  #partCache: Record<string, UserPreferencesPart<Record<string, unknown>>> = {};\r\n}\r\n\r\nclass UserPreferencesPart<T extends Record<string, unknown>> {\r\n\r\n  log = classLog({UserPreferencesPart});\r\n  \r\n  constructor(private userSettings: UserPreferences, private storeKey: string, data: T, private longTerm = false) {\r\n    const merged = { ...data, ...userSettings.get<T>(storeKey, longTerm) };\r\n    this.log.fn('constructor', merged);\r\n    this.#data = signal<T>(merged);\r\n  }\r\n  #data: WritableSignal<T>;\r\n\r\n  get snapshot() { return this.#data(); }\r\n\r\n  get data() { return this.#data.asReadonly(); }\r\n\r\n  get<K extends keyof T>(key: K): T[K] {\r\n    return this.#data()[key];\r\n  }\r\n\r\n  set<K extends keyof T>(key: K, value: T[K]) {\r\n    this.#data.update(data => ({ ...data, [key]: value }));\r\n    this.#save();\r\n  }\r\n\r\n  toggle<K extends keyof T>(key: K) {\r\n    this.#data.update(data => ({ ...data, [key]: !data[key] }));\r\n    this.#save();\r\n  }\r\n\r\n  setAll(data: T) {\r\n    this.#data.set(data);\r\n    this.#save();\r\n  }\r\n\r\n  setMany(data: Partial<T>) {\r\n    this.#data.update(old => ({ ...old, ...data }));\r\n    this.#save();\r\n  }\r\n\r\n  #save() {\r\n    const data = this.#data();\r\n    this.log.fn('save', data);\r\n    this.userSettings.set(this.storeKey, this.#data(), this.longTerm);\r\n  }\r\n}","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",$=\"Invalid Date\",l=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},v=\"en\",D={};D[v]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return v;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(v=i),i||!r&&v},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var v=this.$locale().weekStart||0,D=(y<v?y+7:y)-v;return $(r?m-D:m+(6-D),M);case a:case d:return l(g+\"Hours\",0);case u:return l(g+\"Minutes\",1);case s:return l(g+\"Seconds\",2);case i:return l(g+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),$=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||$;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||l[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,v=O.m(this,M);return v=(l={},l[c]=v/12,l[f]=v,l[h]=v/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?v:O.a(v)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[v],w.Ls=D,w.p={},w}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_ar=t(e.dayjs)}(this,(function(e){\"use strict\";function t(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var n=t(e),r=\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),_={1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"},d={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},o={name:\"ar\",weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),months:r,monthsShort:r,weekStart:6,relativeTime:{future:\"بعد %s\",past:\"منذ %s\",s:\"ثانية واحدة\",m:\"دقيقة واحدة\",mm:\"%d دقائق\",h:\"ساعة واحدة\",hh:\"%d ساعات\",d:\"يوم واحد\",dd:\"%d أيام\",M:\"شهر واحد\",MM:\"%d أشهر\",y:\"عام واحد\",yy:\"%d أعوام\"},preparse:function(e){return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g,(function(e){return d[e]})).replace(/،/g,\",\")},postformat:function(e){return e.replace(/\\d/g,(function(e){return _[e]})).replace(/,/g,\"،\")},ordinal:function(e){return e},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"D/‏M/‏YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"}};return n.default.locale(o,null,!0),o}));","!function(e,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],_):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_bg=_(e.dayjs)}(this,(function(e){\"use strict\";function _(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=_(e),d={name:\"bg\",weekdays:\"неделя_понеделник_вторник_сряда_четвъртък_петък_събота\".split(\"_\"),weekdaysShort:\"нед_пон_вто_сря_чет_пет_съб\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),months:\"януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември\".split(\"_\"),monthsShort:\"янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек\".split(\"_\"),weekStart:1,ordinal:function(e){var _=e%100;if(_>10&&_<20)return e+\"-ти\";var t=e%10;return 1===t?e+\"-ви\":2===t?e+\"-ри\":7===t||8===t?e+\"-ми\":e+\"-ти\"},formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"D.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY H:mm\",LLLL:\"dddd, D MMMM YYYY H:mm\"},relativeTime:{future:\"след %s\",past:\"преди %s\",s:\"няколко секунди\",m:\"минута\",mm:\"%d минути\",h:\"час\",hh:\"%d часа\",d:\"ден\",dd:\"%d дена\",M:\"месец\",MM:\"%d месеца\",y:\"година\",yy:\"%d години\"}};return t.default.locale(d,null,!0),d}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_cs=n(e.dayjs)}(this,(function(e){\"use strict\";function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=n(e);function s(e){return e>1&&e<5&&1!=~~(e/10)}function r(e,n,t,r){var d=e+\" \";switch(t){case\"s\":return n||r?\"pár sekund\":\"pár sekundami\";case\"m\":return n?\"minuta\":r?\"minutu\":\"minutou\";case\"mm\":return n||r?d+(s(e)?\"minuty\":\"minut\"):d+\"minutami\";case\"h\":return n?\"hodina\":r?\"hodinu\":\"hodinou\";case\"hh\":return n||r?d+(s(e)?\"hodiny\":\"hodin\"):d+\"hodinami\";case\"d\":return n||r?\"den\":\"dnem\";case\"dd\":return n||r?d+(s(e)?\"dny\":\"dní\"):d+\"dny\";case\"M\":return n||r?\"měsíc\":\"měsícem\";case\"MM\":return n||r?d+(s(e)?\"měsíce\":\"měsíců\"):d+\"měsíci\";case\"y\":return n||r?\"rok\":\"rokem\";case\"yy\":return n||r?d+(s(e)?\"roky\":\"let\"):d+\"lety\"}}var d={name:\"cs\",weekdays:\"neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota\".split(\"_\"),weekdaysShort:\"ne_po_út_st_čt_pá_so\".split(\"_\"),weekdaysMin:\"ne_po_út_st_čt_pá_so\".split(\"_\"),months:\"leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec\".split(\"_\"),monthsShort:\"led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro\".split(\"_\"),weekStart:1,yearStart:4,ordinal:function(e){return e+\".\"},formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\",l:\"D. M. YYYY\"},relativeTime:{future:\"za %s\",past:\"před %s\",s:r,m:r,mm:r,h:r,hh:r,d:r,dd:r,M:r,MM:r,y:r,yy:r}};return t.default.locale(d,null,!0),d}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_da=t(e.dayjs)}(this,(function(e){\"use strict\";function t(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var d=t(e),n={name:\"da\",weekdays:\"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag\".split(\"_\"),weekdaysShort:\"søn._man._tirs._ons._tors._fre._lør.\".split(\"_\"),weekdaysMin:\"sø._ma._ti._on._to._fr._lø.\".split(\"_\"),months:\"januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj_juni_juli_aug._sept._okt._nov._dec.\".split(\"_\"),weekStart:1,ordinal:function(e){return e+\".\"},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd [d.] D. MMMM YYYY [kl.] HH:mm\"},relativeTime:{future:\"om %s\",past:\"%s siden\",s:\"få sekunder\",m:\"et minut\",mm:\"%d minutter\",h:\"en time\",hh:\"%d timer\",d:\"en dag\",dd:\"%d dage\",M:\"en måned\",MM:\"%d måneder\",y:\"et år\",yy:\"%d år\"}};return d.default.locale(n,null,!0),n}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_de_at=n(e.dayjs)}(this,(function(e){\"use strict\";function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=n(e),i={s:\"ein paar Sekunden\",m:[\"eine Minute\",\"einer Minute\"],mm:\"%d Minuten\",h:[\"eine Stunde\",\"einer Stunde\"],hh:\"%d Stunden\",d:[\"ein Tag\",\"einem Tag\"],dd:[\"%d Tage\",\"%d Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[\"%d Monate\",\"%d Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[\"%d Jahre\",\"%d Jahren\"]};function a(e,n,t){var a=i[t];return Array.isArray(a)&&(a=a[n?0:1]),a.replace(\"%d\",e)}var r={name:\"de-at\",weekdays:\"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),weekdaysShort:\"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),months:\"Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.\".split(\"_\"),ordinal:function(e){return e+\".\"},weekStart:1,formats:{LTS:\"HH:mm:ss\",LT:\"HH:mm\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd, D. MMMM YYYY HH:mm\"},relativeTime:{future:\"in %s\",past:\"vor %s\",s:a,m:a,mm:a,h:a,hh:a,d:a,dd:a,M:a,MM:a,y:a,yy:a}};return t.default.locale(r,null,!0),r}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_de_ch=n(e.dayjs)}(this,(function(e){\"use strict\";function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=n(e),a={s:\"ein paar Sekunden\",m:[\"eine Minute\",\"einer Minute\"],mm:\"%d Minuten\",h:[\"eine Stunde\",\"einer Stunde\"],hh:\"%d Stunden\",d:[\"ein Tag\",\"einem Tag\"],dd:[\"%d Tage\",\"%d Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[\"%d Monate\",\"%d Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[\"%d Jahre\",\"%d Jahren\"]};function i(e,n,t){var i=a[t];return Array.isArray(i)&&(i=i[n?0:1]),i.replace(\"%d\",e)}var r={name:\"de-ch\",weekdays:\"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),weekdaysShort:\"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),weekdaysMin:\"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),months:\"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.\".split(\"_\"),ordinal:function(e){return e+\".\"},weekStart:1,formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd, D. MMMM YYYY HH:mm\"},relativeTime:{future:\"in %s\",past:\"vor %s\",s:i,m:i,mm:i,h:i,hh:i,d:i,dd:i,M:i,MM:i,y:i,yy:i}};return t.default.locale(r,null,!0),r}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_de=n(e.dayjs)}(this,(function(e){\"use strict\";function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=n(e),a={s:\"ein paar Sekunden\",m:[\"eine Minute\",\"einer Minute\"],mm:\"%d Minuten\",h:[\"eine Stunde\",\"einer Stunde\"],hh:\"%d Stunden\",d:[\"ein Tag\",\"einem Tag\"],dd:[\"%d Tage\",\"%d Tagen\"],M:[\"ein Monat\",\"einem Monat\"],MM:[\"%d Monate\",\"%d Monaten\"],y:[\"ein Jahr\",\"einem Jahr\"],yy:[\"%d Jahre\",\"%d Jahren\"]};function i(e,n,t){var i=a[t];return Array.isArray(i)&&(i=i[n?0:1]),i.replace(\"%d\",e)}var r={name:\"de\",weekdays:\"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),weekdaysShort:\"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),weekdaysMin:\"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),months:\"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),monthsShort:\"Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),ordinal:function(e){return e+\".\"},weekStart:1,yearStart:4,formats:{LTS:\"HH:mm:ss\",LT:\"HH:mm\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY HH:mm\",LLLL:\"dddd, D. MMMM YYYY HH:mm\"},relativeTime:{future:\"in %s\",past:\"vor %s\",s:i,m:i,mm:i,h:i,hh:i,d:i,dd:i,M:i,MM:i,y:i,yy:i}};return t.default.locale(r,null,!0),r}));","!function(e,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],_):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_el=_(e.dayjs)}(this,(function(e){\"use strict\";function _(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=_(e),d={name:\"el\",weekdays:\"Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο\".split(\"_\"),weekdaysShort:\"Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ\".split(\"_\"),weekdaysMin:\"Κυ_Δε_Τρ_Τε_Πε_Πα_Σα\".split(\"_\"),months:\"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος\".split(\"_\"),monthsShort:\"Ιαν_Φεβ_Μαρ_Απρ_Μαι_Ιουν_Ιουλ_Αυγ_Σεπτ_Οκτ_Νοε_Δεκ\".split(\"_\"),ordinal:function(e){return e},weekStart:1,relativeTime:{future:\"σε %s\",past:\"πριν %s\",s:\"μερικά δευτερόλεπτα\",m:\"ένα λεπτό\",mm:\"%d λεπτά\",h:\"μία ώρα\",hh:\"%d ώρες\",d:\"μία μέρα\",dd:\"%d μέρες\",M:\"ένα μήνα\",MM:\"%d μήνες\",y:\"ένα χρόνο\",yy:\"%d χρόνια\"},formats:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"}};return t.default.locale(d,null,!0),d}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_en_au=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=a(e),_={name:\"en-au\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),weekStart:1,weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY h:mm A\",LLLL:\"dddd, D MMMM YYYY h:mm A\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"}};return t.default.locale(_,null,!0),_}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_en_ca=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var _=a(e),t={name:\"en-ca\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"YYYY-MM-DD\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"}};return _.default.locale(t,null,!0),t}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_en_gb=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=a(e),_={name:\"en-gb\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekStart:1,yearStart:4,relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},ordinal:function(e){var a=[\"th\",\"st\",\"nd\",\"rd\"],t=e%100;return\"[\"+e+(a[(t-20)%10]||a[t]||a[0])+\"]\"}};return t.default.locale(_,null,!0),_}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_en_ie=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=a(e),_={name:\"en-ie\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),weekStart:1,weekdaysShort:\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),weekdaysMin:\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"}};return t.default.locale(_,null,!0),_}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_en=n()}(this,(function(){\"use strict\";return{name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")}}));","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],o):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_es_mx=o(e.dayjs)}(this,(function(e){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var s=o(e),d={name:\"es-mx\",weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinal:function(e){return e+\"º\"},formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY H:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY H:mm\"}};return s.default.locale(d,null,!0),d}));","!function(e,s){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=s(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],s):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_es_us=s(e.dayjs)}(this,(function(e){\"use strict\";function s(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var o=s(e),d={name:\"es-us\",weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinal:function(e){return e+\"º\"},formats:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"MM/DD/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY h:mm A\",LLLL:\"dddd, D [de] MMMM [de] YYYY h:mm A\"}};return o.default.locale(d,null,!0),d}));","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],o):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_es=o(e.dayjs)}(this,(function(e){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var s=o(e),d={name:\"es\",monthsShort:\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),weekStart:1,formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY H:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY H:mm\"},relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinal:function(e){return e+\"º\"}};return s.default.locale(d,null,!0),d}));","!function(_,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],e):(_=\"undefined\"!=typeof globalThis?globalThis:_||self).dayjs_locale_fa=e(_.dayjs)}(this,(function(_){\"use strict\";function e(_){return _&&\"object\"==typeof _&&\"default\"in _?_:{default:_}}var t=e(_),d={name:\"fa\",weekdays:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysShort:\"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه\".split(\"_\"),weekdaysMin:\"ی_د_س_چ_پ_ج_ش\".split(\"_\"),weekStart:6,months:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),monthsShort:\"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر\".split(\"_\"),ordinal:function(_){return _},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},relativeTime:{future:\"در %s\",past:\"%s پیش\",s:\"چند ثانیه\",m:\"یک دقیقه\",mm:\"%d دقیقه\",h:\"یک ساعت\",hh:\"%d ساعت\",d:\"یک روز\",dd:\"%d روز\",M:\"یک ماه\",MM:\"%d ماه\",y:\"یک سال\",yy:\"%d سال\"}};return t.default.locale(d,null,!0),d}));","!function(u,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],e):(u=\"undefined\"!=typeof globalThis?globalThis:u||self).dayjs_locale_fi=e(u.dayjs)}(this,(function(u){\"use strict\";function e(u){return u&&\"object\"==typeof u&&\"default\"in u?u:{default:u}}var t=e(u);function n(u,e,t,n){var i={s:\"muutama sekunti\",m:\"minuutti\",mm:\"%d minuuttia\",h:\"tunti\",hh:\"%d tuntia\",d:\"päivä\",dd:\"%d päivää\",M:\"kuukausi\",MM:\"%d kuukautta\",y:\"vuosi\",yy:\"%d vuotta\",numbers:\"nolla_yksi_kaksi_kolme_neljä_viisi_kuusi_seitsemän_kahdeksan_yhdeksän\".split(\"_\")},a={s:\"muutaman sekunnin\",m:\"minuutin\",mm:\"%d minuutin\",h:\"tunnin\",hh:\"%d tunnin\",d:\"päivän\",dd:\"%d päivän\",M:\"kuukauden\",MM:\"%d kuukauden\",y:\"vuoden\",yy:\"%d vuoden\",numbers:\"nollan_yhden_kahden_kolmen_neljän_viiden_kuuden_seitsemän_kahdeksan_yhdeksän\".split(\"_\")},s=n&&!e?a:i,_=s[t];return u<10?_.replace(\"%d\",s.numbers[u]):_.replace(\"%d\",u)}var i={name:\"fi\",weekdays:\"sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai\".split(\"_\"),weekdaysShort:\"su_ma_ti_ke_to_pe_la\".split(\"_\"),weekdaysMin:\"su_ma_ti_ke_to_pe_la\".split(\"_\"),months:\"tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu\".split(\"_\"),monthsShort:\"tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu\".split(\"_\"),ordinal:function(u){return u+\".\"},weekStart:1,yearStart:4,relativeTime:{future:\"%s päästä\",past:\"%s sitten\",s:n,m:n,mm:n,h:n,hh:n,d:n,dd:n,M:n,MM:n,y:n,yy:n},formats:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM[ta] YYYY\",LLL:\"D. MMMM[ta] YYYY, [klo] HH.mm\",LLLL:\"dddd, D. MMMM[ta] YYYY, [klo] HH.mm\",l:\"D.M.YYYY\",ll:\"D. MMM YYYY\",lll:\"D. MMM YYYY, [klo] HH.mm\",llll:\"ddd, D. MMM YYYY, [klo] HH.mm\"}};return t.default.locale(i,null,!0),i}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_fr_ch=n(e.dayjs)}(this,(function(e){\"use strict\";function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var i=n(e),_={name:\"fr-ch\",weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),weekStart:1,weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),weekdaysMin:\"di_lu_ma_me_je_ve_sa\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"}};return i.default.locale(_,null,!0),_}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_fr=n(e.dayjs)}(this,(function(e){\"use strict\";function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=n(e),i={name:\"fr\",weekdays:\"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),weekdaysShort:\"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),weekdaysMin:\"di_lu_ma_me_je_ve_sa\".split(\"_\"),months:\"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),monthsShort:\"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),weekStart:1,yearStart:4,formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},relativeTime:{future:\"dans %s\",past:\"il y a %s\",s:\"quelques secondes\",m:\"une minute\",mm:\"%d minutes\",h:\"une heure\",hh:\"%d heures\",d:\"un jour\",dd:\"%d jours\",M:\"un mois\",MM:\"%d mois\",y:\"un an\",yy:\"%d ans\"},ordinal:function(e){return\"\"+e+(1===e?\"er\":\"\")}};return t.default.locale(i,null,!0),i}));","!function(Y,M){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=M(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],M):(Y=\"undefined\"!=typeof globalThis?globalThis:Y||self).dayjs_locale_he=M(Y.dayjs)}(this,(function(Y){\"use strict\";function M(Y){return Y&&\"object\"==typeof Y&&\"default\"in Y?Y:{default:Y}}var d=M(Y),e={s:\"מספר שניות\",ss:\"%d שניות\",m:\"דקה\",mm:\"%d דקות\",h:\"שעה\",hh:\"%d שעות\",hh2:\"שעתיים\",d:\"יום\",dd:\"%d ימים\",dd2:\"יומיים\",M:\"חודש\",MM:\"%d חודשים\",MM2:\"חודשיים\",y:\"שנה\",yy:\"%d שנים\",yy2:\"שנתיים\"};function _(Y,M,d){return(e[d+(2===Y?\"2\":\"\")]||e[d]).replace(\"%d\",Y)}var l={name:\"he\",weekdays:\"ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת\".split(\"_\"),weekdaysShort:\"א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳\".split(\"_\"),weekdaysMin:\"א׳_ב׳_ג׳_ד׳_ה׳_ו_ש׳\".split(\"_\"),months:\"ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר\".split(\"_\"),monthsShort:\"ינו_פבר_מרץ_אפר_מאי_יונ_יול_אוג_ספט_אוק_נוב_דצמ\".split(\"_\"),relativeTime:{future:\"בעוד %s\",past:\"לפני %s\",s:_,m:_,mm:_,h:_,hh:_,d:_,dd:_,M:_,MM:_,y:_,yy:_},ordinal:function(Y){return Y},format:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [ב]MMMM YYYY\",LLL:\"D [ב]MMMM YYYY HH:mm\",LLLL:\"dddd, D [ב]MMMM YYYY HH:mm\",l:\"D/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [ב]MMMM YYYY\",LLL:\"D [ב]MMMM YYYY HH:mm\",LLLL:\"dddd, D [ב]MMMM YYYY HH:mm\",l:\"D/M/YYYY\",ll:\"D MMM YYYY\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd, D MMM YYYY HH:mm\"}};return d.default.locale(l,null,!0),l}));","!function(_,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],e):(_=\"undefined\"!=typeof globalThis?globalThis:_||self).dayjs_locale_hi=e(_.dayjs)}(this,(function(_){\"use strict\";function e(_){return _&&\"object\"==typeof _&&\"default\"in _?_:{default:_}}var t=e(_),d={name:\"hi\",weekdays:\"रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार\".split(\"_\"),months:\"जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर\".split(\"_\"),weekdaysShort:\"रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि\".split(\"_\"),monthsShort:\"जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.\".split(\"_\"),weekdaysMin:\"र_सो_मं_बु_गु_शु_श\".split(\"_\"),ordinal:function(_){return _},formats:{LT:\"A h:mm बजे\",LTS:\"A h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, A h:mm बजे\"},relativeTime:{future:\"%s में\",past:\"%s पहले\",s:\"कुछ ही क्षण\",m:\"एक मिनट\",mm:\"%d मिनट\",h:\"एक घंटा\",hh:\"%d घंटे\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महीने\",MM:\"%d महीने\",y:\"एक वर्ष\",yy:\"%d वर्ष\"}};return t.default.locale(d,null,!0),d}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_hr=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=a(e),s=\"siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca\".split(\"_\"),n=\"siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac\".split(\"_\"),_=/D[oD]?(\\[[^[\\]]*\\]|\\s)+MMMM?/,o=function(e,a){return _.test(a)?s[e.month()]:n[e.month()]};o.s=n,o.f=s;var i={name:\"hr\",weekdays:\"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),weekdaysShort:\"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),weekdaysMin:\"ne_po_ut_sr_če_pe_su\".split(\"_\"),months:o,monthsShort:\"sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.\".split(\"_\"),weekStart:1,formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},relativeTime:{future:\"za %s\",past:\"prije %s\",s:\"sekunda\",m:\"minuta\",mm:\"%d minuta\",h:\"sat\",hh:\"%d sati\",d:\"dan\",dd:\"%d dana\",M:\"mjesec\",MM:\"%d mjeseci\",y:\"godina\",yy:\"%d godine\"},ordinal:function(e){return e+\".\"}};return t.default.locale(i,null,!0),i}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_hu=n(e.dayjs)}(this,(function(e){\"use strict\";function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=n(e),r={name:\"hu\",weekdays:\"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat\".split(\"_\"),weekdaysShort:\"vas_hét_kedd_sze_csüt_pén_szo\".split(\"_\"),weekdaysMin:\"v_h_k_sze_cs_p_szo\".split(\"_\"),months:\"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december\".split(\"_\"),monthsShort:\"jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec\".split(\"_\"),ordinal:function(e){return e+\".\"},weekStart:1,relativeTime:{future:\"%s múlva\",past:\"%s\",s:function(e,n,t,r){return\"néhány másodperc\"+(r||n?\"\":\"e\")},m:function(e,n,t,r){return\"egy perc\"+(r||n?\"\":\"e\")},mm:function(e,n,t,r){return e+\" perc\"+(r||n?\"\":\"e\")},h:function(e,n,t,r){return\"egy \"+(r||n?\"óra\":\"órája\")},hh:function(e,n,t,r){return e+\" \"+(r||n?\"óra\":\"órája\")},d:function(e,n,t,r){return\"egy \"+(r||n?\"nap\":\"napja\")},dd:function(e,n,t,r){return e+\" \"+(r||n?\"nap\":\"napja\")},M:function(e,n,t,r){return\"egy \"+(r||n?\"hónap\":\"hónapja\")},MM:function(e,n,t,r){return e+\" \"+(r||n?\"hónap\":\"hónapja\")},y:function(e,n,t,r){return\"egy \"+(r||n?\"év\":\"éve\")},yy:function(e,n,t,r){return e+\" \"+(r||n?\"év\":\"éve\")}},formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"YYYY.MM.DD.\",LL:\"YYYY. MMMM D.\",LLL:\"YYYY. MMMM D. H:mm\",LLLL:\"YYYY. MMMM D., dddd H:mm\"}};return t.default.locale(r,null,!0),r}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_id=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=a(e),_={name:\"id\",weekdays:\"Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu\".split(\"_\"),months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember\".split(\"_\"),weekdaysShort:\"Min_Sen_Sel_Rab_Kam_Jum_Sab\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sb\".split(\"_\"),weekStart:1,formats:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lalu\",s:\"beberapa detik\",m:\"semenit\",mm:\"%d menit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},ordinal:function(e){return e+\".\"}};return t.default.locale(_,null,!0),_}));","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],o):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_it_ch=o(e.dayjs)}(this,(function(e){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var n=o(e),t={name:\"it-ch\",weekdays:\"domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato\".split(\"_\"),months:\"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre\".split(\"_\"),weekStart:1,weekdaysShort:\"dom_lun_mar_mer_gio_ven_sab\".split(\"_\"),monthsShort:\"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic\".split(\"_\"),weekdaysMin:\"do_lu_ma_me_gi_ve_sa\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},relativeTime:{future:\"tra %s\",past:\"%s fa\",s:\"alcuni secondi\",m:\"un minuto\",mm:\"%d minuti\",h:\"un'ora\",hh:\"%d ore\",d:\"un giorno\",dd:\"%d giorni\",M:\"un mese\",MM:\"%d mesi\",y:\"un anno\",yy:\"%d anni\"}};return n.default.locale(t,null,!0),t}));","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],o):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_it=o(e.dayjs)}(this,(function(e){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=o(e),n={name:\"it\",weekdays:\"domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato\".split(\"_\"),weekdaysShort:\"dom_lun_mar_mer_gio_ven_sab\".split(\"_\"),weekdaysMin:\"do_lu_ma_me_gi_ve_sa\".split(\"_\"),months:\"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre\".split(\"_\"),weekStart:1,monthsShort:\"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic\".split(\"_\"),formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},relativeTime:{future:\"tra %s\",past:\"%s fa\",s:\"qualche secondo\",m:\"un minuto\",mm:\"%d minuti\",h:\"un' ora\",hh:\"%d ore\",d:\"un giorno\",dd:\"%d giorni\",M:\"un mese\",MM:\"%d mesi\",y:\"un anno\",yy:\"%d anni\"},ordinal:function(e){return e+\"º\"}};return t.default.locale(n,null,!0),n}));","!function(e,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],_):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_ja=_(e.dayjs)}(this,(function(e){\"use strict\";function _(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=_(e),d={name:\"ja\",weekdays:\"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日\".split(\"_\"),weekdaysShort:\"日_月_火_水_木_金_土\".split(\"_\"),weekdaysMin:\"日_月_火_水_木_金_土\".split(\"_\"),months:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),ordinal:function(e){return e+\"日\"},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY/MM/DD\",LL:\"YYYY年M月D日\",LLL:\"YYYY年M月D日 HH:mm\",LLLL:\"YYYY年M月D日 dddd HH:mm\",l:\"YYYY/MM/DD\",ll:\"YYYY年M月D日\",lll:\"YYYY年M月D日 HH:mm\",llll:\"YYYY年M月D日(ddd) HH:mm\"},meridiem:function(e){return e<12?\"午前\":\"午後\"},relativeTime:{future:\"%s後\",past:\"%s前\",s:\"数秒\",m:\"1分\",mm:\"%d分\",h:\"1時間\",hh:\"%d時間\",d:\"1日\",dd:\"%d日\",M:\"1ヶ月\",MM:\"%dヶ月\",y:\"1年\",yy:\"%d年\"}};return t.default.locale(d,null,!0),d}));","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],n):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_jv=n(e.dayjs)}(this,(function(e){\"use strict\";function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=n(e),_={name:\"jv\",weekdays:\"Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu\".split(\"_\"),months:\"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember\".split(\"_\"),weekStart:1,weekdaysShort:\"Min_Sen_Sel_Reb_Kem_Jem_Sep\".split(\"_\"),monthsShort:\"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des\".split(\"_\"),weekdaysMin:\"Mg_Sn_Sl_Rb_Km_Jm_Sp\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},relativeTime:{future:\"wonten ing %s\",past:\"%s ingkang kepengker\",s:\"sawetawis detik\",m:\"setunggal menit\",mm:\"%d menit\",h:\"setunggal jam\",hh:\"%d jam\",d:\"sedinten\",dd:\"%d dinten\",M:\"sewulan\",MM:\"%d wulan\",y:\"setaun\",yy:\"%d taun\"}};return t.default.locale(_,null,!0),_}));","!function(e,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],_):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_ko=_(e.dayjs)}(this,(function(e){\"use strict\";function _(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var d=_(e),t={name:\"ko\",weekdays:\"일요일_월요일_화요일_수요일_목요일_금요일_토요일\".split(\"_\"),weekdaysShort:\"일_월_화_수_목_금_토\".split(\"_\"),weekdaysMin:\"일_월_화_수_목_금_토\".split(\"_\"),months:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),monthsShort:\"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"A h:mm\",LTS:\"A h:mm:ss\",L:\"YYYY.MM.DD.\",LL:\"YYYY년 MMMM D일\",LLL:\"YYYY년 MMMM D일 A h:mm\",LLLL:\"YYYY년 MMMM D일 dddd A h:mm\",l:\"YYYY.MM.DD.\",ll:\"YYYY년 MMMM D일\",lll:\"YYYY년 MMMM D일 A h:mm\",llll:\"YYYY년 MMMM D일 dddd A h:mm\"},meridiem:function(e){return e<12?\"오전\":\"오후\"},relativeTime:{future:\"%s 후\",past:\"%s 전\",s:\"몇 초\",m:\"1분\",mm:\"%d분\",h:\"한 시간\",hh:\"%d시간\",d:\"하루\",dd:\"%d일\",M:\"한 달\",MM:\"%d달\",y:\"일 년\",yy:\"%d년\"}};return d.default.locale(t,null,!0),t}));","!function(e,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],_):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_lb=_(e.dayjs)}(this,(function(e){\"use strict\";function _(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=_(e),n={name:\"lb\",weekdays:\"Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg\".split(\"_\"),months:\"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),weekStart:1,weekdaysShort:\"So._Mé._Dë._Më._Do._Fr._Sa.\".split(\"_\"),monthsShort:\"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),weekdaysMin:\"So_Mé_Dë_Më_Do_Fr_Sa\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"H:mm [Auer]\",LTS:\"H:mm:ss [Auer]\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm [Auer]\",LLLL:\"dddd, D. MMMM YYYY H:mm [Auer]\"}};return t.default.locale(n,null,!0),n}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_ms_my=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=a(e),_={name:\"ms-my\",weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),weekStart:1,weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [pukul] HH.mm\",LLLL:\"dddd, D MMMM YYYY [pukul] HH.mm\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"}};return t.default.locale(_,null,!0),_}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_ms=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=a(e),s={name:\"ms\",weekdays:\"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),weekdaysShort:\"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),weekdaysMin:\"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),months:\"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),monthsShort:\"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),weekStart:1,formats:{LT:\"HH.mm\",LTS:\"HH.mm.ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH.mm\",LLLL:\"dddd, D MMMM YYYY HH.mm\"},relativeTime:{future:\"dalam %s\",past:\"%s yang lepas\",s:\"beberapa saat\",m:\"seminit\",mm:\"%d minit\",h:\"sejam\",hh:\"%d jam\",d:\"sehari\",dd:\"%d hari\",M:\"sebulan\",MM:\"%d bulan\",y:\"setahun\",yy:\"%d tahun\"},ordinal:function(e){return e+\".\"}};return t.default.locale(s,null,!0),s}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_nl_be=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var n=a(e),d={name:\"nl-be\",weekdays:\"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag\".split(\"_\"),months:\"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.\".split(\"_\"),weekStart:1,weekdaysShort:\"zo._ma._di._wo._do._vr._za.\".split(\"_\"),weekdaysMin:\"zo_ma_di_wo_do_vr_za\".split(\"_\"),ordinal:function(e){return e},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},relativeTime:{future:\"over %s\",past:\"%s geleden\",s:\"een paar seconden\",m:\"één minuut\",mm:\"%d minuten\",h:\"één uur\",hh:\"%d uur\",d:\"één dag\",dd:\"%d dagen\",M:\"één maand\",MM:\"%d maanden\",y:\"één jaar\",yy:\"%d jaar\"}};return n.default.locale(d,null,!0),d}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_nl=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var d=a(e),n={name:\"nl\",weekdays:\"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag\".split(\"_\"),weekdaysShort:\"zo._ma._di._wo._do._vr._za.\".split(\"_\"),weekdaysMin:\"zo_ma_di_wo_do_vr_za\".split(\"_\"),months:\"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),ordinal:function(e){return\"[\"+e+(1===e||8===e||e>=20?\"ste\":\"de\")+\"]\"},weekStart:1,yearStart:4,formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},relativeTime:{future:\"over %s\",past:\"%s geleden\",s:\"een paar seconden\",m:\"een minuut\",mm:\"%d minuten\",h:\"een uur\",hh:\"%d uur\",d:\"een dag\",dd:\"%d dagen\",M:\"een maand\",MM:\"%d maanden\",y:\"een jaar\",yy:\"%d jaar\"}};return d.default.locale(n,null,!0),n}));","!function(_,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],e):(_=\"undefined\"!=typeof globalThis?globalThis:_||self).dayjs_locale_pa_in=e(_.dayjs)}(this,(function(_){\"use strict\";function e(_){return _&&\"object\"==typeof _&&\"default\"in _?_:{default:_}}var t=e(_),d={name:\"pa-in\",weekdays:\"ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ\".split(\"_\"),months:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),weekdaysShort:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),monthsShort:\"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ\".split(\"_\"),weekdaysMin:\"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ\".split(\"_\"),ordinal:function(_){return _},formats:{LT:\"A h:mm ਵਜੇ\",LTS:\"A h:mm:ss ਵਜੇ\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, A h:mm ਵਜੇ\",LLLL:\"dddd, D MMMM YYYY, A h:mm ਵਜੇ\"},relativeTime:{future:\"%s ਵਿੱਚ\",past:\"%s ਪਿਛਲੇ\",s:\"ਕੁਝ ਸਕਿੰਟ\",m:\"ਇਕ ਮਿੰਟ\",mm:\"%d ਮਿੰਟ\",h:\"ਇੱਕ ਘੰਟਾ\",hh:\"%d ਘੰਟੇ\",d:\"ਇੱਕ ਦਿਨ\",dd:\"%d ਦਿਨ\",M:\"ਇੱਕ ਮਹੀਨਾ\",MM:\"%d ਮਹੀਨੇ\",y:\"ਇੱਕ ਸਾਲ\",yy:\"%d ਸਾਲ\"}};return t.default.locale(d,null,!0),d}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_pl=t(e.dayjs)}(this,(function(e){\"use strict\";function t(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var i=t(e);function a(e){return e%10<5&&e%10>1&&~~(e/10)%10!=1}function n(e,t,i){var n=e+\" \";switch(i){case\"m\":return t?\"minuta\":\"minutę\";case\"mm\":return n+(a(e)?\"minuty\":\"minut\");case\"h\":return t?\"godzina\":\"godzinę\";case\"hh\":return n+(a(e)?\"godziny\":\"godzin\");case\"MM\":return n+(a(e)?\"miesiące\":\"miesięcy\");case\"yy\":return n+(a(e)?\"lata\":\"lat\")}}var r=\"stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia\".split(\"_\"),_=\"styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień\".split(\"_\"),s=/D MMMM/,d=function(e,t){return s.test(t)?r[e.month()]:_[e.month()]};d.s=_,d.f=r;var o={name:\"pl\",weekdays:\"niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota\".split(\"_\"),weekdaysShort:\"ndz_pon_wt_śr_czw_pt_sob\".split(\"_\"),weekdaysMin:\"Nd_Pn_Wt_Śr_Cz_Pt_So\".split(\"_\"),months:d,monthsShort:\"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru\".split(\"_\"),ordinal:function(e){return e+\".\"},weekStart:1,yearStart:4,relativeTime:{future:\"za %s\",past:\"%s temu\",s:\"kilka sekund\",m:n,mm:n,h:n,hh:n,d:\"1 dzień\",dd:\"%d dni\",M:\"miesiąc\",MM:n,y:\"rok\",yy:n},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"}};return i.default.locale(o,null,!0),o}));","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],o):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_pt_br=o(e.dayjs)}(this,(function(e){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var a=o(e),s={name:\"pt-br\",weekdays:\"domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado\".split(\"_\"),weekdaysShort:\"dom_seg_ter_qua_qui_sex_sáb\".split(\"_\"),weekdaysMin:\"Do_2ª_3ª_4ª_5ª_6ª_Sá\".split(\"_\"),months:\"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro\".split(\"_\"),monthsShort:\"jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez\".split(\"_\"),ordinal:function(e){return e+\"º\"},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY [às] HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY [às] HH:mm\"},relativeTime:{future:\"em %s\",past:\"há %s\",s:\"poucos segundos\",m:\"um minuto\",mm:\"%d minutos\",h:\"uma hora\",hh:\"%d horas\",d:\"um dia\",dd:\"%d dias\",M:\"um mês\",MM:\"%d meses\",y:\"um ano\",yy:\"%d anos\"}};return a.default.locale(s,null,!0),s}));","!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=a(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],a):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_pt=a(e.dayjs)}(this,(function(e){\"use strict\";function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var o=a(e),t={name:\"pt\",weekdays:\"domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado\".split(\"_\"),weekdaysShort:\"dom_seg_ter_qua_qui_sex_sab\".split(\"_\"),weekdaysMin:\"Do_2ª_3ª_4ª_5ª_6ª_Sa\".split(\"_\"),months:\"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro\".split(\"_\"),monthsShort:\"jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez\".split(\"_\"),ordinal:function(e){return e+\"º\"},weekStart:1,yearStart:4,formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY [às] HH:mm\",LLLL:\"dddd, D [de] MMMM [de] YYYY [às] HH:mm\"},relativeTime:{future:\"em %s\",past:\"há %s\",s:\"alguns segundos\",m:\"um minuto\",mm:\"%d minutos\",h:\"uma hora\",hh:\"%d horas\",d:\"um dia\",dd:\"%d dias\",M:\"um mês\",MM:\"%d meses\",y:\"um ano\",yy:\"%d anos\"}};return o.default.locale(t,null,!0),t}));","!function(_,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],t):(_=\"undefined\"!=typeof globalThis?globalThis:_||self).dayjs_locale_ru=t(_.dayjs)}(this,(function(_){\"use strict\";function t(_){return _&&\"object\"==typeof _&&\"default\"in _?_:{default:_}}var e=t(_),n=\"января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря\".split(\"_\"),s=\"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь\".split(\"_\"),r=\"янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.\".split(\"_\"),o=\"янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.\".split(\"_\"),i=/D[oD]?(\\[[^[\\]]*\\]|\\s)+MMMM?/;function d(_,t,e){var n,s;return\"m\"===e?t?\"минута\":\"минуту\":_+\" \"+(n=+_,s={mm:t?\"минута_минуты_минут\":\"минуту_минуты_минут\",hh:\"час_часа_часов\",dd:\"день_дня_дней\",MM:\"месяц_месяца_месяцев\",yy:\"год_года_лет\"}[e].split(\"_\"),n%10==1&&n%100!=11?s[0]:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?s[1]:s[2])}var u=function(_,t){return i.test(t)?n[_.month()]:s[_.month()]};u.s=s,u.f=n;var a=function(_,t){return i.test(t)?r[_.month()]:o[_.month()]};a.s=o,a.f=r;var m={name:\"ru\",weekdays:\"воскресенье_понедельник_вторник_среда_четверг_пятница_суббота\".split(\"_\"),weekdaysShort:\"вск_пнд_втр_срд_чтв_птн_сбт\".split(\"_\"),weekdaysMin:\"вс_пн_вт_ср_чт_пт_сб\".split(\"_\"),months:u,monthsShort:a,weekStart:1,yearStart:4,formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY г.\",LLL:\"D MMMM YYYY г., H:mm\",LLLL:\"dddd, D MMMM YYYY г., H:mm\"},relativeTime:{future:\"через %s\",past:\"%s назад\",s:\"несколько секунд\",m:d,mm:d,h:\"час\",hh:d,d:\"день\",dd:d,M:\"месяц\",MM:d,y:\"год\",yy:d},ordinal:function(_){return _},meridiem:function(_){return _<4?\"ночи\":_<12?\"утра\":_<17?\"дня\":\"вечера\"}};return e.default.locale(m,null,!0),m}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_sk=t(e.dayjs)}(this,(function(e){\"use strict\";function t(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var n=t(e);function r(e){return e>1&&e<5&&1!=~~(e/10)}function o(e,t,n,o){var a=e+\" \";switch(n){case\"s\":return t||o?\"pár sekúnd\":\"pár sekundami\";case\"m\":return t?\"minúta\":o?\"minútu\":\"minútou\";case\"mm\":return t||o?a+(r(e)?\"minúty\":\"minút\"):a+\"minútami\";case\"h\":return t?\"hodina\":o?\"hodinu\":\"hodinou\";case\"hh\":return t||o?a+(r(e)?\"hodiny\":\"hodín\"):a+\"hodinami\";case\"d\":return t||o?\"deň\":\"dňom\";case\"dd\":return t||o?a+(r(e)?\"dni\":\"dní\"):a+\"dňami\";case\"M\":return t||o?\"mesiac\":\"mesiacom\";case\"MM\":return t||o?a+(r(e)?\"mesiace\":\"mesiacov\"):a+\"mesiacmi\";case\"y\":return t||o?\"rok\":\"rokom\";case\"yy\":return t||o?a+(r(e)?\"roky\":\"rokov\"):a+\"rokmi\"}}var a={name:\"sk\",weekdays:\"nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota\".split(\"_\"),weekdaysShort:\"ne_po_ut_st_št_pi_so\".split(\"_\"),weekdaysMin:\"ne_po_ut_st_št_pi_so\".split(\"_\"),months:\"január_február_marec_apríl_máj_jún_júl_august_september_október_november_december\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec\".split(\"_\"),weekStart:1,yearStart:4,ordinal:function(e){return e+\".\"},formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd D. MMMM YYYY H:mm\",l:\"D. M. YYYY\"},relativeTime:{future:\"za %s\",past:\"pred %s\",s:o,m:o,mm:o,h:o,hh:o,d:o,dd:o,M:o,MM:o,y:o,yy:o}};return n.default.locale(a,null,!0),a}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_sl=t(e.dayjs)}(this,(function(e){\"use strict\";function t(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var _=t(e),n={name:\"sl\",weekdays:\"nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota\".split(\"_\"),months:\"januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december\".split(\"_\"),weekStart:1,weekdaysShort:\"ned._pon._tor._sre._čet._pet._sob.\".split(\"_\"),monthsShort:\"jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.\".split(\"_\"),weekdaysMin:\"ne_po_to_sr_če_pe_so\".split(\"_\"),ordinal:function(e){return e+\".\"},formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY H:mm\",LLLL:\"dddd, D. MMMM YYYY H:mm\"},relativeTime:{future:\"čez %s\",past:\"pred %s\",s:\"nekaj sekund\",m:\"minuta\",mm:\"%d minut\",h:\"ura\",hh:\"%d ur\",d:\"dan\",dd:\"%d dni\",M:\"mesec\",MM:\"%d mesecev\",y:\"leto\",yy:\"%d let\"}};return _.default.locale(n,null,!0),n}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_sv=t(e.dayjs)}(this,(function(e){\"use strict\";function t(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var a=t(e),d={name:\"sv\",weekdays:\"söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag\".split(\"_\"),weekdaysShort:\"sön_mån_tis_ons_tor_fre_lör\".split(\"_\"),weekdaysMin:\"sö_må_ti_on_to_fr_lö\".split(\"_\"),months:\"januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),weekStart:1,yearStart:4,ordinal:function(e){var t=e%10;return\"[\"+e+(1===t||2===t?\"a\":\"e\")+\"]\"},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY-MM-DD\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY [kl.] HH:mm\",LLLL:\"dddd D MMMM YYYY [kl.] HH:mm\",lll:\"D MMM YYYY HH:mm\",llll:\"ddd D MMM YYYY HH:mm\"},relativeTime:{future:\"om %s\",past:\"för %s sedan\",s:\"några sekunder\",m:\"en minut\",mm:\"%d minuter\",h:\"en timme\",hh:\"%d timmar\",d:\"en dag\",dd:\"%d dagar\",M:\"en månad\",MM:\"%d månader\",y:\"ett år\",yy:\"%d år\"}};return a.default.locale(d,null,!0),d}));","!function(_,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],e):(_=\"undefined\"!=typeof globalThis?globalThis:_||self).dayjs_locale_th=e(_.dayjs)}(this,(function(_){\"use strict\";function e(_){return _&&\"object\"==typeof _&&\"default\"in _?_:{default:_}}var t=e(_),d={name:\"th\",weekdays:\"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์\".split(\"_\"),weekdaysShort:\"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์\".split(\"_\"),weekdaysMin:\"อา._จ._อ._พ._พฤ._ศ._ส.\".split(\"_\"),months:\"มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม\".split(\"_\"),monthsShort:\"ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.\".split(\"_\"),formats:{LT:\"H:mm\",LTS:\"H:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY เวลา H:mm\",LLLL:\"วันddddที่ D MMMM YYYY เวลา H:mm\"},relativeTime:{future:\"อีก %s\",past:\"%sที่แล้ว\",s:\"ไม่กี่วินาที\",m:\"1 นาที\",mm:\"%d นาที\",h:\"1 ชั่วโมง\",hh:\"%d ชั่วโมง\",d:\"1 วัน\",dd:\"%d วัน\",M:\"1 เดือน\",MM:\"%d เดือน\",y:\"1 ปี\",yy:\"%d ปี\"},ordinal:function(_){return _+\".\"}};return t.default.locale(d,null,!0),d}));","!function(a,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],e):(a=\"undefined\"!=typeof globalThis?globalThis:a||self).dayjs_locale_tr=e(a.dayjs)}(this,(function(a){\"use strict\";function e(a){return a&&\"object\"==typeof a&&\"default\"in a?a:{default:a}}var t=e(a),_={name:\"tr\",weekdays:\"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi\".split(\"_\"),weekdaysShort:\"Paz_Pts_Sal_Çar_Per_Cum_Cts\".split(\"_\"),weekdaysMin:\"Pz_Pt_Sa_Ça_Pe_Cu_Ct\".split(\"_\"),months:\"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık\".split(\"_\"),monthsShort:\"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara\".split(\"_\"),weekStart:1,formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},relativeTime:{future:\"%s sonra\",past:\"%s önce\",s:\"birkaç saniye\",m:\"bir dakika\",mm:\"%d dakika\",h:\"bir saat\",hh:\"%d saat\",d:\"bir gün\",dd:\"%d gün\",M:\"bir ay\",MM:\"%d ay\",y:\"bir yıl\",yy:\"%d yıl\"},ordinal:function(a){return a+\".\"}};return t.default.locale(_,null,!0),_}));","!function(_,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],e):(_=\"undefined\"!=typeof globalThis?globalThis:_||self).dayjs_locale_uk=e(_.dayjs)}(this,(function(_){\"use strict\";function e(_){return _&&\"object\"==typeof _&&\"default\"in _?_:{default:_}}var t=e(_),s=\"січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня\".split(\"_\"),n=\"січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень\".split(\"_\"),o=/D[oD]?(\\[[^[\\]]*\\]|\\s)+MMMM?/;function d(_,e,t){var s,n;return\"m\"===t?e?\"хвилина\":\"хвилину\":\"h\"===t?e?\"година\":\"годину\":_+\" \"+(s=+_,n={ss:e?\"секунда_секунди_секунд\":\"секунду_секунди_секунд\",mm:e?\"хвилина_хвилини_хвилин\":\"хвилину_хвилини_хвилин\",hh:e?\"година_години_годин\":\"годину_години_годин\",dd:\"день_дні_днів\",MM:\"місяць_місяці_місяців\",yy:\"рік_роки_років\"}[t].split(\"_\"),s%10==1&&s%100!=11?n[0]:s%10>=2&&s%10<=4&&(s%100<10||s%100>=20)?n[1]:n[2])}var i=function(_,e){return o.test(e)?s[_.month()]:n[_.month()]};i.s=n,i.f=s;var r={name:\"uk\",weekdays:\"неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота\".split(\"_\"),weekdaysShort:\"ндл_пнд_втр_срд_чтв_птн_сбт\".split(\"_\"),weekdaysMin:\"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),months:i,monthsShort:\"січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд\".split(\"_\"),weekStart:1,relativeTime:{future:\"за %s\",past:\"%s тому\",s:\"декілька секунд\",m:d,mm:d,h:d,hh:d,d:\"день\",dd:d,M:\"місяць\",MM:d,y:\"рік\",yy:d},ordinal:function(_){return _},formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D MMMM YYYY р.\",LLL:\"D MMMM YYYY р., HH:mm\",LLLL:\"dddd, D MMMM YYYY р., HH:mm\"}};return t.default.locale(r,null,!0),r}));","!function(e,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],_):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_zh=_(e.dayjs)}(this,(function(e){\"use strict\";function _(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var t=_(e),d={name:\"zh\",weekdays:\"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),weekdaysShort:\"周日_周一_周二_周三_周四_周五_周六\".split(\"_\"),weekdaysMin:\"日_一_二_三_四_五_六\".split(\"_\"),months:\"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),monthsShort:\"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),ordinal:function(e,_){return\"W\"===_?e+\"周\":e+\"日\"},weekStart:1,yearStart:4,formats:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"YYYY/MM/DD\",LL:\"YYYY年M月D日\",LLL:\"YYYY年M月D日Ah点mm分\",LLLL:\"YYYY年M月D日ddddAh点mm分\",l:\"YYYY/M/D\",ll:\"YYYY年M月D日\",lll:\"YYYY年M月D日 HH:mm\",llll:\"YYYY年M月D日dddd HH:mm\"},relativeTime:{future:\"%s后\",past:\"%s前\",s:\"几秒\",m:\"1 分钟\",mm:\"%d 分钟\",h:\"1 小时\",hh:\"%d 小时\",d:\"1 天\",dd:\"%d 天\",M:\"1 个月\",MM:\"%d 个月\",y:\"1 年\",yy:\"%d 年\"},meridiem:function(e,_){var t=100*e+_;return t<600?\"凌晨\":t<900?\"早上\":t<1100?\"上午\":t<1300?\"中午\":t<1800?\"下午\":\"晚上\"}};return t.default.locale(d,null,!0),d}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_customParseFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},t=/(\\[[^[]*\\])|([-_:/.,()\\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\\d\\d/,r=/\\d\\d?/,i=/\\d*[^-_:/,()\\s\\d]+/,o={},s=function(e){return(e=+e)+(e>68?1900:2e3)};var a=function(e){return function(t){this[e]=+t}},f=[/[+-]\\d\\d:?(\\d\\d)?|Z/,function(e){(this.zone||(this.zone={})).offset=function(e){if(!e)return 0;if(\"Z\"===e)return 0;var t=e.match(/([+-]|\\d\\d)/g),n=60*t[1]+(+t[2]||0);return 0===n?0:\"+\"===t[0]?-n:n}(e)}],h=function(e){var t=o[e];return t&&(t.indexOf?t:t.s.concat(t.f))},u=function(e,t){var n,r=o.meridiem;if(r){for(var i=1;i<=24;i+=1)if(e.indexOf(r(i,0,t))>-1){n=i>12;break}}else n=e===(t?\"pm\":\"PM\");return n},d={A:[i,function(e){this.afternoon=u(e,!1)}],a:[i,function(e){this.afternoon=u(e,!0)}],S:[/\\d/,function(e){this.milliseconds=100*+e}],SS:[n,function(e){this.milliseconds=10*+e}],SSS:[/\\d{3}/,function(e){this.milliseconds=+e}],s:[r,a(\"seconds\")],ss:[r,a(\"seconds\")],m:[r,a(\"minutes\")],mm:[r,a(\"minutes\")],H:[r,a(\"hours\")],h:[r,a(\"hours\")],HH:[r,a(\"hours\")],hh:[r,a(\"hours\")],D:[r,a(\"day\")],DD:[n,a(\"day\")],Do:[i,function(e){var t=o.ordinal,n=e.match(/\\d+/);if(this.day=n[0],t)for(var r=1;r<=31;r+=1)t(r).replace(/\\[|\\]/g,\"\")===e&&(this.day=r)}],M:[r,a(\"month\")],MM:[n,a(\"month\")],MMM:[i,function(e){var t=h(\"months\"),n=(h(\"monthsShort\")||t.map((function(e){return e.slice(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[i,function(e){var t=h(\"months\").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\\d+/,a(\"year\")],YY:[n,function(e){this.year=s(e)}],YYYY:[/\\d{4}/,a(\"year\")],Z:f,ZZ:f};function c(n){var r,i;r=n,i=o&&o.formats;for(var s=(n=r.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var o=r&&r.toUpperCase();return n||i[r]||e[r]||i[o].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}))).match(t),a=s.length,f=0;f<a;f+=1){var h=s[f],u=d[h],c=u&&u[0],l=u&&u[1];s[f]=l?{regex:c,parser:l}:h.replace(/^\\[|\\]$/g,\"\")}return function(e){for(var t={},n=0,r=0;n<a;n+=1){var i=s[n];if(\"string\"==typeof i)r+=i.length;else{var o=i.regex,f=i.parser,h=e.slice(r),u=o.exec(h)[0];f.call(t,u),e=e.replace(u,\"\")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}return function(e,t,n){n.p.customParseFormat=!0,e&&e.parseTwoDigitYear&&(s=e.parseTwoDigitYear);var r=t.prototype,i=r.parse;r.parse=function(e){var t=e.date,r=e.utc,s=e.args;this.$u=r;var a=s[1];if(\"string\"==typeof a){var f=!0===s[2],h=!0===s[3],u=f||h,d=s[2];h&&(d=s[2]),o=this.$locale(),!f&&d&&(o=n.Ls[d]),this.$d=function(e,t,n){try{if([\"x\",\"X\"].indexOf(t)>-1)return new Date((\"X\"===t?1e3:1)*e);var r=c(t)(e),i=r.year,o=r.month,s=r.day,a=r.hours,f=r.minutes,h=r.seconds,u=r.milliseconds,d=r.zone,l=new Date,m=s||(i||o?1:l.getDate()),M=i||l.getFullYear(),Y=0;i&&!o||(Y=o>0?o-1:l.getMonth());var p=a||0,v=f||0,D=h||0,g=u||0;return d?new Date(Date.UTC(M,Y,m,p,v,D,g+60*d.offset*1e3)):n?new Date(Date.UTC(M,Y,m,p,v,D,g)):new Date(M,Y,m,p,v,D,g)}catch(e){return new Date(\"\")}}(t,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),u&&t!=this.format(a)&&(this.$d=new Date(\"\")),o={}}else if(a instanceof Array)for(var l=a.length,m=1;m<=l;m+=1){s[1]=a[m-1];var M=n.apply(this,s);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===l&&(this.$d=new Date(\"\"))}else i.call(this,e)}}}));","!function(n,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(n=\"undefined\"!=typeof globalThis?globalThis:n||self).dayjs_plugin_localeData=e()}(this,(function(){\"use strict\";return function(n,e,t){var r=e.prototype,o=function(n){return n&&(n.indexOf?n:n.s)},u=function(n,e,t,r,u){var i=n.name?n:n.$locale(),a=o(i[e]),s=o(i[t]),f=a||s.map((function(n){return n.slice(0,r)}));if(!u)return f;var d=i.weekStart;return f.map((function(n,e){return f[(e+(d||0))%7]}))},i=function(){return t.Ls[t.locale()]},a=function(n,e){return n.formats[e]||function(n){return n.replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(n,e,t){return e||t.slice(1)}))}(n.formats[e.toUpperCase()])},s=function(){var n=this;return{months:function(e){return e?e.format(\"MMMM\"):u(n,\"months\")},monthsShort:function(e){return e?e.format(\"MMM\"):u(n,\"monthsShort\",\"months\",3)},firstDayOfWeek:function(){return n.$locale().weekStart||0},weekdays:function(e){return e?e.format(\"dddd\"):u(n,\"weekdays\")},weekdaysMin:function(e){return e?e.format(\"dd\"):u(n,\"weekdaysMin\",\"weekdays\",2)},weekdaysShort:function(e){return e?e.format(\"ddd\"):u(n,\"weekdaysShort\",\"weekdays\",3)},longDateFormat:function(e){return a(n.$locale(),e)},meridiem:this.$locale().meridiem,ordinal:this.$locale().ordinal}};r.localeData=function(){return s.bind(this)()},t.localeData=function(){var n=i();return{firstDayOfWeek:function(){return n.weekStart||0},weekdays:function(){return t.weekdays()},weekdaysShort:function(){return t.weekdaysShort()},weekdaysMin:function(){return t.weekdaysMin()},months:function(){return t.months()},monthsShort:function(){return t.monthsShort()},longDateFormat:function(e){return a(n,e)},meridiem:n.meridiem,ordinal:n.ordinal}},t.months=function(){return u(i(),\"months\")},t.monthsShort=function(){return u(i(),\"monthsShort\",\"months\",3)},t.weekdays=function(n){return u(i(),\"weekdays\",null,null,n)},t.weekdaysShort=function(n){return u(i(),\"weekdaysShort\",\"weekdays\",3,n)},t.weekdaysMin=function(n){return u(i(),\"weekdaysMin\",\"weekdays\",2,n)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_localizedFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"};return function(t,o,n){var r=o.prototype,i=r.format;n.en.formats=e,r.format=function(t){void 0===t&&(t=\"YYYY-MM-DDTHH:mm:ssZ\");var o=this.$locale().formats,n=function(t,o){return t.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var i=r&&r.toUpperCase();return n||o[r]||e[r]||o[i].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,o){return t||o.slice(1)}))}))}(t,void 0===o?{}:o);return i.call(this,n)}}}));","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n// The Emitter class provides the ability to call `.on()` on Dropzone to listen\n// to events.\n// It is strongly based on component's emitter class, and I removed the\n// functionality because of the dependency hell with different frameworks.\nvar Emitter = /*#__PURE__*/function () {\n  function Emitter() {\n    _classCallCheck(this, Emitter);\n  }\n\n  _createClass(Emitter, [{\n    key: \"on\",\n    // Add an event listener for given event\n    value: function on(event, fn) {\n      this._callbacks = this._callbacks || {}; // Create namespace for this event\n\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n\n      this._callbacks[event].push(fn);\n\n      return this;\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      this._callbacks = this._callbacks || {};\n      var callbacks = this._callbacks[event];\n\n      if (callbacks) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var _iterator = _createForOfIteratorHelper(callbacks),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var callback = _step.value;\n            callback.apply(this, args);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      return this;\n    } // Remove event listener for given event. If fn is not provided, all event\n    // listeners for that event will be removed. If neither is provided, all\n    // event listeners will be removed.\n\n  }, {\n    key: \"off\",\n    value: function off(event, fn) {\n      if (!this._callbacks || arguments.length === 0) {\n        this._callbacks = {};\n        return this;\n      } // specific event\n\n\n      var callbacks = this._callbacks[event];\n\n      if (!callbacks) {\n        return this;\n      } // remove all handlers\n\n\n      if (arguments.length === 1) {\n        delete this._callbacks[event];\n        return this;\n      } // remove specific handler\n\n\n      for (var i = 0; i < callbacks.length; i++) {\n        var callback = callbacks[i];\n\n        if (callback === fn) {\n          callbacks.splice(i, 1);\n          break;\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return Emitter;\n}();\n\nvar Dropzone = /*#__PURE__*/function (_Emitter) {\n  _inherits(Dropzone, _Emitter);\n\n  var _super = _createSuper(Dropzone);\n\n  _createClass(Dropzone, null, [{\n    key: \"initClass\",\n    value: function initClass() {\n      // Exposing the emitter class, mainly for tests\n      this.prototype.Emitter = Emitter;\n      /*\n       This is a list of all available events you can register on a dropzone object.\n        You can register an event handler like this:\n        dropzone.on(\"dragEnter\", function() { });\n        */\n\n      this.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n      this.prototype.defaultOptions = {\n        /**\n         * Has to be specified on elements other than form (or when the form\n         * doesn't have an `action` attribute). You can also\n         * provide a function that will be called with `files` and\n         * must return the url (since `v3.12.0`)\n         */\n        url: null,\n\n        /**\n         * Can be changed to `\"put\"` if necessary. You can also provide a function\n         * that will be called with `files` and must return the method (since `v3.12.0`).\n         */\n        method: \"post\",\n\n        /**\n         * Will be set on the XHRequest.\n         */\n        withCredentials: false,\n\n        /**\n         * The timeout for the XHR requests in milliseconds (since `v4.4.0`).\n         */\n        timeout: 30000,\n\n        /**\n         * How many file uploads to process in parallel (See the\n         * Enqueuing file uploads documentation section for more info)\n         */\n        parallelUploads: 2,\n\n        /**\n         * Whether to send multiple files in one request. If\n         * this it set to true, then the fallback file input element will\n         * have the `multiple` attribute as well. This option will\n         * also trigger additional events (like `processingmultiple`). See the events\n         * documentation section for more information.\n         */\n        uploadMultiple: false,\n\n        /**\n         * Whether you want files to be uploaded in chunks to your server. This can't be\n         * used in combination with `uploadMultiple`.\n         *\n         * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.\n         */\n        chunking: false,\n\n        /**\n         * If `chunking` is enabled, this defines whether **every** file should be chunked,\n         * even if the file size is below chunkSize. This means, that the additional chunk\n         * form data will be submitted and the `chunksUploaded` callback will be invoked.\n         */\n        forceChunking: false,\n\n        /**\n         * If `chunking` is `true`, then this defines the chunk size in bytes.\n         */\n        chunkSize: 2000000,\n\n        /**\n         * If `true`, the individual chunks of a file are being uploaded simultaneously.\n         */\n        parallelChunkUploads: false,\n\n        /**\n         * Whether a chunk should be retried if it fails.\n         */\n        retryChunks: false,\n\n        /**\n         * If `retryChunks` is true, how many times should it be retried.\n         */\n        retryChunksLimit: 3,\n\n        /**\n         * If not `null` defines how many files this Dropzone handles. If it exceeds,\n         * the event `maxfilesexceeded` will be called. The dropzone element gets the\n         * class `dz-max-files-reached` accordingly so you can provide visual feedback.\n         */\n        maxFilesize: 256,\n\n        /**\n         * The name of the file param that gets transferred.\n         * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then\n         * Dropzone will append `[]` to the name.\n         */\n        paramName: \"file\",\n\n        /**\n         * Whether thumbnails for images should be generated\n         */\n        createImageThumbnails: true,\n\n        /**\n         * In MB. When the filename exceeds this limit, the thumbnail will not be generated.\n         */\n        maxThumbnailFilesize: 10,\n\n        /**\n         * If `null`, the ratio of the image will be used to calculate it.\n         */\n        thumbnailWidth: 120,\n\n        /**\n         * The same as `thumbnailWidth`. If both are null, images will not be resized.\n         */\n        thumbnailHeight: 120,\n\n        /**\n         * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.\n         * Can be either `contain` or `crop`.\n         */\n        thumbnailMethod: 'crop',\n\n        /**\n         * If set, images will be resized to these dimensions before being **uploaded**.\n         * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect\n         * ratio of the file will be preserved.\n         *\n         * The `options.transformFile` function uses these options, so if the `transformFile` function\n         * is overridden, these options don't do anything.\n         */\n        resizeWidth: null,\n\n        /**\n         * See `resizeWidth`.\n         */\n        resizeHeight: null,\n\n        /**\n         * The mime type of the resized image (before it gets uploaded to the server).\n         * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.\n         * See `resizeWidth` for more information.\n         */\n        resizeMimeType: null,\n\n        /**\n         * The quality of the resized images. See `resizeWidth`.\n         */\n        resizeQuality: 0.8,\n\n        /**\n         * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.\n         * Can be either `contain` or `crop`.\n         */\n        resizeMethod: 'contain',\n\n        /**\n         * The base that is used to calculate the filesize. You can change this to\n         * 1024 if you would rather display kibibytes, mebibytes, etc...\n         * 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte` not `1 kilobyte`.\n         * You can change this to `1024` if you don't care about validity.\n         */\n        filesizeBase: 1000,\n\n        /**\n         * Can be used to limit the maximum number of files that will be handled by this Dropzone\n         */\n        maxFiles: null,\n\n        /**\n         * An optional object to send additional headers to the server. Eg:\n         * `{ \"My-Awesome-Header\": \"header value\" }`\n         */\n        headers: null,\n\n        /**\n         * If `true`, the dropzone element itself will be clickable, if `false`\n         * nothing will be clickable.\n         *\n         * You can also pass an HTML element, a CSS selector (for multiple elements)\n         * or an array of those. In that case, all of those elements will trigger an\n         * upload when clicked.\n         */\n        clickable: true,\n\n        /**\n         * Whether hidden files in directories should be ignored.\n         */\n        ignoreHiddenFiles: true,\n\n        /**\n         * The default implementation of `accept` checks the file's mime type or\n         * extension against this list. This is a comma separated list of mime\n         * types or file extensions.\n         *\n         * Eg.: `image/*,application/pdf,.psd`\n         *\n         * If the Dropzone is `clickable` this option will also be used as\n         * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)\n         * parameter on the hidden file input as well.\n         */\n        acceptedFiles: null,\n\n        /**\n         * **Deprecated!**\n         * Use acceptedFiles instead.\n         */\n        acceptedMimeTypes: null,\n\n        /**\n         * If false, files will be added to the queue but the queue will not be\n         * processed automatically.\n         * This can be useful if you need some additional user input before sending\n         * files (or if you want want all files sent at once).\n         * If you're ready to send the file simply call `myDropzone.processQueue()`.\n         *\n         * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation\n         * section for more information.\n         */\n        autoProcessQueue: true,\n\n        /**\n         * If false, files added to the dropzone will not be queued by default.\n         * You'll have to call `enqueueFile(file)` manually.\n         */\n        autoQueue: true,\n\n        /**\n         * If `true`, this will add a link to every file preview to remove or cancel (if\n         * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`\n         * and `dictRemoveFile` options are used for the wording.\n         */\n        addRemoveLinks: false,\n\n        /**\n         * Defines where to display the file previews – if `null` the\n         * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS\n         * selector. The element should have the `dropzone-previews` class so\n         * the previews are displayed properly.\n         */\n        previewsContainer: null,\n\n        /**\n         * This is the element the hidden input field (which is used when clicking on the\n         * dropzone to trigger file selection) will be appended to. This might\n         * be important in case you use frameworks to switch the content of your page.\n         *\n         * Can be a selector string, or an element directly.\n         */\n        hiddenInputContainer: \"body\",\n\n        /**\n         * If null, no capture type will be specified\n         * If camera, mobile devices will skip the file selection and choose camera\n         * If microphone, mobile devices will skip the file selection and choose the microphone\n         * If camcorder, mobile devices will skip the file selection and choose the camera in video mode\n         * On apple devices multiple must be set to false.  AcceptedFiles may need to\n         * be set to an appropriate mime type (e.g. \"image/*\", \"audio/*\", or \"video/*\").\n         */\n        capture: null,\n\n        /**\n         * **Deprecated**. Use `renameFile` instead.\n         */\n        renameFilename: null,\n\n        /**\n         * A function that is invoked before the file is uploaded to the server and renames the file.\n         * This function gets the `File` as argument and can use the `file.name`. The actual name of the\n         * file that gets used during the upload can be accessed through `file.upload.filename`.\n         */\n        renameFile: null,\n\n        /**\n         * If `true` the fallback will be forced. This is very useful to test your server\n         * implementations first and make sure that everything works as\n         * expected without dropzone if you experience problems, and to test\n         * how your fallbacks will look.\n         */\n        forceFallback: false,\n\n        /**\n         * The text used before any files are dropped.\n         */\n        dictDefaultMessage: \"Drop files here to upload\",\n\n        /**\n         * The text that replaces the default message text it the browser is not supported.\n         */\n        dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n\n        /**\n         * The text that will be added before the fallback form.\n         * If you provide a  fallback element yourself, or if this option is `null` this will\n         * be ignored.\n         */\n        dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n\n        /**\n         * If the filesize is too big.\n         * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.\n         */\n        dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n\n        /**\n         * If the file doesn't match the file type.\n         */\n        dictInvalidFileType: \"You can't upload files of this type.\",\n\n        /**\n         * If the server response was invalid.\n         * `{{statusCode}}` will be replaced with the servers status code.\n         */\n        dictResponseError: \"Server responded with {{statusCode}} code.\",\n\n        /**\n         * If `addRemoveLinks` is true, the text to be used for the cancel upload link.\n         */\n        dictCancelUpload: \"Cancel upload\",\n\n        /**\n         * The text that is displayed if an upload was manually canceled\n         */\n        dictUploadCanceled: \"Upload canceled.\",\n\n        /**\n         * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.\n         */\n        dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n\n        /**\n         * If `addRemoveLinks` is true, the text to be used to remove a file.\n         */\n        dictRemoveFile: \"Remove file\",\n\n        /**\n         * If this is not null, then the user will be prompted before removing a file.\n         */\n        dictRemoveFileConfirmation: null,\n\n        /**\n         * Displayed if `maxFiles` is st and exceeded.\n         * The string `{{maxFiles}}` will be replaced by the configuration value.\n         */\n        dictMaxFilesExceeded: \"You can not upload any more files.\",\n\n        /**\n         * Allows you to translate the different units. Starting with `tb` for terabytes and going down to\n         * `b` for bytes.\n         */\n        dictFileSizeUnits: {\n          tb: \"TB\",\n          gb: \"GB\",\n          mb: \"MB\",\n          kb: \"KB\",\n          b: \"b\"\n        },\n\n        /**\n         * Called when dropzone initialized\n         * You can add event listeners here\n         */\n        init: function init() {},\n\n        /**\n         * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`\n         * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case\n         * of a function, this needs to return a map.\n         *\n         * The default implementation does nothing for normal uploads, but adds relevant information for\n         * chunked uploads.\n         *\n         * This is the same as adding hidden input fields in the form element.\n         */\n        params: function params(files, xhr, chunk) {\n          if (chunk) {\n            return {\n              dzuuid: chunk.file.upload.uuid,\n              dzchunkindex: chunk.index,\n              dztotalfilesize: chunk.file.size,\n              dzchunksize: this.options.chunkSize,\n              dztotalchunkcount: chunk.file.upload.totalChunkCount,\n              dzchunkbyteoffset: chunk.index * this.options.chunkSize\n            };\n          }\n        },\n\n        /**\n         * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)\n         * and a `done` function as parameters.\n         *\n         * If the done function is invoked without arguments, the file is \"accepted\" and will\n         * be processed. If you pass an error message, the file is rejected, and the error\n         * message will be displayed.\n         * This function will not be called if the file is too big or doesn't match the mime types.\n         */\n        accept: function accept(file, done) {\n          return done();\n        },\n\n        /**\n         * The callback that will be invoked when all chunks have been uploaded for a file.\n         * It gets the file for which the chunks have been uploaded as the first parameter,\n         * and the `done` function as second. `done()` needs to be invoked when everything\n         * needed to finish the upload process is done.\n         */\n        chunksUploaded: function chunksUploaded(file, done) {\n          done();\n        },\n\n        /**\n         * Gets called when the browser is not supported.\n         * The default implementation shows the fallback input field and adds\n         * a text.\n         */\n        fallback: function fallback() {\n          // This code should pass in IE7... :(\n          var messageElement;\n          this.element.className = \"\".concat(this.element.className, \" dz-browser-not-supported\");\n\n          var _iterator2 = _createForOfIteratorHelper(this.element.getElementsByTagName(\"div\")),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var child = _step2.value;\n\n              if (/(^| )dz-message($| )/.test(child.className)) {\n                messageElement = child;\n                child.className = \"dz-message\"; // Removes the 'dz-default' class\n\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          if (!messageElement) {\n            messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n            this.element.appendChild(messageElement);\n          }\n\n          var span = messageElement.getElementsByTagName(\"span\")[0];\n\n          if (span) {\n            if (span.textContent != null) {\n              span.textContent = this.options.dictFallbackMessage;\n            } else if (span.innerText != null) {\n              span.innerText = this.options.dictFallbackMessage;\n            }\n          }\n\n          return this.element.appendChild(this.getFallbackForm());\n        },\n\n        /**\n         * Gets called to calculate the thumbnail dimensions.\n         *\n         * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:\n         *\n         *  - `srcWidth` & `srcHeight` (required)\n         *  - `trgWidth` & `trgHeight` (required)\n         *  - `srcX` & `srcY` (optional, default `0`)\n         *  - `trgX` & `trgY` (optional, default `0`)\n         *\n         * Those values are going to be used by `ctx.drawImage()`.\n         */\n        resize: function resize(file, width, height, resizeMethod) {\n          var info = {\n            srcX: 0,\n            srcY: 0,\n            srcWidth: file.width,\n            srcHeight: file.height\n          };\n          var srcRatio = file.width / file.height; // Automatically calculate dimensions if not specified\n\n          if (width == null && height == null) {\n            width = info.srcWidth;\n            height = info.srcHeight;\n          } else if (width == null) {\n            width = height * srcRatio;\n          } else if (height == null) {\n            height = width / srcRatio;\n          } // Make sure images aren't upscaled\n\n\n          width = Math.min(width, info.srcWidth);\n          height = Math.min(height, info.srcHeight);\n          var trgRatio = width / height;\n\n          if (info.srcWidth > width || info.srcHeight > height) {\n            // Image is bigger and needs rescaling\n            if (resizeMethod === 'crop') {\n              if (srcRatio > trgRatio) {\n                info.srcHeight = file.height;\n                info.srcWidth = info.srcHeight * trgRatio;\n              } else {\n                info.srcWidth = file.width;\n                info.srcHeight = info.srcWidth / trgRatio;\n              }\n            } else if (resizeMethod === 'contain') {\n              // Method 'contain'\n              if (srcRatio > trgRatio) {\n                height = width / srcRatio;\n              } else {\n                width = height * srcRatio;\n              }\n            } else {\n              throw new Error(\"Unknown resizeMethod '\".concat(resizeMethod, \"'\"));\n            }\n          }\n\n          info.srcX = (file.width - info.srcWidth) / 2;\n          info.srcY = (file.height - info.srcHeight) / 2;\n          info.trgWidth = width;\n          info.trgHeight = height;\n          return info;\n        },\n\n        /**\n         * Can be used to transform the file (for example, resize an image if necessary).\n         *\n         * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes\n         * images according to those dimensions.\n         *\n         * Gets the `file` as the first parameter, and a `done()` function as the second, that needs\n         * to be invoked with the file when the transformation is done.\n         */\n        transformFile: function transformFile(file, done) {\n          if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) {\n            return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n          } else {\n            return done(file);\n          }\n        },\n\n        /**\n         * A string that contains the template used for each dropped\n         * file. Change it to fulfill your needs but make sure to properly\n         * provide all elements.\n         *\n         * If you want to use an actual HTML element instead of providing a String\n         * as a config option, you could create a div with the id `tpl`,\n         * put the template inside it and provide the element like this:\n         *\n         *     document\n         *       .querySelector('#tpl')\n         *       .innerHTML\n         *\n         */\n        previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n      <title>Check</title>\\n      <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n      <title>Error</title>\\n      <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <g stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\",\n        // END OPTIONS\n        // (Required by the dropzone documentation parser)\n\n        /*\n         Those functions register themselves to the events on init and handle all\n         the user interface specific stuff. Overwriting them won't break the upload\n         but can break the way it's displayed.\n         You can overwrite them if you don't like the default behavior. If you just\n         want to add an additional event handler, register it on the dropzone object\n         and don't overwrite those options.\n         */\n        // Those are self explanatory and simply concern the DragnDrop.\n        drop: function drop(e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n        },\n        dragstart: function dragstart(e) {},\n        dragend: function dragend(e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n        },\n        dragenter: function dragenter(e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n        },\n        dragover: function dragover(e) {\n          return this.element.classList.add(\"dz-drag-hover\");\n        },\n        dragleave: function dragleave(e) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n        },\n        paste: function paste(e) {},\n        // Called whenever there are no files left in the dropzone anymore, and the\n        // dropzone should be displayed as if in the initial state.\n        reset: function reset() {\n          return this.element.classList.remove(\"dz-started\");\n        },\n        // Called when a file is added to the queue\n        // Receives `file`\n        addedfile: function addedfile(file) {\n          var _this2 = this;\n\n          if (this.element === this.previewsContainer) {\n            this.element.classList.add(\"dz-started\");\n          }\n\n          if (this.previewsContainer) {\n            file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n            file.previewTemplate = file.previewElement; // Backwards compatibility\n\n            this.previewsContainer.appendChild(file.previewElement);\n\n            var _iterator3 = _createForOfIteratorHelper(file.previewElement.querySelectorAll(\"[data-dz-name]\")),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var node = _step3.value;\n                node.textContent = file.name;\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n\n            var _iterator4 = _createForOfIteratorHelper(file.previewElement.querySelectorAll(\"[data-dz-size]\")),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                node = _step4.value;\n                node.innerHTML = this.filesize(file.size);\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n\n            if (this.options.addRemoveLinks) {\n              file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\".concat(this.options.dictRemoveFile, \"</a>\"));\n              file.previewElement.appendChild(file._removeLink);\n            }\n\n            var removeFileEvent = function removeFileEvent(e) {\n              e.preventDefault();\n              e.stopPropagation();\n\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this2.options.dictCancelUploadConfirmation, function () {\n                  return _this2.removeFile(file);\n                });\n              } else {\n                if (_this2.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this2.options.dictRemoveFileConfirmation, function () {\n                    return _this2.removeFile(file);\n                  });\n                } else {\n                  return _this2.removeFile(file);\n                }\n              }\n            };\n\n            var _iterator5 = _createForOfIteratorHelper(file.previewElement.querySelectorAll(\"[data-dz-remove]\")),\n                _step5;\n\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var removeLink = _step5.value;\n                removeLink.addEventListener(\"click\", removeFileEvent);\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          }\n        },\n        // Called whenever a file is removed.\n        removedfile: function removedfile(file) {\n          if (file.previewElement != null && file.previewElement.parentNode != null) {\n            file.previewElement.parentNode.removeChild(file.previewElement);\n          }\n\n          return this._updateMaxFilesReachedClass();\n        },\n        // Called when a thumbnail has been generated\n        // Receives `file` and `dataUrl`\n        thumbnail: function thumbnail(file, dataUrl) {\n          if (file.previewElement) {\n            file.previewElement.classList.remove(\"dz-file-preview\");\n\n            var _iterator6 = _createForOfIteratorHelper(file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\")),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var thumbnailElement = _step6.value;\n                thumbnailElement.alt = file.name;\n                thumbnailElement.src = dataUrl;\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n\n            return setTimeout(function () {\n              return file.previewElement.classList.add(\"dz-image-preview\");\n            }, 1);\n          }\n        },\n        // Called whenever an error occurs\n        // Receives `file` and `message`\n        error: function error(file, message) {\n          if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-error\");\n\n            if (typeof message !== \"string\" && message.error) {\n              message = message.error;\n            }\n\n            var _iterator7 = _createForOfIteratorHelper(file.previewElement.querySelectorAll(\"[data-dz-errormessage]\")),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var node = _step7.value;\n                node.textContent = message;\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n          }\n        },\n        errormultiple: function errormultiple() {},\n        // Called when a file gets processed. Since there is a cue, not all added\n        // files are processed immediately.\n        // Receives `file`\n        processing: function processing(file) {\n          if (file.previewElement) {\n            file.previewElement.classList.add(\"dz-processing\");\n\n            if (file._removeLink) {\n              return file._removeLink.innerHTML = this.options.dictCancelUpload;\n            }\n          }\n        },\n        processingmultiple: function processingmultiple() {},\n        // Called whenever the upload progress gets updated.\n        // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.\n        // To get the total number of bytes of the file, use `file.size`\n        uploadprogress: function uploadprogress(file, progress, bytesSent) {\n          if (file.previewElement) {\n            var _iterator8 = _createForOfIteratorHelper(file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\")),\n                _step8;\n\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var node = _step8.value;\n                node.nodeName === 'PROGRESS' ? node.value = progress : node.style.width = \"\".concat(progress, \"%\");\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n          }\n        },\n        // Called whenever the total upload progress gets updated.\n        // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent\n        totaluploadprogress: function totaluploadprogress() {},\n        // Called just before the file is sent. Gets the `xhr` object as second\n        // parameter, so you can modify it (for example to add a CSRF token) and a\n        // `formData` object to add additional information.\n        sending: function sending() {},\n        sendingmultiple: function sendingmultiple() {},\n        // When the complete upload is finished and successful\n        // Receives `file`\n        success: function success(file) {\n          if (file.previewElement) {\n            return file.previewElement.classList.add(\"dz-success\");\n          }\n        },\n        successmultiple: function successmultiple() {},\n        // When the upload is canceled.\n        canceled: function canceled(file) {\n          return this.emit(\"error\", file, this.options.dictUploadCanceled);\n        },\n        canceledmultiple: function canceledmultiple() {},\n        // When the upload is finished, either with success or an error.\n        // Receives `file`\n        complete: function complete(file) {\n          if (file._removeLink) {\n            file._removeLink.innerHTML = this.options.dictRemoveFile;\n          }\n\n          if (file.previewElement) {\n            return file.previewElement.classList.add(\"dz-complete\");\n          }\n        },\n        completemultiple: function completemultiple() {},\n        maxfilesexceeded: function maxfilesexceeded() {},\n        maxfilesreached: function maxfilesreached() {},\n        queuecomplete: function queuecomplete() {},\n        addedfiles: function addedfiles() {}\n      };\n      this.prototype._thumbnailQueue = [];\n      this.prototype._processingThumbnail = false;\n    } // global utility\n\n  }, {\n    key: \"extend\",\n    value: function extend(target) {\n      for (var _len2 = arguments.length, objects = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        objects[_key2 - 1] = arguments[_key2];\n      }\n\n      for (var _i = 0, _objects = objects; _i < _objects.length; _i++) {\n        var object = _objects[_i];\n\n        for (var key in object) {\n          var val = object[key];\n          target[key] = val;\n        }\n      }\n\n      return target;\n    }\n  }]);\n\n  function Dropzone(el, options) {\n    var _this;\n\n    _classCallCheck(this, Dropzone);\n\n    _this = _super.call(this);\n    var fallback, left;\n    _this.element = el; // For backwards compatibility since the version was in the prototype previously\n\n    _this.version = Dropzone.version;\n    _this.defaultOptions.previewTemplate = _this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n    _this.clickableElements = [];\n    _this.listeners = [];\n    _this.files = []; // All files\n\n    if (typeof _this.element === \"string\") {\n      _this.element = document.querySelector(_this.element);\n    } // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.\n\n\n    if (!_this.element || _this.element.nodeType == null) {\n      throw new Error(\"Invalid dropzone element.\");\n    }\n\n    if (_this.element.dropzone) {\n      throw new Error(\"Dropzone already attached.\");\n    } // Now add this dropzone to the instances.\n\n\n    Dropzone.instances.push(_assertThisInitialized(_this)); // Put the dropzone inside the element itself.\n\n    _this.element.dropzone = _assertThisInitialized(_this);\n    var elementOptions = (left = Dropzone.optionsForElement(_this.element)) != null ? left : {};\n    _this.options = Dropzone.extend({}, _this.defaultOptions, elementOptions, options != null ? options : {}); // If the browser failed, just call the fallback and leave\n\n    if (_this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n      return _possibleConstructorReturn(_this, _this.options.fallback.call(_assertThisInitialized(_this)));\n    } // @options.url = @element.getAttribute \"action\" unless @options.url?\n\n\n    if (_this.options.url == null) {\n      _this.options.url = _this.element.getAttribute(\"action\");\n    }\n\n    if (!_this.options.url) {\n      throw new Error(\"No URL provided.\");\n    }\n\n    if (_this.options.acceptedFiles && _this.options.acceptedMimeTypes) {\n      throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n    }\n\n    if (_this.options.uploadMultiple && _this.options.chunking) {\n      throw new Error('You cannot set both: uploadMultiple and chunking.');\n    } // Backwards compatibility\n\n\n    if (_this.options.acceptedMimeTypes) {\n      _this.options.acceptedFiles = _this.options.acceptedMimeTypes;\n      delete _this.options.acceptedMimeTypes;\n    } // Backwards compatibility\n\n\n    if (_this.options.renameFilename != null) {\n      _this.options.renameFile = function (file) {\n        return _this.options.renameFilename.call(_assertThisInitialized(_this), file.name, file);\n      };\n    }\n\n    if (typeof _this.options.method === 'string') {\n      _this.options.method = _this.options.method.toUpperCase();\n    }\n\n    if ((fallback = _this.getExistingFallback()) && fallback.parentNode) {\n      // Remove the fallback\n      fallback.parentNode.removeChild(fallback);\n    } // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false\n\n\n    if (_this.options.previewsContainer !== false) {\n      if (_this.options.previewsContainer) {\n        _this.previewsContainer = Dropzone.getElement(_this.options.previewsContainer, \"previewsContainer\");\n      } else {\n        _this.previewsContainer = _this.element;\n      }\n    }\n\n    if (_this.options.clickable) {\n      if (_this.options.clickable === true) {\n        _this.clickableElements = [_this.element];\n      } else {\n        _this.clickableElements = Dropzone.getElements(_this.options.clickable, \"clickable\");\n      }\n    }\n\n    _this.init();\n\n    return _this;\n  } // Returns all files that have been accepted\n\n\n  _createClass(Dropzone, [{\n    key: \"getAcceptedFiles\",\n    value: function getAcceptedFiles() {\n      return this.files.filter(function (file) {\n        return file.accepted;\n      }).map(function (file) {\n        return file;\n      });\n    } // Returns all files that have been rejected\n    // Not sure when that's going to be useful, but added for completeness.\n\n  }, {\n    key: \"getRejectedFiles\",\n    value: function getRejectedFiles() {\n      return this.files.filter(function (file) {\n        return !file.accepted;\n      }).map(function (file) {\n        return file;\n      });\n    }\n  }, {\n    key: \"getFilesWithStatus\",\n    value: function getFilesWithStatus(status) {\n      return this.files.filter(function (file) {\n        return file.status === status;\n      }).map(function (file) {\n        return file;\n      });\n    } // Returns all files that are in the queue\n\n  }, {\n    key: \"getQueuedFiles\",\n    value: function getQueuedFiles() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    }\n  }, {\n    key: \"getUploadingFiles\",\n    value: function getUploadingFiles() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    }\n  }, {\n    key: \"getAddedFiles\",\n    value: function getAddedFiles() {\n      return this.getFilesWithStatus(Dropzone.ADDED);\n    } // Files that are either queued or uploading\n\n  }, {\n    key: \"getActiveFiles\",\n    value: function getActiveFiles() {\n      return this.files.filter(function (file) {\n        return file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED;\n      }).map(function (file) {\n        return file;\n      });\n    } // The function that gets called when Dropzone is initialized. You\n    // can (and should) setup event listeners inside this function.\n\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this3 = this;\n\n      // In case it isn't set already\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><button class=\\\"dz-button\\\" type=\\\"button\\\">\".concat(this.options.dictDefaultMessage, \"</button></div>\")));\n      }\n\n      if (this.clickableElements.length) {\n        var setupHiddenFileInput = function setupHiddenFileInput() {\n          if (_this3.hiddenFileInput) {\n            _this3.hiddenFileInput.parentNode.removeChild(_this3.hiddenFileInput);\n          }\n\n          _this3.hiddenFileInput = document.createElement(\"input\");\n\n          _this3.hiddenFileInput.setAttribute(\"type\", \"file\");\n\n          if (_this3.options.maxFiles === null || _this3.options.maxFiles > 1) {\n            _this3.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n          }\n\n          _this3.hiddenFileInput.className = \"dz-hidden-input\";\n\n          if (_this3.options.acceptedFiles !== null) {\n            _this3.hiddenFileInput.setAttribute(\"accept\", _this3.options.acceptedFiles);\n          }\n\n          if (_this3.options.capture !== null) {\n            _this3.hiddenFileInput.setAttribute(\"capture\", _this3.options.capture);\n          } // Not setting `display=\"none\"` because some browsers don't accept clicks\n          // on elements that aren't displayed.\n\n\n          _this3.hiddenFileInput.style.visibility = \"hidden\";\n          _this3.hiddenFileInput.style.position = \"absolute\";\n          _this3.hiddenFileInput.style.top = \"0\";\n          _this3.hiddenFileInput.style.left = \"0\";\n          _this3.hiddenFileInput.style.height = \"0\";\n          _this3.hiddenFileInput.style.width = \"0\";\n          Dropzone.getElement(_this3.options.hiddenInputContainer, 'hiddenInputContainer').appendChild(_this3.hiddenFileInput);\n          return _this3.hiddenFileInput.addEventListener(\"change\", function () {\n            var files = _this3.hiddenFileInput.files;\n\n            if (files.length) {\n              var _iterator9 = _createForOfIteratorHelper(files),\n                  _step9;\n\n              try {\n                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                  var file = _step9.value;\n\n                  _this3.addFile(file);\n                }\n              } catch (err) {\n                _iterator9.e(err);\n              } finally {\n                _iterator9.f();\n              }\n            }\n\n            _this3.emit(\"addedfiles\", files);\n\n            return setupHiddenFileInput();\n          });\n        };\n\n        setupHiddenFileInput();\n      }\n\n      this.URL = window.URL !== null ? window.URL : window.webkitURL; // Setup all event listeners on the Dropzone object itself.\n      // They're not in @setupEventListeners() because they shouldn't be removed\n      // again when the dropzone gets disabled.\n\n      var _iterator10 = _createForOfIteratorHelper(this.events),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var eventName = _step10.value;\n          this.on(eventName, this.options[eventName]);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      this.on(\"uploadprogress\", function () {\n        return _this3.updateTotalUploadProgress();\n      });\n      this.on(\"removedfile\", function () {\n        return _this3.updateTotalUploadProgress();\n      });\n      this.on(\"canceled\", function (file) {\n        return _this3.emit(\"complete\", file);\n      }); // Emit a `queuecomplete` event if all files finished uploading.\n\n      this.on(\"complete\", function (file) {\n        if (_this3.getAddedFiles().length === 0 && _this3.getUploadingFiles().length === 0 && _this3.getQueuedFiles().length === 0) {\n          // This needs to be deferred so that `queuecomplete` really triggers after `complete`\n          return setTimeout(function () {\n            return _this3.emit(\"queuecomplete\");\n          }, 0);\n        }\n      });\n\n      var containsFiles = function containsFiles(e) {\n        if (e.dataTransfer.types) {\n          // Because e.dataTransfer.types is an Object in\n          // IE, we need to iterate like this instead of\n          // using e.dataTransfer.types.some()\n          for (var i = 0; i < e.dataTransfer.types.length; i++) {\n            if (e.dataTransfer.types[i] === \"Files\") return true;\n          }\n        }\n\n        return false;\n      };\n\n      var noPropagation = function noPropagation(e) {\n        // If there are no files, we don't want to stop\n        // propagation so we don't interfere with other\n        // drag and drop behaviour.\n        if (!containsFiles(e)) return;\n        e.stopPropagation();\n\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      }; // Create the listeners\n\n\n      this.listeners = [{\n        element: this.element,\n        events: {\n          \"dragstart\": function dragstart(e) {\n            return _this3.emit(\"dragstart\", e);\n          },\n          \"dragenter\": function dragenter(e) {\n            noPropagation(e);\n            return _this3.emit(\"dragenter\", e);\n          },\n          \"dragover\": function dragover(e) {\n            // Makes it possible to drag files from chrome's download bar\n            // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n            // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)\n            var efct;\n\n            try {\n              efct = e.dataTransfer.effectAllowed;\n            } catch (error) {}\n\n            e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n            noPropagation(e);\n            return _this3.emit(\"dragover\", e);\n          },\n          \"dragleave\": function dragleave(e) {\n            return _this3.emit(\"dragleave\", e);\n          },\n          \"drop\": function drop(e) {\n            noPropagation(e);\n            return _this3.drop(e);\n          },\n          \"dragend\": function dragend(e) {\n            return _this3.emit(\"dragend\", e);\n          }\n        } // This is disabled right now, because the browsers don't implement it properly.\n        // \"paste\": (e) =>\n        //   noPropagation e\n        //   @paste e\n\n      }];\n      this.clickableElements.forEach(function (clickableElement) {\n        return _this3.listeners.push({\n          element: clickableElement,\n          events: {\n            \"click\": function click(evt) {\n              // Only the actual dropzone or the message element should trigger file selection\n              if (clickableElement !== _this3.element || evt.target === _this3.element || Dropzone.elementInside(evt.target, _this3.element.querySelector(\".dz-message\"))) {\n                _this3.hiddenFileInput.click(); // Forward the click\n\n              }\n\n              return true;\n            }\n          }\n        });\n      });\n      this.enable();\n      return this.options.init.call(this);\n    } // Not fully tested yet\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.disable();\n      this.removeAllFiles(true);\n\n      if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    }\n  }, {\n    key: \"updateTotalUploadProgress\",\n    value: function updateTotalUploadProgress() {\n      var totalUploadProgress;\n      var totalBytesSent = 0;\n      var totalBytes = 0;\n      var activeFiles = this.getActiveFiles();\n\n      if (activeFiles.length) {\n        var _iterator11 = _createForOfIteratorHelper(this.getActiveFiles()),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var file = _step11.value;\n            totalBytesSent += file.upload.bytesSent;\n            totalBytes += file.upload.total;\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    } // @options.paramName can be a function taking one parameter rather than a string.\n    // A parameter name for a file is obtained simply by calling this with an index number.\n\n  }, {\n    key: \"_getParamName\",\n    value: function _getParamName(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\".concat(this.options.paramName).concat(this.options.uploadMultiple ? \"[\".concat(n, \"]\") : \"\");\n      }\n    } // If @options.renameFile is a function,\n    // the function will be used to rename the file.name before appending it to the formData\n\n  }, {\n    key: \"_renameFile\",\n    value: function _renameFile(file) {\n      if (typeof this.options.renameFile !== \"function\") {\n        return file.name;\n      }\n\n      return this.options.renameFile(file);\n    } // Returns a form that can be used as fallback if the browser does not support DragnDrop\n    //\n    // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.\n    // This code has to pass in IE7 :(\n\n  }, {\n    key: \"getFallbackForm\",\n    value: function getFallbackForm() {\n      var existingFallback, form;\n\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n\n      var fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\".concat(this.options.dictFallbackText, \"</p>\");\n      }\n\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\".concat(this._getParamName(0), \"\\\" \").concat(this.options.uploadMultiple ? 'multiple=\"multiple\"' : undefined, \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\");\n      var fields = Dropzone.createElement(fieldsString);\n\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\".concat(this.options.url, \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\").concat(this.options.method, \"\\\"></form>\"));\n        form.appendChild(fields);\n      } else {\n        // Make sure that the enctype and method attributes are set properly\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n\n      return form != null ? form : fields;\n    } // Returns the fallback elements if they exist already\n    //\n    // This code has to pass in IE7 :(\n\n  }, {\n    key: \"getExistingFallback\",\n    value: function getExistingFallback() {\n      var getFallback = function getFallback(elements) {\n        var _iterator12 = _createForOfIteratorHelper(elements),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var el = _step12.value;\n\n            if (/(^| )fallback($| )/.test(el.className)) {\n              return el;\n            }\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n      };\n\n      for (var _i2 = 0, _arr = [\"div\", \"form\"]; _i2 < _arr.length; _i2++) {\n        var tagName = _arr[_i2];\n        var fallback;\n\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    } // Activates all listeners stored in @listeners\n\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      return this.listeners.map(function (elementListeners) {\n        return function () {\n          var result = [];\n\n          for (var event in elementListeners.events) {\n            var listener = elementListeners.events[event];\n            result.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n\n          return result;\n        }();\n      });\n    } // Deactivates all listeners stored in @listeners\n\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners() {\n      return this.listeners.map(function (elementListeners) {\n        return function () {\n          var result = [];\n\n          for (var event in elementListeners.events) {\n            var listener = elementListeners.events[event];\n            result.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n\n          return result;\n        }();\n      });\n    } // Removes all event listeners and cancels all files in the queue or being processed.\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      var _this4 = this;\n\n      this.clickableElements.forEach(function (element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      this.disabled = true;\n      return this.files.map(function (file) {\n        return _this4.cancelUpload(file);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      delete this.disabled;\n      this.clickableElements.forEach(function (element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    } // Returns a nicely formatted filesize\n\n  }, {\n    key: \"filesize\",\n    value: function filesize(size) {\n      var selectedSize = 0;\n      var selectedUnit = \"b\";\n\n      if (size > 0) {\n        var units = ['tb', 'gb', 'mb', 'kb', 'b'];\n\n        for (var i = 0; i < units.length; i++) {\n          var unit = units[i];\n          var cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n\n          if (size >= cutoff) {\n            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n            selectedUnit = unit;\n            break;\n          }\n        }\n\n        selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits\n      }\n\n      return \"<strong>\".concat(selectedSize, \"</strong> \").concat(this.options.dictFileSizeUnits[selectedUnit]);\n    } // Adds or removes the `dz-max-files-reached` class from the form.\n\n  }, {\n    key: \"_updateMaxFilesReachedClass\",\n    value: function _updateMaxFilesReachedClass() {\n      if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(e) {\n      if (!e.dataTransfer) {\n        return;\n      }\n\n      this.emit(\"drop\", e); // Convert the FileList to an Array\n      // This is necessary for IE11\n\n      var files = [];\n\n      for (var i = 0; i < e.dataTransfer.files.length; i++) {\n        files[i] = e.dataTransfer.files[i];\n      } // Even if it's a folder, files.length will contain the folders.\n\n\n      if (files.length) {\n        var items = e.dataTransfer.items;\n\n        if (items && items.length && items[0].webkitGetAsEntry != null) {\n          // The browser supports dropping of folders, so handle items instead of files\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n\n      this.emit(\"addedfiles\", files);\n    }\n  }, {\n    key: \"paste\",\n    value: function paste(e) {\n      if (__guard__(e != null ? e.clipboardData : undefined, function (x) {\n        return x.items;\n      }) == null) {\n        return;\n      }\n\n      this.emit(\"paste\", e);\n      var items = e.clipboardData.items;\n\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function handleFiles(files) {\n      var _iterator13 = _createForOfIteratorHelper(files),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var file = _step13.value;\n          this.addFile(file);\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    } // When a folder is dropped (or files are pasted), items must be handled\n    // instead of files.\n\n  }, {\n    key: \"_addFilesFromItems\",\n    value: function _addFilesFromItems(items) {\n      var _this5 = this;\n\n      return function () {\n        var result = [];\n\n        var _iterator14 = _createForOfIteratorHelper(items),\n            _step14;\n\n        try {\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            var item = _step14.value;\n            var entry;\n\n            if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {\n              if (entry.isFile) {\n                result.push(_this5.addFile(item.getAsFile()));\n              } else if (entry.isDirectory) {\n                // Append all files from that directory to files\n                result.push(_this5._addFilesFromDirectory(entry, entry.name));\n              } else {\n                result.push(undefined);\n              }\n            } else if (item.getAsFile != null) {\n              if (item.kind == null || item.kind === \"file\") {\n                result.push(_this5.addFile(item.getAsFile()));\n              } else {\n                result.push(undefined);\n              }\n            } else {\n              result.push(undefined);\n            }\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n\n        return result;\n      }();\n    } // Goes through the directory, and adds each file it finds recursively\n\n  }, {\n    key: \"_addFilesFromDirectory\",\n    value: function _addFilesFromDirectory(directory, path) {\n      var _this6 = this;\n\n      var dirReader = directory.createReader();\n\n      var errorHandler = function errorHandler(error) {\n        return __guardMethod__(console, 'log', function (o) {\n          return o.log(error);\n        });\n      };\n\n      var readEntries = function readEntries() {\n        return dirReader.readEntries(function (entries) {\n          if (entries.length > 0) {\n            var _iterator15 = _createForOfIteratorHelper(entries),\n                _step15;\n\n            try {\n              for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                var entry = _step15.value;\n\n                if (entry.isFile) {\n                  entry.file(function (file) {\n                    if (_this6.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                      return;\n                    }\n\n                    file.fullPath = \"\".concat(path, \"/\").concat(file.name);\n                    return _this6.addFile(file);\n                  });\n                } else if (entry.isDirectory) {\n                  _this6._addFilesFromDirectory(entry, \"\".concat(path, \"/\").concat(entry.name));\n                }\n              } // Recursively call readEntries() again, since browser only handle\n              // the first 100 entries.\n              // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries\n\n            } catch (err) {\n              _iterator15.e(err);\n            } finally {\n              _iterator15.f();\n            }\n\n            readEntries();\n          }\n\n          return null;\n        }, errorHandler);\n      };\n\n      return readEntries();\n    } // If `done()` is called without argument the file is accepted\n    // If you call it with an error message, the file is rejected\n    // (This allows for asynchronous validation)\n    //\n    // This function checks the filesize, and if the file.type passes the\n    // `acceptedFiles` check.\n\n  }, {\n    key: \"accept\",\n    value: function accept(file, done) {\n      if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1024 * 1024) {\n        done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        done(this.options.dictInvalidFileType);\n      } else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        this.emit(\"maxfilesexceeded\", file);\n      } else {\n        this.options.accept.call(this, file, done);\n      }\n    }\n  }, {\n    key: \"addFile\",\n    value: function addFile(file) {\n      var _this7 = this;\n\n      file.upload = {\n        uuid: Dropzone.uuidv4(),\n        progress: 0,\n        // Setting the total upload size to file.size for the beginning\n        // It's actual different than the size to be transmitted.\n        total: file.size,\n        bytesSent: 0,\n        filename: this._renameFile(file) // Not setting chunking information here, because the acutal data — and\n        // thus the chunks — might change if `options.transformFile` is set\n        // and does something to the data.\n\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n\n      this._enqueueThumbnail(file);\n\n      this.accept(file, function (error) {\n        if (error) {\n          file.accepted = false;\n\n          _this7._errorProcessing([file], error); // Will set the file.status\n\n        } else {\n          file.accepted = true;\n\n          if (_this7.options.autoQueue) {\n            _this7.enqueueFile(file);\n          } // Will set .accepted = true\n\n        }\n\n        _this7._updateMaxFilesReachedClass();\n      });\n    } // Wrapper for enqueueFile\n\n  }, {\n    key: \"enqueueFiles\",\n    value: function enqueueFiles(files) {\n      var _iterator16 = _createForOfIteratorHelper(files),\n          _step16;\n\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var file = _step16.value;\n          this.enqueueFile(file);\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"enqueueFile\",\n    value: function enqueueFile(file) {\n      var _this8 = this;\n\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n\n        if (this.options.autoProcessQueue) {\n          return setTimeout(function () {\n            return _this8.processQueue();\n          }, 0); // Deferring the call\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    }\n  }, {\n    key: \"_enqueueThumbnail\",\n    value: function _enqueueThumbnail(file) {\n      var _this9 = this;\n\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n\n        return setTimeout(function () {\n          return _this9._processThumbnailQueue();\n        }, 0); // Deferring the call\n      }\n    }\n  }, {\n    key: \"_processThumbnailQueue\",\n    value: function _processThumbnailQueue() {\n      var _this10 = this;\n\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n\n      this._processingThumbnail = true;\n\n      var file = this._thumbnailQueue.shift();\n\n      return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, function (dataUrl) {\n        _this10.emit(\"thumbnail\", file, dataUrl);\n\n        _this10._processingThumbnail = false;\n        return _this10._processThumbnailQueue();\n      });\n    } // Can be called by the user to remove a file\n\n  }, {\n    key: \"removeFile\",\n    value: function removeFile(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    } // Removes all files that aren't currently processed from the list\n\n  }, {\n    key: \"removeAllFiles\",\n    value: function removeAllFiles(cancelIfNecessary) {\n      // Create a copy of files since removeFile() changes the @files array.\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n\n      var _iterator17 = _createForOfIteratorHelper(this.files.slice()),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var file = _step17.value;\n\n          if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n            this.removeFile(file);\n          }\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n\n      return null;\n    } // Resizes an image before it gets sent to the server. This function is the default behavior of\n    // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with\n    // the resized blob.\n\n  }, {\n    key: \"resizeImage\",\n    value: function resizeImage(file, width, height, resizeMethod, callback) {\n      var _this11 = this;\n\n      return this.createThumbnail(file, width, height, resizeMethod, true, function (dataUrl, canvas) {\n        if (canvas == null) {\n          // The image has not been resized\n          return callback(file);\n        } else {\n          var resizeMimeType = _this11.options.resizeMimeType;\n\n          if (resizeMimeType == null) {\n            resizeMimeType = file.type;\n          }\n\n          var resizedDataURL = canvas.toDataURL(resizeMimeType, _this11.options.resizeQuality);\n\n          if (resizeMimeType === 'image/jpeg' || resizeMimeType === 'image/jpg') {\n            // Now add the original EXIF information\n            resizedDataURL = ExifRestore.restore(file.dataURL, resizedDataURL);\n          }\n\n          return callback(Dropzone.dataURItoBlob(resizedDataURL));\n        }\n      });\n    }\n  }, {\n    key: \"createThumbnail\",\n    value: function createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {\n      var _this12 = this;\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        file.dataURL = fileReader.result; // Don't bother creating a thumbnail for SVG images since they're vector\n\n        if (file.type === \"image/svg+xml\") {\n          if (callback != null) {\n            callback(fileReader.result);\n          }\n\n          return;\n        }\n\n        _this12.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n      };\n\n      fileReader.readAsDataURL(file);\n    } // `mockFile` needs to have these attributes:\n    // \n    //     { name: 'name', size: 12345, imageUrl: '' }\n    //\n    // `callback` will be invoked when the image has been downloaded and displayed.\n    // `crossOrigin` will be added to the `img` tag when accessing the file.\n\n  }, {\n    key: \"displayExistingFile\",\n    value: function displayExistingFile(mockFile, imageUrl, callback, crossOrigin) {\n      var _this13 = this;\n\n      var resizeThumbnail = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n      this.emit(\"addedfile\", mockFile);\n      this.emit(\"complete\", mockFile);\n\n      if (!resizeThumbnail) {\n        this.emit(\"thumbnail\", mockFile, imageUrl);\n        if (callback) callback();\n      } else {\n        var onDone = function onDone(thumbnail) {\n          _this13.emit('thumbnail', mockFile, thumbnail);\n\n          if (callback) callback();\n        };\n\n        mockFile.dataURL = imageUrl;\n        this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.resizeMethod, this.options.fixOrientation, onDone, crossOrigin);\n      }\n    }\n  }, {\n    key: \"createThumbnailFromUrl\",\n    value: function createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n      var _this14 = this;\n\n      // Not using `new Image` here because of a bug in latest Chrome versions.\n      // See https://github.com/enyo/dropzone/pull/226\n      var img = document.createElement(\"img\");\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      } // fixOrientation is not needed anymore with browsers handling imageOrientation\n\n\n      fixOrientation = getComputedStyle(document.body)['imageOrientation'] == 'from-image' ? false : fixOrientation;\n\n      img.onload = function () {\n        var loadExif = function loadExif(callback) {\n          return callback(1);\n        };\n\n        if (typeof EXIF !== 'undefined' && EXIF !== null && fixOrientation) {\n          loadExif = function loadExif(callback) {\n            return EXIF.getData(img, function () {\n              return callback(EXIF.getTag(this, 'Orientation'));\n            });\n          };\n        }\n\n        return loadExif(function (orientation) {\n          file.width = img.width;\n          file.height = img.height;\n\n          var resizeInfo = _this14.options.resize.call(_this14, file, width, height, resizeMethod);\n\n          var canvas = document.createElement(\"canvas\");\n          var ctx = canvas.getContext(\"2d\");\n          canvas.width = resizeInfo.trgWidth;\n          canvas.height = resizeInfo.trgHeight;\n\n          if (orientation > 4) {\n            canvas.width = resizeInfo.trgHeight;\n            canvas.height = resizeInfo.trgWidth;\n          }\n\n          switch (orientation) {\n            case 2:\n              // horizontal flip\n              ctx.translate(canvas.width, 0);\n              ctx.scale(-1, 1);\n              break;\n\n            case 3:\n              // 180° rotate left\n              ctx.translate(canvas.width, canvas.height);\n              ctx.rotate(Math.PI);\n              break;\n\n            case 4:\n              // vertical flip\n              ctx.translate(0, canvas.height);\n              ctx.scale(1, -1);\n              break;\n\n            case 5:\n              // vertical flip + 90 rotate right\n              ctx.rotate(0.5 * Math.PI);\n              ctx.scale(1, -1);\n              break;\n\n            case 6:\n              // 90° rotate right\n              ctx.rotate(0.5 * Math.PI);\n              ctx.translate(0, -canvas.width);\n              break;\n\n            case 7:\n              // horizontal flip + 90 rotate right\n              ctx.rotate(0.5 * Math.PI);\n              ctx.translate(canvas.height, -canvas.width);\n              ctx.scale(-1, 1);\n              break;\n\n            case 8:\n              // 90° rotate left\n              ctx.rotate(-0.5 * Math.PI);\n              ctx.translate(-canvas.height, 0);\n              break;\n          } // This is a bugfix for iOS' scaling bug.\n\n\n          drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n          var thumbnail = canvas.toDataURL(\"image/png\");\n\n          if (callback != null) {\n            return callback(thumbnail, canvas);\n          }\n        });\n      };\n\n      if (callback != null) {\n        img.onerror = callback;\n      }\n\n      return img.src = file.dataURL;\n    } // Goes through the queue and processes files if there aren't too many already.\n\n  }, {\n    key: \"processQueue\",\n    value: function processQueue() {\n      var parallelUploads = this.options.parallelUploads;\n      var processingLength = this.getUploadingFiles().length;\n      var i = processingLength; // There are already at least as many files uploading than should be\n\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n\n      var queuedFiles = this.getQueuedFiles();\n\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n\n      if (this.options.uploadMultiple) {\n        // The files should be uploaded in one request\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          } // Nothing left to process\n\n\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    } // Wrapper for `processFiles`\n\n  }, {\n    key: \"processFile\",\n    value: function processFile(file) {\n      return this.processFiles([file]);\n    } // Loads the file, then calls finishedLoading()\n\n  }, {\n    key: \"processFiles\",\n    value: function processFiles(files) {\n      var _iterator18 = _createForOfIteratorHelper(files),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var file = _step18.value;\n          file.processing = true; // Backwards compatibility\n\n          file.status = Dropzone.UPLOADING;\n          this.emit(\"processing\", file);\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n\n      return this.uploadFiles(files);\n    }\n  }, {\n    key: \"_getFilesWithXhr\",\n    value: function _getFilesWithXhr(xhr) {\n      var files;\n      return files = this.files.filter(function (file) {\n        return file.xhr === xhr;\n      }).map(function (file) {\n        return file;\n      });\n    } // Cancels the file upload and sets the status to CANCELED\n    // **if** the file is actually being uploaded.\n    // If it's still in the queue, the file is being removed from it and the status\n    // set to CANCELED.\n\n  }, {\n    key: \"cancelUpload\",\n    value: function cancelUpload(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        var groupedFiles = this._getFilesWithXhr(file.xhr);\n\n        var _iterator19 = _createForOfIteratorHelper(groupedFiles),\n            _step19;\n\n        try {\n          for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n            var groupedFile = _step19.value;\n            groupedFile.status = Dropzone.CANCELED;\n          }\n        } catch (err) {\n          _iterator19.e(err);\n        } finally {\n          _iterator19.f();\n        }\n\n        if (typeof file.xhr !== 'undefined') {\n          file.xhr.abort();\n        }\n\n        var _iterator20 = _createForOfIteratorHelper(groupedFiles),\n            _step20;\n\n        try {\n          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n            var _groupedFile = _step20.value;\n            this.emit(\"canceled\", _groupedFile);\n          }\n        } catch (err) {\n          _iterator20.e(err);\n        } finally {\n          _iterator20.f();\n        }\n\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if (file.status === Dropzone.ADDED || file.status === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    }\n  }, {\n    key: \"resolveOption\",\n    value: function resolveOption(option) {\n      if (typeof option === 'function') {\n        for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          args[_key3 - 1] = arguments[_key3];\n        }\n\n        return option.apply(this, args);\n      }\n\n      return option;\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function uploadFile(file) {\n      return this.uploadFiles([file]);\n    }\n  }, {\n    key: \"uploadFiles\",\n    value: function uploadFiles(files) {\n      var _this15 = this;\n\n      this._transformFiles(files, function (transformedFiles) {\n        if (_this15.options.chunking) {\n          // Chunking is not allowed to be used with `uploadMultiple` so we know\n          // that there is only __one__file.\n          var transformedFile = transformedFiles[0];\n          files[0].upload.chunked = _this15.options.chunking && (_this15.options.forceChunking || transformedFile.size > _this15.options.chunkSize);\n          files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / _this15.options.chunkSize);\n        }\n\n        if (files[0].upload.chunked) {\n          // This file should be sent in chunks!\n          // If the chunking option is set, we **know** that there can only be **one** file, since\n          // uploadMultiple is not allowed with this option.\n          var file = files[0];\n          var _transformedFile = transformedFiles[0];\n          var startedChunkCount = 0;\n          file.upload.chunks = [];\n\n          var handleNextChunk = function handleNextChunk() {\n            var chunkIndex = 0; // Find the next item in file.upload.chunks that is not defined yet.\n\n            while (file.upload.chunks[chunkIndex] !== undefined) {\n              chunkIndex++;\n            } // This means, that all chunks have already been started.\n\n\n            if (chunkIndex >= file.upload.totalChunkCount) return;\n            startedChunkCount++;\n            var start = chunkIndex * _this15.options.chunkSize;\n            var end = Math.min(start + _this15.options.chunkSize, _transformedFile.size);\n            var dataBlock = {\n              name: _this15._getParamName(0),\n              data: _transformedFile.webkitSlice ? _transformedFile.webkitSlice(start, end) : _transformedFile.slice(start, end),\n              filename: file.upload.filename,\n              chunkIndex: chunkIndex\n            };\n            file.upload.chunks[chunkIndex] = {\n              file: file,\n              index: chunkIndex,\n              dataBlock: dataBlock,\n              // In case we want to retry.\n              status: Dropzone.UPLOADING,\n              progress: 0,\n              retries: 0 // The number of times this block has been retried.\n\n            };\n\n            _this15._uploadData(files, [dataBlock]);\n          };\n\n          file.upload.finishedChunkUpload = function (chunk) {\n            var allFinished = true;\n            chunk.status = Dropzone.SUCCESS; // Clear the data from the chunk\n\n            chunk.dataBlock = null; // Leaving this reference to xhr intact here will cause memory leaks in some browsers\n\n            chunk.xhr = null;\n\n            for (var i = 0; i < file.upload.totalChunkCount; i++) {\n              if (file.upload.chunks[i] === undefined) {\n                return handleNextChunk();\n              }\n\n              if (file.upload.chunks[i].status !== Dropzone.SUCCESS) {\n                allFinished = false;\n              }\n            }\n\n            if (allFinished) {\n              _this15.options.chunksUploaded(file, function () {\n                _this15._finished(files, '', null);\n              });\n            }\n          };\n\n          if (_this15.options.parallelChunkUploads) {\n            for (var i = 0; i < file.upload.totalChunkCount; i++) {\n              handleNextChunk();\n            }\n          } else {\n            handleNextChunk();\n          }\n        } else {\n          var dataBlocks = [];\n\n          for (var _i3 = 0; _i3 < files.length; _i3++) {\n            dataBlocks[_i3] = {\n              name: _this15._getParamName(_i3),\n              data: transformedFiles[_i3],\n              filename: files[_i3].upload.filename\n            };\n          }\n\n          _this15._uploadData(files, dataBlocks);\n        }\n      });\n    } /// Returns the right chunk for given file and xhr\n\n  }, {\n    key: \"_getChunk\",\n    value: function _getChunk(file, xhr) {\n      for (var i = 0; i < file.upload.totalChunkCount; i++) {\n        if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) {\n          return file.upload.chunks[i];\n        }\n      }\n    } // This function actually uploads the file(s) to the server.\n    // If dataBlocks contains the actual data to upload (meaning, that this could either be transformed\n    // files, or individual chunks for chunked upload).\n\n  }, {\n    key: \"_uploadData\",\n    value: function _uploadData(files, dataBlocks) {\n      var _this16 = this;\n\n      var xhr = new XMLHttpRequest(); // Put the xhr object in the file objects to be able to reference it later.\n\n      var _iterator21 = _createForOfIteratorHelper(files),\n          _step21;\n\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          var file = _step21.value;\n          file.xhr = xhr;\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n\n      if (files[0].upload.chunked) {\n        // Put the xhr object in the right chunk object, so it can be associated later, and found with _getChunk\n        files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;\n      }\n\n      var method = this.resolveOption(this.options.method, files);\n      var url = this.resolveOption(this.options.url, files);\n      xhr.open(method, url, true); // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8\n\n      xhr.timeout = this.resolveOption(this.options.timeout, files); // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n\n      xhr.withCredentials = !!this.options.withCredentials;\n\n      xhr.onload = function (e) {\n        _this16._finishedUploading(files, xhr, e);\n      };\n\n      xhr.ontimeout = function () {\n        _this16._handleUploadError(files, xhr, \"Request timedout after \".concat(_this16.options.timeout / 1000, \" seconds\"));\n      };\n\n      xhr.onerror = function () {\n        _this16._handleUploadError(files, xhr);\n      }; // Some browsers do not have the .upload property\n\n\n      var progressObj = xhr.upload != null ? xhr.upload : xhr;\n\n      progressObj.onprogress = function (e) {\n        return _this16._updateFilesUploadProgress(files, xhr, e);\n      };\n\n      var headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n\n      if (this.options.headers) {\n        Dropzone.extend(headers, this.options.headers);\n      }\n\n      for (var headerName in headers) {\n        var headerValue = headers[headerName];\n\n        if (headerValue) {\n          xhr.setRequestHeader(headerName, headerValue);\n        }\n      }\n\n      var formData = new FormData(); // Adding all @options parameters\n\n      if (this.options.params) {\n        var additionalParams = this.options.params;\n\n        if (typeof additionalParams === 'function') {\n          additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);\n        }\n\n        for (var key in additionalParams) {\n          var value = additionalParams[key];\n\n          if (Array.isArray(value)) {\n            // The additional parameter contains an array,\n            // so lets iterate over it to attach each value\n            // individually.\n            for (var i = 0; i < value.length; i++) {\n              formData.append(key, value[i]);\n            }\n          } else {\n            formData.append(key, value);\n          }\n        }\n      } // Let the user add additional data if necessary\n\n\n      var _iterator22 = _createForOfIteratorHelper(files),\n          _step22;\n\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var _file = _step22.value;\n          this.emit(\"sending\", _file, xhr, formData);\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n\n      this._addFormElementData(formData); // Finally add the files\n      // Has to be last because some servers (eg: S3) expect the file to be the last parameter\n\n\n      for (var _i4 = 0; _i4 < dataBlocks.length; _i4++) {\n        var dataBlock = dataBlocks[_i4];\n        formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);\n      }\n\n      this.submitRequest(xhr, formData, files);\n    } // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.\n\n  }, {\n    key: \"_transformFiles\",\n    value: function _transformFiles(files, done) {\n      var _this17 = this;\n\n      var transformedFiles = []; // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.\n\n      var doneCounter = 0;\n\n      var _loop = function _loop(i) {\n        _this17.options.transformFile.call(_this17, files[i], function (transformedFile) {\n          transformedFiles[i] = transformedFile;\n\n          if (++doneCounter === files.length) {\n            done(transformedFiles);\n          }\n        });\n      };\n\n      for (var i = 0; i < files.length; i++) {\n        _loop(i);\n      }\n    } // Takes care of adding other input elements of the form to the AJAX request\n\n  }, {\n    key: \"_addFormElementData\",\n    value: function _addFormElementData(formData) {\n      // Take care of other input elements\n      if (this.element.tagName === \"FORM\") {\n        var _iterator23 = _createForOfIteratorHelper(this.element.querySelectorAll(\"input, textarea, select, button\")),\n            _step23;\n\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var input = _step23.value;\n            var inputName = input.getAttribute(\"name\");\n            var inputType = input.getAttribute(\"type\");\n            if (inputType) inputType = inputType.toLowerCase(); // If the input doesn't have a name, we can't use it.\n\n            if (typeof inputName === 'undefined' || inputName === null) continue;\n\n            if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n              // Possibly multiple values\n              var _iterator24 = _createForOfIteratorHelper(input.options),\n                  _step24;\n\n              try {\n                for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                  var option = _step24.value;\n\n                  if (option.selected) {\n                    formData.append(inputName, option.value);\n                  }\n                }\n              } catch (err) {\n                _iterator24.e(err);\n              } finally {\n                _iterator24.f();\n              }\n            } else if (!inputType || inputType !== \"checkbox\" && inputType !== \"radio\" || input.checked) {\n              formData.append(inputName, input.value);\n            }\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      }\n    } // Invoked when there is new progress information about given files.\n    // If e is not provided, it is assumed that the upload is finished.\n\n  }, {\n    key: \"_updateFilesUploadProgress\",\n    value: function _updateFilesUploadProgress(files, xhr, e) {\n      var progress;\n\n      if (typeof e !== 'undefined') {\n        progress = 100 * e.loaded / e.total;\n\n        if (files[0].upload.chunked) {\n          var file = files[0]; // Since this is a chunked upload, we need to update the appropriate chunk progress.\n\n          var chunk = this._getChunk(file, xhr);\n\n          chunk.progress = progress;\n          chunk.total = e.total;\n          chunk.bytesSent = e.loaded;\n          var fileProgress = 0,\n              fileTotal,\n              fileBytesSent;\n          file.upload.progress = 0;\n          file.upload.total = 0;\n          file.upload.bytesSent = 0;\n\n          for (var i = 0; i < file.upload.totalChunkCount; i++) {\n            if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].progress !== undefined) {\n              file.upload.progress += file.upload.chunks[i].progress;\n              file.upload.total += file.upload.chunks[i].total;\n              file.upload.bytesSent += file.upload.chunks[i].bytesSent;\n            }\n          }\n\n          file.upload.progress = file.upload.progress / file.upload.totalChunkCount;\n        } else {\n          var _iterator25 = _createForOfIteratorHelper(files),\n              _step25;\n\n          try {\n            for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n              var _file2 = _step25.value;\n              _file2.upload.progress = progress;\n              _file2.upload.total = e.total;\n              _file2.upload.bytesSent = e.loaded;\n            }\n          } catch (err) {\n            _iterator25.e(err);\n          } finally {\n            _iterator25.f();\n          }\n        }\n\n        var _iterator26 = _createForOfIteratorHelper(files),\n            _step26;\n\n        try {\n          for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n            var _file3 = _step26.value;\n            this.emit(\"uploadprogress\", _file3, _file3.upload.progress, _file3.upload.bytesSent);\n          }\n        } catch (err) {\n          _iterator26.e(err);\n        } finally {\n          _iterator26.f();\n        }\n      } else {\n        // Called when the file finished uploading\n        var allFilesFinished = true;\n        progress = 100;\n\n        var _iterator27 = _createForOfIteratorHelper(files),\n            _step27;\n\n        try {\n          for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n            var _file4 = _step27.value;\n\n            if (_file4.upload.progress !== 100 || _file4.upload.bytesSent !== _file4.upload.total) {\n              allFilesFinished = false;\n            }\n\n            _file4.upload.progress = progress;\n            _file4.upload.bytesSent = _file4.upload.total;\n          } // Nothing to do, all files already at 100%\n\n        } catch (err) {\n          _iterator27.e(err);\n        } finally {\n          _iterator27.f();\n        }\n\n        if (allFilesFinished) {\n          return;\n        }\n\n        var _iterator28 = _createForOfIteratorHelper(files),\n            _step28;\n\n        try {\n          for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n            var _file5 = _step28.value;\n            this.emit(\"uploadprogress\", _file5, progress, _file5.upload.bytesSent);\n          }\n        } catch (err) {\n          _iterator28.e(err);\n        } finally {\n          _iterator28.f();\n        }\n      }\n    }\n  }, {\n    key: \"_finishedUploading\",\n    value: function _finishedUploading(files, xhr, e) {\n      var response;\n\n      if (files[0].status === Dropzone.CANCELED) {\n        return;\n      }\n\n      if (xhr.readyState !== 4) {\n        return;\n      }\n\n      if (xhr.responseType !== 'arraybuffer' && xhr.responseType !== 'blob') {\n        response = xhr.responseText;\n\n        if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            e = error;\n            response = \"Invalid JSON response from server.\";\n          }\n        }\n      }\n\n      this._updateFilesUploadProgress(files);\n\n      if (!(200 <= xhr.status && xhr.status < 300)) {\n        this._handleUploadError(files, xhr, response);\n      } else {\n        if (files[0].upload.chunked) {\n          files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr));\n        } else {\n          this._finished(files, response, e);\n        }\n      }\n    }\n  }, {\n    key: \"_handleUploadError\",\n    value: function _handleUploadError(files, xhr, response) {\n      if (files[0].status === Dropzone.CANCELED) {\n        return;\n      }\n\n      if (files[0].upload.chunked && this.options.retryChunks) {\n        var chunk = this._getChunk(files[0], xhr);\n\n        if (chunk.retries++ < this.options.retryChunksLimit) {\n          this._uploadData(files, [chunk.dataBlock]);\n\n          return;\n        } else {\n          console.warn('Retried this chunk too often. Giving up.');\n        }\n      }\n\n      this._errorProcessing(files, response || this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr);\n    }\n  }, {\n    key: \"submitRequest\",\n    value: function submitRequest(xhr, formData, files) {\n      xhr.send(formData);\n    } // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n\n  }, {\n    key: \"_finished\",\n    value: function _finished(files, responseText, e) {\n      var _iterator29 = _createForOfIteratorHelper(files),\n          _step29;\n\n      try {\n        for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n          var file = _step29.value;\n          file.status = Dropzone.SUCCESS;\n          this.emit(\"success\", file, responseText, e);\n          this.emit(\"complete\", file);\n        }\n      } catch (err) {\n        _iterator29.e(err);\n      } finally {\n        _iterator29.f();\n      }\n\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    } // Called internally when processing is finished.\n    // Individual callbacks have to be called in the appropriate sections.\n\n  }, {\n    key: \"_errorProcessing\",\n    value: function _errorProcessing(files, message, xhr) {\n      var _iterator30 = _createForOfIteratorHelper(files),\n          _step30;\n\n      try {\n        for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n          var file = _step30.value;\n          file.status = Dropzone.ERROR;\n          this.emit(\"error\", file, message, xhr);\n          this.emit(\"complete\", file);\n        }\n      } catch (err) {\n        _iterator30.e(err);\n      } finally {\n        _iterator30.f();\n      }\n\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    }\n  }], [{\n    key: \"uuidv4\",\n    value: function uuidv4() {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0,\n            v = c === 'x' ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n      });\n    }\n  }]);\n\n  return Dropzone;\n}(Emitter);\n\nDropzone.initClass();\nDropzone.version = \"5.7.2\"; // This is a map of options for your different dropzones. Add configurations\n// to this object for your different dropzone elemens.\n//\n// Example:\n//\n//     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };\n//\n// To disable autoDiscover for a specific element, you can set `false` as an option:\n//\n//     Dropzone.options.myDisabledElementId = false;\n//\n// And in html:\n//\n//     <form action=\"/upload\" id=\"my-dropzone-element-id\" class=\"dropzone\"></form>\n\nDropzone.options = {}; // Returns the options for an element or undefined if none available.\n\nDropzone.optionsForElement = function (element) {\n  // Get the `Dropzone.options.elementId` for this element if it exists\n  if (element.getAttribute(\"id\")) {\n    return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n  } else {\n    return undefined;\n  }\n}; // Holds a list of all dropzone instances\n\n\nDropzone.instances = []; // Returns the dropzone for given element if any\n\nDropzone.forElement = function (element) {\n  if (typeof element === \"string\") {\n    element = document.querySelector(element);\n  }\n\n  if ((element != null ? element.dropzone : undefined) == null) {\n    throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n  }\n\n  return element.dropzone;\n}; // Set to false if you don't want Dropzone to automatically find and attach to .dropzone elements.\n\n\nDropzone.autoDiscover = true; // Looks for all .dropzone elements and creates a dropzone for them\n\nDropzone.discover = function () {\n  var dropzones;\n\n  if (document.querySelectorAll) {\n    dropzones = document.querySelectorAll(\".dropzone\");\n  } else {\n    dropzones = []; // IE :(\n\n    var checkElements = function checkElements(elements) {\n      return function () {\n        var result = [];\n\n        var _iterator31 = _createForOfIteratorHelper(elements),\n            _step31;\n\n        try {\n          for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n            var el = _step31.value;\n\n            if (/(^| )dropzone($| )/.test(el.className)) {\n              result.push(dropzones.push(el));\n            } else {\n              result.push(undefined);\n            }\n          }\n        } catch (err) {\n          _iterator31.e(err);\n        } finally {\n          _iterator31.f();\n        }\n\n        return result;\n      }();\n    };\n\n    checkElements(document.getElementsByTagName(\"div\"));\n    checkElements(document.getElementsByTagName(\"form\"));\n  }\n\n  return function () {\n    var result = [];\n\n    var _iterator32 = _createForOfIteratorHelper(dropzones),\n        _step32;\n\n    try {\n      for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n        var dropzone = _step32.value;\n\n        // Create a dropzone unless auto discover has been disabled for specific element\n        if (Dropzone.optionsForElement(dropzone) !== false) {\n          result.push(new Dropzone(dropzone));\n        } else {\n          result.push(undefined);\n        }\n      }\n    } catch (err) {\n      _iterator32.e(err);\n    } finally {\n      _iterator32.f();\n    }\n\n    return result;\n  }();\n}; // Since the whole Drag'n'Drop API is pretty new, some browsers implement it,\n// but not correctly.\n// So I created a blacklist of userAgents. Yes, yes. Browser sniffing, I know.\n// But what to do when browsers *theoretically* support an API, but crash\n// when using it.\n//\n// This is a list of regular expressions tested against navigator.userAgent\n//\n// ** It should only be used on browser that *do* support the API, but\n// incorrectly **\n//\n\n\nDropzone.blacklistedBrowsers = [// The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.\n/opera.*(Macintosh|Windows Phone).*version\\/12/i]; // Checks if the browser is supported\n\nDropzone.isBrowserSupported = function () {\n  var capableBrowser = true;\n\n  if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n    if (!(\"classList\" in document.createElement(\"a\"))) {\n      capableBrowser = false;\n    } else {\n      // The browser supports the API, but may be blacklisted.\n      var _iterator33 = _createForOfIteratorHelper(Dropzone.blacklistedBrowsers),\n          _step33;\n\n      try {\n        for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n          var regex = _step33.value;\n\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      } catch (err) {\n        _iterator33.e(err);\n      } finally {\n        _iterator33.f();\n      }\n    }\n  } else {\n    capableBrowser = false;\n  }\n\n  return capableBrowser;\n};\n\nDropzone.dataURItoBlob = function (dataURI) {\n  // convert base64 to raw binary data held in a string\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n  var byteString = atob(dataURI.split(',')[1]); // separate out the mime component\n\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]; // write the bytes of the string to an ArrayBuffer\n\n  var ab = new ArrayBuffer(byteString.length);\n  var ia = new Uint8Array(ab);\n\n  for (var i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {\n    ia[i] = byteString.charCodeAt(i);\n  } // write the ArrayBuffer to a blob\n\n\n  return new Blob([ab], {\n    type: mimeString\n  });\n}; // Returns an array without the rejected item\n\n\nvar without = function without(list, rejectedItem) {\n  return list.filter(function (item) {\n    return item !== rejectedItem;\n  }).map(function (item) {\n    return item;\n  });\n}; // abc-def_ghi -> abcDefGhi\n\n\nvar camelize = function camelize(str) {\n  return str.replace(/[\\-_](\\w)/g, function (match) {\n    return match.charAt(1).toUpperCase();\n  });\n}; // Creates an element from string\n\n\nDropzone.createElement = function (string) {\n  var div = document.createElement(\"div\");\n  div.innerHTML = string;\n  return div.childNodes[0];\n}; // Tests if given element is inside (or simply is) the container\n\n\nDropzone.elementInside = function (element, container) {\n  if (element === container) {\n    return true;\n  } // Coffeescript doesn't support do/while loops\n\n\n  while (element = element.parentNode) {\n    if (element === container) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nDropzone.getElement = function (el, name) {\n  var element;\n\n  if (typeof el === \"string\") {\n    element = document.querySelector(el);\n  } else if (el.nodeType != null) {\n    element = el;\n  }\n\n  if (element == null) {\n    throw new Error(\"Invalid `\".concat(name, \"` option provided. Please provide a CSS selector or a plain HTML element.\"));\n  }\n\n  return element;\n};\n\nDropzone.getElements = function (els, name) {\n  var el, elements;\n\n  if (els instanceof Array) {\n    elements = [];\n\n    try {\n      var _iterator34 = _createForOfIteratorHelper(els),\n          _step34;\n\n      try {\n        for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n          el = _step34.value;\n          elements.push(this.getElement(el, name));\n        }\n      } catch (err) {\n        _iterator34.e(err);\n      } finally {\n        _iterator34.f();\n      }\n    } catch (e) {\n      elements = null;\n    }\n  } else if (typeof els === \"string\") {\n    elements = [];\n\n    var _iterator35 = _createForOfIteratorHelper(document.querySelectorAll(els)),\n        _step35;\n\n    try {\n      for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n        el = _step35.value;\n        elements.push(el);\n      }\n    } catch (err) {\n      _iterator35.e(err);\n    } finally {\n      _iterator35.f();\n    }\n  } else if (els.nodeType != null) {\n    elements = [els];\n  }\n\n  if (elements == null || !elements.length) {\n    throw new Error(\"Invalid `\".concat(name, \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\"));\n  }\n\n  return elements;\n}; // Asks the user the question and calls accepted or rejected accordingly\n//\n// The default implementation just uses `window.confirm` and then calls the\n// appropriate callback.\n\n\nDropzone.confirm = function (question, accepted, rejected) {\n  if (window.confirm(question)) {\n    return accepted();\n  } else if (rejected != null) {\n    return rejected();\n  }\n}; // Validates the mime type like this:\n//\n// https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept\n\n\nDropzone.isValidFile = function (file, acceptedFiles) {\n  if (!acceptedFiles) {\n    return true;\n  } // If there are no accepted mime types, it's OK\n\n\n  acceptedFiles = acceptedFiles.split(\",\");\n  var mimeType = file.type;\n  var baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n\n  var _iterator36 = _createForOfIteratorHelper(acceptedFiles),\n      _step36;\n\n  try {\n    for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n      var validType = _step36.value;\n      validType = validType.trim();\n\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        // This is something like a image/* mime type\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator36.e(err);\n  } finally {\n    _iterator36.f();\n  }\n\n  return false;\n}; // Augment jQuery\n\n\nif (typeof jQuery !== 'undefined' && jQuery !== null) {\n  jQuery.fn.dropzone = function (options) {\n    return this.each(function () {\n      return new Dropzone(this, options);\n    });\n  };\n}\n\nif (typeof module !== 'undefined' && module !== null) {\n  module.exports = Dropzone;\n} else {\n  window.Dropzone = Dropzone;\n} // Dropzone file status codes\n\n\nDropzone.ADDED = \"added\";\nDropzone.QUEUED = \"queued\"; // For backwards compatibility. Now, if a file is accepted, it's either queued\n// or uploading.\n\nDropzone.ACCEPTED = Dropzone.QUEUED;\nDropzone.UPLOADING = \"uploading\";\nDropzone.PROCESSING = Dropzone.UPLOADING; // alias\n\nDropzone.CANCELED = \"canceled\";\nDropzone.ERROR = \"error\";\nDropzone.SUCCESS = \"success\";\n/*\n\n Bugfix for iOS 6 and 7\n Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n based on the work of https://github.com/stomita/ios-imagefile-megapixel\n\n */\n// Detecting vertical squash in loaded image.\n// Fixes a bug which squash image vertically while drawing into canvas for some images.\n// This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\n\nvar detectVerticalSquash = function detectVerticalSquash(img) {\n  var iw = img.naturalWidth;\n  var ih = img.naturalHeight;\n  var canvas = document.createElement(\"canvas\");\n  canvas.width = 1;\n  canvas.height = ih;\n  var ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(img, 0, 0);\n\n  var _ctx$getImageData = ctx.getImageData(1, 0, 1, ih),\n      data = _ctx$getImageData.data; // search image edge pixel position in case it is squashed vertically.\n\n\n  var sy = 0;\n  var ey = ih;\n  var py = ih;\n\n  while (py > sy) {\n    var alpha = data[(py - 1) * 4 + 3];\n\n    if (alpha === 0) {\n      ey = py;\n    } else {\n      sy = py;\n    }\n\n    py = ey + sy >> 1;\n  }\n\n  var ratio = py / ih;\n\n  if (ratio === 0) {\n    return 1;\n  } else {\n    return ratio;\n  }\n}; // A replacement for context.drawImage\n// (args are for source and destination).\n\n\nvar drawImageIOSFix = function drawImageIOSFix(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n  var vertSquashRatio = detectVerticalSquash(img);\n  return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n}; // Based on MinifyJpeg\n// Source: http://www.perry.cz/files/ExifRestorer.js\n// http://elicon.blog57.fc2.com/blog-entry-206.html\n\n\nvar ExifRestore = /*#__PURE__*/function () {\n  function ExifRestore() {\n    _classCallCheck(this, ExifRestore);\n  }\n\n  _createClass(ExifRestore, null, [{\n    key: \"initClass\",\n    value: function initClass() {\n      this.KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    }\n  }, {\n    key: \"encode64\",\n    value: function encode64(input) {\n      var output = '';\n      var chr1 = undefined;\n      var chr2 = undefined;\n      var chr3 = '';\n      var enc1 = undefined;\n      var enc2 = undefined;\n      var enc3 = undefined;\n      var enc4 = '';\n      var i = 0;\n\n      while (true) {\n        chr1 = input[i++];\n        chr2 = input[i++];\n        chr3 = input[i++];\n        enc1 = chr1 >> 2;\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n\n        output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n\n        if (!(i < input.length)) {\n          break;\n        }\n      }\n\n      return output;\n    }\n  }, {\n    key: \"restore\",\n    value: function restore(origFileBase64, resizedFileBase64) {\n      if (!origFileBase64.match('data:image/jpeg;base64,')) {\n        return resizedFileBase64;\n      }\n\n      var rawImage = this.decode64(origFileBase64.replace('data:image/jpeg;base64,', ''));\n      var segments = this.slice2Segments(rawImage);\n      var image = this.exifManipulation(resizedFileBase64, segments);\n      return \"data:image/jpeg;base64,\".concat(this.encode64(image));\n    }\n  }, {\n    key: \"exifManipulation\",\n    value: function exifManipulation(resizedFileBase64, segments) {\n      var exifArray = this.getExifArray(segments);\n      var newImageArray = this.insertExif(resizedFileBase64, exifArray);\n      var aBuffer = new Uint8Array(newImageArray);\n      return aBuffer;\n    }\n  }, {\n    key: \"getExifArray\",\n    value: function getExifArray(segments) {\n      var seg = undefined;\n      var x = 0;\n\n      while (x < segments.length) {\n        seg = segments[x];\n\n        if (seg[0] === 255 & seg[1] === 225) {\n          return seg;\n        }\n\n        x++;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"insertExif\",\n    value: function insertExif(resizedFileBase64, exifArray) {\n      var imageData = resizedFileBase64.replace('data:image/jpeg;base64,', '');\n      var buf = this.decode64(imageData);\n      var separatePoint = buf.indexOf(255, 3);\n      var mae = buf.slice(0, separatePoint);\n      var ato = buf.slice(separatePoint);\n      var array = mae;\n      array = array.concat(exifArray);\n      array = array.concat(ato);\n      return array;\n    }\n  }, {\n    key: \"slice2Segments\",\n    value: function slice2Segments(rawImageArray) {\n      var head = 0;\n      var segments = [];\n\n      while (true) {\n        var length;\n\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) {\n          break;\n        }\n\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) {\n          head += 2;\n        } else {\n          length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n          var endPoint = head + length + 2;\n          var seg = rawImageArray.slice(head, endPoint);\n          segments.push(seg);\n          head = endPoint;\n        }\n\n        if (head > rawImageArray.length) {\n          break;\n        }\n      }\n\n      return segments;\n    }\n  }, {\n    key: \"decode64\",\n    value: function decode64(input) {\n      var output = '';\n      var chr1 = undefined;\n      var chr2 = undefined;\n      var chr3 = '';\n      var enc1 = undefined;\n      var enc2 = undefined;\n      var enc3 = undefined;\n      var enc4 = '';\n      var i = 0;\n      var buf = []; // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n\n      var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n\n      if (base64test.exec(input)) {\n        console.warn('There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, \\'+\\', \\'/\\',and \\'=\\'\\nExpect errors in decoding.');\n      }\n\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n      while (true) {\n        enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n        chr1 = enc1 << 2 | enc2 >> 4;\n        chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n        chr3 = (enc3 & 3) << 6 | enc4;\n        buf.push(chr1);\n\n        if (enc3 !== 64) {\n          buf.push(chr2);\n        }\n\n        if (enc4 !== 64) {\n          buf.push(chr3);\n        }\n\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n\n        if (!(i < input.length)) {\n          break;\n        }\n      }\n\n      return buf;\n    }\n  }]);\n\n  return ExifRestore;\n}();\n\nExifRestore.initClass();\n/*\n * contentloaded.js\n *\n * Author: Diego Perini (diego.perini at gmail.com)\n * Summary: cross-browser wrapper for DOMContentLoaded\n * Updated: 20101020\n * License: MIT\n * Version: 1.2\n *\n * URL:\n * http://javascript.nwbox.com/ContentLoaded/\n * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n */\n// @win window reference\n// @fn function reference\n\nvar contentLoaded = function contentLoaded(win, fn) {\n  var done = false;\n  var top = true;\n  var doc = win.document;\n  var root = doc.documentElement;\n  var add = doc.addEventListener ? \"addEventListener\" : \"attachEvent\";\n  var rem = doc.addEventListener ? \"removeEventListener\" : \"detachEvent\";\n  var pre = doc.addEventListener ? \"\" : \"on\";\n\n  var init = function init(e) {\n    if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n      return;\n    }\n\n    (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n\n    if (!done && (done = true)) {\n      return fn.call(win, e.type || e);\n    }\n  };\n\n  var poll = function poll() {\n    try {\n      root.doScroll(\"left\");\n    } catch (e) {\n      setTimeout(poll, 50);\n      return;\n    }\n\n    return init(\"poll\");\n  };\n\n  if (doc.readyState !== \"complete\") {\n    if (doc.createEventObject && root.doScroll) {\n      try {\n        top = !win.frameElement;\n      } catch (error) {}\n\n      if (top) {\n        poll();\n      }\n    }\n\n    doc[add](pre + \"DOMContentLoaded\", init, false);\n    doc[add](pre + \"readystatechange\", init, false);\n    return win[add](pre + \"load\", init, false);\n  }\n}; // As a single function to be able to write tests.\n\n\nDropzone._autoDiscoverFunction = function () {\n  if (Dropzone.autoDiscover) {\n    return Dropzone.discover();\n  }\n};\n\ncontentLoaded(window, Dropzone._autoDiscoverFunction);\n\nfunction __guard__(value, transform) {\n  return typeof value !== 'undefined' && value !== null ? transform(value) : undefined;\n}\n\nfunction __guardMethod__(obj, methodName, transform) {\n  if (typeof obj !== 'undefined' && obj !== null && typeof obj[methodName] === 'function') {\n    return transform(obj, methodName);\n  } else {\n    return undefined;\n  }\n}\n","/* @license\nPapa Parse\nv5.4.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=f.IS_PAPA_WORKER||!1,a={},u=0,b={parse:function(e,t){var r=(t=t||{}).dynamicTyping||!1;J(r)&&(t.dynamicTypingFunction=r,r={});if(t.dynamicTyping=r,t.transform=!!J(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var i=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(r=f.URL||f.webkitURL||null,i=s.toString(),b.BLOB_URL||(b.BLOB_URL=r.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",i,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var r,i;return t.onmessage=_,t.id=u++,a[t.id]=t}();return i.userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=J(t.step),t.chunk=J(t.chunk),t.complete=J(t.complete),t.error=J(t.error),delete t.worker,void i.postMessage({input:e,config:t,workerId:i.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?(e=function(e){if(65279===e.charCodeAt(0))return e.slice(1);return e}(e),n=t.download?new l(t):new p(t)):!0===e.readable&&J(e.read)&&J(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,r=!1,i=null,o=!1;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(r=t.skipEmptyLines);\"string\"==typeof t.newline&&(y=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");i=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s);(\"boolean\"==typeof t.escapeFormulae||t.escapeFormulae instanceof RegExp)&&(o=t.escapeFormulae instanceof RegExp?t.escapeFormulae:/^[=+\\-@\\t\\r].*$/)}();var u=new RegExp(Q(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return h(null,e,r);if(\"object\"==typeof e[0])return h(i||Object.keys(e[0]),e,r)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||i),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),h(e.fields||[],e.data||[],r);throw new Error(\"Unable to serialize unrecognized input\");function h(e,t,r){var i=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(i+=m),i+=v(e[a],a);0<t.length&&(i+=y)}for(var o=0;o<t.length;o++){var u=n?e.length:t[o].length,h=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(r&&!n&&(h=\"greedy\"===r?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===r&&n){for(var d=[],l=0;l<u;l++){var c=s?e[l]:l;d.push(t[o][c])}h=\"\"===d.join(\"\").trim()}if(!h){for(var p=0;p<u;p++){0<p&&!f&&(i+=m);var g=n&&s?e[p]:p;i+=v(t[o][g],p)}o<t.length-1&&(!r||0<u&&!f)&&(i+=y)}}return i}function v(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var r=!1;o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,r=!0);var i=e.toString().replace(u,a);return(r=r||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var r=0;r<t.length;r++)if(-1<e.indexOf(t[r]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1))?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=E,b.ParserHandle=r,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var r=o.config||{},u=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)u.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},r)})}),e(),this;function e(){if(0!==u.length){var e,t,r,i,n=u[0];if(J(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,r=n.inputElem,i=s.reason,void(J(o.error)&&o.error({name:e},t,r,i));if(\"skip\"===s.action)return void h();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void h()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){J(a)&&a(e,n.file,n.inputElem),h()},b.parse(n.file,n.instanceConfig)}else J(o.complete)&&o.complete()}function h(){u.splice(0,1),e()}}}function h(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new r(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&J(this._config.beforeFirstChunk)){var r=this._config.beforeFirstChunk(e);void 0!==r&&(e=r)}this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(i,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=i.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(J(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!J(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){J(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var i;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),h.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(i=new XMLHttpRequest,this._config.withCredentials&&(i.withCredentials=this._config.withCredentials),n||(i.onload=v(this._chunkLoaded,this),i.onerror=v(this._chunkError,this)),i.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)i.setRequestHeader(t,e[t])}if(this._config.chunkSize){var r=this._start+this._config.chunkSize-1;i.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+r)}try{i.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===i.status&&this._chunkError()}},this._chunkLoaded=function(){4===i.readyState&&(i.status<200||400<=i.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:i.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(i),this.parseChunk(i.responseText)))},this._chunkError=function(e){var t=i.statusText||e;this._sendError(new Error(t))}}function c(e){var i,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),h.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((i=new FileReader).onload=v(this._chunkLoaded,this),i.onerror=v(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var r=i.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:r}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function p(e){var r;h.call(this,e=e||{}),this.stream=function(e){return r=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=r.substring(0,t),r=r.substring(t)):(e=r,r=\"\"),this._finished=!r,this.parseChunk(e)}}}function g(e){h.call(this,e=e||{});var t=[],r=!0,i=!1;this.pause=function(){h.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){h.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){i&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):r=!0},this._streamData=v(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),r&&(r=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=v(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=v(function(){this._streamCleanUp(),i=!0,this._streamData(\"\")},this),this._streamCleanUp=v(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function r(m){var a,o,u,i=Math.pow(2,53),n=-i,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,h=/^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,t=this,r=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(J(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;r+=e.data.length,m.preview&&r>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){return c&&u&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),u=!1),m.skipEmptyLines&&(c.data=c.data.filter(function(e){return!y(e)})),_()&&function(){if(!c)return;function e(e,t){J(m.transformHeader)&&(e=m.transformHeader(e,t)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var r,i=m.header?{}:[];for(r=0;r<e.length;r++){var n=r,s=e[r];m.header&&(n=r>=l.length?\"__parsed_extra\":l[r]),m.transform&&(s=m.transform(s,n)),s=v(n,s),\"__parsed_extra\"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return m.header&&(r>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+r,f+t):r<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+r,f+t)),i}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function v(e,t){return r=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[r]&&(m.dynamicTyping[r]=m.dynamicTypingFunction(r)),!0===(m.dynamicTyping[r]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<i)return!0}return!1}(t)?parseFloat(t):h.test(t)?new Date(t):\"\"===t?null:t):t;var r}function k(e,t,r,i){var n={type:e,code:t,message:r};void 0!==i&&(n.row=i),c.errors.push(n)}this.parse=function(e,t,r){var i=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var r=new RegExp(Q(t)+\"([^]*?)\"+Q(t),\"gm\"),i=(e=e.replace(r,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<i[0].length;if(1===i.length||s)return\"\\n\";for(var a=0,o=0;o<i.length;o++)\"\\n\"===i[o][0]&&a++;return a>=i.length/2?\"\\r\\n\":\"\\r\"}(e,i)),u=!1,m.delimiter)J(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,r,i,n){var s,a,o,u;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var h=0;h<n.length;h++){var f=n[h],d=0,l=0,c=0;o=void 0;for(var p=new E({comments:i,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(r&&y(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===u||u<l)&&1.99<l&&(a=d,s=f,u=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(u=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=w(m);return m.preview&&m.header&&s.preview++,a=e,o=new E(s),c=o.parse(a,t,r),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=J(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,J(m.complete)&&m.complete(c),a=\"\"}}function Q(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(j){var z,M=(j=j||{}).delimiter,P=j.newline,U=j.comments,q=j.step,N=j.preview,B=j.fastMode,K=z=void 0===j.quoteChar||null===j.quoteChar?'\"':j.quoteChar;if(void 0!==j.escapeChar&&(K=j.escapeChar),(\"string\"!=typeof M||-1<b.BAD_DELIMITERS.indexOf(M))&&(M=\",\"),U===M)throw new Error(\"Comment character same as delimiter\");!0===U?U=\"#\":(\"string\"!=typeof U||-1<b.BAD_DELIMITERS.indexOf(U))&&(U=!1),\"\\n\"!==P&&\"\\r\"!==P&&\"\\r\\n\"!==P&&(P=\"\\n\");var W=0,H=!1;this.parse=function(i,t,r){if(\"string\"!=typeof i)throw new Error(\"Input must be a string\");var n=i.length,e=M.length,s=P.length,a=U.length,o=J(q),u=[],h=[],f=[],d=W=0;if(!i)return L();if(j.header&&!t){var l=i.split(P)[0].split(M),c=[],p={},g=!1;for(var _ in l){var m=l[_];J(j.transformHeader)&&(m=j.transformHeader(m,_));var y=m,v=p[m]||0;for(0<v&&(g=!0,y=m+\"_\"+v),p[m]=v+1;c.includes(y);)y=y+\"_\"+v;c.push(y)}if(g){var k=i.split(P);k[0]=c.join(M),i=k.join(P)}}if(B||!1!==B&&-1===i.indexOf(z)){for(var b=i.split(P),E=0;E<b.length;E++){if(f=b[E],W+=f.length,E!==b.length-1)W+=P.length;else if(r)return L();if(!U||f.substring(0,a)!==U){if(o){if(u=[],I(f.split(M)),F(),H)return L()}else I(f.split(M));if(N&&N<=E)return u=u.slice(0,N),L(!0)}}return L()}for(var w=i.indexOf(M,W),R=i.indexOf(P,W),C=new RegExp(Q(K)+Q(z),\"g\"),S=i.indexOf(z,W);;)if(i[W]!==z)if(U&&0===f.length&&i.substring(W,W+a)===U){if(-1===R)return L();W=R+s,R=i.indexOf(P,W),w=i.indexOf(M,W)}else if(-1!==w&&(w<R||-1===R))f.push(i.substring(W,w)),W=w+e,w=i.indexOf(M,W);else{if(-1===R)break;if(f.push(i.substring(W,R)),D(R+s),o&&(F(),H))return L();if(N&&u.length>=N)return L(!0)}else for(S=W,W++;;){if(-1===(S=i.indexOf(z,S+1)))return r||h.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:u.length,index:W}),T();if(S===n-1)return T(i.substring(W,S).replace(C,z));if(z!==K||i[S+1]!==K){if(z===K||0===S||i[S-1]!==K){-1!==w&&w<S+1&&(w=i.indexOf(M,S+1)),-1!==R&&R<S+1&&(R=i.indexOf(P,S+1));var O=A(-1===R?w:Math.min(w,R));if(i.substr(S+1+O,e)===M){f.push(i.substring(W,S).replace(C,z)),i[W=S+1+O+e]!==z&&(S=i.indexOf(z,W)),w=i.indexOf(M,W),R=i.indexOf(P,W);break}var x=A(R);if(i.substring(S+1+x,S+1+x+s)===P){if(f.push(i.substring(W,S).replace(C,z)),D(S+1+x+s),w=i.indexOf(M,W),S=i.indexOf(z,W),o&&(F(),H))return L();if(N&&u.length>=N)return L(!0);break}h.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:u.length,index:W}),S++}}else S++}return T();function I(e){u.push(e),d=W}function A(e){var t=0;if(-1!==e){var r=i.substring(S+1,e);r&&\"\"===r.trim()&&(t=r.length)}return t}function T(e){return r||(void 0===e&&(e=i.substring(W)),f.push(e),W=n,I(f),o&&F()),L()}function D(e){W=e,I(f),f=[],R=i.indexOf(P,W)}function L(e){return{data:u,errors:h,meta:{delimiter:M,linebreak:P,aborted:H,truncated:!!e,cursor:d+(t||0)}}}function F(){q(L()),u=[],h=[]}},this.abort=function(){H=!0},this.getCharIndex=function(){return W}}function _(e){var t=e.data,r=a[t.workerId],i=!1;if(t.error)r.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){i=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:y,resume:y};if(J(r.userStep)){for(var s=0;s<t.results.data.length&&(r.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!i);s++);delete t.results}else J(r.userChunk)&&(r.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!i&&m(t.workerId,t.results)}function m(e,t){var r=a[e];J(r.userComplete)&&r.userComplete(t),r.terminate(),delete a[e]}function y(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var r in e)t[r]=w(e[r]);return t}function v(e,t){return function(){e.apply(t,arguments)}}function J(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var r=b.parse(t.input,t.config);r&&f.postMessage({workerId:b.WORKER_ID,results:r,finished:!0})}}),(l.prototype=Object.create(h.prototype)).constructor=l,(c.prototype=Object.create(h.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(h.prototype)).constructor=g,b});","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","import * as i0 from '@angular/core';\nimport { InjectionToken, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress spinner. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    constructor(_elementRef, animationMode, defaults) {\n        this._elementRef = _elementRef;\n        this._defaultColor = 'primary';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            _elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-app-primary))}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-app-primary))}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n"],"x_google_ignoreList":[52,63,64,95,96,97,119,138,139,147,236,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410]}