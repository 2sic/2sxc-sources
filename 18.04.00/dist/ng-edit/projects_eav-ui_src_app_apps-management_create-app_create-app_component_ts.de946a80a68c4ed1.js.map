{"version":3,"file":"projects_eav-ui_src_app_apps-management_create-app_create-app_component_ts.de946a80a68c4ed1.js","mappings":"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","names":["appNamePattern","i0","ctx_r0","appNameError","CreateAppComponent_Conditional_13_Conditional_0_Template","CreateAppComponent_Conditional_13_Conditional_1_Template","form","controls","name","errors","required","pattern","CreateAppComponent","constructor","dialog","snackBar","this","hostClass","loading","signal","appTemplateId","appsListService","transient","AppsListService","buildForm","closeDialog","close","create","disable","set","value","trim","replace","Number","open","subscribe","error","enable","undefined","duration","next","UntypedFormGroup","UntypedFormControl","Validators","i1","i2","selectors","hostVars","hostBindings","rf","ctx","CreateAppComponent_Conditional_13_Template","$event","touched","valid","RouterOutlet","FormsModule","i3","ReactiveFormsModule","MatFormFieldModule","i4","MatInputModule","i5","MatSelectModule","i6","i7","MatOptionModule","MatDialogActions","MatButtonModule","i8","FieldHintComponent","encapsulation","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","input","isShort","toggleIsShort","inputs","standalone","features","ngContentSelectors","_c0","decls","vars","consts","template","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgClass","NgTemplateOutlet","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/constants/app.patterns.ts","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.html","./projects/eav-ui/src/app/apps-management/create-app/create-app.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts"],"sourcesContent":["export const appNamePattern = /^[A-Za-z](?:[A-Za-z0-9\\s\\(\\)-]+)*$/;\r\nexport const appNameError = 'Standard letters, numbers, spaces, hyphens and round brackets are allowed. Must start with a letter.';\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Create App</div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <router-outlet></router-outlet>\r\n    <form [formGroup]=\"form\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"name\" />\r\n      </mat-form-field>\r\n      <app-field-hint> App name will also be used for the folder </app-field-hint>\r\n      @if (form.controls.name.touched) {\r\n        @if (form.controls.name.errors?.required) {\r\n          <app-field-hint [isError]=\"true\"> Required </app-field-hint>\r\n        }\r\n        @if (form.controls.name.errors?.pattern) {\r\n          <app-field-hint [isError]=\"true\">\r\n            {{ appNameError }}\r\n          </app-field-hint>\r\n        }\r\n      }\r\n      <br />\r\n\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Template</mat-label>\r\n        <mat-select required=\"true\" [(value)]=\"appTemplateId\">\r\n          <mat-option value=\"0\"> Completely Naked / Raw App </mat-option>\r\n          <mat-option value=\"1\"> App Template Empty with some instructions </mat-option>\r\n          <mat-option value=\"2\"> App Template Basic with instructions and some data </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button type=\"button\" mat-raised-button [disabled]=\"loading()\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button type=\"button\" mat-raised-button color=\"accent\" [disabled]=\"loading() || !form.valid\" (click)=\"create()\">Create</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component, HostBinding, signal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../../../../core';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { appNameError, appNamePattern } from '../constants/app.patterns';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n  selector: 'app-create-app',\r\n  templateUrl: './create-app.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n  ],\r\n})\r\nexport class CreateAppComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  loading = signal<boolean>(false);\r\n  appNameError = appNameError;\r\n  appTemplateId = '1';\r\n\r\n\r\n  private appsListService = transient(AppsListService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<CreateAppComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.form = this.buildForm();\r\n  }\r\n\r\n\r\n  closeDialog(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  create(): void {\r\n    this.form.disable();\r\n    this.loading.set(true);\r\n    const name = this.form.controls.name.value?.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs;\r\n    const appTemplateId = Number(this.appTemplateId);\r\n    // console.warn('2dm: name', name, this.appTemplateId);\r\n    // return;\r\n\r\n    this.snackBar.open('Creating app...');\r\n    this.appsListService.create(name, null, appTemplateId).subscribe({\r\n      error: () => {\r\n        this.form.enable();\r\n        this.loading.set(false);\r\n\r\n        this.snackBar.open('Failed to create app. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.form.enable();\r\n        this.snackBar.open('Created app', undefined, { duration: 2000 });\r\n        this.closeDialog();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildForm(): UntypedFormGroup {\r\n    const form = new UntypedFormGroup({\r\n      name: new UntypedFormControl(null, [Validators.required, Validators.pattern(appNamePattern)]),\r\n    });\r\n    return form;\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}