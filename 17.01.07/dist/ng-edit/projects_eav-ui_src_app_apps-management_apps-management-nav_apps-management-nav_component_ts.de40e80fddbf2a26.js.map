{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.de40e80fddbf2a26.js","mappings":"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","names":["i0","_r7","ctx_r6","openLightspeedFeatureInfo","_r11","ctx_r10","openLightspeed","AppsListActionsComponent_Conditional_5_Conditional_1_Template","AppsListActionsComponent_Conditional_5_Conditional_2_Template","ctx_r3","appHasLightSpeed","app","Lightspeed","Title","appLightSpeedEnabled","_r13","ctx_r12","flushCache","ctx_r14","deleteApp","ctx_r5","IsApp","AppsListActionsComponent","agInit","params","this","data","lightspeedEnabled","Id","IsEnabled","refresh","onOpenLightspeed","onFlush","onDelete","static","t","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","AppsListActionsComponent_Conditional_2_Template","AppsListActionsComponent_Conditional_3_Template","AppsListActionsComponent_Conditional_4_Template","AppsListActionsComponent_Conditional_5_Template","AppsListActionsComponent_ng_template_11_Template","IsGlobal","IsInherited","_r4","AppListShowIcons","states","true","tooltip","icon","false","AppListCodeErrorIcons","clickable","getUrl","window","$2sxc","http","apiUrl","AgBoolCellIconsDefault","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","url","_r3","_c0","ctx_r1","ctx_r2","AgBoolIconRenderer","value","allSettings","settings","d","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","$event","importApp","ctx_r4","openChange","browseCatalog","createInheritedApp","ctx_r7","addFromFolder","ctx_r8","ctx_r9","createApp","apps","gridOptions","fabOpen","isAddFromFolderEnabled","AppsListComponent","BaseComponent","constructor","router","route","appsListService","snackBar","context","featuresService","dialog","viewContainerRef","changeDetectorRef","super","fabOpen$","BehaviorSubject","buildGridOptions","lightspeedEnabled$","refreshApps$","Subject","ngOnInit","apps$","pipe","startWith","undefined","switchMap","getAll","catchError","of","share","subscription","add","refreshOnChildClosedDeep","subscribe","next","isAddFromFolderEnabled$","isEnabled$","FeatureNames","AppSyncWithSiteFiles","LightSpeed","viewModel$","combineLatest","map","ngOnDestroy","complete","open","navigate","relativeTo","firstChild","files","state","result","prompt","Name","delete","error","duration","alert","flushApp","confirm","openLightSpeed","formUrl","convertFormToUrl","AppAdminHelpers","getLightSpeedEditParams","zoneId","openApp","toString","openLightSpeedFeatInfo","FeatureComponentBase","openDialog","defaultGridOptions","columnDefs","headerName","field","width","headerClass","cellClass","split","sortable","filter","valueGetter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","Guid","BooleanFilterComponent","IsHidden","flex","minWidth","sort","onCellClicked","Thumbnail","Folder","Version","Items","pinned","i1","i2","i3","i4","i5","i6","features","AppsListComponent_Conditional_0_Template","AppsListComponent_contFlowTmp","SiteLanguagesStatusComponent","toggleLanguage","event","onToggleLanguage","checked","languages","SiteLanguagesComponent","zoneService","refreshLanguages$","getLanguages","language","enable","Code","Culture","SiteLanguagesComponent_Conditional_0_Template","SiteLanguagesComponent_contFlowTmp","info_r17","link","label","_r25","$implicit","ctx_r24","copyToClipboard","SystemInfoComponent_Conditional_0_For_12_Conditional_6_Template","info_r26","target","SystemInfoComponent_Conditional_0_For_36_Conditional_6_Conditional_0_Template","SystemInfoComponent_Conditional_0_For_36_Conditional_6_Conditional_1_Template","_r38","ctx_r37","SystemInfoComponent_Conditional_0_For_36_Conditional_6_Template","SystemInfoComponent_Conditional_0_Conditional_119_Conditional_0_Template","_r14","errors","pattern","info_r40","SystemInfoComponent_Conditional_0_For_135_Conditional_6_Conditional_0_Template","SystemInfoComponent_Conditional_0_For_135_Conditional_6_Conditional_1_Template","_r52","ctx_r51","SystemInfoComponent_Conditional_0_For_135_Conditional_6_Template","SystemInfoComponent_Conditional_0_For_12_Template","SystemInfoComponent_Conditional_0_ng_container_19_Template","_r54","ctx_r53","openGlobalSettings","SystemInfoComponent_Conditional_0_For_36_Template","SystemInfoComponent_Conditional_0_ng_container_44_Template","ctx_r55","openSiteSettings","SystemInfoComponent_Conditional_0_Conditional_61_Template","SystemInfoComponent_Conditional_0_ng_container_64_Template","SystemInfoComponent_Conditional_0_Conditional_76_Template","SystemInfoComponent_Conditional_0_ng_container_79_Template","SystemInfoComponent_Conditional_0_ng_container_98_Template","ctx_r56","openInsights","ctx_r57","activatePageLog","ctx_r58","pageLogDuration","SystemInfoComponent_Conditional_0_Conditional_119_Template","SystemInfoComponent_Conditional_0_For_135_Template","systemInfos","_r2","siteInfos","lsEnabled","_c1","cspEnabled","_c2","_c3","positiveWholeNumber","loading","touched","valid","warningIcon","warningInfos","tmp_2_0","icon_r59","label_r60","SystemInfoComponent","dialogService","sxcInsightsService","systemInfoSet$","languages$","loading$","buildViewModel","getSystemInfo","text","sitePrimaryApp","dialogSettings","Context","Site","PrimaryApp","openAppAdministration","ZoneId","AppId","globalPrimaryApp","System","form","res","document","activeElement","HTMLElement","blur","resetForm","systemInfoSet","systemInfos$","EavVersion","Platform","PlatformVersion","Zones","Fingerprint","License","Owner","GoToRegistration","siteInfos$","allLanguages","length","activeLanguages","l","SiteId","Apps","warningIcon$","Messages","WarningsObsolete","WarningsOther","warningInfos$","lsEnabled$","cspEnabled$","ContentSecurityPolicy","inputs","SystemInfoComponent_Conditional_0_Template","SystemInfoComponent_ng_template_2_Template","SystemInfoComponent_contFlowTmp","id_r4","_r6","guid_r7","_r9","link_r11","findOutMore","FeatureDetailsDialogComponent","dialogData","dialogRef","closeDialog","close","MAT_DIALOG_DATA","FeatureDetailsDialogComponent_Conditional_7_Template","FeatureDetailsDialogComponent_Conditional_8_Template","FeatureDetailsDialogComponent_Conditional_9_Template","FeatureDetailsDialogComponent_Conditional_11_Template","feature","Description","FeatureDetailsDialogComponent_contFlowTmp","NameId","Security","Impact","Message","Link","FeaturesListEnabledReasonComponent","EnabledReasonDetailed","FeaturesListEnabledComponent","FeaturesStatusComponent","disabled","isDisabled","toggle","nextValue","onToggle","ExpirationExtension","expandFeature","getExpiration","Expiration","expandLicense","license","lowestExpiration","Features","f","dateString","ExpMessage","ExpIcon","ExpWarningIcon","expires","startsWith","expDate","Date","toDateString","setDate","getDate","endsWith","AgGridHeightDirective","elementRef","itemsCount","headerHeight","rowHeight","maxRows","extraHeight","element","nativeElement","ngOnChanges","changes","style","height","lG2","LicensesOrderPipe","transform","licenses","Array","isArray","a","b","Priority","Yjl","pure","ActiveFeaturesCountPipe","license_r3","LicenseInfoComponent_Conditional_0_For_2_Conditional_17_Template","_r8","expanded","LicenseInfoComponent_Conditional_0_For_2_Template","trackLicenses","LicenseInfoComponent","featuresConfigService","disabled$","refreshLicenses$","getLicenses","tap","index","openRegistration","showFeatureDetails","autoFocus","markForCheck","toggleFeature","enabled","forkJoin","saveFeatures","FeatureGuid","Enabled","timer","cellDefaults","cellDefaultsTextFilter","tooltipValueGetter","IsConfigurable","viewQuery","AgGridAngular","LicenseInfoComponent_Conditional_0_Template","LicenseInfoComponent_contFlowTmp","vm_r1","_r12","ctx_r11","ctx_r13","changeTab","AppsManagementNavComponent_Conditional_0_div_11_Template","AppsManagementNavComponent_Conditional_0_app_system_info_12_Template","AppsManagementNavComponent_Conditional_0_div_14_Template","AppsManagementNavComponent_Conditional_0_app_apps_list_15_Template","AppsManagementNavComponent_Conditional_0_div_17_Template","AppsManagementNavComponent_Conditional_0_app_site_languages_18_Template","AppsManagementNavComponent_Conditional_0_div_20_Template","AppsManagementNavComponent_Conditional_0_app_license_info_21_Template","tabIndex","AppsManagementNavComponent","appDialogConfigService","dialogSettings$","tabs","fetchDialogSettings","events","NavigationEnd","indexOf","snapshot","path","getShared$","AppsManagementNavComponent_Conditional_0_Template","AppsManagementNavComponent_contFlowTmp","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","PermissionsByLanguage","FieldShareConfigManagement","vm_r4","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","show","FeatureTextInfoComponent","asInfo","asInfo$","feature$","show$","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","FeatureTextInfoComponent_contFlowTmp","link_r7","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Conditional_17_Template","FeatureInfoDialogComponent_Conditional_0_contFlowTmp","FeatureInfoDialogComponent","featureDetailService","getFeatureDetails","FeatureInfoDialogComponent_Conditional_0_Template","FeatureInfoDialogComponent_contFlowTmp","featureNameId","featureNameId$","showIf","showIf$","featName","get$","feat","featureId","BaseSubsinkComponent","pairwise","hadChild","hasChild","refreshOnChildClosedShallow","_angular_core__WEBPACK_IMPORTED_MODULE_6__","FieldHintComponent_Case_1_ng_container_1_Template","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","ngContentSelectors","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","FieldHintComponent_contFlowTmp","id","align","copy","_angular_core__WEBPACK_IMPORTED_MODULE_1__","accentedSort","animateRows","enableCellTextSelection","suppressScrollOnNewData","valueCache","defaultColDef","filterParams","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","ToggleDebugDirective","globalConfigService","onClick","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","hostBindings","str","el","createElement","setAttribute","position","left","body","appendChild","selected","rangeCount","getRangeAt","select","execCommand","removeChild","addRange"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/app-list-grid-config.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.ts","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.html","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.html","./projects/eav-ui/src/app/features/expiration-extension.ts","./projects/eav-ui/src/app/apps-management/licence-info/ag-grid-height.directive.ts","./projects/eav-ui/src/app/apps-management/licence-info/licenses-order.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/active-features-count.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.html","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.ts","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    @if (app.IsGlobal) {\r\n      <mat-icon>foundation</mat-icon>\r\n    }\r\n    @if (app.IsInherited) {\r\n      <mat-icon>holiday_village</mat-icon>\r\n    }\r\n  </div>\r\n  @if (!lightspeedEnabled) {\r\n    <div class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\"\r\n      (click)=\"openLightspeedFeatureInfo()\">\r\n      <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n        bolt\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n\r\n  @if (lightspeedEnabled) {\r\n    <div class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled'}}\" matRipple\r\n      [tippy]=\"appHasLightSpeed ? app.Lightspeed.Title : 'App not yet configured for LightSpeed'\"\r\n      (click)=\"openLightspeed()\">\r\n      @if (appLightSpeedEnabled) {\r\n        <mat-icon matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\"\r\n          aria-hidden=\"false\">\r\n          bolt\r\n        </mat-icon>\r\n      }\r\n      @if (!appLightSpeedEnabled) {\r\n        <mat-icon matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\"\r\n          aria-hidden=\"false\">\r\n          bolt\r\n        </mat-icon>\r\n      }\r\n    </div>\r\n  }\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item (click)=\"flushCache()\">\r\n      <mat-icon>cached</mat-icon>\r\n      <span>Flush cache</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"deleteApp()\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss'],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n\r\n  public params: ICellRendererParams & AppsListActionsParams;\r\n  public lightspeedEnabled: boolean;\r\n  public appHasLightSpeed: boolean;\r\n  public appLightSpeedEnabled: boolean;\r\n\r\n  agInit(params: ICellRendererParams & AppsListActionsParams): void {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n    this.lightspeedEnabled = this.params.lightspeedEnabled();\r\n    this.appHasLightSpeed = this.app.Lightspeed?.Id != null; //.IsEnabled == true;\r\n    this.appLightSpeedEnabled = this.app.Lightspeed?.IsEnabled == true;\r\n  }\r\n\r\n//   appLightSpeedExits(): boolean {\r\n// console.log('2dm app ls check', this.app.Lightspeed);\r\n//     return this.app.Lightspeed?.IsEnabled == true;\r\n//   }\r\n\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openLightspeed(): void {\r\n    this.params.onOpenLightspeed(this.app);\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params.openLightspeedFeatureInfo();\r\n  }\r\n\r\n  flushCache(): void {\r\n    this.params.onFlush(this.app);\r\n  }\r\n\r\n  deleteApp(): void {\r\n    this.params.onDelete(this.app);\r\n  }\r\n}\r\n","import { AgBoolCellIconSettings } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { App } from '../models/app.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const AppListShowIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'Show this app to users',\r\n      icon: 'visibility',\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: 'visibility_off',\r\n    }\r\n  }\r\n};\r\n\r\nexport const AppListCodeErrorIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      clickable: true,\r\n      tooltip: 'This App uses obsolete code which will cause problems on future upgrades. Click to see details.',\r\n      icon: 'bug_report',\r\n      getUrl: (data: App) => window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete&filter=AppId=' + data.Id),\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: '',\r\n    }\r\n  }\r\n};\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = { \r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.apps\" [gridOptions]=\"gridOptions\" appDragAndDrop\r\n      [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n    </ag-grid-angular>\r\n    <mat-dialog-actions align=\"end\">\r\n      <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': vm.fabOpen }\" (openChange)=\"openChange($event)\">\r\n        <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n          <button mat-fab>\r\n            <mat-icon class=\"spin180\">{{ vm.fabOpen ? 'close' : 'add' }}</mat-icon>\r\n          </button>\r\n        </eco-fab-speed-dial-trigger>\r\n        <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n            <mat-icon>holiday_village</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Add from folder\" (click)=\"addFromFolder()\">\r\n            <mat-icon [matBadgeHidden]=\"vm.isAddFromFolderEnabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n              matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n              add\r\n            </mat-icon>\r\n          </button>\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Import app\" (click)=\"importApp()\">\r\n            <mat-icon>cloud_upload</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create app\" (click)=\"createApp()\">\r\n            <mat-icon>add</mat-icon>\r\n          </button>\r\n        </eco-fab-speed-dial-actions>\r\n      </eco-fab-speed-dial>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}","import { GridOptions, ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, catchError, combineLatest, map, Observable, of, share, startWith, Subject, switchMap } from 'rxjs';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppsListActionsComponent } from './apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from './apps-list-actions/apps-list-actions.models';\r\nimport { FeatureComponentBase } from '../../features/shared/base-feature.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AppAdminHelpers } from '../../app-administration/app-admin-helpers';\r\nimport { AppListCodeErrorIcons, AppListShowIcons } from './app-list-grid-config';\r\nimport { AgBoolIconRenderer } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component';\r\nimport { AgBoolCellIconsParams } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n})\r\nexport class AppsListComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  apps$: Observable<App[]>;\r\n  fabOpen$ = new BehaviorSubject(false);\r\n  gridOptions = this.buildGridOptions();\r\n  isAddFromFolderEnabled$: Observable<boolean>;\r\n  lightspeedEnabled$ = new BehaviorSubject<boolean>(false);\r\n\r\n  private refreshApps$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<AppsListViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n    private context: Context,\r\n    // Services for showing features in the menu\r\n    private featuresService: FeaturesService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.apps$ = this.refreshApps$.pipe(\r\n      startWith(undefined),\r\n      switchMap(() => this.appsListService.getAll().pipe(catchError(() => of(undefined)))),\r\n      share(),\r\n    );\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => { this.refreshApps$.next(); }));\r\n    this.isAddFromFolderEnabled$ = this.featuresService.isEnabled$(FeatureNames.AppSyncWithSiteFiles);\r\n    this.subscription.add(this.featuresService.isEnabled$(FeatureNames.LightSpeed).subscribe(this.lightspeedEnabled$));\r\n    this.viewModel$ = combineLatest([this.apps$, this.fabOpen$, this.isAddFromFolderEnabled$]).pipe(\r\n      map(([apps, fabOpen, isAddFromFolderEnabled]) => {\r\n        return { apps, fabOpen, isAddFromFolderEnabled};\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.fabOpen$.complete();\r\n    this.refreshApps$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  openChange(open: boolean): void {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  browseCatalog(): void {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp(): void {\r\n    this.router.navigate(['create'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.router.navigate(['create-inherited'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  addFromFolder(): void {\r\n    this.router.navigate(['add-app-from-folder'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  importApp(files?: File[]): void {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild, state: dialogData });\r\n  }\r\n\r\n  private deleteApp(app: App): void {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) { return; }\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.appsListService.delete(app.Id).subscribe({\r\n        error: () => {\r\n          this.snackBar.open('Delete failed. Please check console for more information', undefined, { duration: 3000 });\r\n          this.refreshApps$.next();\r\n        },\r\n        next: () => {\r\n          this.snackBar.open('Deleted', undefined, { duration: 2000 });\r\n          this.refreshApps$.next();\r\n        },\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App): void {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open('Flushing cache...');\r\n    this.appsListService.flushCache(app.Id).subscribe({\r\n      error: () => {\r\n        this.snackBar.open('Cache flush failed. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.snackBar.open('Cache flushed', undefined, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private openLightSpeed(app: App): void {\r\n    const formUrl = convertFormToUrl(AppAdminHelpers.getLightSpeedEditParams(app.Id));\r\n    this.router.navigate([`${this.context.zoneId}/${app.Id}/edit/${formUrl}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private openApp(app: App): void {\r\n    this.router.navigate([app.Id.toString()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  openLightSpeedFeatInfo() {\r\n    FeatureComponentBase.openDialog(this.dialog, FeatureNames.LightSpeed, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Id;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<App> = {\r\n              tooltipGetter: (app) => `ID: ${app.Id}\\nGUID: ${app.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Show',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'icons no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return !app.IsHidden;\r\n          },\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: () => AppListShowIcons }))(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'apps-list-primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Name;\r\n          },\r\n          onCellClicked: (params) => {\r\n            const app: App = params.data;\r\n            this.openApp(app);\r\n          },\r\n          cellRenderer: (params: ICellRendererParams) => {\r\n            const app: App = params.data;\r\n            return `\r\n            <div class=\"container\">\r\n              ${app.Thumbnail\r\n                ? `<img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>`\r\n                : `<div class=\"image logo\"><span class=\"material-icons-outlined\">star_border</span></div>`\r\n              }\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>\r\n            `;\r\n          },\r\n        },\r\n        {\r\n          field: 'Folder',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Folder;\r\n          },\r\n        },\r\n        {\r\n          field: 'Version',\r\n          width: 78,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Version;\r\n          },\r\n        },\r\n        {\r\n          field: 'Items',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'number-cell no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Items;\r\n          },\r\n        },\r\n        {\r\n          field: 'HasCodeWarnings',\r\n          headerName: 'Code',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'icons no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: (app) => AppListCodeErrorIcons } as AgBoolCellIconsParams<App>))(),\r\n        },\r\n        {\r\n          width: 122,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: AppsListActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AppsListActionsParams = {\r\n              onDelete: (app) => this.deleteApp(app),\r\n              onFlush: (app) => this.flushApp(app),\r\n              onOpenLightspeed: (app) => this.openLightSpeed(app),\r\n              lightspeedEnabled: () => this.lightspeedEnabled$.value,\r\n              openLightspeedFeatureInfo: () => this.openLightSpeedFeatInfo(),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface AppsListViewModel {\r\n  apps: App[];\r\n  fabOpen: any;\r\n  isAddFromFolderEnabled: boolean;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages-status',\r\n  templateUrl: './site-languages-status.component.html',\r\n  styleUrls: ['./site-languages-status.component.scss'],\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private params: ICellRendererParams & SiteLanguagesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & SiteLanguagesStatusParams): void {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage(event: MatSlideToggleChange): void {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onToggleLanguage(language, event.checked);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage($event)\"></mat-slide-toggle>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.languages\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <mat-dialog-actions align=\"end\"></mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { catchError, combineLatest, map, Observable, of, share, startWith, Subject, switchMap } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { SiteLanguagesStatusComponent } from './site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status/site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages',\r\n  templateUrl: './site-languages.component.html',\r\n  styleUrls: ['./site-languages.component.scss'],\r\n})\r\nexport class SiteLanguagesComponent implements OnInit, OnDestroy {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private refreshLanguages$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<SiteLanguagesViewModel>;\r\n\r\n  constructor(private zoneService: ZoneService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.refreshLanguages$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.zoneService.getLanguages().pipe(catchError(() => of(undefined)))),\r\n        share(),\r\n      )\r\n    ]).pipe(\r\n      map(([languages]) => {\r\n        return { languages };\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.refreshLanguages$.complete();\r\n  }\r\n\r\n  private toggleLanguage(language: SiteLanguage, enable: boolean): void {\r\n    this.zoneService.toggleLanguage(language.Code, enable).subscribe({\r\n      error: () => {\r\n        this.refreshLanguages$.next();\r\n      },\r\n      next: () => {\r\n        this.refreshLanguages$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.Code;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<SiteLanguage> = {\r\n              tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight no-outline'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.Culture;\r\n          },\r\n          onCellClicked: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            this.toggleLanguage(language, !language.IsEnabled);\r\n          },\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.IsEnabled;\r\n          },\r\n          cellRenderer: SiteLanguagesStatusComponent,\r\n          cellRendererParams: (() => {\r\n            const params: SiteLanguagesStatusParams = {\r\n              onToggleLanguage: (language, enable) => this.toggleLanguage(language, enable),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface SiteLanguagesViewModel {\r\n  languages: SiteLanguage[];\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-cards-box\">\r\n    <!-- Platform Info -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">settings_applications</mat-icon>\r\n        </div>\r\n        <mat-card-title>Platform</mat-card-title>\r\n        <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        @for (info of vm.systemInfos; track info) {\r\n          <div class=\"eav-info-row\">\r\n            <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n            <div class=\"eav-info-row__value\">\r\n              <span class=\"eav-info-row__value__span eav-click\" [tippy]=\"info.value\"\r\n                (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n              @if (info.link) {\r\n                <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\">{{ info.link.label }}</a>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n        <h4>Global Settings</h4>\r\n        <p>\r\n          This includes both pre-defined SystemSettings as well as custom Settings.\r\n          It will affect the entire Installation.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openGlobalSettings()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open Global Settings</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Site Info -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">public</mat-icon>\r\n        </div>\r\n        <mat-card-title>This Site</mat-card-title>\r\n        <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        @for (info of vm.siteInfos; track info) {\r\n          <div class=\"eav-info-row\">\r\n            <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n            <div class=\"eav-info-row__value\">\r\n              <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n              @if (info.link) {\r\n                @if (info.link.target === 'angular') {\r\n                  <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\">{{\r\n                    info.link.label\r\n                    }}</a>\r\n                }\r\n                @if (info.link.target !== 'angular') {\r\n                  <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n                }\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n        <div class=\"card-content-separator\"></div>\r\n        <h4>Site Settings</h4>\r\n        <p>\r\n          This includes both pre-defined SystemSettings as well as custom Settings.\r\n          It will affect the entire Site / Portal.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openSiteSettings()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open Site Settings</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Performance / Lightspeed -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">bolt</mat-icon>\r\n        </div>\r\n        <mat-card-title>Performance</mat-card-title>\r\n        <mat-card-subtitle>Performance Enhancements and Caching</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <app-feature-text-info [featureNameId]=\"'LightSpeedOutputCache'\" [asInfo]=\"true\"></app-feature-text-info>\r\n        @if (vm.lsEnabled) {\r\n          <div>\r\n            LightSpeed is enabled.\r\n            Configure it in each site/app as you need.\r\n          </div>\r\n        }\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/lightspeed' }\"></ng-container>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Security -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">local_police</mat-icon>\r\n        </div>\r\n        <mat-card-title>Security</mat-card-title>\r\n        <mat-card-subtitle>System Security Features</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <app-feature-text-info [featureNameId]=\"'ContentSecurityPolicy'\" [asInfo]=\"true\"></app-feature-text-info>\r\n        @if (vm.cspEnabled) {\r\n          <div>\r\n            ContentSecurityPolicy is enabled.\r\n            Configure it in each site/app as you need.\r\n          </div>\r\n        }\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/csp' }\"></ng-container>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Insights -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">speed</mat-icon>\r\n        </div>\r\n        <mat-card-title>2sxc Insights</mat-card-title>\r\n        <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <h4>2sxc Insights for Super Users</h4>\r\n        <p>\r\n          This is to access a special section to see what is really in the server memory.\r\n          It's intended for extensive debugging - see also\r\n          <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n        </p>\r\n        <div align=\"start\">\r\n          <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/insights' }\"></ng-container>\r\n          <button mat-button class=\"eav-button__with-icon\" (click)=\"openInsights()\">\r\n            <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n            <span>Open 2sxc Insights</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"card-content-separator\"></div>\r\n        <h4>Activate Page Level Logging</h4>\r\n        <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n          <div>\r\n            This will place insights-logs in the HTML of the user output for users with <code>?debug=true</code> in the\r\n            url.\r\n            It can only be activated for short periods of time.\r\n          </div>\r\n          <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n            <mat-label>Duration in Minutes</mat-label>\r\n            <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n              name=\"Duration\" #duration=\"ngModel\" [disabled]=\"vm.loading\">\r\n          </mat-form-field>\r\n          @if (duration.touched && duration.errors) {\r\n            @if (duration.errors.pattern) {\r\n              <app-field-hint [isError]=\"true\">\r\n                Only positive whole numbers\r\n              </app-field-hint>\r\n            }\r\n          }\r\n        </form>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!activateLogForm.valid || vm.loading\">\r\n          Activate\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Warnings -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">{{ vm.warningIcon }}</mat-icon>\r\n        </div>\r\n        <mat-card-title>Warnings</mat-card-title>\r\n        <mat-card-subtitle>System and Code Warnings</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        @for (info of vm.warningInfos; track info) {\r\n          <div class=\"eav-info-row\">\r\n            <div class=\"eav-info-row__label eav-long\">{{ info.label }}:</div>\r\n            <div class=\"eav-info-row__value\">\r\n              <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n              @if (info.link) {\r\n                @if (info.link.target === 'angular') {\r\n                  <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\">\r\n                    {{info.link.label}}</a>\r\n                }\r\n                @if (info.link.target !== 'angular') {\r\n                  <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n                }\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n    </mat-card>\r\n  </div>\r\n}\r\n\r\n\r\n<ng-template #docsLink let-icon let-label let-link=\"link\">\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{link}}\" target=\"_blank\" [tippy]=\"'online documentation'\">\r\n    <mat-icon class=\"eav-icon\">{{ icon ?? \"menu_book\" }}</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </a>\r\n</ng-template>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { DialogSettings } from '../../app-administration/models';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { GoToRegistration } from '../sub-dialogs/registration/go-to-registration';\r\nimport { InfoTemplate, SystemInfoViewModel } from './system-info.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n})\r\nexport class SystemInfoComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @Input() dialogSettings: DialogSettings;\r\n\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  viewModel$: Observable<SystemInfoViewModel>;\r\n\r\n  private systemInfoSet$: BehaviorSubject<SystemInfoSet | undefined>;\r\n  private languages$: BehaviorSubject<SiteLanguage[] | undefined>;\r\n  private loading$: BehaviorSubject<boolean>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private zoneService: ZoneService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n    private sxcInsightsService: SxcInsightsService,\r\n    private featuresService: FeaturesService,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.systemInfoSet$ = new BehaviorSubject<SystemInfoSet | undefined>(undefined);\r\n    this.languages$ = new BehaviorSubject<SiteLanguage[] | undefined>(undefined);\r\n    this.loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    this.buildViewModel();\r\n    this.getSystemInfo();\r\n    this.getLanguages();\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => {\r\n      this.buildViewModel();\r\n      this.getSystemInfo();\r\n      this.getLanguages();\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.systemInfoSet$.complete();\r\n    this.languages$.complete();\r\n    this.loading$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    const sitePrimaryApp = this.dialogSettings.Context.Site.PrimaryApp;\r\n    this.dialogService.openAppAdministration(sitePrimaryApp.ZoneId, sitePrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    const globalPrimaryApp = this.dialogSettings.Context.System.PrimaryApp;\r\n    this.dialogService.openAppAdministration(globalPrimaryApp.ZoneId, globalPrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.zoneService.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet$.next(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet$.next(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private getLanguages(): void {\r\n    this.zoneService.getLanguages().subscribe({\r\n      error: () => {\r\n        this.languages$.next(undefined);\r\n      },\r\n      next: (languages) => {\r\n        this.languages$.next(languages);\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildViewModel(): void {\r\n    const systemInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'CMS', value: `2sxc v.${systemInfoSet.System.EavVersion}` },\r\n          { label: 'Platform', value: `${systemInfoSet.System.Platform} v.${systemInfoSet.System.PlatformVersion}` },\r\n          { label: 'Zones', value: systemInfoSet.System.Zones.toString() },\r\n          { label: 'Fingerprint', value: systemInfoSet.System.Fingerprint },\r\n          {\r\n            label: 'Registered to',\r\n            value: systemInfoSet.License.Owner || '(unregistered)',\r\n            link: systemInfoSet.License.Owner\r\n              ? {\r\n                url: this.router.url + '/' + GoToRegistration.getUrl(),\r\n                label: 'manage',\r\n                target: 'angular',\r\n              }\r\n              : {\r\n                url: this.router.url + '/' + GoToRegistration.getUrl(),\r\n                label: 'register',\r\n                target: 'angular',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const siteInfos$ = combineLatest([this.systemInfoSet$, this.languages$]).pipe(\r\n      map(([systemInfoSet, languages]) => {\r\n        if (systemInfoSet == null || languages == null) { return; }\r\n        const allLanguages = languages.length;\r\n        const activeLanguages = languages.filter(l => l.IsEnabled).length;\r\n        const info: InfoTemplate[] = [\r\n          { label: 'Zone', value: systemInfoSet.Site.ZoneId.toString() },\r\n          { label: 'Site', value: systemInfoSet.Site.SiteId.toString() },\r\n          {\r\n            label: 'Languages',\r\n            value: `${activeLanguages}/${allLanguages}`,\r\n            link: {\r\n              url: 'languages',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n          {\r\n            label: 'Apps',\r\n            value: systemInfoSet.Site.Apps.toString(),\r\n            link: {\r\n              url: 'list',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const warningIcon$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        if (systemInfoSet.Messages.WarningsObsolete || systemInfoSet.Messages.WarningsOther) {\r\n          return 'warning';\r\n        }\r\n        return 'check';\r\n      }),\r\n    );\r\n    const warningInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          {\r\n            label: 'Warnings Obsolete',\r\n            value: systemInfoSet.Messages.WarningsObsolete.toString(),\r\n            link: !systemInfoSet.Messages.WarningsObsolete\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n          {\r\n            label: 'Warnings Other',\r\n            value: systemInfoSet.Messages.WarningsOther.toString(),\r\n            link: !systemInfoSet.Messages.WarningsOther\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      }),\r\n    );\r\n    const lsEnabled$ = this.featuresService.isEnabled$(FeatureNames.LightSpeed);\r\n    const cspEnabled$ = this.featuresService.isEnabled$(FeatureNames.ContentSecurityPolicy);\r\n    this.viewModel$ = combineLatest([systemInfos$, siteInfos$, this.loading$, warningIcon$, warningInfos$, lsEnabled$, cspEnabled$]).pipe(\r\n      map(([systemInfos, siteInfos, loading, warningIcon, warningInfos, lsEnabled, cspEnabled]) => {\r\n        const viewModel: SystemInfoViewModel = {\r\n          systemInfos,\r\n          siteInfos,\r\n          loading,\r\n          warningIcon,\r\n          warningInfos,\r\n          lsEnabled,\r\n          cspEnabled\r\n        };\r\n        // console.log('2dm VM', viewModel);\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{ dialogData.feature.Name }}</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p [innerHtml]=\"dialogData.feature.Description | safeHtml\"></p>\r\n    @if (dialogData.feature.NameId; as id) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">ID:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n        </div>\r\n      </div>\r\n    }\r\n    @if (dialogData.feature.Guid; as guid) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">GUID:</div>\r\n        <div class=\"eav-info-row__value eav_click\">\r\n          <span [tippy]=\"guid\" (click)=\"copyToClipboard(guid)\">{{ guid }}</span>\r\n        </div>\r\n      </div>\r\n    }\r\n    @if ((dialogData.feature.Security.Impact + ': ' + dialogData.feature.Security.Message); as security) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">Security Rating:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ security }}</span>\r\n        </div>\r\n      </div>\r\n    }\r\n  </mat-card-content>\r\n  <mat-card-actions align=\"end\">\r\n    @if (dialogData.feature.Link; as link) {\r\n      <button mat-raised-button class=\"eav-card-action-button\" color=\"accent\"\r\n        (click)=\"findOutMore(link)\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        Find out more\r\n      </button>\r\n    }\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n      Close\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-feature-details-dialog',\r\n  templateUrl: './feature-details-dialog.component.html',\r\n  styleUrls: ['./feature-details-dialog.component.scss']\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: FeatureDetailsDialogData,\r\n    private dialogRef: MatDialogRef<FeatureDetailsDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  styleUrls: ['./features-list-enabled-reason.component.scss'],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.EnabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { FeaturesStatusParams } from './features-status.models';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-features-status',\r\n  templateUrl: './features-status.component.html',\r\n  styleUrls: ['./features-status.component.scss'],\r\n})\r\nexport class FeaturesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean | null;\r\n  disabled: boolean;\r\n  tooltip: string;\r\n\r\n  private params: ICellRendererParams & FeaturesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & FeaturesStatusParams & IdFieldParams<Feature>): void {\r\n    this.params = params;\r\n    this.value = params.value;\r\n    this.disabled = params.isDisabled(params.data);\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params: ICellRendererParams & FeaturesStatusParams): boolean {\r\n    this.disabled = this.params.isDisabled(this.params.data);\r\n    return true;\r\n  }\r\n\r\n  toggle(): void {\r\n    const feature: Feature = this.params.data;\r\n    let nextValue: boolean;\r\n    switch (this.value) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.value = nextValue;\r\n    this.params.onToggle(feature, nextValue);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" [tippy]=\"tooltip\" [disabled]=\"disabled\" (change)=\"toggle()\" [ngClass]=\"{\r\n  'toggle-false': value === false,\r\n  'toggle-null': value === null\r\n  }\">\r\n</mat-slide-toggle>\r\n","import { License } from '../apps-management/models/license.model';\r\nimport { Feature } from './models';\r\n\r\n/**\r\n * Helper class used in union with other classes to add expiration hints to features.\r\n * It's implemented as a class, so it's easier to bundle static functions.\r\n */\r\nexport class ExpirationExtension {\r\n\r\n  /** The expiration date as a human readable string. Not from the server; generated on the client */\r\n  ExpMessage?: string;\r\n  ExpIcon?: string;\r\n\r\n  ExpWarningIcon?: string;\r\n\r\n  static expandFeature(feature: Feature): Feature & ExpirationExtension {\r\n    return {\r\n      ...feature,\r\n      ...ExpirationExtension.getExpiration(feature?.Expiration)\r\n    };\r\n  }\r\n\r\n  static expandLicense(license: License): License & ExpirationExtension {\r\n    // Wrap in Try-Catch to avoid errors in the UI\r\n    try {\r\n      // find the lowest expiration date on the features\r\n      const lowestExpiration = license?.Features?.map(f => f.Expiration).sort()[0];\r\n      // if there is no lowest expiration date, skip the rest\r\n      if (lowestExpiration == null) return license;\r\n\r\n      // debugger;\r\n      const withState = {\r\n        ...license,\r\n        ...ExpirationExtension.getExpiration(lowestExpiration),\r\n      };\r\n\r\n      return withState;\r\n    } catch (error) {\r\n      return license;\r\n    }\r\n  }\r\n\r\n  private static getExpiration(dateString: string): ExpirationExtension {\r\n    // Inner helper to create the final result\r\n    const result = (icon: string, text: string) => ({\r\n      ExpMessage: (icon != null ? icon + ' ' : '') + text,\r\n      ExpIcon: icon,\r\n      ExpWarningIcon: icon != '✅' ? icon : null,\r\n    })\r\n    const expires = dateString?.split('T')[0];\r\n    // no valid expiration date\r\n    if (expires == null) return result(null, null);\r\n    // never expires\r\n    if (expires.startsWith('9999')) return result('✅', 'never');\r\n    const expDate = new Date(expires);\r\n    // show \"expired\" if it's over-due\r\n    if (expDate < new Date()) return result('🛑', 'expired');\r\n    // return \"today\" if it's today\r\n    if (expDate.toDateString() === new Date().toDateString()) return result('⚠️', 'today');\r\n    // return \"tomorrow\" if it's tomorrow\r\n    if (expDate.toDateString() === new Date(new Date().setDate(new Date().getDate() + 1)).toDateString()) return result('⚠️', 'tomorrow');\r\n    // Warn if it's within 30 days\r\n    if (expDate < new Date(new Date().setDate(new Date().getDate() + 30))) return result('⚠️', expires);\r\n    // Show special EOY if it's at the end of the year - the most common expiration\r\n    if (expires.endsWith('12-31')) return result('✅', `EOY ${expires.split('-')[0]}`);\r\n    // otherwise: just show the date\r\n    return result('❓', expires);\r\n  }\r\n\r\n}","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({ selector: '[appAgGridHeight]' })\r\nexport class AgGridHeightDirective implements OnChanges {\r\n  @Input() itemsCount = 0;\r\n  @Input() headerHeight = 32;\r\n  @Input() rowHeight = 48;\r\n  @Input() maxRows = 100;\r\n\r\n  /** Fixes a bug where scrollbar appears when then is no overflow */\r\n  private extraHeight = 2;\r\n\r\n  private element: HTMLElement;\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.itemsCount != null) {\r\n      const rows = this.itemsCount === 0 ? 2 : this.itemsCount > this.maxRows ? this.maxRows : this.itemsCount;\r\n      this.element.style.height = `${this.headerHeight + rows * this.rowHeight + this.extraHeight}px`;\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({ name: 'licensesOrder' })\r\nexport class LicensesOrderPipe implements PipeTransform {\r\n\r\n  transform(licenses: License[]): any {\r\n    if (!Array.isArray(licenses)) { return licenses; }\r\n\r\n    const sorted = [...licenses].sort((a: License, b: License) => {\r\n      if (a.Priority < b.Priority) {\r\n        return -1;\r\n      } else if (a.Priority > b.Priority) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return sorted;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({ name: 'activeFeaturesCount' })\r\nexport class ActiveFeaturesCountPipe implements PipeTransform {\r\n\r\n  transform(license: License) {\r\n    return `${license.Features.filter(f => f.IsEnabled).length}/${license.Features.length}`;\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-accordion multi>\r\n    @for (license of vm.licenses | licensesOrder; track trackLicenses($index, license)) {\r\n      <mat-expansion-panel #panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            <mat-icon class=\"panel-icon\" [tippy]=\"license.IsEnabled ? 'License is active' : 'License is not active'\">{{\r\n            license.IsEnabled ? 'check_circle_outline' : 'cancel' }}</mat-icon>\r\n            <div>\r\n              <div class=\"panel-title\">\r\n                <span>{{ license.Name }}</span>\r\n                <span class=\"active-features-count\">{{ license | activeFeaturesCount }}</span>\r\n                <span> {{ license.ExpWarningIcon }}</span>\r\n              </div>\r\n              <div class=\"panel-description\" [ngClass]=\"{ 'expanded': panel.expanded }\">\r\n                {{ license.Description }}\r\n              </div>\r\n            </div>\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        @if (panel.expanded) {\r\n          <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"license.Features\" [gridOptions]=\"gridOptions\"\r\n            appAgGridHeight [itemsCount]=\"license.Features?.length\">\r\n          </ag-grid-angular>\r\n        }\r\n      </mat-expansion-panel>\r\n    }\r\n  </mat-accordion>\r\n}\r\n\r\n<mat-dialog-actions align=\"start\">\r\n  <button mat-button class=\"eav-button__with-icon\" tippy=\"Registration\" (click)=\"openRegistration()\">\r\n    <mat-icon class=\"eav-icon\">app_registration</mat-icon>\r\n    <span>Registration</span>\r\n  </button>\r\n</mat-dialog-actions>","import { AgGridAngular } from '@ag-grid-community/angular';\r\nimport { GridOptions } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\n// tslint:disable-next-line:max-line-length\r\nimport { BehaviorSubject, catchError, forkJoin, map, Observable, of, share, startWith, Subject, switchMap, tap, timer } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { Feature } from '../../features/models/feature.model';\r\nimport { License } from '../models/license.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { GoToRegistration } from '../sub-dialogs/registration/go-to-registration';\r\nimport { FeatureDetailsDialogComponent } from './feature-details-dialog/feature-details-dialog.component';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog/feature-details-dialog.models';\r\nimport { FeaturesListEnabledReasonComponent } from './features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from './features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesStatusComponent } from './features-status/features-status.component';\r\nimport { FeaturesStatusParams } from './features-status/features-status.models';\r\nimport { ExpirationExtension } from '../../features/expiration-extension';\r\n\r\n@Component({\r\n  selector: 'app-license-info',\r\n  templateUrl: './license-info.component.html',\r\n  styleUrls: ['./license-info.component.scss'],\r\n})\r\nexport class LicenseInfoComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(AgGridAngular) private gridRef?: AgGridAngular;\r\n\r\n  disabled$ = new BehaviorSubject(false);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private refreshLicenses$ = new Subject<void>();\r\n  \r\n  viewModel$: Observable<LicenseInfoViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private featuresConfigService: FeaturesConfigService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => { this.refreshLicenses$.next(); }));\r\n    this.viewModel$ = //combineLatest([\r\n      this.refreshLicenses$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.featuresConfigService.getLicenses().pipe(catchError(() => of(undefined)))),\r\n        tap(() => this.disabled$.next(false)),\r\n\r\n        // Fiddle with the data for development tests\r\n        // 2023-11-16 2dm disabled - causes trouble in production\r\n        // @STV - do you still need this? or is this a forgotten debug code?\r\n        // map(licenses => {\r\n        //   var licTesting = licenses[licenses.length - 2];\r\n        //   licTesting.Features[licTesting.Features.length - 1].Expiration = \"2023-08-25\";\r\n        //   return licenses;\r\n        // }),\r\n\r\n        // Expand the data to have pre-calculated texts/states\r\n        map(licenses => licenses.map(l => {\r\n          // const expandedFeatures = l.Features.map(f => ExpirationExtension.expandFeature(f));\r\n          return ({\r\n            ...ExpirationExtension.expandLicense(l),\r\n            Features: l.Features.map(f => ExpirationExtension.expandFeature(f)),\r\n          });\r\n        })),\r\n\r\n        // Share the resulting stream with all subscribers\r\n        share(),\r\n      )\r\n    //])\r\n    .pipe(\r\n      map((licenses) => ({ licenses })),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.disabled$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  trackLicenses(index: number, license: License): string {\r\n    return license.Guid;\r\n  }\r\n\r\n  openRegistration(): void {\r\n    this.router.navigate([GoToRegistration.getUrl()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private showFeatureDetails(feature: Feature): void {\r\n    const data: FeatureDetailsDialogData = {\r\n      feature,\r\n    };\r\n    this.dialog.open(FeatureDetailsDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '600px',\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private toggleFeature(feature: Feature, enabled: boolean): void {\r\n    this.disabled$.next(true);\r\n    const state: FeatureState = {\r\n      FeatureGuid: feature.Guid,\r\n      Enabled: enabled,\r\n    };\r\n    forkJoin([this.featuresConfigService.saveFeatures([state]), timer(100)]).subscribe({\r\n      error: () => {\r\n        this.refreshLicenses$.next();\r\n      },\r\n      next: () => {\r\n        this.refreshLicenses$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  // Note: @SDV\r\n  // I think this should serve as a good example of how to use the grid\r\n  // 1. eg. with cellDefaults and similar initial objects containing most commonly used options here\r\n  // 2. Also we should probably never add a valueGetter for the simple properties\r\n  // ...not sure why it's even in here, my guess is copy-paste of code which wasn't understood properly\r\n  // 3. I think the header-name should always be the first line, then the field\r\n  private buildGridOptions(): GridOptions {\r\n    const cellDefaults = {\r\n      cellClass: 'no-outline',\r\n      sortable: true,\r\n    };\r\n    const cellDefaultsTextFilter = {\r\n      ...cellDefaults,\r\n      filter: 'agTextColumnFilter',\r\n    };\r\n\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'NameId',\r\n          ...cellDefaultsTextFilter,\r\n          width: 200,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          // TODO: @SDV - most of these columns had a valueGetter that was 3 lines long\r\n          // it was easy to reduce to 1 - but actually it is not needed!\r\n          // Original - too long\r\n          // valueGetter: (params) => {\r\n          //   const feature: Feature = params.data;\r\n          //   return feature.NameId;\r\n          // },\r\n          // Optimized - 1 line - but actually not needed\r\n          // valueGetter: (params) => (params.data as Feature).NameId,\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Feature> = {\r\n              tooltipGetter: (feature: Feature) => feature.NameId,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          ...cellDefaultsTextFilter,\r\n          flex: 3,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          onCellClicked: (params) => {\r\n            this.showFeatureDetails(params.data as Feature);\r\n          },\r\n          // valueGetter: (params) => (params.data as Feature).Name,\r\n        },\r\n        {\r\n          field: 'IsEnabled',\r\n          headerName: 'Enabled',\r\n          ...cellDefaults,\r\n          width: 80,\r\n          headerClass: 'dense',\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: FeaturesListEnabledComponent,\r\n          // valueGetter: (params) => (params.data as Feature).Enabled,\r\n        },\r\n        {\r\n          headerName: 'Reason',\r\n          field: 'EnabledReason',\r\n          ...cellDefaultsTextFilter,\r\n          flex: 1,\r\n          minWidth: 150,\r\n          cellRenderer: FeaturesListEnabledReasonComponent,\r\n          // valueGetter: (params) => (params.data as Feature).EnabledReason,\r\n        },\r\n        {\r\n          headerName: 'Expiration',\r\n          field: 'ExpMessage',\r\n          ...cellDefaultsTextFilter,\r\n          width: 120,\r\n          // valueGetter: (params) => (params.data as FeatureWithUi)?.ExpirationText,\r\n          tooltipValueGetter: (params) => (params.data as Feature & ExpirationExtension)?.Expiration,\r\n        },\r\n        {\r\n          headerName: '',\r\n          field: 'EnabledInConfiguration',\r\n          width: 62,\r\n          cellClass: 'secondary-action no-outline no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: FeaturesStatusComponent,\r\n          // valueGetter: (params) => (params.data as Feature).EnabledInConfiguration,\r\n          cellRendererParams: (() => {\r\n            const params: FeaturesStatusParams & IdFieldParams<Feature> = {\r\n              isDisabled: (feature) => !feature.IsConfigurable || this.disabled$.value,\r\n              onToggle: (feature, enabled) => this.toggleFeature(feature, enabled),\r\n              tooltipGetter: (feature: Feature) => feature.IsConfigurable ? \"Toggle off | default | on\" : \"This feature can't be configured\",\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\n\r\ninterface LicenseInfoViewModel {\r\n  licenses: (License & ExpirationExtension)[];\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper eav-no-scrollbar\" appToggleDebug>\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">\r\n        Manage Zone {{ zoneId }}\r\n      </div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-tab-content nav-component-wrapper\">\r\n      <router-outlet></router-outlet>\r\n      <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n      <mat-tab-group class=\"mat-mdc-tab-group-max-height\" dynamicHeight color=\"accent\" (selectedTabChange)=\"changeTab($event)\"\r\n        [selectedIndex]=\"vm.tabIndex\">\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Info\">\r\n            <mat-icon>settings</mat-icon>\r\n            <span>System</span>\r\n          </div>\r\n          <app-system-info *matTabContent [dialogSettings]=\"vm.dialogSettings\"></app-system-info>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Apps\">\r\n            <mat-icon>star_border</mat-icon>\r\n            <span>Apps</span>\r\n          </div>\r\n          <app-apps-list *matTabContent></app-apps-list>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Languages\">\r\n            <mat-icon>translate</mat-icon>\r\n            <span>Languages</span>\r\n          </div>\r\n          <app-site-languages *matTabContent></app-site-languages>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Extensions and Features\">\r\n            <mat-icon>tune</mat-icon>\r\n            <span>Extensions / Features</span>\r\n          </div>\r\n          <app-license-info *matTabContent></app-license-info>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, filter, map, startWith } from 'rxjs';\r\nimport { DialogSettings } from '../../app-administration/models';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n})\r\nexport class AppsManagementNavComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  zoneId = this.context.zoneId;\r\n  dialogSettings$ = new BehaviorSubject<DialogSettings>(undefined);\r\n\r\n  private tabs = ['system', 'list', 'languages', 'license']; // tabs order has to match template\r\n\r\n  viewModel$: Observable<AppsManagementNavViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private context: Context,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n  ) {\r\n    super(router, route);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.fetchDialogSettings();\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => { this.fetchDialogSettings(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.dialogSettings$,\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map(() => this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n        filter(tabIndex => tabIndex >= 0),\r\n        startWith(this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n      )\r\n    ]).pipe(\r\n      map(([dialogSettings, tabIndex]) => ({ dialogSettings, tabIndex })),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogSettings$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n\r\n  private fetchDialogSettings() {\r\n    this.appDialogConfigService.getShared$(0)/*.getDialogSettings(0)*/.subscribe(dialogSettings => {\r\n      this.dialogSettings$.next(dialogSettings);\r\n    });\r\n  }\r\n}\r\n\r\ninterface AppsManagementNavViewModel {\r\n  dialogSettings: DialogSettings;\r\n  tabIndex: number;\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n};\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>","import { ChangeDetectorRef, Component, Input, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest, switchMap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss']\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor(\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    featuresService: FeaturesService,\r\n    changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(dialog, viewContainerRef, changeDetectorRef , featuresService);\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(map(([feature, asInfo, show]) => \r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      })));\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ vm.feature.Name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"vm.feature.Description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (vm.feature.IsEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (vm.feature.NameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      @if (vm.feature.Link; as link) {\r\n        <button mat-raised-button color=\"accent\"\r\n          class=\"eav-card-action-button\" (click)=\"findOutMore(link)\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          {{ \"Features.FindOutMore\" | translate }}\r\n        </button>\r\n      }\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, combineLatest, map } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss']\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<FeatureInfoViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.featureDetailService.getFeatureDetails(this.dialogData)\r\n    ]).pipe(map(([feature]) => ({ feature })));\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void { \r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\ninterface FeatureInfoViewModel {\r\n  feature: Feature;\r\n}","import { ChangeDetectorRef, Directive, Input, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    protected featuresService: FeaturesService\r\n  ) {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.IsEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    FeatureComponentBase.openDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  /** Public/Static so it can be called from elsewhere */\r\n  public static openDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n    dialog.open(FeatureInfoDialogComponent, {\r\n      autoFocus: false,\r\n      data: featureId,\r\n      viewContainerRef: viewContainerRef,\r\n      width: '400px',\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected refreshOnChildClosedDeep() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\n\r\n@Directive({ selector: '[appToggleDebug]' })\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}