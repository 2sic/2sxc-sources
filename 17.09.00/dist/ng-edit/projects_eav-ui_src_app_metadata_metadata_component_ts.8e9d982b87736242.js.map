{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts.8e9d982b87736242.js","mappings":"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","names":["AppDialogConfigService","ServiceBase","constructor","http","context","globalConfigService","featuresService","super","EavLogger","this","dialogSettings$","log","add","svcId","loadFromService","ngOnDestroy","destroy","getCurrent$","appId","getShared$","getSitePrimaryApp$","pipe","map","dc","Context","Site","PrimaryApp","getGlobalPrimaryApp$","System","getDialogSettings","shareReplay","refCount","reqBy","get","params","toString","dlgSettings","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","static","t","i0","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_8__","wxM","factory","ɵfac","ExportAppPartsService","dnnContext","getContentInfo","scope","$2sxc","apiUrl","webApiAppPartsRoot","appid","zoneId","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ExportAppService","getAppInfo","webApiAppRoot","exportApp","includeContentGroups","resetAppGuid","exportForVersionControl","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","file","formData","FormData","append","post","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","delete","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ContentItemsService","contentTypeStaticName","getColumns","webApiFieldsAll","staticName","importItem","webApiEntityRoot","_angular_core__WEBPACK_IMPORTED_MODULE_7__","FeatureDetailService","getFeatureDetails","featureNameId","webApiRoot","nameId","_angular_core__WEBPACK_IMPORTED_MODULE_0__","id_r4","_r6","ctx_r5","copyToClipboard","ctx","link_r7","_r9","ctx_r8","findOutMore","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Conditional_17_Template","_r11","ctx_r10","closeDialog","feature","Name","Description","FeatureInfoDialogComponent_Conditional_0_contFlowTmp","NameId","Link","FeatureInfoDialogComponent","dialogData","dialogRef","snackBar","featureDetailService","ngOnInit","viewModel$","combineLatest","text","duration","link","close","MAT_DIALOG_DATA","core","In1","selectors","decls","vars","consts","template","rf","FeatureInfoDialogComponent_Conditional_0_Template","FeatureInfoDialogComponent_contFlowTmp","FeatureComponentBase","value","featureNameId$","next","showIf","showIf$","dialog","viewContainerRef","changeDetectorRef","BehaviorSubject","feature$","featName","get$","show$","feat","openDialog","featureId","autoFocus","data","width","markForCheck","Sc5","inputs","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","ctx_r0","message","ConfirmDeleteDialogComponent","hostClass","confirm","hostVars","hostBindings","ConfirmDeleteDialogComponent_Conditional_4_Template","entityTitle","entityId","MetadataActionsComponent","agInit","refresh","deleteMetadata","onDelete","MetadataContentTypeComponent","metadata","_Type","scopeOption_r7","name","MetadataSaveDialogComponent_Conditional_0_Conditional_11_For_5_Template","vm_r1","scopeOptions","length","ctx_r2","dropdownInsertValue","contentType_r14","StaticName","Label","MetadataSaveDialogComponent_Conditional_0_Conditional_15_For_2_Template","contentTypes","MetadataSaveDialogComponent_Conditional_0_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_0_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_0_Conditional_16_Template","_r21","ctx_r20","toggleGuidedContentType","ctx_r22","MetadataSaveDialogComponent_Conditional_0_Conditional_24_Template","$event","ctx_r23","toggleAdvancedMode","ctx_r24","ctx_r25","form","advancedMode","guidedContentType","_c0","controls","touched","errors","required","valid","MetadataSaveDialogComponent","contentTypesService","contentTypes$","scopeOptions$","buildForm","fetchScopes","complete","event","checked","formValues","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","eavConstants","scopes","default","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","some","option","fetchContentTypes","retrieveContentTypes","getScopes","MetadataSaveDialogComponent_Conditional_0_Template","MetadataSaveDialogComponent_contFlowTmp","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_0_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_8_Template","Target","TargetType","_r16","ctx_r15","createMetadata","recommendation_r18","Icon","Enabled","_r27","$implicit","ctx_r26","MetadataComponent_Conditional_0_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_0_Conditional_16_For_10_Conditional_2_Template","_r29","ctx_r28","openChange","ctx_r30","MetadataComponent_Conditional_0_Conditional_16_For_10_Template","fabOpen","recommendations","_r33","ctx_r32","MetadataComponent_Conditional_0_Conditional_9_Template","MetadataComponent_Conditional_0_Conditional_10_Template","MetadataComponent_Conditional_0_Conditional_15_Template","MetadataComponent_Conditional_0_Conditional_16_Template","title","gridOptions","MetadataComponent","BaseComponent","router","route","metadataService","entitiesService","contentItemsService","buildGridOptions","metadataSet$","Items","Recommendations","itemFor$","undefined","fabOpen$","targetType","parseInt","snapshot","paramMap","keyType","key","decodeURIComponent","fetchFor","fetchMetadata","subscription","refreshOnChildClosedShallow","filteredRecs$","set","r","i","Count","recommendation","CreateEmpty","create","For","calculateItemFor","error","createMetadataForm","MissingFeature","afterClosed","items","ContentTypeName","formUrl","convertFormToUrl","navigate","relativeTo","Object","values","find","m","target","keyTypes","Guid","number","Number","string","String","item","getMetadata","take","forEach","startsWith","replace","atob","editMetadata","EntityId","confirmed","DeleteWarning","isConfirmed","defaultGridOptions","columnDefs","headerName","field","headerClass","cellClass","split","sortable","valueGetter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","flex","minWidth","sort","onCellClicked","pinned","i5","i6","features","MetadataComponent_Conditional_0_Template","MetadataComponent_contFlowTmp","FieldHintComponent_Case_1_ng_container_1_Template","_r3","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","ngContentSelectors","_c1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","FieldHintComponent_contFlowTmp","ClickStopPropagationDirective","onClick","stopPropagation","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","readAsText"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\n\r\nconst logThis = false;\r\n\r\nconst webApiSettings = 'admin/dialog/settings';\r\n\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService extends ServiceBase implements OnDestroy {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    // private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    super(new EavLogger('AppDialogConfigService', logThis));\r\n    this.log.add('using context #', this.context.log.svcId);\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.destroy();\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions in dialogSettings$ are killed\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getCurrent$(): Observable<DialogSettings> {\r\n    const appId = this.context.appId;\r\n    this.log.add('getCurrent$', 'appId', appId);\r\n    return this.getShared$(appId);\r\n  }\r\n\r\n    // new 2dg\r\n    getSitePrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.Site.PrimaryApp));\r\n    }\r\n  \r\n    getGlobalPrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.System.PrimaryApp));\r\n    }\r\n  \r\n\r\n  getShared$(appId: number): Observable<DialogSettings> {\r\n    this.log.add('getShared$', 'appId', appId);\r\n    // if (!this.dialogSettings$[appIdToUse])\r\n    this.dialogSettings$[appId] ??= this.getDialogSettings(appId, 'getShared$').pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n  }\r\n\r\n  getDialogSettings(appId?: number, reqBy?: string): Observable<DialogSettings> {\r\n    this.log.add('getDialogSettings', 'appId', appId, 'reqBy', reqBy);\r\n    return this.http.get<DialogSettings>(webApiSettings, {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dlgSettings => {\r\n        dlgSettings.Context.Language.List = dlgSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dlgSettings;\r\n      }),\r\n      tap(dlgSettings => {\r\n        this.globalConfigService.allowDebug(dlgSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  exportApp(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Export')\r\n      + '?appId=' + this.context.appId\r\n      + '&zoneId=' + this.context.zoneId\r\n      + '&includeContentGroups=' + includeContentGroups\r\n      + '&resetAppGuid=' + resetAppGuid;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityList } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\n@Injectable()\r\nexport class ContentItemsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get<ContentItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appId: this.context.appId.toString(), staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ vm.feature.Name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"vm.feature.Description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (vm.feature.IsEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (vm.feature.NameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      @if (vm.feature.Link; as link) {\r\n        <button mat-raised-button color=\"accent\"\r\n          class=\"eav-card-action-button\" (click)=\"findOutMore(link)\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          {{ \"Features.FindOutMore\" | translate }}\r\n        </button>\r\n      }\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, combineLatest, map } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss']\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<FeatureInfoViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.featureDetailService.getFeatureDetails(this.dialogData)\r\n    ]).pipe(map(([feature]) => ({ feature })));\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void { \r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\ninterface FeatureInfoViewModel {\r\n  feature: Feature;\r\n}","import { ChangeDetectorRef, Directive, Input, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    protected featuresService: FeaturesService\r\n  ) {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.IsEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    FeatureComponentBase.openDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  /** Public/Static so it can be called from elsewhere */\r\n  public static openDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n    dialog.open(FeatureInfoDialogComponent, {\r\n      autoFocus: false,\r\n      data: featureId,\r\n      viewContainerRef: viewContainerRef,\r\n      width: '400px',\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Delete {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog(true)\">Delete</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete-dialog',\r\n  templateUrl: './confirm-delete-dialog.component.html',\r\n  styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialogRef: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialogRef.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-metadata-actions',\r\n  templateUrl: './metadata-actions.component.html',\r\n  styleUrls: ['./metadata-actions.component.scss'],\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\n\r\n@Component({\r\n  selector: 'app-metadata-content-type',\r\n  templateUrl: './metadata-content-type.component.html',\r\n  styleUrls: ['./metadata-content-type.component.scss'],\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\" [tippyDisabled]=\"!metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>Create Metadata</mat-card-title>\r\n      <mat-card-subtitle>\r\n        This is a special operation to add an item which is metadata for another item,\r\n        see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"form\">\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedContentType) {\r\n          <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!vm.scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of vm.scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n              <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Content Type of metadata item -->\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Content Type</mat-label>\r\n          @if (guidedContentType) {\r\n            <mat-select formControlName=\"contentType\" required\r\n              [placeholder]=\"!vm.contentTypes.length ? 'No items found' : ''\">\r\n              @for (contentType of vm.contentTypes; track contentType) {\r\n                <mat-option [value]=\"contentType.StaticName\">\r\n                  {{ contentType.Label }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedContentType) {\r\n            <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n          }\r\n          <div matTextSuffix>\r\n            <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedContentType(true)\">\r\n              <mat-icon>search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedContentType(false)\">\r\n              <mat-icon>text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n          <app-field-hint\r\n            [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      </form>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"eav-card-actions\">\r\n      <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n        {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n      </mat-slide-toggle>\r\n      <div>\r\n        <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\" (click)=\"confirm()\">\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable, startWith } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { MetadataSaveDialogViewModel, MetadataSaveFormValues } from './metadata-save-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-metadata-save-dialog',\r\n  templateUrl: './metadata-save-dialog.component.html',\r\n  styleUrls: ['./metadata-save-dialog.component.scss']\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  viewModel$: Observable<MetadataSaveDialogViewModel>;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  private contentTypes$: BehaviorSubject<ContentType[]>;\r\n  private scopeOptions$: BehaviorSubject<ScopeOption[]>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<MetadataSaveDialogComponent>,\r\n    private contentTypesService: ContentTypesService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contentTypes$ = new BehaviorSubject<ContentType[]>([]);\r\n    this.scopeOptions$ = new BehaviorSubject<ScopeOption[]>([]);\r\n\r\n    this.buildForm();\r\n    this.fetchScopes();\r\n\r\n    this.viewModel$ = combineLatest([this.contentTypes$, this.scopeOptions$]).pipe(\r\n      map(([contentTypes, scopeOptions]) => {\r\n        const viewModel: MetadataSaveDialogViewModel = {\r\n          contentTypes,\r\n          scopeOptions,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contentTypes$.complete();\r\n    this.scopeOptions$.complete();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialogRef.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions$.value.some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions$.next([newScopeOption, ...this.scopeOptions$.value]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.fetchContentTypes(newScope);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchContentTypes(scope: string): void {\r\n    this.contentTypesService.retrieveContentTypes(scope).subscribe(contentTypes => {\r\n      this.contentTypes$.next(contentTypes);\r\n    });\r\n  }\r\n\r\n  private fetchScopes(): void {\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions$.next(scopes);\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">\r\n        {{ title || 'Metadata' }}\r\n      </div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <p>\r\n        @if (!vm.itemFor) {\r\n          This item is not metadata for anything else.\r\n        }\r\n        @if (vm.itemFor) {\r\n          This item is metadata for:\r\n          <br>Target: {{ vm.itemFor.Target }}\r\n          <br>TargetType: {{ vm.itemFor.TargetType }}\r\n          @if (vm.itemFor.KeyNumber) {\r\n            <br>Key Number: {{ vm.itemFor.KeyNumber }}\r\n          }\r\n          @if (vm.itemFor.KeyGuid) {\r\n            <br>Key Guid: {{ vm.itemFor.KeyGuid }}\r\n          }\r\n          @if (vm.itemFor.KeyString) {\r\n            <br>Key String: {{ vm.itemFor.KeyString }}\r\n          }\r\n          @if (vm.itemFor.Title) {\r\n            <br>Title: {{ vm.itemFor.Title }}\r\n          }\r\n        }\r\n      </p>\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.metadata\" [gridOptions]=\"gridOptions\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      @if (vm.recommendations.length === 0) {\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\"\r\n          (click)=\"createMetadata()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      }\r\n      @if (vm.recommendations.length > 0) {\r\n        <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': vm.fabOpen }\"\r\n          (openChange)=\"openChange($event)\">\r\n          <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n            <button mat-fab>\r\n              <mat-icon class=\"spin180\">{{ vm.fabOpen ? 'close' : 'add' }}</mat-icon>\r\n            </button>\r\n          </eco-fab-speed-dial-trigger>\r\n          <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n            <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\"\r\n              (click)=\"createMetadata()\">\r\n              <mat-icon>search</mat-icon>\r\n            </button>\r\n            @for (recommendation of vm.recommendations; track recommendation) {\r\n              <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" [attr.label]=\"recommendation.Title\"\r\n                (click)=\"createMetadata(recommendation)\">\r\n                @if (recommendation.Icon) {\r\n                  <div style=\"color: white; fill: white;\" [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n                    [matBadgeHidden]=\"recommendation.Enabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\"></div>\r\n                } @else {\r\n                  <mat-icon>add</mat-icon>\r\n                }\r\n              </button>\r\n            }\r\n          </eco-fab-speed-dial-actions>\r\n        </eco-fab-speed-dial>\r\n      }\r\n    </mat-dialog-actions>\r\n  </div>\r\n}","import { GridOptions } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable, startWith, take, tap } from 'rxjs';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { EavFor } from '../edit/shared/models/eav';\r\nimport { MetadataService } from '../permissions';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataDto, MetadataItem, MetadataRecommendation, MetadataViewModel } from './models/metadata.model';\r\nimport { FeatureComponentBase } from '../features/shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss'],\r\n})\r\nexport class MetadataComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private metadataSet$ = new BehaviorSubject<MetadataDto>({ Items: [], Recommendations: [] } as MetadataDto);\r\n  private itemFor$ = new BehaviorSubject<EavFor | undefined>(undefined);\r\n  private fabOpen$ = new BehaviorSubject(false);\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  title = decodeURIComponent(this.route.snapshot.paramMap.get('title') ?? '');\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n  viewModel$: Observable<MetadataViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<MetadataComponent>,\r\n\r\n    private metadataService: MetadataService,\r\n    private snackBar: MatSnackBar,\r\n    private entitiesService: EntitiesService,\r\n    private contentItemsService: ContentItemsService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchFor();\r\n    this.fetchMetadata();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { this.fetchMetadata(); }));\r\n\r\n    const filteredRecs$ = this.metadataSet$.pipe(\r\n      map((set) => set.Recommendations.filter(r => set.Items.filter(i => i._Type.Id === r.Id).length < r.Count)),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([this.metadataSet$, filteredRecs$, this.itemFor$, this.fabOpen$]).pipe(\r\n      map(([metadata, recommendations, itemFor, fabOpen]) => {\r\n        const viewModel: MetadataViewModel = {\r\n          metadata: metadata.Items,\r\n          recommendations,\r\n          itemFor,\r\n          fabOpen,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.metadataSet$.complete();\r\n    this.itemFor$.complete();\r\n    this.fabOpen$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        FeatureComponentBase.openDialog(this.dialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.entitiesService.create(recommendation.Id, { For: this.calculateItemFor() }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.fetchMetadata();\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.fetchMetadata();\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.dialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) { return; }\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [{\r\n        ContentTypeName: contentType,\r\n        For: this.calculateItemFor(),\r\n      }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(): EavFor {\r\n    const itemFor: EavFor = {\r\n      Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n      TargetType: this.targetType,\r\n      ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n      ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n      ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n    };\r\n    return itemFor;\r\n  }\r\n\r\n  private fetchFor() {\r\n    if (!this.contentTypeStaticName) { return; }\r\n\r\n    this.contentItemsService.getAll(this.contentTypeStaticName).subscribe(items => {\r\n      const item = items.find(i => i.Guid === this.key);\r\n      if (item?.For) {\r\n        this.itemFor$.next(item.For);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchMetadata() {\r\n    this.metadataService.getMetadata(this.targetType, this.keyType, this.key).pipe(\r\n      take(1),\r\n      map(metadata => {\r\n        metadata.Recommendations.forEach(r => {\r\n          if (r.Icon?.startsWith('base64:')) {\r\n            r.Icon = r.Icon.replace('base64:', '');\r\n            r.Icon = window.atob(r.Icon);\r\n            // used for coloring black icons to white\r\n            r.Icon = r.Icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n          }\r\n        });\r\n        return metadata;\r\n      })\r\n    ).subscribe(this.metadataSet$);\r\n  }\r\n\r\n  private editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [{ EntityId: metadata.Id }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.metadataSet$.value.Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.dialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed) {\r\n          this.deleteMetadata(metadata, true);\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.entitiesService.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchMetadata();\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            return metadata.Id;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<MetadataItem> = {\r\n              tooltipGetter: (metadata: MetadataItem) => `ID: ${metadata.Id}\\nGUID: ${metadata.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Title',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            return metadata.Title;\r\n          },\r\n          onCellClicked: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            this.editMetadata(metadata);\r\n          },\r\n        },\r\n        {\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            return `${metadata._Type.Name}${metadata._Type.Title !== metadata._Type.Name ? ` (${metadata._Type.Title})` : ''}`;\r\n          },\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          width: 42,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: MetadataActionsParams = {\r\n              onDelete: (metadata) => this.deleteMetadata(metadata),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"x_google_ignoreList":[]}