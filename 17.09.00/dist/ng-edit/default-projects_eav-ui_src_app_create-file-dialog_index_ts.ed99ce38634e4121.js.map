{"version":3,"file":"default-projects_eav-ui_src_app_create-file-dialog_index_ts.ed99ce38634e4121.js","mappings":"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","names":["appFilesAsset","SourceService","constructor","http","context","dnnContext","this","get","viewKey","global","urlItems","$2sxc","apiUrl","params","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","save","post","getAll","mask","Files","forEach","file","Shared","getWebApis","files","isShared","isCompiled","splitIndex","path","lastIndexOf","fileExtIndex","folder","substring","name","endpointPath","edition","getWebApiDetails","apiPath","zoneId","getPredefinedTemplates","purpose","type","getPreview","templateKey","create","test","find","i","EntityId","toString","IsShared","Path","templateId","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","wxM","factory","ɵfac","MatInputAutofocusDirective","matInput","elementRef","autofocusSelectValue","ngOnInit","setTimeout","focus","toBoolean","nativeElement","setSelectionRange","value","length","valueLowerCase","core","Sc5","selectors","inputs","platform_r9","purpose_r14","template_r19","Key","Name","_c0","vm_r1","loadingPreview","preview","previewError","CreateFileDialogComponent_Conditional_0_For_17_Template","CreateFileDialogComponent_Conditional_0_For_24_Template","CreateFileDialogComponent_Conditional_0_For_31_Template","CreateFileDialogComponent_Conditional_0_Conditional_37_Template","CreateFileDialogComponent_Conditional_0_Conditional_39_Template","_r27","ctx_r26","closeDialog","ctx_r28","confirm","CreateFileDialogComponent_Conditional_0_Conditional_44_Template","CreateFileDialogComponent_Conditional_0_Conditional_45_Template","ctx_r0","controls","finalName","trim","form","ctx","platforms","purposes","templates","touched","errors","required","valid","previewValid","CreateFileDialogComponent","BaseSubsinkComponent","dialogData","dialogRef","sourceService","super","hostClass","all","templates$","BehaviorSubject","loadingPreview$","buildForm","fetchTemplates","buildViewModel","ngOnDestroy","complete","result","close","formValues","getRawValue","subscribe","response","Default","patchValue","next","Templates","UntypedFormGroup","platform","UntypedFormControl","disabled","Validators","subscription","add","combineLatest","valueChanges","startWith","distinctUntilChanged","template","suggestedName","SuggestedFileName","SanitizeHelper","sanitizePath","Prefix","Suffix","replace","platforms$","platformsMap","Platforms","Object","keys","purposes$","purposesMap","Purpose","filter","includes","tap","some","newTemplateKey","preview$","throttleTime","duration","scheduler","asyncScheduler","config","duration$","timer","throttle","durationSelector","operate","source","subscriber","leading","trailing","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","cleanupThrottling","startThrottle","innerFrom","createOperatorSubscriber","closed","switchMap","forkJoin","of","undefined","viewModel$","Preview","IsValid","Error","MAT_DIALOG_DATA","In1","hostVars","hostBindings","rf","CreateFileDialogComponent_Conditional_0_Template","CreateFileDialogComponent_contFlowTmp","CreateFileDialogModule","a4G","s3X","Context","provide","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","MAT_SELECT_CONFIG","hideSingleSelectionIndicator","imports","CommonModule","SharedComponentsModule","MatButtonModule","MatSelectModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatCardModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/code-editor/services/source.service.ts","./projects/eav-ui/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.html","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttleTime.js","./node_modules/rxjs/dist/esm/internal/operators/throttle.js","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.module.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { ViewOrFileIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst apiExplorerAppApiFiles = 'admin/ApiExplorer/AppApiFiles';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: ViewOrFileIdentifier[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(mask?: string): Observable<FileAsset[]> {\r\n    return this.http.get<{ Files: FileAsset[] }>(this.dnnContext.$2sxc.http.apiUrl(appFilesAll), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.http.get<{ files: WebApi[] }>(this.dnnContext.$2sxc.http.apiUrl(apiExplorerAppApiFiles), {\r\n      params: {\r\n        appId: this.context.appId,\r\n      },\r\n    }).pipe(\r\n      map(({ files }) => {\r\n        files.forEach(file => {\r\n          file.isShared ??= false;\r\n          file.isCompiled ??= false;\r\n        });\r\n        return files;\r\n      }),\r\n    ).pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.path.lastIndexOf('/');\r\n          const fileExtIndex = file.path.lastIndexOf('.');\r\n          const folder = file.path.substring(0, splitIndex);\r\n          const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.path, folder, name, isShared: file.isShared, endpointPath: file.endpointPath, isCompiled: file.isCompiled, edition: file.edition };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.http.get<WebApiDetails>(this.dnnContext.$2sxc.http.apiUrl(apiExplorerInspect), {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.dnnContext.$2sxc.http.apiUrl(appFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.dnnContext.$2sxc.http.apiUrl(appFilesPreview), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({ selector: '[appMatInputAutofocus]' })\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  @Input() autofocusSelectValue: string | boolean | null | undefined = false;\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue)) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog eav-no-scrollbar\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title eav-dialog-title-box\">\r\n        <span>Create</span>\r\n        <span class=\"eav-file-name\">{{\r\n          controls.finalName.value\r\n          || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n        }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <form [formGroup]=\"form\" class=\"dialog-form\">\r\n        <div class=\"dialog-form-content\">\r\n          <div class=\"eav-field-container eav-multiple\">\r\n            <!-- Platform -->\r\n            <div class=\"eav-multiple-field\">\r\n              <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n                <mat-label>Platform</mat-label>\r\n                <mat-select formControlName=\"platform\">\r\n                  @for (platform of vm.platforms; track platform) {\r\n                    <mat-option [value]=\"platform\">\r\n                      {{ platform }}\r\n                    </mat-option>\r\n                  }\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- Purpose -->\r\n            <div class=\"eav-multiple-field\">\r\n              <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n                <mat-label>Purpose</mat-label>\r\n                <mat-select formControlName=\"purpose\">\r\n                  @for (purpose of vm.purposes; track purpose) {\r\n                    <mat-option [value]=\"purpose\">\r\n                      {{ purpose }}\r\n                    </mat-option>\r\n                  }\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <!-- Template -->\r\n          <div class=\"eav-field-container\">\r\n            <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n              <mat-label>Template</mat-label>\r\n              <mat-select formControlName=\"templateKey\">\r\n                @for (template of vm.templates; track template) {\r\n                  <mat-option [value]=\"template.Key\">\r\n                    {{ template.Name }}\r\n                  </mat-option>\r\n                }\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <!-- Name -->\r\n          <div class=\"eav-field-container\">\r\n            <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n              <mat-label>Name</mat-label>\r\n              <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus autofocusSelectValue=\"true\">\r\n            </mat-form-field>\r\n            @if (controls.name.touched && controls.name.errors?.required) {\r\n              <app-field-hint [isError]=\"true\">\r\n                This field is required\r\n              </app-field-hint>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div class=\"dialog-form-actions\">\r\n          @if (vm.loadingPreview) {\r\n            <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n            <div class=\"spacer\"></div>\r\n          }\r\n          <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n          <button mat-raised-button type=\"button\" color=\"accent\"\r\n            [disabled]=\"!form.valid || vm.loadingPreview || !vm.previewValid\" (click)=\"confirm()\">\r\n            Create\r\n          </button>\r\n        </div>\r\n        @if (vm.preview) {\r\n          <div class=\"eav-preview-label-box\">\r\n            <label class=\"eav-preview-label\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">Preview</label>\r\n          </div>\r\n          <pre class=\"fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">{{ vm.preview }}</pre>\r\n        }\r\n        @if (!vm.loadingPreview && vm.previewError) {\r\n          <div class=\"eav-preview-error\">\r\n            {{ vm.previewError }}\r\n          </div>\r\n        }\r\n      </form>\r\n    </div>\r\n  </div>\r\n}","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n// tslint:disable-next-line:max-line-length\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, distinctUntilChanged, forkJoin, map, Observable, of, startWith, Subscription, switchMap, tap, throttleTime, timer } from 'rxjs';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileViewModel } from '.';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { Preview } from '../code-editor/models/preview.models';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { SanitizeHelper } from '../edit/shared/helpers';\r\nimport { BaseSubsinkComponent } from '../shared/components/base-subsink-component/base-subsink.component';\r\n\r\n@Component({\r\n  selector: 'app-create-file-dialog',\r\n  templateUrl: './create-file-dialog.component.html',\r\n  styleUrls: ['./create-file-dialog.component.scss']\r\n})\r\nexport class CreateFileDialogComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: CreateFileFormControls;\r\n  viewModel$: Observable<CreateFileViewModel>;\r\n\r\n  private all = 'All' as const;\r\n  private templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  private loadingPreview$: BehaviorSubject<boolean>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialogRef: MatDialogRef<CreateFileDialogComponent>,\r\n    private sourceService: SourceService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.buildForm();\r\n    this.fetchTemplates();\r\n    this.buildViewModel();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.loadingPreview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchTemplates(): void {\r\n    this.sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).subscribe(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      platform: new UntypedFormControl(this.all),\r\n      purpose: new UntypedFormControl({ value: this.dialogData.purpose ?? this.all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new UntypedFormControl(null, Validators.required),\r\n      name: new UntypedFormControl(this.dialogData.name ?? null, Validators.required),\r\n      finalName: new UntypedFormControl({ value: null, disabled: true }),\r\n      folder: new UntypedFormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = this.dialogData.name\r\n          ? this.controls.name.value || this.dialogData.name\r\n          : template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildViewModel(): void {\r\n    const platforms$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<Preview | undefined>(undefined)\r\n          : forkJoin([\r\n            this.sourceService.getPreview(finalName, this.dialogData.global, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.viewModel$ = combineLatest([platforms$, purposes$, templates$, preview$, this.loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const viewModel: CreateFileViewModel = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler = asyncScheduler, config) {\n    const duration$ = timer(duration, scheduler);\n    return throttle(() => duration$, config);\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function throttle(durationSelector, config) {\n    return operate((source, subscriber) => {\n        const { leading = true, trailing = false } = config !== null && config !== void 0 ? config : {};\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { CreateFileDialogComponent, FileLocationDialogComponent } from '.';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateFileDialogComponent,\r\n    FileLocationDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule,\r\n  ],\r\n  exports: [\r\n    CreateFileDialogComponent,\r\n    FileLocationDialogComponent,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } }\r\n  ],\r\n})\r\nexport class CreateFileDialogModule { }\r\n"],"x_google_ignoreList":[4,5]}