{"version":3,"file":"default-projects_eav-ui_src_app_permissions_index_ts.525fe11c328c8db1.js","mappings":"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","names":["EntitiesService","constructor","http","context","dnnContext","this","create","contentType","entity","post","params","appId","zoneId","update","entityId","delete","type","id","tryForce","$2sxc","apiUrl","webApiEntityRoot","toString","force","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","wxM","factory","Éµfac","GoToPermissions","route","path","loadChildren","__webpack_require__","e","then","bind","m","PermissionsModule","data","title","getUrl","targetType","keyType","key","getUrlApp","eavConstants","metadata","app","getUrlAttribute","attribute","getUrlContentType","guid","getUrlEntity","getUrlLanguage","language","permissionsDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","routes","component","DialogEntryComponent","dialog","children","matcher","edit","Promise","all","EditModule","refreshEdit","RefreshEditModule","PermissionsRoutingModule","_angular_core__WEBPACK_IMPORTED_MODULE_3__","a4G","s3X","RouterModule","forChild","PermissionsActionsComponent","agInit","refresh","deletePermission","onDelete","core","In1","selectors","decls","vars","consts","template","rf","ctx","_r3","ctx_r2","closeDialog","ctx_r4","editPermission","permissions","ctx_r0","gridOptions","BaseComponent","router","dialogRef","permissionsService","snackBar","super","permissions$","BehaviorSubject","undefined","buildGridOptions","parseInt","snapshot","paramMap","get","prefills","PermissionType","ngOnInit","fetchPermissions","subscription","add","refreshOnChildClosedShallow","subscribe","viewModel$","combineLatest","pipe","map","ngOnDestroy","complete","close","getAll","next","permission","form","items","ContentTypeName","contentTypes","For","Target","Object","values","find","target","TargetType","keyTypes","Guid","number","Number","string","String","Prefill","EntityId","Id","formUrl","convertFormToUrl","navigate","relativeTo","confirm","Title","open","duration","defaultGridOptions","columnDefs","headerName","field","width","headerClass","cellClass","split","sortable","filter","valueGetter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","flex","minWidth","sort","onCellClicked","Identity","Condition","Grant","pinned","i4","features","PermissionsComponent_Conditional_0_Template","PermissionsComponent_contFlowTmp","_angular_core__WEBPACK_IMPORTED_MODULE_6__","Context","PermissionsService","MetadataService","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","SxcGridModule","MatRippleModule","MatSnackBarModule","getMetadata","contentTypeName","_angular_core__WEBPACK_IMPORTED_MODULE_1__","metadataService","entitiesService","Items","_angular_core__WEBPACK_IMPORTED_MODULE_4__"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/entities.service.ts","./projects/eav-ui/src/app/permissions/go-to-permissions.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions-routing.module.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.module.ts","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { ItemInListIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: permissionsDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PermissionsRoutingModule { }\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Permissions</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.permissions\" [gridOptions]=\"gridOptions\">\r\n        </ag-grid-angular>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </div>\r\n  </div>\r\n}","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n})\r\nexport class PermissionsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  private prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  viewModel$: Observable<PermissionsViewModel>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n\r\n    private permissionsService: PermissionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { \r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { this.fetchPermissions(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.permissions$\r\n    ]).pipe(map(([permissions]) => ({ permissions })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n            TargetType: this.targetType,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          },\r\n          ...(this.prefills[this.targetType] && { Prefill: this.prefills[this.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Id;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Permission> = {\r\n              tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Title;\r\n          },\r\n        },\r\n        {\r\n          field: 'Identity',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Identity;\r\n          },\r\n        },\r\n        {\r\n          field: 'Condition',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Condition;\r\n          },\r\n        },\r\n        {\r\n          field: 'Grant',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Grant;\r\n          },\r\n        },\r\n        {\r\n          width: 42,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface PermissionsViewModel {\r\n  permissions: Permission[];\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsRoutingModule } from './permissions-routing.module';\r\nimport { PermissionsComponent } from './permissions.component';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PermissionsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    SxcGridModule,\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ]\r\n})\r\nexport class PermissionsModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.http.get<MetadataDto>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n  constructor(private metadataService: MetadataService, private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}