{"version":3,"file":"projects_eav-ui_src_app_code-editor_code-editor_component_ts.4c3c973805295886.js","mappings":"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","names":["i0","ctx_r0","snackBarData","fileName","codeFile","edition","CodeAndEditionWarningsComponent_Conditional_2_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Conditional_3_Template","otherEditions","_r2","openCodeBehind","CodeAndEditionWarningsComponent","constructor","snackRef","this","dismissWithAction","i1","MAT_SNACK_BAR_DATA","selectors","standalone","features","decls","vars","consts","template","rf","ctx","CodeAndEditionWarningsComponent_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Template","CodeAndEditionWarningsComponent_Conditional_4_Template","MatButtonModule","i2","styles","translateLoaderFactoryCode","http","TranslateLoaderWithErrorHandling","window","sxcVersion","Explorers","Templates","Snippets","ObjectToArrayPipe","transform","obj","Array","isArray","Object","values","pure","_r8","snippet_r7","$implicit","ctx_r2","toggleMore","key","toggledMores","includes","link_r9","url","name","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_7_For_4_Template","help","links","link_r12","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Conditional_6_For_4_Template","more_r11","_r10","addSnippet","snip","toggleInfo","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Conditional_6_Template","label","toggledInfos","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_For_1_Template","more","_r6","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_4_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_7_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Conditional_8_Template","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_For_1_Template","folder_r5","value","_r4","toggleFolder","CodeSnippetsComponent_For_2_Conditional_7_For_1_Conditional_7_Template","section_r2","toggledFolders","CodeSnippetsComponent_For_2_Conditional_7_For_1_Template","_r1","toggleSection","CodeSnippetsComponent_For_2_Conditional_7_Template","toggledSections","CodeSnippetsComponent","snippets","input","insertSnippet","output","snippet","emit","ArrayHelpers","toggleInArray","inputs","outputs","CodeSnippetsComponent_For_2_Template","MatIconModule","MatRippleModule","KeyValuePipe","TranslateModule","i3","ClickStopPropagationDirective","TippyDirective","SafeHtmlPipe","calculateTree","templates","tree","parent","paths","Path","split","last","length","pathFromRoot","i","path","existing","find","item","children","depth","isShared","Shared","isFolder","push","DepthPaddingPipe","sanitizer","padding","bypassSecurityTrustStyle","SortItemsPipe","items","sort","item1","item2","CodeTemplatesComponent_For_3_ng_container_0_Template","fileOrFolder_r3","_c0","item_r2","item_r5","ctx_r5","openTemplate","_c1","isToggled","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_ng_container_0_Template","item1_r8","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_Template","_r7","toggleItem","addFile","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_Template","_c2","CodeTemplatesComponent_ng_template_5_Conditional_0_Template","CodeTemplatesComponent_ng_template_5_Conditional_1_Template","CodeTemplatesComponent","view","openView","createTemplate","toggledItemsApp","toggledItemsShared","ngOnChanges","changes","calculateTreeAppShared","filter","f","previousView","previousValue","FileName","IsShared","showFileInTree","shared","folder","file","toggledItems","CodeTemplatesComponent_For_3_Template","CodeTemplatesComponent_ng_template_5_Template","menu_r9","NgTemplateOutlet","NgClass","MatMenuModule","SnippetsService","HttpServiceBase","translate","super","getTooltips","language","getHttpApiUrl","params","getSnippets","getHttp","pipe","map","res","relevant","filterAwayNotNeededSnippetsList","standardAndInputSnips","extractInputTypeSnippets","sets","initSnippetsWithConfig","standardArray","inputTypeSnippets","list","keyPrefixes","keyPrefixIndex","v","Type","indexOf","newList","itm","setHasPrefix","set","substring","inputTypeArray","catalogInputTypeSnippets","inputTypeList","undefined","subset","templateConfiguration","makeTree","Content","assign","Fields","PresentationFields","TypeContent","loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","o","reformatted","content","linksList","getHelpKey","result","instant","addition","linksString","llist","l","pair","link","trim","target","type","prefix","getFields","AppId","subscribe","fields","field","fieldname","StaticName","valuePlaceholder","Metadata","merged","Notes","toLowerCase","snipDefaults","cloneDeep","attachSnippets","InputType","std","val","replace","appId","staticName","webApiFieldsAll","appid","toString","DataTypeCatalog","Empty","fld","md","All","inputType","genericSnippet","fieldType","typeSnips","concat","fieldSnips","g","localizeGenericSnippet","collapse","objName","fieldName","factory","ɵfac","tab_r2","viewKey","CodeEditorComponent_Conditional_11_For_2_Conditional_2_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_6_Template","CodeEditorComponent_Conditional_11_For_2_Conditional_7_Template","closeEditor","isActive","isModified","isLoading","CodeEditorComponent_Conditional_11_For_2_Template","tabs","$event","tmp_2_0","codeChanged","active","tmp_1_0","Code","monacoOptions","tmp_4_0","editorSnipps","tmp_5_0","tooltips","_r5","save","CodeEditorComponent","BaseComponent","#sourceSvc","#snippetSvc","#titleSvc","#openViews","#viewInfos","#urlItems","context","route","snackBar","zone","matDialog","viewContainerRef","activeExplorer","theme","tabSize","fixedOverflowWidgets","transient","SourceService","Title","signal","activeView","computed","RxHelpers","objectsEqual","openViews","viewInfos","viewInfo","savedCode","init","codeItems","JSON","parse","sessionStorage","getItem","keyItems","keyIsShared","forEach","codeItem","startsWith","effect","notLoaded","some","forkJoin","newViewInfo","view$","get","share","snippets$","switchMap","tooltips$","Extension","of","results","viewInfos1","selectedIndex","findIndex","explorerSnipps","slice","#showCodeAndEditionWarnings","allowSignalWrites","defaultTitle","newTitle","getTitle","console","log","setTitle","ngOnInit","initialViews","EntityId","#attachListeners","getAll","ngOnDestroy","toggleExplorer","explorer","createFileDialogData","global","purpose","open","CreateFileDialogComponent","autoFocus","data","width","afterClosed","create","templateKey","files","monacoEditorRef","code","selectedViewInfo","oldActiveView","oldOpenViews","newOpenViews","newActiveView","codeToSave","next","duration","newViewInfos","error","pathAndName","pathSeparator","lastIndexOf","pathWithSlash","fullName","nameCode","endsWith","Edition","snackBarRef","openFromComponent","onAction","containerInstance","snackBarConfig","runOutsideAngular","subscriptions","add","fromEvent","event","preventDefault","returnValue","isCtrlS","run","i4","viewQuery","MonacoEditorComponent","provide","TranslateLoader","useFactory","deps","HttpClient","TranslateService","CodeEditorComponent_Conditional_11_Template","CodeEditorComponent_Conditional_12_Template","CodeEditorComponent_Conditional_13_Template","tmp_7_0","tmp_9_0","i5","MatProgressSpinnerModule","i6","MonacoEditorComponent_1","i7","ToggleDebugDirective","HttpClientModule","globalConfigService","onClick","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","hostBindings","Boolean","Custom","DateTime","Entity","Hyperlink","Number","String"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.html","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.ts","./projects/eav-ui/src/app/code-editor/code-editor-translate-loader-factory.ts","./projects/eav-ui/src/app/code-editor/code-editor.models.ts","./projects/eav-ui/src/app/code-editor/code-snippets/object-to-array.pipe.ts","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.html","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.helpers.ts","./projects/eav-ui/src/app/code-editor/code-templates/depth-padding.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/order-items.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.html","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.models.ts","./projects/eav-ui/src/app/code-editor/services/snippets.service.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.html","./projects/eav-ui/src/app/code-editor/code-editor.component.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/fields/data-type-catalog.ts"],"sourcesContent":["<div class=\"messages\">\r\n  @if (snackBarData.codeFile) {\r\n  <div>\"{{ snackBarData.fileName }}\" also has a code-behind file \"{{ snackBarData.codeFile }}\".</div>\r\n  <br>\r\n  }\r\n\r\n  @if (snackBarData.otherEditions) {\r\n  <div>\r\n    @if (snackBarData.edition) {\r\n    You are editing \"{{ snackBarData.edition }}\" edition.\r\n    }\r\n    There are {{ snackBarData.otherEditions }} other editions of \"{{ snackBarData.fileName }}\".\r\n    @if (!snackBarData.edition) {\r\n    You may be editing an edition which is not the one you see.\r\n    }\r\n    See <a href=\"https://go.2sxc.org/polymorphism\" target=\"_blank\">docs</a>.\r\n  </div>\r\n  }\r\n</div>\r\n\r\n<div class=\"actions\">\r\n  @if (snackBarData.codeFile) {\r\n  <button mat-button color=\"primary\" (click)=\"openCodeBehind()\">\r\n    Open code-behind file\r\n  </button>\r\n  }\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings.models';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-code-and-edition-warnings',\r\n  templateUrl: './code-and-edition-warnings.component.html',\r\n  styleUrls: ['./code-and-edition-warnings.component.scss'],\r\n  standalone: true,\r\n  imports: [MatButtonModule],\r\n})\r\nexport class CodeAndEditionWarningsComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<CodeAndEditionWarningsComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public snackBarData: CodeAndEditionWarningsSnackBarData,\r\n  ) { }\r\n\r\n  openCodeBehind(): void {\r\n    this.snackBarData.openCodeBehind = true;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../shared/models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"../shared/translation\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function translateLoaderFactoryCode(http: HttpClient): TranslateLoader {\r\n  return new TranslateLoaderWithErrorHandling(http, './i18n/code-editor.', `.js?${window.sxcVersion}`);\r\n}\r\n","import { Snippet, SnippetsSets } from './models/snippet.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { Tooltip } from './models/tooltip.model';\r\n\r\nexport interface Tab {\r\n  viewKey: ViewKey;\r\n  label: string;\r\n  isActive: boolean;\r\n  isModified: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const Explorers = {\r\n  Templates: 'Templates',\r\n  Snippets: 'Snippets',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\nexport interface ViewInfo {\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  explorerSnipps?: SnippetsSets;\r\n  editorSnipps?: Snippet[];\r\n  tooltips?: Tooltip[];\r\n  savedCode?: string;\r\n}\r\n\r\nexport interface ViewKey {\r\n  /** ViewKey is templateId or path */\r\n  key: string;\r\n  shared: boolean;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'objectToArray',\r\n    standalone: true\r\n})\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: Record<string, any> | Record<string, any>[]): Record<string, any>[] {\r\n    if (obj == null) return;\r\n\r\n    if (Array.isArray(obj)) { return obj; }\r\n\r\n    return Object.values(obj);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n  @for (section of snippets() | keyvalue; track section) {\r\n    <div>\r\n      <div\r\n        class=\"collapsible-header section\"\r\n        [tippyTranslate]=\"'SourceEditorSnippets.' + section.key + '.Help'\"\r\n        tippyShowDelay=\"750\"\r\n        (click)=\"toggleSection(section.key)\"\r\n      >\r\n        <mat-icon>\r\n          {{ toggledSections.includes(section.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n        </mat-icon>\r\n        <span>{{ 'SourceEditorSnippets.' + section.key + '.Title' | translate }}</span>\r\n      </div>\r\n      @if (toggledSections.includes(section.key)) {\r\n        @for (folder of section.value | keyvalue; track folder) {\r\n          <div>\r\n            <div\r\n              class=\"collapsible-header folder\"\r\n              [tippyTranslate]=\"'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Help'\"\r\n              tippyShowDelay=\"750\"\r\n              (click)=\"toggleFolder(folder.key)\"\r\n            >\r\n              <mat-icon>\r\n                {{ toggledFolders.includes(folder.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n              <span>{{ 'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Title' | translate }}</span>\r\n            </div>\r\n            @if (toggledFolders.includes(folder.key)) {\r\n              @for (snippet of folder.value | objectToArray; track snippet) {\r\n                <div class=\"snippet\">\r\n                  <div class=\"snippet-label\">\r\n                    <div matRipple class=\"text\" [tippy]=\"snippet.snip\" tippyShowDelay=\"750\" (click)=\"addSnippet(snippet.snip)\">\r\n                      {{ snippet.label }}\r\n                    </div>\r\n                    @if (snippet.more) {\r\n                      <mat-icon tippy=\"Show More\" tippyShowDelay=\"750\" (click)=\"toggleMore(snippet.key)\">\r\n                        {{ toggledMores.includes(snippet.key) ? 'more_vert' : 'more_horiz' }}\r\n                      </mat-icon>\r\n                    }\r\n                    <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation (click)=\"toggleInfo(snippet.key)\"\r\n                      >info</mat-icon\r\n                    >\r\n                  </div>\r\n                  @if (toggledInfos.includes(snippet.key)) {\r\n                    <div class=\"snippet-help\">\r\n                      <div class=\"text\" [innerHTML]=\"snippet.help | safeHtml\"></div>\r\n                      @for (link of snippet.links; track link) {\r\n                        <div>\r\n                          <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  }\r\n                  @if (toggledMores.includes(snippet.key)) {\r\n                    @for (more of snippet.more | objectToArray; track more) {\r\n                      <div>\r\n                        <div class=\"snippet-label\">\r\n                          <div matRipple class=\"text text-more\" [tippy]=\"more.snip\" tippyShowDelay=\"750\" (click)=\"addSnippet(more.snip)\">\r\n                            {{ more.label }}\r\n                          </div>\r\n                          <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation (click)=\"toggleInfo(more.key)\"\r\n                            >info</mat-icon\r\n                          >\r\n                        </div>\r\n                        @if (toggledInfos.includes(more.key)) {\r\n                          <div class=\"snippet-help snippet-help-more\">\r\n                            <div class=\"text\" [innerHTML]=\"more.help | safeHtml\"></div>\r\n                            @for (link of more.links; track link) {\r\n                              <div>\r\n                                <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                              </div>\r\n                            }\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    }\r\n                  }\r\n                </div>\r\n              }\r\n            }\r\n          </div>\r\n        }\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n","import { KeyValuePipe } from '@angular/common';\r\nimport { Component, input, output } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { SnippetsSets } from '../models/snippet.model';\r\nimport { ObjectToArrayPipe } from './object-to-array.pipe';\r\n\r\n@Component({\r\n  selector: 'app-code-snippets',\r\n  templateUrl: './code-snippets.component.html',\r\n  styleUrls: ['./code-snippets.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n    KeyValuePipe,\r\n    TranslateModule,\r\n    ObjectToArrayPipe,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class CodeSnippetsComponent {\r\n  snippets = input<SnippetsSets>();\r\n  insertSnippet = output<string>();\r\n  toggledSections: string[] = [];\r\n  toggledFolders: string[] = [];\r\n  toggledInfos: string[] = [];\r\n  toggledMores: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addSnippet(snippet: string): void {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleSection(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledSections);\r\n  }\r\n\r\n  toggleFolder(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledFolders);\r\n  }\r\n\r\n  toggleInfo(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledInfos);\r\n  }\r\n\r\n  toggleMore(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledMores);\r\n  }\r\n}\r\n","import { FileAsset } from '../models/file-asset.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { appSharedRoot } from './code-templates.models';\r\n\r\nexport function calculateTreeAppShared(templates: FileAsset[]): TreeItem[] {\r\n  const tree: TreeItem[] = [\r\n    {\r\n      depth: -1,\r\n      name: 'App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: false,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => !f.Shared)),\r\n    },\r\n    {\r\n      depth: -1,\r\n      name: 'Shared App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: true,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => f.Shared)),\r\n    },\r\n  ];\r\n  return tree;\r\n}\r\n\r\nfunction calculateTree(templates: FileAsset[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.Path.split('/');\r\n    const last = paths[paths.length - 1];\r\n    let pathFromRoot = '';\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const path = paths[i];\r\n      pathFromRoot += i ? `/${path}` : path;\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          depth: i,\r\n          name: path,\r\n          pathFromRoot,\r\n          isShared: template.Shared,\r\n          isFolder: path !== last,\r\n          ...(path !== last && { children: [] }),\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'depthPadding',\r\n  standalone: true\r\n})\r\nexport class DepthPaddingPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(depth: number, isFolder: boolean): SafeStyle {\r\n    let padding: number;\r\n    if (isFolder) {\r\n      padding = depth * 8;\r\n    } else {\r\n      padding = (depth === 0) ? 8 : (depth * 8 + 16);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustStyle(`padding-left: ${padding}px;`);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n/** Sorts folders before files */\r\n@Pipe({\r\n  name: 'sortItems',\r\n  standalone: true\r\n})\r\nexport class SortItemsPipe implements PipeTransform {\r\n\r\n  transform(items: TreeItem[]) {\r\n    if (items == null) { return items; }\r\n\r\n    items.sort((item1, item2) => {\r\n      if (item1.isFolder < item2.isFolder) {\r\n        return 1;\r\n      } else if (item1.isFolder > item2.isFolder) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return items;\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark explorer-wrapper\">\r\n\r\n  <div>\r\n    @for (item of (tree | sortItems); track item) {\r\n    <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item}\"></ng-container>\r\n    }\r\n\r\n    <ng-template #fileOrFolder let-item=\"item\">\r\n\r\n      @if (!item.isFolder) {\r\n      <div class=\"file\" [style]=\"item.depth | depthPadding: item.isFolder\"\r\n        [ngClass]=\"{'active': isToggled(item.pathFromRoot, item.isShared) }\" [tippy]=\"item.name\" tippyShowDelay=\"750\"\r\n        (click)=\"openTemplate(item.pathFromRoot, item.isShared)\">\r\n        {{ item.name }}\r\n      </div>\r\n      }\r\n\r\n      @if (item.isFolder) {\r\n      <div>\r\n        <div class=\"folder-name-wrapper\" [ngClass]=\"{'app-shared-root': item.depth < 0}\"\r\n          [style]=\"item.depth + 1 | depthPadding: item.isFolder\" (click)=\"toggleItem(item.pathFromRoot, item.isShared)\">\r\n          <div class=\"folder-name\" [tippy]=\"item.name\" tippyShowDelay=\"750\">\r\n            <mat-icon> {{ isToggled(item.pathFromRoot, item.isShared) ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\r\n              }}\r\n            </mat-icon>\r\n            <span>{{ item.name }}</span>\r\n          </div>\r\n          <div class=\"add-item\" tippy=\"Create file in this folder\" tippyShowDelay=\"750\" appClickStopPropagation\r\n            (click)=\"addFile(item.pathFromRoot, item.isShared)\">\r\n            <mat-icon>add</mat-icon>\r\n          </div>\r\n        </div>\r\n        @if (isToggled(item.pathFromRoot, item.isShared)) {\r\n        @for (item1 of (item.children | sortItems); track item1) {\r\n        <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item1}\"></ng-container>\r\n        }\r\n        }\r\n      </div>\r\n      }\r\n\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"create-button-wrapper\">\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" tippy=\"Create file\" tippyPlacement=\"left\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item (click)=\"addFile('', false)\">\r\n        <span>App</span>\r\n      </button>\r\n      <button mat-menu-item (click)=\"addFile('', true)\">\r\n        <span>Shared (global)</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input, OnChanges, output, SimpleChanges } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { ViewKey } from '../code-editor.models';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { calculateTreeAppShared } from './code-templates.helpers';\r\nimport { appSharedRoot, CreateTemplateParams } from './code-templates.models';\r\nimport { DepthPaddingPipe } from './depth-padding.pipe';\r\nimport { SortItemsPipe } from './order-items.pipe';\r\n\r\n@Component({\r\n  selector: 'app-code-templates',\r\n  templateUrl: './code-templates.component.html',\r\n  styleUrls: ['./code-templates.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgTemplateOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    DepthPaddingPipe,\r\n    SortItemsPipe,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class CodeTemplatesComponent implements OnChanges {\r\n  view? = input<SourceView>();\r\n  templates = input<FileAsset[]>();\r\n  openView = output<ViewKey>();\r\n  createTemplate = output<CreateTemplateParams>();\r\n  tree: TreeItem[];\r\n  toggledItemsApp: string[] = [];\r\n  toggledItemsShared: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.templates != null) {\r\n      this.tree = calculateTreeAppShared(this.templates());\r\n    }\r\n    if (changes.view != null) {\r\n      const previousView: SourceView = changes.view?.previousValue;\r\n      if (previousView) {\r\n        this.toggleItem(previousView.FileName, previousView.IsShared);\r\n      }\r\n      if (this.view()) {\r\n        this.showFileInTree(this.view().FileName, this.view().IsShared);\r\n      }\r\n    }\r\n  }\r\n\r\n  isToggled(path: string, isShared: boolean): boolean {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    return toggledItems.includes(path);\r\n  }\r\n\r\n  openTemplate(path: string, isShared: boolean): void {\r\n    const viewKey: ViewKey = { key: path, shared: isShared };\r\n    this.openView.emit(viewKey);\r\n  }\r\n\r\n  toggleItem(path: string, isShared: boolean): void {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    ArrayHelpers.toggleInArray(path, toggledItems);\r\n  }\r\n\r\n  addFile(folder?: string, isShared?: boolean): void {\r\n    const params: CreateTemplateParams = { folder, isShared };\r\n    this.createTemplate.emit(params);\r\n  }\r\n\r\n  private showFileInTree(file: string, isShared: boolean): void {\r\n    if (file == null) return;\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    if (toggledItems.includes(file)) return;\r\n\r\n    const paths = [appSharedRoot, ...file.split('/')];\r\n    let pathFromRoot = '';\r\n    for (const path of paths) {\r\n      pathFromRoot = !pathFromRoot ? path : `${pathFromRoot}/${path}`;\r\n      if (toggledItems.includes(pathFromRoot)) continue;\r\n      this.toggleItem(pathFromRoot, isShared);\r\n    }\r\n  }\r\n}\r\n","export const appSharedRoot = '' as const;\r\n\r\nexport interface CreateTemplateParams {\r\n  folder?: string;\r\n  isShared?: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { DataTypeCatalog } from '../../shared/fields/data-type-catalog';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { InputTypeCatalog } from '../../shared/fields/input-type-catalog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { MoreSnippet, SetSnippet, SetSnippetLink, Snippet, SnippetsSets, SnippetsSubSubSets } from '../models/snippet.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { Tooltip } from '../models/tooltip.model';\r\n\r\nexport const inlineHelp = 'admin/Code/InlineHelp';\r\n\r\n@Injectable()\r\nexport class SnippetsService extends HttpServiceBase {\r\n\r\n  constructor( private translate: TranslateService) {\r\n    super();\r\n  }\r\n\r\n  getTooltips(language: string): Observable<Tooltip[]> {\r\n    return this.getHttpApiUrl<Tooltip[]>(inlineHelp, {\r\n      params: {\r\n        language,\r\n      },\r\n    });\r\n  }\r\n\r\n  getSnippets(view: SourceView): Observable<{ list: Snippet[]; sets: SnippetsSets; }> {\r\n    return this.getHttp<{ snippets: Snippet[] }>('../ng-assets/snippets.json.js').pipe(\r\n      map(res => {\r\n        const relevant = this.filterAwayNotNeededSnippetsList(res.snippets, view);\r\n        const standardAndInputSnips = this.extractInputTypeSnippets(relevant);\r\n        const sets = this.initSnippetsWithConfig(standardAndInputSnips.standardArray, view, standardAndInputSnips.inputTypeSnippets);\r\n        const sorted: { list: Snippet[]; sets: SnippetsSets; } = {\r\n          list: standardAndInputSnips.standardArray,\r\n          sets\r\n        };\r\n        return sorted;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Scan the list for sets starting with @ or [ and filter if not needed right now */\r\n  private filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView): Snippet[] {\r\n    const keyPrefixes = ['@', '['];\r\n    const keyPrefixIndex = (v: SourceView) => (v.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n    const newList: Snippet[] = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substring(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  private extractInputTypeSnippets(list: Snippet[]): { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substring(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.catalogInputTypeSnippets(inputTypeArray);\r\n    const extracted: { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } = {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n    return extracted;\r\n  }\r\n\r\n  private catalogInputTypeSnippets(list: Snippet[]): Record<string, Snippet[]> {\r\n    const inputTypeList: Record<string, Snippet[]> = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  private initSnippetsWithConfig(\r\n    standardArray: Snippet[],\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): SnippetsSets {\r\n    const sets = this.makeTree(standardArray);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.loadContentType(\r\n        sets.Content.Fields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContent,\r\n        'Content',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.loadContentType(\r\n        sets.Content.PresentationFields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.loadContentType(\r\n          sets.List.Fields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeList,\r\n          'Header',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.loadContentType(\r\n          sets.List.PresentationFields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeListPresentation,\r\n          'Header.Presentation',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  /** Convert the list into a tree with set/subset/item */\r\n  private makeTree(list: Snippet[]): SnippetsSets {\r\n    const tree: SnippetsSets = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted: SetSnippet = {\r\n        key: o.name,\r\n        label: this.label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.help(o.set, o.subset, o.name),\r\n        links: this.linksList(o.links)\r\n      };\r\n\r\n      (tree[o.set][o.subset] as SetSnippet[]).push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  private label(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getHelpKey(set: string, subset: string, snip: string, addition: string): string {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  private help(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private linksList(linksString: string): SetSnippetLink[] {\r\n    if (!linksString) { return null; }\r\n\r\n    const links: SetSnippetLink[] = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        const link: SetSnippetLink = {\r\n          name: pair[0].trim(),\r\n          url: pair[1].trim() + ':' + pair[2].trim(),\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  /** spm TODO: this happens after snippets are calculated for the first time. Needs to be fixed */\r\n  private loadContentType(\r\n    target: SnippetsSubSubSets,\r\n    type: string,\r\n    prefix: string,\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    this.getFields(templateConfiguration.AppId, type).subscribe(fields => {\r\n      // first add common items if the content-type actually exists\r\n      for (const field of fields) {\r\n        const fieldname = field.StaticName;\r\n        target[fieldname] = {\r\n          key: fieldname,\r\n          label: fieldname,\r\n          snip: this.valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n          help: field.Metadata.merged.Notes || ' (' + field.Type.toLowerCase() + ') '\r\n        };\r\n        // try to add generic snippets specific to this input-type\r\n        const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n        this.attachSnippets(target, prefix, fieldname, field.InputType, snipDefaults, inputTypeSnippets);\r\n      }\r\n\r\n      if (fields.length) {\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < std.length; i++) {\r\n          target[std[i]] = {\r\n            key: std[i],\r\n            label: std[i],\r\n            snip: this.valuePlaceholder(prefix, std[i], templateConfiguration),\r\n            help: this.translate.instant('SourceEditorSnippets.StandardFields.' + std[i] + '.Help'),\r\n          };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private valuePlaceholder(obj: string, val: string, templateConfiguration: SourceView): string {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n  private getFields(appId: number, staticName: string): Observable<Field[]> {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsAll, {\r\n      params: { appid: appId.toString(), staticName },\r\n    }).pipe(\r\n      map(fields => {\r\n        fields = fields.filter(field => field.Type !== DataTypeCatalog.Empty);\r\n        for (const fld of fields) {\r\n          if (!fld.Metadata) continue;\r\n          const md = fld.Metadata;\r\n          const allMd = md.All;\r\n          const typeMd = md[fld.Type];\r\n          const inputMd = md[fld.InputType];\r\n          md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n        }\r\n        return fields;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private attachSnippets(\r\n    target: SnippetsSubSubSets,\r\n    prefix: string,\r\n    fieldname: string,\r\n    inputType: Of<typeof InputTypeCatalog>,\r\n    snipDefaults: SetSnippet,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) { // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substring(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) return;\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = {};\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true,\r\n        } as MoreSnippet);\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  private localizeGenericSnippet(snip: string, objName: string, fieldName: string): string {\r\n    snip = snip\r\n      .replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","<div class=\"editor-root\" appToggleDebug [ngClass]=\"{ 'sxc-dark': monacoOptions.theme === '2sxc-dark' }\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Templates }\" tippy=\"Templates\"\r\n      (click)=\"toggleExplorer(Explorers.Templates)\">\r\n      <mat-icon>file_copy</mat-icon>\r\n    </div>\r\n    <div class=\" button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Snippets }\" tippy=\"Snippets\"\r\n      (click)=\"toggleExplorer(Explorers.Snippets)\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  </div>\r\n  <app-code-templates [hidden]=\"activeExplorer !== Explorers.Templates\" [view]=\"active()?.view\"\r\n    [templates]=\"templates()\" (openView)=\"openView($event)\" (createTemplate)=\"createTemplate($event)\">\r\n  </app-code-templates>\r\n  <app-code-snippets [hidden]=\"activeExplorer !== Explorers.Snippets\" [snippets]=\"active()?.explorerSnipps\"\r\n    (insertSnippet)=\"insertSnippet($event)\">\r\n  </app-code-snippets>\r\n  <div class=\"editor-group\">\r\n    @if (tabs().length > 0) {\r\n    <div class=\"tabs-container fancy-scrollbar-dark\">\r\n      @for (tab of tabs(); track tab) {\r\n      <div class=\"tab\" [ngClass]=\"{\r\n              'active': tab.isActive,\r\n              'modified': tab.isModified,\r\n              'loading': tab.isLoading\r\n              }\" (click)=\"openView(tab.viewKey)\">\r\n        <div class=\"tab-label-container\" [tippy]=\"tab.label\" tippyShowDelay=\"750\">\r\n          @if (tab.viewKey.shared) {\r\n          <mat-icon class=\"icon-shared\">share</mat-icon>\r\n          }\r\n          <span class=\"tab-label\">{{ tab.label }}</span>\r\n        </div>\r\n        <div class=\"tab-actions-container\">\r\n          @if (tab.isModified) {\r\n          <mat-icon class=\"tab-action icon-modified\">circle</mat-icon>\r\n          }\r\n          @if (tab.isLoading) {\r\n          <mat-spinner class=\"spinner\" mode=\"indeterminate\" diameter=\"14\" color=\"white\">\r\n          </mat-spinner>\r\n          }\r\n          <mat-icon class=\"tab-action icon-close\" tippy=\"Close\" appClickStopPropagation\r\n            (click)=\"closeEditor(tab.viewKey)\">close</mat-icon>\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n    }\r\n    @if (active()?.view) {\r\n    <app-monaco-editor [filename]=\"active()?.view.FileName\" [value]=\"active()?.view.Code\"\r\n      (valueChanged)=\"codeChanged($event, active()?.viewKey)\" [options]=\"monacoOptions\"\r\n      [snippets]=\"active()?.editorSnipps\" [tooltips]=\"active()?.tooltips\" [autoFocus]=\"true\">\r\n    </app-monaco-editor>\r\n    }\r\n  </div>\r\n  @if (activeView()) {\r\n  <button mat-fab mat-elevation-z24 tippy=\"Click to save or CTRL + S\" (click)=\"save()\">\r\n    <mat-icon>done</mat-icon>\r\n  </button>\r\n  }\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Component, computed, effect, NgZone, OnDestroy, OnInit, signal, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { forkJoin, fromEvent, of, share, switchMap } from 'rxjs';\r\nimport { Of, transient } from '../../../../core';\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult } from '../create-file-dialog';\r\nimport { isCtrlS } from '../edit/dialog/main/keyboard-shortcuts';\r\nimport { MonacoEditorComponent } from '../monaco-editor';\r\nimport { MonacoEditorComponent as MonacoEditorComponent_1 } from '../monaco-editor/monaco-editor.component';\r\nimport { BaseComponent } from '../shared/components/base.component';\r\nimport { keyIsShared, keyItems } from '../shared/constants/session.constants';\r\nimport { ClickStopPropagationDirective } from '../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { ToggleDebugDirective } from '../shared/directives/toggle-debug.directive';\r\nimport { ViewOrFileIdentifier } from '../shared/models/edit-form.model';\r\nimport { RxHelpers } from '../shared/rxJs/rx.helpers';\r\nimport { Context } from '../shared/services/context';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings/code-and-edition-warnings.models';\r\nimport { translateLoaderFactoryCode } from './code-editor-translate-loader-factory';\r\nimport { Explorers, Tab, ViewInfo, ViewKey } from './code-editor.models';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { CreateTemplateParams } from './code-templates/code-templates.models';\r\nimport { FileAsset } from './models/file-asset.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    CodeTemplatesComponent,\r\n    CodeSnippetsComponent,\r\n    MatProgressSpinnerModule,\r\n    MonacoEditorComponent_1,\r\n    MatButtonModule,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    ToggleDebugDirective,\r\n    HttpClientModule,\r\n    TranslateModule,\r\n  \r\n  ],\r\n  providers: [\r\n    {\r\n      provide: TranslateLoader,\r\n      useFactory: translateLoaderFactoryCode,\r\n      deps: [HttpClient],\r\n    },\r\n    TranslateService,\r\n  ]\r\n})\r\nexport class CodeEditorComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MonacoEditorComponent) private monacoEditorRef: MonacoEditorComponent;\r\n\r\n  Explorers = Explorers;\r\n  activeExplorer: Of<typeof Explorers> = Explorers.Templates;\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    theme: '2sxc-dark',\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n\r\n  #sourceSvc = transient(SourceService);\r\n  #snippetSvc = transient(SnippetsService);\r\n  #titleSvc = transient(Title);\r\n\r\n  templates = signal<FileAsset[]>([]);\r\n  activeView = signal<ViewKey>(undefined);\r\n  #openViews = signal<ViewKey[]>([]);\r\n  #viewInfos = signal<ViewInfo[]>([]);\r\n\r\n  // Computed signal that finds the active view information from the list of viewInfos.\r\n  // It checks if the activeView signal matches any viewKey in the viewInfos list using objectsEqual.\r\n  active = computed(() => {\r\n    const activeView = this.activeView();\r\n    return this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n  })\r\n\r\n  // Each tab object includes the viewKey, label (file name or key), active state,\r\n  // modified state (if the view's code differs from the saved code), and loading state.\r\n  // It checks for matching view information in viewInfos using objectsEqual.\r\n  tabs = computed(() => {\r\n    const openViews = this.#openViews();\r\n    const activeView = this.activeView();\r\n    const viewInfos = this.#viewInfos();\r\n    return openViews.map(viewKey => {\r\n      const viewInfo = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n      return {\r\n        viewKey,\r\n        label: viewInfo?.view?.FileName ?? viewKey.key,\r\n        isActive: RxHelpers.objectsEqual(viewKey, activeView),\r\n        isModified: viewInfo?.view?.Code !== viewInfo?.savedCode,\r\n        isLoading: viewInfo?.view == null,\r\n      } satisfies Tab;\r\n    })\r\n  });\r\n\r\n  #urlItems: ViewOrFileIdentifier[];\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private zone: NgZone,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n    this.context.init(this.route);\r\n    const codeItems: ViewOrFileIdentifier[] = JSON.parse(sessionStorage.getItem(keyItems));\r\n    const isShared = (sessionStorage.getItem(keyIsShared) ?? 'false') === 'true';\r\n    codeItems.forEach(codeItem => {\r\n      // remove leading \"/\" from path\r\n      if (codeItem.Path.startsWith('/')) {\r\n        codeItem.Path = codeItem.Path.substring(1);\r\n      }\r\n      codeItem.IsShared ??= isShared;\r\n    });\r\n    this.#urlItems = codeItems;\r\n\r\n    // Update ViewInfo$ ongoing\r\n    effect(() => {\r\n      const templates = this.templates();\r\n      const openViews = this.#openViews();\r\n\r\n      // If there are no templates, exit early\r\n      if (templates.length === 0) return;\r\n\r\n      let viewInfos = this.#viewInfos();   // Retrieve the current viewInfos signal\r\n\r\n      // Find the `openViews` that are not yet loaded in `viewInfos`\r\n      const notLoaded = openViews.filter(viewKey => !viewInfos.some(v => RxHelpers.objectsEqual(v.viewKey, viewKey)));\r\n      // If all openViews are loaded, exit early\r\n      if (notLoaded.length === 0) return;\r\n\r\n      // Start data requests for the not yet loaded `openViews`\r\n      forkJoin(\r\n        notLoaded.map(viewKey => {\r\n          // Mark the `viewKey` in `viewInfos` to indicate that it is being loaded\r\n          const newViewInfo: ViewInfo = {\r\n            viewKey,\r\n          };\r\n          viewInfos = [...viewInfos, newViewInfo];\r\n\r\n          // Create observables for the view, snippets, and tooltips based on the viewKey\r\n          const view$ = this.#sourceSvc.get(viewKey.key, viewKey.shared, this.#urlItems).pipe(share());\r\n          const snippets$ = view$.pipe(switchMap(view => this.#snippetSvc.getSnippets(view)));\r\n          const tooltips$ = view$.pipe(switchMap(view => this.#snippetSvc.getTooltips(view.Extension.substring(1))));\r\n          return forkJoin([of(viewKey), view$, snippets$, tooltips$]);\r\n        })\r\n      ).subscribe(results => {\r\n        let viewInfos1 = this.#viewInfos();   // Retrieve the current viewInfos signal again\r\n\r\n        results.forEach(([viewKey, view, snippets, tooltips]) => {\r\n          // Find the index of the corresponding viewKey in the current viewInfos\r\n          const selectedIndex = viewInfos1.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n          // If the viewKey is not found, exit early\r\n          if (selectedIndex < 0) return;\r\n\r\n          // Update `viewInfos` with new data for the corresponding `viewKey`\r\n          const newViewInfo: ViewInfo = {\r\n            viewKey,\r\n            view,\r\n            explorerSnipps: snippets.sets,\r\n            editorSnipps: snippets.list,\r\n            tooltips,\r\n            savedCode: view.Code,\r\n          };\r\n          viewInfos1 = [...viewInfos1.slice(0, selectedIndex), newViewInfo, ...viewInfos1.slice(selectedIndex + 1)];\r\n\r\n          // Show warnings or other logic based on the loaded views\r\n          this.#showCodeAndEditionWarnings(viewKey, view, templates);\r\n        });\r\n\r\n        this.#viewInfos.set(viewInfos1);  // Set the new `viewInfos` in the signal\r\n      });\r\n\r\n      this.#viewInfos.set(viewInfos);   // Set the initial `viewInfos` before loading the data\r\n    },\r\n      { allowSignalWrites: true }\r\n    );\r\n\r\n    // Update title ongoing\r\n    effect(() => {\r\n      const activeView = this.activeView();\r\n      const viewInfos = this.#viewInfos();\r\n\r\n      // Check if viewInfos exist; exit early if not\r\n      if (!viewInfos) return;\r\n\r\n      // Find the active view information from viewInfos based on activeView\r\n      const active = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n      const defaultTitle = 'Code Editor'; // Default title to use if no active view is found\r\n      // Construct the new title based on the active view or use the default title\r\n      const newTitle = active == null ? defaultTitle : `${active.view?.FileName} - ${defaultTitle}`;\r\n      const oldTitle = this.#titleSvc.getTitle(); // Get the current title from the title service\r\n\r\n      // If the new title is different from the old title, update it\r\n      if (newTitle !== oldTitle) {\r\n        console.log('newTitle', newTitle); // Log the new title\r\n        this.#titleSvc.setTitle(newTitle);  // Set the new title in the title service\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const initialViews = this.#urlItems.map(item => {\r\n      const viewKey: ViewKey = { key: item.EntityId?.toString() ?? item.Path, shared: item.IsShared };\r\n      return viewKey;\r\n    });\r\n\r\n    this.activeView.set(initialViews[0]);\r\n    this.#openViews.set(initialViews);\r\n\r\n    this.#attachListeners();\r\n\r\n    // Load templates\r\n    this.#sourceSvc.getAll().subscribe(templates => {\r\n      this.templates.set(templates);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleExplorer(explorer: Of<typeof Explorers>): void {\r\n    this.activeExplorer = (this.activeExplorer !== explorer) ? explorer : null;\r\n  }\r\n\r\n  createTemplate(params: CreateTemplateParams): void {\r\n    // This FileLocationDialogComponent dialog is currently never going to be opened because it has been replaced by mat-menu\r\n    // in the code-templates.component.html template. If you want to use the dialog instead of the menu, you need to remove the\r\n    // mat-menu and replace it with a button that opens the dialog with empty parameters.\r\n    // Dialog has been replaced by menu because from update to Angular 16 CreateFileDialogComponent wasn't opening anymore if\r\n    // FileLocationDialogComponent dialog was used.\r\n    // if (params.isShared == null) {\r\n    //   const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n    //     autoFocus: false,\r\n    //     viewContainerRef: this.viewContainerRef,\r\n    //     width: '650px',\r\n    //   });\r\n    //   fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n    //     if (isShared == null) return;\r\n    //     params.isShared = isShared;\r\n    //     this.createTemplate(params);\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: params.folder,\r\n      global: params.isShared,\r\n      purpose: params.folder === 'api' || params.folder?.startsWith('api/') ? 'Api' : undefined,\r\n    };\r\n    const createFileDialogRef = this.matDialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) return;\r\n\r\n      this.#sourceSvc.create(result.name, params.isShared, result.templateKey).subscribe(() => {\r\n        this.#sourceSvc.getAll().subscribe(files => {\r\n          this.templates.set(files);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoEditorRef?.insertSnippet(snippet);\r\n  }\r\n\r\n  codeChanged(code: string, viewKey: ViewKey): void {\r\n    let viewInfos = this.#viewInfos();\r\n    const selectedIndex = viewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    const selectedViewInfo = viewInfos[selectedIndex];\r\n    const newViewInfo: ViewInfo = {\r\n      ...selectedViewInfo,\r\n      view: {\r\n        ...selectedViewInfo.view,\r\n        Code: code,\r\n      },\r\n    };\r\n    viewInfos = [...viewInfos.slice(0, selectedIndex), newViewInfo, ...viewInfos.slice(selectedIndex + 1)];\r\n    this.#viewInfos.set(viewInfos);\r\n  }\r\n\r\n  openView(viewKey: ViewKey): void {\r\n    // fix viewKey because it can be a templateId or a path, and file might already be open\r\n    viewKey = this.#viewInfos().find(\r\n      v => !RxHelpers.objectsEqual(v.viewKey, viewKey) && v.view?.FileName === viewKey.key && v.view?.IsShared === viewKey.shared\r\n    )?.viewKey ?? viewKey;\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (!RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      this.activeView.set(viewKey);\r\n    }\r\n    const oldOpenViews = this.#openViews();\r\n    if (!oldOpenViews.some(v => RxHelpers.objectsEqual(v, viewKey))) {\r\n      const newOpenViews = [...oldOpenViews, viewKey];\r\n      this.#openViews.set(newOpenViews);\r\n    }\r\n  }\r\n\r\n  closeEditor(viewKey: ViewKey): void {\r\n    const oldOpenViews = this.#openViews();\r\n    const newOpenViews = oldOpenViews.filter(key => !RxHelpers.objectsEqual(key, viewKey));\r\n\r\n    const oldActiveView = this.activeView();\r\n    if (RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      const newActiveView = oldOpenViews[oldOpenViews.findIndex(v => RxHelpers.objectsEqual(v, oldActiveView)) - 1] ?? newOpenViews[0];\r\n      this.activeView.set(newActiveView);\r\n    }\r\n    this.#openViews.set(newOpenViews);\r\n  }\r\n\r\n  save(viewKey?: ViewKey): void {\r\n    viewKey ??= this.activeView();\r\n    const viewInfo = this.#viewInfos().find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    if (viewInfo?.view == null) return;\r\n\r\n    this.snackBar.open('Saving...');\r\n    const codeToSave = viewInfo.view.Code;\r\n    this.#sourceSvc.save(viewKey.key, viewKey.shared, viewInfo.view, this.#urlItems).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n\r\n        let newViewInfos = [...this.#viewInfos()];\r\n        const selectedIndex = newViewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n        if (selectedIndex < 0) return;\r\n\r\n        const selectedViewInfo = newViewInfos[selectedIndex];\r\n        const newViewInfo: ViewInfo = {\r\n          ...selectedViewInfo,\r\n          savedCode: codeToSave,\r\n        };\r\n        newViewInfos = [...newViewInfos.slice(0, selectedIndex), newViewInfo, ...newViewInfos.slice(selectedIndex + 1)];\r\n        this.#viewInfos.set(newViewInfos);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => this.snackBar.open('Failed', null, { duration: 2000 }),\r\n    });\r\n  }\r\n\r\n  /** Show info about editions if other files with the same name exist */\r\n  #showCodeAndEditionWarnings(viewKey: ViewKey, view: SourceView, files: FileAsset[]): void {\r\n    const pathAndName = view.FileName;\r\n    const pathSeparator = pathAndName.indexOf('/') > -1 ? pathAndName.lastIndexOf('/') + 1 : 0;\r\n    const pathWithSlash = pathSeparator === 0 ? '' : pathAndName.substring(0, pathSeparator);\r\n    const fullName = pathAndName.substring(pathSeparator);\r\n    const name = fullName.substring(0, fullName.length - view.Extension.length);\r\n    const nameCode = name + '.code' + view.Extension;\r\n    // find out if we also have a code file\r\n    const codeFile = files.find(file => file.Path === pathWithSlash + nameCode && file.Shared === view.IsShared);\r\n    const otherEditions = files.filter(file => file.Path.endsWith(fullName) && file.Shared === view.IsShared).length - 1;\r\n\r\n    if (codeFile || otherEditions) {\r\n      const snackBarData: CodeAndEditionWarningsSnackBarData = {\r\n        fileName: fullName,\r\n        codeFile: codeFile?.Path,\r\n        edition: this.#urlItems\r\n          .find(i => i.EntityId?.toString() === viewKey.key && i.IsShared === view.IsShared && i.Path === view.FileName)?.Edition,\r\n        otherEditions,\r\n        openCodeBehind: false,\r\n      };\r\n      const snackBarRef = this.snackBar.openFromComponent(CodeAndEditionWarningsComponent, {\r\n        data: snackBarData,\r\n        duration: 10000,\r\n      });\r\n\r\n      snackBarRef.onAction().subscribe(() => {\r\n        if ((snackBarRef.containerInstance.snackBarConfig.data as CodeAndEditionWarningsSnackBarData).openCodeBehind) {\r\n          const openViewKey: ViewKey = { key: codeFile?.Path, shared: codeFile?.Shared };\r\n          this.openView(openViewKey);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  #attachListeners(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<BeforeUnloadEvent>(window, 'beforeunload')\r\n          .subscribe(event => {\r\n            const allSaved = !this.#viewInfos().some(v => v.view != null && v.view.Code !== v.savedCode);\r\n            if (allSaved) return;\r\n            event.preventDefault();\r\n            event.returnValue = ''; // fix for Chrome\r\n          })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown')\r\n          .subscribe(event => {\r\n            if (!isCtrlS(event)) return;\r\n            event.preventDefault();\r\n            this.zone.run(() => this.save());\r\n          })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../services/global-config.service';\r\n\r\n@Directive({\r\n  selector: '[appToggleDebug]',\r\n  standalone: true\r\n})\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","export const DataTypeCatalog = {\r\n  Boolean: 'Boolean',\r\n  Custom: 'Custom',\r\n  DateTime: 'DateTime',\r\n  Empty: 'Empty',\r\n  Entity: 'Entity',\r\n  Hyperlink: 'Hyperlink',\r\n  Number: 'Number',\r\n  String: 'String',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n"],"x_google_ignoreList":[]}