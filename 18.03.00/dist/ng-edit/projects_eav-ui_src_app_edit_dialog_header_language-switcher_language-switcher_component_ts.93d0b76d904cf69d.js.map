{"version":3,"file":"projects_eav-ui_src_app_edit_dialog_header_language-switcher_language-switcher_component_ts.93d0b76d904cf69d.js","mappings":"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","names":["getLanguageOptions","languages","languageButtons","shortCodesCount","forEach","language","shortName","removeRegionName","Culture","shortCode","push","label","NameId","languageName","substring","includes","indexOf","toLocaleUpperCase","i0","o_r1","Code","toLocaleLowerCase","option_r2","SeparateLanguagesDialogComponent","#languageSvc","#userLanguageSvc","constructor","dialog","this","inject","LanguageService","UserLanguageService","options","getAll","closeDialog","close","setLabelLanguage","selectedLang","type","setLabel","getLabelLanguage","getLabelStored","setUiLanguage","setUi","getUiLanguage","getUiStored","i1","selectors","standalone","features","decls","vars","consts","template","rf","ctx","$event","value","SeparateLanguagesDialogComponent_For_19_Template","_forTrack0","SeparateLanguagesDialogComponent_For_29_Template","MatDialogModule","MatIconModule","i2","MatButtonModule","i3","TippyDirective","MatFormFieldModule","i4","MatSelectModule","i5","i6","styles","CenterSelectedHelper","ngZone","header","moveThreshold","stopClick","eventListeners","runOutsideAngular","checkIfMouseMoved","event","document","addEventListener","passive","element","listener","lngButtonDown","saveInitialPosition","lngButtonClick","doMove","stopClickIfMouseMoved","destroy","removeEventListener","positionX","pageX","positionY","pageY","Math","abs","button","target","buttonOffset","getBoundingClientRect","left","buttonWidth","width","headerOffset","headerWidth","scrollLeft","MouseScrollHelper","areButtonsDisabled","registerScroll","bind","headerDownListener","window","getSelection","removeAllRanges","oldScrollBehavior","getComputedStyle","getPropertyValue","style","scrollBehavior","doScroll","e","removeScroll","splice","length","newPositionX","ShowShadowsHelper","leftShadow","rightShadow","hidden","calculateShadows","maxScrollLeft","scrollWidth","clientWidth","hideBoth","hideLeft","hideRight","showBoth","classList","add","remove","_r1","ctx_r1","languageSettings","LanguageSwitcherComponent_For_8_Conditional_0_Conditional_2_Template","langButton_r3","disabled","_r4","lngButtonMouseDown","$implicit","LanguageSwitcherComponent_For_8_Conditional_0_Template","LanguageSwitcherComponent_For_8_Conditional_1_Template","current","LanguageSwitcherComponent","languageService","languageInstanceService","formConfig","snackBar","translate","userLanguageSvc","matDialog","viewContainerRef","log","classLog","input","computed","buttons","ngAfterViewInit","showShadowsHelper","headerRef","nativeElement","leftShadowRef","rightShadowRef","mouseScrollHelper","centerSelectedHelper","ngOnDestroy","l","fn","open","instant","duration","verticalPosition","end","setCurrent","config","formId","lngCode","getUiCode","use","autoFocus","i7","viewQuery","LanguageSwitcherComponent_For_8_Template","i8","MatIcon"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/edit/dialog/header/language-switcher/language-switcher.helpers.ts","./projects/eav-ui/src/app/edit/dialog/header/separate-languages-dialog/separate-languages-dialog.html","./projects/eav-ui/src/app/edit/dialog/header/separate-languages-dialog/separate-languages-dialog.ts","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/center-selected.helper.ts","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/mouse-scroll.helper.ts","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/show-shadows.helper.ts","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/language-switcher.component.html","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/language-switcher.component.ts"],"sourcesContent":["import { Language } from '../../../form/form-languages.model';\r\n\r\nexport interface LanguageOption extends Language {\r\n  label: string;\r\n}\r\n\r\n/** Calculates properties of language buttons, e.g. name to be displayed */\r\nexport function getLanguageOptions(languages: Language[]): LanguageOption[] {\r\n  const languageButtons: LanguageOption[] = [];\r\n  const shortCodesCount: Record<string, number> = {};\r\n\r\n  // count the number of repetitions of the same language without region key\r\n  // e.g. English (United States) and English (Australia) are both English\r\n  languages.forEach(language => {\r\n    const shortName = removeRegionName(language.Culture);\r\n    if (shortCodesCount[shortName])\r\n      shortCodesCount[shortName]++;\r\n    else\r\n      shortCodesCount[shortName] = 1;\r\n  });\r\n\r\n  // if language repeats, append language key to name which will be displayed\r\n  languages.forEach(language => {\r\n    const shortCode = removeRegionName(language.Culture);\r\n\r\n    languageButtons.push({\r\n      ...language,\r\n      label: (shortCodesCount[shortCode] > 1) ? `${shortCode} (${language.NameId})` : shortCode,\r\n    });\r\n  });\r\n\r\n  return languageButtons;\r\n}\r\n\r\n/** Returns name without region, e.g. ENGLISH from English (United Stated) */\r\nfunction removeRegionName(languageName: string): string {\r\n  return languageName.substring(0, languageName.includes('(') ? languageName.indexOf('(') - 1 : 100).toLocaleUpperCase();\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Language UI Settings (BETA)</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      By default, the UI language will match the current language of the content. But sometimes you may prefer to to have a different\r\n      behavior.\r\n    </p>\r\n\r\n    <h3>Choose language</h3>\r\n\r\n    <!-- Dropdown for Labels and Help Texts -->\r\n    <mat-form-field tippy=\"Changes the language for all texts and labels\" appearance=\"fill\" color=\"accent\">\r\n      <mat-label>Labels and Help Texts</mat-label>\r\n      <mat-select [value]=\"getLabelLanguage()\" (selectionChange)=\"setLabelLanguage($event.value, 'labels')\">\r\n        <mat-option value=\"\">Always same as content (default)</mat-option>\r\n        @for (o of options; track o.Code) {\r\n          <mat-option value=\"{{ o.Code.toLocaleLowerCase() }}\">{{ o.label }}</mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <br />\r\n    <br />\r\n\r\n    <!-- Dropdown for UI Elements -->\r\n    <mat-form-field tippy=\"Changes the language for all UI Elements\" appearance=\"fill\" color=\"accent\">\r\n      <mat-label>UI Elements</mat-label>\r\n      <mat-select [value]=\"getUiLanguage()\" (selectionChange)=\"setUiLanguage($event.value, 'ui')\">\r\n        <mat-option value=\"\">Always same as content (default)</mat-option>\r\n        @for (option of options; track option.Code) {\r\n          <mat-option value=\"{{ option.Code.toLocaleLowerCase() }}\">{{ option.label }}</mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n","import { Component, inject } from \"@angular/core\";\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MatDialogActions,\r\n  MatDialogClose,\r\n  MatDialogContent,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n  MatDialogTitle\r\n} from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { UserLanguageService } from \"projects/eav-ui/src/app/shared/services/user-language.service\";\r\nimport { TippyDirective } from \"../../../../shared/directives/tippy.directive\";\r\nimport { LanguageService } from '../../../localization/language.service';\r\nimport { getLanguageOptions } from '../language-switcher/language-switcher.helpers';\r\n\r\n@Component({\r\n  selector: 'app-separate-languages-header',\r\n  templateUrl: './separate-languages-dialog.html',\r\n  styleUrls: ['./separate-languages-dialog.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogTitle,\r\n    MatDialogModule,\r\n    MatDialogContent,\r\n    MatDialogActions,\r\n    MatDialogClose,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    TippyDirective,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n  ],\r\n})\r\nexport class SeparateLanguagesDialogComponent {\r\n\r\n  #languageSvc = inject(LanguageService);\r\n  #userLanguageSvc = inject(UserLanguageService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<SeparateLanguagesDialogComponent>) { }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  protected options = getLanguageOptions(this.#languageSvc.getAll());\r\n\r\n  setLabelLanguage(selectedLang: string, type: string): void {\r\n    this.#userLanguageSvc.setLabel(selectedLang);\r\n  }\r\n\r\n  getLabelLanguage(): String {\r\n    return this.#userLanguageSvc.getLabelStored();\r\n  }\r\n\r\n  setUiLanguage(selectedLang: string, type: string): void {\r\n    this.#userLanguageSvc.setUi(selectedLang);\r\n  }\r\n\r\n  getUiLanguage(): String {\r\n    return this.#userLanguageSvc.getUiStored();\r\n  }\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../shared/controls/element-event-listener.model';\r\n\r\nexport class CenterSelectedHelper {\r\n  private positionX: number;\r\n  private positionY: number;\r\n  private moveThreshold = 2; // pixels for which header can be scrolled while clicking to still register as click\r\n  private stopClick = false;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const checkIfMouseMoved = (event: MouseEvent) => { this.checkIfMouseMoved(event); };\r\n      document.addEventListener('mouseup', checkIfMouseMoved, { passive: true });\r\n      this.eventListeners.push({ element: document, type: 'mouseup', listener: checkIfMouseMoved });\r\n    });\r\n  }\r\n\r\n  lngButtonDown(event: MouseEvent) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.saveInitialPosition(event);\r\n    });\r\n  }\r\n\r\n  lngButtonClick(event: MouseEvent) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.doMove(event);\r\n    });\r\n  }\r\n\r\n  stopClickIfMouseMoved() {\r\n    return this.stopClick;\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(({ element, type, listener }) => {\r\n        element.removeEventListener(type, listener);\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n  }\r\n\r\n  private saveInitialPosition(event: MouseEvent) {\r\n    this.stopClick = false;\r\n    this.positionX = event.pageX;\r\n    this.positionY = event.pageY;\r\n  }\r\n\r\n  private checkIfMouseMoved(event: MouseEvent) {\r\n    if (!this.positionX || !this.positionY) {\r\n      this.stopClick = false;\r\n      return;\r\n    }\r\n    const newPositionX = event.pageX;\r\n    const newPositionY = event.pageY;\r\n\r\n    const newTotal = newPositionX + newPositionY;\r\n    const oldTotal = this.positionX + this.positionY;\r\n\r\n    this.stopClick = Math.abs(oldTotal - newTotal) > this.moveThreshold;\r\n    this.positionX = null;\r\n    this.positionY = null;\r\n  }\r\n\r\n  private doMove(event: MouseEvent) {\r\n    if (this.stopClick) return;\r\n\r\n    const button = event.target as HTMLButtonElement;\r\n    const buttonOffset = button.getBoundingClientRect().left;\r\n    const buttonWidth = button.getBoundingClientRect().width;\r\n    const headerOffset = this.header.getBoundingClientRect().left;\r\n    const headerWidth = this.header.getBoundingClientRect().width;\r\n\r\n    const currentPosition = buttonOffset + buttonWidth / 2;\r\n    const moveTo = headerOffset + headerWidth / 2;\r\n\r\n    this.header.scrollLeft += currentPosition - moveTo;\r\n  }\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../shared/controls/element-event-listener.model';\r\n\r\nexport class MouseScrollHelper {\r\n  private oldScrollBehavior: string;\r\n  private positionX: number;\r\n  private headerDownListener: ElementEventListener;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n    private areButtonsDisabled: () => boolean\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const registerScroll = this.registerScroll.bind(this);\r\n      this.header.addEventListener('pointerdown', registerScroll, { passive: true });\r\n      this.headerDownListener = { element: this.header, type: 'pointerdown', listener: registerScroll };\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.headerDownListener.element.removeEventListener(this.headerDownListener.type, this.headerDownListener.listener);\r\n      this.headerDownListener = null;\r\n      this.eventListeners.forEach(({ element, type, listener }) => {\r\n        element.removeEventListener(type, listener);\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n    this.ngZone = null;\r\n    this.header = null;\r\n    this.areButtonsDisabled = null;\r\n  }\r\n\r\n  private registerScroll(event: MouseEvent) {\r\n    const disabled = this.areButtonsDisabled();\r\n    if (disabled || event.button !== 0) return;\r\n\r\n    window.getSelection().removeAllRanges();\r\n    this.oldScrollBehavior = getComputedStyle(this.header).getPropertyValue('scroll-behavior');\r\n\r\n    this.header.style.scrollBehavior = 'auto';\r\n    this.positionX = event.pageX;\r\n\r\n    const doScroll = (e: MouseEvent) => { this.doScroll(e); };\r\n    const removeScroll = () => { this.removeScroll(); };\r\n    document.addEventListener('pointermove', doScroll, { passive: true });\r\n    document.addEventListener('pointerup', removeScroll, { passive: true });\r\n    document.addEventListener('pointerleave', removeScroll, { passive: true });\r\n    this.eventListeners.push(\r\n      { element: document, type: 'pointermove', listener: doScroll },\r\n      { element: document, type: 'pointerup', listener: removeScroll },\r\n      { element: document, type: 'pointerleave', listener: removeScroll },\r\n    );\r\n  }\r\n\r\n  private removeScroll() {\r\n    this.header.style.scrollBehavior = this.oldScrollBehavior;\r\n\r\n    this.eventListeners.forEach(({ element, type, listener }) => {\r\n      element.removeEventListener(type, listener);\r\n    });\r\n    this.eventListeners.splice(0, this.eventListeners.length);\r\n  }\r\n\r\n  private doScroll(event: MouseEvent) {\r\n    const newPositionX = event.pageX;\r\n    if (newPositionX < this.positionX) {\r\n      this.header.scrollLeft += this.positionX - newPositionX;\r\n    } else if (newPositionX > this.positionX) {\r\n      this.header.scrollLeft += -(newPositionX - this.positionX);\r\n    }\r\n    this.positionX = newPositionX;\r\n  }\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../shared/controls/element-event-listener.model';\r\n\r\nexport class ShowShadowsHelper {\r\n  private maxScrollLeft: number;\r\n  private hidden = 'hidden'; // CSS class which hides shadows\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n    private leftShadow: HTMLElement,\r\n    private rightShadow: HTMLElement,\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.calculateShadows();\r\n\r\n      const calculateShadows = () => { this.calculateShadows(); };\r\n      this.header.addEventListener('scroll', calculateShadows, { passive: true });\r\n      window.addEventListener('resize', calculateShadows, { passive: true });\r\n      this.eventListeners.push(\r\n        { element: this.header, type: 'scroll', listener: calculateShadows },\r\n        { element: window, type: 'resize', listener: calculateShadows },\r\n      );\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(({ element, type, listener }) => {\r\n        element.removeEventListener(type, listener);\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n    this.ngZone = null;\r\n    this.header = null;\r\n    this.leftShadow = null;\r\n    this.rightShadow = null;\r\n  }\r\n\r\n  private calculateShadows() {\r\n    this.maxScrollLeft = this.header.scrollWidth - this.header.clientWidth;\r\n\r\n    if (this.maxScrollLeft === 0) {\r\n      this.hideBoth();\r\n    } else if (this.header.scrollLeft === 0) {\r\n      this.hideLeft();\r\n    } else if (this.header.scrollLeft === this.maxScrollLeft) {\r\n      this.hideRight();\r\n    } else {\r\n      this.showBoth();\r\n    }\r\n  }\r\n\r\n  private hideBoth() {\r\n    this.leftShadow.classList.add(this.hidden);\r\n    this.rightShadow.classList.add(this.hidden);\r\n  }\r\n\r\n  private hideLeft() {\r\n    this.leftShadow.classList.add(this.hidden);\r\n    this.rightShadow.classList.remove(this.hidden);\r\n  }\r\n\r\n  private hideRight() {\r\n    this.leftShadow.classList.remove(this.hidden);\r\n    this.rightShadow.classList.add(this.hidden);\r\n  }\r\n\r\n  private showBoth() {\r\n    this.leftShadow.classList.remove(this.hidden);\r\n    this.rightShadow.classList.remove(this.hidden);\r\n  }\r\n}\r\n","<!-- Show all language tab-buttons on a edit dialog -->\r\n<div class=\"scrollable__overlay\">\r\n  <!-- Shadows when scrolling lots of languages -->\r\n  <div #leftShadow class=\"scrollable__overlay--left-shadow\"></div>\r\n  <div #rightShadow class=\"scrollable__overlay--right-shadow\"></div>\r\n\r\n  <!-- Scrolling area when lots of languages -->\r\n  <div #scrollable class=\"scrollable lang-switch\" tippyTranslate=\"Message.CantSwitchLanguage\" [tippyDisabled]=\"!disabled()\">\r\n    @for (langButton of buttons; track langButton) {\r\n      <!-- Current Button is a bit different, not clickable, but has language settings on hover -->\r\n      @if (current() === langButton.NameId) {\r\n        <button mat-flat-button\r\n          class=\"lang-switch__button hover-area\"\r\n          color=\"accent\"\r\n          [tippy]=\"langButton.Culture\"\r\n          [tippyDisabled]=\"disabled()\"\r\n        >\r\n          {{ langButton.label }}\r\n          <!-- manually switch with true/false | so it doesn't show inside the UI (WIP) -->\r\n          @if (true) { \r\n            <mat-icon iconPositionEnd class=\"hover-only\" tippy=\"Language Settings\" (click)=\"languageSettings()\">settings</mat-icon>\r\n          }\r\n        </button>\r\n      }\r\n      @else {\r\n        <button mat-flat-button\r\n          class=\"lang-switch__button\"\r\n          color=\"white\"\r\n          (mousedown)=\"lngButtonMouseDown($event)\"\r\n          (click)=\"lngButtonClick($event, langButton)\"\r\n          [tippy]=\"langButton.Culture\"\r\n          [tippyDisabled]=\"disabled()\"\r\n        >\r\n          {{ langButton.label }}\r\n        </button>\r\n      }\r\n    }\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, ElementRef, NgZone, OnDestroy, ViewChild, ViewContainerRef, computed, input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserLanguageService } from 'projects/eav-ui/src/app/shared/services/user-language.service';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { FormLanguageService } from '../../../form/form-language.service';\r\nimport { Language } from '../../../form/form-languages.model';\r\nimport { LanguageService } from '../../../localization/language.service';\r\nimport { SeparateLanguagesDialogComponent } from '../separate-languages-dialog/separate-languages-dialog';\r\nimport { CenterSelectedHelper } from './center-selected.helper';\r\nimport { getLanguageOptions } from './language-switcher.helpers';\r\nimport { MouseScrollHelper } from './mouse-scroll.helper';\r\nimport { ShowShadowsHelper } from './show-shadows.helper';\r\n\r\n@Component({\r\n  selector: 'app-language-switcher',\r\n  templateUrl: './language-switcher.component.html',\r\n  styleUrls: ['./language-switcher.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIcon,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class LanguageSwitcherComponent implements AfterViewInit, OnDestroy {\r\n\r\n  log = classLog({LanguageSwitcherComponent});\r\n\r\n  @ViewChild('scrollable') private headerRef: ElementRef;\r\n  @ViewChild('leftShadow') private leftShadowRef: ElementRef;\r\n  @ViewChild('rightShadow') private rightShadowRef: ElementRef;\r\n\r\n  disabled = input<boolean>();\r\n\r\n  private centerSelectedHelper: CenterSelectedHelper;\r\n  private mouseScrollHelper: MouseScrollHelper;\r\n  private showShadowsHelper: ShowShadowsHelper;\r\n\r\n  current = computed(() => this.formConfig.language().current);\r\n\r\n  buttons = getLanguageOptions(this.languageService.getAll());\r\n\r\n  constructor(\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: FormLanguageService,\r\n    private ngZone: NgZone,\r\n    private formConfig: FormConfigService,\r\n    private snackBar: MatSnackBar,\r\n    private translate: TranslateService,\r\n    private userLanguageSvc: UserLanguageService,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.showShadowsHelper = new ShowShadowsHelper(\r\n      this.ngZone,\r\n      this.headerRef.nativeElement,\r\n      this.leftShadowRef.nativeElement,\r\n      this.rightShadowRef.nativeElement,\r\n    );\r\n    this.mouseScrollHelper = new MouseScrollHelper(this.ngZone, this.headerRef.nativeElement, () => this.disabled());\r\n    this.centerSelectedHelper = new CenterSelectedHelper(this.ngZone, this.headerRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.centerSelectedHelper?.destroy();\r\n    this.mouseScrollHelper?.destroy();\r\n    this.showShadowsHelper?.destroy();\r\n  }\r\n\r\n  lngButtonMouseDown(event: MouseEvent) {\r\n    this.centerSelectedHelper.lngButtonDown(event);\r\n  }\r\n\r\n  lngButtonClick(event: MouseEvent, language: Language) {\r\n    const l = this.log.fn('lngButtonClick');\r\n    if (this.disabled()) {\r\n      this.snackBar.open(this.translate.instant('Message.CantSwitchLanguage'), null, { duration: 3000, verticalPosition: 'top' });\r\n      return l.end('disabled');\r\n    }\r\n    this.centerSelectedHelper.lngButtonClick(event);\r\n\r\n    if (!this.centerSelectedHelper.stopClickIfMouseMoved()) {\r\n      this.languageInstanceService.setCurrent(this.formConfig.config.formId, language.NameId);\r\n\r\n      // Also set the UI language\r\n      const lngCode = this.userLanguageSvc.getUiCode(language.NameId);\r\n      this.translate.use(lngCode);\r\n    }\r\n  }\r\n\r\n  languageSettings() {\r\n    this.matDialog.open(SeparateLanguagesDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '750px',\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}