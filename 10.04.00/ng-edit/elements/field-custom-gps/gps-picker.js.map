{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./projects/shared/eav-custom-input-field.ts","webpack:///./projects/field-custom-gps/src/shared/helpers.ts","webpack:///./projects/field-custom-gps/src/shared/constants.ts","webpack:///./projects/field-custom-gps/src/main/main.ts","webpack:///./projects/field-custom-gps/src/shared/models.ts","webpack:///./projects/field-custom-gps/src/main/main.html","webpack:///./projects/field-custom-gps/src/main/main.css","webpack:///./projects/shared/field-mask.service.ts","webpack:///./projects/field-custom-gps/src/preview/preview.ts","webpack:///./projects/field-custom-gps/src/preview/preview.html","webpack:///./projects/field-custom-gps/src/preview/preview.css"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EavCustomInputField","_super","__extends","HTMLElement","EavCustomInputFieldObservable","buildTemplate","template","styles","parseLatLng","JSON","parse","replace","stringifyLatLng","latLng","stringify","defaultCoordinates","lat","lng","mapsParameters","mapApiUrl","models_1","helpers_1","constants_1","field_mask_service_1","FieldCustomGps","_this","this","console","log","fieldInitialized","eventListeners","connectedCallback","innerHTML","latInput","querySelector","lngInput","addressMaskContainer","iconSearch","formattedAddressContainer","mapContainer","allInputNames","experimental","allInputTypeNames","map","inputType","indexOf","connector","field","settings","LatField","latFieldName","LongField","lngFieldName","addressMask","AddressMask","addressMaskService","FieldMaskService","formGroup","controls","classList","remove","innerText","resolve","window","google","mapScriptLoaded","script","document","createElement","src","onload","appendChild","maps","Map","zoom","center","marker","Marker","position","draggable","geocoder","Geocoder","data","updateHtml","onLatLngInputChangeBound","onLatLngInputChange","addEventListener","autoSelectBound","autoSelect","push","element","type","listener","addListener","onMarkerDragend","toString","setCenter","setPosition","updateForm","update","updateField","length","parseFloat","address","geocode","results","status","GeocoderStatus","OK","result","geometry","location","alert","event","disconnectedCallback","clearInstanceListeners","forEach","eventListener","removeEventListener","EavExperimentalInputField","customElements","define","mask","model","changeEvent","overloadPreCleanValues","fields","findFields","unwrapField","subscriptions","fieldList","preClean","watchAllFields","e","replaceValue","cleaned","matches","match","staticName","onChange","maybeNew","valueSub","valueChanges","subscribe","destroy","sub","unsubscribe","eav_custom_input_field_1","FieldCustomGpsPreview","latContainer","lngContainer","onValueChange"],"mappings":"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","file":"gps-picker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { Connector, ConnectorObservable } from './connector';\r\n\r\nexport class EavCustomInputField<T> extends HTMLElement {\r\n  connector: Connector<T>;\r\n}\r\n\r\nexport class EavCustomInputFieldObservable<T> extends EavCustomInputField<T> {\r\n  connector: ConnectorObservable<T>;\r\n}\r\n","export function buildTemplate(template: string, styles: string): string {\r\n  return `${template}<style>\\n${styles}\\n</style>`;\r\n}\r\n\r\nexport function parseLatLng(value: string): google.maps.LatLngLiteral {\r\n  const latLng: google.maps.LatLngLiteral = JSON.parse(value.replace('latitude', 'lat').replace('longitude', 'lng'));\r\n  return latLng;\r\n}\r\n\r\nexport function stringifyLatLng(latLng: google.maps.LatLngLiteral): string {\r\n  const value = JSON.stringify(latLng).replace('lat', 'latitude').replace('lng', 'longitude');\r\n  return value;\r\n}\r\n","import { } from 'google-maps';\r\n\r\nexport const defaultCoordinates: google.maps.LatLngLiteral = {\r\n  lat: 47.17465989999999,\r\n  lng: 9.469142499999975,\r\n};\r\n\r\nconst mapApiKeyPart1 = 'AIzaSyDPhn';\r\nconst mapApiKeyPart2 = 'NKpEg8FmY8nooE7Zwnue6SusxEnHE';\r\n\r\nexport const mapsParameters = {\r\n  // note: don't use `${...}` here, because that's probably combined at compile time, and we want to keep\r\n  // the key parts separate so the google console doesn't complain about the key being public\r\n  mapApiUrl: 'https://maps.googleapis.com/maps/api/js?key=' + mapApiKeyPart1 + mapApiKeyPart2,\r\n};\r\n","import { } from 'google-maps';\r\n\r\nimport { EavExperimentalInputField } from '../shared/models';\r\nimport { ElementEventListener } from '../../../shared/element-event-listener-model';\r\nimport { buildTemplate, parseLatLng, stringifyLatLng } from '../shared/helpers';\r\nimport { defaultCoordinates, mapsParameters } from '../shared/constants';\r\nimport * as template from './main.html';\r\nimport * as styles from './main.css';\r\nimport { FieldMaskService } from '../../../shared/field-mask.service';\r\n\r\nclass FieldCustomGps extends EavExperimentalInputField<string> {\r\n  eventListeners: ElementEventListener[];\r\n  fieldInitialized: boolean;\r\n  addressMaskService: FieldMaskService;\r\n  geocoder: google.maps.Geocoder;\r\n  iconSearch: HTMLAnchorElement;\r\n  latFieldName: string;\r\n  latInput: HTMLInputElement;\r\n  lngFieldName: string;\r\n  lngInput: HTMLInputElement;\r\n  map: google.maps.Map;\r\n  mapApiUrl = mapsParameters.mapApiUrl;\r\n  mapContainer: HTMLDivElement;\r\n  marker: google.maps.Marker;\r\n\r\n  constructor() {\r\n    super();\r\n    console.log('FieldCustomGps constructor called');\r\n    this.fieldInitialized = false;\r\n    this.eventListeners = [];\r\n  }\r\n\r\n  connectedCallback() {\r\n    console.log('FieldCustomGps connectedCallback called');\r\n    // spm prevents connectedCallback from being called more than once. Don't know if it's necessary\r\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#custom-element-conformance\r\n    if (this.fieldInitialized) { return; }\r\n    this.fieldInitialized = true;\r\n\r\n    this.innerHTML = buildTemplate(template, styles);\r\n    this.latInput = this.querySelector('#lat');\r\n    this.lngInput = this.querySelector('#lng');\r\n    const addressMaskContainer = <HTMLDivElement>this.querySelector('#address-mask-container');\r\n    this.iconSearch = this.querySelector('#icon-search');\r\n    const formattedAddressContainer = <HTMLSpanElement>this.querySelector('#formatted-address-container');\r\n    this.mapContainer = this.querySelector('#map');\r\n\r\n    const allInputNames = this.experimental.allInputTypeNames.map(inputType => inputType.name);\r\n    if (allInputNames.indexOf(this.connector.field.settings.LatField) !== -1) {\r\n      this.latFieldName = this.connector.field.settings.LatField;\r\n    }\r\n    if (allInputNames.indexOf(this.connector.field.settings.LongField) !== -1) {\r\n      this.lngFieldName = this.connector.field.settings.LongField;\r\n    }\r\n\r\n    const addressMask = this.connector.field.settings.AddressMask || this.connector.field.settings['Address Mask'];\r\n    this.addressMaskService = new FieldMaskService(addressMask, this.experimental.formGroup.controls, null, null);\r\n    console.log('FieldCustomGps addressMask:', addressMask);\r\n    if (addressMask) {\r\n      addressMaskContainer.classList.remove('hidden');\r\n      formattedAddressContainer.innerText = this.addressMaskService.resolve();\r\n    }\r\n\r\n    const mapScriptLoaded = !!(window as any).google;\r\n    if (mapScriptLoaded) {\r\n      this.mapScriptLoaded();\r\n    } else {\r\n      const script = document.createElement('script');\r\n      script.src = this.mapApiUrl;\r\n      script.onload = this.mapScriptLoaded.bind(this);\r\n      this.appendChild(script);\r\n    }\r\n  }\r\n\r\n  private mapScriptLoaded() {\r\n    console.log('FieldCustomGps mapScriptLoaded called');\r\n    this.map = new google.maps.Map(this.mapContainer, { zoom: 15, center: defaultCoordinates });\r\n    this.marker = new google.maps.Marker({ position: defaultCoordinates, map: this.map, draggable: true });\r\n    this.geocoder = new google.maps.Geocoder();\r\n\r\n    // set initial values\r\n    if (!this.connector.data.value) {\r\n      this.updateHtml(defaultCoordinates);\r\n    } else {\r\n      this.updateHtml(parseLatLng(this.connector.data.value));\r\n    }\r\n\r\n    // listen to inputs, iconSearch and marker. Update inputs, map, marker and form\r\n    const onLatLngInputChangeBound = this.onLatLngInputChange.bind(this);\r\n    this.latInput.addEventListener('change', onLatLngInputChangeBound);\r\n    this.lngInput.addEventListener('change', onLatLngInputChangeBound);\r\n\r\n    const autoSelectBound = this.autoSelect.bind(this);\r\n    this.iconSearch.addEventListener('click', autoSelectBound);\r\n\r\n    this.eventListeners.push(\r\n      { element: this.latInput, type: 'change', listener: onLatLngInputChangeBound },\r\n      { element: this.lngInput, type: 'change', listener: onLatLngInputChangeBound },\r\n      { element: this.iconSearch, type: 'click', listener: autoSelectBound },\r\n    );\r\n\r\n    this.marker.addListener('dragend', this.onMarkerDragend.bind(this));\r\n  }\r\n\r\n  private updateHtml(latLng: google.maps.LatLngLiteral) {\r\n    this.latInput.value = latLng.lat ? latLng.lat.toString() : '';\r\n    this.lngInput.value = latLng.lng ? latLng.lng.toString() : '';\r\n    this.map.setCenter(latLng);\r\n    this.marker.setPosition(latLng);\r\n  }\r\n\r\n  private updateForm(latLng: google.maps.LatLngLiteral) {\r\n    this.connector.data.update(stringifyLatLng(latLng));\r\n    if (this.latFieldName) {\r\n      this.experimental.updateField(this.latFieldName, latLng.lat);\r\n    }\r\n    if (this.lngFieldName) {\r\n      this.experimental.updateField(this.lngFieldName, latLng.lng);\r\n    }\r\n  }\r\n\r\n  private onLatLngInputChange() {\r\n    console.log('FieldCustomGps input changed');\r\n    const latLng: google.maps.LatLngLiteral = {\r\n      lat: this.latInput.value.length > 0 ? parseFloat(this.latInput.value) : null,\r\n      lng: this.lngInput.value.length > 0 ? parseFloat(this.lngInput.value) : null,\r\n    };\r\n    this.updateHtml(latLng);\r\n    this.updateForm(latLng);\r\n  }\r\n\r\n  private autoSelect() {\r\n    console.log('FieldCustomGps geocoder called');\r\n    const address = this.addressMaskService.resolve();\r\n    this.geocoder.geocode({\r\n      address: address\r\n    }, (results, status) => {\r\n      if (status === google.maps.GeocoderStatus.OK) {\r\n        const result = results[0].geometry.location;\r\n        const latLng: google.maps.LatLngLiteral = {\r\n          lat: result.lat(),\r\n          lng: result.lng(),\r\n        };\r\n        this.updateHtml(latLng);\r\n        this.updateForm(latLng);\r\n      } else {\r\n        alert(`Could not locate address: ${address}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private onMarkerDragend(event: google.maps.MouseEvent) {\r\n    console.log('FieldCustomGps marker changed');\r\n    const latLng: google.maps.LatLngLiteral = {\r\n      lat: event.latLng.lat(),\r\n      lng: event.latLng.lng(),\r\n    };\r\n    this.updateHtml(latLng);\r\n    this.updateForm(latLng);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    console.log('FieldCustomGps disconnectedCallback called');\r\n    if (!!(window as any).google) {\r\n      google.maps.event.clearInstanceListeners(this.marker);\r\n      google.maps.event.clearInstanceListeners(this.map);\r\n    }\r\n\r\n    this.eventListeners.forEach(eventListener => {\r\n      const element = eventListener.element;\r\n      const type = eventListener.type;\r\n      const listener = eventListener.listener;\r\n      element.removeEventListener(type, listener);\r\n    });\r\n  }\r\n}\r\n\r\ncustomElements.define('field-custom-gps', FieldCustomGps);\r\n","import { EavCustomInputField } from '../../../shared/eav-custom-input-field';\r\n// tslint:disable-next-line:max-line-length\r\nimport { ExperimentalProps } from '../../../../src/app/eav-material-controls/input-types/custom/external-webcomponent-properties/external-webcomponent-properties';\r\n\r\nexport class EavExperimentalInputField<T> extends EavCustomInputField<T> {\r\n  experimental: ExperimentalProps;\r\n}\r\n","module.exports = \"<div class=\\\"custom-gps-container\\\">\\r\\n  <div class=\\\"map-info\\\">\\r\\n    <div class=\\\"input-component\\\">\\r\\n      <label for=\\\"lat\\\">Lat:</label>\\r\\n      <input id=\\\"lat\\\" type=\\\"number\\\" step=\\\"0.001\\\" />\\r\\n    </div>\\r\\n    &nbsp;\\r\\n    <div class=\\\"input-component\\\">\\r\\n      <label for=\\\"lng\\\">Lng:</label>\\r\\n      <input id=\\\"lng\\\" type=\\\"number\\\" step=\\\"0.001\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div id=\\\"address-mask-container\\\" class=\\\"map-info address-mask-container hidden\\\">\\r\\n    <a id=\\\"icon-search\\\" class=\\\"btn\\\">\\r\\n      <i class=\\\"material-icons\\\">search</i>\\r\\n    </a>\\r\\n    <span id=\\\"formatted-address-container\\\"></span>\\r\\n  </div>\\r\\n\\r\\n  <div id=\\\"map\\\" class=\\\"map-info__map\\\"></div>\\r\\n</div>\\r\\n\"","module.exports = \".custom-gps-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.map-info {\\r\\n  flex: 0 0 32px;\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  align-items: center;\\r\\n  padding: 4px;\\r\\n  padding-left: 14px;\\r\\n  border-bottom: 1px solid #e1e1e1;\\r\\n  background: white;\\r\\n}\\r\\n\\r\\n.address-mask-container {\\r\\n  flex-wrap: nowrap;\\r\\n}\\r\\n\\r\\n.map-info label,\\r\\n.map-info #icon-search {\\r\\n  margin-right: 8px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  font-size: 12px;\\r\\n  text-transform: uppercase;\\r\\n  padding: 4px;\\r\\n}\\r\\n\\r\\n.map-info #icon-search i {\\r\\n  font-size: 14px;\\r\\n  width: 14px;\\r\\n  height: 14px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.map-info input {\\r\\n  margin-right: 8px;\\r\\n  padding: 4px 16px;\\r\\n  border: none;\\r\\n  background: transparent;\\r\\n  outline: none !important;\\r\\n}\\r\\n\\r\\n.map-info__map {\\r\\n  flex: 1 1 auto;\\r\\n  width: 100%;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.hidden {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n  border: 1px solid silver;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.btn:hover {\\r\\n  background-color: rgba(69, 79, 99, 0.08);\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.input-component {\\r\\n  display: flex;\\r\\n  background-color: rgba(69, 79, 99, 0.08);\\r\\n  padding: 4px;\\r\\n  border-radius: 4px 4px 0 0;\\r\\n  border-bottom: 1px solid silver;\\r\\n  margin: 8px 0;\\r\\n}\\r\\n.input-component:hover {\\r\\n  border-bottom: 1px solid #0087f4;\\r\\n}\\r\\n\"","import { AbstractControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Create a new FieldMaskService instance and access result with resolve\r\n * @example\r\n * const mask = new FieldMaskService(\"[FirstName]\", formGroup.controls);\r\n * const maskValue = mask.resolve();\r\n *\r\n * @param mask a string like \"[FirstName] [LastName]\"\r\n * @param model usually FormGroup controls, passed into here\r\n * @param overloadPreCleanValues a function which will \"scrub\" the found field-values\r\n */\r\nexport class FieldMaskService {\r\n  private mask: string;\r\n  private model: { [key: string]: AbstractControl; };\r\n  private fields: string[] = [];\r\n  private value: string;\r\n  private findFields = /\\[.*?\\]/ig;\r\n  private unwrapField = /[\\[\\]]/ig;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    mask: string,\r\n    model: { [key: string]: AbstractControl; },\r\n    private changeEvent: (newValue: string) => any,\r\n    overloadPreCleanValues: (key: string, value: string) => string,\r\n  ) {\r\n    this.mask = mask;\r\n    this.model = model;\r\n    this.fields = this.fieldList();\r\n\r\n    if (overloadPreCleanValues) {\r\n      this.preClean = overloadPreCleanValues;\r\n    }\r\n\r\n    // bind auto-watch only if needed...\r\n    if (model && changeEvent) {\r\n      this.watchAllFields();\r\n    }\r\n  }\r\n\r\n  /** Resolves a mask to the final value */\r\n  resolve(): string {\r\n    let value = this.mask;\r\n    this.fields.forEach((e, i) => {\r\n      const replaceValue = this.model.hasOwnProperty(e) && this.model[e] && this.model[e].value ? this.model[e].value : '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      value = value.replace('[' + e + ']', cleaned);\r\n    });\r\n\r\n    return value;\r\n  }\r\n\r\n  /** Retrieves a list of all fields used in the mask */\r\n  fieldList(): string[] {\r\n    const result: string[] = [];\r\n    if (!this.mask) { return result; }\r\n    const matches = this.mask.match(this.findFields);\r\n    if (matches) {\r\n      matches.forEach((e, i) => {\r\n        const staticName = e.replace(this.unwrapField, '');\r\n        result.push(staticName);\r\n      });\r\n    } else { // TODO: ask is this good\r\n      result.push(this.mask);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** Default preClean function */\r\n  private preClean(key: string, value: string): string {\r\n    return value;\r\n  }\r\n\r\n  /** Change-event - will only fire if it really changes */\r\n  private onChange() {\r\n    console.log('FieldMaskService onChange called');\r\n    const maybeNew = this.resolve();\r\n    if (this.value !== maybeNew) {\r\n      this.changeEvent(maybeNew);\r\n    }\r\n    this.value = maybeNew;\r\n  }\r\n\r\n  /** Add watcher and execute onChange */\r\n  private watchAllFields() {\r\n    console.log('FieldMaskService watchAllFields called');\r\n    // add a watch for each field in the field-mask\r\n    this.fields.forEach(field => {\r\n      if (!this.model[field]) { return; }\r\n      const valueSub = this.model[field].valueChanges.subscribe(value => this.onChange());\r\n      this.subscriptions.push(valueSub);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n}\r\n","import { EavCustomInputField } from '../../../shared/eav-custom-input-field';\r\nimport { buildTemplate, parseLatLng } from '../shared/helpers';\r\nimport { defaultCoordinates } from '../shared/constants';\r\nimport * as template from './preview.html';\r\nimport * as styles from './preview.css';\r\n\r\nclass FieldCustomGpsPreview extends EavCustomInputField<string> {\r\n  latContainer: HTMLSpanElement;\r\n  lngContainer: HTMLSpanElement;\r\n\r\n  constructor() {\r\n    super();\r\n    console.log('FieldCustomGpsPreview constructor called');\r\n  }\r\n\r\n  connectedCallback() {\r\n    console.log('FieldCustomGpsPreview connectedCallback called');\r\n    this.innerHTML = buildTemplate(template, styles);\r\n    this.latContainer = this.querySelector('#lat-container');\r\n    this.lngContainer = this.querySelector('#lng-container');\r\n\r\n    // set initial value\r\n    if (!this.connector.data.value) {\r\n      this.updateHtml(defaultCoordinates);\r\n    } else {\r\n      this.updateHtml(parseLatLng(this.connector.data.value));\r\n    }\r\n\r\n    // update on value change\r\n    this.connector.data.onValueChange(value => {\r\n      if (!value) {\r\n        this.updateHtml(defaultCoordinates);\r\n      } else {\r\n        const latLng = parseLatLng(value);\r\n        this.updateHtml(latLng);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateHtml(latLng: google.maps.LatLngLiteral) {\r\n    this.latContainer.innerText = latLng.lat ? latLng.lat.toString() : '';\r\n    this.lngContainer.innerText = latLng.lng ? latLng.lng.toString() : '';\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    console.log('FieldCustomGpsPreview disconnectedCallback called');\r\n  }\r\n}\r\n\r\ncustomElements.define('field-custom-gps-preview', FieldCustomGpsPreview);\r\n","module.exports = \"<div class=\\\"custom-gps-preview\\\">Lat: <span id=\\\"lat-container\\\"></span>, Lng: <span id=\\\"lng-container\\\"></span></div>\\r\\n\"","module.exports = \".custom-gps-preview {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\""],"sourceRoot":""}