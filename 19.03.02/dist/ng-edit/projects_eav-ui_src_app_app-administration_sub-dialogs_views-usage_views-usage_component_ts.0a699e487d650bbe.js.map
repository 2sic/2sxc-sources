{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_views-usage_views-usage_component_ts.0a699e487d650bbe.js","mappings":"oVAGM,SAAUA,EAAmBC,GACjC,MAAMC,EAAsBD,EAAOC,KACnC,MAAO,OAAOA,EAAKC,MAAMC,aAAaF,EAAKC,MAAME,MACnD,CAEM,SAAUC,EAAoBL,GAClC,MAAMC,EAAsBD,EAAOC,KACnC,GAAmB,MAAfA,EAAKK,OACT,MAAO,OAAOL,EAAKK,OAAOH,gBAAgBF,EAAKK,OAAOC,mBAAmBN,EAAKK,OAAOE,OACvF,CAEM,SAAUC,EAAoBT,GAClC,QAA0B,MAAhBA,EAAOU,MAAgB,uBAAyB,IAAnD,eAAmEC,MAAM,IAClF,CAEM,SAAUC,EAAkBZ,GAChC,MAAMC,EAAsBD,EAAOC,KACnC,GAAmB,MAAfA,EAAKY,OACT,MAAO,OAAOZ,EAAKY,QACrB,CAEM,SAAUC,EAAkBd,GAChC,QAA0B,MAAhBA,EAAOU,MAAgB,uBAAyB,IAAnD,eAAmEC,MAAM,IAClF,CAEM,SAAUI,EAAgBf,GAC9B,OAA0B,MAAhBA,EAAOU,MAAgB,2BAA6B,cAAeC,MAAM,IACrF,CAEM,SAAUK,EAAchB,GACR,MAAhBA,EAAOU,OAEXO,OAAOC,KADqBlB,EAAOC,KAClBkB,IAAK,SACxB,CAEM,SAAUC,EAAmBpB,GACjC,MAAMqB,EAA8BrB,EAAOU,MAC3C,GAAc,MAAVW,EACJ,MAAO,8EAEDA,EAAOC,UAAY,4DAA8D,0EACjFD,EAAOE,UAAY,kFAAoF,oBAG/G,iEC9CEC,MAAA,WAA0DA,MAAA,mBAAAA,MAAAC,GAAA,MAAAC,EAAAF,QAAA,OAAAA,MAASE,EAAAC,UAAAC,gBAAAF,EAAAG,SAAkC,GACnGL,MAAA,YAAiBA,MAAA,GAAQA,QACzBA,MAAA,gBAAuBA,MAAA,eACzBA,kCAHwCA,MAAA,QAAAE,EAAAG,SACrBL,MAAA,GAAAA,MAAAE,EAAAI,KCiBd,IAAMC,EAAqB,MAA5B,MAAOA,EAIXC,cAEUC,KAAAN,aAAYO,KAAUC,IAFhB,CAIhBC,OAAOpC,GAEL,GADAiC,KAAKJ,QAAU7B,EAAOU,MACF,MAAhBuB,KAAKJ,QAAiB,OAC1B,MAAMQ,EAASJ,KAAKJ,QAAQlB,MAAM,MAAM,GACxCsB,KAAKH,GAAKO,EAAO1B,MAAM,KAAK,EAC9B,CAEA2B,QAAQtC,GACN,OAAO,CACT,iDAjBW+B,EAAqB,oCAArBA,EAAqBQ,UAAA,yBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,kIAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GDnBlCpB,MAAA,EAAAsB,EAAA,kBAAAtB,MAAAqB,EAAAf,GAAA,qBCcQiB,KAAeC,KACfC,KAAaC,KACbC,KAAcC,OAAA,kcAGTrB,CAAqB,6BCL3B,IAAMsB,EAA+B,MAAtC,MAAOA,EANbrB,cAOEC,KAAAqB,UAAY,GACZrB,KAAAsB,UAAY,GAIZnB,OAAOpC,GACLiC,KAAKuB,aAAexD,CACtB,CAEAyD,iBACE,MAA0B,KAAnBxB,KAAKqB,WAAuC,KAAnBrB,KAAKsB,SACvC,CAEAG,eAAe1D,GACb,IAAI2D,GAAgB,EAChBC,GAAgB,EAEpB,MAUMlD,EAA6BuB,KAAKuB,aAAaK,YAVR,CAC3CC,IAAK7B,KAAKuB,aAAaM,IACvBC,OAAQ9B,KAAKuB,aAAaO,OAC1BC,OAAQ/B,KAAKuB,aAAaQ,OAC1BC,UAAWhC,KAAKuB,aAAaS,UAC7BC,QAASjC,KAAKuB,aAAaU,QAC3BjE,KAAMD,EAAOmE,KAAKlE,KAClBmE,SAAWC,GAAUrE,EAAOmE,KAAKlE,KAAKoE,GACtCF,KAAMnE,EAAOmE,OAGf,OAAa,MAATzD,IAEFiD,EADqB,KAAnB1B,KAAKqB,WAC6B,MAAnB5C,EAAMY,WAA6BZ,EAAMY,UAAUgD,aAAerC,KAAKqB,UAKxFM,EADqB,KAAnB3B,KAAKsB,WAC6B,MAAnB7C,EAAMa,WAA6Bb,EAAMa,UAAU+C,aAAerC,KAAKsB,UAInFI,GAAiBC,EAC1B,CAEAW,WACE,GAAKtC,KAAKwB,iBACV,MAAO,CACLe,WAAY,qBACZlB,UAAWrB,KAAKqB,UAChBC,UAAWtB,KAAKsB,UAEpB,CAEAkB,SAASC,GACPzC,KAAKqB,UAAYoB,EAAQA,EAAMpB,UAAY,GAC3CrB,KAAKsB,UAAYmB,EAAQA,EAAMnB,UAAY,EAC7C,CAEAoB,iBAAiB3E,GACjB,CAEA4E,gBACE3C,KAAKuB,aAAaqB,uBACpB,iDA9DWxB,EAA+B,oCAA/BA,EAA+Bd,UAAA,oCAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,4FAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICd5CpB,MAAA,WAAmBA,MAAA,aAAOA,QAC1BA,MAAA,uBAAiBA,MAAA,yBAAAsD,GAAAtD,aAAAqB,EAAAS,UAAAwB,KAAAjC,EAAAS,UAAAwB,IAAA,GAAwBtD,MAAA,kCAAiBqB,EAAA+B,eAAe,GACvEpD,MAAA,wBAA2BA,MAAA,SAAGA,QAC9BA,MAAA,wBAA+BA,MAAA,aAAOA,QACtCA,MAAA,wBAAgCA,MAAA,YAClCA,UAEAA,MAAA,WAAmBA,MAAA,cAAOA,QAC1BA,MAAA,wBAAiBA,MAAA,yBAAAsD,GAAAtD,aAAAqB,EAAAU,UAAAuB,KAAAjC,EAAAU,UAAAuB,IAAA,GAAwBtD,MAAA,kCAAiBqB,EAAA+B,eAAe,GACvEpD,MAAA,yBAA2BA,MAAA,UAAGA,QAC9BA,MAAA,yBAA+BA,MAAA,iBAAUA,QACzCA,MAAA,yBAAgCA,MAAA,qBAClCA,iBAXiBA,MAAA,GAAAA,MAAA,UAAAqB,EAAAS,WAOA9B,MAAA,GAAAA,MAAA,UAAAqB,EAAAU,2BDIHwB,KAAc/B,UAAEgC,KAAW9B,WAAAE,OAAA,4NAE5BC,CAA+B,KEXtC,SAAU4B,EAAUC,GACxB,MAAMjF,EAAwB,GAC9B,UAAWkF,KAASD,EAAUE,OAAQ,CACP,IAAzBD,EAAME,QAAQC,QAChBrF,EAAKsF,KAAK,CACRrF,MAAO,CAAEC,GAAIgF,EAAMhF,GAAIC,KAAM+E,EAAM/E,QAGvC,UAAWoF,KAAUL,EAAME,QACzBpF,EAAKsF,KAAK,CACRrF,MAAO,CAAEC,GAAIgF,EAAMhF,GAAIC,KAAM+E,EAAM/E,MACnCE,OAAQkF,EACR3E,OAAQ2E,EAAOC,KAAKtF,GACpBuF,KAAMF,EAAOC,KAAKC,KAClBvE,IAAKqE,EAAOC,KAAKtE,IACjBwE,SAAUH,EAAOC,KAAKG,YACtBC,OAAQ,CAAEvE,UAAWkE,EAAOC,KAAKK,QAASvE,UAAWiE,EAAOjE,YAGlE,CACA,OAAOtB,CACT,eCMO,IAAM8F,EAAmB,MAA1B,MAAOA,EAKX/D,YACUgE,EACAC,GADAhE,KAAA+D,SACA/D,KAAAgE,QANVhE,KAAAiE,YAAcjE,KAAKkE,mBAEXlE,KAAAmE,gBAAelE,KAAUmE,KAOjCpE,KAAAqE,SAAWrE,KAAKgE,MAAMM,SAASC,SAASC,IAAI,QAE5CxE,MAAAyE,EAASzE,KAAKmE,aAAaO,SAAS1E,KAAKqE,UAEzCrE,KAAA2E,QAAOC,OAAS,KACd,MAAMC,EAAQ7E,MAAKyE,IACnB,QAAcK,IAAVD,EAGJ,MAAO,CACLE,cAAeF,EAAM,IAAIpB,KACzBuB,YAAa,OAAOH,EAAM,GAAG3G,aAAa2G,EAAM,GAAG1G,OACnDH,KAAMgF,EAAU6B,EAAM,MAdtB,CAIJJ,GAgBAQ,cACEjF,KAAK+D,OAAOmB,OACd,CAEQhB,mBA8CN,MA7CiC,IAC5BiB,IACHC,WAAY,CACV,IACKC,IAAkBnH,GACrBkE,MAAO,QACPR,YAAa9D,EACbwH,aAAcxF,GAEhB,IACKuF,IAAkBE,OACrBnD,MAAO,SACPoD,MAAO,GACP5D,YAAaxD,EACbqH,UAAWjH,EACX8G,aAAcxF,GAEhB,IACKuF,IAAkBE,OACrBnD,MAAO,OACPR,YAAajD,EACb8G,UAAW5G,EACXyG,aAAcxF,GAEhB,IACKuF,IAAkBK,SACrBtD,MAAO,OACPuD,KAAM,MACNF,UAAW3G,EACX8G,cAAe7G,GAEjB,IACKsG,IAAkBQ,UACrBzD,MAAO,WACPoD,MAAO,IAET,CACEpD,MAAO,SACPoD,MAAO,GACPC,UAAW,kBAAkB/G,MAAM,KACnCoH,OAAQ1E,EACRkE,aAAcnG,IAKtB,iDA/EW2E,GAAmBvE,MAAAwB,MAAAxB,MAAA0B,MAAA,oCAAnB6C,EAAmBxD,UAAA,sBAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,uXAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IC3B1BpB,MAHN,UAGMA,CAH6B,UAG7BA,CAFsB,UAEtBA,CAD4B,WACOA,MAAA,GAAiCA,QACpEA,MAAA,cAA6CA,MAAA,0BAASqB,EAAAqE,aAAa,GACjE1F,MAAA,cAAUA,MAAA,WAGhBA,cAEEA,MADF,yBACEA,CADyD,SAEvDA,MAAA,iEACAA,MAAA,UAA6DA,MAAA,6CAAsCA,QACnGA,MAAA,4GACAA,MAAA,SAAIA,MAAA,4FACNA,UAEAA,MAAA,oBACAA,MAAA,YAEEA,MADA,uBACAA,CADmH,aAIzHA,4BApBWA,MAAA,GAAAA,MAAA,eAAAwG,EAAAnF,EAAA+D,QAAA,KAAAoB,EAAAf,aAA8BzF,cAAA,gBAAAyG,EAAApF,EAAA+D,QAAA,KAAAqB,EAAAjB,cAAA,IAgBQxF,MAAA,IAAyBA,MAAzB,iBAAA0G,EAAArF,EAAA+D,QAAA,KAAAsB,EAAAjI,KAAyBuB,CAAD,cAAAqB,EAAAqD,6BDGjEiC,KAAeC,KACfnF,KAAaoF,KACbC,KACAC,IAAaC,KACbrF,IACAsF,KAAezF,MAAA0F,cAAA,YAGV3C,CAAmB","names":["blockIdValueGetter","params","data","Block","Id","Guid","moduleIdValueGetter","Module","UsageId","Title","moduleIdClassGetter","value","split","pageIdValueGetter","PageId","pageIdClassGetter","nameClassGetter","onNameClicked","window","open","Url","statusCellRenderer","status","IsVisible","IsDeleted","i0","_r1","ctx_r1","clipboard","copyToClipboard","tooltip","id","ViewsUsageIdComponent","constructor","this","transient","ClipboardService","agInit","idPart","refresh","selectors","decls","vars","consts","template","rf","ctx","ViewsUsageIdComponent_Conditional_0_Template","MatRippleModule","i1","MatIconModule","i2","TippyDirective","styles","ViewsUsageStatusFilterComponent","isVisible","isDeleted","filterParams","isFilterActive","doesFilterPass","visiblePassed","deletedPassed","valueGetter","api","colDef","column","columnApi","context","node","getValue","field","toString","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","MatRadioModule","FormsModule","buildData","viewUsage","block","Blocks","Modules","length","push","module","Page","Name","Language","CultureCode","Status","Visible","ViewsUsageComponent","dialog","route","gridOptions","buildGridOptions","viewsService","ViewsService","viewGuid","snapshot","paramMap","get","#usage","getUsage","view","computed","usage","undefined","viewUsageName","viewTooltip","closeDialog","close","defaultGridOptions","columnDefs","ColumnDefinitions","cellRenderer","Number","width","cellClass","TextWide","sort","onCellClicked","ItemsText","filter","tmp_0_0","tmp_1_0","tmp_2_0","MatButtonModule","i3","i4","RouterOutlet","SxcGridModule","i5","MatDialogModule","encapsulation"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-grid.helpers.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.helpers.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.html"],"sourcesContent":["import { CellClassParams, CellClickedEvent, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { ViewUsageData, ViewUsageDataStatus } from '../../models/view-usage-data.model';\r\n\r\nexport function blockIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  return `ID: ${data.Block.Id}\\nGUID: ${data.Block.Guid}`;\r\n}\r\n\r\nexport function moduleIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.Module == null) return;\r\n  return `ID: ${data.Module.Id}\\nUsageId: ${data.Module.UsageId}\\nTitle: ${data.Module.Title}`;\r\n}\r\n\r\nexport function moduleIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function pageIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.PageId == null) return;\r\n  return `ID: ${data.PageId}`;\r\n}\r\n\r\nexport function pageIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function nameClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'primary-action highlight' : 'no-outline'}`.split(' ');\r\n}\r\n\r\nexport function onNameClicked(params: CellClickedEvent) {\r\n  if (params.value == null) return;\r\n  const data: ViewUsageData = params.data;\r\n  window.open(data.Url, '_blank');\r\n}\r\n\r\nexport function statusCellRenderer(params: ICellRendererParams) {\r\n  const status: ViewUsageDataStatus = params.value;\r\n  if (status == null) return;\r\n  return `\r\n    <div style=\"height: 100%;display: flex;align-items: center;\">\r\n      ${status.IsVisible ? '<span class=\"material-symbols-outlined\">visibility</span>' : '<span class=\"material-symbols-outlined\">visibility_off</span>'}\r\n      ${status.IsDeleted ? '<span style=\"margin-left: 8px;\" class=\"material-symbols-outlined\">delete</span>' : ''}\r\n    </div>\r\n  `;\r\n}\r\n","@if (id) {\r\n  <div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"clipboard.copyToClipboard(tooltip)\">\r\n    <span class=\"id\">{{ id }}</span>\r\n    <mat-icon class=\"icon\">file_copy</mat-icon>\r\n  </div>\r\n}","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\n\r\n@Component({\r\n    selector: 'app-views-usage-id',\r\n    templateUrl: './views-usage-id.component.html',\r\n    styleUrls: ['./views-usage-id.component.scss'],\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class ViewsUsageIdComponent implements ICellRendererAngularComp {\r\n  tooltip: string;\r\n  id: string;\r\n\r\n  constructor() { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.tooltip = params.value;\r\n    if (this.tooltip == null) return;\r\n    const idPart = this.tooltip.split('\\n')[0];\r\n    this.id = idPart.split(' ')[1];\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ViewUsageDataStatus } from '../../../models/view-usage-data.model';\r\nimport { ViewsUsageStatusFilterModel } from './views-usage-status-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n    selector: 'app-views-usage-status-filter',\r\n    templateUrl: './views-usage-status-filter.component.html',\r\n    styleUrls: ['./views-usage-status-filter.component.scss'],\r\n    imports: [MatRadioModule, FormsModule]\r\n})\r\nexport class ViewsUsageStatusFilterComponent implements IFilterAngularComp {\r\n  isVisible = '';\r\n  isDeleted = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.isVisible !== '' || this.isDeleted !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    let visiblePassed = false;\r\n    let deletedPassed = false;\r\n\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: ViewUsageDataStatus = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    if (this.isVisible !== '') {\r\n      visiblePassed = (value.IsVisible == null) ? false : value.IsVisible.toString() === this.isVisible;\r\n    } else {\r\n      visiblePassed = true;\r\n    }\r\n    if (this.isDeleted !== '') {\r\n      deletedPassed = (value.IsDeleted == null) ? false : value.IsDeleted.toString() === this.isDeleted;\r\n    } else {\r\n      deletedPassed = true;\r\n    }\r\n    return visiblePassed && deletedPassed;\r\n  }\r\n\r\n  getModel(): ViewsUsageStatusFilterModel {\r\n    if (!this.isFilterActive()) return;\r\n    return {\r\n      filterType: 'views-usage-status',\r\n      isVisible: this.isVisible,\r\n      isDeleted: this.isDeleted,\r\n    };\r\n  }\r\n\r\n  setModel(model: ViewsUsageStatusFilterModel) {\r\n    this.isVisible = model ? model.isVisible : '';\r\n    this.isDeleted = model ? model.isDeleted : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<div class=\"title\">Visible</div>\r\n<mat-radio-group [(ngModel)]=\"isVisible\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Visible</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Hidden</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Deleted</div>\r\n<mat-radio-group [(ngModel)]=\"isDeleted\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Is deleted</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Is not deleted</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\n\r\nexport function buildData(viewUsage: ViewUsage) {\r\n  const data: ViewUsageData[] = [];\r\n  for (const block of viewUsage.Blocks) {\r\n    if (block.Modules.length === 0) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n      });\r\n    }\r\n    for (const module of block.Modules) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n        Module: module,\r\n        PageId: module.Page.Id,\r\n        Name: module.Page.Name,\r\n        Url: module.Page.Url,\r\n        Language: module.Page.CultureCode,\r\n        Status: { IsVisible: module.Page.Visible, IsDeleted: module.IsDeleted },\r\n      });\r\n    }\r\n  }\r\n  return data;\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, computed } from '@angular/core';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { ViewsService } from '../../services/views.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { transient } from '../../../../../../core';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { blockIdValueGetter, moduleIdClassGetter, moduleIdValueGetter, nameClassGetter, onNameClicked, pageIdClassGetter, pageIdValueGetter, statusCellRenderer } from './views-usage-grid.helpers';\r\nimport { ViewsUsageIdComponent } from './views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from './views-usage-status-filter/views-usage-status-filter.component';\r\nimport { buildData } from './views-usage.helpers';\r\n\r\n@Component({\r\n    selector: 'app-views-usage',\r\n    templateUrl: './views-usage.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n        TippyDirective,\r\n        MatDialogModule,\r\n    ]\r\n})\r\nexport class ViewsUsageComponent {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private viewsService = transient(ViewsService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<ViewsUsageComponent>,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  viewGuid = this.route.snapshot.paramMap.get('guid');\r\n\r\n  #usage = this.viewsService.getUsage(this.viewGuid);\r\n\r\n  view = computed(() => {\r\n    const usage = this.#usage();\r\n    if (usage === undefined)\r\n      return undefined;\r\n\r\n    return {\r\n      viewUsageName: usage[0]?.Name,\r\n      viewTooltip: `ID: ${usage[0].Id}\\nGUID: ${usage[0].Guid}`,\r\n      data: buildData(usage[0]),\r\n    }\r\n  }\r\n  );\r\n\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          field: 'Block',\r\n          valueGetter: blockIdValueGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Module',\r\n          width: 80,\r\n          valueGetter: moduleIdValueGetter,\r\n          cellClass: moduleIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Page',\r\n          valueGetter: pageIdValueGetter,\r\n          cellClass: pageIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Name',\r\n          sort: 'asc',\r\n          cellClass: nameClassGetter,\r\n          onCellClicked: onNameClicked,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ItemsText,\r\n          field: 'Language',\r\n          width: 90,\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 80,\r\n          cellClass: 'icon no-outline'.split(' '),\r\n          filter: ViewsUsageStatusFilterComponent,\r\n          cellRenderer: statusCellRenderer,\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div [tippy]=\"view()?.viewTooltip\">View: {{ view()?.viewUsageName }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-content style=\"overflow: hidden; color: black\">\r\n    <p class=\"dialog-description\">\r\n      This shows where this view is being used. Read about the\r\n      <a href=\"https://go.2sxc.org/content-in-dnn\" target=\"_blank\">connections between DNN and 2sxc Views</a>\r\n      to make good decisions if you're doing clean-up or just want to better know what this is all about.\r\n      <em>Before you get confused about some things you see here, do read the FAQ on that page.</em>\r\n    </p>\r\n\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"view()?.data\" [gridOptions]=\"gridOptions\"> </ag-grid-angular>\r\n      <div class=\"grid-more-actions-box\"></div>\r\n    </div>\r\n  </mat-dialog-content>\r\n</div>\r\n"],"x_google_ignoreList":[]}