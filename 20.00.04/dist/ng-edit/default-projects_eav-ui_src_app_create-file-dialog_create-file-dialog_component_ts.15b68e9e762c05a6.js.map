{"version":3,"file":"default-projects_eav-ui_src_app_create-file-dialog_create-file-dialog_component_ts.15b68e9e762c05a6.js","mappings":"qhBAMO,IAAMA,EAA0B,MAAjC,MAAOA,EAGXC,YAAoBC,EAA4BC,GAA5BC,KAAAF,WAA4BE,KAAAD,aAFhDC,KAAAC,wBAAuBC,QAA2C,EAE0B,CAE5FC,WACEC,WAAW,KACTJ,KAAKF,SAASO,QAEVL,KAAKM,UAAUN,KAAKC,yBACtBD,KAAKD,WAAWQ,cAAcC,kBAAkB,EAAGR,KAAKF,SAASW,MAAMC,OAAM,EAGnF,CAEQJ,UAAUG,GAChB,GAAqB,kBAAVA,EAAuB,OAAOA,EACzC,GAAqB,iBAAVA,EAAoB,CAC7B,MAAME,EAAiBF,EAAMG,oBAC7B,MAAuB,SAAnBD,GACmB,UAAnBA,QACJ,CACF,CACA,OAAa,MAATF,EAAwBA,OAA5B,CACF,CAACI,SAAAb,KAAA,mBAAAc,iBAxBUlB,GAA0BmB,MAAAC,MAAAD,aAAA,EAAAF,SAAAb,KAAA,UAAAiB,EAAAC,IAAA,MAA1BtB,EAA0BuB,UAAA,iCAAAC,OAAA,CAAAnB,qBAAA,qCAA1BL,CAA0B,+FCevBmB,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAM,GACVN,cAAA,IAAAM,EAAA,gCAYFN,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAO,GACVP,cAAA,IAAAO,EAAA,gCAaJP,MAAA,mBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAQ,EAAAC,KACVT,cAAA,IAAAQ,EAAAE,KAAA,6BAcNV,MAAA,uBACEA,MAAA,8BACFA,cAFgBA,MAAA,oCASlBA,MADA,mBACAA,CAD6E,sCAW7EA,MADF,WACEA,CADiC,cAC8CA,MAAA,aACjFA,UACAA,MAAA,YAAuFA,MAAA,GAAgBA,8BAFpEA,cAAA,UAAAA,MAAA,EAAAW,EAAAC,EAAAC,iBAEMb,MAAA,GAAAA,MAAA,UAAAA,MAAA,EAAAW,EAAAC,EAAAC,iBAA8Cb,cAAAY,EAAAE,oCAGvFd,MAAA,YACEA,MAAA,GACFA,8BADEA,cAAA,IAAAY,EAAAG,aAAA,+CApFFf,MAHN,UAGMA,CAHmC,UAGnCA,CAF2B,UAE3BA,CADyD,UACnDA,MAAA,YAAMA,QACZA,MAAA,YAA4BA,MAAA,GAKhCA,YAQYA,MAPZ,UAOYA,CAPoB,WAOpBA,CANmC,UAMnCA,CALyB,WAKzBA,CAJwC,WAIxCA,CAF4B,sBAE5BA,CADwD,gBAC7CA,MAAA,eAAQA,QACnBA,MAAA,oBACEA,MAAA,GAAAgB,GAAA,oBAAAhB,OAONA,YAIIA,MAFJ,WAEIA,CAF4B,sBAE5BA,CADwD,gBAC7CA,MAAA,cAAOA,QAClBA,MAAA,oBACEA,MAAA,GAAAiB,GAAA,oBAAAjB,OAQRA,cAIIA,MAFJ,YAEIA,CAF6B,sBAE7BA,CADwD,gBAC7CA,MAAA,eAAQA,QACnBA,MAAA,oBACEA,MAAA,GAAAkB,GAAA,oBAAAlB,OAONA,YAIIA,MAFJ,YAEIA,CAF6B,sBAE7BA,CADwD,gBAC7CA,MAAA,WAAIA,QACfA,MAAA,eAEFA,QACAA,MAAA,GAAAmB,GAAA,yBAMJnB,UACAA,MAAA,aACEA,MAAA,GAAAoB,GAAA,KAIApB,MAAA,gBAAwCA,MAAA,mBAAAA,MAAAqB,GAAA,MAAAC,EAAAtB,QAAA,OAAAA,MAASsB,EAAAC,cAAa,GAAEvB,MAAA,aAAMA,QACtEA,MAAA,gBACoEA,MAAA,mBAAAA,MAAAqB,GAAA,MAAAC,EAAAtB,QAAA,OAAAA,MAASsB,EAAAE,UAAS,GACpFxB,MAAA,eAEJA,UACAA,MAAA,GAAAyB,GAAA,KAMAzB,MAAA,GAAA0B,GAAA,cAON1B,wCAxFkCA,MAAA,GAAAA,MAAAsB,EAAAK,SAAAC,UAAAlC,QAAA4B,EAAAK,SAAAE,OAAAnC,MAAA4B,EAAAK,SAAAE,OAAAnC,MAAAoC,OAAA,SAOxB9B,MAAA,GAAAA,MAAA,YAAAsB,EAAAS,MAQM/B,MAAA,GAAAA,MAAAY,EAAAoB,WAaAhC,MAAA,GAAAA,MAAAY,EAAAqB,UAcFjC,MAAA,GAAAA,MAAAY,EAAAsB,WAeJlC,MAAA,GAAAA,MAAAsB,EAAAK,SAAAQ,KAAAC,SAAA,MAAAd,EAAAK,SAAAQ,KAAAE,QAAAf,EAAAK,SAAAQ,KAAAE,OAAAC,SAAA,OAQFtC,MAAA,GAAAA,MAAAY,EAAAC,eAAA,OAMEb,MAAA,GAAAA,MAAA,YAAAsB,EAAAS,KAAAQ,OAAA3B,EAAAC,iBAAAD,EAAA4B,cAIJxC,MAAA,GAAAA,MAAAY,EAAAE,QAAA,OAMAd,eAAAY,EAAAC,gBAAAD,EAAAG,aAAA,QC7CC,IAAM0B,GAA0B,MAAjC,MAAOA,UAAkCC,IAO7CC,GACAC,GACAC,GACAC,GAEAhE,YACmCiE,EACzBC,GAERC,QAHiChE,KAAA8D,aACzB9D,KAAA+D,SAbgB/D,KAAAiE,UAAY,mBAMtCjE,MAAA0D,EAAO,MAGP1D,MAAA6D,KAAiBK,KAAUC,IAO3B,CAEAhE,WACEH,MAAK2D,EAAc,IAAIS,IAAsC,IAC7DpE,MAAK4D,EAAmB,IAAIQ,KAAgB,GAE5CpE,MAAKqE,IACLrE,MAAKsE,IACLtE,MAAKuE,GACP,CAEAC,cACExE,MAAK2D,EAAYc,WACjBzE,MAAK4D,EAAiBa,WACtBT,MAAMQ,aACR,CAEAlC,YAAYoC,GACV1E,KAAK+D,OAAOY,MAAMD,EACpB,CAEAnC,UACE,MAAMqC,EAAmC5E,KAAK8C,KAAK+B,cAMnD7E,KAAKsC,YAJkC,CACrCY,KAAM0B,EAAWjC,UACjBmC,YAAaF,EAAWE,aAG5B,CAEAR,KACEtE,MAAK6D,EAAekB,uBAAuB/E,KAAK8D,WAAWkB,QAAShF,KAAK8D,WAAWmB,MAAMC,KAAKC,IACzFnF,KAAK0C,SAASoC,YAAYrE,QAAU0E,EAASC,SAC/CpF,KAAK0C,SAASoC,YAAYO,WAAWF,EAASC,SAEhDpF,MAAK2D,EAAY2B,KAAKH,EAASI,UAAS,EAE5C,CAEAlB,KACErE,KAAK8C,KAAO,IAAI0C,KAAiB,CAC/BC,SAAU,IAAIC,KAAmB1F,MAAK0D,GACtCsB,QAAS,IAAIU,KAAmB,CAAEjF,MAAOT,KAAK8D,WAAWkB,SAAWhF,MAAK0D,EAAMiC,SAAqC,MAA3B3F,KAAK8D,WAAWkB,UACzGF,YAAa,IAAIY,KAAmB,KAAME,KAAWvC,UACrDH,KAAM,IAAIwC,KAAmB1F,KAAK8D,WAAWZ,MAAQ,KAAM0C,KAAWvC,UACtEV,UAAW,IAAI+C,KAAmB,CAAEjF,MAAO,KAAMkF,UAAU,IAC3D/C,OAAQ,IAAI8C,KAAmB,CAAEjF,MAAOT,KAAK8D,WAAWlB,QAAU,GAAI+C,UAAU,MAGlF3F,KAAK0C,SAAW1C,KAAK8C,KAAKJ,SAE1B1C,KAAK6F,cAAcC,OACjBC,KAAc,CACZ/F,MAAK2D,EACL3D,KAAK0C,SAASoC,YAAYkB,aAAaC,QACrCC,KAAkBlG,KAAK0C,SAASoC,YAAYrE,QAAK,EACjD0F,UAEDC,UAAU,EAAEnD,EAAW6B,MACxB,MAAMuB,EAAWpD,EAAUqD,KAAKC,GAAKA,EAAE/E,MAAQsD,GACzC0B,EAAgBxG,KAAK8D,WAAWZ,KAClClD,KAAK0C,SAASQ,KAAKzC,OAAST,KAAK8D,WAAWZ,KAC5CmD,GAAUI,mBAAqB,KAE/BzG,KAAK0C,SAASQ,KAAKzC,QAAU+F,GAC/BxG,KAAK0C,SAASQ,KAAKmC,WAAWmB,EAAa,IAKjDxG,KAAK6F,cAAcC,OACjBC,KAAc,CACZ/F,MAAK2D,EACL3D,KAAK0C,SAASoC,YAAYkB,aAAaC,QACrCC,KAAkBlG,KAAK0C,SAASoC,YAAYrE,QAAK,EACjD0F,QAEFnG,KAAK0C,SAASQ,KAAK8C,aAAaC,QAC9BC,KAAkBlG,KAAK0C,SAASQ,KAAKzC,QAAK,EAC1C0F,QAEFnG,KAAK0C,SAASE,OAAOoD,aAAaC,QAChCC,KAAkBlG,KAAK0C,SAASE,OAAOnC,QAAK,EAC5C0F,UAEDC,UAAU,EAAEnD,EAAW6B,EAAa5B,EAAMN,MAC3C,MAAMyD,EAAWpD,EAAUqD,KAAKC,GAAKA,EAAE/E,MAAQsD,GAE/C,IAAInC,EAAoB,KACpBO,IACFN,EAASA,EAAOC,OAChBK,EAAOwD,KAAeC,aAAazD,EAAKL,QAExCF,EAAY,GAAGC,EAAS,GAAGA,KAAY,KADvCM,EAAO,GAAGmD,GAAUO,QAAU,KAAK1D,IAAOmD,GAAUQ,QAAU,KAAKR,GAAUS,WAAa,OACvCC,QAAQ,UAAW,MAGpE/G,KAAK0C,SAASC,UAAUlC,QAAUkC,GACpC3C,KAAK0C,SAASC,UAAU0C,WAAW1C,EAAS,GAIpD,CAEA4B,KACE,MAAMyC,EAAahH,MAAK2D,EAAYsC,QAClCgB,KAAIhE,IACF,MAAMiE,EAAuC,CAC3C,CAAClH,MAAK0D,GAAO1D,MAAK0D,GAEpBT,SAAUkE,QAAQd,IAChBA,EAASe,WAAWD,QAAQ1B,IAC1ByB,EAAazB,GAAYA,GAC1B,GAEI4B,OAAOC,KAAKJ,EAAY,IAG7BK,EAAYvH,MAAK2D,EAAYsC,QACjCgB,KAAIhE,IACF,MAAMuE,EAAsC,CAC1C,CAACxH,MAAK0D,GAAO1D,MAAK0D,GAEpBT,SAAUkE,QAAQd,IAChBmB,EAAYnB,EAASoB,SAAWpB,EAASoB,UAEpCJ,OAAOC,KAAKE,EAAW,IAG5BE,KAAa3B,KAAc,CAC/B/F,MAAK2D,EACL3D,KAAK0C,SAAS+C,SAASO,aAAaC,QAClCC,KAAkBlG,KAAK0C,SAAS+C,SAAShF,QAAK,EAC9C0F,QAEFnG,KAAK0C,SAASsC,QAAQgB,aAAaC,QACjCC,KAAkBlG,KAAK0C,SAASsC,QAAQvE,QAAK,EAC7C0F,UAEDF,QACDgB,KAAI,EAAEhE,EAAWwC,EAAUT,KACR/B,EAAU0E,OAAOtB,IAChC,MAAMuB,EAAgBnC,IAAazF,MAAK0D,IAAS2C,EAASe,WAAWS,SAASpC,KAAa,GACrFqC,EAAe9C,IAAYhF,MAAK0D,GAAQ2C,EAASoB,UAAYzC,EACnE,OAAO4C,GAAiBE,MAG3B,EACDC,KAAI9E,IACF,IAAKA,EAAU+E,KAAKzB,GAAKA,EAAE/E,MAAQxB,KAAK0C,SAASoC,YAAYrE,OAAQ,CACnE,MAAMwH,EAAiBhF,EAAU,IAAIzB,KAAO,KACxCxB,KAAK0C,SAASoC,YAAYrE,QAAUwH,GACtCjI,KAAK0C,SAASoC,YAAYO,WAAW4C,EAEzC,KAGEC,KAAWnC,KAAc,CAC7B/F,KAAK0C,SAASC,UAAUqD,aAAaC,QACnCC,KAAkBlG,KAAK0C,SAASC,UAAUlC,QAAK,EAC/C0F,QAEFnG,KAAK0C,SAASoC,YAAYkB,aAAaC,QACrCC,KAAkBlG,KAAK0C,SAASoC,YAAYrE,QAAK,EACjD0F,UAEDF,KC7NA,SAASkC,EAAaC,EAAUC,EAAYC,IAAgBC,GAC/D,MAAMC,KAAYC,KAAML,EAAUC,GAClC,OCFG,SAASK,EAASC,EAAkBJ,GACvC,SAAOK,KAAQ,CAACC,EAAQC,KACpB,MAAQC,WAAU,EAAMC,YAAW,GAAUT,GAAgD,CAAC,EAC9F,IAAIU,GAAW,EACXC,EAAY,KACZC,EAAY,KACZC,GAAa,EACjB,MAAMC,EAAgBA,KACoCF,GAAUG,cAChEH,EAAY,KACRH,IACAO,IACAH,GAAcN,EAAWrE,WAAS,EAGpC+E,EAAoBA,KACtBL,EAAY,KACZC,GAAcN,EAAWrE,UAAS,EAEhCgF,EAAiBhJ,GAAW0I,KAAYO,MAAUf,EAAiBlI,IAAQ2F,aAAUuD,KAAyBb,EAAYO,EAAeG,IACzID,EAAOA,KACT,GAAIN,EAAU,CACVA,GAAW,EACX,MAAMxI,EAAQyI,EACdA,EAAY,KACZJ,EAAWxD,KAAK7E,IACf2I,GAAcK,EAAchJ,EACjC,GAEJoI,EAAOzC,aAAUuD,KAAyBb,EAAarI,IACnDwI,GAAW,EACXC,EAAYzI,IACV0I,GAAcA,EAAUS,UAAYb,EAAUQ,IAASE,EAAchJ,GAAK,EAC7E,KACC2I,GAAa,KACXJ,GAAYC,GAAYE,IAAcA,EAAUS,SAAWd,EAAWrE,UAAS,GACnF,EAEV,CDpCWiE,CAAS,IAAMF,EAAWD,EACrC,CD2NMJ,CAAa,IAAKG,IAAgB,CAAES,SAAS,EAAMC,UAAU,KAAM,EACnEjB,KAAI,KACF/H,MAAK4D,EAAiB0B,MAAK,EAAI,IAChC,EACDuE,KAAU,EAAElH,EAAWmC,KACbnC,GAAcmC,GACe,EACjCgF,KAAS,CACT9J,MAAK6D,EAAekG,WAAWpH,EAAW3C,KAAK8D,WAAWkG,OAAQlF,IAAW,EAC7E2D,KAAM,OACLxC,QAAKgB,KAAI,EAAEpF,KAAaA,KALPiD,EAClBmF,WAAwBC,KAK7B,EACDnC,KAAI,KACF/H,MAAK4D,EAAiB0B,MAAK,EAAK,IAGpCtF,KAAKmK,cAAapE,KAAc,CAACiB,EAAYO,EAAWG,EAAYQ,EAAUlI,MAAK4D,IAAmBqC,QACpGgB,KAAI,EAAElE,EAAWC,EAAUC,EAAWpB,EAASD,MAAc,CAEzDmB,YACAC,WACAC,YACArB,iBACAC,QAASA,GAASuI,QAClB7G,aAAc1B,GAASwI,UAAW,EAClCvI,aAAcD,GAASyI,SAK/B,CAACzJ,SAAAb,KAAA,mBAAAc,iBAtNU0C,GAAyBzC,MAa1BwJ,KAAexJ,MAAAC,KAAA,EAAAH,SAAAb,KAAA,UAAAiB,EAAAuJ,IAAA,MAbdhH,EAAyBrC,UAAA,6BAAAsJ,SAAA,EAAAC,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GAAzB5J,MAAA,YAAA6J,EAAA3G,qhCDzCblD,MAAA,EAAA8J,GAAA,2CAAA9J,OAAA+J,EAAA/J,MAAA,IAAA6J,EAAAT,aAAA,KAAAW,mBC2BIC,KAAWC,yBACXC,KAAmBD,UACnBE,IAAkBC,QAClBC,IAAeC,SACfC,IACAC,KAAcC,KACdC,KAAwBC,KACxBC,KAAeC,KACfC,KACAC,KACAC,IACAnM,GAA0BoM,OAAA,+8CAGjBxI,CAA0B,6GG9BvC,MACMyI,EAAgB,uBAGhBC,EAAyB,gCAKxB,IAAM/H,EAAc,MAArB,MAAOA,UAAsBgI,IAIjCC,IAAIC,EAAiBrC,EAAiBsC,GACpC,OAAOtM,KAAKuM,cAA0BN,EAAe,CACnDO,OAAQ,CACNC,MAAOzM,KAAKyM,MACZzC,YACGhK,KAAK0M,iBAAiBL,EAASrC,EAAQsC,MAE3CrG,QACDgB,KAAI0F,IACF,GAAsC,SAAlCA,EAAKC,KAAKhM,oBACZ,OAAQ+L,EAAK7F,UAAUlG,qBACrB,IAAK,MACL,IAAK,UACH+L,EAAKC,KAAO,QACZ,MACF,IAAK,QACL,IAAK,OACL,IAAK,MACHD,EAAKC,KAAO,QAIlB,OAAOD,IAGb,CAmCAE,KAAKR,EAAiBrC,EAAiB2C,EAAkBL,GACvD,OAAOtM,KAAK8M,KAAKC,KAAc/M,KAAKgN,OAAOf,GAAgBU,EAAM,CAC/DH,OAAQ,CACNC,MAAOzM,KAAKyM,MACZzC,YACGhK,KAAK0M,iBAAiBL,EAASrC,EAAQsC,KAGhD,CAEAW,cAAcC,GACZ,OAAOlN,KAAKmN,aApFI,0BAoF8C,CAC5DX,OAAQ,CACNC,MAAOzM,KAAKyM,SACRS,GAAQ,CAAEA,WAEfhI,KAAK,EAAGkI,YACTA,EAAMjG,QAAQkG,IACZA,EAAKC,UAAW,IAEXF,GAEX,CAGAG,aACE,OAAOvN,KAAKuM,cAAmCL,EAAwB,CACrEM,OAAQ,CACNC,MAAOzM,KAAKyM,SAEbxG,QACDgB,KAAI,EAAGuG,YACLA,EAAMrG,QAAQkG,IACZA,EAAKI,YAAa,EAClBJ,EAAKK,cAAe,IAEfF,KAETvH,QACAgB,KAAIuG,GACwBA,EAAMvG,IAAIoG,IAClC,MAAMM,EAAaN,EAAKO,KAAKC,YAAY,KACnCC,EAAeT,EAAKO,KAAKC,YAAY,KACrCjL,EAASyK,EAAKO,KAAKG,UAAU,EAAGJ,GAChCzK,EAAOmK,EAAKO,KAAKG,UAAUJ,EAAa,EAAGG,GAEjD,MADuB,CAAEF,KAAMP,EAAKO,KAAMhL,SAAQM,OAAMuK,SAAUJ,EAAKI,SAAUO,aAAcX,EAAKW,aAAcN,WAAYL,EAAKK,WAAYO,QAASZ,EAAKY,QAAO,IAM5K,CAGAC,eAAeC,GACb,MAAMC,KAAcC,MAAkC,KACpDF,IACO,CACLG,IAAKtO,KAAKgN,OAAOd,GACjBM,OAAQ,CAAEC,MAAOzM,KAAKyM,UAK1B,SAAO8B,MAAS,KAEd,MAAMf,EADWY,EAAY3N,SACL+M,MAExB,OAAKA,GAGLA,EAAMrG,QAAQkG,IACZA,EAAKI,YAAa,EAClBJ,EAAKK,cAAe,IAIfF,EAAMvG,IAAIoG,IACf,MAAMM,EAAaN,EAAKO,KAAKC,YAAY,KACnCC,EAAeT,EAAKO,KAAKC,YAAY,KACrCjL,EAASyK,EAAKO,KAAKG,UAAU,EAAGJ,GAChCzK,EAAOmK,EAAKO,KAAKG,UAAUJ,EAAa,EAAGG,GAEjD,MAAO,CACLF,KAAMP,EAAKO,KACXhL,SACAM,OACAuK,SAAUJ,EAAKI,SACfO,aAAcX,EAAKW,aACnBN,WAAYL,EAAKK,WACjBO,QAASZ,EAAKY,YAtBC,IA0BvB,CAIAO,iBAAiBC,GACf,OAAOzO,KAAKuM,cAzKW,4BAyKsC,CAC3DC,OAAQ,CAAEC,MAAOzM,KAAKyM,MAAOiC,OAAQ1O,KAAK0O,OAAQd,KAAMa,IAE5D,CAEA1J,uBAAuBC,EAAyCC,GAC9D,OAAOjF,KAAKmN,aA7KoB,8BA6KmD,CACjFX,OAAQ,IACFxH,GAAW,CAAEA,cACbC,GAAQ,CAAEA,UAGpB,CAGA8E,WAAW6D,EAAc5D,EAAiBlF,GACxC,OAAO9E,KAAKuM,cAtLQ,yBAsLgC,CAClDC,OAAQ,CACNC,MAAOzM,KAAKyM,MACZmB,OACA9I,cACAkF,WAGN,CAEA2E,OAAOf,EAAc5D,EAAiBlF,GACpC,OAAO9E,KAAK8M,KAAKC,KAAc/M,KAAKgN,OArMjB,yBAqMyC,GAAI,CAC9DR,OAAQ,CACNC,MAAOzM,KAAKyM,MACZzC,SACAhF,QAAS,OACT4I,OACA9I,gBAGN,CAEQ4H,iBAAiBL,EAAiBrC,EAAiBsC,GACzD,GAAI,YAAYsC,KAAKvC,GAAU,CAC7B,MAAMuB,EAAOtB,EAAShG,KAAKuI,GAAKA,EAAEC,UAAUC,aAAe1C,GAAWwC,EAAEG,WAAahF,IAASiF,KAC9F,MAAO,CACLC,WAAY7C,KACA,MAARuB,GAAgB,CAAEA,QAE1B,CACE,MAAO,CAAEA,KAAMvB,EAEnB,CAACxL,SAAAb,KAAA,4DAnNUmE,KAAarD,GAAbqD,EAAa,GAmNvB,GAnNuBtD,SAAAb,KAAA,WAAAmP,EAAAC,IAAA,OAAbjL,EAAakL,QAAblL,EAAamL,mBAAbnL,CAAc","names":["MatInputAutofocusDirective","constructor","matInput","elementRef","this","autofocusSelectValue","input","ngOnInit","setTimeout","focus","toBoolean","nativeElement","setSelectionRange","value","length","valueLowerCase","toLocaleLowerCase","static","__ngFactoryType__","i0","i1","debug_node_JnOYh9kg","FsC","selectors","inputs","platform_r2","purpose_r3","template_r4","Key","Name","_c0","vm_r6","loadingPreview","preview","previewError","CreateFileDialogComponent_Conditional_0_For_17_Template","CreateFileDialogComponent_Conditional_0_For_24_Template","CreateFileDialogComponent_Conditional_0_For_31_Template","CreateFileDialogComponent_Conditional_0_Conditional_37_Template","CreateFileDialogComponent_Conditional_0_Conditional_39_Template","_r1","ctx_r4","closeDialog","confirm","CreateFileDialogComponent_Conditional_0_Conditional_44_Template","CreateFileDialogComponent_Conditional_0_Conditional_45_Template","controls","finalName","folder","trim","form","platforms","purposes","templates","name","touched","errors","required","valid","previewValid","CreateFileDialogComponent","BaseComponent","#all","#templates$","#loadingPreview$","#sourceService","dialogData","dialog","super","hostClass","transient","SourceService","BehaviorSubject","#buildForm","#fetchTemplates","#buildViewModel","ngOnDestroy","complete","result","close","formValues","getRawValue","templateKey","getPredefinedTemplates","purpose","type","then","response","Default","patchValue","next","Templates","UntypedFormGroup","platform","UntypedFormControl","disabled","Validators","subscriptions","add","combineLatest","valueChanges","pipe","startWith","distinctUntilChanged","subscribe","template","find","t","suggestedName","SuggestedFileName","SanitizeHelper","sanitizePath","Prefix","Suffix","Extension","replace","platforms$","map","platformsMap","forEach","Platforms","Object","keys","purposes$","purposesMap","Purpose","templates$","filter","platformMatch","includes","purposeMatch","tap","some","newTemplateKey","preview$","throttleTime","duration","scheduler","asyncScheduler","config","duration$","timer","throttle","durationSelector","operate","source","subscriber","leading","trailing","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","cleanupThrottling","startThrottle","innerFrom","createOperatorSubscriber","closed","switchMap","forkJoin","getPreview","global","of","undefined","viewModel$","Preview","IsValid","Error","MAT_DIALOG_DATA","VBU","hostVars","hostBindings","rf","ctx","CreateFileDialogComponent_Conditional_0_Template","tmp_0_0","FormsModule","i2","ReactiveFormsModule","MatFormFieldModule","i3","MatSelectModule","i4","MatOptionModule","MatInputModule","i5","MatProgressSpinnerModule","i6","MatButtonModule","i7","NgClass","AsyncPipe","FieldHintComponent","styles","appFilesAsset","apiExplorerAppApiFiles","HttpServiceBase","get","viewKey","urlItems","getHttpApiUrl","params","appId","templateIdOrPath","view","Type","save","http","post","apiUrl","getAllPromise","mask","fetchPromise","Files","file","Shared","getWebApis","files","isShared","isCompiled","splitIndex","path","lastIndexOf","fileExtIndex","substring","endpointPath","edition","getWebApisLive","refresh","apiResource","httpResource","url","computed","getWebApiDetails","apiPath","zoneId","create","test","i","EntityId","toString","IsShared","Path","templateId","_angular_core__WEBPACK_IMPORTED_MODULE_5__","jDH","factory","ɵfac"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.html","./projects/eav-ui/src/app/create-file-dialog/create-file-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttleTime.js","./node_modules/rxjs/dist/esm/internal/operators/throttle.js","./projects/eav-ui/src/app/code-editor/services/source.service.ts"],"sourcesContent":["import { Directive, ElementRef, input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({\r\n  selector: '[appMatInputAutofocus]',\r\n})\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  autofocusSelectValue = input<string | boolean | null | undefined>(false);\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue())) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title eav-dialog-title-box\">\r\n      <span>Create</span>\r\n      <span class=\"eav-file-name\">{{\r\n        controls.finalName.value\r\n        || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n        }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\" class=\"dialog-form\">\r\n      <div class=\"dialog-form-content\">\r\n        <div class=\"eav-field-container eav-multiple\">\r\n          <!-- Platform -->\r\n          <div class=\"eav-multiple-field\">\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Platform</mat-label>\r\n              <mat-select formControlName=\"platform\">\r\n                @for (platform of vm.platforms; track platform) {\r\n                <mat-option [value]=\"platform\">\r\n                  {{ platform }}\r\n                </mat-option>\r\n                }\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <!-- Purpose -->\r\n          <div class=\"eav-multiple-field\">\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Purpose</mat-label>\r\n              <mat-select formControlName=\"purpose\">\r\n                @for (purpose of vm.purposes; track purpose) {\r\n                <mat-option [value]=\"purpose\">\r\n                  {{ purpose }}\r\n                </mat-option>\r\n                }\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <!-- Template -->\r\n        <div class=\"eav-field-container\">\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Template</mat-label>\r\n            <mat-select formControlName=\"templateKey\">\r\n              @for (template of vm.templates; track template) {\r\n              <mat-option [value]=\"template.Key\">\r\n                {{ template.Name }}\r\n              </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- Name -->\r\n        <div class=\"eav-field-container\">\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus\r\n              autofocusSelectValue=\"true\">\r\n          </mat-form-field>\r\n          @if (controls.name.touched && controls.name.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div class=\"dialog-form-actions\">\r\n        @if (vm.loadingPreview) {\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n        <div class=\"spacer\"></div>\r\n        }\r\n        <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button type=\"button\" color=\"accent\"\r\n          [disabled]=\"!form.valid || vm.loadingPreview || !vm.previewValid\" (click)=\"confirm()\">\r\n          Create\r\n        </button>\r\n      </div>\r\n      @if (vm.preview) {\r\n      <div class=\"eav-preview-label-box\">\r\n        <label class=\"eav-preview-label\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">Preview</label>\r\n      </div>\r\n      <pre class=\"fancy-scrollbar-light max-h\" [ngClass]=\"{ 'disabled': vm.loadingPreview }\">{{ vm.preview }}</pre>\r\n      }\r\n      @if (!vm.loadingPreview && vm.previewError) {\r\n      <div class=\"eav-preview-error\">\r\n        {{ vm.previewError }}\r\n      </div>\r\n      }\r\n    </form>\r\n  </div>\r\n</div>\r\n}\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n// tslint:disable-next-line:max-line-length\r\nimport { AsyncPipe, NgClass } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, distinctUntilChanged, forkJoin, map, Observable, of, startWith, switchMap, tap, throttleTime, timer } from 'rxjs';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileViewModel } from '.';\r\nimport { transient } from '../../../../core';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { Preview } from '../code-editor/models/preview.models';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { SanitizeHelper } from '../edit/shared/helpers';\r\nimport { BaseComponent } from '../shared/components/base.component';\r\nimport { FieldHintComponent } from '../shared/components/field-hint/field-hint.component';\r\nimport { MatInputAutofocusDirective } from '../shared/directives/mat-input-autofocus.directive';\r\n\r\n@Component({\r\n  selector: 'app-create-file-dialog',\r\n  templateUrl: './create-file-dialog.component.html',\r\n  styleUrls: ['./create-file-dialog.component.scss'],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatButtonModule,\r\n    NgClass,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n    MatInputAutofocusDirective,\r\n  ]\r\n})\r\nexport class CreateFileDialogComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: CreateFileFormControls;\r\n  viewModel$: Observable<CreateFileViewModel>;\r\n\r\n  #all = 'All' as const;\r\n  #templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  #loadingPreview$: BehaviorSubject<boolean>;\r\n  #sourceService = transient(SourceService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialog: MatDialogRef<CreateFileDialogComponent>,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.#loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.#buildForm();\r\n    this.#fetchTemplates();\r\n    this.#buildViewModel();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.#templates$.complete();\r\n    this.#loadingPreview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialog.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  #fetchTemplates(): void {\r\n    this.#sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).then(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.#templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  #buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      platform: new UntypedFormControl(this.#all),\r\n      purpose: new UntypedFormControl({ value: this.dialogData.purpose ?? this.#all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new UntypedFormControl(null, Validators.required),\r\n      name: new UntypedFormControl(this.dialogData.name ?? null, Validators.required),\r\n      finalName: new UntypedFormControl({ value: null, disabled: true }),\r\n      folder: new UntypedFormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.#templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = this.dialogData.name\r\n          ? this.controls.name.value || this.dialogData.name\r\n          : template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.#templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  #buildViewModel(): void {\r\n    const platforms$ = this.#templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.#all]: this.#all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.#templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.#all]: this.#all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.#templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.#all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.#all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.#loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<Preview | undefined>(undefined)\r\n          : forkJoin([\r\n            this.#sourceService.getPreview(finalName, this.dialogData.global, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.#loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.viewModel$ = combineLatest([platforms$, purposes$, templates$, preview$, this.#loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const viewModel: CreateFileViewModel = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler = asyncScheduler, config) {\n    const duration$ = timer(duration, scheduler);\n    return throttle(() => duration$, config);\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function throttle(durationSelector, config) {\n    return operate((source, subscriber) => {\n        const { leading = true, trailing = false } = config !== null && config !== void 0 ? config : {};\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { httpResource } from '@angular/common/http';\r\nimport { computed, Injectable, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { ViewOrFileIdentifier } from '../../shared/models/edit-form.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst apiExplorerAppApiFiles = 'admin/ApiExplorer/AppApiFiles';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService extends HttpServiceBase {\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]): Observable<SourceView> {\r\n    return this.getHttpApiUrl<SourceView>(appFilesAsset, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  // getSig(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[], initial: undefined): Signal<SourceView> {\r\n  //   // Signal für die SourceView erstellen\r\n  //   const temp = this.getSignal<SourceView>(appFilesAsset, {\r\n  //     params: {\r\n  //       appId: this.appId,\r\n  //       global,\r\n  //       ...this.templateIdOrPath(viewKey, global, urlItems),\r\n  //     },\r\n  //   }, initial);\r\n  //   return computed(() => {\r\n  //     const result = temp();\r\n\r\n  //     if (result && result.Type.toLocaleLowerCase() === 'auto') {\r\n  //       switch (result.Extension.toLocaleLowerCase()) {\r\n  //         case '.cs':\r\n  //         case '.cshtml':\r\n  //           result.Type = 'Razor';\r\n  //           break;\r\n  //         case '.html':\r\n  //         case '.css':\r\n  //         case '.js':\r\n  //           result.Type = 'Token';\r\n  //           break;\r\n  //       }\r\n  //     }\r\n\r\n  //     return result;\r\n  //   });\r\n  // }\r\n\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: ViewOrFileIdentifier[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAllPromise(mask?: string): Promise<FileAsset[]> {\r\n    return this.fetchPromise<{ Files: FileAsset[] }>(appFilesAll, {\r\n      params: {\r\n        appId: this.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).then(({ Files }) => {\r\n      Files.forEach(file => {\r\n        file.Shared ??= false;\r\n      });\r\n      return Files;\r\n    });\r\n  }\r\n\r\n  // TODO: @2dg, ask 2dm\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.getHttpApiUrl<{ files: WebApi[] }>(apiExplorerAppApiFiles, {\r\n      params: {\r\n        appId: this.appId,\r\n      },\r\n    }).pipe(\r\n      map(({ files }) => {\r\n        files.forEach(file => {\r\n          file.isShared ??= false;\r\n          file.isCompiled ??= false;\r\n        });\r\n        return files;\r\n      }),\r\n    ).pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.path.lastIndexOf('/');\r\n          const fileExtIndex = file.path.lastIndexOf('.');\r\n          const folder = file.path.substring(0, splitIndex);\r\n          const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.path, folder, name, isShared: file.isShared, endpointPath: file.endpointPath, isCompiled: file.isCompiled, edition: file.edition };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n\r\n  getWebApisLive(refresh: Signal<unknown>) {\r\n    const apiResource = httpResource<{ files: WebApi[] }>(() => {\r\n      refresh();\r\n      return {\r\n        url: this.apiUrl(apiExplorerAppApiFiles),\r\n        params: { appId: this.appId },\r\n      };\r\n    });\r\n\r\n    // Return a computed signal that transforms the data\r\n    return computed(() => {\r\n      const response = apiResource.value();\r\n      const files = response?.files;\r\n\r\n      if (!files) return [];\r\n\r\n      // Set default values for isShared and isCompiled if they are undefined\r\n      files.forEach(file => {\r\n        file.isShared ??= false;\r\n        file.isCompiled ??= false;\r\n      });\r\n\r\n      // Transform the raw files into the desired WebApi format\r\n      return files.map(file => {\r\n        const splitIndex = file.path.lastIndexOf('/');\r\n        const fileExtIndex = file.path.lastIndexOf('.');\r\n        const folder = file.path.substring(0, splitIndex);\r\n        const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n\r\n        return {\r\n          path: file.path,\r\n          folder,\r\n          name,\r\n          isShared: file.isShared,\r\n          endpointPath: file.endpointPath,\r\n          isCompiled: file.isCompiled,\r\n          edition: file.edition,\r\n        } as WebApi;\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.getHttpApiUrl<WebApiDetails>(apiExplorerInspect, {\r\n      params: { appId: this.appId, zoneId: this.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Promise<PredefinedTemplatesResponse> {\r\n    return this.fetchPromise<PredefinedTemplatesResponse>(appFilesPredefinedTemplates, {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  // TODO: @2dg, ask 2dm \r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.getHttpApiUrl<Preview>(appFilesPreview, {\r\n      params: {\r\n        appId: this.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n"],"x_google_ignoreList":[3,4]}