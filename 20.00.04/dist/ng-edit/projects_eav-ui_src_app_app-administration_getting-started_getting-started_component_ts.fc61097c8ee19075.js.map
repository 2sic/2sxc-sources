{"version":3,"file":"projects_eav-ui_src_app_app-administration_getting-started_getting-started_component_ts.fc61097c8ee19075.js","mappings":"+RAMO,IAAMA,EAAmB,MAA1B,MAAOA,EAEXC,YAAoBC,GAAAC,KAAAD,WAA2B,CAE/CE,UAAUC,GACR,OAAOF,KAAKD,UAAUI,+BAA+BD,EACvD,CAACE,SAAAJ,KAAA,mBAAAK,iBANUR,GAAmBS,MAAAC,KAAA,MAAAH,SAAAJ,KAAA,WAAAQ,EAAAC,IAAA,6BAAnBZ,EAAmBa,MAAA,WAAnBb,CAAmB,0CCL9BS,MAAA,+CAAuBA,MAAA,MAAAA,MAAA,IAAAK,GAAAL,OCelB,IAAMM,EAAuB,MAA9B,MAAOA,EATbd,cAWUE,KAAAa,mBAAkBC,KAAUC,KAEpCf,KAAAgB,mBAAqBhB,KAAKa,gBAAgBI,cAAcC,QAAKC,KAC3DC,GAAkBA,EAAeC,QAAQC,IAAIC,oBAIhDnB,SAAAJ,KAAA,mBAAAK,iBATYO,EAAuB,EAAAR,SAAAJ,KAAA,UAAAQ,EAAAgB,IAAA,MAAvBZ,EAAuBa,UAAA,0BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,uBAAAC,SAAA,SAAAC,EAAAnB,MAAA,EAAAmB,IDhBpCxB,MAAA,EAAAyB,EAAA,6CAAAzB,OAAA0B,EAAA1B,MAAA,IAAAK,EAAAK,qBAAA,KAAAgB,mBCYQC,KACApC,GAAmBqC,OAAA,4KAGdtB,CAAuB","names":["SafeResourceUrlPipe","constructor","sanitizer","this","transform","resourceUrl","bypassSecurityTrustResourceUrl","static","__ngFactoryType__","i0","i1","debug_node_JnOYh9kg","EJ8","pure","ctx","GettingStartedComponent","dialogConfigSvc","transient","DialogConfigAppService","gettingStartedUrl$","getCurrent$","pipe","map","dialogSettings","Context","App","GettingStartedUrl","VBU","selectors","decls","vars","consts","template","rf","GettingStartedComponent_Conditional_0_Template","tmp_0_0","AsyncPipe","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/pipes/safe-resource-url.ts","./projects/eav-ui/src/app/app-administration/getting-started/getting-started.component.html","./projects/eav-ui/src/app/app-administration/getting-started/getting-started.component.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeResourceUrl',\r\n})\r\nexport class SafeResourceUrlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(resourceUrl: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\r\n  }\r\n}\r\n","@if (gettingStartedUrl$ | async; as gettingStartedUrl) {\r\n  <iframe class=\"iframe\" [src]=\"gettingStartedUrl | safeResourceUrl\"></iframe>\r\n}\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { SafeResourceUrlPipe } from '../../shared/pipes/safe-resource-url';\r\nimport { DialogConfigAppService } from '../services/dialog-config-app.service';\r\n\r\n@Component({\r\n    selector: 'app-getting-started',\r\n    templateUrl: './getting-started.component.html',\r\n    styleUrls: ['./getting-started.component.scss'],\r\n    imports: [\r\n        AsyncPipe,\r\n        SafeResourceUrlPipe,\r\n    ]\r\n})\r\nexport class GettingStartedComponent {\r\n\r\n  private dialogConfigSvc = transient(DialogConfigAppService);\r\n\r\n  gettingStartedUrl$ = this.dialogConfigSvc.getCurrent$().pipe(map(\r\n    dialogSettings => dialogSettings.Context.App.GettingStartedUrl\r\n  ));\r\n\r\n\r\n}\r\n"],"x_google_ignoreList":[]}