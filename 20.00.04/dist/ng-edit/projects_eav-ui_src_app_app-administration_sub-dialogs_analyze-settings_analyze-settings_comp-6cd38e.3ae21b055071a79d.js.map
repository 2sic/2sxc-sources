{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_analyze-settings_analyze-settings_comp-6cd38e.3ae21b055071a79d.js","mappings":"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","names":["AnalyzeSettingsKeyComponent","constructor","this","clipboard","transient","ClipboardService","agInit","params","key","value","refresh","static","__ngFactoryType__","debug_node_JnOYh9kg","VBU","selectors","decls","vars","consts","template","rf","ctx","i0","copyToClipboard","MatRippleModule","i1","TippyDirective","styles","ctx_r0","totalResults","_r2","openDetails","AnalyzeSettingsTotalResultsComponent","stackItem","data","AnalyzeSettingsTotalResultsComponent_Conditional_0_Template","AnalyzeSettingsTotalResultsComponent_Conditional_1_Template","MatIconModule","i2","view_r1","Guid","Name","AnalyzeSettingsComponent","#viewsSvc","#analyzeSettingsSvc","#dialogRouter","dialog","gridOptions","buildGridOptions","ViewsService","AnalyzeSettingsService","DialogRoutingService","part","getParam","selectedView","signal","undefined","views","getAllOnce","#stackSignal","getStack","stack","computed","map","item","_value","JSON","stringify","Value","ngOnInit","#getStack","closeDialog","close","changeView","viewGuid","set","defaultGridOptions","columnDefs","ColumnDefinitions","TextWideActionClass","headerName","field","cellRenderer","AnalyzeSettingsValueComponent","TextNarrow","Items","width","cellClass","cellRendererParams","navRelative","Path","$event","AnalyzeSettingsComponent_For_19_Template","MatButtonModule","i3","RouterOutlet","MatFormFieldModule","i4","MatSelectModule","i5","FormsModule","i6","MatOptionModule","SxcGridModule","i7"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\n\r\n@Component({\r\n    selector: 'app-analyze-settings-key',\r\n    templateUrl: './analyze-settings-key.component.html',\r\n    styleUrls: ['./analyze-settings-key.component.scss'],\r\n    imports: [\r\n        MatRippleModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AnalyzeSettingsKeyComponent implements ICellRendererAngularComp {\r\n  key: string;\r\n\r\n  constructor() { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.key = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div matRipple class=\"key-box highlight\" [tippy]=\"key\" (click)=\"clipboard.copyToClipboard(key)\">\r\n  <span class=\"key\">{{ key }}</span>\r\n</div>\r\n","@if (totalResults <= 1) {\r\n  <div class=\"input-component no-click\">\r\n    <div>{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n@if (totalResults > 1) {\r\n  <div matRipple class=\"input-component highlight\" tippy=\"Open details\" (click)=\"openDetails()\">\r\n    <div class=\"text\">{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SettingsStackItem } from '../analyze-settings.models';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results.models';\r\n\r\n@Component({\r\n    selector: 'app-analyze-settings-total-results',\r\n    templateUrl: './analyze-settings-total-results.component.html',\r\n    styleUrls: ['./analyze-settings-total-results.component.scss'],\r\n    imports: [\r\n        MatIconModule,\r\n        MatRippleModule,\r\n    ]\r\n})\r\nexport class AnalyzeSettingsTotalResultsComponent implements ICellRendererAngularComp {\r\n  totalResults: number;\r\n\r\n  private stackItem: SettingsStackItem;\r\n  private params: ICellRendererParams & AnalyzeSettingsTotalResultsParams;\r\n\r\n  agInit(params: ICellRendererParams & AnalyzeSettingsTotalResultsParams): void {\r\n    this.totalResults = params.value;\r\n    this.params = params;\r\n    this.stackItem = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openDetails(): void {\r\n    this.params.openDetails(this.stackItem);\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Analyze {{ part }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"padding-class\">\r\n    <p class=\"dialog-description\">\r\n      Settings and Resources are consolidated from many sources. Here you see what the resulting values would be.\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <mat-form-field color=\"accent\" class=\"view-select-box\">\r\n      <mat-label>Merge settings / resources of a View</mat-label>\r\n      <mat-select [ngModel]=\"selectedView()\" (ngModelChange)=\"changeView($event)\">\r\n        <mat-option [value]=\"undefined\">No view selected - this is how APIs see the data</mat-option>\r\n        @for (view of views(); track view) {\r\n        <mat-option [value]=\"view.Guid\">{{ view.Name }}</mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"grid-wrapper padding-class\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"stack()\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, computed, OnInit, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { Of, transient } from '../../../../../../core';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../../shared/routing/dialog-routing.service';\r\nimport { ViewsService } from '../../services';\r\nimport { AnalyzeSettingsService } from '../../services/analyze-settings.service';\r\nimport { AnalyzeSettingsKeyComponent } from './analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from './analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results/analyze-settings-total-results.models';\r\nimport { AnalyzeSettingsValueComponent } from './analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzeParts } from './analyze-settings.models';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings',\r\n  templateUrl: './analyze-settings.component.html',\r\n  styleUrls: ['./analyze-settings.component.scss'],\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    SxcGridModule,\r\n  ]\r\n})\r\nexport class AnalyzeSettingsComponent implements OnInit {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  #viewsSvc = transient(ViewsService);\r\n  #analyzeSettingsSvc = transient(AnalyzeSettingsService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  part: Of<typeof AnalyzeParts> = this.#dialogRouter.getParam('part') as Of<typeof AnalyzeParts>;\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<AnalyzeSettingsComponent>,\r\n  ) {}\r\n\r\n  selectedView = signal<string>(undefined);\r\n  views = this.#viewsSvc.getAllOnce().value;\r\n\r\n  #stackSignal = this.#analyzeSettingsSvc.getStack(this.part, undefined, this.selectedView()).value;\r\n\r\n  stack = computed(() => {\r\n    const stackItems = this.#stackSignal();\r\n    return stackItems?.map(item => ({\r\n      ...item,\r\n      _value: JSON.stringify(item.Value)\r\n    }));\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.#getStack();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  changeView(viewGuid: string): void {\r\n    this.selectedView.set(viewGuid);\r\n    this.#getStack();\r\n  }\r\n\r\n\r\n  #getStack(): void {\r\n    this.stack();\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Key',\r\n          field: 'Path',\r\n          cellRenderer: AnalyzeSettingsKeyComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Value',\r\n          field: '_value',\r\n          cellRenderer: AnalyzeSettingsValueComponent,\r\n        },\r\n        {\r\n          field: 'Source',\r\n          ...ColumnDefinitions.TextNarrow,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Items,\r\n          headerName: 'Total',\r\n          field: 'TotalResults',\r\n          width: 72,\r\n          cellClass: 'no-outline',\r\n\r\n          cellRenderer: AnalyzeSettingsTotalResultsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AnalyzeSettingsTotalResultsParams = {\r\n              openDetails: (stackItem) => {\r\n                this.#dialogRouter.navRelative([`details/${this.selectedView()}/${stackItem.Path}`]);\r\n              },\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}