{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./projects/field-custom-gps/src/shared/console-log-webpack.helper.ts","webpack:///./projects/field-custom-gps/src/shared/constants.ts","webpack:///./projects/field-custom-gps/src/shared/helpers.ts","webpack:///./projects/field-custom-gps/src/main/main.ts","webpack:///./projects/edit/shared/helpers/field-mask.helper.ts","webpack:///./projects/field-custom-gps/src/assets/icons/font-awesome/map-marker-alt-solid.svg","webpack:///./projects/field-custom-gps/src/main/main.html","webpack:///./projects/field-custom-gps/src/main/main.scss","webpack:///./projects/field-custom-gps/src/preview/preview.ts","webpack:///./projects/field-custom-gps/src/preview/preview.html","webpack:///./projects/field-custom-gps/src/preview/preview.scss"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","message","defaultCoordinates","lat","lng","url","customGpsIcons","mapMarker","default","template","styles","JSON","parse","replace","latLng","stringify","gpsDialogTag","consoleLogWebpack","fieldInitialized","connectedCallback","this","eventListeners","mapApiUrl","mapsApiUrl","innerHTML","buildTemplate","latInput","querySelector","lngInput","addressMaskContainer","iconSearch","formattedAddressContainer","mapContainer","allInputNames","connector","_experimental","allInputTypeNames","map","inputType","includes","field","settings","LatField","latFieldName","LongField","lngFieldName","addressMaskSetting","AddressMask","addressMask","FieldMask","formGroup","controls","classList","remove","innerText","resolve","loadScript","mapScriptLoaded","google","maps","Map","zoom","center","gestureHandling","marker","Marker","position","draggable","geocoder","Geocoder","data","updateHtml","parseLatLng","onLatLngInputChange","addEventListener","autoSelect","push","element","type","listener","addListener","event","onMarkerDragend","toString","setCenter","setPosition","updateForm","update","stringifyLatLng","updateField","length","parseFloat","address","geocode","results","status","GeocoderStatus","OK","result","geometry","location","alert","disconnectedCallback","clearInstanceListeners","forEach","removeEventListener","HTMLElement","customElements","define","FieldCustomGpsDialog","mask","model","changeEvent","overloadPreCleanValues","eavConfig","fields","findFields","unwrapField","subscriptions","fieldList","preClean","watchAllFields","appId","zoneId","e","replaceValue","cleaned","matches","match","staticName","onChange","maybeNew","valueSub","valueChanges","subscribe","destroy","subscription","unsubscribe","gpsTag","latContainer","lngContainer","expand","onValueChange","dialog","open","FieldCustomGps"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","declare const __PRODUCTION__: boolean; // set by the definePlugin with string-replace\r\n\r\n/** Console log that doesn't show in Webpack production mode */\r\nexport function consoleLogWebpack(message?: any, ...optionalParams: any[]) {\r\n  if (__PRODUCTION__) { return; }\r\n\r\n  console.groupCollapsed(message, ...optionalParams);\r\n  // tslint:disable-next-line:no-console\r\n  console.trace();\r\n  console.groupEnd();\r\n}\r\n","export const defaultCoordinates: google.maps.LatLngLiteral = {\r\n  lat: 47.17465989999999,\r\n  lng: 9.469142499999975,\r\n};\r\n\r\nconst mapApiKeyPart1 = 'AIzaSyDPhn';\r\nconst mapApiKeyPart2 = 'NKpEg8FmY8nooE7Zwnue6SusxEnHE';\r\n\r\n/** Special helper to assemble the url for the maps */\r\nexport function mapsApiUrl() {\r\n  let url = 'https://maps.googleapis.com/maps/api/js?key=';\r\n  // note: don't use `${...}` here, because that's probably combined at compile time, and we want to keep\r\n  // the key parts separate so the google console doesn't complain about the key being public\r\n  // add some fake condition, to prevent compiler optimization from pre-connecting the strings\r\n  if (url) { url += mapApiKeyPart1; }\r\n  if (!!url) { url += mapApiKeyPart2; }\r\n  return url;\r\n}\r\n","import * as mapMarker from '../assets/icons/font-awesome/map-marker-alt-solid.svg';\r\n\r\nexport const customGpsIcons = {\r\n  mapMarker: mapMarker.default,\r\n};\r\n\r\nexport function buildTemplate(template: string, styles: string): string {\r\n  return `${template}<style>\\n${styles}\\n</style>`;\r\n}\r\n\r\nexport function parseLatLng(value: string): google.maps.LatLngLiteral {\r\n  const latLng: google.maps.LatLngLiteral = JSON.parse(value.replace('latitude', 'lat').replace('longitude', 'lng'));\r\n  return latLng;\r\n}\r\n\r\nexport function stringifyLatLng(latLng: google.maps.LatLngLiteral): string {\r\n  const value = JSON.stringify(latLng).replace('lat', 'latitude').replace('lng', 'longitude');\r\n  return value;\r\n}\r\n","import { } from 'google-maps';\r\nimport { Connector, EavCustomInputField } from '../../../edit-types';\r\nimport { FieldMask } from '../../../edit/shared/helpers/field-mask.helper';\r\nimport { ElementEventListener } from '../../../edit/shared/models';\r\nimport { consoleLogWebpack } from '../shared/console-log-webpack.helper';\r\nimport { defaultCoordinates, mapsApiUrl } from '../shared/constants';\r\nimport { buildTemplate, parseLatLng, stringifyLatLng } from '../shared/helpers';\r\nimport * as template from './main.html';\r\nimport * as styles from './main.scss';\r\n\r\nconst gpsDialogTag = 'field-custom-gps-dialog';\r\n\r\nclass FieldCustomGpsDialog extends HTMLElement implements EavCustomInputField<string> {\r\n  fieldInitialized: boolean;\r\n  connector: Connector<string>;\r\n\r\n  private addressMask: FieldMask;\r\n  private geocoder: google.maps.Geocoder;\r\n  private iconSearch: HTMLAnchorElement;\r\n  private latFieldName: string;\r\n  private latInput: HTMLInputElement;\r\n  private lngFieldName: string;\r\n  private lngInput: HTMLInputElement;\r\n  private map: google.maps.Map;\r\n  private mapApiUrl: string;\r\n  private mapContainer: HTMLDivElement;\r\n  private marker: google.maps.Marker;\r\n  private eventListeners: ElementEventListener[];\r\n\r\n  constructor() {\r\n    super();\r\n    consoleLogWebpack(`${gpsDialogTag} constructor called`);\r\n    this.fieldInitialized = false;\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    if (this.fieldInitialized) { return; }\r\n    this.fieldInitialized = true;\r\n    consoleLogWebpack(`${gpsDialogTag} connectedCallback called`);\r\n\r\n    this.eventListeners = [];\r\n    this.mapApiUrl = mapsApiUrl();\r\n\r\n    this.innerHTML = buildTemplate(template.default, styles.default);\r\n    this.latInput = this.querySelector<HTMLInputElement>('#lat');\r\n    this.lngInput = this.querySelector<HTMLInputElement>('#lng');\r\n    const addressMaskContainer = this.querySelector<HTMLDivElement>('#address-mask-container');\r\n    this.iconSearch = this.querySelector<HTMLAnchorElement>('#icon-search');\r\n    const formattedAddressContainer = this.querySelector<HTMLSpanElement>('#formatted-address-container');\r\n    this.mapContainer = this.querySelector<HTMLDivElement>('#map');\r\n\r\n    const allInputNames = this.connector._experimental.allInputTypeNames.map(inputType => inputType.name);\r\n    if (allInputNames.includes(this.connector.field.settings.LatField)) {\r\n      this.latFieldName = this.connector.field.settings.LatField;\r\n    }\r\n    if (allInputNames.includes(this.connector.field.settings.LongField)) {\r\n      this.lngFieldName = this.connector.field.settings.LongField;\r\n    }\r\n\r\n    const addressMaskSetting = this.connector.field.settings.AddressMask || this.connector.field.settings['Address Mask'];\r\n    this.addressMask = new FieldMask(addressMaskSetting, this.connector._experimental.formGroup.controls, null, null);\r\n    consoleLogWebpack(`${gpsDialogTag} addressMask:`, addressMaskSetting);\r\n    if (addressMaskSetting) {\r\n      addressMaskContainer.classList.remove('hidden');\r\n      formattedAddressContainer.innerText = this.addressMask.resolve();\r\n    }\r\n\r\n    this.connector.loadScript('google', this.mapApiUrl, () => { this.mapScriptLoaded(); });\r\n  }\r\n\r\n  private mapScriptLoaded(): void {\r\n    consoleLogWebpack(`${gpsDialogTag} mapScriptLoaded called`);\r\n    this.map = new google.maps.Map(this.mapContainer, { zoom: 15, center: defaultCoordinates, gestureHandling: 'greedy' });\r\n    this.marker = new google.maps.Marker({ position: defaultCoordinates, map: this.map, draggable: true });\r\n    this.geocoder = new google.maps.Geocoder();\r\n\r\n    // set initial values\r\n    if (!this.connector.data.value) {\r\n      this.updateHtml(defaultCoordinates);\r\n    } else {\r\n      this.updateHtml(parseLatLng(this.connector.data.value));\r\n    }\r\n\r\n    // listen to inputs, iconSearch and marker. Update inputs, map, marker and form\r\n    const onLatLngInputChange = () => { this.onLatLngInputChange(); };\r\n    this.latInput.addEventListener('change', onLatLngInputChange);\r\n    this.lngInput.addEventListener('change', onLatLngInputChange);\r\n\r\n    const autoSelect = () => { this.autoSelect(); };\r\n    this.iconSearch.addEventListener('click', autoSelect);\r\n\r\n    this.eventListeners.push(\r\n      { element: this.latInput, type: 'change', listener: onLatLngInputChange },\r\n      { element: this.lngInput, type: 'change', listener: onLatLngInputChange },\r\n      { element: this.iconSearch, type: 'click', listener: autoSelect },\r\n    );\r\n\r\n    this.marker.addListener('dragend', (event: google.maps.MouseEvent) => {\r\n      this.onMarkerDragend(event);\r\n    });\r\n  }\r\n\r\n  private updateHtml(latLng: google.maps.LatLngLiteral): void {\r\n    this.latInput.value = latLng.lat?.toString() ?? '';\r\n    this.lngInput.value = latLng.lng?.toString() ?? '';\r\n    this.map.setCenter(latLng);\r\n    this.marker.setPosition(latLng);\r\n  }\r\n\r\n  private updateForm(latLng: google.maps.LatLngLiteral): void {\r\n    this.connector.data.update(stringifyLatLng(latLng));\r\n    if (this.latFieldName) {\r\n      this.connector._experimental.updateField(this.latFieldName, latLng.lat);\r\n    }\r\n    if (this.lngFieldName) {\r\n      this.connector._experimental.updateField(this.lngFieldName, latLng.lng);\r\n    }\r\n  }\r\n\r\n  private onLatLngInputChange(): void {\r\n    consoleLogWebpack(`${gpsDialogTag} input changed`);\r\n    const latLng: google.maps.LatLngLiteral = {\r\n      lat: this.latInput.value.length > 0 ? parseFloat(this.latInput.value) : null,\r\n      lng: this.lngInput.value.length > 0 ? parseFloat(this.lngInput.value) : null,\r\n    };\r\n    this.updateHtml(latLng);\r\n    this.updateForm(latLng);\r\n  }\r\n\r\n  private autoSelect(): void {\r\n    consoleLogWebpack(`${gpsDialogTag} geocoder called`);\r\n    const address = this.addressMask.resolve();\r\n    this.geocoder.geocode({\r\n      address,\r\n    }, (results, status) => {\r\n      if (status === google.maps.GeocoderStatus.OK) {\r\n        const result = results[0].geometry.location;\r\n        const latLng: google.maps.LatLngLiteral = {\r\n          lat: result.lat(),\r\n          lng: result.lng(),\r\n        };\r\n        this.updateHtml(latLng);\r\n        this.updateForm(latLng);\r\n      } else {\r\n        alert(`Could not locate address: ${address}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private onMarkerDragend(event: google.maps.MouseEvent): void {\r\n    consoleLogWebpack(`${gpsDialogTag} marker changed`);\r\n    const latLng: google.maps.LatLngLiteral = {\r\n      lat: event.latLng.lat(),\r\n      lng: event.latLng.lng(),\r\n    };\r\n    this.updateHtml(latLng);\r\n    this.updateForm(latLng);\r\n  }\r\n\r\n  disconnectedCallback(): void {\r\n    consoleLogWebpack(`${gpsDialogTag} disconnectedCallback called`);\r\n    google?.maps.event.clearInstanceListeners(this.marker);\r\n    google?.maps.event.clearInstanceListeners(this.map);\r\n\r\n    this.eventListeners.forEach(({ element, type, listener }) => {\r\n      element.removeEventListener(type, listener);\r\n    });\r\n  }\r\n}\r\n\r\nif (!customElements.get(gpsDialogTag)) {\r\n  customElements.define(gpsDialogTag, FieldCustomGpsDialog);\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { EavConfig } from '../models';\r\n\r\n/**\r\n * Create a new FieldMask instance and access result with resolve\r\n * @example\r\n * const mask = new FieldMask(\"[FirstName]\", formGroup.controls);\r\n * const maskValue = mask.resolve();\r\n *\r\n * @param mask a string like \"[FirstName] [LastName]\"\r\n * @param model usually FormGroup controls, passed into here\r\n * @param overloadPreCleanValues a function which will \"scrub\" the found field-values\r\n */\r\nexport class FieldMask {\r\n  private mask: string;\r\n  private model: Dictionary<AbstractControl>;\r\n  private fields: string[] = [];\r\n  private value: string;\r\n  private findFields = /\\[.*?\\]/ig;\r\n  private unwrapField = /[\\[\\]]/ig;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    mask: string,\r\n    model: Dictionary<AbstractControl>,\r\n    private changeEvent: (newValue: string) => void,\r\n    overloadPreCleanValues: (key: string, value: string) => string,\r\n    private eavConfig?: EavConfig,\r\n  ) {\r\n    this.mask = mask;\r\n    this.model = model;\r\n    this.fields = this.fieldList();\r\n\r\n    if (overloadPreCleanValues) {\r\n      this.preClean = overloadPreCleanValues;\r\n    }\r\n\r\n    // bind auto-watch only if needed...\r\n    if (model && changeEvent) {\r\n      this.watchAllFields();\r\n    }\r\n  }\r\n\r\n  /** Resolves a mask to the final value */\r\n  resolve(): string {\r\n    let value = this.mask;\r\n    if (this.eavConfig != null && value != null) {\r\n      value = value.replace('[App:AppId]', this.eavConfig.appId);\r\n      value = value.replace('[App:ZoneId]', this.eavConfig.zoneId);\r\n    }\r\n    this.fields.forEach((e, i) => {\r\n      const replaceValue = this.model.hasOwnProperty(e) && this.model[e] && this.model[e].value ? this.model[e].value : '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      value = value.replace('[' + e + ']', cleaned);\r\n    });\r\n\r\n    return value;\r\n  }\r\n\r\n  /** Retrieves a list of all fields used in the mask */\r\n  fieldList(): string[] {\r\n    const result: string[] = [];\r\n    if (!this.mask) { return result; }\r\n    const matches = this.mask.match(this.findFields);\r\n    if (matches) {\r\n      matches.forEach((e, i) => {\r\n        const staticName = e.replace(this.unwrapField, '');\r\n        result.push(staticName);\r\n      });\r\n    } else { // TODO: ask is this good\r\n      result.push(this.mask);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** Default preClean function */\r\n  private preClean(key: string, value: string): string {\r\n    return value;\r\n  }\r\n\r\n  /** Change-event - will only fire if it really changes */\r\n  private onChange() {\r\n    const maybeNew = this.resolve();\r\n    if (this.value !== maybeNew) {\r\n      this.changeEvent(maybeNew);\r\n    }\r\n    this.value = maybeNew;\r\n  }\r\n\r\n  /** Add watcher and execute onChange */\r\n  private watchAllFields() {\r\n    // add a watch for each field in the field-mask\r\n    this.fields.forEach(field => {\r\n      if (!this.model[field]) { return; }\r\n      const valueSub = this.model[field].valueChanges.subscribe(value => this.onChange());\r\n      this.subscriptions.push(valueSub);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.subscriptions.forEach(subscription => { subscription.unsubscribe(); });\r\n  }\r\n}\r\n","export default \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" data-prefix=\\\"fas\\\" data-icon=\\\"map-marker-alt\\\" class=\\\"svg-inline--fa fa-map-marker-alt fa-w-12\\\" role=\\\"img\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path fill=\\\"currentColor\\\" d=\\\"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\\\"></path></svg>\";","export default \"<div class=\\\"custom-gps-container\\\">\\r\\n  <div class=\\\"map-info\\\">\\r\\n    <div class=\\\"input-component\\\">\\r\\n      <label for=\\\"lat\\\">Lat:</label>\\r\\n      <input id=\\\"lat\\\" type=\\\"number\\\" step=\\\"0.001\\\" />\\r\\n    </div>\\r\\n    &nbsp;\\r\\n    <div class=\\\"input-component\\\">\\r\\n      <label for=\\\"lng\\\">Lng:</label>\\r\\n      <input id=\\\"lng\\\" type=\\\"number\\\" step=\\\"0.001\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div id=\\\"address-mask-container\\\" class=\\\"map-info address-mask-container hidden\\\">\\r\\n    <a id=\\\"icon-search\\\" class=\\\"btn\\\">\\r\\n      <i class=\\\"material-icons-outlined\\\">search</i>\\r\\n    </a>\\r\\n    <span id=\\\"formatted-address-container\\\"></span>\\r\\n  </div>\\r\\n\\r\\n  <div id=\\\"map\\\" class=\\\"map-info__map\\\"></div>\\r\\n</div>\\r\\n\";","export default \".custom-gps-container{display:flex;flex-direction:column;height:100%}.map-info{flex:0 0 32px;display:flex;flex-wrap:wrap;align-items:center;padding:4px;padding-left:14px;border-bottom:1px solid #e1e1e1;background:#fff}.map-info label,.map-info #icon-search{margin-right:8px;display:flex;justify-content:center;align-items:center;font-size:12px;text-transform:uppercase;padding:4px}.map-info #icon-search i{font-size:14px;width:14px;height:14px;font-weight:bold}.map-info input{margin-right:8px;padding:4px 16px;border:none;background:transparent;outline:none !important}.address-mask-container{flex-wrap:nowrap}.map-info__map{flex:1 1 auto;width:100%;display:block}.hidden{display:none}.btn{border:1px solid silver;border-radius:4px}.btn:hover{background-color:rgba(69,79,99,.08);cursor:pointer}.input-component{display:flex;background-color:rgba(69,79,99,.08);padding:4px;border-radius:4px 4px 0 0;border-bottom:1px solid silver;margin:8px 0}.input-component:hover{border-bottom:1px solid #0087f4}\";","import { Connector, EavCustomInputField } from '../../../edit-types';\r\nimport { ElementEventListener } from '../../../edit/shared/models';\r\nimport { consoleLogWebpack } from '../shared/console-log-webpack.helper';\r\nimport { defaultCoordinates } from '../shared/constants';\r\nimport { buildTemplate, customGpsIcons, parseLatLng } from '../shared/helpers';\r\nimport * as template from './preview.html';\r\nimport * as styles from './preview.scss';\r\n\r\nconst gpsTag = 'field-custom-gps';\r\n\r\nclass FieldCustomGps extends HTMLElement implements EavCustomInputField<string> {\r\n  fieldInitialized: boolean;\r\n  connector: Connector<string>;\r\n\r\n  private latContainer: HTMLSpanElement;\r\n  private lngContainer: HTMLSpanElement;\r\n  private eventListeners: ElementEventListener[];\r\n\r\n  constructor() {\r\n    super();\r\n    consoleLogWebpack(`${gpsTag} constructor called`);\r\n    this.fieldInitialized = false;\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    if (this.fieldInitialized) { return; }\r\n    this.fieldInitialized = true;\r\n    consoleLogWebpack(`${gpsTag} connectedCallback called`);\r\n\r\n    this.innerHTML = buildTemplate(template.default, styles.default);\r\n    const mapIconContainer = this.querySelector<HTMLDivElement>('#map-icon-container');\r\n    mapIconContainer.innerHTML = customGpsIcons.mapMarker;\r\n    this.latContainer = this.querySelector<HTMLSpanElement>('#lat-container');\r\n    this.lngContainer = this.querySelector<HTMLSpanElement>('#lng-container');\r\n    this.eventListeners = [];\r\n    const expand = () => { this.expand(); };\r\n    this.addEventListener('click', expand);\r\n    this.eventListeners.push({ element: this, type: 'click', listener: expand });\r\n\r\n    // set initial value\r\n    if (!this.connector.data.value) {\r\n      this.updateHtml(defaultCoordinates);\r\n    } else {\r\n      this.updateHtml(parseLatLng(this.connector.data.value));\r\n    }\r\n\r\n    // update on value change\r\n    this.connector.data.onValueChange(value => {\r\n      if (!value) {\r\n        this.updateHtml(defaultCoordinates);\r\n      } else {\r\n        const latLng = parseLatLng(value);\r\n        this.updateHtml(latLng);\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateHtml(latLng: google.maps.LatLngLiteral): void {\r\n    this.latContainer.innerText = latLng.lat?.toString() ?? '';\r\n    this.lngContainer.innerText = latLng.lng?.toString() ?? '';\r\n  }\r\n\r\n  private expand(): void {\r\n    this.connector.dialog.open();\r\n  }\r\n\r\n  disconnectedCallback(): void {\r\n    consoleLogWebpack(`${gpsTag} disconnectedCallback called`);\r\n    this.eventListeners.forEach(({ element, type, listener }) => {\r\n      element.removeEventListener(type, listener);\r\n    });\r\n  }\r\n}\r\n\r\nif (!customElements.get(gpsTag)) {\r\n  customElements.define(gpsTag, FieldCustomGps);\r\n}\r\n","export default \"<div class=\\\"custom-gps-preview\\\">\\r\\n  <div class=\\\"custom-gps-preview__text\\\">\\r\\n    Lat: <span id=\\\"lat-container\\\"></span>, Lng: <span id=\\\"lng-container\\\"></span>\\r\\n  </div>\\r\\n  <div class=\\\"custom-gps-preview__spacer\\\"></div>\\r\\n  <div id=\\\"map-icon-container\\\" class=\\\"custom-gps-preview__map-icon\\\"></div>\\r\\n</div>\\r\\n\";","export default \".custom-gps-preview{width:100%;display:flex;align-items:center;position:absolute;top:0;bottom:0;font-size:16px;line-height:20px;margin-bottom:-2px;cursor:pointer}.custom-gps-preview__text{flex-shrink:0;max-width:80%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.custom-gps-preview__spacer{flex-grow:1}.custom-gps-preview__map-icon{flex-shrink:0;margin-right:4px;display:flex;align-items:center;justify-content:center}.custom-gps-preview__map-icon svg{width:20px;height:20px;line-height:20px}\";"],"sourceRoot":""}