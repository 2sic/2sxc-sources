{"version":3,"file":"projects_eav-ui_src_app_replace-content_replace-content_component_ts.b694e0ff4ba06250.js","mappings":"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","names":["i0","option_r4","$event","_r6","ctx_r5","setFilter","ctx_r7","select","ReplaceContentComponent_Conditional_0_mat_option_16_Template","ctx_r8","copySelected","ctx_r9","closeDialog","ctx_r10","save","ctx","isAddMode","_r2","filterText","filteredOptions","length","isMatch","ReplaceContentComponent","BaseComponent","constructor","router","route","dialogRef","contentGroupService","snackBar","super","this","hostClass","ngOnInit","guid","snapshot","paramMap","get","part","index","parseInt","add","queryParamMap","filterText$","BehaviorSubject","options$","filteredOptions$","combineLatest","pipe","map","options","filter","option","label","toLocaleLowerCase","includes","viewModel$","fetchConfig","subscription","refreshOnChildClosedShallow","subscribe","editResult","getCurrentNavigation","extras","state","cloneId","Object","keys","ngOnDestroy","complete","close","next","event","value","contentGroup","buildContentGroup","formUrl","convertFormToUrl","items","ContentTypeName","contentTypeName","DuplicateEntity","id","navigate","relativeTo","open","saveItem","duration","isRefresh","getItems","replaceConfig","entries","Items","itemId","itemName","newId","SelectedId","newFilter","find","static","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_2__","Xpm","selectors","hostVars","hostBindings","rf","ReplaceContentComponent_Conditional_0_Template","ReplaceContentComponent_contFlowTmp","BaseSubsinkComponent","refreshOnChildClosedDeep","events","NavigationEnd","startWith","firstChild","pairwise","hadChild","hasChild","_angular_core__WEBPACK_IMPORTED_MODULE_6__","lG2","features"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/replace-content/replace-content.component.html","./projects/eav-ui/src/app/replace-content/replace-content.component.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts"],"sourcesContent":["@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ vm.isAddMode ? 'Add Existing Item' : 'Replace Content Item' }}</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <router-outlet></router-outlet>\r\n      <p>{{vm.isAddMode\r\n        ? 'Select a content-item to add to this list.'\r\n        : 'By replacing a content-item you can make other content appear in the slot of the original content.'}}\r\n      </p>\r\n      <div class=\"eav-options-box\">\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Choose item</mat-label>\r\n          <input matInput [matAutocomplete]=\"auto\" [ngModel]=\"vm.filterText\" (ngModelChange)=\"setFilter($event)\">\r\n          <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"select($event)\"\r\n            [hideSingleSelectionIndicator]=\"true\">\r\n            <cdk-virtual-scroll-viewport itemSize=\"48\" minBufferPx=\"500\" maxBufferPx=\"1000\"\r\n              [style.height.px]=\"vm.filteredOptions.length < 6 ? vm.filteredOptions.length * 48 : 240\">\r\n              <mat-option *cdkVirtualFor=\"let option of vm.filteredOptions\" [value]=\"option\">{{ option }}</mat-option>\r\n            </cdk-virtual-scroll-viewport>\r\n          </mat-autocomplete>\r\n        </mat-form-field>\r\n        <button mat-icon-button tippy=\"Copy\" [disabled]=\"!vm.isMatch\" (click)=\"copySelected()\">\r\n          <mat-icon>file_copy</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" [disabled]=\"!vm.isMatch\" (click)=\"save()\">Save</button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { ContentGroupAdd } from '../manage-content-list/models/content-group.model';\r\nimport { ContentGroupService } from '../manage-content-list/services/content-group.service';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { ReplaceOption } from './models/replace-option.model';\r\nimport { ReplaceContentViewModel } from './replace-content.models';\r\n\r\n@Component({\r\n  selector: 'app-replace-content',\r\n  templateUrl: './replace-content.component.html',\r\n  styleUrls: ['./replace-content.component.scss'],\r\n})\r\nexport class ReplaceContentComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  viewModel$: Observable<ReplaceContentViewModel>;\r\n\r\n  private guid: string;\r\n  private part: string;\r\n  private index: number;\r\n  private add: boolean;\r\n  private filterText$: BehaviorSubject<string>;\r\n  private options$: BehaviorSubject<ReplaceOption[]>;\r\n  private contentTypeName: string;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<ReplaceContentComponent>,\r\n    private contentGroupService: ContentGroupService,\r\n\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.guid = this.route.snapshot.paramMap.get('guid');\r\n    this.part = this.route.snapshot.paramMap.get('part');\r\n    this.index = parseInt(this.route.snapshot.paramMap.get('index'), 10);\r\n    this.add = !!this.route.snapshot.queryParamMap.get('add');\r\n\r\n    this.filterText$ = new BehaviorSubject('');\r\n    this.options$ = new BehaviorSubject([]);\r\n\r\n    const filteredOptions$ = combineLatest([this.filterText$, this.options$]).pipe(\r\n      map(([filterText, options]) =>\r\n        options.filter(option => option.label.toLocaleLowerCase().includes(filterText.toLocaleLowerCase())).map(option => option.label)\r\n      ),\r\n    );\r\n    this.viewModel$ = combineLatest([this.filterText$, filteredOptions$]).pipe(\r\n      map(([filterText, filteredOptions]) => {\r\n        const viewModel: ReplaceContentViewModel = {\r\n          filterText,\r\n          filteredOptions,\r\n          isAddMode: this.add,\r\n          isMatch: filteredOptions.includes(filterText),\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n\r\n    this.fetchConfig(false, null);\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => {\r\n      const navigation = this.router.getCurrentNavigation();\r\n      const editResult = navigation.extras?.state;\r\n      const cloneId: number = editResult?.[Object.keys(editResult)[0]];\r\n      this.fetchConfig(true, cloneId);\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.filterText$.complete();\r\n    this.options$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  setFilter(filterText: string) {\r\n    this.filterText$.next(filterText);\r\n  }\r\n\r\n  select(event: MatAutocompleteSelectedEvent) {\r\n    this.filterText$.next(event.option.value);\r\n  }\r\n\r\n  copySelected() {\r\n    const contentGroup = this.buildContentGroup();\r\n    const form: EditForm = {\r\n      items: [{ ContentTypeName: this.contentTypeName, DuplicateEntity: contentGroup.id }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  save() {\r\n    this.snackBar.open('Saving...');\r\n    const contentGroup = this.buildContentGroup();\r\n    this.contentGroupService.saveItem(contentGroup).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  private fetchConfig(isRefresh: boolean, cloneId: number) {\r\n    const contentGroup = this.buildContentGroup();\r\n    this.contentGroupService.getItems(contentGroup).subscribe(replaceConfig => {\r\n      const options = Object.entries(replaceConfig.Items).map(([itemId, itemName]) => {\r\n        const option: ReplaceOption = {\r\n          id: parseInt(itemId, 10),\r\n          label: `${itemName} (${itemId})`,\r\n        };\r\n        return option;\r\n      });\r\n      this.options$.next(options);\r\n\r\n      // don't set selected option if dialog should be in add-mode and don't change selected option on refresh unless it's cloneId\r\n      if ((!contentGroup.add && !isRefresh) || cloneId != null) {\r\n        const newId = !isRefresh ? replaceConfig.SelectedId : cloneId;\r\n        const newFilter = this.options$.value.find(option => option.id === newId)?.label || '';\r\n        this.filterText$.next(newFilter);\r\n      }\r\n      this.contentTypeName = replaceConfig.ContentTypeName;\r\n    });\r\n  }\r\n\r\n  private buildContentGroup() {\r\n    const id = this.options$.value.find(option => option.label === this.filterText$.value)?.id ?? null;\r\n\r\n    const contentGroup: ContentGroupAdd = {\r\n      id,\r\n      guid: this.guid,\r\n      part: this.part,\r\n      index: this.index,\r\n      add: this.add,\r\n    };\r\n    return contentGroup;\r\n  }\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected refreshOnChildClosedDeep() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}