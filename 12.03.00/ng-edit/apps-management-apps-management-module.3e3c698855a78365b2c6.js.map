{"version":3,"sources":["./projects/ng-dialogs/src/app/apps-management/services/enable-languages.service.ts","./projects/ng-dialogs/src/app/apps-management/services/features-config.service.ts","./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-dialog.config.ts","./projects/ng-dialogs/src/app/apps-management/apps-management-routing.module.ts","./projects/ng-dialogs/src/app/apps-management/apps-management.module.ts","./projects/ng-dialogs/src/app/apps-management/services/sxc-insights.service.ts"],"names":["http","dnnContext","getAll","this","get","$2sxc","apiUrl","webApiZoneRoot","toggle","code","enable","params","cultureCode","toString","save","EnableLanguagesService","webApiFeatures","getManageFeaturesUrl","saveFeatures","featuresString","post","FeaturesConfigService","appsManagementDialog","name","initContext","panelSize","panelClass","getComponent","appsManagementRoutes","path","component","data","dialog","children","redirectTo","pathMatch","loadChildren","then","m","ImportAppModule","title","AppAdministrationModule","AppsManagementRoutingModule","forChild","AppsManagementModule","withComponents","activatePageLog","duration","webApiLogRoot","SxcInsightsService"],"mappings":"sKAOA,aAEE,WAAoBA,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,a,OAE9C,YAAAC,OAAA,WACE,OAAOC,KAAKH,KAAKI,IAAsBD,KAAKF,WAAWI,MAAML,KAAKM,OAAOC,6BAG3E,YAAAC,OAAA,SAAOC,EAAcC,GACnB,OAAOP,KAAKH,KAAKI,IAAUD,KAAKF,WAAWI,MAAML,KAAKM,OAAOC,6BAAoC,CAC/FI,OAAQ,CAAEC,YAAaH,EAAMC,OAAQA,EAAOG,eAKhD,YAAAC,KAAA,SAAKL,EAAcC,GACjB,OAAOP,KAAKH,KAAKI,IAAUD,KAAKF,WAAWI,MAAML,KAAKM,OAAOC,6BAAoC,CAC/FI,OAAQ,CAAEC,YAAaH,EAAMC,OAAQA,EAAOG,e,sCAhBrCE,GAAsB,sB,yBAAtBA,EAAsB,QAAtBA,EAAsB,Y,EADnC,I,0GCAA,aAEE,WAAoBf,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,a,OAE9C,YAAAC,OAAA,WACE,OAAOC,KAAKH,KAAKI,IAAeD,KAAKF,WAAWI,MAAML,KAAKM,OAAOU,wBAGpE,YAAAC,qBAAA,WACE,OAAOd,KAAKH,KAAKI,IAAYD,KAAKF,WAAWI,MAAML,KAAKM,OAAOU,mCAGjE,YAAAE,aAAA,SAAaC,GACX,OAAOhB,KAAKH,KAAKoB,KAAcjB,KAAKF,WAAWI,MAAML,KAAKM,OAAOU,sBAA0BG,I,sCAZlFE,GAAqB,sB,yBAArBA,EAAqB,QAArBA,EAAqB,Y,EADlC,I,wWCLaC,EAAqC,CAChDC,KAAM,yBACNC,aAAa,EACbC,UAAW,QACXC,WAAY,KAENC,aAAY,W,4GACuB,SAAM,gE,OAC7C,MAAO,CAAP,EADuC,SAA+C,mC,YCHpFC,EAA+B,CACnC,CACEC,KAAM,GAAIC,UAAW,IAAsBC,KAAM,CAAEC,OAAQV,GAAwBW,SAAU,CAC3F,CAAEJ,KAAM,GAAIK,WAAY,OAAQC,UAAW,QAC3C,CACEN,KAAM,OAAQC,UAAW,IAAqBG,SAAU,CACtD,CACEJ,KAAM,SACNO,aAAc,WAAM,+DAA0CC,KAAK,SAAAC,GAAK,OAAAA,EAAEC,qBAG9ER,KAAM,CAAES,MAAO,sBAEjB,CAAEX,KAAM,WAAYC,UAAW,IAAqBC,KAAM,CAAES,MAAO,oBACnE,CAAEX,KAAM,YAAaC,UAAW,IAAqBC,KAAM,CAAES,MAAO,mBACpE,CAAEX,KAAM,WAAYC,UAAW,IAAqBC,KAAM,CAAES,MAAO,kBACnE,CAAEX,KAAM,eAAgBC,UAAW,IAAqBC,KAAM,CAAES,MAAO,mBACvE,CACEX,KAAM,SACNO,aAAc,WAAM,+HAA0DC,KAAK,SAAAC,GAAK,OAAAA,EAAEG,+BAMlG,2B,6CAIaC,I,uBAAAA,I,2BAHF,CAAC,IAAaC,SAASf,IACtB,O,EAFZ,G,gDCOA,2B,6CA4CagB,I,uBAAAA,I,4BATA,CACT,IACA,IACA,IACA,IACA,IACA,KACD,SA1BQ,CACP,EACA,IACA,IACA,IACA,IAAaC,eAAe,IAC5B,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,Q,EAjCJ,I,4GChCA,aAEE,WAAoB7C,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,a,OAE9C,YAAA6C,gBAAA,SAAgBC,GACd,OAAO5C,KAAKH,KAAKI,IAAYD,KAAKF,WAAWI,MAAML,KAAKM,OAAO0C,uBAAgC,CAC7FrC,OAAQ,CAAEoC,SAAUA,EAASlC,e,sCALtBoC,GAAkB,sB,yBAAlBA,EAAkB,QAAlBA,EAAkB,Y,EAD/B","file":"apps-management-apps-management-module.3e3c698855a78365b2c6.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EnableLanguage } from '../models/enable-language.model';\r\n\r\nconst webApiZoneRoot = 'admin/zone/';\r\n\r\n@Injectable()\r\nexport class EnableLanguagesService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<EnableLanguage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'getlanguages'));\r\n  }\r\n\r\n  toggle(code: string, enable: boolean) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'switchlanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  // todo: this code is _identical_ to toggle above. one should be removed, but I don't know where they are used\r\n  save(code: string, enable: boolean) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'switchlanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Feature } from '../models/feature.model';\r\n\r\nconst webApiFeatures = 'admin/feature/';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<Feature[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'List'));\r\n  }\r\n\r\n  getManageFeaturesUrl() {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'RemoteManageUrl'));\r\n  }\r\n\r\n  saveFeatures(featuresString: string) {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'Save'), featuresString);\r\n  }\r\n}\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appsManagementDialog: DialogConfig = {\r\n  name: 'APPS_MANAGEMENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppsManagementNavComponent } = await import('./apps-management-nav.component');\r\n    return AppsManagementNavComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from '../shared/components/empty-route/empty-route.component';\r\nimport { appsManagementDialog } from './apps-management-nav/apps-management-dialog.config';\r\n\r\nconst appsManagementRoutes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: appsManagementDialog }, children: [\r\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n      {\r\n        path: 'list', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            loadChildren: () => import('../import-app/import-app.module').then(m => m.ImportAppModule)\r\n          },\r\n        ],\r\n        data: { title: 'Apps in this Zone' },\r\n      },\r\n      { path: 'settings', component: EmptyRouteComponent, data: { title: 'System Settings' } },\r\n      { path: 'languages', component: EmptyRouteComponent, data: { title: 'Zone Languages' } },\r\n      { path: 'features', component: EmptyRouteComponent, data: { title: 'Zone Features' } },\r\n      { path: 'sxc-insights', component: EmptyRouteComponent, data: { title: 'Debug Insights' } },\r\n      {\r\n        path: ':appId',\r\n        loadChildren: () => import('../app-administration/app-administration.module').then(m => m.AppAdministrationModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appsManagementRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppsManagementRoutingModule { }\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\r\nimport { Context } from '../shared/services/context';\r\nimport { DialogService } from '../shared/services/dialog.service';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AppsListActionsComponent } from './ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListShowComponent } from './ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { EnableLanguagesStatusComponent } from './ag-grid-components/enable-languages-status/enable-languages-status.component';\r\nimport { FeaturesListEnabledComponent } from './ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListPublicComponent } from './ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from './ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesListUiComponent } from './ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { AppsListComponent } from './apps-list/apps-list.component';\r\nimport { AppsManagementNavComponent } from './apps-management-nav/apps-management-nav.component';\r\nimport { AppsManagementRoutingModule } from './apps-management-routing.module';\r\nimport { EnableLanguagesComponent } from './enable-languages/enable-languages.component';\r\nimport { ManageFeaturesComponent } from './manage-features/manage-features.component';\r\nimport { AppsListService } from './services/apps-list.service';\r\nimport { EnableLanguagesService } from './services/enable-languages.service';\r\nimport { FeaturesConfigService } from './services/features-config.service';\r\nimport { SxcInsightsService } from './services/sxc-insights.service';\r\nimport { SxcInsightsComponent } from './sxc-insights/sxc-insights.component';\r\nimport { SystemSettingsComponent } from './system-settings/system-settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppsManagementNavComponent,\r\n    AppsListComponent,\r\n    ManageFeaturesComponent,\r\n    SxcInsightsComponent,\r\n    AppsListShowComponent,\r\n    AppsListActionsComponent,\r\n    FeaturesListEnabledComponent,\r\n    FeaturesListUiComponent,\r\n    FeaturesListPublicComponent,\r\n    FeaturesListSecurityComponent,\r\n    EnableLanguagesComponent,\r\n    EnableLanguagesStatusComponent,\r\n    SystemSettingsComponent,\r\n  ],\r\n  imports: [\r\n    AppsManagementRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    AgGridModule.withComponents([]),\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatTabsModule,\r\n    MatRippleModule,\r\n    EcoFabSpeedDialModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    AppsListService,\r\n    EnableLanguagesService,\r\n    FeaturesConfigService,\r\n    SxcInsightsService,\r\n    DialogService,\r\n  ]\r\n})\r\nexport class AppsManagementModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n      params: { duration: duration.toString() }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}