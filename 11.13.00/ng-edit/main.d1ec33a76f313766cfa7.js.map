{"version":3,"sources":["../edit/shared/store/ngrx-data/base-data.service.ts","../edit/shared/store/ngrx-data/content-type-item.service.ts","../edit/shared/store/ngrx-data/content-type.service.ts","../edit/shared/store/ngrx-data/entity-metadata.ts","../edit/shared/store/ngrx-data/feature.service.ts","../edit/shared/store/ngrx-data/global-config.service.ts","../edit/shared/store/ngrx-data/input-type.service.ts","../edit/shared/store/ngrx-data/item.service.ts","../edit/shared/store/ngrx-data/language-instance.service.ts","../edit/shared/store/ngrx-data/language.service.ts","../edit/shared/store/ngrx-data/prefetch.service.ts","../edit/shared/store/ngrx-data/publish-status.service.ts","./src/app/shared/constants/session.constants.ts","../edit/eav-material-controls/localization/translate-menu/translate-menu.helpers.ts","./src/environments/environment.ts","../edit/shared/models/eav/eav-content-type-attribute.ts","../edit/shared/models/eav/eav-content-type.ts","../edit/shared/models/eav/eav-dimension.ts","../edit/shared/models/eav/eav-entity-attributes.ts","../edit/shared/models/eav/eav-entity.ts","../edit/shared/models/eav/eav-item.ts","../edit/shared/models/eav/eav-value.ts","../edit/shared/models/eav/eav-values.ts","./src/app/shared/constants/dialog-types.constants.ts","./src/app/shared/services/context.ts","../edit/shared/constants/component-metadata.constants.ts","../edit/shared/constants/features-guids.constants.ts","../edit/shared/constants/translation-link.constants.ts","../edit/shared/constants/localization.constants.ts","../edit/shared/helpers/url.helpers.ts","../edit/shared/constants/wrappers.constants.ts","../edit/edit.matcher.ts","../edit/shared/helpers/dropzone-dragging.helper.ts","../edit/shared/helpers/field-mask.helper.ts","../edit/shared/helpers/fields-settings.helpers.ts","../edit/shared/helpers/general.helpers.ts","../edit/shared/helpers/input-field.helpers.ts","../edit/shared/helpers/localization.helpers.ts","./src/app/content-type-fields/constants/input-type.constants.ts","./src/app/shared/constants/eav.constants.ts","./src/app/shared/helpers/console-log-angular.helper.ts","../edit/shared/models/publish-mode.models.ts","./src/app/shared/helpers/url-prep.helper.ts","../edit/shared/store/reducers/index.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/params-init.factory.ts","./src/app/shared/interceptors/handle-errors.interceptor.ts","./src/app/shared/interceptors/set-headers.interceptor.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":["cacheName","serviceElementsFactory","cache$","BehaviorSubject","entities$","subscribe","items","next","addContentTypeItems","contentTypeItems1","contentTypeItems","convertMany","this","upsertManyInCache","getContentTypeItem","guid","value","find","contentTypeItem","Guid","ContentTypeItemService","addContentTypes","contentTypes1","contentTypes","map","contentType1","convert","addManyToCache","getContentType","id","contentType","Id","getContentType$","pipe","distinctUntilChanged","ContentTypeService","entityConfig","entityMetadata","GlobalConfig","Item","selectId","item","Entity","Feature","Language","language","key","LanguageInstance","languageInstance","formId","ContentType","ContentTypeItem","InputType","inputType","Type","PublishStatus","publishStatus","Prefetch","entity","_guid","pluralNames","loadFeatures","features","addAllToCache","isFeatureEnabled","feature","enabled","FeatureService","snackBar","initial","debugEnabled","sessionStorage","getItem","addOneToCache","getDebugEnabled$","configs","toggleDebugEnabled","oldConfig","newConfig","updateOneInCache","open","duration","GlobalConfigService","addInputTypes","inputTypes","getInputType","type","getInputTypes","getInputTypes$","asObservable","InputTypeService","loadItems","items1","item1","updateItemId","itemData","entityGuid","Object","keys","entityId","oldItem","Header","EntityId","newItem","addItemAttributeValue","attributeKey","newValue","currentLanguage","isReadOnly","attributeType","isTransaction","transactionItem","newEavValue","create","Attributes","addAttributeValue","updateItemAttributeValue","defaultLanguage","updateAttributeValue","updateItemAttributesValues","newValues","oldValues","entries","values","hasOwnProperty","translate","changes","getFormChanges","updateAttributesValues","addItemAttributeDimension","shareWithLanguage","addAttributeDimension","removeItemAttributeDimension","removeAttributeDimension","updateItemHeader","header","getItemAttributes","getItemAttributes$","getItem$","getItemHeader$","getItems","entityGuids","filter","includes","getItems$","oldList","newList","length","i","setDefaultValue","ctAttribute","settings","languages","defaultValue","parseDefaultValue","Name","undefined","getBestValue","Strict","DisableI18n","ItemService","addLanguageInstance","uiLanguage","hideHeader","removeLanguageInstance","removeOneFromCache","setCurrentLanguage","newLanguage","getCurrentLanguage","getCurrentLanguage$","languageInstances","getDefaultLanguage","getDefaultLanguage$","getHideHeader$","updateHideHeader","LanguageInstanceService","loadLanguages","getLanguages","getLanguages$","LanguageService","loadPrefetch","prefetch","prefetchGuid","upsertOneInCache","getPrefetchLinks","links","Links","PrefetchService","setPublishStatus","removePublishStatus","getPublishStatus","getPublishStatus$","publishStatuses","setPublishMode","publishMode","eavService","eavConfig","versioningOptions","DraftShouldBranch","Branch","IsPublished","Show","getPublishMode$","Hide","PublishStatusService","prefix","keyZoneId","keyRequestToken","keyTabId","keyContentBlockId","keyModuleId","keyAppId","keyDebug","keyDialog","keyContentType","keyItems","keyPartOfPage","keyPublishing","keyFilters","keyPipelineId","keyApi","keyUrl","keyIsShared","getTranslationStateClass","linkType","MissingDefaultLangValue","Translate","LinkCopyFrom","DontTranslate","LinkReadOnly","LinkReadWrite","calculateSharedInfoMessage","dimensions","TranslateMenuHelpers","calculateShortDimensions","result","calculateEditAndReadDimensions","editableDimensions","readOnlyDimensions","infoMessage","editableExist","readOnlyExist","join","dimensionsMap","shortCurrentLanguage","slice","indexOf","push","forEach","dimension","shortNoReadOnly","replace","shortDimension","environment","production","convertOne","attribute1","metadata","Metadata","mergeSettings","IsTitle","Settings","attributes1","EavContentTypeAttribute","attributes","Description","Scope","Value","atributes","type1","metadataItems","merged","copy","Values","entity1","Owner","Version","For","entities1","EavEntity","Dimensions","value1","split","lang","EavDimension","Zone","AppImport","App","ContentItems","Edit","ItemHistory","Develop","PipelineDesigner","Replace","InstanceList","parentContext","ready","parent","window","contextId","_zoneId","routeNum","zoneId","_appId","appId","_rvt","requestToken","_tabId","tabId","_contentBlockId","contentBlockId","_moduleId","moduleId","init","route","routeSnapshot","snapshot","clearCachedValues","initRoot","sessionNumber","Error","name","num","parseInt","isNaN","paramName","substring","paramMap","get","Context","componentMetadataKey","FeaturesConstants","TranslationLinkConstants","BestValueModes","stripNonUrlCharacters","controlValue","allowPath","trimEnd","rexSeparators","latinizeText","toLowerCase","input","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Öe","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ß","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","a","readQueryStringParameters","url","queryParams","f","decodeURIComponent","getUrlParams","qs","tokens","params","re","exec","replaceUrlParam","paramValue","pattern","RegExp","search","getUrlPrefix","area","systemRoot","portalRoot","appRoot","endsWith","calculatePathFromRoot","lastChild","firstChild","pathFromRoot","path","urlSegment","WrappersConstants","editRoot","hasDetails","hasUpdate","posParams","detailsEntityGuid","detailsFieldId","updateEntityGuid","updateFieldId","consumed","refreshEditRoot","edit","refreshEdit","zone","eventListeners","attach","htmlEl","runOutsideAngular","dragoverListener","timeoutsArray","clearTimeout","splice","clearTimeouts","windowBodyTimeouts","document","body","classList","add","draggingClass","dropListener","remove","addEventListener","passive","element","listener","detach","eventListener","removeEventListener","mask","model","changeEvent","overloadPreCleanValues","fields","findFields","unwrapField","subscriptions","fieldList","preClean","watchAllFields","resolve","e","replaceValue","cleaned","matches","match","staticName","onChange","maybeNew","field","valueSub","valueChanges","destroy","subscription","unsubscribe","findDisableTranslation","attributeValues","translationExistsInDefault","eavValues","getContentTypeTitle","label","getValueOrDefault","Label","error","findIsLastInGroup","attribute","index","findIndex","EmptyDefault","getDisabledBecauseTranslations","disableTranslation","isEditableTranslationExist","isReadonlyTranslationExist","getTranslationState","infoLabel","editableTranslationExists","readonlyTranslationExists","getValueTranslation","state","getTranslationStateCore","editableElements","objectsEqual","x","y","obj1","obj2","keys1","keys2","every","key1","arraysEqual","oldValue","Array","isArray","GeneralHelpers","getContentTypeId","ContentTypeName","getInputTypeNames","calculatedInputType","calculateInputType","isExternal","AngularAssets","getWrappers","CollapsibleWrapper","wrappers","HiddenWrapper","EntityDefault","StringDropdownQuery","EntityQuery","EntityContentBlocks","LocalizationWrapper","AllowMultiValue","EntityExpandableWrapper","DropzoneWrapper","ExpandableWrapper","AdamAttachWrapper","DefaultValue","Prefill","BooleanDefault","BooleanTristate","DatetimeDefault","Date","toJSON","NumberDefault","Number","guids","trim","JSON","stringify","startsWith","parse","isValueEmpty","emptyEntityField","createMode","translation","translationDefault","allAttributesValues","languageKey","LocalizationHelpers","eavValue","d","isEditableOrReadonlyTranslationExist","c","updateAttribute","oldAttributes","newAttributes","attributeCopy","allAttributes","updateValues","eavAttributes","newItemValue","newAttribute","updateValue","existingLanguageKey","newLanguageValue","attributeValue","newDimensionValue","existingDimensionValue","concat","validDimensions","some","mode","bestDimensions","bestValue","findValueForDimensions","StringDefault","StringUrlPath","StringDropdown","StringFontIconPicker","StringTemplatePicker","StringWysiwyg","HyperlinkDefault","HyperlinkLibrary","ExternalWebComponent","CustomGPS","CustomJsonEditor","CustomDefault","OldTypeDropdown","OldTypeWysiwyg","OldTypeDefault","StringWysiwygTinymce","StringWysiwygAdv","StringWysiwygDnn","DefaultSuffix","eavConstants","target","app","cmsObject","keyTypes","string","number","scopes","default","template","permissions","query","resources","pipelineDesigner","dataSourceDifficulties","advanced","outDataSource","EntityGuid","In","PartAssemblyAndType","PrimaryType","VisualDesignerData","Top","Left","Width","defaultPipeline","dataSources","streamWiring","From","Out","To","testParameters","consoleLogAngular","message","console","groupCollapsed","optionalParams","trace","groupEnd","PublishModeConstants","convertFormToUrl","form","formUrl","Parent","innerItem","Field","Add","Index","paramEncode","toString","createForSuffix","mdFor","Target","Singleton","String","keyType","toLocaleLowerCase","metaValue","targetType","DuplicateEntity","Group","groupItem","Part","convertUrlToForm","options","option","innerItemParams","prefillParams","paramDecode","test","editItem","addItem","newParams","forParams","forIntro","forValue","forTarget","copyParams","groupParams","text","metaReducers","reducer","action","reducers","appRoutes","loadChildren","then","m","AppsManagementModule","data","title","ImportAppModule","AppAdministrationModule","CodeEditorModule","VisualQueryModule","ReplaceContentModule","ManageContentListModule","ContentItemsModule","ContentTypeFieldsModule","ItemHistoryModule","matcher","EditModule","RefreshEditModule","ContentExportModule","ContentImportModule","PermissionsModule","AppRoutingModule","forRoot","el","dnnContext","context","titleService","router","activatedRoute","matIconRegistry","preConfigure","Subscription","setDefaultFontSetClass","ngOnInit","appTitle","getTitle","events","event","child","setTitle","ngOnDestroy","AppComponent","paramsInitFactory","injector","log","jsInfo","eavKeys","location","hash","alert","href","removeItem","setItem","urlHash","queryParametersFromUrl","dialog","navigate","historyItems","pipelineId","replaceItems","groupItems","$2sxc","totalPopup","close","page","rvt","api","env","load","excludedUrls","intercept","req","handle","catchError","checkIfExcluded","showDetailedHttpError","throwError","infoText","status","srvResp","msg","Message","msgDet","MessageDetail","ExceptionMessage","HandleErrorsInterceptor","modified","FormData","clone","setHeaders","SetHeadersInterceptor","AppModule","provide","useFactory","deps","multi","useClass","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","bootstrapModule","catch","err","webpackEmptyAsyncContext","Promise","code","module","exports"],"mappings":"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,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,QAAI,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,KAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,OAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,KAAMC,SAAG,IAAKC,SAAG,KAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,OAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IACnBC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,KAAMC,OAAG,KAAMC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAAMC,SAAG,KAC1FC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,KAAMC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,OAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,KAAMC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC9FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,KAAMC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,OAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAC7FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,KAAMC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC5FC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,OAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAAKC,SAAG,IAC3FC,SAAG,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","file":"main.d1ec33a76f313766cfa7.js","sourcesContent":["import { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n/**\r\n * Creates BehaviorSubject for cached data to be accessible in both synchronous and asynchronous manner with cache$.\r\n * WARNING! Do not use entities$\r\n */\r\nexport class BaseDataService<T> extends EntityCollectionServiceBase<T> {\r\n  cache$: BehaviorSubject<T[]>;\r\n\r\n  constructor(cacheName: string, serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super(cacheName, serviceElementsFactory);\r\n\r\n    this.cache$ = new BehaviorSubject<T[]>([]);\r\n    // doesn't need to be completed because store services are singletons that live as long as the browser tab is open\r\n    this.entities$.subscribe(items => {\r\n      this.cache$.next(items);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { EavEntity } from '../../models/eav';\r\nimport { Entity1 } from '../../models/json-format-v1';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeItemService extends BaseDataService<EavEntity> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('ContentTypeItem', serviceElementsFactory);\r\n  }\r\n\r\n  addContentTypeItems(contentTypeItems1: Entity1[]): void {\r\n    const contentTypeItems = EavEntity.convertMany(contentTypeItems1);\r\n    this.upsertManyInCache(contentTypeItems);\r\n  }\r\n\r\n  getContentTypeItem(guid: string): EavEntity {\r\n    return this.cache$.value.find(contentTypeItem => contentTypeItem.Guid === guid);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { EavContentType } from '../../models/eav';\r\nimport { ContentType1 } from '../../models/json-format-v1';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeService extends BaseDataService<EavContentType> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('ContentType', serviceElementsFactory);\r\n  }\r\n\r\n  addContentTypes(contentTypes1: ContentType1[]): void {\r\n    const contentTypes = contentTypes1.map(contentType1 => EavContentType.convert(contentType1));\r\n    this.addManyToCache(contentTypes);\r\n  }\r\n\r\n  getContentType(id: string): EavContentType {\r\n    return this.cache$.value.find(contentType => contentType.Id === id);\r\n  }\r\n\r\n  getContentType$(id: string): Observable<EavContentType> {\r\n    return this.cache$.pipe(\r\n      map(contentTypes => contentTypes.find(contentType => contentType.Id === id)),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n}\r\n","import { EntityMetadataMap } from '@ngrx/data';\r\nimport { InputType } from '../../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { Prefetch } from '../../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { Language, LanguageInstance, PublishStatus } from '../../models';\r\nimport { EavContentType, EavEntity, EavItem } from '../../models/eav';\r\n\r\nexport const entityMetadata: EntityMetadataMap = {\r\n  GlobalConfig: {},\r\n  Item: {\r\n    selectId: itemSelectId,\r\n  },\r\n  Feature: {},\r\n  Language: {\r\n    selectId: languageSelectId,\r\n  },\r\n  LanguageInstance: {\r\n    selectId: languageInstanceSelectId,\r\n  },\r\n  ContentType: {\r\n    selectId: contentTypeSelectId,\r\n  },\r\n  ContentTypeItem: {\r\n    selectId: contentTypeItemSelectId,\r\n  },\r\n  InputType: {\r\n    selectId: inputTypeSelectId,\r\n  },\r\n  PublishStatus: {\r\n    selectId: publishStatusSelectId,\r\n  },\r\n  Prefetch: {\r\n    selectId: prefetchSelectId,\r\n  },\r\n};\r\n\r\nexport const pluralNames = {\r\n  Feature: 'Features', // example\r\n  PublishStatus: 'PublishStatuses',\r\n};\r\n\r\nexport const entityConfig = {\r\n  entityMetadata,\r\n  pluralNames,\r\n};\r\n\r\nexport function itemSelectId(item: EavItem): string {\r\n  return item?.Entity?.Guid;\r\n}\r\n\r\nexport function languageSelectId(language: Language): string {\r\n  return language?.key;\r\n}\r\n\r\nexport function languageInstanceSelectId(languageInstance: LanguageInstance): number {\r\n  return languageInstance?.formId;\r\n}\r\n\r\nexport function contentTypeSelectId(contentType: EavContentType): string {\r\n  return contentType?.Id;\r\n}\r\n\r\nexport function contentTypeItemSelectId(contentTypeItem: EavEntity): string {\r\n  return contentTypeItem?.Guid;\r\n}\r\n\r\nexport function inputTypeSelectId(inputType: InputType): string {\r\n  return inputType?.Type;\r\n}\r\n\r\nexport function publishStatusSelectId(publishStatus: PublishStatus): number {\r\n  return publishStatus?.formId;\r\n}\r\n\r\nexport function prefetchSelectId(entity: Prefetch): string {\r\n  return entity?._guid;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { BaseDataService } from '.';\r\nimport { Feature } from '../../../../ng-dialogs/src/app/apps-management/models/feature.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FeatureService extends BaseDataService<Feature> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Feature', serviceElementsFactory);\r\n  }\r\n\r\n  loadFeatures(features: Feature[]): void {\r\n    this.addAllToCache(features);\r\n  }\r\n\r\n  isFeatureEnabled(guid: string): boolean {\r\n    return this.cache$.value.find(feature => feature.id === guid)?.enabled ?? false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { keyDebug } from '../../../../ng-dialogs/src/app/shared/constants/session.constants';\r\nimport { GlobalConfig } from '../../models';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalConfigService extends BaseDataService<GlobalConfig> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory, private snackBar: MatSnackBar) {\r\n    super('GlobalConfig', serviceElementsFactory);\r\n\r\n    const initial: GlobalConfig = {\r\n      id: 0,\r\n      debugEnabled: sessionStorage.getItem(keyDebug) === 'true',\r\n    };\r\n    this.addOneToCache(initial);\r\n  }\r\n\r\n  getDebugEnabled$(): Observable<boolean> {\r\n    return this.cache$.pipe(map(configs => configs[0].debugEnabled));\r\n  }\r\n\r\n  toggleDebugEnabled(): void {\r\n    const oldConfig = this.cache$.value[0];\r\n    const newConfig: GlobalConfig = {\r\n      ...oldConfig,\r\n      debugEnabled: !oldConfig.debugEnabled,\r\n    };\r\n    this.updateOneInCache(newConfig);\r\n\r\n    if (newConfig.debugEnabled) {\r\n      this.snackBar.open('debug mode enabled', null, { duration: 3000 });\r\n    } else {\r\n      this.snackBar.open('debug mode disabled', null, { duration: 3000 });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { InputType } from '../../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InputTypeService extends BaseDataService<InputType> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('InputType', serviceElementsFactory);\r\n  }\r\n\r\n  addInputTypes(inputTypes: InputType[]): void {\r\n    this.addManyToCache(inputTypes);\r\n  }\r\n\r\n  getInputType(type: string): InputType {\r\n    return this.cache$.value.find(inputType => inputType.Type === type);\r\n  }\r\n\r\n  getInputTypes(): InputType[] {\r\n    return this.cache$.value;\r\n  }\r\n\r\n  getInputTypes$(): Observable<InputType[]> {\r\n    return this.cache$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { FieldSettings, FieldValue } from '../../../../edit-types';\r\nimport { InputType } from '../../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { FormValues } from '../../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\nimport { BestValueModes } from '../../constants/localization.constants';\r\nimport { GeneralHelpers, InputFieldHelpers, LocalizationHelpers } from '../../helpers';\r\nimport { Language, SaveResult } from '../../models';\r\nimport { EavContentTypeAttribute, EavDimension, EavEntityAttributes, EavHeader, EavItem, EavValue } from '../../models/eav';\r\nimport { Item1 } from '../../models/json-format-v1';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItemService extends BaseDataService<EavItem> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Item', serviceElementsFactory);\r\n  }\r\n\r\n  loadItems(items1: Item1[]): void {\r\n    const items = items1.map(item1 => EavItem.convert(item1));\r\n    this.upsertManyInCache(items);\r\n  }\r\n\r\n  updateItemId(itemData: SaveResult): void {\r\n    const entityGuid = Object.keys(itemData)[0];\r\n    const entityId = itemData[entityGuid];\r\n    const oldItem = this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem || (oldItem.Header.EntityId !== 0 && oldItem.Entity.Id !== 0)) { return; }\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Header: {\r\n        ...oldItem.Header,\r\n        EntityId: entityId,\r\n      },\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Id: entityId,\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  addItemAttributeValue(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    newValue: FieldValue,\r\n    currentLanguage: string,\r\n    isReadOnly: boolean,\r\n    attributeType: string,\r\n    isTransaction = false,\r\n    transactionItem?: EavItem,\r\n  ): EavItem {\r\n    const newValueDimension = isReadOnly ? `~${currentLanguage}` : currentLanguage;\r\n    const newEavValue = EavValue.create(newValue, [EavDimension.create(newValueDimension)]);\r\n    const oldItem = transactionItem ?? this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.addAttributeValue(oldItem.Entity.Attributes, newEavValue, attributeKey, attributeType),\r\n      }\r\n    };\r\n\r\n    if (!isTransaction) { this.updateOneInCache(newItem); }\r\n    return newItem;\r\n  }\r\n\r\n  updateItemAttributeValue(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    newValue: FieldValue,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n  ): void {\r\n    const oldItem = this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem) { return; }\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.updateAttributeValue(\r\n          oldItem.Entity.Attributes, attributeKey, newValue, currentLanguage, defaultLanguage, isReadOnly,\r\n        ),\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  updateItemAttributesValues(entityGuid: string, newValues: FormValues, currentLanguage: string, defaultLanguage: string): void {\r\n    const oldItem = this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem) { return; }\r\n\r\n    const oldValues: FormValues = {};\r\n    for (const [name, values] of Object.entries(oldItem.Entity.Attributes)) {\r\n      if (!newValues.hasOwnProperty(name)) { continue; }\r\n      oldValues[name] = LocalizationHelpers.translate(currentLanguage, defaultLanguage, values, null);\r\n    }\r\n    const changes = GeneralHelpers.getFormChanges(oldValues, newValues);\r\n    if (changes == null) { return; }\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.updateAttributesValues(oldItem.Entity.Attributes, changes, currentLanguage, defaultLanguage),\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  /**\r\n   * Update entity attribute dimension. Add readonly languageKey to existing useFromLanguageKey.\r\n   * Example to useFrom en-us add fr-fr = \"en-us,-fr-fr\"\r\n   */\r\n  addItemAttributeDimension(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    currentLanguage: string,\r\n    shareWithLanguage: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n    transactionItem?: EavItem,\r\n  ): void {\r\n    const oldItem = transactionItem ?? this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.addAttributeDimension(\r\n          oldItem.Entity.Attributes, attributeKey, currentLanguage, shareWithLanguage, defaultLanguage, isReadOnly,\r\n        ),\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  removeItemAttributeDimension(\r\n    entityGuid: string,\r\n    attributeKey: string,\r\n    currentLanguage: string,\r\n    isTransaction = false,\r\n    transactionItem?: EavItem,\r\n  ): EavItem {\r\n    const oldItem = transactionItem ?? this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Entity: {\r\n        ...oldItem.Entity,\r\n        Attributes: LocalizationHelpers.removeAttributeDimension(oldItem.Entity.Attributes, attributeKey, currentLanguage),\r\n      }\r\n    };\r\n\r\n    if (!isTransaction) { this.updateOneInCache(newItem); }\r\n    return newItem;\r\n  }\r\n\r\n  updateItemHeader(entityGuid: string, header: EavHeader): void {\r\n    const oldItem = this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n    if (!oldItem) { return; }\r\n\r\n    const newItem: EavItem = {\r\n      ...oldItem,\r\n      Header: {\r\n        ...header\r\n      }\r\n    };\r\n    this.updateOneInCache(newItem);\r\n  }\r\n\r\n  getItemAttributes(entityGuid: string): EavEntityAttributes {\r\n    return this.cache$.value.find(item => item.Entity.Guid === entityGuid)?.Entity.Attributes;\r\n  }\r\n\r\n  getItemAttributes$(entityGuid: string): Observable<EavEntityAttributes> {\r\n    return this.cache$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)?.Entity.Attributes),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  getItem(entityGuid: string): EavItem {\r\n    return this.cache$.value.find(item => item.Entity.Guid === entityGuid);\r\n  }\r\n\r\n  getItem$(entityGuid: string): Observable<EavItem> {\r\n    return this.cache$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  getItemHeader$(entityGuid: string): Observable<EavHeader> {\r\n    return this.cache$.pipe(\r\n      map(items => items.find(item => item.Entity.Guid === entityGuid)?.Header),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  getItems(entityGuids?: string[]): EavItem[] {\r\n    if (entityGuids == null) { return this.cache$.value; }\r\n\r\n    return this.cache$.value.filter(item => entityGuids.includes(item.Entity.Guid));\r\n  }\r\n\r\n  getItems$(entityGuids?: string[]): Observable<EavItem[]> {\r\n    if (entityGuids == null) { return this.cache$.asObservable(); }\r\n\r\n    return this.cache$.pipe(\r\n      map(items => items.filter(item => entityGuids.includes(item.Entity.Guid))),\r\n      distinctUntilChanged((oldList, newList) => {\r\n        if (oldList.length !== newList.length) { return false; }\r\n\r\n        for (let i = 0; i < oldList.length; i++) {\r\n          if (oldList[i] === newList[i]) { continue; }\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n    );\r\n  }\r\n\r\n  setDefaultValue(\r\n    item: EavItem,\r\n    ctAttribute: EavContentTypeAttribute,\r\n    inputType: InputType,\r\n    settings: FieldSettings,\r\n    languages: Language[],\r\n    defaultLanguage: string,\r\n  ): void {\r\n    const defaultValue = InputFieldHelpers.parseDefaultValue(ctAttribute.Name, inputType, settings, item.Header);\r\n\r\n    const defaultLanguageValue = LocalizationHelpers.getBestValue(\r\n      item.Entity.Attributes[ctAttribute.Name],\r\n      defaultLanguage,\r\n      defaultLanguage,\r\n      BestValueModes.Strict,\r\n    );\r\n    if (defaultLanguageValue === undefined) {\r\n      if (languages.length === 0 || inputType?.DisableI18n) {\r\n        this.addItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, '*', false, ctAttribute.Type);\r\n      } else {\r\n        this.addItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, defaultLanguage, false, ctAttribute.Type);\r\n      }\r\n    } else {\r\n      // most likely used only for entity fields because we can never know if they were cleaned out or brand new\r\n      if (languages.length === 0 || inputType?.DisableI18n) {\r\n        this.updateItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, '*', defaultLanguage, false);\r\n      } else {\r\n        this.updateItemAttributeValue(item.Entity.Guid, ctAttribute.Name, defaultValue, defaultLanguage, defaultLanguage, false);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { LanguageInstance } from '../../models';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LanguageInstanceService extends BaseDataService<LanguageInstance> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('LanguageInstance', serviceElementsFactory);\r\n  }\r\n\r\n  addLanguageInstance(formId: number, currentLanguage: string, defaultLanguage: string, uiLanguage: string, hideHeader: boolean): void {\r\n    const languageInstance: LanguageInstance = { formId, currentLanguage, defaultLanguage, uiLanguage, hideHeader };\r\n    this.addOneToCache(languageInstance);\r\n  }\r\n\r\n  removeLanguageInstance(formId: number): void {\r\n    this.removeOneFromCache(formId);\r\n  }\r\n\r\n  setCurrentLanguage(formId: number, newLanguage: string): void {\r\n    const languageInstance: Partial<LanguageInstance> = { formId, currentLanguage: newLanguage };\r\n    this.updateOneInCache(languageInstance);\r\n  }\r\n\r\n  getCurrentLanguage(formId: number): string {\r\n    return this.cache$.value.find(languageInstance => languageInstance.formId === formId)?.currentLanguage;\r\n  }\r\n\r\n  getCurrentLanguage$(formId: number): Observable<string> {\r\n    return this.cache$.pipe(\r\n      map(languageInstances => languageInstances.find(languageInstance => languageInstance.formId === formId)?.currentLanguage),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  getDefaultLanguage(formId: number): string {\r\n    return this.cache$.value.find(languageInstance => languageInstance.formId === formId)?.defaultLanguage;\r\n  }\r\n\r\n  getDefaultLanguage$(formId: number): Observable<string> {\r\n    return this.cache$.pipe(\r\n      map(languageInstances => languageInstances.find(languageInstance => languageInstance.formId === formId)?.defaultLanguage),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  /** Get hideHeader for the form. Fix for safari and mobile browsers */\r\n  getHideHeader$(formId: number): Observable<boolean> {\r\n    return this.cache$.pipe(\r\n      map(languageInstances => languageInstances.find(languageInstance => languageInstance.formId === formId)?.hideHeader),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  /** Update hideHeader for the form. Fix for safari and mobile browsers */\r\n  updateHideHeader(formId: number, hideHeader: boolean): void {\r\n    const languageInstance: Partial<LanguageInstance> = { formId, hideHeader };\r\n    this.updateOneInCache(languageInstance);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseDataService } from '.';\r\nimport { Language } from '../../models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LanguageService extends BaseDataService<Language> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Language', serviceElementsFactory);\r\n  }\r\n\r\n  loadLanguages(languages: Language[]): void {\r\n    this.addAllToCache(languages);\r\n  }\r\n\r\n  getLanguages(): Language[] {\r\n    return this.cache$.value;\r\n  }\r\n\r\n  getLanguages$(): Observable<Language[]> {\r\n    return this.cache$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Prefetch, PrefetchLinks } from '../../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PrefetchService extends BaseDataService<Prefetch> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Prefetch', serviceElementsFactory);\r\n  }\r\n\r\n  loadPrefetch(prefetch: Prefetch, prefetchGuid: string): void {\r\n    prefetch._guid = prefetchGuid;\r\n    this.upsertOneInCache(prefetch);\r\n  }\r\n\r\n  getPrefetchLinks(): PrefetchLinks {\r\n    const links: PrefetchLinks = {};\r\n    for (const prefetch of this.cache$.value) {\r\n      for (const [linkKey, linkValue] of Object.entries(prefetch.Links)) {\r\n        links[linkKey] = linkValue;\r\n      }\r\n    }\r\n    return links;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { PublishMode, PublishModeConstants, PublishStatus } from '../../models';\r\nimport { EavService } from '../../services';\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PublishStatusService extends BaseDataService<PublishStatus> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('PublishStatus', serviceElementsFactory);\r\n  }\r\n\r\n  setPublishStatus(publishStatus: PublishStatus): void {\r\n    this.upsertOneInCache(publishStatus);\r\n  }\r\n\r\n  removePublishStatus(formId: number): void {\r\n    this.removeOneFromCache(formId);\r\n  }\r\n\r\n  getPublishStatus(formId: number): PublishStatus {\r\n    return this.cache$.value.find(publishStatus => publishStatus.formId === formId);\r\n  }\r\n\r\n  private getPublishStatus$(formId: number): Observable<PublishStatus> {\r\n    return this.cache$.pipe(\r\n      map(publishStatuses => publishStatuses.find(publishStatus => publishStatus.formId === formId)),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  setPublishMode(publishMode: PublishMode, formId: number, eavService: EavService): void {\r\n    // if publish mode is prohibited, set default\r\n    if (eavService.eavConfig.versioningOptions[publishMode] == null) {\r\n      publishMode = Object.keys(eavService.eavConfig.versioningOptions)[0] as PublishMode;\r\n    }\r\n    const publishStatus: PublishStatus = {\r\n      formId,\r\n      DraftShouldBranch: publishMode === PublishModeConstants.Branch,\r\n      IsPublished: publishMode === PublishModeConstants.Show,\r\n    };\r\n    this.setPublishStatus(publishStatus);\r\n  }\r\n\r\n  getPublishMode$(formId: number): Observable<PublishMode> {\r\n    return this.getPublishStatus$(formId).pipe(\r\n      map(publishStatus => {\r\n        const publishMode: PublishMode = publishStatus.DraftShouldBranch\r\n          ? PublishModeConstants.Branch\r\n          : publishStatus.IsPublished ? PublishModeConstants.Show : PublishModeConstants.Hide;\r\n        return publishMode;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export const prefix = 'eav-';\r\nexport const keyZoneId = prefix + 'zoneId';\r\nexport const keyRequestToken = prefix + 'rvt';\r\nexport const keyTabId = prefix + 'tid';\r\nexport const keyContentBlockId = prefix + 'cbid';\r\nexport const keyModuleId = prefix + 'mid';\r\nexport const keyAppId = prefix + 'appId';\r\nexport const keyDebug = prefix + 'debug';\r\nexport const keyDialog = prefix + 'dialog';\r\nexport const keyContentType = prefix + 'contentType';\r\nexport const keyItems = prefix + 'items';\r\nexport const keyPartOfPage = prefix + 'partOfPage';\r\n// 2020-12-01 2dm - not in url any more in 2sxc 11.10.02+, remove this\r\n// Keep in this comment in till January 2021 in case something breaks\r\n// the commit where this was added contains all the changes related to this\r\n// export const keyPortalRoot = prefix + 'portalroot';\r\nexport const keyPublishing = prefix + 'publishing';\r\nexport const keyFilters = prefix + 'filters';\r\nexport const keyPipelineId = prefix + 'pipelineId';\r\nexport const keyApi = prefix + 'api';\r\n\r\n/** Url which opened the dialog. Used for debugging */\r\nexport const keyUrl = prefix + 'url';\r\n\r\n/** This is used by file editor to determine if it's editing shared files or of that portal only */\r\nexport const keyIsShared = prefix + 'isshared';\r\n","import { Dictionary } from '../../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { TranslationLinkConstants } from '../../../shared/constants';\r\n\r\nexport class TranslateMenuHelpers {\r\n\r\n  static getTranslationStateClass(linkType: string) {\r\n    switch (linkType) {\r\n      case TranslationLinkConstants.MissingDefaultLangValue:\r\n        return 'localization-missing-default-lang-value';\r\n      case TranslationLinkConstants.Translate:\r\n      case TranslationLinkConstants.LinkCopyFrom:\r\n        return 'localization-translate';\r\n      case TranslationLinkConstants.DontTranslate:\r\n        return '';\r\n      case TranslationLinkConstants.LinkReadOnly:\r\n        return 'localization-link-read-only';\r\n      case TranslationLinkConstants.LinkReadWrite:\r\n        return 'localization-link-read-write';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static calculateSharedInfoMessage(dimensions: string[], currentLanguage: string): string {\r\n    dimensions = TranslateMenuHelpers.calculateShortDimensions(dimensions, currentLanguage);\r\n    const result = TranslateMenuHelpers.calculateEditAndReadDimensions(dimensions);\r\n    const editableDimensions = result.editableDimensions;\r\n    const readOnlyDimensions = result.readOnlyDimensions;\r\n    let infoMessage = '';\r\n\r\n    const editableExist = editableDimensions.length > 0;\r\n    const readOnlyExist = readOnlyDimensions.length > 0;\r\n    if (editableExist && readOnlyExist) {\r\n      infoMessage = `${editableDimensions.join(', ')}, (${readOnlyDimensions.join(', ')})`;\r\n    } else if (editableExist) {\r\n      infoMessage = editableDimensions.join(', ');\r\n    } else if (readOnlyExist) {\r\n      infoMessage = `(${readOnlyDimensions.join(', ')})`;\r\n    }\r\n\r\n    return infoMessage;\r\n  }\r\n\r\n  private static calculateShortDimensions(dimensions: string[], currentLanguage: string): string[] {\r\n    const dimensionsMap: Dictionary<string[]> = {};\r\n    const shortCurrentLanguage = currentLanguage.slice(0, currentLanguage.indexOf('-'));\r\n\r\n    dimensionsMap[shortCurrentLanguage] = [];\r\n    dimensionsMap[shortCurrentLanguage].push(shortCurrentLanguage);\r\n\r\n    dimensions.forEach(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (!dimensionsMap[shortNoReadOnly]) {\r\n        dimensionsMap[shortNoReadOnly] = [];\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      } else {\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      }\r\n    });\r\n\r\n    dimensions = dimensions.map(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (dimensionsMap[shortNoReadOnly].length > 1) {\r\n        return dimension;\r\n      } else {\r\n        return shortDimension;\r\n      }\r\n    });\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  private static calculateEditAndReadDimensions(dimensions: string[]) {\r\n    const editableDimensions: string[] = [];\r\n    const readOnlyDimensions: string[] = [];\r\n\r\n    dimensions.forEach(dimension => {\r\n      if (!dimension.includes('~')) {\r\n        editableDimensions.push(dimension);\r\n      } else {\r\n        readOnlyDimensions.push(dimension.replace('~', ''));\r\n      }\r\n    });\r\n\r\n    return {\r\n      editableDimensions,\r\n      readOnlyDimensions\r\n    };\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","import { EavEntity, EavEntityAttributes } from '.';\r\nimport { ContentTypeAttribute1 } from '../json-format-v1';\r\n\r\nexport class EavContentTypeAttribute {\r\n  InputType: string;\r\n  IsTitle: boolean;\r\n  Metadata: EavEntity[];\r\n  Name: string;\r\n  Settings: EavEntityAttributes;\r\n  Type: string;\r\n\r\n  private static convertOne(attribute1: ContentTypeAttribute1): EavContentTypeAttribute {\r\n    const metadata = EavEntity.convertMany(attribute1.Metadata);\r\n    const settings = EavEntityAttributes.mergeSettings(metadata);\r\n\r\n    const attribute: EavContentTypeAttribute = {\r\n      InputType: attribute1.InputType,\r\n      IsTitle: attribute1.IsTitle,\r\n      Metadata: metadata,\r\n      Name: attribute1.Name,\r\n      Settings: settings,\r\n      Type: attribute1.Type,\r\n    };\r\n    return attribute;\r\n  }\r\n\r\n  static convertMany(attributes1: ContentTypeAttribute1[]): EavContentTypeAttribute[] {\r\n    if (attributes1 == null) { return []; }\r\n\r\n    const attributes = attributes1.map(attribute1 => EavContentTypeAttribute.convertOne(attribute1));\r\n    return attributes;\r\n  }\r\n}\r\n","import { EavContentTypeAttribute, EavEntity, EavEntityAttributes } from '.';\r\nimport { ContentType1 } from '../json-format-v1';\r\n\r\nexport class EavContentType {\r\n  Attributes: EavContentTypeAttribute[];\r\n  Description: string;\r\n  Id: string;\r\n  Metadata: EavEntity[];\r\n  Name: string;\r\n  Scope: string;\r\n  Settings: EavEntityAttributes;\r\n\r\n  static convert(contentType1: ContentType1): EavContentType {\r\n    const attributes = EavContentTypeAttribute.convertMany(contentType1.Attributes);\r\n    const metadata = EavEntity.convertMany(contentType1.Metadata);\r\n    const settings = EavEntityAttributes.mergeSettings(metadata);\r\n\r\n    const contentType: EavContentType = {\r\n      Attributes: attributes,\r\n      Description: contentType1.Description,\r\n      Id: contentType1.Id,\r\n      Metadata: metadata,\r\n      Name: contentType1.Name,\r\n      Scope: contentType1.Scope,\r\n      Settings: settings,\r\n    };\r\n    return contentType;\r\n  }\r\n}\r\n","export class EavDimension {\r\n  Value: string;\r\n\r\n  static create(value: string): EavDimension {\r\n    const dimension: EavDimension = {\r\n      Value: value,\r\n    };\r\n    return dimension;\r\n  }\r\n}\r\n","import { EavEntity, EavValues } from '.';\r\nimport { EntityAttributes1 } from '../json-format-v1';\r\n\r\nexport class EavEntityAttributes {\r\n  [attributeName: string]: EavValues<any>;\r\n\r\n  static convert(attributes1: EntityAttributes1): EavEntityAttributes {\r\n    const atributes: EavEntityAttributes = {};\r\n\r\n    // loop attribute types - String, Boolean, ...\r\n    for (const [type1, attribute1] of Object.entries(attributes1)) {\r\n      // loop attribute names - Description, Name, ...\r\n      for (const [name1, value1] of Object.entries(attribute1)) {\r\n        atributes[name1] = EavValues.convert(value1, type1);\r\n      }\r\n    }\r\n    return atributes;\r\n  }\r\n\r\n  static mergeSettings(metadataItems: EavEntity[]): EavEntityAttributes {\r\n    if (metadataItems == null) { return {}; }\r\n\r\n    const merged: EavEntityAttributes = {};\r\n    // copy metadata settings which are not @All\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id === '@All') { continue; }\r\n\r\n      for (const [name, value] of Object.entries(item.Attributes)) {\r\n        const copy: EavValues<any> = { ...value };\r\n        merged[name] = copy;\r\n      }\r\n    }\r\n\r\n    // copy @All metadata settings, overwriting previous settings\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id !== '@All') { continue; }\r\n\r\n      for (const [name, value] of Object.entries(item.Attributes)) {\r\n        // do not overwrite previous settings if @All is empty\r\n        const exists = merged[name] != null;\r\n        const emptyAll = value.Values[0].Value === '';\r\n        if (exists && emptyAll) { continue; }\r\n\r\n        const copy: EavValues<any> = { ...value };\r\n        merged[name] = copy;\r\n      }\r\n    }\r\n    return merged;\r\n  }\r\n}\r\n","import { EavEntityAttributes, EavFor, EavType } from '.';\r\nimport { Entity1 } from '../json-format-v1';\r\n\r\nexport class EavEntity {\r\n  Attributes: EavEntityAttributes;\r\n  Guid: string;\r\n  Id: number;\r\n  Owner: string;\r\n  Type: EavType;\r\n  Version: number;\r\n  For?: EavFor;\r\n  Metadata?: EavEntity[];\r\n\r\n  static convertOne(entity1: Entity1): EavEntity {\r\n    // spm 2021.01.26. is empty entity ever used?\r\n    if (entity1 == null) {\r\n      const defaultEntity: EavEntity = {\r\n        Attributes: {},\r\n        Guid: '00000000-0000-0000-0000-000000000000',\r\n        Id: 0,\r\n        Owner: '',\r\n        Type: null,\r\n        Version: 1,\r\n        For: null,\r\n        Metadata: null,\r\n      };\r\n      return defaultEntity;\r\n    }\r\n\r\n    const attributes = EavEntityAttributes.convert(entity1.Attributes);\r\n    const metadata = this.convertMany(entity1.Metadata);\r\n\r\n    const entity: EavEntity = {\r\n      Attributes: attributes,\r\n      Guid: entity1.Guid,\r\n      Id: entity1.Id,\r\n      Owner: entity1.Owner,\r\n      Type: entity1.Type,\r\n      Version: entity1.Version,\r\n      For: entity1.For,\r\n      Metadata: metadata,\r\n    };\r\n    return entity;\r\n  }\r\n\r\n  static convertMany(entities1: Entity1[]): EavEntity[] {\r\n    if (entities1 == null) { return null; }\r\n\r\n    const entities = entities1.map(entity1 => EavEntity.convertOne(entity1));\r\n    return entities;\r\n  }\r\n}\r\n","import { EavEntity, EavHeader } from '.';\r\nimport { Item1 } from '../json-format-v1';\r\n\r\nexport class EavItem {\r\n  Entity: EavEntity;\r\n  Header: EavHeader;\r\n\r\n  static convert(item1: Item1): EavItem {\r\n    const entity = EavEntity.convertOne(item1.Entity);\r\n\r\n    const item: EavItem = {\r\n      Entity: entity,\r\n      Header: item1.Header,\r\n    };\r\n    return item;\r\n  }\r\n}\r\n","import { EavDimension } from '.';\r\nimport { Value1 } from '../json-format-v1';\r\n\r\nexport class EavValue<T> {\r\n  Value: T;\r\n  Dimensions: EavDimension[];\r\n\r\n  static create<T>(value: T, dimensions: EavDimension[]): EavValue<T> {\r\n    const eavValue: EavValue<T> = {\r\n      Value: value,\r\n      Dimensions: dimensions,\r\n    };\r\n    return eavValue;\r\n  }\r\n\r\n  static convert<T>(value1: Value1<T>): EavValue<T>[] {\r\n    const values = Object.entries(value1).map(([langs, value]) => {\r\n      const dimensions = langs.split(',').map(lang => EavDimension.create(lang));\r\n      return this.create(value, dimensions);\r\n    });\r\n    return values;\r\n  }\r\n}\r\n","import { EavValue } from '.';\r\nimport { Value1 } from '../json-format-v1';\r\n\r\nexport class EavValues<T> {\r\n  Values: EavValue<T>[];\r\n  Type: string;\r\n\r\n  static convert<T>(value1: Value1<T>, type: string): EavValues<T> {\r\n    const values = EavValue.convert(value1);\r\n\r\n    const eavValues: EavValues<T> = {\r\n      Values: values,\r\n      Type: type,\r\n    };\r\n    return eavValues;\r\n  }\r\n}\r\n","export class DialogTypeConstants {\r\n  public static readonly Zone = 'zone';\r\n  public static readonly AppImport = 'app-import';\r\n  public static readonly App = 'app';\r\n  public static readonly ContentType = 'contenttype';\r\n  public static readonly ContentItems = 'contentitems';\r\n  public static readonly Edit = 'edit';\r\n  public static readonly ItemHistory = 'item-history';\r\n  public static readonly Develop = 'develop';\r\n  public static readonly PipelineDesigner = 'pipeline-designer';\r\n  public static readonly Replace = 'replace';\r\n  public static readonly InstanceList = 'instance-list';\r\n}\r\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { keyAppId, keyContentBlockId, keyModuleId, keyRequestToken, keyTabId, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { consoleLogAngular } from '../helpers/console-log-angular.helper';\r\nimport { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n/** The context provides information */\r\n@Injectable()\r\nexport class Context {\r\n\r\n  /** Id of current context */\r\n  public id: number;\r\n\r\n  /** Determines if the context is ready to use, and everything is initialized */\r\n  public ready = false;\r\n\r\n  /** The parent, for hierarchical lookup */\r\n  private parent: Context;\r\n\r\n  private routeSnapshot: ActivatedRouteSnapshot;\r\n\r\n  /** The current Zone ID */\r\n  get zoneId(): number {\r\n    return this._zoneId || (this._zoneId = this.routeNum(keyZoneId) || this.parent.zoneId);\r\n  }\r\n  private _zoneId: number;\r\n\r\n  /** The current App ID */\r\n  get appId(): number {\r\n    return (this._appId != null) ? this._appId : (this._appId = this.routeNum(keyAppId) || this.parent.appId);\r\n  }\r\n  private _appId: number;\r\n\r\n  /**\r\n   * The request verification token for http requests.\r\n   * It's only loaded from the root, never from sub-contexts\r\n   */\r\n  get requestToken(): string { return this._rvt || (this._rvt = this.parent.requestToken); }\r\n  private _rvt: string;\r\n\r\n  /** Tab Id is global */\r\n  get tabId(): number {\r\n    return this._tabId || (this._tabId = this.routeNum(keyTabId) || this.parent.tabId);\r\n  }\r\n  private _tabId: number;\r\n\r\n  /** Content Block Id is global */\r\n  get contentBlockId(): number {\r\n    return this._contentBlockId || (this._contentBlockId = this.routeNum(keyContentBlockId) || this.parent.contentBlockId);\r\n  }\r\n  private _contentBlockId: number;\r\n\r\n  /** Module Id is global */\r\n  get moduleId(): number {\r\n    return this._moduleId || (this._moduleId = this.routeNum(keyModuleId) || this.parent.moduleId);\r\n  }\r\n  private _moduleId: number;\r\n\r\n  constructor(@Optional() @SkipSelf() parentContext: Context) {\r\n    this.parent = parentContext;\r\n\r\n    // spm NOTE: I've given id to every context to make it easier to follow how things work\r\n    if (!window.contextId) { window.contextId = 0; }\r\n    this.id = window.contextId++;\r\n    consoleLogAngular('Context.constructor', this);\r\n  }\r\n\r\n  /**\r\n   * This is the initializer at entry-componets of modules.\r\n   * It ensures that within that module, the context has the values given by the route\r\n   */\r\n  init(route: ActivatedRoute) {\r\n    this.routeSnapshot = route && route.snapshot;\r\n    this.clearCachedValues();\r\n    this.ready = route != null;\r\n    consoleLogAngular('Context.init', this, route);\r\n  }\r\n\r\n  initRoot() {\r\n    // required, global things\r\n    this._rvt = sessionStorage.getItem(keyRequestToken);\r\n    this._zoneId = this.sessionNumber(keyZoneId);\r\n    this._tabId = this.sessionNumber(keyTabId);\r\n    this._contentBlockId = this.sessionNumber(keyContentBlockId);\r\n    this._moduleId = this.sessionNumber(keyModuleId);\r\n\r\n    if (!this._rvt || !this._zoneId || !this._tabId || !this._contentBlockId || !this._moduleId) {\r\n      throw new Error('Context is missing some of the required parameters');\r\n    }\r\n\r\n    // optional global things\r\n    this._appId = this.sessionNumber(keyAppId);\r\n\r\n    this.ready = true;\r\n    consoleLogAngular('Context.initRoot', this);\r\n  }\r\n\r\n  private sessionNumber(name: string): number {\r\n    const result = sessionStorage.getItem(name);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get a number from the route, or optionally its parents.\r\n   * Returns value in route or null\r\n   */\r\n  private routeNum(name: string): number {\r\n    // catch case where state is null, like when the recursive parent is in use\r\n    if (this.routeSnapshot == null) { return null; }\r\n\r\n    const paramName = name.substring(prefix.length);\r\n    const result = this.routeSnapshot.paramMap.get(paramName);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears cached values. Required when one module instance is opened multiple times,\r\n   * e.g. Apps Management -> App Admin for appId 2 -> back -> App Admin for appId 17.\r\n   * Module is reused, and so is context and it contains values for previous appId.\r\n   */\r\n  private clearCachedValues() {\r\n    this._zoneId = null;\r\n    this._appId = null;\r\n    this._rvt = null;\r\n    this._tabId = null;\r\n    this._contentBlockId = null;\r\n    this._moduleId = null;\r\n  }\r\n}\r\n","export const componentMetadataKey = 'componentMetadata';\r\n","export enum FeaturesConstants {\r\n  PasteWithFormatting = '1b13e0e6-a346-4454-a1e6-2fb18c047d20',\r\n  PasteImageFromClipboard = 'f6b8d6da-4744-453b-9543-0de499aa2352',\r\n}\r\n","export enum TranslationLinkConstants {\r\n  Translate = 'Translate',\r\n  DontTranslate = 'DontTranslate',\r\n  MissingDefaultLangValue = 'MissingDefaultLangValue',\r\n  LinkReadOnly = 'LinkReadOnly',\r\n  LinkReadWrite = 'LinkReadWrite',\r\n  LinkCopyFrom = 'LinkCopyFrom',\r\n}\r\n","export enum BestValueModes {\r\n  Default = 'Default',\r\n  Strict = 'Strict',\r\n}\r\n\r\nexport type BestValueMode = keyof typeof BestValueModes;\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { EavConfig } from '../models';\r\n\r\nexport class UrlHelpers {\r\n\r\n  static stripNonUrlCharacters(controlValue: string, allowPath: boolean, trimEnd: boolean) {\r\n    if (!controlValue) { return ''; }\r\n\r\n    const rexSeparators = allowPath ? /[^a-z0-9-_/]+/gi : /[^a-z0-9-_]+/gi;\r\n    const latinized = this.latinizeText(controlValue.toLowerCase());\r\n    const cleanInputValue = latinized\r\n      .replace(`'s `, 's ') // neutralize it's, daniel's etc. but only if followed by a space, to ensure we don't kill quotes\r\n      .replace('\\\\', '/') // neutralize slash representation\r\n      .replace(rexSeparators, '-') // replace everything we don't want with a -\r\n      .replace(/-+/gi, '-') // reduce multiple '-'\r\n      .replace(/\\/+/gi, '/') // reduce multiple slashes\r\n      .replace(/-*\\/-*/gi, '/') // reduce '-/' or '/-' combinations to a simple '/'\r\n      .replace(trimEnd ? /^-|-+$/gi : /^-/gi, ''); // trim front and maybe end '-'\r\n    return cleanInputValue;\r\n  }\r\n\r\n  static latinizeText(input: string) {\r\n    const latinMap: Dictionary<string> = {\r\n      Á: 'A', Ă: 'A', Ắ: 'A', Ặ: 'A', Ằ: 'A', Ẳ: 'A', Ẵ: 'A', Ǎ: 'A', Â: 'A', Ấ: 'A', Ậ: 'A',\r\n      Ầ: 'A', Ẩ: 'A', Ẫ: 'A', Ä: 'Ae', Ǟ: 'A', Ȧ: 'A', Ǡ: 'A', Ạ: 'A', Ȁ: 'A', À: 'A', Ả: 'A', Ȃ: 'A',\r\n      Ā: 'A', Ą: 'A', Å: 'A', Ǻ: 'A', Ḁ: 'A', Ⱥ: 'A', Ã: 'A', Ꜳ: 'AA', Æ: 'AE', Ǽ: 'AE', Ǣ: 'AE',\r\n      Ꜵ: 'AO', Ꜷ: 'AU', Ꜹ: 'AV', Ꜻ: 'AV', Ꜽ: 'AY', Ḃ: 'B', Ḅ: 'B', Ɓ: 'B', Ḇ: 'B', Ƀ: 'B',\r\n      Ƃ: 'B', Ć: 'C', Č: 'C', Ç: 'C', Ḉ: 'C', Ĉ: 'C', Ċ: 'C', Ƈ: 'C', Ȼ: 'C', Ď: 'D', Ḑ: 'D',\r\n      Ḓ: 'D', Ḋ: 'D', Ḍ: 'D', Ɗ: 'D', Ḏ: 'D', ǲ: 'D', ǅ: 'D', Đ: 'D', Ƌ: 'D', Ǳ: 'DZ', Ǆ: 'DZ',\r\n      É: 'E', Ĕ: 'E', Ě: 'E', Ȩ: 'E', Ḝ: 'E', Ê: 'E', Ế: 'E', Ệ: 'E', Ề: 'E', Ể: 'E', Ễ: 'E', Ḙ: 'E',\r\n      Ë: 'E', Ė: 'E', Ẹ: 'E', Ȅ: 'E', È: 'E', Ẻ: 'E', Ȇ: 'E', Ē: 'E', Ḗ: 'E', Ḕ: 'E', Ę: 'E', Ɇ: 'E',\r\n      Ẽ: 'E', Ḛ: 'E', Ꝫ: 'ET', Ḟ: 'F', Ƒ: 'F', Ǵ: 'G', Ğ: 'G', Ǧ: 'G', Ģ: 'G', Ĝ: 'G', Ġ: 'G', Ɠ: 'G',\r\n      Ḡ: 'G', Ǥ: 'G', Ḫ: 'H', Ȟ: 'H', Ḩ: 'H', Ĥ: 'H', Ⱨ: 'H', Ḧ: 'H', Ḣ: 'H', Ḥ: 'H', Ħ: 'H', Í: 'I',\r\n      Ĭ: 'I', Ǐ: 'I', Î: 'I', Ï: 'I', Ḯ: 'I', İ: 'I', Ị: 'I', Ȉ: 'I', Ì: 'I', Ỉ: 'I', Ȋ: 'I', Ī: 'I',\r\n      Į: 'I', Ɨ: 'I', Ĩ: 'I', Ḭ: 'I', Ꝺ: 'D', Ꝼ: 'F', Ᵹ: 'G', Ꞃ: 'R', Ꞅ: 'S', Ꞇ: 'T', Ꝭ: 'IS', Ĵ: 'J',\r\n      Ɉ: 'J', Ḱ: 'K', Ǩ: 'K', Ķ: 'K', Ⱪ: 'K', Ꝃ: 'K', Ḳ: 'K', Ƙ: 'K', Ḵ: 'K', Ꝁ: 'K', Ꝅ: 'K', Ĺ: 'L',\r\n      Ƚ: 'L', Ľ: 'L', Ļ: 'L', Ḽ: 'L', Ḷ: 'L', Ḹ: 'L', Ⱡ: 'L', Ꝉ: 'L', Ḻ: 'L', Ŀ: 'L', Ɫ: 'L', ǈ: 'L',\r\n      Ł: 'L', Ǉ: 'LJ', Ḿ: 'M', Ṁ: 'M', Ṃ: 'M', Ɱ: 'M', Ń: 'N', Ň: 'N', Ņ: 'N', Ṋ: 'N', Ṅ: 'N', Ṇ: 'N',\r\n      Ǹ: 'N', Ɲ: 'N', Ṉ: 'N', Ƞ: 'N', ǋ: 'N', Ñ: 'N', Ǌ: 'NJ', Ó: 'O', Ŏ: 'O', Ǒ: 'O', Ô: 'O', Ố: 'O',\r\n      Ộ: 'O', Ồ: 'O', Ổ: 'O', Ỗ: 'O', Öe: 'O', Ȫ: 'O', Ȯ: 'O', Ȱ: 'O', Ọ: 'O', Ő: 'O', Ȍ: 'O', Ò: 'O',\r\n      Ỏ: 'O', Ơ: 'O', Ớ: 'O', Ợ: 'O', Ờ: 'O', Ở: 'O', Ỡ: 'O', Ȏ: 'O', Ꝋ: 'O', Ꝍ: 'O', Ō: 'O', Ṓ: 'O',\r\n      Ṑ: 'O', Ɵ: 'O', Ǫ: 'O', Ǭ: 'O', Ø: 'O', Ǿ: 'O', Õ: 'O', Ṍ: 'O', Ṏ: 'O', Ȭ: 'O', Ƣ: 'OI', Ꝏ: 'OO',\r\n      Ɛ: 'E', Ɔ: 'O', Ȣ: 'OU', Ṕ: 'P', Ṗ: 'P', Ꝓ: 'P', Ƥ: 'P', Ꝕ: 'P', Ᵽ: 'P', Ꝑ: 'P', Ꝙ: 'Q', Ꝗ: 'Q',\r\n      Ŕ: 'R', Ř: 'R', Ŗ: 'R', Ṙ: 'R', Ṛ: 'R', Ṝ: 'R', Ȑ: 'R', Ȓ: 'R', Ṟ: 'R', Ɍ: 'R', Ɽ: 'R', Ꜿ: 'C',\r\n      Ǝ: 'E', Ś: 'S', Ṥ: 'S', Š: 'S', Ṧ: 'S', Ş: 'S', Ŝ: 'S', Ș: 'S', Ṡ: 'S', Ṣ: 'S', Ṩ: 'S', Ť: 'T',\r\n      Ţ: 'T', Ṱ: 'T', Ț: 'T', Ⱦ: 'T', Ṫ: 'T', Ṭ: 'T', Ƭ: 'T', Ṯ: 'T', Ʈ: 'T', Ŧ: 'T', Ɐ: 'A', Ꞁ: 'L',\r\n      Ɯ: 'M', Ʌ: 'V', Ꜩ: 'TZ', Ú: 'U', Ŭ: 'U', Ǔ: 'U', Û: 'U', Ṷ: 'U', Ü: 'Ue', Ǘ: 'U', Ǚ: 'U', Ǜ: 'U',\r\n      Ǖ: 'U', Ṳ: 'U', Ụ: 'U', Ű: 'U', Ȕ: 'U', Ù: 'U', Ủ: 'U', Ư: 'U', Ứ: 'U', Ự: 'U', Ừ: 'U', Ử: 'U',\r\n      Ữ: 'U', Ȗ: 'U', Ū: 'U', Ṻ: 'U', Ų: 'U', Ů: 'U', Ũ: 'U', Ṹ: 'U', Ṵ: 'U', Ꝟ: 'V', Ṿ: 'V', Ʋ: 'V',\r\n      Ṽ: 'V', Ꝡ: 'VY', Ẃ: 'W', Ŵ: 'W', Ẅ: 'W', Ẇ: 'W', Ẉ: 'W', Ẁ: 'W', Ⱳ: 'W', Ẍ: 'X', Ẋ: 'X', Ý: 'Y',\r\n      Ŷ: 'Y', Ÿ: 'Y', Ẏ: 'Y', Ỵ: 'Y', Ỳ: 'Y', Ƴ: 'Y', Ỷ: 'Y', Ỿ: 'Y', Ȳ: 'Y', Ɏ: 'Y', Ỹ: 'Y', Ź: 'Z',\r\n      Ž: 'Z', Ẑ: 'Z', Ⱬ: 'Z', Ż: 'Z', Ẓ: 'Z', Ȥ: 'Z', Ẕ: 'Z', Ƶ: 'Z', Ĳ: 'IJ', Œ: 'OE', ᴀ: 'A', ᴁ: 'AE',\r\n      ʙ: 'B', ᴃ: 'B', ᴄ: 'C', ᴅ: 'D', ᴇ: 'E', ꜰ: 'F', ɢ: 'G', ʛ: 'G', ʜ: 'H', ɪ: 'I', ʁ: 'R', ᴊ: 'J',\r\n      ᴋ: 'K', ʟ: 'L', ᴌ: 'L', ᴍ: 'M', ɴ: 'N', ᴏ: 'O', ɶ: 'OE', ᴐ: 'O', ᴕ: 'OU', ᴘ: 'P', ʀ: 'R', ᴎ: 'N',\r\n      ᴙ: 'R', ꜱ: 'S', ᴛ: 'T', ⱻ: 'E', ᴚ: 'R', ᴜ: 'U', ᴠ: 'V', ᴡ: 'W', ʏ: 'Y', ᴢ: 'Z', á: 'a', ă: 'a',\r\n      ắ: 'a', ặ: 'a', ằ: 'a', ẳ: 'a', ẵ: 'a', ǎ: 'a', â: 'a', ấ: 'a', ậ: 'a', ầ: 'a', ẩ: 'a', ẫ: 'a',\r\n      ä: 'ae', ǟ: 'a', ȧ: 'a', ǡ: 'a', ạ: 'a', ȁ: 'a', à: 'a', ả: 'a', ȃ: 'a', ā: 'a', ą: 'a', ᶏ: 'a',\r\n      ẚ: 'a', å: 'a', ǻ: 'a',\r\n      ḁ: 'a', ⱥ: 'a', ã: 'a', ꜳ: 'aa', æ: 'ae', ǽ: 'ae', ǣ: 'ae', ꜵ: 'ao', ꜷ: 'au', ꜹ: 'av', ꜻ: 'av',\r\n      ꜽ: 'ay', ḃ: 'b', ḅ: 'b', ɓ: 'b', ḇ: 'b', ᵬ: 'b', ᶀ: 'b', ƀ: 'b', ƃ: 'b', ɵ: 'o', ć: 'c', č: 'c',\r\n      ç: 'c', ḉ: 'c', ĉ: 'c', ɕ: 'c', ċ: 'c', ƈ: 'c', ȼ: 'c', ď: 'd', ḑ: 'd', ḓ: 'd', ȡ: 'd', ḋ: 'd',\r\n      ḍ: 'd', ɗ: 'd', ᶑ: 'd', ḏ: 'd', ᵭ: 'd', ᶁ: 'd', đ: 'd', ɖ: 'd', ƌ: 'd', ı: 'i', ȷ: 'j', ɟ: 'j',\r\n      ʄ: 'j', ǳ: 'dz', ǆ: 'dz', é: 'e', ĕ: 'e', ě: 'e', ȩ: 'e', ḝ: 'e', ê: 'e', ế: 'e', ệ: 'e', ề: 'e',\r\n      ể: 'e', ễ: 'e', ḙ: 'e', ë: 'e', ė: 'e', ẹ: 'e', ȅ: 'e', è: 'e', ẻ: 'e', ȇ: 'e', ē: 'e', ḗ: 'e',\r\n      ḕ: 'e', ⱸ: 'e', ę: 'e', ᶒ: 'e', ɇ: 'e', ẽ: 'e', ḛ: 'e', ꝫ: 'et', ḟ: 'f', ƒ: 'f', ᵮ: 'f', ᶂ: 'f',\r\n      ǵ: 'g', ğ: 'g', ǧ: 'g', ģ: 'g', ĝ: 'g', ġ: 'g', ɠ: 'g', ḡ: 'g', ᶃ: 'g', ǥ: 'g', ḫ: 'h', ȟ: 'h',\r\n      ḩ: 'h', ĥ: 'h', ⱨ: 'h', ḧ: 'h', ḣ: 'h', ḥ: 'h', ɦ: 'h', ẖ: 'h', ħ: 'h', ƕ: 'hv', í: 'i', ĭ: 'i',\r\n      ǐ: 'i', î: 'i', ï: 'i', ḯ: 'i', ị: 'i', ȉ: 'i', ì: 'i', ỉ: 'i', ȋ: 'i', ī: 'i', į: 'i', ᶖ: 'i',\r\n      ɨ: 'i', ĩ: 'i', ḭ: 'i', ꝺ: 'd', ꝼ: 'f', ᵹ: 'g', ꞃ: 'r', ꞅ: 's', ꞇ: 't', ꝭ: 'is', ǰ: 'j', ĵ: 'j',\r\n      ʝ: 'j', ɉ: 'j', ḱ: 'k', ǩ: 'k', ķ: 'k', ⱪ: 'k', ꝃ: 'k', ḳ: 'k', ƙ: 'k', ḵ: 'k', ᶄ: 'k', ꝁ: 'k',\r\n      ꝅ: 'k', ĺ: 'l', ƚ: 'l', ɬ: 'l', ľ: 'l', ļ: 'l', ḽ: 'l', ȴ: 'l', ḷ: 'l', ḹ: 'l', ⱡ: 'l', ꝉ: 'l',\r\n      ḻ: 'l', ŀ: 'l', ɫ: 'l', ᶅ: 'l', ɭ: 'l', ł: 'l', ǉ: 'lj', ſ: 's', ẜ: 's', ẛ: 's', ẝ: 's', ḿ: 'm',\r\n      ṁ: 'm', ṃ: 'm', ɱ: 'm', ᵯ: 'm', ᶆ: 'm', ń: 'n', ň: 'n', ņ: 'n', ṋ: 'n', ȵ: 'n', ṅ: 'n', ṇ: 'n',\r\n      ǹ: 'n', ɲ: 'n', ṉ: 'n', ƞ: 'n', ᵰ: 'n', ᶇ: 'n', ɳ: 'n', ñ: 'n', ǌ: 'nj', ó: 'o', ŏ: 'o', ǒ: 'o',\r\n      ô: 'o', ố: 'o', ộ: 'o', ồ: 'o', ổ: 'o', ỗ: 'o', ö: 'oe', ȫ: 'o', ȯ: 'o', ȱ: 'o', ọ: 'o', ő: 'o',\r\n      ȍ: 'o', ò: 'o', ỏ: 'o', ơ: 'o', ớ: 'o', ợ: 'o', ờ: 'o', ở: 'o', ỡ: 'o', ȏ: 'o', ꝋ: 'o', ꝍ: 'o',\r\n      ⱺ: 'o', ō: 'o', ṓ: 'o', ṑ: 'o', ǫ: 'o', ǭ: 'o', ø: 'o', ǿ: 'o', õ: 'o', ṍ: 'o', ṏ: 'o', ȭ: 'o',\r\n      ƣ: 'oi', ꝏ: 'oo', ɛ: 'e', ᶓ: 'e', ɔ: 'o', ᶗ: 'o', ȣ: 'ou', ṕ: 'p', ṗ: 'p', ꝓ: 'p', ƥ: 'p', ᵱ: 'p',\r\n      ᶈ: 'p', ꝕ: 'p', ᵽ: 'p', ꝑ: 'p', ꝙ: 'q', ʠ: 'q', ɋ: 'q', ꝗ: 'q', ŕ: 'r', ř: 'r', ŗ: 'r', ṙ: 'r',\r\n      ṛ: 'r', ṝ: 'r', ȑ: 'r', ɾ: 'r', ᵳ: 'r', ȓ: 'r', ṟ: 'r', ɼ: 'r', ᵲ: 'r', ᶉ: 'r', ɍ: 'r', ɽ: 'r',\r\n      ↄ: 'c', ꜿ: 'c', ɘ: 'e', ɿ: 'r', ß: 'ss', ś: 's', ṥ: 's', š: 's', ṧ: 's', ş: 's', ŝ: 's', ș: 's',\r\n      ṡ: 's', ṣ: 's', ṩ: 's', ʂ: 's', ᵴ: 's', ᶊ: 's', ȿ: 's', ɡ: 'g', ᴑ: 'o', ᴓ: 'o', ᴝ: 'u', ť: 't',\r\n      ţ: 't', ṱ: 't', ț: 't', ȶ: 't', ẗ: 't', ⱦ: 't', ṫ: 't', ṭ: 't', ƭ: 't', ṯ: 't', ᵵ: 't', ƫ: 't',\r\n      ʈ: 't', ŧ: 't', ᵺ: 'th', ɐ: 'a', ᴂ: 'ae', ǝ: 'e', ᵷ: 'g', ɥ: 'h', ʮ: 'h', ʯ: 'h', ᴉ: 'i', ʞ: 'k',\r\n      ꞁ: 'l', ɯ: 'm', ɰ: 'm', ᴔ: 'oe', ɹ: 'r', ɻ: 'r', ɺ: 'r', ⱹ: 'r', ʇ: 't', ʌ: 'v', ʍ: 'w', ʎ: 'y',\r\n      ꜩ: 'tz', ú: 'u', ŭ: 'u', ǔ: 'u', û: 'u', ṷ: 'u', ü: 'ue', ǘ: 'u', ǚ: 'u', ǜ: 'u', ǖ: 'u', ṳ: 'u',\r\n      ụ: 'u', ű: 'u', ȕ: 'u', ù: 'u', ủ: 'u', ư: 'u', ứ: 'u', ự: 'u', ừ: 'u', ử: 'u', ữ: 'u', ȗ: 'u',\r\n      ū: 'u', ṻ: 'u', ų: 'u', ᶙ: 'u', ů: 'u', ũ: 'u', ṹ: 'u', ṵ: 'u', ᵫ: 'ue', ꝸ: 'um', ⱴ: 'v', ꝟ: 'v',\r\n      ṿ: 'v', ʋ: 'v', ᶌ: 'v', ⱱ: 'v', ṽ: 'v', ꝡ: 'vy', ẃ: 'w', ŵ: 'w', ẅ: 'w', ẇ: 'w', ẉ: 'w', ẁ: 'w',\r\n      ⱳ: 'w', ẘ: 'w', ẍ: 'x', ẋ: 'x', ᶍ: 'x', ý: 'y', ŷ: 'y', ÿ: 'y', ẏ: 'y', ỵ: 'y', ỳ: 'y', ƴ: 'y',\r\n      ỷ: 'y', ỿ: 'y', ȳ: 'y', ẙ: 'y', ɏ: 'y', ỹ: 'y', ź: 'z', ž: 'z', ẑ: 'z', ʑ: 'z', ⱬ: 'z', ż: 'z',\r\n      ẓ: 'z', ȥ: 'z', ẕ: 'z', ᵶ: 'z', ᶎ: 'z', ʐ: 'z', ƶ: 'z', ɀ: 'z', ﬀ: 'ff', ﬃ: 'ffi', ﬄ: 'ffl', ﬁ: 'fi',\r\n      ﬂ: 'fl', ĳ: 'ij', œ: 'oe', ﬆ: 'st', ₐ: 'a', ₑ: 'e', ᵢ: 'i', ⱼ: 'j', ₒ: 'o', ᵣ: 'r', ᵤ: 'u', ᵥ: 'v',\r\n      ₓ: 'x',\r\n    };\r\n    return input.replace(/[^A-Za-z0-9\\[\\] ]/g, (a) => (latinMap[a] || a));\r\n  }\r\n\r\n  static readQueryStringParameters(url: string): Dictionary<string> {\r\n    const queryParams: Dictionary<string> = {};\r\n    url.split('&').forEach(f => {\r\n      if (f.split('=').length === 2) {\r\n        queryParams[f.split('=')[0]] = decodeURIComponent(f.split('=')[1].replace(/\\+/g, ' '));\r\n      }\r\n    });\r\n    return queryParams;\r\n  }\r\n\r\n  /** https://stackoverflow.com/questions/979975/how-to-get-the-value-from-the-get-parameters/1099670#1099670 */\r\n  static getUrlParams(qs: string) {\r\n    qs = qs.split('+').join(' ');\r\n\r\n    const params: Dictionary<string> = {};\r\n    let tokens;\r\n    const re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n    // tslint:disable-next-line:no-conditional-assignment\r\n    while (tokens = re.exec(qs)) {\r\n      params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  static replaceUrlParam(url: string, paramName: string, paramValue: string) {\r\n    if (paramValue === null) { paramValue = ''; }\r\n\r\n    const pattern = new RegExp('\\\\b(' + paramName + '=).*?(&|#|$)');\r\n    if (url.search(pattern) >= 0) { return url.replace(pattern, '$1' + paramValue + '$2'); }\r\n\r\n    url = url.replace(/[?#]$/, '');\r\n    return url + (url.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;\r\n  }\r\n\r\n  static getUrlPrefix(area: string, eavConfig: EavConfig) {\r\n    let result = '';\r\n\r\n    if (area === 'system') { result = eavConfig.systemRoot; } // used to link to JS-stuff and similar\r\n    if (area === 'zone') { result = eavConfig.portalRoot; } // used to link to the site-root (like an image)\r\n    if (area === 'app') { result = eavConfig.appRoot; } // used to find the app-root of something inside an app\r\n    if (result.endsWith('/')) { result = result.substring(0, result.length - 1); }\r\n\r\n    return result;\r\n  }\r\n\r\n  static calculatePathFromRoot(route: ActivatedRoute) {\r\n    let lastChild = route;\r\n    while (lastChild.firstChild) {\r\n      lastChild = lastChild.firstChild;\r\n    }\r\n    let pathFromRoot = '';\r\n    for (const path of lastChild.snapshot.pathFromRoot) {\r\n      if (path.url.length <= 0) { continue; }\r\n      for (const urlSegment of path.url) {\r\n        if (!urlSegment.path) { continue; }\r\n        pathFromRoot += '/' + urlSegment.path;\r\n      }\r\n    }\r\n    return pathFromRoot;\r\n  }\r\n}\r\n","export enum WrappersConstants {\r\n  // Empty specific\r\n  CollapsibleWrapper = 'app-collapsible-wrapper',\r\n  // Default wrappers\r\n  HiddenWrapper = 'app-hidden-wrapper',\r\n  DropzoneWrapper = 'app-dropzone-wrapper',\r\n  LocalizationWrapper = 'app-localization-wrapper',\r\n  ExpandableWrapper = 'app-expandable-wrapper',\r\n  AdamAttachWrapper = 'app-adam-attach-wrapper',\r\n  // Entity specific\r\n  EntityExpandableWrapper = 'app-entity-expandable-wrapper',\r\n  // Hyperlink specific\r\n  HyperlinkDefaultExpandableWrapper = 'app-hyperlink-default-expandable-wrapper',\r\n  HyperlinkLibraryExpandableWrapper = 'app-hyperlink-library-expandable-wrapper',\r\n}\r\n","import { UrlMatchResult, UrlSegment } from '@angular/router';\r\nimport { EditPosParams } from './edit-matcher.models';\r\n\r\n/**\r\n * ':zoneId/:appId/edit/:items'\r\n * ':zoneId/:appId/edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * ':zoneId/:appId/edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function editRoot(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 4) { return null; }\r\n  if (url[2].path !== 'edit') { return null; }\r\n  const hasDetails = url[4] != null && url[4].path === 'details' && url[5] != null && url[6] != null;\r\n  const hasUpdate = url[4] != null && url[4].path === 'update' && url[5] != null && url[6] != null;\r\n  const posParams: EditPosParams = {\r\n    zoneId: url[0],\r\n    appId: url[1],\r\n    items: url[3],\r\n    ...(hasDetails && { detailsEntityGuid: url[5], detailsFieldId: url[6] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[5], updateFieldId: url[6] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 7 : 4),\r\n    posParams: posParams as any,\r\n  };\r\n  return match;\r\n}\r\n\r\n/** ':zoneId/:appId/edit/refresh/:items' */\r\nexport function refreshEditRoot(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 5) { return null; }\r\n  if (url[2].path !== 'edit' || url[3].path !== 'refresh') { return null; }\r\n  const posParams: EditPosParams = {\r\n    zoneId: url[0],\r\n    appId: url[1],\r\n    items: url[4],\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, 5),\r\n    posParams: posParams as any,\r\n  };\r\n  return match;\r\n}\r\n\r\n/**\r\n * 'edit/:items'\r\n * 'edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * 'edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function edit(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 2) { return null; }\r\n  if (url[0].path !== 'edit') { return null; }\r\n  const hasDetails = url[2] != null && url[2].path === 'details' && url[3] != null && url[4] != null;\r\n  const hasUpdate = url[2] != null && url[2].path === 'update' && url[3] != null && url[4] != null;\r\n  const posParams: EditPosParams = {\r\n    items: url[1],\r\n    ...(hasDetails && { detailsEntityGuid: url[3], detailsFieldId: url[4] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[3], updateFieldId: url[4] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 5 : 2),\r\n    posParams: posParams as any,\r\n  };\r\n  return match;\r\n}\r\n\r\n/** 'edit/refresh/:items' */\r\nexport function refreshEdit(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 3) { return null; }\r\n  if (url[0].path !== 'edit' || url[1].path !== 'refresh') { return null; }\r\n  const posParams: EditPosParams = {\r\n    items: url[2],\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, 3),\r\n    posParams: posParams as any,\r\n  };\r\n  return match;\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { EavWindow } from '../../../ng-dialogs/src/app/shared/models/eav-window.model';\r\nimport { ElementEventListener } from '../models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport class DropzoneDraggingHelper {\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(private zone: NgZone) { }\r\n\r\n  /** Starts listening for dragover and drop events on a given element */\r\n  attach(htmlEl: HTMLElement) {\r\n    this.zone.runOutsideAngular(() => {\r\n      htmlEl.addEventListener('dragover', dragoverListener, { passive: true });\r\n      htmlEl.addEventListener('drop', dropListener, { passive: true });\r\n\r\n      this.eventListeners.push(\r\n        { element: htmlEl, type: 'dragover', listener: dragoverListener },\r\n        { element: htmlEl, type: 'drop', listener: dropListener },\r\n      );\r\n\r\n      function dragoverListener() {\r\n        clearTimeouts(window.windowBodyTimeouts); // clear timeouts from global array of timeouts which clear draggingClass from body\r\n        document.body.classList.add(window.draggingClass);\r\n      }\r\n      function dropListener() {\r\n        document.body.classList.remove(window.draggingClass);\r\n      }\r\n      function clearTimeouts(timeoutsArray: number[]) {\r\n        for (const timeout of timeoutsArray) {\r\n          clearTimeout(timeout);\r\n        }\r\n        timeoutsArray.splice(0, timeoutsArray.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Removes event listeners from registered elements */\r\n  detach() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(eventListener => {\r\n        const element = eventListener.element;\r\n        const type = eventListener.type;\r\n        const listener = eventListener.listener;\r\n        element.removeEventListener(type, listener);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { EavConfig } from '../models';\r\n\r\n/**\r\n * Create a new FieldMask instance and access result with resolve\r\n * @example\r\n * const mask = new FieldMask(\"[FirstName]\", formGroup.controls);\r\n * const maskValue = mask.resolve();\r\n *\r\n * @param mask a string like \"[FirstName] [LastName]\"\r\n * @param model usually FormGroup controls, passed into here\r\n * @param overloadPreCleanValues a function which will \"scrub\" the found field-values\r\n */\r\nexport class FieldMask {\r\n  private mask: string;\r\n  private model: Dictionary<AbstractControl>;\r\n  private fields: string[] = [];\r\n  private value: string;\r\n  private findFields = /\\[.*?\\]/ig;\r\n  private unwrapField = /[\\[\\]]/ig;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    mask: string,\r\n    model: Dictionary<AbstractControl>,\r\n    private changeEvent: (newValue: string) => void,\r\n    overloadPreCleanValues: (key: string, value: string) => string,\r\n    private eavConfig?: EavConfig,\r\n  ) {\r\n    this.mask = mask;\r\n    this.model = model;\r\n    this.fields = this.fieldList();\r\n\r\n    if (overloadPreCleanValues) {\r\n      this.preClean = overloadPreCleanValues;\r\n    }\r\n\r\n    // bind auto-watch only if needed...\r\n    if (model && changeEvent) {\r\n      this.watchAllFields();\r\n    }\r\n  }\r\n\r\n  /** Resolves a mask to the final value */\r\n  resolve(): string {\r\n    let value = this.mask;\r\n    if (this.eavConfig != null && value != null) {\r\n      value = value.replace('[App:AppId]', this.eavConfig.appId);\r\n      value = value.replace('[App:ZoneId]', this.eavConfig.zoneId);\r\n    }\r\n    this.fields.forEach((e, i) => {\r\n      const replaceValue = this.model.hasOwnProperty(e) && this.model[e] && this.model[e].value ? this.model[e].value : '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      value = value.replace('[' + e + ']', cleaned);\r\n    });\r\n\r\n    return value;\r\n  }\r\n\r\n  /** Retrieves a list of all fields used in the mask */\r\n  fieldList(): string[] {\r\n    const result: string[] = [];\r\n    if (!this.mask) { return result; }\r\n    const matches = this.mask.match(this.findFields);\r\n    if (matches) {\r\n      matches.forEach((e, i) => {\r\n        const staticName = e.replace(this.unwrapField, '');\r\n        result.push(staticName);\r\n      });\r\n    } else { // TODO: ask is this good\r\n      result.push(this.mask);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** Default preClean function */\r\n  private preClean(key: string, value: string): string {\r\n    return value;\r\n  }\r\n\r\n  /** Change-event - will only fire if it really changes */\r\n  private onChange() {\r\n    const maybeNew = this.resolve();\r\n    if (this.value !== maybeNew) {\r\n      this.changeEvent(maybeNew);\r\n    }\r\n    this.value = maybeNew;\r\n  }\r\n\r\n  /** Add watcher and execute onChange */\r\n  private watchAllFields() {\r\n    // add a watch for each field in the field-mask\r\n    this.fields.forEach(field => {\r\n      if (!this.model[field]) { return; }\r\n      const valueSub = this.model[field].valueChanges.subscribe(value => this.onChange());\r\n      this.subscriptions.push(valueSub);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.subscriptions.forEach(subscription => { subscription.unsubscribe(); });\r\n  }\r\n}\r\n","import { LocalizationHelpers } from '.';\r\nimport { InputTypeConstants } from '../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { InputType } from '../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { TranslateMenuHelpers } from '../../eav-material-controls/localization/translate-menu/translate-menu.helpers';\r\nimport { TranslationStateCore } from '../../eav-material-controls/localization/translate-menu/translate-menu.models';\r\nimport { TranslationLinkConstants } from '../constants';\r\nimport { TranslationState } from '../models';\r\nimport { EavContentType, EavContentTypeAttribute, EavEntity, EavValues } from '../models/eav';\r\n\r\nexport class FieldsSettingsHelpers {\r\n\r\n  static mergeSettings<T>(metadataItems: EavEntity[], currentLanguage: string, defaultLanguage: string): T {\r\n    if (metadataItems == null) { return {} as T; }\r\n\r\n    const merged: Dictionary = {};\r\n    // copy metadata settings which are not @All\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id === '@All') { continue; }\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = LocalizationHelpers.translate(currentLanguage, defaultLanguage, values, null);\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    // copy @All metadata settings, overwriting previous settings\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id !== '@All') { continue; }\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = LocalizationHelpers.translate(currentLanguage, defaultLanguage, values, null);\r\n        // do not overwrite previous settings if @All is empty\r\n        const exists = merged[name] != null;\r\n        const emptyAll = value == null || value === '';\r\n        if (exists && emptyAll) { continue; }\r\n\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    return merged as T;\r\n  }\r\n\r\n  /** Find if DisableTranslation is true in any setting and in any language */\r\n  static findDisableTranslation(\r\n    inputType: InputType,\r\n    attributeValues: EavValues<any>,\r\n    defaultLanguage: string,\r\n    metadataItems: EavEntity[],\r\n  ): boolean {\r\n    if (inputType?.DisableI18n) { return true; }\r\n    if (!LocalizationHelpers.translationExistsInDefault(attributeValues, defaultLanguage)) { return true; }\r\n    if (metadataItems == null) { return false; }\r\n\r\n    // find DisableTranslation in @All, @String, @string-default, etc...\r\n    for (const item of metadataItems) {\r\n      const eavValues = item.Attributes['DisableTranslation'];\r\n      if (eavValues == null) { continue; }\r\n\r\n      // if true in any language, it is true for all cases\r\n      for (const eavValue of eavValues.Values) {\r\n        if (eavValue.Value === true) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  static getContentTypeTitle(contentType: EavContentType, currentLanguage: string, defaultLanguage: string): string {\r\n    let label: string;\r\n    try {\r\n      // xx ContentType is a historic bug and should be fixed when JSONs are rechecked\r\n      const type = contentType.Metadata.find(metadata => metadata.Type.Name === 'ContentType' || metadata.Type.Name === 'xx ContentType');\r\n      if (type) {\r\n        label = LocalizationHelpers.getValueOrDefault(type.Attributes.Label, currentLanguage, defaultLanguage)?.Value;\r\n      }\r\n      label = label || contentType.Name;\r\n    } catch (error) {\r\n      label = contentType.Name;\r\n    }\r\n    return label;\r\n  }\r\n\r\n  static findIsLastInGroup(contentType: EavContentType, attribute: EavContentTypeAttribute): boolean {\r\n    const index = contentType.Attributes.indexOf(attribute);\r\n    if (contentType.Attributes[index + 1] == null) { return true; }\r\n\r\n    const indexOfFirstEmpty = contentType.Attributes.findIndex(a => a.InputType === InputTypeConstants.EmptyDefault);\r\n    if (index < indexOfFirstEmpty) { return false; }\r\n\r\n    const isNotEmpty = attribute.InputType !== InputTypeConstants.EmptyDefault;\r\n    const nextIsEmpty = contentType.Attributes[index + 1].InputType === InputTypeConstants.EmptyDefault;\r\n    if (isNotEmpty && nextIsEmpty) { return true; }\r\n\r\n    return false;\r\n  }\r\n\r\n  static getDisabledBecauseTranslations(\r\n    attributeValues: EavValues<any>,\r\n    disableTranslation: boolean,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n  ): boolean {\r\n    if (currentLanguage === defaultLanguage) { return false; }\r\n    if (!LocalizationHelpers.translationExistsInDefault(attributeValues, defaultLanguage)) { return true; }\r\n    if (disableTranslation) { return true; }\r\n    if (LocalizationHelpers.isEditableTranslationExist(attributeValues, currentLanguage, defaultLanguage)) { return false; }\r\n    if (LocalizationHelpers.isReadonlyTranslationExist(attributeValues, currentLanguage)) { return true; }\r\n    return true;\r\n  }\r\n\r\n  static getTranslationState(\r\n    attributeValues: EavValues<any>,\r\n    disableTranslation: boolean,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n  ): TranslationState {\r\n    let infoLabel: string;\r\n    let infoMessage: string;\r\n\r\n    if (disableTranslation) {\r\n      infoLabel = 'LangMenu.InAllLanguages';\r\n      infoMessage = '';\r\n    } else if (!LocalizationHelpers.translationExistsInDefault(attributeValues, defaultLanguage)) {\r\n      infoLabel = 'LangMenu.MissingDefaultLangValue';\r\n      infoMessage = defaultLanguage;\r\n    } else {\r\n      const editableTranslationExists = LocalizationHelpers.isEditableTranslationExist(attributeValues, currentLanguage, defaultLanguage);\r\n      const readonlyTranslationExists = LocalizationHelpers.isReadonlyTranslationExist(attributeValues, currentLanguage);\r\n\r\n      if (editableTranslationExists || readonlyTranslationExists) {\r\n        const dimensions = LocalizationHelpers.getValueTranslation(attributeValues, currentLanguage, defaultLanguage)\r\n          .Dimensions.map(dimension => dimension.Value)\r\n          .filter(dimension => !dimension.includes(currentLanguage));\r\n\r\n        const isShared = dimensions.length > 0;\r\n        if (isShared) {\r\n          if (editableTranslationExists) {\r\n            infoLabel = 'LangMenu.In';\r\n          } else if (readonlyTranslationExists) {\r\n            infoLabel = 'LangMenu.From';\r\n          }\r\n          infoMessage = TranslateMenuHelpers.calculateSharedInfoMessage(dimensions, currentLanguage);\r\n        } else {\r\n          infoLabel = '';\r\n          infoMessage = '';\r\n        }\r\n      } else {\r\n        infoLabel = 'LangMenu.UseDefault';\r\n        infoMessage = '';\r\n      }\r\n    }\r\n    const state = this.getTranslationStateCore(attributeValues, disableTranslation, currentLanguage, defaultLanguage);\r\n    const translationState: TranslationState = {\r\n      infoLabel,\r\n      infoMessage,\r\n      language: state.language,\r\n      linkType: state.linkType,\r\n    };\r\n    return translationState;\r\n  }\r\n\r\n  private static getTranslationStateCore(\r\n    attributeValues: EavValues<any>,\r\n    disableTranslation: boolean,\r\n    currentLanguage: string,\r\n    defaultLanguage: string,\r\n  ): TranslationStateCore {\r\n    let language: string;\r\n    let linkType: string;\r\n\r\n    // Determine is control disabled or enabled and info message\r\n    if (!LocalizationHelpers.translationExistsInDefault(attributeValues, defaultLanguage)) {\r\n      language = '';\r\n      linkType = TranslationLinkConstants.MissingDefaultLangValue;\r\n    } else if (disableTranslation) {\r\n      language = '';\r\n      linkType = TranslationLinkConstants.DontTranslate;\r\n    } else if (LocalizationHelpers.isEditableTranslationExist(attributeValues, currentLanguage, defaultLanguage)) {\r\n      const editableElements = LocalizationHelpers.getValueTranslation(attributeValues, currentLanguage, defaultLanguage)\r\n        .Dimensions.filter(dimension => dimension.Value !== currentLanguage);\r\n\r\n      if (editableElements.length > 0) {\r\n        language = editableElements[0].Value;\r\n        linkType = TranslationLinkConstants.LinkReadWrite;\r\n      } else {\r\n        language = '';\r\n        linkType = TranslationLinkConstants.Translate;\r\n      }\r\n    } else if (LocalizationHelpers.isReadonlyTranslationExist(attributeValues, currentLanguage)) {\r\n      const readOnlyElements = LocalizationHelpers.getValueTranslation(attributeValues, currentLanguage, defaultLanguage)\r\n        .Dimensions.filter(dimension => dimension.Value !== currentLanguage);\r\n\r\n      language = readOnlyElements[0].Value;\r\n      linkType = TranslationLinkConstants.LinkReadOnly;\r\n    } else {\r\n      language = '';\r\n      linkType = TranslationLinkConstants.DontTranslate;\r\n    }\r\n\r\n    const translationState: TranslationStateCore = {\r\n      language,\r\n      linkType,\r\n    };\r\n    return translationState;\r\n  }\r\n}\r\n","import { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { FormValues } from '../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\n\r\nexport class GeneralHelpers {\r\n\r\n  static objectsEqual<T>(x: T, y: T): boolean {\r\n    const obj1 = x as Dictionary;\r\n    const obj2 = y as Dictionary;\r\n\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n    if (keys1.length !== keys2.length) { return false; }\r\n\r\n    const equal = keys1.every(key1 => {\r\n      if (!obj2.hasOwnProperty(key1)) { return false; }\r\n\r\n      return obj1[key1] === obj2[key1];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  static arraysEqual<T>(x: T[], y: T[]): boolean {\r\n    if (x.length !== y.length) { return false; }\r\n\r\n    const equal = x.every((item, index) => {\r\n      return x[index] === y[index];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  /** Searches where newValues has values different from oldValues */\r\n  static getFormChanges(oldValues: FormValues, newValues: FormValues): FormValues {\r\n    const changes: FormValues = {};\r\n    for (const key of Object.keys(newValues)) {\r\n      const newValue = newValues[key];\r\n      const oldValue = oldValues[key];\r\n      if (Array.isArray(newValue) && Array.isArray(oldValue) && GeneralHelpers.arraysEqual(newValue, oldValue)) { continue; }\r\n      if (newValue === oldValue) { continue; }\r\n\r\n      changes[key] = newValue;\r\n    }\r\n    return Object.keys(changes).length === 0 ? undefined : changes;\r\n  }\r\n}\r\n","import { FieldSettings, FieldValue, InputTypeName } from '../../../edit-types';\r\nimport { InputTypeConstants } from '../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { InputType } from '../../../ng-dialogs/src/app/content-type-fields/models/input-type.model';\r\nimport { WrappersConstants } from '../constants/wrappers.constants';\r\nimport { CalculatedInputType } from '../models';\r\nimport { EavContentTypeAttribute, EavHeader, EavItem } from '../models/eav';\r\nimport { EavService } from '../services';\r\n\r\nexport class InputFieldHelpers {\r\n\r\n  static getContentTypeId(item: EavItem): string {\r\n    return item.Entity.Type?.Id ?? item.Header.ContentTypeName;\r\n  }\r\n\r\n  static getInputTypeNames(attributes: EavContentTypeAttribute[], inputTypes: InputType[]): InputTypeName[] {\r\n    return attributes.map(attribute => {\r\n      const calculatedInputType = this.calculateInputType(attribute, inputTypes);\r\n      const inputTypeName: InputTypeName = {\r\n        name: attribute.Name,\r\n        inputType: calculatedInputType.inputType,\r\n      };\r\n      return inputTypeName;\r\n    });\r\n  }\r\n\r\n  static calculateInputType(attribute: EavContentTypeAttribute, inputTypes: InputType[]): CalculatedInputType {\r\n    const inputType = inputTypes.find(i => i.Type === attribute.InputType);\r\n    const calculated: CalculatedInputType = {\r\n      inputType: attribute.InputType,\r\n      isExternal: inputType ? !!inputType.AngularAssets : false,\r\n    };\r\n    return calculated;\r\n  }\r\n\r\n  static getWrappers(settings: FieldSettings, calculatedInputType: CalculatedInputType) {\r\n    const inputType = calculatedInputType.inputType;\r\n    const isExternal = calculatedInputType.isExternal;\r\n\r\n    // empty inputtype wrappers\r\n    if (inputType === InputTypeConstants.EmptyDefault) { return [WrappersConstants.CollapsibleWrapper]; }\r\n\r\n    // default wrappers\r\n    const wrappers = [WrappersConstants.HiddenWrapper];\r\n\r\n    // entity-default wrappers\r\n    const isEntityType = (inputType === InputTypeConstants.EntityDefault)\r\n      || (inputType === InputTypeConstants.StringDropdownQuery)\r\n      || (inputType === InputTypeConstants.EntityQuery)\r\n      || (inputType === InputTypeConstants.EntityContentBlocks);\r\n\r\n    if (isEntityType) {\r\n      wrappers.push(WrappersConstants.LocalizationWrapper);\r\n      const allowMultiValue = settings.AllowMultiValue ?? false;\r\n      if (allowMultiValue || inputType === InputTypeConstants.EntityContentBlocks) {\r\n        wrappers.push(WrappersConstants.EntityExpandableWrapper);\r\n      }\r\n    }\r\n\r\n    if (isExternal) {\r\n      wrappers.push(\r\n        WrappersConstants.DropzoneWrapper,\r\n        WrappersConstants.LocalizationWrapper,\r\n        WrappersConstants.ExpandableWrapper,\r\n        WrappersConstants.AdamAttachWrapper,\r\n      );\r\n    }\r\n\r\n    return wrappers;\r\n  }\r\n\r\n  static parseDefaultValue(attributeKey: string, inputType: InputType, settings: FieldSettings, header: EavHeader): FieldValue {\r\n    let defaultValue = settings.DefaultValue;\r\n\r\n    if (header.Prefill?.[attributeKey]) {\r\n      defaultValue = header.Prefill[attributeKey];\r\n    }\r\n\r\n    switch (inputType?.Type) {\r\n      case InputTypeConstants.BooleanDefault:\r\n        return defaultValue != null\r\n          ? defaultValue.toLowerCase() === 'true'\r\n          : false;\r\n      case InputTypeConstants.BooleanTristate:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? defaultValue.toLowerCase() === 'true'\r\n          : null;\r\n      case InputTypeConstants.DatetimeDefault:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? new Date(defaultValue).toJSON()\r\n          : null;\r\n      case InputTypeConstants.NumberDefault:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? Number(defaultValue)\r\n          : '';\r\n      case InputTypeConstants.EntityDefault:\r\n      case InputTypeConstants.EntityQuery:\r\n      case InputTypeConstants.EntityContentBlocks:\r\n        if (defaultValue == null || defaultValue === '') { return []; }\r\n        // string has { } characters, we must switch them to quotes\r\n        if (defaultValue.includes('{')) {\r\n          defaultValue = defaultValue.replace(/[\\{\\}]/g, '\\\"');\r\n        }\r\n        // list but no array, add brackets\r\n        if (defaultValue.includes(',') && !defaultValue.includes('[')) {\r\n          const guids = defaultValue.split(',').map(guid => guid.trim());\r\n          defaultValue = JSON.stringify(guids);\r\n        }\r\n        return defaultValue.startsWith('[') // an array with guid strings\r\n          ? JSON.parse(defaultValue) // if it's a string containing an array\r\n          : [defaultValue.replace(/\"/g, '')]; // just a guid string, but might have quotes\r\n      default:\r\n        return defaultValue ?? '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Entity fields for empty items are prefilled on the backend with []\r\n   * so I can never know if entity field is brand new, or just emptied out by the user\r\n   */\r\n  static isValueEmpty(value: FieldValue, eavService: EavService) {\r\n    const emptyEntityField = Array.isArray(value) && value.length === 0 && eavService.eavConfig.createMode;\r\n    return value === undefined || emptyEntityField;\r\n  }\r\n}\r\n","import { FieldValue } from '../../../edit-types';\r\nimport { consoleLogAngular } from '../../../ng-dialogs/src/app/shared/helpers/console-log-angular.helper';\r\nimport { FormValues } from '../../eav-item-dialog/item-edit-form/item-edit-form.models';\r\nimport { BestValueMode, BestValueModes } from '../constants/localization.constants';\r\nimport { EavDimension, EavEntityAttributes, EavValue, EavValues } from '../models/eav';\r\n\r\nexport class LocalizationHelpers {\r\n  /**\r\n   * Get translated value for currentLanguage,\r\n   * if not exist return default language translation,\r\n   * if default language also not exist return first value\r\n   */\r\n  static translate(currentLanguage: string, defaultLanguage: string, attributeValues: EavValues<any>, defaultValue: any): any {\r\n    if (!attributeValues) { return defaultValue; }\r\n\r\n    const translation: EavValue<any> = this.getValueTranslation(attributeValues, currentLanguage, defaultLanguage);\r\n    if (translation) { return translation.Value; }\r\n\r\n    const translationDefault: EavValue<any> = this.getValueTranslation(attributeValues, defaultLanguage, defaultLanguage);\r\n    if (translationDefault) { return translationDefault.Value; }\r\n\r\n    // TODO: maybe return value with *\r\n    return attributeValues.Values[0]?.Value ?? null;\r\n  }\r\n\r\n  static getValueOrDefault(allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): EavValue<any> {\r\n    let translation = LocalizationHelpers.getValueTranslation(allAttributesValues, languageKey, defaultLanguage);\r\n    if (translation == null) {\r\n      translation = LocalizationHelpers.getValueTranslation(allAttributesValues, defaultLanguage, defaultLanguage);\r\n    }\r\n    return translation;\r\n  }\r\n\r\n  static getValueTranslation(allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): EavValue<any> {\r\n    return allAttributesValues.Values.find(eavValue =>\r\n      eavValue.Dimensions.find(d => d.Value === languageKey\r\n        || d.Value === `~${languageKey}`\r\n        || (languageKey === defaultLanguage && d.Value === '*')) !== undefined);\r\n  }\r\n\r\n  static isEditableOrReadonlyTranslationExist(allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): boolean {\r\n    return allAttributesValues ? allAttributesValues.Values.filter(c =>\r\n      c.Dimensions.find(d =>\r\n        d.Value === languageKey\r\n        || d.Value === `~${languageKey}`\r\n        || (languageKey === defaultLanguage && d.Value === '*'))).length > 0 : false;\r\n  }\r\n\r\n  /** Language is editable if langageKey exist or on default language * exist */\r\n  static isEditableTranslationExist(allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): boolean {\r\n    return allAttributesValues ? allAttributesValues.Values.filter(eavValue =>\r\n      eavValue.Dimensions.find(d => (d.Value === languageKey)\r\n        || (languageKey === defaultLanguage && d.Value === '*'))).length > 0 : false;\r\n  }\r\n\r\n  static isReadonlyTranslationExist(allAttributesValues: EavValues<any>, languageKey: string): boolean {\r\n    return allAttributesValues ? allAttributesValues.Values.filter(eavValue =>\r\n      eavValue.Dimensions.find(d => d.Value === `~${languageKey}`)).length > 0 : false;\r\n  }\r\n\r\n  static translationExistsInDefault(allAttributesValues: EavValues<any>, defaultLanguage: string): boolean {\r\n    return allAttributesValues ? allAttributesValues.Values.filter(eavValue =>\r\n      eavValue.Dimensions.find(d => d.Value === defaultLanguage || d.Value === '*')).length > 0 : false;\r\n  }\r\n\r\n  /** Copy attributes from item */\r\n  private static updateAttribute(\r\n    oldAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    attribute: EavValues<any>,\r\n  ): EavEntityAttributes {\r\n    const newAttributes: EavEntityAttributes = {};\r\n    if (Object.keys(oldAttributes).length === 0) {\r\n      const attributeCopy: EavValues<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n      return newAttributes;\r\n    }\r\n\r\n    for (const key of Object.keys(oldAttributes)) {\r\n      if (key === attributeKey) {\r\n        const attributeCopy: EavValues<any> = { ...attribute };\r\n        newAttributes[key] = attributeCopy;\r\n      } else {\r\n        const attributeCopy: EavValues<any> = { ...oldAttributes[key] };\r\n        newAttributes[key] = attributeCopy;\r\n      }\r\n    }\r\n\r\n    if (oldAttributes[attributeKey] == null) {\r\n      const attributeCopy: EavValues<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n    }\r\n    return newAttributes;\r\n  }\r\n\r\n  /** Update values for languageKey */\r\n  static updateAttributesValues(\r\n    allAttributes: EavEntityAttributes,\r\n    updateValues: FormValues,\r\n    languageKey: string,\r\n    defaultLanguage: string,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    const eavAttributes: EavEntityAttributes = {};\r\n    Object.keys(allAttributes).forEach(attributeKey => {\r\n      const newItemValue = updateValues[attributeKey];\r\n      // if new value exist update attribute for languageKey\r\n      // if (newItemValue !== null && newItemValue !== undefined) {\r\n      if (newItemValue !== undefined) {\r\n        const valueWithLanguageExist = this.isEditableOrReadonlyTranslationExist(\r\n          allAttributes[attributeKey], languageKey, defaultLanguage);\r\n\r\n        // if valueWithLanguageExist update value for languageKey\r\n        if (valueWithLanguageExist) {\r\n          const newValues: EavValues<any> = {\r\n            ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(eavValue => {\r\n              const newValue: EavValue<any> = eavValue.Dimensions.find(d => d.Value === languageKey\r\n                || d.Value === `~${languageKey}`\r\n                || (languageKey === defaultLanguage && d.Value === '*'))\r\n                // Update value for languageKey\r\n                ? {\r\n                  ...eavValue,\r\n                  Value: newItemValue,\r\n                }\r\n                : eavValue;\r\n              return newValue;\r\n            })\r\n          };\r\n          eavAttributes[attributeKey] = newValues;\r\n        } else { // else add new value with dimension languageKey\r\n          consoleLogAngular('saveAttributeValues add values ', newItemValue);\r\n          const newEavValue = EavValue.create(newItemValue, [EavDimension.create(languageKey)]);\r\n          const newAttribute: EavValues<any> = {\r\n            ...allAttributes[attributeKey],\r\n            Values: [...allAttributes[attributeKey].Values, newEavValue]\r\n          };\r\n          eavAttributes[attributeKey] = newAttribute;\r\n        }\r\n      } else { // else copy item attributes\r\n        const attributeCopy: EavValues<any> = { ...allAttributes[attributeKey] };\r\n        eavAttributes[attributeKey] = attributeCopy;\r\n      }\r\n    });\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** update attribute value, and change language readonly state if needed */\r\n  static updateAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    updateValue: FieldValue,\r\n    existingLanguageKey: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = existingLanguageKey;\r\n\r\n    if (isReadOnly) {\r\n      newLanguageValue = `~${existingLanguageKey}`;\r\n    }\r\n\r\n    const attribute: EavValues<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(eavValue => {\r\n        const newValue: EavValue<any> = eavValue.Dimensions.find(d => d.Value === existingLanguageKey\r\n          || d.Value === `~${existingLanguageKey}`\r\n          || (existingLanguageKey === defaultLanguage && d.Value === '*')\r\n        )\r\n          // Update value and dimension\r\n          ? {\r\n            ...eavValue,\r\n            // update value\r\n            Value: updateValue,\r\n            // update languageKey with newLanguageValue\r\n            Dimensions: eavValue.Dimensions.map(dimension => {\r\n              const newDimensions: EavDimension = (dimension.Value === existingLanguageKey\r\n                || dimension.Value === `~${existingLanguageKey}`\r\n                || (existingLanguageKey === defaultLanguage && dimension.Value === '*'))\r\n                ? { Value: newLanguageValue }\r\n                : dimension;\r\n              return newDimensions;\r\n            })\r\n          }\r\n          : eavValue;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  static addAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeValue: EavValue<any>,\r\n    attributeKey: string,\r\n    attributeType: string,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    const attribute: EavValues<any> =\r\n      Object.keys(allAttributes).length === 0\r\n        || !allAttributes[attributeKey] ?\r\n        {\r\n          // Add attribute\r\n          ...allAttributes[attributeKey], Values: [attributeValue], Type: attributeType\r\n        }\r\n        : {\r\n          // Add attribute\r\n          ...allAttributes[attributeKey], Values: [...allAttributes[attributeKey].Values, attributeValue], Type: attributeType\r\n        };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Add dimension to value with existing dimension */\r\n  static addAttributeDimension(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    newDimensionValue: string,\r\n    existingDimensionValue: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = newDimensionValue;\r\n\r\n    if (isReadOnly) {\r\n      newLanguageValue = `~${newDimensionValue}`;\r\n    }\r\n\r\n    const attribute: EavValues<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(eavValue => {\r\n        const newValue: EavValue<any> = eavValue.Dimensions.find(d => d.Value === existingDimensionValue\r\n          || (existingDimensionValue === defaultLanguage && d.Value === '*'))\r\n          // Update dimension for current language\r\n          ? {\r\n            ...eavValue,\r\n            // if languageKey already exist\r\n            Dimensions: eavValue.Dimensions.concat({ Value: newLanguageValue })\r\n          }\r\n          : eavValue;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Removes dimension (language) from attribute. If multiple dimensions exist, delete only dimension, else delete value and dimension */\r\n  static removeAttributeDimension(attributes: EavEntityAttributes, attributeKey: string, language: string): EavEntityAttributes {\r\n    const oldAttributes = attributes;\r\n    const validDimensions = [language, `~${language}`];\r\n\r\n    const value = oldAttributes[attributeKey].Values.find(eavValue => {\r\n      const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n      return dimensionExists;\r\n    });\r\n\r\n    // given dimension doesn't exist for this attribute so no change is needed\r\n    if (!value) {\r\n      const attributesCopy: EavEntityAttributes = { ...oldAttributes };\r\n      return attributesCopy;\r\n    }\r\n\r\n    let newAttribute: EavValues<any>;\r\n    if (value.Dimensions.length > 1) {\r\n      // if multiple dimensions exist delete only dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.map(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n          if (!dimensionExists) { return eavValue; }\r\n\r\n          const newValue: EavValue<any> = {\r\n            ...eavValue,\r\n            Dimensions: eavValue.Dimensions.filter(dimension => !validDimensions.includes(dimension.Value)),\r\n          };\r\n          return newValue;\r\n        })\r\n      };\r\n    } else if (value.Dimensions.length === 1) {\r\n      // if only one dimension exists delete value and dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.filter(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n          return !dimensionExists;\r\n        })\r\n      };\r\n    }\r\n\r\n    const newAttributes = this.updateAttribute(oldAttributes, attributeKey, newAttribute);\r\n    return newAttributes;\r\n  }\r\n\r\n  /**\r\n   * Default mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   * 4. first value\r\n   *\r\n   * Strict mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   *\r\n   * Very strict mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   */\r\n  static getBestValue(eavValues: EavValues<any>, currentLanguage: string, defaultLanguage: string, mode: BestValueMode): FieldValue {\r\n    if (eavValues == null) { return; }\r\n\r\n    let bestDimensions = [currentLanguage, `~${currentLanguage}`];\r\n    let bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    bestDimensions = ['*'];\r\n    bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    if (mode === BestValueModes.Strict) { return; }\r\n\r\n    bestDimensions = [defaultLanguage, `~${defaultLanguage}`];\r\n    bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    bestValue = eavValues.Values[0]?.Value;\r\n    return bestValue;\r\n  }\r\n\r\n  private static findValueForDimensions(eavValues: EavValues<any>, dimensions: string[]): FieldValue {\r\n    const value = eavValues.Values.find(\r\n      eavValue => !!eavValue.Dimensions.find(dimension => dimensions.includes(dimension.Value)),\r\n    )?.Value;\r\n    return value;\r\n  }\r\n}\r\n","export class InputTypeConstants {\r\n    // String\r\n    public static readonly StringDefault = 'string-default';\r\n    public static readonly StringUrlPath = 'string-url-path';\r\n    public static readonly StringDropdown = 'string-dropdown';\r\n    public static readonly StringDropdownQuery = 'string-dropdown-query';\r\n    public static readonly StringFontIconPicker = 'string-font-icon-picker';\r\n    public static readonly StringTemplatePicker = 'string-template-picker';\r\n    public static readonly StringWysiwyg = 'string-wysiwyg';\r\n    // Boolean\r\n    public static readonly BooleanDefault = 'boolean-default';\r\n    public static readonly BooleanTristate = 'boolean-tristate';\r\n    // DateTime\r\n    public static readonly DatetimeDefault = 'datetime-default';\r\n    // Empty\r\n    public static readonly EmptyDefault = 'empty-default';\r\n    // Number\r\n    public static readonly NumberDefault = 'number-default';\r\n    // Entity\r\n    public static readonly EntityDefault = 'entity-default';\r\n    public static readonly EntityQuery = 'entity-query';\r\n    public static readonly EntityContentBlocks = 'entity-content-blocks';\r\n    // Hyperlink\r\n    public static readonly HyperlinkDefault = 'hyperlink-default';\r\n    public static readonly HyperlinkLibrary = 'hyperlink-library';\r\n    // Custom\r\n    public static readonly ExternalWebComponent = 'external-web-component';\r\n    public static readonly CustomGPS = 'custom-gps';\r\n    public static readonly CustomJsonEditor = 'custom-json-editor';\r\n    public static readonly CustomDefault = 'custom-default';\r\n    // Old\r\n    public static readonly OldTypeDropdown = 'dropdown';\r\n    public static readonly OldTypeWysiwyg = 'wysiwyg';\r\n    public static readonly OldTypeDefault = 'default';\r\n    public static readonly StringWysiwygTinymce = 'string-wysiwyg-tinymce';\r\n    public static readonly StringWysiwygAdv = 'string-wysiwyg-adv';\r\n    public static readonly StringWysiwygDnn = 'string-wysiwyg-dnn';\r\n    // Default\r\n    public static readonly DefaultSuffix = '-default';\r\n}\r\n","export type EavMetadataKey = 'attribute' | 'app' | 'entity' | 'contentType' | 'zone' | 'cmsObject';\r\nexport type EavKeyTypeKey = 'guid' | 'string' | 'number';\r\nexport interface EavScopeOption { name: string; value: string; }\r\n\r\nexport const eavConstants = {\r\n  metadata: {\r\n    /** metadataOfAttribute */\r\n    attribute: { type: 2, target: 'EAV Field Properties' },\r\n    /** metadataOfApp */\r\n    app: { type: 3, target: 'App' },\r\n    /** metadataOfEntity */\r\n    entity: { type: 4, target: 'Entity' },\r\n    /** metadataOfContentType */\r\n    contentType: { type: 5, target: 'ContentType' },\r\n    /** metadataOfZone */\r\n    zone: { type: 6, target: 'Zone' },\r\n    /** metadataOfCmsObject */\r\n    cmsObject: { type: 10, target: 'CmsObject' },\r\n  },\r\n\r\n  /** Loopup type for the metadata, e.g. key=80adb152-efad-4aa4-855e-74c5ef230e1f is keyType=guid */\r\n  keyTypes: {\r\n    guid: 'guid',\r\n    string: 'string',\r\n    number: 'number',\r\n  },\r\n\r\n  /** Scopes */\r\n  scopes: {\r\n    /** This is the main schema and the data you usually see is from here */\r\n    default: { name: 'Default', value: '2SexyContent' },\r\n    /** This contains content-types for configuration, settings and resources of the app */\r\n    app: { name: 'System: App', value: '2SexyContent-App' },\r\n  },\r\n\r\n  /** Content types where templates, permissions, etc. are stored */\r\n  contentTypes: {\r\n    /** Content type containing app templates (views) */\r\n    template: '2SexyContent-Template',\r\n    /** Content type containing permissions */\r\n    permissions: 'PermissionConfiguration',\r\n    /** Content type containing queries */\r\n    query: 'DataPipeline',\r\n    /** Content type containing content type metadata (app administration > data > metadata) */\r\n    contentType: 'ContentType',\r\n    /** Content type containing app settings */\r\n    settings: 'App-Settings',\r\n    /** Content type containing app resources */\r\n    resources: 'App-Resources',\r\n  },\r\n\r\n  pipelineDesigner: {\r\n    dataSourceDifficulties: {\r\n      default: 100,\r\n      advanced: 200,\r\n    },\r\n    outDataSource: {\r\n      Description: 'The template/script which will show this data',\r\n      EntityGuid: 'Out',\r\n      In: ['Default', 'Header'],\r\n      Name: '2sxc Target (View or API)',\r\n      PartAssemblyAndType: 'SexyContentTemplate',\r\n      PrimaryType: 'Target',\r\n      VisualDesignerData: { Top: 20, Left: 200, Width: 700 },\r\n    },\r\n    defaultPipeline: {\r\n      dataSources: [\r\n        // disable for https://github.com/2sic/2sxc/issues/2388 - remove in a few iterations ca. 2021-05\r\n        // {\r\n        //   EntityGuid: 'unsaved3',\r\n        //   PartAssemblyAndType: 'ToSic.Eav.DataSources.IAppRoot, ToSic.Eav.DataSources',\r\n        //   VisualDesignerData: { Top: 440, Left: 440 },\r\n        // }, {\r\n        //   EntityGuid: 'unsaved2',\r\n        //   PartAssemblyAndType: 'ToSic.Eav.DataSources.PublishingFilter, ToSic.Eav.DataSources',\r\n        //   VisualDesignerData: { Top: 300, Left: 440 },\r\n        // },\r\n        {\r\n          EntityGuid: 'unsaved1',\r\n          PartAssemblyAndType: 'ToSic.Sxc.DataSources.CmsBlock, ToSic.Sxc',\r\n          VisualDesignerData: { Top: 170, Left: 440 },\r\n        }\r\n      ],\r\n      streamWiring: [\r\n        // disable for https://github.com/2sic/2sxc/issues/2388 - remove in a few iterations ca. 2021-05\r\n        // { From: 'unsaved3', Out: 'Default', To: 'unsaved2', In: 'Default' },\r\n        // { From: 'unsaved3', Out: 'Drafts', To: 'unsaved2', In: 'Drafts' },\r\n        // { From: 'unsaved3', Out: 'Published', To: 'unsaved2', In: 'Published' },\r\n        // { From: 'unsaved2', Out: 'Default', To: 'unsaved1', In: 'Default' },\r\n        { From: 'unsaved1', Out: 'Header', To: 'Out', In: 'Header' },\r\n        { From: 'unsaved1', Out: 'Default', To: 'Out', In: 'Default' },\r\n      ],\r\n    },\r\n    testParameters: '[Demo:Demo]=true',\r\n  },\r\n};\r\n","import { environment } from '../../../environments/environment';\r\n\r\n/** Console log that doesn't show in Angular production mode */\r\nexport function consoleLogAngular(message?: any, ...optionalParams: any[]) {\r\n  if (environment.production) { return; }\r\n\r\n  console.groupCollapsed(message, ...optionalParams);\r\n  // tslint:disable-next-line:no-console\r\n  console.trace();\r\n  console.groupEnd();\r\n}\r\n","/** PublishMode is short version of PublishStatus */\r\nexport type PublishMode = 'branch' | 'show' | 'hide';\r\n\r\n/** PublishMode is short version of PublishStatus */\r\nexport enum PublishModeConstants {\r\n  Show = 'show',\r\n  Hide = 'hide',\r\n  Branch = 'branch',\r\n}\r\n","import { EavFor } from '../../../../../edit/shared/models/eav';\r\nimport { eavConstants } from '../constants/eav.constants';\r\nimport { AddItem, EditForm, EditItem, GroupItem, InnerItem } from '../models/edit-form.model';\r\n\r\nexport function convertFormToUrl(form: EditForm) {\r\n  let formUrl = '';\r\n\r\n  for (const item of form.items) {\r\n    if (formUrl) { formUrl += ','; }\r\n\r\n    if ((item as InnerItem).Parent) {\r\n      // Inner Item\r\n      const innerItem = item as InnerItem;\r\n      formUrl += 'inner:' + innerItem.EntityId + ':' + innerItem.Field\r\n        + ':' + innerItem.Parent + ':' + innerItem.Add + ':' + innerItem.Index;\r\n      if (innerItem.Prefill) {\r\n        for (const [key, prefill] of Object.entries(innerItem.Prefill)) {\r\n          formUrl += '&prefill:' + key + '~' + paramEncode(prefill.toString());\r\n        }\r\n      }\r\n    } else if ((item as EditItem).EntityId) {\r\n      // Edit Item\r\n      const editItem = item as EditItem;\r\n      formUrl += editItem.EntityId;\r\n    } else if ((item as AddItem).ContentTypeName) {\r\n      // Add Item\r\n      const addItem = item as AddItem;\r\n      formUrl += 'new:' + addItem.ContentTypeName;\r\n\r\n      // new v11.11 - support Singleton\r\n      const createForSuffix = (mdFor: EavFor) => ':' + mdFor.Target\r\n        + (mdFor.Singleton ? ':' + mdFor.Singleton.toString().toLowerCase() : '');\r\n\r\n      if (addItem.For?.String) {\r\n        formUrl += '&for:s~' + paramEncode(addItem.For.String) + createForSuffix(addItem.For);\r\n      } else if (addItem.For?.Number) {\r\n        formUrl += '&for:n~' + addItem.For.Number + createForSuffix(addItem.For);\r\n      } else if (addItem.For?.Guid) {\r\n        formUrl += '&for:g~' + addItem.For.Guid + createForSuffix(addItem.For);\r\n      } else if (addItem.Metadata) {\r\n        let keyType: string;\r\n        switch (addItem.Metadata.keyType.toLocaleLowerCase()) {\r\n          case eavConstants.keyTypes.string:\r\n            keyType = 's';\r\n            break;\r\n          case eavConstants.keyTypes.number:\r\n            keyType = 'n';\r\n            break;\r\n          case eavConstants.keyTypes.guid:\r\n            keyType = 'g';\r\n            break;\r\n        }\r\n        const target = Object.values(eavConstants.metadata).find(metaValue => metaValue.type === addItem.Metadata.targetType)?.target;\r\n        formUrl += '&for:' + keyType + '~' + paramEncode(addItem.Metadata.key) + ':' + target;\r\n      }\r\n\r\n      if (addItem.Prefill) {\r\n        for (const [key, prefill] of Object.values(addItem.Prefill)) {\r\n          formUrl += '&prefill:' + key + '~' + paramEncode(prefill.toString());\r\n        }\r\n      }\r\n\r\n      if (addItem.DuplicateEntity) {\r\n        formUrl += '&copy:' + addItem.DuplicateEntity;\r\n      }\r\n    } else if ((item as GroupItem).Group) {\r\n      // Group Item\r\n      const groupItem = item as GroupItem;\r\n      formUrl += 'group:' + groupItem.Group.Guid + ':' + groupItem.Group.Index + ':' + groupItem.Group.Part + ':' + groupItem.Group.Add;\r\n      if (groupItem.Prefill) {\r\n        for (const [key, prefill] of Object.values(groupItem.Prefill)) {\r\n          formUrl += '&prefill:' + key + '~' + paramEncode(prefill.toString());\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return formUrl;\r\n}\r\n\r\nexport function convertUrlToForm(formUrl: string) {\r\n  const form: EditForm = { items: [] };\r\n  const items = formUrl.split(',');\r\n\r\n  for (const item of items) {\r\n    const isNumber = /^[0-9]*$/g;\r\n    if (item.startsWith('inner:')) {\r\n      // Inner Item\r\n      const innerItem = {} as InnerItem;\r\n      const options = item.split('&');\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('inner:')) {\r\n          const innerItemParams = item.split(':');\r\n          innerItem.EntityId = parseInt(innerItemParams[1], 10);\r\n          innerItem.Field = innerItemParams[2];\r\n          innerItem.Parent = innerItemParams[3];\r\n          innerItem.Add = innerItemParams[4] === 'true';\r\n          innerItem.Index = parseInt(innerItemParams[5], 10);\r\n        } else if (option.startsWith('prefill:')) {\r\n          if (innerItem.Prefill == null) {\r\n            innerItem.Prefill = {};\r\n          }\r\n          const prefillParams = option.split(':');\r\n          const key = prefillParams[1].split('~')[0];\r\n          const value = paramDecode(prefillParams[1].split('~')[1]);\r\n          innerItem.Prefill[key] = value;\r\n        }\r\n      }\r\n      form.items.push(innerItem);\r\n    } else if (isNumber.test(item)) {\r\n      // Edit Item\r\n      const editItem: EditItem = { EntityId: parseInt(item, 10) };\r\n      form.items.push(editItem);\r\n    } else if (item.startsWith('new:')) {\r\n      // Add Item\r\n      const addItem = {} as AddItem;\r\n      const options = item.split('&');\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('new:')) {\r\n          // Add Item ContentType\r\n          const newParams = option.split(':');\r\n          addItem.ContentTypeName = newParams[1];\r\n        } else if (option.startsWith('for:')) {\r\n          // Add Item For\r\n          addItem.For = {} as EavFor;\r\n          const forParams = option.split(':');\r\n          const forIntro = forParams[1].split('~');\r\n          const forType = forIntro[0];\r\n          const forValue = forIntro[1];\r\n          const forTarget = forParams[2];\r\n\r\n          switch (forType) {\r\n            case 's':\r\n              addItem.For.String = paramDecode(forValue);\r\n              break;\r\n            case 'n':\r\n              addItem.For.Number = parseInt(forValue, 10);\r\n              break;\r\n            case 'g':\r\n              addItem.For.Guid = forValue;\r\n              break;\r\n          }\r\n          // new v11.11 - Singleton Metadata\r\n          if (forParams.length > 3) {\r\n            addItem.For.Singleton = forParams[3] === 'true';\r\n          }\r\n          addItem.For.Target = forTarget;\r\n        } else if (option.startsWith('prefill:')) {\r\n          // Add Item Prefill\r\n          if (addItem.Prefill == null) {\r\n            addItem.Prefill = {};\r\n          }\r\n          const prefillParams = option.split(':');\r\n          const key = prefillParams[1].split('~')[0];\r\n          const value = paramDecode(prefillParams[1].split('~')[1]);\r\n          addItem.Prefill[key] = value;\r\n        } else if (option.startsWith('copy:')) {\r\n          // Add Item Copy\r\n          const copyParams = option.split(':');\r\n          addItem.DuplicateEntity = parseInt(copyParams[1], 10);\r\n        }\r\n      }\r\n      form.items.push(addItem);\r\n    } else if (item.startsWith('group:')) {\r\n      // Group Item\r\n      const groupItem = {} as GroupItem;\r\n      const options = item.split('&');\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('group:')) {\r\n          // Group Item Group\r\n          const groupParams = option.split(':');\r\n          groupItem.Group = {\r\n            Guid: groupParams[1],\r\n            Index: parseInt(groupParams[2], 10),\r\n            Part: groupParams[3],\r\n            Add: groupParams[4] === 'true',\r\n          };\r\n        } else if (option.startsWith('prefill:')) {\r\n          // Group Item Prefill\r\n          if (groupItem.Prefill == null) {\r\n            groupItem.Prefill = {};\r\n          }\r\n          const prefillParams = option.split(':');\r\n          const key = prefillParams[1].split('~')[0];\r\n          const value = paramDecode(prefillParams[1].split('~')[1]);\r\n          groupItem.Prefill[key] = value;\r\n        }\r\n      }\r\n      form.items.push(groupItem);\r\n    }\r\n  }\r\n\r\n  return form;\r\n}\r\n\r\n/** Encodes characters in URL parameter to not mess up routing. Don't forget to decode it! :) */\r\nfunction paramEncode(text: string) {\r\n  text = text.replace(/\\//g, '%2F');\r\n  text = text.replace(/\\:/g, '%3A');\r\n  text = text.replace(/\\&/g, '%26');\r\n  text = text.replace(/\\~/g, '%7E');\r\n  text = text.replace(/\\,/g, '%2C');\r\n  return text;\r\n}\r\n\r\n/** Decodes characters in URL parameter */\r\nfunction paramDecode(text: string) {\r\n  text = text.replace(/%2F/g, '/');\r\n  text = text.replace(/%3A/g, ':');\r\n  text = text.replace(/%26/g, '&');\r\n  text = text.replace(/%7E/g, '~');\r\n  text = text.replace(/%2C/g, ',');\r\n  return text;\r\n}\r\n","import { Action, ActionReducer, ActionReducerMap, MetaReducer, } from '@ngrx/store';\r\nimport { consoleLogAngular } from '../../../../ng-dialogs/src/app/shared/helpers/console-log-angular.helper';\r\nimport { environment } from '../../../../ng-dialogs/src/environments/environment';\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface EavState {\r\n}\r\n\r\n/** Console log all actions */\r\nexport function logger(reducer: ActionReducer<EavState>): ActionReducer<EavState> {\r\n  return (state: EavState, action: Action): EavState => {\r\n    consoleLogAngular('[STORE] state:', state, 'action:', action);\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\n/**\r\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\r\n * the root meta-reducer. To add more meta-reducers, provide an array of meta-reducers\r\n * that will be composed to form the root meta-reducer.\r\n */\r\nexport const metaReducers: MetaReducer[] = !environment.production\r\n  ? [logger]\r\n  : [];\r\n\r\nexport const reducers: ActionReducerMap<EavState> = {\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { editRoot, refreshEditRoot } from '../../../edit/edit.matcher';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: ':zoneId/apps',\r\n    loadChildren: () => import('./apps-management/apps-management.module').then(m => m.AppsManagementModule),\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/import',\r\n    loadChildren: () => import('./import-app/import-app.module').then(m => m.ImportAppModule),\r\n    data: { title: 'Import App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/app',\r\n    loadChildren: () => import('./app-administration/app-administration.module').then(m => m.AppAdministrationModule),\r\n    data: { title: 'App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/code',\r\n    loadChildren: () => import('./code-editor/code-editor.module').then(m => m.CodeEditorModule),\r\n    data: { title: 'Code Editor' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/query/:pipelineId',\r\n    loadChildren: () => import('./visual-query/visual-query.module').then(m => m.VisualQueryModule),\r\n    data: { title: 'Visual Query' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/replace',\r\n    loadChildren: () => import('./replace-content/replace-content.module').then(m => m.ReplaceContentModule),\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/reorder',\r\n    loadChildren: () => import('./manage-content-list/manage-content-list.module').then(m => m.ManageContentListModule),\r\n    data: { title: 'Reorder Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/items/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-items/content-items.module').then(m => m.ContentItemsModule),\r\n    data: { title: 'Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/fields/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n    data: { title: 'Fields' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/versions/:itemId',\r\n    loadChildren: () => import('./item-history/item-history.module').then(m => m.ItemHistoryModule),\r\n  },\r\n  {\r\n    matcher: editRoot,\r\n    loadChildren: () => import('../../../edit/edit.module').then(m => m.EditModule),\r\n    data: { title: 'Edit Item' },\r\n  },\r\n  {\r\n    matcher: refreshEditRoot,\r\n    loadChildren: () => import('../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n  },\r\n  // routes below are not linked directly from the initializer and are used for testing\r\n  // to make sure each module contains enough data to be self sustainable\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule),\r\n    data: { title: 'Export Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName/:selectedIds',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule),\r\n    data: { title: 'Export Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/import/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-import/content-import.module').then(m => m.ContentImportModule),\r\n    data: { title: 'Import Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/permissions/:type/:keyType/:key',\r\n    loadChildren: () => import('./permissions/permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Context as DnnContext, DnnAppComponent } from '@2sic.com/dnn-sxc-angular';\r\nimport { ChangeDetectionStrategy, Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { keyContentBlockId, keyModuleId } from './shared/constants/session.constants';\r\nimport { Context } from './shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppComponent extends DnnAppComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    dnnContext: DnnContext,\r\n    private context: Context,\r\n    private titleService: Title,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private matIconRegistry: MatIconRegistry,\r\n  ) {\r\n    super(\r\n      el,\r\n      dnnContext.preConfigure({\r\n        moduleId: parseInt(sessionStorage.getItem(keyModuleId), 10),\r\n        contentBlockId: parseInt(sessionStorage.getItem(keyContentBlockId), 10),\r\n      }),\r\n    );\r\n    this.context.initRoot();\r\n    this.matIconRegistry.setDefaultFontSetClass('material-icons-outlined');\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Mostly copied from https://blog.bitsrc.io/dynamic-page-titles-in-angular-98ce20b5c334\r\n    // Routes need a data: { title: '...' } for this to work\r\n    const appTitle = this.titleService.getTitle(); // initial title when loading the page\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map(() => {\r\n          let child = this.activatedRoute.firstChild;\r\n          while (child.firstChild) {\r\n            child = child.firstChild;\r\n          }\r\n          if (child.snapshot.data['title']) {\r\n            return child.snapshot.data['title'];\r\n          }\r\n          return appTitle;\r\n        }),\r\n      ).subscribe((title: string) => {\r\n        this.titleService.setTitle(title);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { JsInfo } from '@2sic.com/2sxc-typings';\r\nimport { Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UrlHelpers } from '../../../edit/shared/helpers/url.helpers';\r\nimport { DialogTypeConstants } from './shared/constants/dialog-types.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyApi, keyAppId, keyContentType, keyDialog, keyItems, keyPipelineId, keyRequestToken, keyTabId, keyUrl, keyZoneId, prefix } from './shared/constants/session.constants';\r\nimport { convertFormToUrl } from './shared/helpers/url-prep.helper';\r\nimport { EavWindow } from './shared/models/eav-window.model';\r\nimport { EditForm, EditItem, GroupItem } from './shared/models/edit-form.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function paramsInitFactory(injector: Injector): () => void {\r\n  return () => {\r\n    console.log('Setting parameters config and clearing route');\r\n    const eavKeys = Object.keys(sessionStorage).filter(key => key.startsWith(prefix));\r\n    const isParamsRoute = !window.location.hash.startsWith('#/');\r\n    if (isParamsRoute) {\r\n      console.log('Initial route:', window.location.href);\r\n      // clear our part of the session\r\n      for (const key of eavKeys) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n      sessionStorage.setItem(keyUrl, window.location.href); // save url which opened the dialog\r\n      sessionStorage.setItem(keyDialog, DialogTypeConstants.Edit); // set edit dialog as the default\r\n\r\n      // save params\r\n      const urlHash = window.location.hash.substring(1); // substring removes first # char\r\n      const queryParametersFromUrl = UrlHelpers.readQueryStringParameters(urlHash);\r\n\r\n      for (const [paramKey, paramValue] of Object.entries(queryParametersFromUrl)) {\r\n        if (paramValue == null) { continue; }\r\n        sessionStorage.setItem(prefix + paramKey, paramValue);\r\n      }\r\n\r\n      // redirect\r\n      const router = injector.get(Router);\r\n      const zoneId = sessionStorage.getItem(keyZoneId);\r\n      const appId = sessionStorage.getItem(keyAppId);\r\n      const dialog = sessionStorage.getItem(keyDialog);\r\n      const contentType = sessionStorage.getItem(keyContentType);\r\n      const items = sessionStorage.getItem(keyItems);\r\n      switch (dialog) {\r\n        case DialogTypeConstants.Zone:\r\n          router.navigate([`${zoneId}/apps`]);\r\n          break;\r\n        case DialogTypeConstants.AppImport:\r\n          router.navigate([`${zoneId}/import`]);\r\n          break;\r\n        case DialogTypeConstants.App:\r\n          router.navigate([`${zoneId}/${appId}/app`]);\r\n          break;\r\n        case DialogTypeConstants.ContentType:\r\n          router.navigate([`${zoneId}/${appId}/fields/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.ContentItems:\r\n          router.navigate([`${zoneId}/${appId}/items/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.Edit:\r\n          const editItems: EditItem[] = JSON.parse(items);\r\n          const form: EditForm = { items: editItems };\r\n          const formUrl = convertFormToUrl(form);\r\n          router.navigate([`${zoneId}/${appId}/edit/${formUrl}`]);\r\n          break;\r\n        case DialogTypeConstants.ItemHistory:\r\n          const historyItems: EditItem[] = JSON.parse(items);\r\n          router.navigate([`${zoneId}/${appId}/versions/${historyItems[0].EntityId}`]);\r\n          break;\r\n        case DialogTypeConstants.Develop:\r\n          router.navigate([`${zoneId}/${appId}/code`]);\r\n          break;\r\n        case DialogTypeConstants.PipelineDesigner:\r\n          const pipelineId = sessionStorage.getItem(keyPipelineId);\r\n          router.navigate([`${zoneId}/${appId}/query/${pipelineId}`]);\r\n          break;\r\n        case DialogTypeConstants.Replace:\r\n          const replaceItems: GroupItem[] = JSON.parse(items);\r\n          const rGuid = replaceItems[0].Group.Guid;\r\n          const rPart = replaceItems[0].Group.Part;\r\n          const rIndex = replaceItems[0].Group.Index;\r\n          const add = replaceItems[0].Group.Add;\r\n          const queryParams = add ? { add: true } : {};\r\n          router.navigate([`${zoneId}/${appId}/${rGuid}/${rPart}/${rIndex}/replace`], { queryParams });\r\n          break;\r\n        case DialogTypeConstants.InstanceList:\r\n          const groupItems: GroupItem[] = JSON.parse(items);\r\n          const gGuid = groupItems[0].Group.Guid;\r\n          const gPart = groupItems[0].Group.Part;\r\n          const gIndex = groupItems[0].Group.Index;\r\n          router.navigate([`${zoneId}/${appId}/${gGuid}/${gPart}/${gIndex}/reorder`]);\r\n          break;\r\n        default:\r\n          alert(`Cannot open unknown dialog \"${dialog}\"`);\r\n          try {\r\n            window.parent.$2sxc.totalPopup.close();\r\n          } catch (error) { }\r\n      }\r\n    } else if (eavKeys.length === 0) {\r\n      // if not params route and no params are saved, e.g. browser was reopened, throw error\r\n      alert('Missing required url parameters. Please reopen dialog.');\r\n      throw new Error('Missing required url parameters. Please reopen dialog.');\r\n    } else {\r\n      console.log('Initial route:', sessionStorage.getItem(keyUrl));\r\n    }\r\n\r\n    loadEnvironment();\r\n  };\r\n}\r\n\r\nfunction loadEnvironment() {\r\n  const jsInfo: Partial<JsInfo> = {\r\n    page: parseInt(sessionStorage.getItem(keyTabId), 10),\r\n    rvt: sessionStorage.getItem(keyRequestToken),\r\n    api: sessionStorage.getItem(keyApi),\r\n  };\r\n  window.$2sxc.env.load(jsInfo as JsInfo);\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HandleErrorsInterceptor implements HttpInterceptor {\r\n  /** URLs excluded from detailed error alert  */\r\n  private excludedUrls = [\r\n    'dist/ng-edit/i18n',\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (!this.checkIfExcluded(error.url)) {\r\n          this.showDetailedHttpError(error);\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private checkIfExcluded(url: string) {\r\n    for (const excludedUrl of this.excludedUrls) {\r\n      if (url.includes(excludedUrl)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private showDetailedHttpError(error: HttpErrorResponse) {\r\n    let infoText = 'Had an error talking to the server (status ' + error.status + ').';\r\n    const srvResp = error.error;\r\n    if (srvResp) {\r\n      const msg = srvResp.Message;\r\n      if (msg) { infoText += '\\nMessage: ' + msg; }\r\n      const msgDet = srvResp.MessageDetail || srvResp.ExceptionMessage;\r\n      if (msgDet) { infoText += '\\nDetail: ' + msgDet; }\r\n\r\n      if (msgDet && msgDet.indexOf('No action was found') === 0) {\r\n        if (msgDet.indexOf('that matches the name') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: you probably got the action-name wrong in your JS.';\r\n        } else if (msgDet.indexOf('that matches the request.') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: Seems like the parameters are the wrong amount or type.';\r\n        }\r\n      }\r\n\r\n      if (msg && msg.indexOf('Controller') === 0 && msg.indexOf('not found') > 0) {\r\n        infoText += '\\n\\nTip from 2sxc: you probably spelled the controller name wrong or forgot to remove the word \\'controller\\' from the call in JS. To call a controller called \\'DemoController\\' only use \\'Demo\\'.';\r\n      }\r\n      infoText += '\\n\\nif you are an advanced user you can learn more about what went wrong - discover how on 2sxc.org/help?tag=debug';\r\n    }\r\n\r\n    alert(infoText);\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SetHeadersInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let modified: HttpRequest<any>;\r\n    if (req.body instanceof FormData) {\r\n      // sending files. Do not set content type so browser can add delimiter boundary automatically\r\n      return next.handle(req);\r\n    } else {\r\n      modified = req.clone({\r\n        setHeaders: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n        }\r\n      });\r\n      return next.handle(modified);\r\n    }\r\n  }\r\n}\r\n","import { DnnInterceptor } from '@2sic.com/dnn-sxc-angular';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { EntityDataModule } from '@ngrx/data';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { metaReducers, reducers } from '../../../edit/shared/store';\r\nimport { entityConfig } from '../../../edit/shared/store/ngrx-data';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { paramsInitFactory } from './params-init.factory';\r\nimport { HandleErrorsInterceptor } from './shared/interceptors/handle-errors.interceptor';\r\nimport { SetHeadersInterceptor } from './shared/interceptors/set-headers.interceptor';\r\nimport { Context } from './shared/services/context';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    StoreModule.forRoot(reducers, { metaReducers, runtimeChecks: { strictStateImmutability: true, strictActionImmutability: true } }),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    EntityDataModule.forRoot(entityConfig),\r\n    TranslateModule.forRoot(),\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    { provide: APP_INITIALIZER, useFactory: paramsInitFactory, deps: [Injector], multi: true },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    DnnInterceptor,\r\n    { provide: HTTP_INTERCEPTORS, useClass: SetHeadersInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HandleErrorsInterceptor, multi: true },\r\n    Context,\r\n    Title\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}