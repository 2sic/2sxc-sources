{"version":3,"sources":["./src/app/shared/pipes/safe-resource-url.ts","../edit/field-logic/field-logic-manager.ts","../edit/shared/services/assets.service.ts","../edit/eav-material-controls/input-types/dnn-bridge/dnn-bridge.component.ts","../edit/eav-material-controls/input-types/dnn-bridge/dnn-bridge.component.html","../edit/shared/services/dnn-bridge.service.ts","../edit/shared/services/eav.service.ts","../edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.helpers.ts","../edit/shared/services/edit-initializer.service.ts","../edit/shared/services/edit-routing.service.ts","../edit/shared/services/entity.service.ts","../edit/eav-material-controls/validators/validation-helper.ts","../edit/shared/services/fields-settings.service.ts","../edit/shared/services/fields-translate.service.ts","../edit/shared/services/file-type.service.ts","../edit/shared/services/forms-state.service.ts","../edit/shared/services/load-icons.service.ts","../edit/assets/icons/2sxc/Material-Icon-Adam-48.svg","../edit/assets/icons/2sxc/Material-Icon-Adam-48-filled.svg","../edit/assets/icons/font-awesome/draft-branch.svg","../edit/assets/icons/font-awesome/file.svg","../edit/assets/icons/font-awesome/file-archive.svg","../edit/assets/icons/font-awesome/file-audio.svg","../edit/assets/icons/font-awesome/file-code.svg","../edit/assets/icons/font-awesome/file-excel.svg","../edit/assets/icons/font-awesome/file-image.svg","../edit/assets/icons/font-awesome/file-pdf.svg","../edit/assets/icons/font-awesome/file-powerpoint.svg","../edit/assets/icons/font-awesome/file-text.svg","../edit/assets/icons/font-awesome/file-video.svg","../edit/assets/icons/font-awesome/file-word.svg","../edit/assets/icons/font-awesome/folder.svg","../edit/assets/icons/font-awesome/folder-plus.svg","../edit/assets/icons/font-awesome/sitemap.svg","../edit/shared/services/query.service.ts","../edit/shared/services/scripts-loader.service.ts","../edit/eav-material-controls/validators/custom-validators.ts"],"names":["sanitizer","transform","resourceUrl","this","bypassSecurityTrustResourceUrl","SafeResourceUrlPipe","logics","singleton","window","eavFieldLogicManager","FieldLogicManager","add","logic","name","get","inputTypeName","webApiAppFilesAll","webApiAppFilesRoot","webApiAppFile","webApiAppFileCreate","http","eavService","dnnContext","getAll","global","$2sxc","apiUrl","params","appId","eavConfig","toString","withSubfolders","create","path","post","AssetsService","dialogData","ngOnInit","connector","iframeSrc","portalRoot","tabId","moduleId","dialogType","Object","entries","value","encodeURIComponent","iframeLoaded","event","iframe","target","w","contentWindow","connectBridge","DnnBridgeComponent","dialog","open","callback","dialogRef","data","valueChanged","close","width","getLinkInfo","link","contentType","guid","field","appid","pipe","map","adamLinkInfo","Value","DnnBridgeService","webApiEditRoot","context","setEavConfig","editDialogContext","formId","isParentDialog","itemGuids","createMode","isCopy","enableHistory","zoneId","appRoot","App","Url","lang","Language","Current","langPri","Primary","langs","All","partOfPage","sessionStorage","getItem","Site","systemRoot","location","pathname","split","versioningOptions","getVersioningOptions","fetchFormData","items","saveFormData","result","publishing","show","hide","branch","publish","console","error","EavService","alphabetCompare","a","b","key","route","itemService","inputTypeService","contentTypeItemService","contentTypeService","featureService","publishStatusService","translate","languageService","languageInstanceService","snackBar","formPrefetchService","loaded$","BehaviorSubject","ngOnDestroy","complete","form","snapshot","editItems","JSON","stringify","subscribe","formData","setMissingValues","next","Math","floor","random","editDialogCount","pathFromRoot","url","length","calculateIsParentDialog","Items","item","Entity","Guid","loadItems","addInputTypes","InputTypes","addContentTypeItems","ContentTypeItems","addContentTypes","ContentTypes","loadFeatures","Features","Prefetch","prefetchGuid","join","loadPrefetch","getItems","Id","Context","Header","DuplicateEntity","history","currentLanguage","defaultLanguage","languages","isoLangCode","use","sortedLanguages","primaryLangKey","primaryLang","sameLangs","otherLangs","language","startsWith","push","sort","sortLanguages","loadLanguages","addLanguageInstance","setPublishStatus","DraftShouldBranch","IsPublished","inputTypes","getInputTypes","getLanguages","getDefaultLanguage","switchToDefault","contentTypeId","getContentTypeId","getContentType","ctAttribute","inputType","find","i","Type","InputType","EmptyDefault","attributeValues","Attributes","Name","fieldSettings","mergeSettings","Metadata","firstValue","getBestValue","Default","isValueEmpty","setDefaultValue","noLanguageValue","Strict","DisableI18n","undefined","transactionItem","removeItemAttributeDimension","addItemAttributeValue","defaultLanguageValue","getCurrentLanguage","setCurrentLanguage","message","instant","duration","EditInitializerService","router","childFormResult$","subscription","unsubscribe","init","Subscription","Subject","initHideHeader","initChildFormResult","refreshOnChildVersionsClosed","isExpanded","fieldId","entityGuid","fieldIndex","detailsEntityGuid","detailsFieldId","isExpanded$","distinctUntilChanged","childFormResult","filter","childResult","updateEntityGuid","updateFieldId","childFormClosed","expand","componentTag","oldEditUrl","newEditUrl","currentUrl","calculatePathFromRoot","lastIndex","lastIndexOf","newUrl","substring","replace","navigate","state","formUrl","relativeTo","hasDetails","updateHideHeader","events","startWith","firstChild","pairwise","editResult","getCurrentNavigation","extras","parseInt","formResult","versionsResult","refreshEdit","navigateUrl","EditRoutingService","webApiEntityRoot","webApiEntityList","getAvailableEntities","contentTypeName","entitiesFilter","reactiveEntities","p","switchMap","share","delete","entityId","force","id","EntityService","isRequired","settings","VisibleInEditUI","Required","getValidators","attribute","validators","HyperlinkLibrary","required","ValidationRegExJavaScript","pattern","Decimals","validateDecimals","Max","max","Min","min","contentTypeSettings$","fieldsProps$","contentType$","getContentType$","itemHeader$","getItemHeader$","currentLanguage$","getCurrentLanguage$","defaultLanguage$","getDefaultLanguage$","combineLatest","itemHeader","ctSettings","Description","EditInstructions","Label","ListInstructions","Notes","Icon","Link","_itemTitle","getContentTypeTitle","_slotCanBeEmpty","Group","SlotCanBeEmpty","_slotIsEmpty","SlotIsEmpty","itemAttributes$","getItemAttributes$","inputTypes$","getInputTypes$","itemAttributes","fieldsProps","merged","Placeholder","Disabled","DisableTranslation","slotIsEmpty","findDisableTranslation","getDisabledBecauseTranslations","fixed","update","calculatedInputType","calculateInputType","wrappers","getWrappers","initialSettings","initialDisabled","fieldTranslation","getTranslationState","constants","angularAssets","AngularAssets","fieldName","index","indexOf","isExternal","isLastInGroup","findIsLastInGroup","type","translationState","getContentTypeSettings$","asObservable","getFieldsProps","getFieldsProps$","getFieldSettings","getFieldSettings$","fieldsSettings","oldSettings","newSettings","objectsEqual","getFieldValidation$","oldValidators","newValidators","arraysEqual","getTranslationState$","oldState","newState","FieldsSettingsService","fieldsSettingsService","isTransaction","isTranslationDisabled","attributes","getItemAttributes","defaultValue","getValueTranslation","dontTranslate","copyFrom","copyFromLanguageKey","values","attributeValueTranslation","isEditableOrReadonlyTranslationExist","updateItemAttributeValue","linkReadOnly","linkWithLanguageKey","addItemAttributeDimension","linkReadWrite","translateMany","translateable","keys","dontTranslateMany","FieldsTranslateService","defaultIcon","checkImgRegEx","customExtensions","doc","docx","xls","xlsx","ppt","pptx","pdf","mp3","avi","mpg","mpeg","mov","mp4","zip","rar","txt","html","css","xml","xsl","matExtensions","vcf","getExtension","filename","substr","toLowerCase","getIconClass","ext","isKnownType","isImage","test","FileTypeService","formsValid$","formsDirty$","formsValid","formsDirty","getFormValid","setFormValid","isValid","allValid","some","valid","setFormDirty","isDirty","anyDirty","dirty","FormsStateService","matIconRegistry","domSanitizer","icons","load","forEach","icon","addSvgIconLiteral","bypassSecurityTrustHtml","LoadIconsService","queryUrl","includeGuid","hasParams","paramsLower","toLocaleLowerCase","hasAppId","includes","urlParams","QueryService","FileTypeConstants","loadedFiles","scripts","sortedFiles","sortByType","insertToDom","cssFiles","jsFiles","script","file","resolveSpecialPaths","loaded","domEl","endsWith","CSS","JS","concat","files","increment","sxcVersion","existing","loadedFile","removeEventListener","addEventListener","document","createElement","rel","href","src","querySelector","appendChild","getUrlPrefix","ScriptsLoaderService","onlySimpleUrlChars","allowPath","trimEnd","control","stripNonUrlCharacters","decimals","match","validateAdam","adamItems"],"mappings":"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","file":"default~app-administration-app-administration-module~code-editor-code-editor-module~content-export-c~0645e2ff.47c689e35d7cd1265331.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeResourceUrl' })\r\nexport class SafeResourceUrlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(resourceUrl: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\r\n  }\r\n}\r\n","import { Dictionary } from '../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { EavWindow } from '../../ng-dialogs/src/app/shared/models/eav-window.model';\r\nimport { FieldLogicBase } from './field-logic-base';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport class FieldLogicManager {\r\n  private logics: Dictionary<FieldLogicBase> = {};\r\n\r\n  private constructor() { }\r\n\r\n  static singleton(): FieldLogicManager {\r\n    if (window.eavFieldLogicManager == null) {\r\n      window.eavFieldLogicManager = new FieldLogicManager();\r\n    }\r\n    return window.eavFieldLogicManager;\r\n  }\r\n\r\n  /** Add settings logic */\r\n  add(logic: FieldLogicBase): void {\r\n    this.logics[logic.name] = logic;\r\n  }\r\n\r\n  /** Get settings logic for input type */\r\n  get(inputTypeName: string): FieldLogicBase {\r\n    return this.logics[inputTypeName] ?? null;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EavService } from '.';\r\n\r\nconst webApiAppFilesRoot = 'admin/appfiles/';\r\nexport const webApiAppFilesAll = webApiAppFilesRoot + 'all';\r\nexport const webApiAppFile = webApiAppFilesRoot + 'asset';\r\nexport const webApiAppFileCreate = webApiAppFilesRoot + 'create';\r\n\r\n@Injectable()\r\nexport class AssetsService {\r\n  constructor(private http: HttpClient, private eavService: EavService, private dnnContext: DnnContext) { }\r\n\r\n  getAll(global: boolean) {\r\n    return this.http.get<string[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesAll), {\r\n      params: { appId: this.eavService.eavConfig.appId, global: global.toString(), withSubfolders: 'true' },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean) {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFileCreate), {}, {\r\n      params: { appId: this.eavService.eavConfig.appId, global: global.toString(), path }\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { EavService } from '../../../shared/services';\r\nimport { DnnBridgeDialogData, DnnBridgeIframe } from './dnn-bridge.models';\r\n\r\n@Component({\r\n  selector: 'app-dnn-bridge',\r\n  templateUrl: './dnn-bridge.component.html',\r\n  styleUrls: ['./dnn-bridge.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DnnBridgeComponent implements OnInit {\r\n  iframeSrc: string;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) private dialogData: DnnBridgeDialogData, private eavService: EavService) { }\r\n\r\n  ngOnInit() {\r\n    const connector = this.dialogData.connector;\r\n\r\n    let iframeSrc = this.eavService.eavConfig.portalRoot + 'Default.aspx'\r\n      + '?tabid=' + this.eavService.eavConfig.tabId\r\n      + '&ctl=webformsbridge'\r\n      + '&mid=' + this.eavService.eavConfig.moduleId\r\n      + '&dnnprintmode=true'\r\n      + '&SkinSrc=%5bG%5dSkins%2f_default%2fNo+Skin'\r\n      + '&ContainerSrc=%5bG%5dContainers%2f_default%2fNo+Container'\r\n      + '&type=' + connector.dialogType;\r\n\r\n    for (const [key, value] of Object.entries(connector.params)) {\r\n      if (value == null || value === '') { continue; }\r\n      iframeSrc += `&${key}=${encodeURIComponent(value)}`;\r\n    }\r\n\r\n    this.iframeSrc = iframeSrc;\r\n  }\r\n\r\n  iframeLoaded(event: Event) {\r\n    const iframe = event.target as HTMLIFrameElement;\r\n    const w = (iframe.contentWindow ?? iframe) as DnnBridgeIframe;\r\n    // spm 2020-12-15 DNN 9.8.0 with Telerik controls removed loads iframe 2 times.\r\n    // First load is missing data and only second load is correct.\r\n    // https://github.com/dnnsoftware/Dnn.Platform/releases/tag/v9.8.0\r\n    w?.connectBridge(this.dialogData.connector);\r\n  }\r\n}\r\n","<div>\r\n\t<div class=\"modal-header\">\r\n\t\t<h3 class=\"modal-title\" translate=\"Fields.Hyperlink.PagePicker.Title\"></h3>\r\n\t</div>\r\n\t<div class=\"modal-body\" style=\"height:370px; width:600px\">\r\n\t\t<iframe style=\"width:100%; height: 350px; border: 0;\" [src]=\"iframeSrc | safeResourceUrl\"\r\n\t\t\t(load)=\"iframeLoaded($event)\">\r\n\t\t</iframe>\r\n\t</div>\r\n\t<div class=\"modal-footer\"></div>\r\n</div>\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { EavService } from '.';\r\nimport { DnnBridgeConnectorParams } from '../../../edit-types';\r\nimport { DnnBridgeComponent } from '../../eav-material-controls/input-types/dnn-bridge/dnn-bridge.component';\r\nimport { DnnBridgeDialogData, DnnBridgeType } from '../../eav-material-controls/input-types/dnn-bridge/dnn-bridge.models';\r\nimport { LinkInfo } from '../models';\r\n\r\n@Injectable()\r\nexport class DnnBridgeService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext, private eavService: EavService, private dialog: MatDialog) { }\r\n\r\n  open(dialogType: DnnBridgeType, params: DnnBridgeConnectorParams, callback: (value: any) => void): MatDialogRef<DnnBridgeComponent> {\r\n    let dialogRef: MatDialogRef<DnnBridgeComponent>;\r\n\r\n    const data: DnnBridgeDialogData = {\r\n      connector: {\r\n        params,\r\n        valueChanged: (value: any) => {\r\n          dialogRef.close();\r\n          callback(value);\r\n        },\r\n        dialogType,\r\n      },\r\n    };\r\n    dialogRef = this.dialog.open(DnnBridgeComponent, {\r\n      data,\r\n      width: '650px',\r\n    });\r\n    return dialogRef;\r\n  }\r\n\r\n  getLinkInfo(link: string, contentType: string, guid: string, field: string): Observable<string> {\r\n    return this.http.get<LinkInfo>(this.dnnContext.$2sxc.http.apiUrl('cms/edit/linkInfo'), {\r\n      params: {\r\n        link,\r\n        ...(guid && { guid }),\r\n        ...(contentType && { contentType }),\r\n        ...(field && { field }),\r\n        appid: this.eavService.eavConfig.appId,\r\n      }\r\n    }).pipe(\r\n      map(adamLinkInfo => adamLinkInfo.Value),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { keyPartOfPage, keyPublishing } from '../../../ng-dialogs/src/app/shared/constants/session.constants';\r\nimport { Context } from '../../../ng-dialogs/src/app/shared/services/context';\r\nimport { EavFormData, EditDialogContext, SaveEavFormData } from '../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { EavConfig, SaveResult, VersioningOptions } from '../models';\r\n\r\nexport const webApiEditRoot = 'cms/edit/';\r\n\r\n@Injectable()\r\nexport class EavService {\r\n  /** WARNING! These are constants that form was loaded with. They do not change while form is running */\r\n  eavConfig: EavConfig;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext,\r\n    /** Used to fetch form data and fill up eavConfig. Do not use anywhere else */\r\n    private context: Context,\r\n  ) { }\r\n\r\n  /** Create EavConfiguration from sessionStorage */\r\n  setEavConfig(\r\n    editDialogContext: EditDialogContext,\r\n    formId: number,\r\n    isParentDialog: boolean,\r\n    itemGuids: string[],\r\n    createMode: boolean,\r\n    isCopy: boolean,\r\n    enableHistory: boolean,\r\n  ) {\r\n    this.eavConfig = {\r\n      zoneId: this.context.zoneId.toString(),\r\n      appId: this.context.appId.toString(),\r\n      appRoot: editDialogContext.App.Url,\r\n      lang: editDialogContext.Language.Current,\r\n      langPri: editDialogContext.Language.Primary,\r\n      langs: editDialogContext.Language.All,\r\n      moduleId: this.context.moduleId.toString(),\r\n      partOfPage: sessionStorage.getItem(keyPartOfPage),\r\n      portalRoot: editDialogContext.Site.Url,\r\n      tabId: this.context.tabId.toString(),\r\n      systemRoot: window.location.pathname.split('/dist/')[0] + '/',\r\n      versioningOptions: this.getVersioningOptions(\r\n        sessionStorage.getItem(keyPartOfPage) === 'true',\r\n        sessionStorage.getItem(keyPublishing),\r\n      ),\r\n      formId,\r\n      isParentDialog,\r\n      itemGuids,\r\n      createMode,\r\n      isCopy,\r\n      enableHistory,\r\n    };\r\n  }\r\n\r\n  fetchFormData(items: string) {\r\n    return this.http.post<EavFormData>(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'load'), items, {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  saveFormData(result: SaveEavFormData) {\r\n    return this.http.post<SaveResult>(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'save'), result, {\r\n      params: { appId: this.eavConfig.appId, partOfPage: this.eavConfig.partOfPage }\r\n    });\r\n  }\r\n\r\n  private getVersioningOptions(partOfPage: boolean, publishing: string): VersioningOptions {\r\n    if (!partOfPage) {\r\n      return { show: true, hide: true, branch: true };\r\n    }\r\n\r\n    const publish = publishing || '';\r\n    switch (publish) {\r\n      case '':\r\n      case 'DraftOptional':\r\n        return { show: true, hide: true, branch: true };\r\n      case 'DraftRequired':\r\n        return { branch: true, hide: true };\r\n      default: {\r\n        console.error('invalid versioning requiremenets: ' + publish);\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Language } from '../../shared/models';\r\n\r\nexport function calculateIsParentDialog(route: ActivatedRoute) {\r\n  let editDialogCount = 0;\r\n  for (const path of route.snapshot.pathFromRoot) {\r\n    if (path.url.length <= 0) { continue; }\r\n    for (const urlSegment of path.url) {\r\n      if (urlSegment.path !== 'edit') { continue; }\r\n      editDialogCount++;\r\n    }\r\n  }\r\n  return editDialogCount === 1;\r\n}\r\n\r\nexport function sortLanguages(primaryLangKey: string, languages: Language[]) {\r\n  if (languages.length === 0) { return languages; }\r\n\r\n  let primaryLang: Language;\r\n  const sameLangs: Language[] = [];\r\n  const otherLangs: Language[] = [];\r\n  for (const language of languages) {\r\n    if (language.key === primaryLangKey) {\r\n      primaryLang = language;\r\n    } else if (language.key.startsWith(primaryLangKey.split('-')[0])) {\r\n      sameLangs.push(language);\r\n    } else {\r\n      otherLangs.push(language);\r\n    }\r\n  }\r\n  sameLangs.sort(alphabetCompare);\r\n  otherLangs.sort(alphabetCompare);\r\n\r\n  const allLangsSorted: Language[] = !primaryLang ? [...sameLangs, ...otherLangs] : [primaryLang, ...sameLangs, ...otherLangs];\r\n  return allLangsSorted;\r\n}\r\n\r\nfunction alphabetCompare(a: Language, b: Language) {\r\n  if (a.key < b.key) { return -1; }\r\n  if (a.key > b.key) { return 1; }\r\n  return 0;\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { EavService } from '.';\r\nimport { FieldSettings } from '../../../edit-types';\r\nimport { InputTypeConstants } from '../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { convertUrlToForm } from '../../../ng-dialogs/src/app/shared/helpers/url-prep.helper';\r\nimport { calculateIsParentDialog, sortLanguages } from '../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.helpers';\r\nimport { EavFormData } from '../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { EditParams } from '../../edit-matcher.models';\r\nimport { BestValueModes } from '../constants/localization.constants';\r\nimport { FieldsSettingsHelpers, InputFieldHelpers, LocalizationHelpers } from '../helpers';\r\nimport { Language, PublishStatus } from '../models';\r\n// tslint:disable-next-line:max-line-length\r\nimport { ContentTypeItemService, ContentTypeService, FeatureService, InputTypeService, ItemService, LanguageInstanceService, LanguageService, PrefetchService, PublishStatusService } from '../store/ngrx-data';\r\n\r\n@Injectable()\r\nexport class EditInitializerService implements OnDestroy {\r\n  loaded$ = new BehaviorSubject(false);\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private eavService: EavService,\r\n    private itemService: ItemService,\r\n    private inputTypeService: InputTypeService,\r\n    private contentTypeItemService: ContentTypeItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private featureService: FeatureService,\r\n    private publishStatusService: PublishStatusService,\r\n    private translate: TranslateService,\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private snackBar: MatSnackBar,\r\n    private formPrefetchService: PrefetchService,\r\n  ) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loaded$.complete();\r\n  }\r\n\r\n  fetchFormData(): void {\r\n    const form = convertUrlToForm((this.route.snapshot.params as EditParams).items);\r\n    const editItems = JSON.stringify(form.items);\r\n    this.eavService.fetchFormData(editItems).subscribe(formData => {\r\n      this.saveFormData(formData);\r\n      this.setMissingValues();\r\n      this.loaded$.next(true);\r\n    });\r\n  }\r\n\r\n  private saveFormData(formData: EavFormData): void {\r\n    const formId = Math.floor(Math.random() * 99999);\r\n    const isParentDialog = calculateIsParentDialog(this.route);\r\n    const itemGuids = formData.Items.map(item => item.Entity.Guid);\r\n\r\n    this.itemService.loadItems(formData.Items);\r\n    // we assume that input type and content type data won't change between loading parent and child forms\r\n    this.inputTypeService.addInputTypes(formData.InputTypes);\r\n    this.contentTypeItemService.addContentTypeItems(formData.ContentTypeItems);\r\n    this.contentTypeService.addContentTypes(formData.ContentTypes);\r\n    this.featureService.loadFeatures(formData.Features);\r\n    if (formData.Prefetch != null) {\r\n      const prefetchGuid = itemGuids.join();\r\n      this.formPrefetchService.loadPrefetch(formData.Prefetch, prefetchGuid);\r\n    }\r\n\r\n    const items = this.itemService.getItems(itemGuids);\r\n    const createMode = items[0].Entity.Id === 0;\r\n    const isCopy = items[0].Header.DuplicateEntity != null;\r\n    const enableHistory = !createMode && this.route.snapshot.data.history !== false;\r\n    this.eavService.setEavConfig(formData.Context, formId, isParentDialog, itemGuids, createMode, isCopy, enableHistory);\r\n\r\n    const currentLanguage = this.eavService.eavConfig.lang;\r\n    const defaultLanguage = this.eavService.eavConfig.langPri;\r\n    const languages = this.eavService.eavConfig.langs;\r\n    // WARNING! TranslateService is a new instance for every form and language must be set for every one of them\r\n    const isoLangCode = currentLanguage.split('-')[0];\r\n    this.translate.use(isoLangCode);\r\n\r\n    // load language data only for parent dialog to not overwrite languages when opening child dialogs\r\n    if (isParentDialog) {\r\n      const eavLangs: Language[] = Object.entries(languages).map(([key, name]) => ({ key, name }));\r\n      const sortedLanguages = sortLanguages(defaultLanguage, eavLangs);\r\n      this.languageService.loadLanguages(sortedLanguages);\r\n    }\r\n    this.languageInstanceService.addLanguageInstance(formId, currentLanguage, defaultLanguage, currentLanguage, false);\r\n\r\n    const publishStatus: PublishStatus = {\r\n      formId,\r\n      DraftShouldBranch: formData.DraftShouldBranch,\r\n      IsPublished: formData.IsPublished,\r\n    };\r\n    this.publishStatusService.setPublishStatus(publishStatus);\r\n  }\r\n\r\n  private setMissingValues(): void {\r\n    const items = this.itemService.getItems(this.eavService.eavConfig.itemGuids);\r\n    const inputTypes = this.inputTypeService.getInputTypes();\r\n    const languages = this.languageService.getLanguages();\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    let switchToDefault = false;\r\n\r\n    for (const item of items) {\r\n      const contentTypeId = InputFieldHelpers.getContentTypeId(item);\r\n      const contentType = this.contentTypeService.getContentType(contentTypeId);\r\n\r\n      for (const ctAttribute of contentType.Attributes) {\r\n        const inputType = inputTypes.find(i => i.Type === ctAttribute.InputType);\r\n        // 'custom-default' doesn't have inputType\r\n        if (inputType?.Type === InputTypeConstants.EmptyDefault) { continue; }\r\n\r\n        const attributeValues = item.Entity.Attributes[ctAttribute.Name];\r\n        const fieldSettings = FieldsSettingsHelpers.mergeSettings<FieldSettings>(ctAttribute.Metadata, defaultLanguage, defaultLanguage);\r\n\r\n        if (languages.length === 0) {\r\n          const firstValue = LocalizationHelpers.getBestValue(attributeValues, '*', '*', BestValueModes.Default);\r\n          if (InputFieldHelpers.isValueEmpty(firstValue, this.eavService)) {\r\n            this.itemService.setDefaultValue(item, ctAttribute, inputType, fieldSettings, languages, defaultLanguage);\r\n          }\r\n        } else {\r\n          const noLanguageValue = LocalizationHelpers.getBestValue(attributeValues, '*', '*', BestValueModes.Strict);\r\n          if (!inputType?.DisableI18n && noLanguageValue !== undefined) {\r\n            // move * value to defaultLanguage\r\n            const transactionItem = this.itemService.removeItemAttributeDimension(item.Entity.Guid, ctAttribute.Name, '*', true);\r\n            this.itemService.addItemAttributeValue(\r\n              item.Entity.Guid,\r\n              ctAttribute.Name,\r\n              noLanguageValue,\r\n              defaultLanguage,\r\n              false,\r\n              ctAttribute.Type,\r\n              false,\r\n              transactionItem,\r\n            );\r\n            continue;\r\n          }\r\n\r\n          const defaultLanguageValue = LocalizationHelpers.getBestValue(\r\n            attributeValues,\r\n            defaultLanguage,\r\n            defaultLanguage,\r\n            BestValueModes.Strict,\r\n          );\r\n          if (InputFieldHelpers.isValueEmpty(defaultLanguageValue, this.eavService)) {\r\n            this.itemService.setDefaultValue(item, ctAttribute, inputType, fieldSettings, languages, defaultLanguage);\r\n            switchToDefault = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    if (switchToDefault && currentLanguage !== defaultLanguage) {\r\n      this.languageInstanceService.setCurrentLanguage(this.eavService.eavConfig.formId, defaultLanguage);\r\n      const message = this.translate.instant('Message.SwitchedLanguageToDefault', { language: defaultLanguage });\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { EavService } from '.';\r\nimport { ItemHistoryResult } from '../../../ng-dialogs/src/app/item-history/models/item-history-result.model';\r\nimport { convertFormToUrl } from '../../../ng-dialogs/src/app/shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../../../ng-dialogs/src/app/shared/models/edit-form.model';\r\nimport { EditEntryComponent } from '../../edit-entry/edit-entry.component';\r\nimport { EditParams } from '../../edit-matcher.models';\r\nimport { UrlHelpers } from '../helpers';\r\nimport { ChildFormResult, NavigateFormResult } from '../models';\r\nimport { LanguageInstanceService } from '../store/ngrx-data';\r\n\r\n@Injectable()\r\nexport class EditRoutingService implements OnDestroy {\r\n  private subscription: Subscription;\r\n  private childFormResult$: Subject<ChildFormResult>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditEntryComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private eavService: EavService,\r\n  ) { }\r\n\r\n  ngOnDestroy() {\r\n    this.childFormResult$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  init() {\r\n    this.subscription = new Subscription();\r\n    this.childFormResult$ = new Subject<ChildFormResult>();\r\n    this.initHideHeader();\r\n    this.initChildFormResult();\r\n    this.refreshOnChildVersionsClosed();\r\n  }\r\n\r\n  /** Tells if field with this index should be expanded */\r\n  isExpanded(fieldId: number, entityGuid: string) {\r\n    const fieldIndex = fieldId.toString();\r\n    const params = this.route.snapshot.params as EditParams;\r\n    const isExpanded = params.detailsEntityGuid === entityGuid && params.detailsFieldId === fieldIndex;\r\n    return isExpanded;\r\n  }\r\n\r\n  /** Tells if field with this index should be expanded */\r\n  isExpanded$(fieldId: number, entityGuid: string) {\r\n    const fieldIndex = fieldId.toString();\r\n    return this.route.params.pipe(\r\n      map((params: EditParams) => params.detailsEntityGuid === entityGuid && params.detailsFieldId === fieldIndex),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n\r\n  /** Fires when child form is closed and has a result, new entity was added */\r\n  childFormResult(fieldId: number, entityGuid: string) {\r\n    return this.childFormResult$.pipe(\r\n      filter(\r\n        childResult => childResult.updateEntityGuid === entityGuid && childResult.updateFieldId === fieldId && childResult.result != null\r\n      ),\r\n      map(childResult => childResult.result)\r\n    );\r\n  }\r\n\r\n  /** Fires when child form is closed */\r\n  childFormClosed() {\r\n    return this.childFormResult$.pipe(map(childResult => null));\r\n  }\r\n\r\n  expand(expand: boolean, fieldId: number, entityGuid: string, componentTag?: string) {\r\n    const params = this.route.snapshot.params as EditParams;\r\n    const oldHasDetails = params.detailsEntityGuid != null && params.detailsFieldId != null;\r\n    const oldEditUrl = `edit/${params.items}` + (oldHasDetails ? `/details/${params.detailsEntityGuid}/${params.detailsFieldId}` : '');\r\n    const newEditUrl = `edit/${params.items}` + (expand ? `/details/${entityGuid}/${fieldId}` : '');\r\n\r\n    const currentUrl = UrlHelpers.calculatePathFromRoot(this.route);\r\n    const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n    if (lastIndex <= 0) { return; }\r\n    const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n    this.router.navigate([newUrl], { state: componentTag && { componentTag } });\r\n  }\r\n\r\n  /** Opens child dialog and stores update entityGuid and fieldId in the url, if field is not expanded already */\r\n  open(fieldId: number, entityGuid: string, form: EditForm) {\r\n    const formUrl = convertFormToUrl(form);\r\n    const params = this.route.snapshot.params as EditParams;\r\n    const hasDetails = params.detailsEntityGuid != null && params.detailsFieldId != null;\r\n    // if field is expanded, just open child because that info will be used for field update\r\n    if (hasDetails) {\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n      return;\r\n    }\r\n\r\n    // otherwise add /update/:entityGuid/:fieldId to the url\r\n    const oldEditUrl = `edit/${params.items}`;\r\n    const newEditUrl = `edit/${params.items}/update/${entityGuid}/${fieldId}/edit/${formUrl}`;\r\n\r\n    const currentUrl = UrlHelpers.calculatePathFromRoot(this.route);\r\n    const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n    if (lastIndex <= 0) { return; }\r\n    const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n    this.router.navigate([newUrl]);\r\n  }\r\n\r\n  /** Update hideHeader for the form. Fix for safari and mobile browsers */\r\n  private initHideHeader() {\r\n    this.subscription.add(\r\n      this.route.params\r\n        .pipe(\r\n          map((params: EditParams) => params.detailsEntityGuid != null && params.detailsFieldId != null),\r\n          distinctUntilChanged(),\r\n        )\r\n        .subscribe(hasDetails => {\r\n          this.languageInstanceService.updateHideHeader(this.eavService.eavConfig.formId, hasDetails);\r\n        })\r\n    );\r\n  }\r\n\r\n  private initChildFormResult() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n        map(() => {\r\n          const params = this.route.snapshot.params as EditParams;\r\n          const hasDetails = params.detailsEntityGuid != null && params.detailsFieldId != null;\r\n          const updateEntityGuid = hasDetails ? params.detailsEntityGuid : params.updateEntityGuid;\r\n          const updateFieldId = hasDetails ? params.detailsFieldId : params.updateFieldId;\r\n          const navigation = this.router.getCurrentNavigation();\r\n          const editResult = navigation.extras?.state;\r\n          const formResult: ChildFormResult = {\r\n            updateEntityGuid,\r\n            updateFieldId: parseInt(updateFieldId, 10),\r\n            result: editResult,\r\n          };\r\n          return formResult;\r\n        }),\r\n      ).subscribe(formResult => {\r\n        // alert subscribers that child form closed\r\n        this.childFormResult$.next(formResult);\r\n\r\n        // clear update ids from url (leave expanded/details)\r\n        const params = this.route.snapshot.params as EditParams;\r\n        const hasUpdate = params.updateEntityGuid != null && params.updateFieldId != null;\r\n        if (!hasUpdate) { return; }\r\n\r\n        const oldEditUrl = `edit/${params.items}/update/${params.updateEntityGuid}/${params.updateFieldId}`;\r\n        const newEditUrl = `edit/${params.items}`;\r\n\r\n        const currentUrl = UrlHelpers.calculatePathFromRoot(this.route);\r\n        const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n        if (lastIndex <= 0) { return; }\r\n        const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n        this.router.navigate([newUrl]);\r\n      })\r\n    );\r\n  }\r\n\r\n  private refreshOnChildVersionsClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n        map(() => {\r\n          const navigation = this.router.getCurrentNavigation();\r\n          const versionsResult = navigation.extras?.state as ItemHistoryResult;\r\n          return versionsResult;\r\n        }),\r\n        filter(versionsResult => versionsResult?.refreshEdit != null),\r\n      ).subscribe(result => {\r\n        if (!result.refreshEdit) { return; }\r\n        const params = this.route.snapshot.params as EditParams;\r\n        const oldEditUrl = `edit/${params.items}`;\r\n        const newEditUrl = `edit/refresh/${params.items}`;\r\n\r\n        const currentUrl = UrlHelpers.calculatePathFromRoot(this.route);\r\n        const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n        if (lastIndex <= 0) { return; }\r\n        const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n        const navRes: NavigateFormResult = {\r\n          navigateUrl: newUrl,\r\n        };\r\n        this.dialogRef.close(navRes);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from 'projects/ng-dialogs/src/app/shared/services/context';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, share, switchMap } from 'rxjs/operators';\r\nimport { EavService, webApiEditRoot } from '.';\r\nimport { EntityInfo } from '../models';\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService {\r\n  constructor(private http: HttpClient, private eavService: EavService, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityInfo[]> {\r\n    // eavConfig for edit ui and context for other calls\r\n    const context = this.eavService.eavConfig ?? this.context;\r\n    return this.http.post<EntityInfo[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'EntityPicker'), entitiesFilter, {\r\n      params: { contentTypeName, appId: context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  // Experimental 2dm\r\n  reactiveEntities(params: Observable<{ contentTypeName: string }>): Observable<EntityInfo[]> {\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(share())),\r\n    );\r\n  }\r\n\r\n  delete(contentType: string, entityId: number, force: boolean): Observable<null> {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType, id: entityId.toString(), appId: this.eavService.eavConfig.appId, force: force.toString() },\r\n    });\r\n  }\r\n}\r\n","import { ValidatorFn, Validators } from '@angular/forms';\r\nimport { FieldSettings } from '../../../edit-types';\r\nimport { InputTypeConstants } from '../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { EavContentTypeAttribute } from '../../shared/models/eav';\r\nimport { CustomValidators } from './custom-validators';\r\n\r\nexport class ValidationHelper {\r\n\r\n  static isRequired(settings: FieldSettings): boolean {\r\n    // hidden field can't be required\r\n    const visible = settings.VisibleInEditUI ?? true;\r\n    if (!visible) { return false; }\r\n\r\n    const required = settings.Required ?? false;\r\n    return required;\r\n  }\r\n\r\n  static getValidators(settings: FieldSettings, attribute: EavContentTypeAttribute): ValidatorFn[] {\r\n    // hidden field can't have validators\r\n    const visible = settings.VisibleInEditUI ?? true;\r\n    if (!visible) { return []; }\r\n\r\n    const validators: ValidatorFn[] = [];\r\n\r\n    // hyperlink-library field will set custom required validator\r\n    const required = settings.Required ?? false;\r\n    const isHyperlinkLibrary = attribute.InputType === InputTypeConstants.HyperlinkLibrary;\r\n    if (required && !isHyperlinkLibrary) {\r\n      validators.push(Validators.required);\r\n    }\r\n\r\n    if (settings.ValidationRegExJavaScript) {\r\n      validators.push(Validators.pattern(settings.ValidationRegExJavaScript));\r\n    }\r\n\r\n    if (settings.Decimals) {\r\n      validators.push(CustomValidators.validateDecimals(settings.Decimals));\r\n    }\r\n\r\n    if (settings.Max > 0) {\r\n      validators.push(Validators.max(settings.Max));\r\n    }\r\n\r\n    if (settings.Min > 0) {\r\n      validators.push(Validators.min(settings.Min));\r\n    }\r\n\r\n    return validators;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { ValidatorFn } from '@angular/forms';\r\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { EavService } from '.';\r\nimport { FieldSettings } from '../../../edit-types';\r\nimport { ValidationHelper } from '../../eav-material-controls/validators/validation-helper';\r\nimport { FieldLogicManager } from '../../field-logic/field-logic-manager';\r\nimport { FieldsSettingsHelpers, GeneralHelpers, InputFieldHelpers, LocalizationHelpers } from '../helpers';\r\nimport { ContentTypeSettings, FieldsProps, TranslationState } from '../models';\r\nimport { ContentTypeService, InputTypeService, ItemService, LanguageInstanceService } from '../store/ngrx-data';\r\n\r\n@Injectable()\r\nexport class FieldsSettingsService implements OnDestroy {\r\n  private contentTypeSettings$: BehaviorSubject<ContentTypeSettings>;\r\n  private fieldsProps$: BehaviorSubject<FieldsProps>;\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n    private contentTypeService: ContentTypeService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private eavService: EavService,\r\n    private itemService: ItemService,\r\n    private inputTypeService: InputTypeService,\r\n  ) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contentTypeSettings$?.complete();\r\n    this.fieldsProps$?.complete();\r\n    this.subscription?.unsubscribe();\r\n  }\r\n\r\n  init(entityGuid: string): void {\r\n    this.subscription = new Subscription();\r\n    this.contentTypeSettings$ = new BehaviorSubject<ContentTypeSettings>(null);\r\n    this.fieldsProps$ = new BehaviorSubject<FieldsProps>(null);\r\n\r\n    const item = this.itemService.getItem(entityGuid);\r\n    const contentTypeId = InputFieldHelpers.getContentTypeId(item);\r\n    const contentType$ = this.contentTypeService.getContentType$(contentTypeId);\r\n    const itemHeader$ = this.itemService.getItemHeader$(entityGuid);\r\n    const currentLanguage$ = this.languageInstanceService.getCurrentLanguage$(this.eavService.eavConfig.formId);\r\n    const defaultLanguage$ = this.languageInstanceService.getDefaultLanguage$(this.eavService.eavConfig.formId);\r\n\r\n    this.subscription.add(\r\n      combineLatest([contentType$, itemHeader$, currentLanguage$, defaultLanguage$]).pipe(\r\n        map(([contentType, itemHeader, currentLanguage, defaultLanguage]) => {\r\n          const ctSettings = FieldsSettingsHelpers.mergeSettings<ContentTypeSettings>(\r\n            contentType.Metadata, currentLanguage, defaultLanguage,\r\n          );\r\n          ctSettings.Description ??= '';\r\n          ctSettings.EditInstructions ??= '';\r\n          ctSettings.Label ??= '';\r\n          ctSettings.ListInstructions ??= '';\r\n          ctSettings.Notes ??= '';\r\n          ctSettings.Icon ??= '';\r\n          ctSettings.Link ??= '';\r\n          ctSettings._itemTitle = FieldsSettingsHelpers.getContentTypeTitle(contentType, currentLanguage, defaultLanguage);\r\n          ctSettings._slotCanBeEmpty = itemHeader.Group?.SlotCanBeEmpty ?? false;\r\n          ctSettings._slotIsEmpty = itemHeader.Group?.SlotIsEmpty ?? false;\r\n          return ctSettings;\r\n        }),\r\n      ).subscribe(ctSettings => {\r\n        this.contentTypeSettings$.next(ctSettings);\r\n      })\r\n    );\r\n\r\n    const itemAttributes$ = this.itemService.getItemAttributes$(entityGuid);\r\n    const inputTypes$ = this.inputTypeService.getInputTypes$();\r\n    this.subscription.add(\r\n      combineLatest([contentType$, currentLanguage$, defaultLanguage$, itemAttributes$, itemHeader$, inputTypes$]).pipe(\r\n        map(([contentType, currentLanguage, defaultLanguage, itemAttributes, itemHeader, inputTypes]) => {\r\n          const fieldsProps: FieldsProps = {};\r\n          for (const attribute of contentType.Attributes) {\r\n            const attributeValues = itemAttributes[attribute.Name];\r\n            // empty-default value is null\r\n            const value = LocalizationHelpers.translate(currentLanguage, defaultLanguage, attributeValues, null);\r\n            // custom-default inputType is null\r\n            const inputType = inputTypes.find(i => i.Type === attribute.InputType);\r\n\r\n            const merged = FieldsSettingsHelpers.mergeSettings<FieldSettings>(attribute.Metadata, currentLanguage, defaultLanguage);\r\n            // update @All settings\r\n            merged.Name ??= '';\r\n            merged.Placeholder ??= '';\r\n            merged.Notes ??= '';\r\n            merged.VisibleInEditUI ??= true;\r\n            merged.Required ??= false;\r\n            merged.Disabled ??= false;\r\n            merged.DisableTranslation ??= false;\r\n            // special fixes\r\n            merged.Name = merged.Name || attribute.Name;\r\n            merged.Required = ValidationHelper.isRequired(merged);\r\n            const slotIsEmpty = itemHeader.Group?.SlotCanBeEmpty && itemHeader.Group?.SlotIsEmpty;\r\n            merged.DisableTranslation = FieldsSettingsHelpers.findDisableTranslation(\r\n              inputType, attributeValues, defaultLanguage, attribute.Metadata,\r\n            );\r\n            merged.DisableTranslation = slotIsEmpty || merged.DisableTranslation;\r\n            merged.Disabled = slotIsEmpty || merged.Disabled;\r\n            merged.Disabled = FieldsSettingsHelpers.getDisabledBecauseTranslations(\r\n              attributeValues, merged.DisableTranslation, currentLanguage, defaultLanguage,\r\n            ) || merged.Disabled;\r\n            // update settings with respective FieldLogics\r\n            const logic = FieldLogicManager.singleton().get(attribute.InputType);\r\n            const fixed = logic?.update(merged, value) ?? merged;\r\n\r\n            const validators = ValidationHelper.getValidators(fixed, attribute);\r\n            const calculatedInputType = InputFieldHelpers.calculateInputType(attribute, inputTypes);\r\n            const wrappers = InputFieldHelpers.getWrappers(fixed, calculatedInputType);\r\n            const initialSettings = FieldsSettingsHelpers.mergeSettings<FieldSettings>(\r\n              attribute.Metadata, this.eavService.eavConfig.lang, defaultLanguage,\r\n            );\r\n            const initialDisabled = initialSettings.Disabled ?? false;\r\n            const fieldTranslation = FieldsSettingsHelpers.getTranslationState(\r\n              attributeValues, fixed.DisableTranslation, currentLanguage, defaultLanguage,\r\n            );\r\n\r\n            fieldsProps[attribute.Name] = {\r\n              calculatedInputType,\r\n              constants: {\r\n                angularAssets: inputType?.AngularAssets,\r\n                contentTypeId,\r\n                entityGuid,\r\n                fieldName: attribute.Name,\r\n                index: contentType.Attributes.indexOf(attribute),\r\n                initialDisabled,\r\n                inputType: calculatedInputType.inputType,\r\n                isExternal: calculatedInputType.isExternal,\r\n                isLastInGroup: FieldsSettingsHelpers.findIsLastInGroup(contentType, attribute),\r\n                type: attribute.Type,\r\n              },\r\n              settings: fixed,\r\n              translationState: fieldTranslation,\r\n              validators,\r\n              value,\r\n              wrappers,\r\n            };\r\n          }\r\n          return fieldsProps;\r\n        }),\r\n      ).subscribe(fieldsProps => {\r\n        this.fieldsProps$.next(fieldsProps);\r\n      })\r\n    );\r\n  }\r\n\r\n  getContentTypeSettings$(): Observable<ContentTypeSettings> {\r\n    return this.contentTypeSettings$.asObservable();\r\n  }\r\n\r\n  getFieldsProps(): FieldsProps {\r\n    return this.fieldsProps$.value;\r\n  }\r\n\r\n  getFieldsProps$(): Observable<FieldsProps> {\r\n    return this.fieldsProps$.asObservable();\r\n  }\r\n\r\n  getFieldSettings(fieldName: string): FieldSettings {\r\n    return this.fieldsProps$.value[fieldName].settings;\r\n  }\r\n\r\n  getFieldSettings$(fieldName: string): Observable<FieldSettings> {\r\n    return this.fieldsProps$.pipe(\r\n      map(fieldsSettings => fieldsSettings[fieldName].settings),\r\n      distinctUntilChanged((oldSettings, newSettings) => {\r\n        const equal = GeneralHelpers.objectsEqual(oldSettings, newSettings);\r\n        return equal;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getFieldValidation$(fieldName: string): Observable<ValidatorFn[]> {\r\n    return this.fieldsProps$.pipe(\r\n      map(fieldsSettings => fieldsSettings[fieldName].validators),\r\n      distinctUntilChanged((oldValidators, newValidators) => {\r\n        const equal = GeneralHelpers.arraysEqual(oldValidators, newValidators);\r\n        return equal;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getTranslationState$(fieldName: string): Observable<TranslationState> {\r\n    return this.fieldsProps$.pipe(\r\n      map(fieldsSettings => fieldsSettings[fieldName].translationState),\r\n      distinctUntilChanged((oldState, newState) => {\r\n        const equal = GeneralHelpers.objectsEqual(oldState, newState);\r\n        return equal;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EavService, FieldsSettingsService } from '.';\r\nimport { consoleLogAngular } from '../../../ng-dialogs/src/app/shared/helpers/console-log-angular.helper';\r\nimport { InputFieldHelpers, LocalizationHelpers } from '../helpers';\r\nimport { EavItem } from '../models/eav';\r\nimport { ContentTypeService, ItemService, LanguageInstanceService } from '../store/ngrx-data';\r\n\r\n@Injectable()\r\nexport class FieldsTranslateService {\r\n  private entityGuid: string;\r\n  private contentTypeId: string;\r\n\r\n  constructor(\r\n    private itemService: ItemService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private eavService: EavService,\r\n    private contentTypeService: ContentTypeService,\r\n    private fieldsSettingsService: FieldsSettingsService,\r\n  ) { }\r\n\r\n  init(entityGuid: string): void {\r\n    this.entityGuid = entityGuid;\r\n    const item = this.itemService.getItem(entityGuid);\r\n    this.contentTypeId = InputFieldHelpers.getContentTypeId(item);\r\n  }\r\n\r\n  translate(fieldName: string, isTransaction = false, transactionItem?: EavItem): EavItem {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n\r\n    transactionItem = this.itemService.removeItemAttributeDimension(this.entityGuid, fieldName, currentLanguage, true, transactionItem);\r\n\r\n    const attributes = this.itemService.getItemAttributes(this.entityGuid);\r\n    const values = attributes[fieldName];\r\n    const defaultValue = LocalizationHelpers.getValueTranslation(values, defaultLanguage, defaultLanguage);\r\n    const contentType = this.contentTypeService.getContentType(this.contentTypeId);\r\n    const ctAttribute = contentType.Attributes.find(a => a.Name === fieldName);\r\n    transactionItem = this.itemService.addItemAttributeValue(\r\n      this.entityGuid, fieldName, defaultValue.Value, currentLanguage, false, ctAttribute.Type, isTransaction, transactionItem,\r\n    );\r\n    return transactionItem;\r\n  }\r\n\r\n  dontTranslate(fieldName: string, isTransaction = false, transactionItem?: EavItem): EavItem {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    transactionItem = this.itemService.removeItemAttributeDimension(\r\n      this.entityGuid, fieldName, currentLanguage, isTransaction, transactionItem,\r\n    );\r\n    return transactionItem;\r\n  }\r\n\r\n  copyFrom(fieldName: string, copyFromLanguageKey: string): void {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n\r\n    const attributes = this.itemService.getItemAttributes(this.entityGuid);\r\n    const values = attributes[fieldName];\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    const attributeValueTranslation = LocalizationHelpers.getValueTranslation(values, copyFromLanguageKey, defaultLanguage);\r\n    if (attributeValueTranslation) {\r\n      const valueAlreadyExists = values\r\n        ? LocalizationHelpers.isEditableOrReadonlyTranslationExist(values, currentLanguage, defaultLanguage)\r\n        : false;\r\n\r\n      if (valueAlreadyExists) {\r\n        // Copy attribute value where language is languageKey to value where language is current language\r\n        this.itemService.updateItemAttributeValue(\r\n          this.entityGuid, fieldName, attributeValueTranslation.Value, currentLanguage, defaultLanguage, false,\r\n        );\r\n      } else {\r\n        // Copy attribute value where language is languageKey to new attribute with current language\r\n        const contentType = this.contentTypeService.getContentType(this.contentTypeId);\r\n        const ctAttribute = contentType.Attributes.find(a => a.Name === fieldName);\r\n        this.itemService.addItemAttributeValue(\r\n          this.entityGuid, fieldName, attributeValueTranslation.Value, currentLanguage, false, ctAttribute.Type,\r\n        );\r\n      }\r\n    } else {\r\n      consoleLogAngular(`${currentLanguage}: Cant copy value from ${copyFromLanguageKey} because that value does not exist.`);\r\n    }\r\n  }\r\n\r\n  linkReadOnly(fieldName: string, linkWithLanguageKey: string): void {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    const transactionItem = this.itemService.removeItemAttributeDimension(this.entityGuid, fieldName, currentLanguage, true);\r\n    this.itemService.addItemAttributeDimension(\r\n      this.entityGuid, fieldName, currentLanguage, linkWithLanguageKey, defaultLanguage, true, transactionItem,\r\n    );\r\n  }\r\n\r\n  linkReadWrite(fieldName: string, linkWithLanguageKey: string): void {\r\n    if (this.isTranslationDisabled(fieldName)) { return; }\r\n\r\n    const currentLanguage = this.languageInstanceService.getCurrentLanguage(this.eavService.eavConfig.formId);\r\n    const defaultLanguage = this.languageInstanceService.getDefaultLanguage(this.eavService.eavConfig.formId);\r\n    const transactionItem = this.itemService.removeItemAttributeDimension(this.entityGuid, fieldName, currentLanguage, true);\r\n    this.itemService.addItemAttributeDimension(\r\n      this.entityGuid, fieldName, currentLanguage, linkWithLanguageKey, defaultLanguage, false, transactionItem,\r\n    );\r\n  }\r\n\r\n  translateMany(): void {\r\n    const attributes = this.itemService.getItemAttributes(this.entityGuid);\r\n    const translateable = Object.keys(attributes).filter(fieldName => !this.isTranslationDisabled(fieldName));\r\n\r\n    let transactionItem: EavItem;\r\n    for (const fieldName of translateable) {\r\n      // will finish the transaction when last field is being translated\r\n      const isTransaction = fieldName !== translateable[translateable.length - 1];\r\n      transactionItem = this.translate(fieldName, isTransaction, transactionItem);\r\n    }\r\n  }\r\n\r\n  dontTranslateMany(): void {\r\n    const attributes = this.itemService.getItemAttributes(this.entityGuid);\r\n    const translateable = Object.keys(attributes).filter(fieldName => !this.isTranslationDisabled(fieldName));\r\n\r\n    let transactionItem: EavItem;\r\n    for (const fieldName of translateable) {\r\n      // will finish the transaction when last field is being translated\r\n      const isTransaction = fieldName !== translateable[translateable.length - 1];\r\n      transactionItem = this.dontTranslate(fieldName, isTransaction, transactionItem);\r\n    }\r\n  }\r\n\r\n  private isTranslationDisabled(fieldName: string) {\r\n    const fieldsProps = this.fieldsSettingsService.getFieldsProps();\r\n    return fieldsProps[fieldName].settings.DisableTranslation;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\n\r\n@Injectable()\r\nexport class FileTypeService {\r\n  private defaultIcon = 'file';\r\n  private checkImgRegEx = /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*\\.(?:jpg|jpeg|gif|png))(?:\\?([^#]*))?(?:#(.*))?/i;\r\n  private customExtensions: Dictionary<string> = {\r\n    doc: 'file-word',\r\n    docx: 'file-word',\r\n    xls: 'file-excel',\r\n    xlsx: 'file-excel',\r\n    ppt: 'file-powerpoint',\r\n    pptx: 'file-powerpoint',\r\n    pdf: 'file-pdf',\r\n    mp3: 'file-audio',\r\n    avi: 'file-video',\r\n    mpg: 'file-video',\r\n    mpeg: 'file-video',\r\n    mov: 'file-video',\r\n    mp4: 'file-video',\r\n    zip: 'file-archive',\r\n    rar: 'file-archive',\r\n    txt: 'file-text',\r\n    html: 'file-code',\r\n    css: 'file-code',\r\n    xml: 'file-code',\r\n    xsl: 'file-code',\r\n  };\r\n\r\n  private matExtensions: Dictionary<string> = {\r\n    vcf: 'person',\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  getExtension(filename: string) {\r\n    return filename.substr(filename.lastIndexOf('.') + 1).toLowerCase();\r\n  }\r\n\r\n  getIconClass(filename: string) {\r\n    const ext = this.getExtension(filename);\r\n    return this.matExtensions[ext] || this.customExtensions[ext] || this.defaultIcon;\r\n  }\r\n\r\n  isKnownType(filename: string) {\r\n    return this.matExtensions[this.getExtension(filename)] != null;\r\n  }\r\n\r\n  isImage(filename: string) {\r\n    return this.checkImgRegEx.test(filename);\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { EavService } from '.';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\n\r\n@Injectable()\r\nexport class FormsStateService implements OnDestroy {\r\n  formsValid$: BehaviorSubject<boolean>;\r\n  formsDirty$: BehaviorSubject<boolean>;\r\n\r\n  private formsValid: Dictionary<boolean>;\r\n  private formsDirty: Dictionary<boolean>;\r\n\r\n  constructor(private eavService: EavService) { }\r\n\r\n  ngOnDestroy() {\r\n    this.formsValid$?.complete();\r\n    this.formsDirty$?.complete();\r\n  }\r\n\r\n  init() {\r\n    this.formsValid$ = new BehaviorSubject(false);\r\n    this.formsDirty$ = new BehaviorSubject(false);\r\n    this.formsValid = {};\r\n    this.formsDirty = {};\r\n    for (const entityGuid of this.eavService.eavConfig.itemGuids) {\r\n      this.formsValid[entityGuid] = false;\r\n      this.formsDirty[entityGuid] = false;\r\n    }\r\n  }\r\n\r\n  getFormValid(entityGuid: string) {\r\n    return this.formsValid[entityGuid];\r\n  }\r\n\r\n  setFormValid(entityGuid: string, isValid: boolean) {\r\n    this.formsValid[entityGuid] = isValid;\r\n\r\n    const allValid = !Object.values(this.formsValid).some(valid => valid === false);\r\n    if (allValid !== this.formsValid$.value) {\r\n      this.formsValid$.next(allValid);\r\n    }\r\n  }\r\n\r\n  setFormDirty(entityGuid: string, isDirty: boolean) {\r\n    this.formsDirty[entityGuid] = isDirty;\r\n\r\n    const anyDirty = Object.values(this.formsDirty).some(dirty => dirty === true);\r\n    if (anyDirty !== this.formsDirty$.value) {\r\n      this.formsDirty$.next(anyDirty);\r\n    }\r\n  }\r\n}\r\n","import appleFilled from '!raw-loader!../../assets/icons/2sxc/Material-Icon-Adam-48-filled.svg';\r\nimport apple from '!raw-loader!../../assets/icons/2sxc/Material-Icon-Adam-48.svg';\r\nimport draftBranch from '!raw-loader!../../assets/icons/font-awesome/draft-branch.svg';\r\nimport fileArchive from '!raw-loader!../../assets/icons/font-awesome/file-archive.svg';\r\nimport fileAudio from '!raw-loader!../../assets/icons/font-awesome/file-audio.svg';\r\nimport fileCode from '!raw-loader!../../assets/icons/font-awesome/file-code.svg';\r\nimport fileExcel from '!raw-loader!../../assets/icons/font-awesome/file-excel.svg';\r\nimport fileImage from '!raw-loader!../../assets/icons/font-awesome/file-image.svg';\r\nimport filePdf from '!raw-loader!../../assets/icons/font-awesome/file-pdf.svg';\r\nimport filePowerpoint from '!raw-loader!../../assets/icons/font-awesome/file-powerpoint.svg';\r\nimport fileText from '!raw-loader!../../assets/icons/font-awesome/file-text.svg';\r\nimport fileVideo from '!raw-loader!../../assets/icons/font-awesome/file-video.svg';\r\nimport fileWord from '!raw-loader!../../assets/icons/font-awesome/file-word.svg';\r\nimport file from '!raw-loader!../../assets/icons/font-awesome/file.svg';\r\nimport folderPlus from '!raw-loader!../../assets/icons/font-awesome/folder-plus.svg';\r\nimport folder from '!raw-loader!../../assets/icons/font-awesome/folder.svg';\r\nimport sitemap from '!raw-loader!../../assets/icons/font-awesome/sitemap.svg';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Injectable()\r\nexport class LoadIconsService {\r\n  private icons = [\r\n    { name: 'apple', html: apple },\r\n    { name: 'appleFilled', html: appleFilled },\r\n    { name: 'draft-branch', html: draftBranch },\r\n    { name: 'file', html: file },\r\n    { name: 'file-archive', html: fileArchive },\r\n    { name: 'file-audio', html: fileAudio },\r\n    { name: 'file-code', html: fileCode },\r\n    { name: 'file-excel', html: fileExcel },\r\n    { name: 'file-image', html: fileImage },\r\n    { name: 'file-pdf', html: filePdf },\r\n    { name: 'file-powerpoint', html: filePowerpoint },\r\n    { name: 'file-text', html: fileText },\r\n    { name: 'file-video', html: fileVideo },\r\n    { name: 'file-word', html: fileWord },\r\n    { name: 'folder', html: folder },\r\n    { name: 'folder-plus', html: folderPlus },\r\n    { name: 'sitemap', html: sitemap },\r\n  ];\r\n\r\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) { }\r\n\r\n  load() {\r\n    this.icons.forEach(icon => {\r\n      this.matIconRegistry.addSvgIconLiteral(\r\n        icon.name,\r\n        this.domSanitizer.bypassSecurityTrustHtml(icon.html),\r\n      );\r\n    });\r\n  }\r\n}\r\n","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\r\\n<!-- Generator: Adobe Illustrator 23.0.3, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\\r\\n<svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\r\\n\\t viewBox=\\\"0 0 48 48\\\" style=\\\"enable-background:new 0 0 48 48;\\\" xml:space=\\\"preserve\\\">\\r\\n<style type=\\\"text/css\\\">\\r\\n\\t.st0{display:none;}\\r\\n\\t.st1{display:inline;}\\r\\n</style>\\r\\n<g id=\\\"Layer_1\\\">\\r\\n\\t<path d=\\\"M32,4c-6,0-10,4-10,10C28,14,32,10,32,4z\\\"/>\\r\\n</g>\\r\\n<g id=\\\"Layer_3\\\" class=\\\"st0\\\">\\r\\n</g>\\r\\n<g id=\\\"Icon\\\">\\r\\n\\t<path d=\\\"M32,20c3.7,0,6,2.1,6,5.47C38,33.21,33.01,40,30.06,40c-0.25-0.04-0.93-0.35-1.38-0.56c-1.25-0.58-2.8-1.3-4.68-1.3\\r\\n\\t\\ts-3.43,0.72-4.68,1.3C18.87,39.65,18.19,39.97,18,40c-3.01,0-8-6.79-8-14.53C10,22.1,12.3,20,16,20c2.44,0,5.29,1.17,6.17,1.62\\r\\n\\t\\tL24,22.56l1.83-0.94C26.64,21.2,29.53,20,32,20 M32,16c-4,0-8,2.06-8,2.06S20,16,16,16c-6,0-10,4.01-10,9.47C6,34.74,12,44,18,44\\r\\n\\t\\tc2,0,4-1.85,6-1.85S28,44,30,44c6,0,12-9.26,12-18.53C42,20.01,38,16,32,16L32,16z\\\"/>\\r\\n</g>\\r\\n</svg>\\r\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\r\\n<!-- Generator: Adobe Illustrator 23.0.3, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\\r\\n<svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\r\\n\\t viewBox=\\\"0 0 48 48\\\" style=\\\"enable-background:new 0 0 48 48;\\\" xml:space=\\\"preserve\\\">\\r\\n<style type=\\\"text/css\\\">\\r\\n\\t.st0{display:none;}\\r\\n\\t.st1{display:inline;}\\r\\n</style>\\r\\n<g id=\\\"Layer_1\\\">\\r\\n\\t<path d=\\\"M32,4c-6,0-10,4-10,10C28,14,32,10,32,4z\\\"/>\\r\\n</g>\\r\\n<g id=\\\"Layer_3\\\" class=\\\"st0\\\">\\r\\n</g>\\r\\n<g id=\\\"Icon\\\">\\r\\n\\t<path d=\\\"M32,16c-4,0-8,2.06-8,2.06S20,16,16,16c-6,0-10,4.01-10,9.47C6,34.74,12,44,18,44c2,0,4-1.85,6-1.85S28,44,30,44\\r\\n\\t\\tc6,0,12-9.26,12-18.53C42,20.01,38,16,32,16L32,16z\\\"/>\\r\\n</g>\\r\\n</svg>\\r\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 39.2 28.2 71.8 65.5 78.7-.8 17.2-5 30.4-12.7 40-17.5 21.8-53.1 25.2-90.7 28.7-28.2 2.6-57.4 5.4-80.4 16.9-3.4 1.7-6.7 3.6-9.7 5.7V158.4c36.5-7.4 64-39.7 64-78.4 0-44.2-35.8-80-80-80S0 35.8 0 80c0 38.7 27.5 71 64 78.4v195.2C27.5 361 0 393.3 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-36.9-24.9-67.9-58.9-77.2 5-9.6 12.3-14.6 19-18 17.5-8.8 42.5-11.2 68.9-13.7 42.6-4 86.7-8.1 112.7-40.5 12.4-15.5 19-35.5 19.8-60.7C357.3 214 384 182.1 384 144zM32 80c0-26.5 21.5-48 48-48s48 21.5 48 48-21.5 48-48 48-48-21.5-48-48zm96 352c0 26.5-21.5 48-48 48s-48-21.5-48-48c0-26.4 21.4-47.9 47.8-48h.6c26.3.2 47.6 21.7 47.6 48zm187.8-241.5L304 192c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48c0 22.4-15.4 41.2-36.2 46.5z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M128 96v32h32V96zm65.9 169.6c-1.1-5.6-6-9.6-11.8-9.6H160v-32h-32v32l-19.4 97.2c-6.5 32.5 18.3 62.8 51.4 62.8s57.9-30.3 51.4-62.8zm-33.6 124.5c-17.9 0-32.4-12.1-32.4-27s14.5-27 32.4-27 32.4 12.1 32.4 27-14.5 27-32.4 27zM128 160v32h32v-32zm64-96h-32v32h32zm177.9 33.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 32.5c2.8.7 5.4 2.1 7.4 4.2l83.9 83.9c2 2 3.5 4.6 4.2 7.4H256zM352 464c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h79.7v32h32V32H224v104c0 13.3 10.7 24 24 24h104zM192 192h-32v32h32zm0-64h-32v32h32z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-77.6-66.6c38.5-26 61.6-69.3 61.6-115.7 0-24.7-6.5-48.9-18.9-70.1-12-20.6-29.1-37.8-49.6-50-7.1-4.2-16.3-1.9-20.6 5.2-4.2 7.1-1.9 16.3 5.2 20.6 33.1 19.7 53.7 55.8 53.7 94.3 0 36.5-18.1 70.4-48.3 90.9-6.9 4.6-8.7 14-4 20.8 2.9 4.3 7.6 6.6 12.4 6.6 3.1 0 6-.8 8.5-2.6zm-26.6-38.3c26-17.3 41.5-46.2 41.5-77.4 0-32.9-17.7-63.7-46.2-80.3-7.2-4.2-16.3-1.7-20.5 5.4-4.2 7.2-1.7 16.3 5.4 20.5 19.3 11.2 31.3 32 31.3 54.3 0 21.1-10.5 40.7-28.1 52.4-6.9 4.6-8.8 13.9-4.2 20.8 2.9 4.4 7.7 6.7 12.5 6.7 2.8.1 5.7-.7 8.3-2.4zm-27-38.2c13.7-8.5 21.8-23.1 21.8-39.2 0-17-9.3-32.5-24.2-40.6-7.3-3.9-16.4-1.2-20.3 6.1-3.9 7.3-1.2 16.4 6.1 20.3 5.2 2.8 8.5 8.3 8.5 14.2 0 5.6-2.9 10.8-7.6 13.7-7 4.4-9.2 13.6-4.8 20.7 2.8 4.6 7.7 7.1 12.8 7.1 2.5 0 5.2-.7 7.7-2.3zM138 266.7v74.7L112 322H94v-36h18l26-19.3m17.9-50.7c-2.9 0-6 1.1-8.4 3.5L104 256H76c-6.6 0-12 5.4-12 12v72c0 6.6 5.4 12 12 12h28l43.5 36.5c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V228c0-7.2-5.9-12-12.1-12z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zm-22.627 22.628a15.89 15.89 0 0 1 4.195 7.431H256V32.491a15.88 15.88 0 0 1 7.431 4.195l83.883 83.883zM336 480H48c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16h176v104c0 13.255 10.745 24 24 24h104v304c0 8.837-7.163 16-16 16zm-161.471-67.404l-25.928-7.527a5.1 5.1 0 0 1-3.476-6.32l58.027-199.869a5.1 5.1 0 0 1 6.32-3.476l25.927 7.527a5.1 5.1 0 0 1 3.476 6.32L180.849 409.12a5.1 5.1 0 0 1-6.32 3.476zm-48.446-47.674l18.492-19.724a5.101 5.101 0 0 0-.351-7.317L105.725 304l38.498-33.881a5.1 5.1 0 0 0 .351-7.317l-18.492-19.724a5.1 5.1 0 0 0-7.209-.233L57.61 300.279a5.1 5.1 0 0 0 0 7.441l61.263 57.434a5.1 5.1 0 0 0 7.21-.232zm139.043.232l61.262-57.434a5.1 5.1 0 0 0 0-7.441l-61.262-57.434a5.1 5.1 0 0 0-7.209.233l-18.492 19.724a5.101 5.101 0 0 0 .351 7.317L278.275 304l-38.499 33.881a5.1 5.1 0 0 0-.351 7.317l18.492 19.724a5.1 5.1 0 0 0 7.209.232z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zM211.7 308l50.5-81.8c4.8-8-.9-18.2-10.3-18.2h-4.1c-4.1 0-7.9 2.1-10.1 5.5-31 48.5-36.4 53.5-45.7 74.5-17.2-32.2-8.4-16-45.8-74.5-2.2-3.4-6-5.5-10.1-5.5H132c-9.4 0-15.1 10.3-10.2 18.2L173 308l-59.1 89.5c-5.1 8 .6 18.5 10.1 18.5h3.5c4.1 0 7.9-2.1 10.1-5.5 37.2-58 45.3-62.5 54.4-82.5 31.5 56.7 44.3 67.2 54.4 82.6 2.2 3.4 6 5.4 10 5.4h3.6c9.5 0 15.2-10.4 10.1-18.4L211.7 308z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M159 336l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0l-39 39L63 448h256V304l-55.5-55.5c-4.7-4.7-12.3-4.7-17 0L159 336zm96-50.7l32 32V416H95.1l.3-67.2 15.6-15.6 48 48c20.3-20.3 77.7-77.6 96-95.9zM127 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm0-96c17.6 0 32 14.4 32 32s-14.4 32-32 32-32-14.4-32-32 14.4-32 32-32zm242.9-62.1L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5zM352 464c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-22-171.2c-13.5-13.3-55-9.2-73.7-6.7-21.2-12.8-35.2-30.4-45.1-56.6 4.3-18 12-47.2 6.4-64.9-4.4-28.1-39.7-24.7-44.6-6.8-5 18.3-.3 44.4 8.4 77.8-11.9 28.4-29.7 66.9-42.1 88.6-20.8 10.7-54.1 29.3-58.8 52.4-3.5 16.8 22.9 39.4 53.1 6.4 9.1-9.9 19.3-24.8 31.3-45.5 26.7-8.8 56.1-19.8 82-24 21.9 12 47.6 19.9 64.6 19.9 27.7.1 28.9-30.2 18.5-40.6zm-229.2 89c5.9-15.9 28.6-34.4 35.5-40.8-22.1 35.3-35.5 41.5-35.5 40.8zM180 175.5c8.7 0 7.8 37.5 2.1 47.6-5.2-16.3-5-47.6-2.1-47.6zm-28.4 159.3c11.3-19.8 21-43.2 28.8-63.7 9.7 17.7 22.1 31.7 35.1 41.5-24.3 4.7-45.4 15.1-63.9 22.2zm153.4-5.9s-5.8 7-43.5-9.1c41-3 47.7 6.4 43.5 9.1z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zM204.3 208H140c-6.6 0-12 5.4-12 12v184c0 6.6 5.4 12 12 12h8c6.6 0 12-5.4 12-12v-60.4h44.3c38.7 0 67.7-27.3 67.7-69 0-38.6-23.8-66.6-67.7-66.6zm26 97.7c-7.5 7.6-17.8 11.4-31 11.4H160V233h39.7c12.9 0 23.1 3.7 30.6 11.1 15.3 15.1 15 46.5 0 61.6z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-48-244v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm0 64v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm0 64v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M224 280.593C224 267.01 212.989 256 199.407 256H88.593C75.011 256 64 267.01 64 280.593v110.815C64 404.99 75.011 416 88.593 416h110.814C212.989 416 224 404.99 224 391.407V381l27.971 27.971a23.998 23.998 0 0 0 16.97 7.029H296c13.255 0 24-10.745 24-24V280c0-13.255-10.745-24-24-24h-27.059a24.003 24.003 0 0 0-16.97 7.029L224 291v-10.407zM192 384H96v-96h96v96zm80.255-96H288v96h-15.745L224 342.826v-13.652L272.255 288zm97.686-190.059l-83.883-83.882A47.996 47.996 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM256 32.491a15.888 15.888 0 0 1 7.432 4.195l83.882 83.882a15.882 15.882 0 0 1 4.195 7.431H256V32.491zM352 464c0 8.837-7.164 16-16 16H48c-8.836 0-16-7.163-16-16V48c0-8.837 7.164-16 16-16h176v104c0 13.255 10.745 24 24 24h104v304z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><path d=\\\"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zm-22.6 22.7c2.1 2.1 3.5 4.6 4.2 7.4H256V32.5c2.8.7 5.3 2.1 7.4 4.2l83.9 83.9zM336 480H48c-8.8 0-16-7.2-16-16V48c0-8.8 7.2-16 16-16h176v104c0 13.3 10.7 24 24 24h104v304c0 8.8-7.2 16-16 16zm-53.6-246.5c-6.8 32.8-32.5 139.7-33.4 150.3-5.8-29.1-.7 1.6-41.8-150.9-1.4-5.2-6.2-8.9-11.6-8.9h-6.4c-5.4 0-10.2 3.6-11.6 8.9-38.3 142.3-37.4 140.6-39.4 154.7-4.1-23.9 2.1-2.9-34.4-154.4-1.3-5.4-6.1-9.2-11.7-9.2h-7.2c-7.8 0-13.5 7.3-11.6 14.9 9.5 38 34.5 137.4 42.2 168 1.3 5.3 6.1 9.1 11.6 9.1h17c5.4 0 10.2-3.7 11.6-8.9 34.2-127.7 33.5-123.4 36.7-142.9 6.5 31.1.2 7 36.7 142.9 1.4 5.2 6.2 8.9 11.6 8.9h14c5.5 0 13.7-3.7 15.1-9l42.8-168c1.9-7.6-3.8-15-11.6-15h-6.8c-5.7 0-10.6 4-11.8 9.5z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M194.74 96l54.63 54.63c6 6 14.14 9.37 22.63 9.37h192c8.84 0 16 7.16 16 16v224c0 8.84-7.16 16-16 16H48c-8.84 0-16-7.16-16-16V112c0-8.84 7.16-16 16-16h146.74M48 64C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48H272l-54.63-54.63c-6-6-14.14-9.37-22.63-9.37H48z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path d=\\\"M344 272h-72v-72c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v72h-72c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h72v72c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-72h72c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zM194.74 96l54.63 54.63c6 6 14.14 9.37 22.63 9.37h192c8.84 0 16 7.16 16 16v224c0 8.84-7.16 16-16 16H48c-8.84 0-16-7.16-16-16V112c0-8.84 7.16-16 16-16h146.74M48 64C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48H272l-54.63-54.63c-6-6-14.14-9.37-22.63-9.37H48z\\\"/></svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><path d=\\\"M608 352h-32v-97.59c0-16.77-13.62-30.41-30.41-30.41H336v-64h48c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H256c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h48v64H94.41C77.62 224 64 237.64 64 254.41V352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32H96v-96h208v96h-32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32h-32v-96h208v96h-32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm-480 32v96H32v-96h96zm240 0v96h-96v-96h96zM256 128V32h128v96H256zm352 352h-96v-96h96v96z\\\"/></svg>\";","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../../ng-dialogs/src/app/shared/services/context';\r\nimport { QueryStreams } from '../../eav-material-controls/input-types/entity/entity-query/entity-query.models';\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext, private context: Context) { }\r\n\r\n  getAvailableEntities(queryUrl: string, includeGuid: boolean, params: string) {\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const hasGuid = paramsLower.includes('includeguid=') ?? false;\r\n    const allParams =\r\n      (hasGuid ? '' : `&includeGuid=${includeGuid}`)\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '');\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.get<QueryStreams>(this.dnnContext.$2sxc.http.apiUrl(`app/auto/query/${queryUrl}?${urlParams}`));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EavService } from '.';\r\nimport { EavWindow } from '../../../ng-dialogs/src/app/shared/models/eav-window.model';\r\nimport { UrlHelpers } from '../helpers';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport enum FileTypeConstants {\r\n  CSS = '.css',\r\n  JS = '.js',\r\n}\r\n\r\nexport interface LoadFile {\r\n  path: string;\r\n  type: string;\r\n  loaded: boolean;\r\n  domEl: HTMLLinkElement | HTMLScriptElement;\r\n}\r\n\r\n@Injectable()\r\nexport class ScriptsLoaderService {\r\n  private loadedFiles: LoadFile[] = [];\r\n\r\n  constructor(private eavService: EavService) { }\r\n\r\n  /** Loads CSS and JS files in order (CSS first) and calls callback function when finished */\r\n  load(scripts: string[], callback: () => void) {\r\n    const sortedFiles = this.sortByType(scripts);\r\n    this.insertToDom(sortedFiles, callback, 0); // async, called again and again after each script is loaded\r\n  }\r\n\r\n  private sortByType(scripts: string[]): LoadFile[] {\r\n    const cssFiles: LoadFile[] = [];\r\n    const jsFiles: LoadFile[] = [];\r\n    scripts.forEach(script => {\r\n      const file: LoadFile = {\r\n        path: this.resolveSpecialPaths(script),\r\n        type: null,\r\n        loaded: false,\r\n        domEl: null\r\n      };\r\n      if (file.path.endsWith(FileTypeConstants.CSS)) {\r\n        file.type = FileTypeConstants.CSS;\r\n        cssFiles.push(file);\r\n      } else if (file.path.endsWith(FileTypeConstants.JS)) {\r\n        file.type = FileTypeConstants.JS;\r\n        jsFiles.push(file);\r\n      }\r\n    });\r\n    return cssFiles.concat(jsFiles);\r\n  }\r\n\r\n  private insertToDom(files: LoadFile[], callback: () => void, increment: number) {\r\n    const file = files[increment];\r\n    increment++;\r\n    if (!file) {\r\n      callback();\r\n      return;\r\n    }\r\n    file.path = file.path + '?sxcver=' + window.sxcVersion; // break cache\r\n\r\n    const existing = this.loadedFiles.find(loadedFile => loadedFile.path === file.path);\r\n    if (existing) {\r\n      if (existing.loaded) {\r\n        this.insertToDom(files, callback, increment);\r\n      } else {\r\n        const _listener = () => {\r\n          file.loaded = true;\r\n          this.insertToDom(files, callback, increment);\r\n          existing.domEl.removeEventListener('load', _listener);\r\n          existing.domEl.removeEventListener('error', _listener);\r\n        };\r\n        existing.domEl.addEventListener('load', _listener);\r\n        existing.domEl.addEventListener('error', _listener);\r\n      }\r\n    } else {\r\n      if (file.type === FileTypeConstants.CSS) {\r\n        file.domEl = document.createElement('link');\r\n        file.domEl.rel = 'stylesheet';\r\n        file.domEl.href = file.path;\r\n      } else if (file.type === FileTypeConstants.JS) {\r\n        file.domEl = document.createElement('script');\r\n        file.domEl.type = 'module';\r\n        file.domEl.src = file.path;\r\n      }\r\n\r\n      const _listener = () => {\r\n        file.loaded = true;\r\n        this.insertToDom(files, callback, increment);\r\n        file.domEl.removeEventListener('load', _listener);\r\n        file.domEl.removeEventListener('error', _listener);\r\n      };\r\n      file.domEl.addEventListener('load', _listener);\r\n      file.domEl.addEventListener('error', _listener);\r\n\r\n      document.querySelector('head').appendChild(file.domEl);\r\n      this.loadedFiles.push(file);\r\n    }\r\n  }\r\n\r\n  private resolveSpecialPaths(url: string) {\r\n    return url.replace(/\\[System:Path\\]/i, UrlHelpers.getUrlPrefix('system', this.eavService.eavConfig))\r\n      .replace(/\\[Zone:Path\\]/i, UrlHelpers.getUrlPrefix('zone', this.eavService.eavConfig))\r\n      .replace(/\\[App:Path\\]/i, UrlHelpers.getUrlPrefix('app', this.eavService.eavConfig));\r\n  }\r\n}\r\n","import { FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { Dictionary } from '../../../ng-dialogs/src/app/shared/models/dictionary.model';\r\nimport { UrlHelpers } from '../../shared/helpers';\r\nimport { AdamControl } from '../input-types/hyperlink/hyperlink-library/hyperlink-library.models';\r\n\r\nexport class CustomValidators {\r\n\r\n  /** Validate url chars */\r\n  static onlySimpleUrlChars(allowPath: boolean, trimEnd: boolean): ValidationErrors {\r\n    return (control: FormControl): Dictionary<boolean> => {\r\n      const cleanInputValue = UrlHelpers.stripNonUrlCharacters(control.value, allowPath, trimEnd);\r\n      return (cleanInputValue === control.value) ? null : { onlySimpleUrlChars: true };\r\n    };\r\n  }\r\n\r\n  // create a static method for your validation\r\n  static validateDecimals(decimals: number): ValidatorFn {\r\n    return (control: FormControl): Dictionary<boolean> => {\r\n      // first check if the control has a value\r\n      if (control.value) {\r\n        // match the control value against the regular expression\r\n        const matches = control.value.toString().match(`^-?[0-9]+(\\.[0-9]{1,${decimals}})?$`);\r\n        // if there are not matches return an object, else return null.\r\n        return !matches ? { decimals: true } : null;\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n\r\n  static validateAdam(): ValidatorFn {\r\n    return (control: FormControl & AdamControl): Dictionary<boolean> => {\r\n      if (control.adamItems == null) { return { required: true }; }\r\n\r\n      if (control.adamItems === 0) {\r\n        return { required: true };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}