{"version":3,"file":"default-projects_eav-ui_src_app_permissions_index_ts.d0bf5396b0981697.js","mappings":"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","names":["MetadataService","HttpServiceBase","getMetadata","targetType","keyType","key","contentTypeName","this","getHttp","params","appId","toString","contentType","__ngFactoryType__","factory","Éµfac","permissionsDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","Promise","all","__webpack_require__","e","then","bind","GoToPermissions","route","path","loadChildren","m","permissionRoutes","data","title","getUrl","getUrlApp","eavConstants","metadata","app","getUrlAttribute","id","attribute","getUrlContentType","guid","getUrlEntity","entity","getUrlLanguage","language","PermissionsActionsComponent","agInit","refresh","deletePermission","onDelete","selectors","decls","vars","consts","template","rf","ctx","i0","MatRippleModule","i1","MatIconModule","i2","TippyDirective","encapsulation","#permissionsService","#dialogRoutes","#params","#prefills","constructor","dialog","snackBar","gridOptions","buildGridOptions","permissions","signal","transient","PermissionsService","DialogRoutingService","convert","getParams","p","parseInt","PermissionType","ngOnInit","#fetchPermissions","doOnDialogClosed","closeDialog","close","getAll","subscribe","set","editPermission","permission","form","items","EditPrep","newMetadataFromInfo","contentTypes","constructMetadataInfo","Prefill","editId","Id","formUrl","convertFormToUrl","navRelative","confirm","Title","open","delete","duration","defaultGridOptions","columnDefs","ColumnDefinitions","cellRendererParams","idFieldParamsTooltipGetter","TextWide","headerName","field","sort","onCellClicked","Character","ActionsPinnedRight1","cellRenderer","MatButtonModule","i3","i4","RouterOutlet","MatDialogActions","SxcGridModule","i5","component","DialogEntryComponent","children","EditRoutes","obj","fn","getWith","metadataService","entitiesService","EntityEditService","pipe","map","Items","create","http","post","zoneId","update","entityId","type","tryForce","apiUrl","webApiEntityRoot","force","logSpecs","ServiceBase","router","super","log","classLog","snapshot","url","urlSegments","split","getParam","paramMap","get","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","end","urlSubRoute","tree","createUrlTree","relativeTo","serializeUrl","navPath","navigate","commands","events","filter","event","NavigationEnd","startWith","firstChild","pairwise","hadChildBefore","hasChildNow"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/go-to-permissions.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/permissions.routing.ts","./projects/core/object-utilities.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService extends HttpServiceBase {\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.getHttp<MetadataDto>(webApiRoot, {\r\n      params: {\r\n        appId: this.appId,\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { Route } from '@angular/router';\r\nimport { Of } from '../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.routing').then(m => m.permissionRoutes),\r\n    // loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-permissions-actions',\r\n    templateUrl: './permissions-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnInit, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n    selector: 'app-permissions',\r\n    templateUrl: './permissions.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        MatDialogActions,\r\n        SxcGridModule,\r\n    ]\r\n})\r\nexport class PermissionsComponent implements OnInit {\r\n  gridOptions = this.buildGridOptions();\r\n  permissions = signal<Permission[]>([]);\r\n  #permissionsService = transient(PermissionsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n  }));\r\n\r\n  #prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<PermissionsComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.#fetchPermissions();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchPermissions());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  #fetchPermissions() {\r\n    this.#permissionsService.getAll(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .subscribe(permissions => {\r\n        this.permissions.set(permissions);\r\n      });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ...EditPrep.newMetadataFromInfo(\r\n            eavConstants.contentTypes.permissions,\r\n            EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n          ),\r\n          ...(this.#prefills[this.#params.targetType] && { Prefill: this.#prefills[this.#params.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [EditPrep.editId(permission.Id)],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) return;\r\n    this.snackBar.open('Deleting...');\r\n    this.#permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.#fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<Permission>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Permissions</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions()\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const permissionRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: permissionsDialog },\r\n    children: EditRoutes\r\n  },\r\n];\r\n","\r\n/**\r\n * Conversion function to change something to something else, a bit like 'map' but for a single item.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `getWith` function, but has a different name to indicate the usage.\r\n */\r\nexport function convert<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n/**\r\n * Function to do something with an object and return the result.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `convert` function, but has a different name to indicate the usage.\r\n */\r\nexport function getWith<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of, transient } from '../../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { EntityEditService } from '../../shared/services/entity-edit.service';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n\r\n  private entitiesService = transient(EntityEditService);\r\n\r\n  getAll(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { webApiEntityRoot } from './entity.service';\r\nimport { HttpServiceBase } from './http-service-base';\r\n\r\n@Injectable()\r\nexport class EntityEditService extends HttpServiceBase {\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.appId, force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  get urlSegments() { return this.router.url.split('/'); }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}