{"version":3,"file":"common.be3e1a7bb57ab251.js","mappings":"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","names":["replaceContentDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ReplaceContentComponent","Promise","all","__webpack_require__","e","then","bind","replaceContentRoutes","path","component","DialogEntryComponent","data","dialog","children","EditRoutesNoHistory","importContentItemDialog","ImportContentItemComponent","contentItemsDialog","ContentItemsComponent","contentItemsRoutes","GoToMetadata","getRoutes","loadChildren","m","ContentExportRoutes","contentImportRoutes","title","EditRoutes","AnalyzeSettingsValueComponent","constructor","this","clipboard","transient","ClipboardService","agInit","params","value","refresh","copy","JsonHelpers","tryParse","copyToClipboard","selectors","decls","vars","consts","template","rf","ctx","i0","MatRippleModule","i1","TippyDirective","styles","UpdateEnvVarsFromDialogSettings","appContext","includedApiRoot","Api","new2sxcHeader","window","$2sxc","env","header","appApi","load","_r1","ctx_r1","openLightspeedFeatureInfo","lightSpeedLink","lightSpeedOwner","LightSpeedActionsComponent_Conditional_1_Conditional_1_Template","LightSpeedActionsComponent_Conditional_1_Conditional_2_Template","appHasLightSpeed","lightSpeed","Title","appLightSpeedEnabled","LightSpeedActionsComponent","input","required","features","inject","FeaturesService","lightSpeedEnabled","isEnabled","FeatureNames","LightSpeed","Id","IsEnabled","inputs","LightSpeedActionsComponent_Conditional_0_Template","LightSpeedActionsComponent_Conditional_1_Template","MatIconModule","MatBadgeModule","i2","i3","encapsulation","DialogInNewWindowService","context","Context","openCodeFile","isShared","templateId","form","items","Path","EditPrep","editId","hashParams","#buildHashParam","keyDialog","DialogTypeConstants","Develop","keyIsShared","toString","keyItems","JSON","stringify","url","#buildFullUrl","open","openAppAdministration","zoneId","appId","tab","scope","extras","keyZoneId","keyAppId","App","Object","keys","length","keyExtras","#buildSharedHashParams","keyModuleId","moduleId","keyContentBlockId","contentBlockId","keyPartOfPage","sessionStorage","getItem","keyDebug","key","rawKey","replace","prefix","valueTemp","rawValue","encodeURIComponent","o","oldHref","keyUrl","oldUrl","URL","newHref","origin","pathname","search","allHashParams","entries","reduce","acc","factory","ɵfac","AgActionsAlwaysRefresh","arrReducer","arr","push","toArray","operate","source","subscriber","subscribe","loadScripts","scriptObjects","callback","iteration","newCallback","scrObj","global","test","w","require","src","exportedVar","webApiAppRootApp","AppsListService","HttpServiceBase","getAll","getSignal","getInheritable","getPendingApps","create","inheritAppId","http","post","apiUrl","installPendingApps","pendingApps","delete","flushCache","getHttpApiUrl","__ngFactoryType__","webApiLicSummary","FeaturesConfigService","saveFeatures","featuresStates","getLicenses","getLicensesSig","uploadLicense","file","formData","FormData","append","pipe","map","info","Success","Messages","MessageType","FileUploadMessageTypes","Error","Text","Message","retrieveLicense","parse","ReservedNamesValidatorDirective","appReservedNames","validate","control","controlValue","toLocaleLowerCase","reservedName","find","reservedNames","mergeReserved","fields","existingFields","forEach","field","StaticName","provide","NG_VALIDATORS","useExisting","multi","#dialogData","#dialog","matDialog","viewContainerRef","router","route","changeDetectorRef","injector","log","classLog","navigation","getCurrentNavigation","state","ngOnInit","l","fn","dialogConfig","snapshot","a","id","_dialogAnimatingOpen","_lastDialogRef","afterOpened","openDialogComponent","ngOnDestroy","close","svcId","init","autoFocus","backdropClass","closeOnNavigation","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","parent","totalPopup","navigate","relativeTo","markForCheck","editContentTypeFieldsDialog","EditContentTypeFieldsComponent","contentTypeFieldsRoutes","ContentTypeFieldsComponent","GoToPermissions","ContentExportService","exportContent","values","selectedIds","selectedIdsString","join","language","defaultLanguage","contentTypeStaticName","recordExport","resourcesReferences","languageReferences","exportJson","typeName","exportEntity","metadata","AppScopes","Site","Global","DebugFields","environment","production","FieldValueHelpers","fieldValuesAreEqual","x","y","isNaN","Array","isArray","RxHelpers","arraysEqual","getItemValuesChanges","oldValues","newValues","changes","newValue","undefined","ZoneService","getLanguage","initial","toggleLanguage","code","enable","cultureCode","getSystemInfo","getLanguagesPermissions","fieldNamePattern","fieldNameError","importRoutes","ImportAppComponent","notValid","ValidationMsgHelper","messages","long","min","max","minNoItems","maxNoItems","pattern","decimals","jsonError","formulaError","validateForm","errors","controlKey","controls","UiControl","markTouched","invalid","errorKey","AnalyzeSettingsService","getStackSig","part","view","stringifyValue","stackSignal","signal","getAndWrite","webApiAppRoot","computed","stackItem","_value","Value","getStack","getHttp","stack","AppAdminHelpers","getLightSpeedEditParams","newMetadata","eavConstants","appMetadata","ContentTypeName","app","logSpecs","set","disable","getErrors","pfx","moreDisabled","#warningMessages","jsonWarning","formulaWarning","dirty","touched","disabled","extendName","aIfInList","emptyControl","touchedAndInvalid","setIfChanged","before","isEqual","#set","markAsTouched","markAsDirty","patchValue","updateValueAndValidity","fnIfInList","r","error","formulaMessage","getWarnings","_warning","warning","warningKey","guidRegex","webApiContentGroup","ContentGroupService","getItems","item","guid","index","saveItem","entityId","add","removeItem","contentGroup","getList","saveList","resortedList","getHeader"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/replace-content/replace-content-dialog.config.ts","./projects/eav-ui/src/app/replace-content/replace-content.routing.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items.routing.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.html","./projects/eav-ui/src/app/shared/helpers/update-env-vars-from-dialog-settings.helper.ts","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.html","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.ts","./projects/eav-ui/src/app/shared/routing/dialog-in-new-window.service.ts","./projects/eav-ui/src/app/app-administration/queries/ag-actions/ag-actions-component.ts","./node_modules/rxjs/dist/esm/internal/operators/toArray.js","./projects/eav-ui/src/app/shared/helpers/load-scripts.helper.ts","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/apps-management/services/features-config.service.ts","./projects/eav-ui/src/app/shared/helpers/json.helpers.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/reserved-names.directive.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.routing.ts","./projects/eav-ui/src/app/content-export/services/content-export.service.ts","./projects/eav-ui/src/app/shared/models/dialog-context.models.ts","./projects/eav-ui/src/app/edit/edit-debug.ts","./projects/eav-ui/src/app/edit/shared/helpers/field-value.helpers.ts","./projects/eav-ui/src/app/apps-management/services/zone.service.ts","./projects/eav-ui/src/app/app-administration/constants/field-name.patterns.ts","./projects/eav-ui/src/app/import-app/import-app-dialog.config.ts","./projects/eav-ui/src/app/import-app/import-app.routing.ts","./projects/eav-ui/src/app/edit/shared/validation/validation-messages.helpers.ts","./projects/eav-ui/src/app/app-administration/services/analyze-settings.service.ts","./projects/eav-ui/src/app/app-administration/app-admin-helpers.ts","./projects/eav-ui/src/app/edit/shared/controls/ui-control.ts","./projects/eav-ui/src/app/shared/constants/guid.constants.ts","./projects/eav-ui/src/app/manage-content-list/services/content-group.service.ts"],"sourcesContent":["import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const replaceContentDialog: DialogConfig = {\r\n  name: 'REPLACE_CONTENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ReplaceContentComponent } = await import('./replace-content.component');\r\n    return ReplaceContentComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { replaceContentDialog } from './replace-content-dialog.config';\r\nimport { EditRoutesNoHistory } from '../edit/edit.routing';\r\n\r\nexport const replaceContentRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: replaceContentDialog },\r\n    children: [\r\n      // Note 2024-07-01 2dm - not sure why it is configured without history, but to be safe I'll keep it for now\r\n      ...EditRoutesNoHistory\r\n    ],\r\n  },\r\n];\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const importContentItemDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_ITEM_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentItemComponent: ImportContentItemComponent } = await import('./import-content-item.component');\r\n    return ImportContentItemComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentItemsDialog: DialogConfig = {\r\n  name: 'CONTENT_ITEMS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentItemsComponent } = await import('./content-items.component');\r\n    return ContentItemsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importContentItemDialog } from './import-content-item/import-content-item-dialog.config';\r\nimport { contentItemsDialog } from './content-items-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const contentItemsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentItemsDialog },\r\n    children: [\r\n      ...GoToMetadata.getRoutes(),\r\n      {\r\n        path: 'export/:contentTypeStaticName',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'export/:contentTypeStaticName/:selectedIds',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'import',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: importContentItemDialog }\r\n      },\r\n      {\r\n        path: ':contentTypeStaticName/import',\r\n        loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n        data: { title: 'Import Items' },\r\n      },\r\n      ...EditRoutes,\r\n    ]\r\n  },\r\n];\r\n\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { JsonHelpers } from '../../../../shared/helpers/json.helpers';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\n\r\n@Component({\r\n    selector: 'app-analyze-settings-value',\r\n    templateUrl: './analyze-settings-value.component.html',\r\n    styleUrls: ['./analyze-settings-value.component.scss'],\r\n    imports: [\r\n        MatRippleModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AnalyzeSettingsValueComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n\r\n  constructor() { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n  \r\n  copy(value: string) {\r\n    value = JsonHelpers.tryParse(value) ?? value;\r\n    this.clipboard.copyToClipboard(value);\r\n  }\r\n}\r\n","<div matRipple class=\"value-box highlight\" [tippy]=\"value\" (click)=\"copy(value)\">\r\n  <span class=\"value\">{{ value }}</span>\r\n</div>\r\n","import { EnvironmentSpecs } from '@2sic.com/2sxc-typings';\r\nimport { DialogContextApp } from '../models/dialog-context.models';\r\nimport { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n/**\r\n * This ensures that $2sxc is fully initialized with parameters which are provided later on\r\n * The appApi is being added in v12\r\n * It's important because in Oqtane the app-api root is different in from the normal admin-apis\r\n */\r\nexport function UpdateEnvVarsFromDialogSettings(appContext: DialogContextApp): void {\r\n  try {\r\n    const includedApiRoot = appContext?.Api;\r\n    if (!includedApiRoot) return;\r\n\r\n    const old2sxcHeader = (window.$2sxc.env as any).header as EnvironmentSpecs;\r\n    const new2sxcHeader = { ...old2sxcHeader, appApi: includedApiRoot } as EnvironmentSpecs;\r\n    window.$2sxc.env.load(new2sxcHeader);\r\n  } catch { /* ignore */ }\r\n}\r\n","@if (!lightSpeedEnabled()) {\r\n  <div class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\" (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n  </div>\r\n} @else {\r\n  <div\r\n    class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled' }}\"\r\n    matRipple\r\n    [tippy]=\"appHasLightSpeed ? lightSpeed().Title : 'Not yet configured for LightSpeed'\"\r\n  >\r\n    @if (appLightSpeedEnabled) {\r\n      <a class=\"default-link\" [href]=\"'#' + params().lightSpeedLink(lightSpeedOwner())\">\r\n        <mat-icon matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n      </a>\r\n    } @else {\r\n      <a class=\"default-link\" [href]=\"'#' + params().lightSpeedLink(lightSpeedOwner())\">\r\n        <mat-icon matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n      </a>\r\n    }\r\n  </div>\r\n}\r\n","import { Component, inject, input } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LightSpeedInfo } from '../../apps-management/models/LightSpeedInfo';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { LightSpeedActionsParams } from './lightspeed-actions.models';\r\n\r\n/**\r\n * LightSpeedActionsComponent\r\n *\r\n * Specially meant to be used inside an AGGrid action, and receive the parameters from it.\r\n *\r\n */\r\n@Component({\r\n    selector: 'app-lightspeed-action',\r\n    templateUrl: './lightspeed-action.component.html',\r\n    imports: [\r\n        TippyDirective,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n        MatRippleModule,\r\n    ]\r\n})\r\nexport class LightSpeedActionsComponent {\r\n  /** App needed for lightspeed checks */\r\n  lightSpeedOwner = input.required<unknown>();\r\n\r\n  params = input.required<LightSpeedActionsParams>();\r\n\r\n  lightSpeed = input.required<LightSpeedInfo | null>();\r\n\r\n  public features = inject(FeaturesService);\r\n\r\n  constructor() { }\r\n\r\n  protected lightSpeedEnabled = this.features.isEnabled[FeatureNames.LightSpeed]\r\n\r\n  public get appHasLightSpeed(): boolean {\r\n    return this.lightSpeed()?.Id != null;\r\n  }\r\n\r\n  public get appLightSpeedEnabled(): boolean {\r\n    return this.lightSpeed()?.IsEnabled == true;\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params().openLightspeedFeatureInfo();\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyExtras, keyIsShared, keyItems, keyModuleId, keyPartOfPage, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { EditPrep, ViewOrFileIdentifier } from '../models/edit-form.model';\r\nimport { Context } from '../services/context';\r\nimport { ExtrasParam } from './dialog-url-params.model';\r\n\r\n/**\r\n * Service to open dialogs in a new window.\r\n */\r\n@Injectable()\r\nexport class DialogInNewWindowService {\r\n\r\n  protected context = inject(Context);\r\n\r\n  openCodeFile(path: string, isShared: boolean, templateId?: number) {\r\n    const form = {\r\n      items: [{\r\n        Path: path,\r\n        ...(templateId != null && EditPrep.editId(templateId)),\r\n      }] as ViewOrFileIdentifier[]\r\n    };\r\n\r\n    const hashParams: Record<string, string> = {\r\n      ...this.#buildHashParam(keyDialog, DialogTypeConstants.Develop),\r\n      ...this.#buildHashParam(keyIsShared, isShared.toString()),\r\n      ...this.#buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.#buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppAdministration(zoneId: number, appId: number, tab?: string, scope?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n      ...(scope && { scope }),\r\n    };\r\n    const hashParams: Record<string, string> = {\r\n      ...this.#buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.#buildHashParam(keyAppId, appId.toString()),\r\n      ...this.#buildHashParam(keyDialog, DialogTypeConstants.App),\r\n      ...(Object.keys(extras).length ? this.#buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.#buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  #buildSharedHashParams() {\r\n    const hashParams: Record<string, string> = {\r\n      ...this.#buildHashParam(keyZoneId, this.context.zoneId),\r\n      ...this.#buildHashParam(keyAppId, this.context.appId),\r\n      ...this.#buildHashParam(keyModuleId, this.context.moduleId?.toString()),\r\n      ...this.#buildHashParam(keyContentBlockId, this.context.contentBlockId?.toString()),\r\n      ...this.#buildHashParam(keyPartOfPage),\r\n      ...(sessionStorage.getItem(keyDebug) ? this.#buildHashParam(keyDebug) : {}),\r\n    };\r\n    return hashParams;\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  #buildHashParam(key: string, value?: number | string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = value ?? sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam: Record<string, string> = { [rawKey]: rawValue };\r\n    return hashParam;\r\n  }\r\n\r\n  /** Builds the full (ugly) url with all the hash parameters */\r\n  #buildFullUrl(hashParams: Record<string, string>) {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    const allHashParams: Record<string, string> = {\r\n      ...this.#buildSharedHashParams(),\r\n      ...hashParams,\r\n    };\r\n    const hashUrl = Object.entries(allHashParams).reduce((acc, [key, value]) => `${acc}&${key}=${value}`, '').replace('&', '#');\r\n    return newHref + hashUrl;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nexport abstract class AgActionsAlwaysRefresh implements ICellRendererAngularComp {\r\n  abstract agInit(params: any): void;\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { reduce } from './reduce';\nimport { operate } from '../util/lift';\nconst arrReducer = (arr, value) => (arr.push(value), arr);\nexport function toArray() {\n    return operate((source, subscriber) => {\n        reduce(arrReducer, [])(source).subscribe(subscriber);\n    });\n}\n","import { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function loadScripts(scriptObjects: ScriptObject[], callback: () => void, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n  const w = window as Record<string, any>;\r\n\r\n  if (global != null && !!w[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  window.require([scrObj.src], (exportedVar: any) => {\r\n    if (exportedVar && !w[global]) {\r\n      w[global] = exportedVar;\r\n    }\r\n    newCallback();\r\n  });\r\n}\r\n\r\nexport interface ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { App, PendingApp } from '../models/app.model';\r\n\r\n const webApiAppRootList = 'admin/app/list';\r\n const webApiAppRootInheritableApps = 'admin/app/InheritableApps';\r\n const webApiAppRootPendingApps = 'admin/app/GetPendingApps';\r\n const webApiAppRootApp = 'admin/app/app';\r\n const webApiAppRootInstallPendingApps = 'admin/app/InstallPendingApps';\r\n const webApiAppRootFlushcache = 'admin/app/flushcache';\r\n\r\n@Injectable()\r\nexport class AppsListService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getSignal<App[]>(webApiAppRootList, {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return this.getSignal<App[]>(webApiAppRootInheritableApps, {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getPendingApps() {\r\n    return this.getSignal<PendingApp[]>(webApiAppRootPendingApps, {\r\n      params: { zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootApp), {}, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootInstallPendingApps), pendingApps, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRootApp), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.getHttpApiUrl<null>(webApiAppRootFlushcache, {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { License, LicenseDownloadInfo, LicenseUploadInfo } from '../models/license.model';\r\n\r\nconst webAPiLicenseRetrieve = 'sys/license/Retrieve';\r\nconst webApiFeatSaveNew = 'admin/feature/SaveNew';\r\nconst webApiLicSummary = 'sys/license/Summary';\r\nconst webApiUpload = 'sys/license/Upload';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService extends HttpServiceBase {\r\n\r\n  saveFeatures(featuresStates: FeatureState[]): Observable<null> {\r\n    return this.http.post<null>(this.apiUrl(webApiFeatSaveNew), featuresStates);\r\n  }\r\n\r\n  getLicenses(): Observable<License[]> { // Use new Signals\r\n    return this.getHttpApiUrl<License[]>(webApiLicSummary);\r\n  }\r\n\r\n  getLicensesSig() { // Use new Signals\r\n    return this.getSignal<License[]>(webApiLicSummary);\r\n  }\r\n\r\n  uploadLicense(file: File): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<LicenseUploadInfo>(this.apiUrl(webApiUpload), formData)\r\n      .pipe(\r\n        map(info => ({\r\n          Success: info.Success,\r\n          Messages: [{\r\n            MessageType: info.Success ? FileUploadMessageTypes.Success : FileUploadMessageTypes.Error,\r\n            Text: `License ${info.Success ? 'uploaded' : 'upload failed'}: ${info.Message}`,\r\n          }],\r\n        } satisfies FileUploadResult)),\r\n      );\r\n  }\r\n\r\n  retrieveLicense(): Observable<LicenseDownloadInfo> {\r\n    return this.getHttpApiUrl<LicenseDownloadInfo>(webAPiLicenseRetrieve);\r\n  }\r\n}\r\n","\r\nexport class JsonHelpers {\r\n\r\n  /** Tries to parse string as JSON */\r\n  static tryParse(input: string): any {\r\n    try {\r\n      return JSON.parse(input);\r\n    } catch { }\r\n  }\r\n}\r\n","import { Directive, input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appReservedNames]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: ReservedNamesValidatorDirective, multi: true },\r\n  ],\r\n})\r\nexport class ReservedNamesValidatorDirective implements Validator {\r\n  appReservedNames = input<Record<string, string>>({});\r\n\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    if (!control.value) { return null; }\r\n\r\n    const controlValue = (control.value as string).toLocaleLowerCase();\r\n    const reservedName = Object.keys(this.appReservedNames()).find(name => name.toLocaleLowerCase() === controlValue);\r\n    return reservedName ? { reservedNames: this.appReservedNames()[reservedName] } : null;\r\n  }\r\n\r\n  static mergeReserved(reservedNames: Record<string, string>, fields: {StaticName: string }[]) {\r\n    const existingFields: Record<string, string> = {};\r\n    fields.forEach(field => {\r\n      existingFields[field.StaticName] = 'this field already exists';\r\n    });\r\n    return {\r\n      ...reservedNames,\r\n      ...existingFields,\r\n    };\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, Injector, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/routing/edit-routing.service';\r\nimport { classLog } from '../../logging';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  imports: [],\r\n  providers: [\r\n    Context, // this is used in the dialog to get the correct App\r\n  ]\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  \r\n  log = classLog({DialogEntryComponent});\r\n  \r\n  #dialogData: Record<string, any>;\r\n  #dialog: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private injector: Injector,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.#dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const l = this.log.fn('ngOnInit');\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null)\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n\r\n    l.a('Open dialog: '+ dialogConfig.name, { id: this.context.id, context: this.context });\r\n\r\n    dialogConfig.getComponent(this.injector).then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      const dialog = (this.matDialog as any);\r\n      if (dialog._dialogAnimatingOpen && dialog._lastDialogRef)\r\n        (dialog._lastDialogRef as MatDialogRef<any>).afterOpened()\r\n          .subscribe(() => this.openDialogComponent(dialogConfig, component));\r\n      else\r\n        this.openDialogComponent(dialogConfig, component);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#dialog.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    this.log.a(`Open dialog(initContext: ${dialogConfig.initContext})`, { name: dialogConfig.name, 'Contextid:': this.context.log.svcId, 'Context:': this.context });\r\n    if (dialogConfig.initContext)\r\n      this.context.init(this.route);\r\n\r\n    this.#dialog = this.matDialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.#dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.#dialog.afterClosed().subscribe((data: any) => {\r\n      this.log.a('Dialog was closed - name:' + dialogConfig.name, { data });\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0)\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      else\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentTypeFieldsDialog: DialogConfig = {\r\n  name: 'CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentTypeFieldsComponent } = await import('./content-type-fields.component');\r\n    return ContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeFieldsDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeFieldsComponent } = await import('./edit-content-type-fields.component');\r\n    return EditContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentTypeFieldsDialog } from './content-type-fields-dialog.config';\r\nimport { editContentTypeFieldsDialog } from './edit-content-type-fields/edit-content-type-fields-dialog.config';\r\n\r\nexport const contentTypeFieldsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentTypeFieldsDialog },\r\n    children: [\r\n      {\r\n        path: 'add/:contentTypeStaticName',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog }\r\n      },\r\n      {\r\n        path: 'update/:contentTypeStaticName/:id/:editMode',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog },\r\n      },\r\n      ...GoToMetadata.getRoutes(),\r\n      GoToPermissions.route,\r\n      ...EditRoutes,\r\n    ]\r\n  }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentExport } from '../models/content-export.model';\r\n\r\nconst webApiEntityRootDownload = 'admin/entity/Download';\r\nconst webApiEntityRootJson = 'admin/entity/Json';\r\nconst webApiTypeRootJson = 'admin/type/Json';\r\nconst webApiTypeRootJsonBundleExport = 'admin/type/JsonBundleExport';\r\nconst webApiTypeRootJsonBundleSave = 'admin/type/BundleSave';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ContentExportService extends HttpServiceBase {\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.apiUrl(webApiEntityRootDownload)\r\n      + '?appId=' + this.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.apiUrl(webApiTypeRootJson)\r\n      + '?appId=' + this.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.apiUrl(webApiEntityRootJson)\r\n      + '?appId=' + this.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n}\r\n","import { Of } from '../../../../../core';\r\nimport { PermissionsCount } from '../../app-administration/models/permissions-count.model';\r\nimport { Language } from './language.model';\r\n\r\nexport interface DialogContextApp {\r\n  /** Root for app APIs and content/query */\r\n  Api: string;\r\n  Folder: string;\r\n  GettingStartedUrl: string;\r\n  Id: number;\r\n  Identifier: string;\r\n  IsContentApp: boolean;\r\n  IsGlobalApp: boolean;\r\n  IsInherited: boolean;\r\n  IsShared: boolean;\r\n  IsSiteApp: boolean;\r\n  Name: string;\r\n  Permissions: PermissionsCount;\r\n  SettingsScope: Of<typeof AppScopes>;\r\n  Url: string;\r\n  SharedUrl: string;\r\n\r\n  /** New app icon */\r\n  Icon: string;\r\n}\r\n\r\nexport interface ApiKeySpecs {\r\n  NameId: string;\r\n  ApiKey: string;\r\n  IsDemo: boolean;\r\n}\r\n\r\nexport const AppScopes = {\r\n  App: 'App',\r\n  Site: 'Site',\r\n  Global: 'Global',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\n\r\nexport interface DialogContextEnable {\r\n  /** Determines if app admin should show app-permissions (true for Apps, false for Content and Global) */\r\n  AppPermissions?: boolean;\r\n  /** Determines if Code editing should be enabled (true for super-users) */\r\n  CodeEditor?: boolean;\r\n  DebugMode: boolean;\r\n  /** True if saving of formulas should be enabled (for edit-ui) */\r\n  FormulaSave?: boolean;\r\n  /** While debug is enabled, this allows some Edit Ui actions even when they are disabled in fields settings */\r\n  OverrideEditRestrictions?: boolean;\r\n  /** Determines if Queries should be enabled (true for Apps) */\r\n  Query?: boolean;\r\n}\r\n\r\nexport interface DialogContextLanguage {\r\n  Current: string;\r\n  List: Language[];\r\n  Primary: string;\r\n}\r\n\r\nexport interface DialogContextPage {\r\n  Id: number;\r\n}\r\n\r\nexport interface DialogContextSite {\r\n  DefaultApp: DialogContextSiteApp;\r\n  Id: number;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSystem {\r\n  DefaultApp: DialogContextSiteApp;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSiteApp {\r\n  ZoneId: number;\r\n  AppId: number;\r\n}\r\n\r\nexport interface DialogContextUser {\r\n  Email: string;\r\n  Id: number;\r\n  Guid: string;\r\n  IsAnonymous: boolean;\r\n  IsSiteAdmin: boolean;\r\n  IsContentAdmin: boolean;\r\n  IsSystemAdmin: boolean;\r\n  Name: string;\r\n  Username: string;\r\n}\r\n\r\n// export interface DialogContextFeature {\r\n//   NameId: string;\r\n//   Enabled: boolean;\r\n// }\r\n","import { environment } from '../../environments/environment';\r\n\r\n/**\r\n * List of fields to debug across the entire application.\r\n * \r\n * Change as you need, but after debugging, best set it back to [].\r\n */\r\nexport const DebugFields: string[] = !environment.production\r\n  // ? ['StringPicker']\r\n  // ? ['NumberInputAddUntillDevisibleBy5']\r\n  // ? ['WysiwygConfiguration']\r\n  // ? ['Items']\r\n  ? ['ViewController']\r\n  // ? ['Title']\r\n  // ? [] // no fields\r\n  // ? ['*'] // all fields\r\n  : [];\r\n","import { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { RxHelpers } from '../../../shared/rxJs/rx.helpers';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\n\r\n\r\nexport class FieldValueHelpers {\r\n  /** Detect if two values are equal, incl. special NaN and Array checks */\r\n  static fieldValuesAreEqual(x: FieldValue, y: FieldValue): boolean {\r\n    if (x === y) return true;\r\n    if (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y)) return true;\r\n    if (Array.isArray(x) && Array.isArray(y) && RxHelpers.arraysEqual(x, y)) return true;\r\n    return false;\r\n  }\r\n\r\n  /** Searches where newValues has values different from oldValues */\r\n  static getItemValuesChanges(oldValues: ItemValuesOfLanguage, newValues: ItemValuesOfLanguage): ItemValuesOfLanguage {\r\n    const changes: ItemValuesOfLanguage = {};\r\n    for (const key of Object.keys(newValues)) {\r\n      const newValue = newValues[key];\r\n      const oldValue = oldValues[key];\r\n      if (FieldValueHelpers.fieldValuesAreEqual(newValue, oldValue))\r\n        continue;\r\n\r\n      changes[key] = newValue;\r\n    }\r\n    return Object.keys(changes).length === 0 ? undefined : changes;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { SiteLanguage, SiteLanguagePermissions } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\n\r\nconst webApiZoneRootGetLanguages = 'admin/zone/GetLanguages';\r\nconst webApiZoneRootSwitchLanguage = 'admin/zone/SwitchLanguage';\r\nconst webApiZoneRootGetSystemInfo = 'admin/zone/GetSystemInfo';\r\nconst webApiAppRootRootlanguages = 'admin/app/languages';\r\n\r\n@Injectable()\r\nexport class ZoneService extends HttpServiceBase {\r\n\r\n  getLanguage(initial: undefined) {\r\n    return this.getSignal<SiteLanguage[]>(webApiZoneRootGetLanguages, {}, initial);\r\n  }\r\n\r\n  toggleLanguage(code: string, enable: boolean) {\r\n    return this.getHttpApiUrl<null>(webApiZoneRootSwitchLanguage, {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  // toggleLanguageSig(code: string, enable: boolean)  {\r\n  //   return this.getSignal<null>(webApiZoneRootSwitchLanguage, {\r\n  //     params: { cultureCode: code, enable: enable.toString() },\r\n  //   });\r\n  // }\r\n\r\n  getSystemInfo(initial: undefined) {\r\n    return this.getSignal<SystemInfoSet>(webApiZoneRootGetSystemInfo, {}, initial);\r\n  }\r\n\r\n  getLanguagesPermissions(initial: undefined) {\r\n    return this.getSignal<SiteLanguagePermissions[]>(webApiAppRootRootlanguages, {\r\n      params: { appId: this.appId },\r\n    }, initial);\r\n  };\r\n}\r\n","export const fieldNamePattern = /^[A-Za-z][A-Za-z0-9]+$/;\r\nexport const fieldNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const importAppDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppComponent } = await import('./import-app.component');\r\n    return ImportAppComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importAppDialog } from './import-app-dialog.config';\r\n\r\nexport const importRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: importAppDialog }\r\n  }\r\n];\r\n\r\n","import { UntypedFormGroup } from '@angular/forms';\r\nimport { UiControl } from '../controls/ui-control';\r\n\r\n// prefix for translation keys\r\nconst prefix = 'ValidationMessage.';\r\nconst notValid = 'ValidationMessage.NotValid';\r\n\r\nexport class ValidationMsgHelper {\r\n\r\n  public static messages: Record<string, (long: boolean) => string> = {\r\n    required: (long: boolean) => long ? `${prefix}Required` : `${prefix}RequiredShort` /* short version in snackbar*/,\r\n    min: (long: boolean) => long ? `${prefix}Min` : notValid,\r\n    max: (long: boolean) => long ? `${prefix}Max` : notValid,\r\n    minNoItems: (long: boolean) => long ? `${prefix}MinNoItems` : notValid,\r\n    maxNoItems: (long: boolean) => long ? `${prefix}MaxNoItems` : notValid,\r\n    pattern: (long: boolean) => long ? `${prefix}Pattern` : notValid,\r\n    decimals: (long: boolean) => long ? `${prefix}Decimals` : notValid,\r\n    jsonError: (long: boolean) => long ? `${prefix}JsonError` : notValid,\r\n    formulaError: (long: boolean) => notValid,\r\n  };\r\n\r\n  /** Marks controls as touched to show errors beneath controls and collects error messages */\r\n  static validateForm(form: UntypedFormGroup): Record<string, string> {\r\n    const errors: Record<string, string> = {};\r\n    for (const [controlKey, control] of Object.entries(form.controls)) {\r\n      UiControl.markTouched(control);\r\n\r\n      if (!control.invalid) continue;\r\n\r\n      for (const errorKey of Object.keys(control.errors)) {\r\n        errors[controlKey] = this.messages[errorKey]?.(false);\r\n        if (errors[controlKey]) break;\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n}\r\n","import { computed, Injectable, signal, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { AnalyzeParts, SettingsStackItem } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\n\r\n@Injectable()\r\nexport class AnalyzeSettingsService extends HttpServiceBase {\r\n\r\n\r\n  // TEMP, not sure if this are correct\r\n  getStackSig(part: Of<typeof AnalyzeParts>, key?: string, view?: string, stringifyValue = false): Signal<SettingsStackItem[]> {\r\n    const stackSignal = signal<SettingsStackItem[]>([]);\r\n\r\n    this.getAndWrite<SettingsStackItem[]>(webApiAppRoot + 'GetStack', {\r\n      params: {\r\n        appId: this.appId,\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }, stackSignal);\r\n\r\n    return computed(() => stringifyValue\r\n      ? stackSignal().map(stackItem => ({ ...stackItem, _value: JSON.stringify(stackItem.Value) }))\r\n      : stackSignal()\r\n    );\r\n  }\r\n\r\n\r\n  getStack(part: Of<typeof AnalyzeParts>, key?: string, view?: string, stringifyValue = false): Observable<SettingsStackItem[]> {\r\n\r\n    return this.getHttp<SettingsStackItem[]>(webApiAppRoot + 'GetStack', {\r\n      params: {\r\n        appId: this.appId,\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }).pipe(\r\n      map(stack => {\r\n\r\n        if (!stringifyValue) { return stack; }\r\n\r\n        for (const stackItem of stack) {\r\n          stackItem._value = JSON.stringify(stackItem.Value);\r\n        }\r\n        return stack;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\n\r\nexport class AppAdminHelpers {\r\n  public static getLightSpeedEditParams(appId: number) {\r\n    const form: EditForm = {\r\n      items: [\r\n        EditPrep.newMetadata(appId, eavConstants.appMetadata.LightSpeed.ContentTypeName, eavConstants.metadata.app, true),\r\n      ],\r\n    };\r\n    return form;\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { FieldValueHelpers } from '../helpers/field-value.helpers';\r\nimport { ValidationMsgHelper } from '../validation/validation-messages.helpers';\r\nimport { AbstractControlPro } from '../validation/validation.helpers';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  constructor: false,\r\n  markTouched: false,\r\n  set: false,\r\n  disable: false,\r\n  getErrors: true,\r\n  fields: [...DebugFields, '*'],\r\n};\r\n\r\nconst pfx = 'ValidationMessage.';\r\n\r\n/**\r\n * Provides information about the UI Control, but NOT the value.\r\n * It is used to simplify the logic when interacting with the Angular Virtual Form.\r\n */\r\nexport class UiControl {\r\n\r\n  log = classLog({UiControl}, logSpecs);\r\n\r\n  constructor(\r\n    public control: AbstractControl,\r\n    private name = 'unknown',\r\n    private moreDisabled: boolean = false,\r\n  ) {\r\n    // Patch control with dummy object for the nullable case where we're just creating a fake control...\r\n    this.control ??= { dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl;\r\n    this.log.extendName(`[${name}]`);\r\n    this.log.aIfInList('fields', this.name, { moreDisabled }, 'constructor');\r\n  }\r\n\r\n  static emptyControl() {\r\n    return new UiControl({ dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl);\r\n  }\r\n\r\n  //#region simple direct properties & complex properties\r\n  get dirty() { return this.control.dirty; }\r\n  get invalid() { return this.control.invalid; }\r\n  get touched() { return this.control.touched; }\r\n  get disabled() { return this.control.disabled || this.moreDisabled; }\r\n  get touchedAndInvalid() { return this.control.touched && this.control.invalid; }\r\n  //#endregion\r\n\r\n  //#region methods\r\n\r\n  markTouched(): void {\r\n    this.log.aIfInList('fields', this.name, null, 'markTouched');\r\n    UiControl.markTouched(this.control);\r\n  }\r\n\r\n  setIfChanged(newValue: FieldValue): void {\r\n    const before = this.control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'setIfChanged');\r\n    if (isEqual(newValue, this.control.value)) return;\r\n    this.#set(newValue);\r\n  }\r\n\r\n  /** Use to update form controls value */\r\n  #set(newValue: FieldValue): void {\r\n    const control = this.control;\r\n    const before = control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'set');\r\n\r\n    if (!control.touched)\r\n      control.markAsTouched();\r\n\r\n    if (!control.dirty && !FieldValueHelpers.fieldValuesAreEqual(before, newValue))\r\n      control.markAsDirty();\r\n\r\n    // Note: 2024-10-21 ca. 18.02 we have some timing issues, error always seems to show previous error; maybe fixed now, otherwise revisit\r\n    // Set value must happen at the end, otherwise errors will be late by one cycle\r\n    // for example, they could show \"required\" after the value was\r\n    control.patchValue(newValue);\r\n  }\r\n\r\n  disable(disable: boolean): void {\r\n    this.log.aIfInList('fields', this.name, null, `disable: ${disable}`);\r\n    UiControl.disable(this.control, disable);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region private helpers\r\n\r\n  /** TODO: Try to remove this by assigning controls [formControlName] in [formGroup] */\r\n  static markTouched(control: AbstractControl): void {\r\n    if (control.touched)\r\n      return;\r\n\r\n    control.markAsTouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  /** Disables/enables control if not already disabled/enabled. Use this helper to trigger fewer events on the form */\r\n  static disable(control: AbstractControl, disable: boolean) {\r\n    if (control.disabled === disable)\r\n      return;\r\n\r\n    if (disable)\r\n      control.disable();\r\n    else\r\n      control.enable();\r\n  }\r\n  //#endregion\r\n\r\n  /** Calculates error message */\r\n  getErrors(): string {\r\n    const control = this.control;\r\n    const errors = control.errors;\r\n    const l = this.log.fnIfInList('getErrors', 'fields', this.name, { control, name: this.name });\r\n    if (!control.invalid)\r\n      return l.r('', 'valid');\r\n    if (!control.dirty && !control.touched)\r\n      return l.r('', 'not dirty or touched');\r\n\r\n    for (const errorKey of Object.keys(errors)) {\r\n      const error = (errorKey === 'formulaError')\r\n        ? control.errors['formulaMessage'] ?? ValidationMsgHelper.messages[errorKey]?.(true)\r\n        : ValidationMsgHelper.messages[errorKey]?.(true);\r\n      if (error)\r\n        return l.r(error, 'error found');\r\n    }\r\n\r\n    return l.r('', 'no error');\r\n  }\r\n\r\n  #warningMessages: Record<string, string> = {\r\n    jsonWarning: `${pfx}JsonWarning`,\r\n    formulaWarning: `${pfx}NotValid`,\r\n  };\r\n\r\n  getWarnings(): string {\r\n    const control = this.control as AbstractControlPro;\r\n    if (control._warning == null)\r\n      return '';\r\n    if (!control.dirty && !control.touched)\r\n      return '';\r\n\r\n    let warning = '';\r\n    for (const warningKey of Object.keys(control._warning)) {\r\n      warning = (warningKey === 'formulaWarning')\r\n        ? control._warning['formulaMessage'] ?? this.#warningMessages[warningKey]\r\n        : this.#warningMessages[warningKey];\r\n      if (warning)\r\n        break;\r\n    }\r\n    return warning;\r\n  }\r\n}\r\n","/**\r\n * Do not reuse regex:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test#using_test_on_a_regex_with_the_global_flag\r\n */\r\nexport function guidRegex(): RegExp {\r\n  return /^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$/i;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ReplaceConfig } from '../../replace-content/replace-config.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService extends HttpServiceBase {\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.getHttpApiUrl<ReplaceConfig>(webApiContentGroup + 'replace', {\r\n      params: { appId: this.appId, guid: item.guid, part: item.part, index: item.index.toString() }\r\n    });\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post<null>(this.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    });\r\n  }\r\n\r\n  removeItem(contentGroup: ContentGroup, index: number) {\r\n    // note: the server checks if the part == 'content' and will automatically treat it as a pair with presentation\r\n    return this.http.delete<null>(this.apiUrl('cms/list/delete'), {\r\n      params: { index: index, parent: contentGroup.guid, fields: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.getHttpApiUrl<GroupHeader[]>(webApiContentGroup + 'itemlist', {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup, initial: GroupHeader) {\r\n    return this.getSignal<GroupHeader>(webApiContentGroup + 'header', {\r\n      params: { appId: this.appId, guid: contentGroup.guid }\r\n    }, initial);\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[12]}