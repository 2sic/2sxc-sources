{"version":3,"file":"projects_eav-ui_src_app_app-administration_data-rest-api_data-rest-api_component_ts.4e1619d0f17357f7.js","mappings":"+YAKQA,MAAA,kBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAC,EAAAC,QACVF,cAAA,IAAAC,EAAAE,MAAA,MCmBH,IAAMC,EAAoB,MAA3B,MAAOA,EACXC,GACAC,GAEAC,GAEAC,cALAC,MAAAJ,KAAmBK,KAAUC,MAC7BF,MAAAH,KAAgBI,KAAUE,KAE1BH,MAAAF,KAAeM,OAAOC,MAkBtBL,KAAAM,aAAeN,MAAKJ,EAAiBW,YAAY,UAAW,IAE5DP,KAAAQ,gBAA6BR,MAAKF,EAAaW,MAAM,CACnDC,YAAa,CAAC,OACf,EAlBCC,OAAO,KACL,MAAMC,EAAQZ,KAAKM,eACnB,GAAqB,IAAjBM,EAAMC,OACR,OAEF,MAAMC,EAAgBd,MAAKH,EAAckB,YAAYC,IAAG,GAElDC,EAAOL,EAAMM,KAAKC,GAAMA,EAAG1B,SAAWqB,GACxCG,GACFjB,KAAKQ,gBAAgBY,IAAI,eAAeC,SAASJ,EAAKxB,OAAM,EAGlE,CASA6B,YAAYC,GACLA,GACLvB,MAAKH,EAAc2B,YAAY,CAAC,GAAGD,KACrC,iDAhCW5B,EAAoB,oCAApBA,EAAoB8B,UAAA,wBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,0HAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDvB7BvC,MAFJ,WAEIA,CAFgC,qBAEhCA,CADwD,eAC7CA,MAAA,kBAAYA,QACvBA,MAAA,kBAA0CA,MAAA,uBAAAyC,GAAA,OAAeD,EAAAT,YAAAU,EAAmB,GAC1EzC,MAAA,EAAA0C,EAAA,mBAAAC,GAON3C,YAEAA,MAAA,0BAbMA,MAAA,YAAAwC,EAAAvB,iBAIAjB,MAAA,GAAAA,MAAAwC,EAAAzB,eAAc6B,wBCWZC,KAAeC,UAAAC,KAAAC,KACfC,KACAC,KACAC,KACAC,KAAmBC,yBACnBC,KACAC,KAAaC,cAAA,YAIRpD,CAAoB","names":["i0","contentType_r1","NameId","Label","DataRestApiComponent","#contentTypesSvc","#dialogRouter","#formBuilder","constructor","this","transient","ContentTypesService","DialogRoutingService","inject","FormBuilder","contentTypes","getTypesSig","contentTypeForm","group","contentType","effect","types","length","urlStaticName","urlSegments","at","type","find","ct","get","setValue","openRestApi","event","navRelative","selectors","decls","vars","consts","template","rf","ctx","$event","DataRestApiComponent_For_6_Template","_forTrack0","sort","MatSelectModule","i1","i2","i3","MatButtonModule","MatCardModule","MatIconModule","ReactiveFormsModule","i4","RouterOutlet","SxcGridModule","encapsulation"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.html","./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.ts"],"sourcesContent":["<form [formGroup]=\"contentTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Content-Type</mat-label>\r\n    <mat-select formControlName=\"contentType\" (valueChange)=\"openRestApi($event)\">\r\n      @for (contentType of contentTypes().sort() ; track contentType.Id) {\r\n        <mat-option [value]=\"contentType.NameId\" >\r\n          {{ contentType.Label }}\r\n        </mat-option>\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, effect, inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../../../../core';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ContentTypesService } from '../services';\r\n\r\n@Component({\r\n    selector: 'app-data-rest-api',\r\n    imports: [\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        ReactiveFormsModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n    ],\r\n    templateUrl: './data-rest-api.component.html'\r\n})\r\nexport class DataRestApiComponent {\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  #formBuilder = inject(FormBuilder);\r\n\r\n  constructor() {\r\n    // Update form if the url changes and the item is found\r\n    effect(() => {\r\n      const types = this.contentTypes();\r\n      if (types.length === 0)\r\n        return;\r\n\r\n      const urlStaticName = this.#dialogRouter.urlSegments.at(-1);\r\n\r\n      const type = types.find(ct => ct.NameId === urlStaticName);\r\n      if (type)\r\n        this.contentTypeForm.get('contentType').setValue(type.NameId);\r\n    });\r\n\r\n  }\r\n\r\n  contentTypes = this.#contentTypesSvc.getTypesSig(\"Default\", []);\r\n\r\n  contentTypeForm: FormGroup = this.#formBuilder.group({\r\n    contentType: ['']\r\n  });\r\n\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.#dialogRouter.navRelative([`${event}`]);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}