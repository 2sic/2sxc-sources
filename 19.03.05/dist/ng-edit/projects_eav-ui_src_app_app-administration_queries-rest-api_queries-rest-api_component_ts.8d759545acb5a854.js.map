{"version":3,"file":"projects_eav-ui_src_app_app-administration_queries-rest-api_queries-rest-api_component_ts.8d759545acb5a854.js","mappings":"sZAOQA,MAAA,kBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAC,EAAAC,MACVF,cAAA,IAAAC,EAAAE,KAAA,8BAFFH,MAAA,EAAAI,EAAA,mBAAAJ,kCAAAK,EAAAC,aAAYC,SCSpB,MAAMC,EAAW,CACfC,KAAK,EACLH,YAAY,GAgBP,IAAMI,EAAuB,MAA9B,MAAOA,EAGXC,GACAC,GAEAC,GAEAC,cAPAC,KAAAC,OAAMC,MAAS,CAAEP,2BAA2BF,GAE5CO,MAAAJ,KAAgBO,KAAUC,MAC1BJ,MAAAH,KAAgBM,KAAUE,KAE1BL,MAAAF,KAAeQ,OAAOC,MAetBP,MAAAQ,EAAoBR,MAAKJ,EAAca,UAAUC,KAAaC,aAAaC,MAAO,IAElFZ,KAAAT,cAAasB,OAAkB,KAC7B,MAAMC,EAAId,KAAKC,IAAIc,KAAK,cAClBC,EAAUhB,MAAKQ,EAAkBS,QACvC,OAAOH,EAAEI,EAAEF,GAAW,GAAE,EACvB,IAEHhB,KAAAmB,cAA2BnB,MAAKF,EAAasB,MAAM,CACjDC,UAAW,CAAC,OACb,EArBCC,OAAO,KACL,MAAM/B,EAAaS,KAAKT,aACxB,GAA0B,IAAtBA,EAAWgC,OACb,OACF,MAAMC,EAAcxB,MAAKH,EAAc4B,YAAYC,IAAG,GAChDC,EAAsBpC,EAAWqC,KAAKC,GAAKA,EAAE1C,OAASqC,GACxDG,GACF3B,KAAKmB,cAAcW,IAAI,aAAaC,SAASJ,EAAoBxC,KAAI,EAE3E,CAEAqB,GAYAwB,YAAYC,GACLA,GACLjC,MAAKH,EAAcqC,YAAY,CAAC,GAAGD,KACrC,iDApCWtC,EAAuB,oCAAvBA,EAAuBwC,UAAA,2BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,wHAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ID9BhCvD,MAFJ,WAEIA,CAF8B,qBAE9BA,CADwD,eAC7CA,MAAA,WAAKA,QAChBA,MAAA,kBAAwCA,MAAA,uBAAAyD,GAAA,OAAeD,EAAAT,YAAAU,EAAmB,GACxEzD,MAAA,EAAA0D,EAAA,KASN1D,YAEAA,MAAA,0BAfMA,MAAA,YAAAwD,EAAAtB,eAIAlC,MAAA,GAAAA,MAAAwD,EAAAlD,aAAA,sBCkBEqD,KAAeC,UAAAC,KAAAC,KACfC,KACAC,KACAC,KACAC,KAAmBC,yBACnBC,KACAC,KAAaC,cAAA,YAIR5D,CAAuB","names":["i0","contentType_r1","Guid","Name","QueriesRestApiComponent_Conditional_5_For_1_Template","ctx_r1","queryTypes","sort","logSpecs","all","QueriesRestApiComponent","#pipelinesSvc","#dialogRouter","#formBuilder","constructor","this","log","classLog","transient","PipelinesService","DialogRoutingService","inject","FormBuilder","#getAllQueryTypes","getAllRes","eavConstants","contentTypes","query","computed","l","fnIf","queries","value","r","queryTypeForm","group","queryType","effect","length","urlGuidName","urlSegments","at","selectedContentType","find","q","get","setValue","openRestApi","event","navRelative","selectors","decls","vars","consts","template","rf","ctx","$event","QueriesRestApiComponent_Conditional_5_Template","MatSelectModule","i1","i2","i3","MatButtonModule","MatCardModule","MatIconModule","ReactiveFormsModule","i4","RouterOutlet","SxcGridModule","encapsulation"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/queries-rest-api/queries-rest-api.component.html","./projects/eav-ui/src/app/app-administration/queries-rest-api/queries-rest-api.component.ts"],"sourcesContent":["\r\n<form [formGroup]=\"queryTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Query</mat-label>\r\n    <mat-select formControlName=\"queryType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (queryTypes()) {\r\n        @for (contentType of queryTypes().sort(); track contentType) {\r\n        <mat-option [value]=\"contentType.Guid\">\r\n          {{ contentType.Name }}\r\n        </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, computed, effect, inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../../../../core';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { classLog } from '../../shared/logging';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Query } from '../models';\r\nimport { PipelinesService } from '../services';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  queryTypes: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-web-api-rest-api',\r\n    imports: [\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        ReactiveFormsModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n    ],\r\n    templateUrl: './queries-rest-api.component.html'\r\n})\r\nexport class QueriesRestApiComponent {\r\n  log = classLog({ QueriesRestApiComponent }, logSpecs);\r\n\r\n  #pipelinesSvc = transient(PipelinesService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  #formBuilder = inject(FormBuilder);\r\n\r\n  constructor() {\r\n    // Update form if the url changes and the item is found\r\n    effect(() => {\r\n      const queryTypes = this.queryTypes();\r\n      if (queryTypes.length === 0)\r\n        return;\r\n      const urlGuidName = this.#dialogRouter.urlSegments.at(-1);\r\n      const selectedContentType = queryTypes.find(q => q.Guid === urlGuidName);\r\n      if (selectedContentType)\r\n        this.queryTypeForm.get('queryType').setValue(selectedContentType.Guid);\r\n    });\r\n  }\r\n\r\n  #getAllQueryTypes = this.#pipelinesSvc.getAllRes(eavConstants.contentTypes.query, []);\r\n\r\n  queryTypes = computed<Query[]>(() => {\r\n    const l = this.log.fnIf('queryTypes');\r\n    const queries = this.#getAllQueryTypes.value();\r\n    return l.r(queries || []);\r\n  }, { });\r\n\r\n  queryTypeForm: FormGroup = this.#formBuilder.group({\r\n    queryType: ['']\r\n  });\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.#dialogRouter.navRelative([`${event}`]);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}