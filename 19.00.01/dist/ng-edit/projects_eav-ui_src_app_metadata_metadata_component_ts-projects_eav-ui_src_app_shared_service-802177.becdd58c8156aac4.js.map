{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts-projects_eav-ui_src_app_shared_service-802177.becdd58c8156aac4.js","mappings":"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","names":["convert","obj","fn","getWith","ContentItemsService","HttpServiceBase","getAll","contentTypeStaticName","this","getHttpApiUrl","webApiEntityList","params","appId","contentType","getAllSig","initial","getSignal","getColumns","webApiFieldsAll","staticName","importItem","file","from","toBase64","pipe","switchMap","fileBase64","http","post","apiUrl","webApiEntityRoot","AppId","ContentBase64","map","success","Success","Messages","__ngFactoryType__","factory","ɵfac","i0","ctx_r0","dialogData","message","ConfirmDeleteDialogComponent","constructor","dialog","hostClass","closeDialog","confirm","close","MAT_DIALOG_DATA","i1","selectors","hostVars","hostBindings","rf","ctx","ConfirmDeleteDialogComponent_Conditional_4_Template","entityTitle","entityId","MatCardModule","i2","MatButtonModule","i3","SafeHtmlPipe","styles","MetadataActionsComponent","agInit","refresh","deleteMetadata","onDelete","data","decls","vars","consts","template","MatRippleModule","MatIconModule","TippyDirective","encapsulation","MetadataContentTypeComponent","value","metadata","_Type","Description","scopeOption_r1","name","MetadataSaveDialogComponent_Conditional_11_For_5_Template","ctx_r1","scopeOptions","length","dropdownInsertValue","contentType_r3","NameId","Label","MetadataSaveDialogComponent_Conditional_15_For_2_Template","tmp_1_0","contentTypes","MetadataSaveDialogComponent","#contentTypesService","guidedContentType","advancedMode","transient","ContentTypesService","scope","signal","eavConstants","scopes","default","getScopesSig","undefined","computed","retrieveContentTypesSig","ngOnInit","buildForm","toggleGuidedContentType","toggleAdvancedMode","event","checked","formValues","form","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","required","controls","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","prompt","some","option","set","MetadataSaveDialogComponent_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_16_Template","MetadataSaveDialogComponent_Conditional_24_Template","$event","_c0","touched","errors","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i4","MatSelectModule","i5","i6","MatOptionModule","MatInputModule","i7","i8","NgClass","i9","MatSlideToggleModule","i10","FieldHintComponent","ClickStopPropagationDirective","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_10_Conditional_8_Template","Target","TargetType","_r2","createMetadata","recommendation_r5","Icon","Enabled","_r4","$implicit","MetadataComponent_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_16_For_10_Conditional_2_Template","_r3","openChange","MetadataComponent_Conditional_16_For_10_Template","fabOpen","recommendations","MetadataComponent","#entitiesSvc","#metadataSvc","#contentItemSvc","#dialogRoutes","snackBar","matDialog","viewContainerRef","changeDetectorRef","log","classLog","EntityEditService","MetadataService","DialogRoutingService","gridOptions","#buildGridOptions","#params","getParams","p","targetType","parseInt","keyType","key","#itemsFromHttp","item","find","i","Guid","For","metadataSet","Items","Recommendations","filter","r","Id","Count","title","decodeURIComponent","getParam","console","error","#fetchMetadata","doOnDialogClosed","open","recommendation","CreateEmpty","Name","create","calculateItemFor","duration","next","createMetadataForm","openFeatureDialog","MissingFeature","autoFocus","width","afterClosed","items","formUrl","convertFormToUrl","navRelative","markForCheck","x","EditPrep","constructMetadataInfo","newMetadataFromInfo","logGetMetadata","rxTap","getMetadata","take","forEach","startsWith","replace","window","atob","#editMetadata","editId","#deleteMetadata","confirmed","delete","DeleteWarning","isConfirmed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWide","field","onCellClicked","headerName","valueGetter","cellRenderer","ActionsPinnedRight1","MetadataComponent_Conditional_9_Template","MetadataComponent_Conditional_10_Template","MetadataComponent_Conditional_15_Template","MetadataComponent_Conditional_16_Template","RouterOutlet","SxcGridModule","MatDialogActions","EcoFabSpeedDialComponent","EcoFabSpeedDialTriggerComponent","EcoFabSpeedDialActionsComponent","MatBadgeModule","GoToPermissions","route","path","loadChildren","__webpack_require__","e","then","bind","m","permissionRoutes","getUrl","getUrlApp","app","toString","getUrlAttribute","id","attribute","getUrlContentType","guid","getUrlEntity","entity","getUrlLanguage","language","permissionsDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","Promise","all","PermissionsActionsComponent","deletePermission","#permissionsService","#prefills","buildGridOptions","permissions","PermissionsService","PermissionType","#fetchPermissions","editPermission","permission","Prefill","sort","Character","component","DialogEntryComponent","children","EditRoutes","contentTypeName","getHttp","metadataService","entitiesService","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","input","isShort","toggleIsShort","inputs","ngContentSelectors","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgTemplateOutlet","a","onClick","stopPropagation","zoneId","update","type","tryForce","force","ServiceBase","subscriptions","Subscription","ngOnDestroy","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/core/object-utilities.ts","./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/permissions/go-to-permissions.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/permissions.routing.ts","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["\r\n/**\r\n * Conversion function to change something to something else, a bit like 'map' but for a single item.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `getWith` function, but has a different name to indicate the usage.\r\n */\r\nexport function convert<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n/**\r\n * Function to do something with an object and return the result.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `convert` function, but has a different name to indicate the usage.\r\n */\r\nexport function getWith<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n","import { Injectable, Signal } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\n@Injectable()\r\nexport class ContentItemsService extends HttpServiceBase {\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getAllSig(contentTypeStaticName: string, initial: undefined): Signal<ContentItem[]> {\r\n    return this.getSignal<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    }, initial);\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsAll, {\r\n      params: { appId: this.appId, staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Delete {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog(true)\">Delete</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-confirm-delete-dialog',\r\n    templateUrl: './confirm-delete-dialog.component.html',\r\n    styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n    imports: [\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        SafeHtmlPipe,\r\n    ]\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialog: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialog.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-metadata-actions',\r\n    templateUrl: './metadata-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-metadata-content-type',\r\n    templateUrl: './metadata-content-type.component.html',\r\n    styleUrls: ['./metadata-content-type.component.scss'],\r\n    imports: [TippyDirective,]\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Create Metadata</mat-card-title>\r\n    <mat-card-subtitle>\r\n      This is a special operation to add an item which is metadata for another item,\r\n      see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"form\">\r\n      <!-- Scope -->\r\n      @if (advancedMode && guidedContentType) {\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions().length ? 'No items found' : ''\">\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n      </app-field-hint>\r\n      }\r\n      <!-- Content Type of metadata item -->\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Content Type</mat-label>\r\n        @if (guidedContentType) {\r\n        <mat-select formControlName=\"contentType\" required\r\n          [placeholder]=\"!contentTypes()()?.length ? 'No items found' : ''\">\r\n          @for (contentType of contentTypes()(); track contentType) {\r\n          <mat-option [value]=\"contentType.NameId\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!guidedContentType) {\r\n        <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n        }\r\n        <div matTextSuffix>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n            (click)=\"toggleGuidedContentType(true)\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n            (click)=\"toggleGuidedContentType(false)\">\r\n            <mat-icon>text_fields</mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-form-field>\r\n      @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"eav-card-actions\">\r\n    <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n      {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n    </mat-slide-toggle>\r\n    <div>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\"\r\n        (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, computed, HostBinding, OnInit, signal, WritableSignal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { MetadataSaveFormValues } from './metadata-save-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-metadata-save-dialog',\r\n    templateUrl: './metadata-save-dialog.component.html',\r\n    styleUrls: ['./metadata-save-dialog.component.scss'],\r\n    imports: [\r\n        MatCardModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        NgClass,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n    ]\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesService = transient(ContentTypesService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataSaveDialogComponent>,\r\n  ) { }\r\n\r\n  scope = signal(eavConstants.scopes.default.value);\r\n  scopeOptions = this.#contentTypesService.getScopesSig(undefined) as WritableSignal<ScopeOption[]>;\r\n\r\n  contentTypes = computed(() => {\r\n    const scope = this.scope();\r\n    return this.#contentTypesService.retrieveContentTypesSig(scope, undefined);\r\n  });\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialog.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions().some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions.set([newScopeOption, ...this.scopeOptions()]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.scope.set(newScope);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ title || 'Metadata' }}\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <p>\r\n      @if (!itemFor()) {\r\n      This item is not metadata for anything else.\r\n      }\r\n      @else {\r\n      This item is metadata for:\r\n      <br>Target: {{ itemFor().Target }}\r\n      <br>TargetType: {{ itemFor().TargetType }}\r\n      @if (itemFor().KeyNumber) {\r\n      <br>Key Number: {{ itemFor().KeyNumber }}\r\n      }\r\n      @if (itemFor().KeyGuid) {\r\n      <br>Key Guid: {{ itemFor().KeyGuid }}\r\n      }\r\n      @if (itemFor().KeyString) {\r\n      <br>Key String: {{ itemFor().KeyString }}\r\n      }\r\n      @if (itemFor().Title) {\r\n      <br>Title: {{ itemFor().Title }}\r\n      }\r\n      }\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"metadataSet().Items\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    @if (recommendations().length === 0) {\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\"\r\n      (click)=\"createMetadata()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    }\r\n    @if (recommendations().length > 0) {\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\"\r\n      (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab>\r\n          <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\"\r\n          (click)=\"createMetadata()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        @for (recommendation of recommendations(); track recommendation) {\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" [attr.label]=\"recommendation.Title\"\r\n          (click)=\"createMetadata(recommendation)\">\r\n          @if (recommendation.Icon) {\r\n          <div style=\"color: white; fill: white;\" [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n            [matBadgeHidden]=\"recommendation.Enabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n            matBadgePosition=\"below after\" aria-hidden=\"false\"></div>\r\n          } @else {\r\n          <mat-icon>add</mat-icon>\r\n          }\r\n        </button>\r\n        }\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n    }\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { map, take } from 'rxjs';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EavForInAdminUi } from '../edit/shared/models/eav';\r\nimport { openFeatureDialog } from '../features/shared/base-feature.component';\r\nimport { MetadataService } from '../permissions';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../shared/logging';\r\nimport { EditForm, EditPrep, ItemAddIdentifier } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataDto, MetadataItem, MetadataRecommendation } from './models/metadata.model';\r\n\r\n@Component({\r\n    selector: 'app-metadata',\r\n    templateUrl: './metadata.component.html',\r\n    styleUrls: ['./metadata.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n        MatDialogActions,\r\n        EcoFabSpeedDialComponent,\r\n        NgClass,\r\n        EcoFabSpeedDialTriggerComponent,\r\n        EcoFabSpeedDialActionsComponent,\r\n        MatBadgeModule,\r\n        SafeHtmlPipe,\r\n    ]\r\n})\r\nexport class MetadataComponent implements OnInit {\r\n\r\n  log = classLog({ MetadataComponent });\r\n\r\n  #entitiesSvc = transient(EntityEditService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #contentItemSvc = transient(ContentItemsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  fabOpen = signal(false);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key', 'title', 'contentTypeStaticName']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n    contentTypeStaticName: p.contentTypeStaticName,\r\n  }));\r\n\r\n  // 2024-11-05 2dm: broken, must inform @2dg\r\n  // itemFor = computed<EavForInAdminUi | undefined>(() => {\r\n  //   const items = this.#contentItemSvc.getAllSig(this.#params.contentTypeStaticName, undefined)\r\n  //   const item = items()?.find(i => i.Guid === this.#params.key);\r\n  //   if (item?.For)\r\n  //     return item.For;\r\n  //   return undefined;\r\n  // });\r\n\r\n  // Signal to get itemFor - must be _outside_ the computed property, otherwise it regenerates infinitely\r\n  #itemsFromHttp = this.#contentItemSvc.getAllSig(this.#params.contentTypeStaticName, undefined);\r\n\r\n  itemFor = computed<EavForInAdminUi | undefined>(() => {\r\n    const item = this.#itemsFromHttp()?.find(i => i.Guid === this.#params.key);\r\n    return (item?.For)\r\n      ? item.For\r\n      : undefined;\r\n  });\r\n\r\n  metadataSet = signal<MetadataDto>({ Items: [], Recommendations: [] } as MetadataDto);\r\n\r\n  recommendations = computed(() => {\r\n    const metadata = this.metadataSet();\r\n    return metadata.Recommendations.filter(r =>\r\n      metadata.Items.filter(i => i._Type.Id === r.Id).length < r.Count\r\n    );\r\n  });\r\n\r\n  protected title = (() => {\r\n    try {\r\n      return decodeURIComponent(this.#dialogRoutes.getParam('title') ?? '');\r\n    } catch (e) {\r\n      console.error('Couldn\\'t properly decode title');\r\n      return this.#dialogRoutes.getParam('title') ?? '';\r\n    }\r\n  })();\r\n\r\n  ngOnInit() {\r\n    this.#fetchMetadata();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchMetadata());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        openFeatureDialog(this.matDialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.#entitiesSvc.create(recommendation.Id, { For: this.calculateItemFor('dummy').For }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.matDialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) return;\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [this.calculateItemFor(contentType)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(contentType: string): ItemAddIdentifier {\r\n    const x = EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key);\r\n    return EditPrep.newMetadataFromInfo(contentType, x);\r\n  }\r\n\r\n  #fetchMetadata() {\r\n    const logGetMetadata = this.log.rxTap('getMetadata');\r\n    this.#metadataSvc.getMetadata(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .pipe(\r\n        logGetMetadata.pipe(),\r\n        take(1),\r\n        map(metadata => {\r\n          metadata.Recommendations.forEach(r => {\r\n            if (r.Icon?.startsWith('base64:')) {\r\n              r.Icon = r.Icon.replace('base64:', '');\r\n              r.Icon = window.atob(r.Icon);\r\n              // used for coloring black icons to white\r\n              r.Icon = r.Icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n            }\r\n          });\r\n          return metadata;\r\n        }),\r\n        logGetMetadata.map(),\r\n      )\r\n      // 2024-05-30 2dm - this standard shorthand seems to fail\r\n      // for reasons unknown to me. I've replaced it with the longhand\r\n      // The problem occurs when the metadataSet$ is updated after the initial load.\r\n      // .subscribe(this.metadataSet$);\r\n      .subscribe(data => {\r\n        this.metadataSet.set(data);\r\n      }\r\n      );\r\n  }\r\n\r\n  #editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(metadata.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.metadataSet().Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.matDialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed)\r\n          this.#deleteMetadata(metadata, true);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.#entitiesSvc.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.#fetchMetadata();\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<MetadataItem>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Title',\r\n          onCellClicked: (p: { data: MetadataItem }) => this.#editMetadata(p.data),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          valueGetter: (p: { data: MetadataItem }) => `${p.data._Type.Name}${p.data._Type.Title !== p.data._Type.Name ? ` (${p.data._Type.Title})` : ''}`,\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => ({\r\n            onDelete: (metadata) => this.#deleteMetadata(metadata),\r\n          } satisfies MetadataActionsParams))(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { Of } from '../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.routing').then(m => m.permissionRoutes),\r\n    // loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-permissions-actions',\r\n    templateUrl: './permissions-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnInit, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n    selector: 'app-permissions',\r\n    templateUrl: './permissions.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        MatDialogActions,\r\n        SxcGridModule,\r\n    ]\r\n})\r\nexport class PermissionsComponent implements OnInit {\r\n  gridOptions = this.buildGridOptions();\r\n  permissions = signal<Permission[]>([]);\r\n  #permissionsService = transient(PermissionsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n  }));\r\n\r\n  #prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<PermissionsComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.#fetchPermissions();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchPermissions());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  #fetchPermissions() {\r\n    this.#permissionsService.getAll(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .subscribe(permissions => {\r\n        this.permissions.set(permissions);\r\n      });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ...EditPrep.newMetadataFromInfo(\r\n            eavConstants.contentTypes.permissions,\r\n            EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n          ),\r\n          ...(this.#prefills[this.#params.targetType] && { Prefill: this.#prefills[this.#params.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [EditPrep.editId(permission.Id)],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) return;\r\n    this.snackBar.open('Deleting...');\r\n    this.#permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.#fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<Permission>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Permissions</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions()\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const permissionRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: permissionsDialog },\r\n    children: EditRoutes\r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService extends HttpServiceBase {\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.getHttp<MetadataDto>(webApiRoot, {\r\n      params: {\r\n        appId: this.appId,\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of, transient } from '../../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { EntityEditService } from '../../shared/services/entity-edit.service';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n\r\n  private entitiesService = transient(EntityEditService);\r\n\r\n  getAll(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { classLog } from '../logging';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  log = classLog({ClickStopPropagationDirective});\r\n\r\n  // Log constructor to detect that it was really attached/created\r\n  constructor() {\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.log.a('onClick', { event });\r\n    event.stopPropagation();\r\n\r\n    // This should never be added here, as it's often on a link, and the default behavior (link open) should happen\r\n    // event.preventDefault();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { webApiEntityRoot } from './entity.service';\r\nimport { HttpServiceBase } from './http-service-base';\r\n\r\n@Injectable()\r\nexport class EntityEditService extends HttpServiceBase {\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.appId, force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}