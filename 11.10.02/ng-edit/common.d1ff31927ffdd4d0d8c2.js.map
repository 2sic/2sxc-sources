{"version":3,"sources":["C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_cloneBuffer.js","./src/app/apps-management/services/apps-list.service.ts","./src/app/shared/directives/drag-and-drop.directive.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_defineProperty.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseAssignValue.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_assignValue.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_copyObject.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseKeysIn.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/keysIn.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_nativeKeysIn.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_getPrototype.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_getSymbolsIn.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_getAllKeysIn.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_initCloneArray.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_cloneArrayBuffer.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_cloneRegExp.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_cloneSymbol.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseCreate.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/isMap.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseIsMap.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/isSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseIsSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseClone.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_copyArray.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_initCloneObject.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_copySymbolsIn.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseAssignIn.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_copySymbols.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseAssign.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_initCloneByTag.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_cloneDataView.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_cloneTypedArray.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_arrayEach.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/cloneDeep.js","./src/app/shared/components/boolean-filter/boolean-filter.component.ts","./src/app/shared/components/boolean-filter/boolean-filter.component.html","./src/app/content-type-fields/constants/data-type.constants.ts","./src/app/content-type-fields/content-type-fields.helpers.ts","./src/app/content-items/services/entities.service.ts","./src/app/shared/directives/toggle-debug.directive.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/components/id-field/id-field.component.ts","./src/app/shared/components/id-field/id-field.component.html","./src/app/shared/pipes/safe-html.pipe.ts","./src/app/app-administration/services/app-dialog-config.service.ts","./src/app/manage-content-list/services/content-group.service.ts","./src/app/shared/constants/file-names.constants.ts","./src/app/permissions/services/permissions.service.ts","./src/app/permissions/go-to-permissions.ts","./src/app/shared/components/field-hint/field-hint.component.html","./src/app/shared/components/field-hint/field-hint.component.ts","./src/app/import-app/services/import-app.service.ts","./src/app/app-administration/constants/field-name.patterns.ts","./src/app/shared/directives/click-stop-propagation.directive.ts","./src/app/shared/helpers/copy-to-clipboard.helper.ts","./src/app/app-administration/services/index.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm2015/badge.js","./src/app/app-administration/services/pipelines.service.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@ngx-translate/http-loader/__ivy_ngcc__/fesm2015/ngx-translate-http-loader.js","./src/app/permissions/permissions-dialog.config.ts","./src/app/permissions/permissions-routing.module.ts","./src/app/permissions/permissions.module.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","./src/app/shared/directives/mousedown-stop-propagation.directive.ts","./src/app/shared/components/empty-route/empty-route.component.ts","./src/app/shared/components/empty-route/empty-route.component.html","./src/app/content-type-fields/constants/input-type.constants.ts","../edit/refresh-edit.module.ts","./src/app/permissions/services/metadata.service.ts"],"names":["freeExports","exports","nodeType","freeModule","module","Buffer","root","undefined","allocUnsafe","cloneBuffer","buffer","isDeep","slice","length","result","constructor","copy","http","context","dnnContext","apiUrl","name","this","$2sxc","getAll","get","params","zoneId","toString","create","post","delete","appId","flushCache","AppsListService","elementRef","zone","snackBar","markStyle","allowedFileTypes","filesDropped","dropAreaClass","dragClass","timeouts","subscription","element","nativeElement","ngOnInit","markStyleClass","classList","add","runOutsideAngular","subscribe","event","preventDefault","stopPropagation","clearTimeouts","push","window","setTimeout","remove","ngOnDestroy","unsubscribe","onDrop","files","convertToArray","dataTransfer","filterTypes","emit","clearTimeout","fileList","fileArray","i","allowedTypes","split","map","type","toLocaleLowerCase","filtered","filter","file","extIndex","lastIndexOf","ext","substring","includes","allowedTypesString","replace","open","duration","DragAndDropDirective","defineProperty","func","getNative","Object","e","baseAssignValue","object","key","value","hasOwnProperty","prototype","assignValue","objValue","call","eq","copyObject","source","props","customizer","isNew","index","newValue","keysIn","isArrayLike","arrayLikeKeys","isObject","nativeKeysIn","isProto","isPrototype","baseKeysIn","getPrototype","overArg","getPrototypeOf","getSymbolsIn","getOwnPropertySymbols","arrayPush","getSymbols","stubArray","getAllKeysIn","baseGetAllKeys","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","set","reFlags","symbolProto","Symbol","symbolValueOf","valueOf","objectCreate","baseCreate","proto","nodeIsMap","nodeUtil","isMap","baseUnary","isObjectLike","getTag","nodeIsSet","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","stack","isFlat","isFull","isArr","isArray","array","input","initCloneArray","Array","copyArray","tag","isFunc","isBuffer","initCloneObject","copySymbolsIn","baseAssignIn","copySymbols","keys","baseAssign","regexp","Ctor","dataView","byteOffset","cloneDataView","typedArray","cloneTypedArray","exec","lastIndex","initCloneByTag","Stack","stacked","forEach","subValue","keysFunc","getAllKeys","iteratee","arrayEach","cloneDeep","CLONE_DEEP_FLAG","agInit","isFilterActive","doesFilterPass","valueGetter","node","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","BooleanFilterComponent","String","Entity","Boolean","Number","Custom","DateTime","Hyperlink","Empty","calculateTypeIcon","typeName","id","tryForce","contentType","force","EntitiesService","globalConfigService","onClick","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","ToggleDebugDirective","openCodeFile","path","dialog","Develop","form","items","Path","oldHref","sessionStorage","getItem","oldUrl","URL","newHref","origin","pathname","search","newHash","buildHashParam","tabId","moduleId","contentBlockId","JSON","stringify","openQueryDesigner","queryId","PipelineDesigner","EntityId","rawKey","valueTemp","encodeURIComponent","DialogService","tooltip","tooltipGetter","data","refresh","IdFieldComponent","sanitizer","transform","html","bypassSecurityTrustHtml","SafeHtmlPipe","getDialogSettings","webApiDialogRoot","appid","AppDialogConfigService","getItems","item","webApiContentGroup","guid","part","saveItem","entityId","getList","contentGroup","saveList","resortedList","getHeader","ContentGroupService","defaultControllerName","defaultTemplateName","defaultTokenName","metadataService","entitiesService","targetType","keyType","getMetadata","contentTypes","permissions","PermissionsService","GoToPermissions","go","goEntity","metadata","entity","keyTypes","goContentType","goAttribute","attribute","number","goApp","app","route","loadChildren","then","m","PermissionsModule","title","isError","isShort","toggleIsShort","FieldHintComponent","webApiAppRoot","importApp","changedName","formData","FormData","append","ImportAppService","fieldNamePattern","fieldNameError","ClickStopPropagationDirective","copyToClipboard","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","nextId","MatBadgeBase","_MatBadgeMixinBase","MatBadge","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","_hasContent","_color","_overlap","size","_id","indexOf","changes","contentChange","currentValue","trim","_updateTextContent","badgeElement","_badgeElement","description","removeDescription","destroyNode","textContent","_stringifyContent","_createBadgeElement","activeClass","contentClass","_clearExistingBadges","requestAnimationFrame","newDescription","oldDescription","content","describe","colorPalette","cssClass","childCount","children","currentChild","contains","_setColor","val","_description","_updateHostAriaDescription","removeAttribute","_hidden","ɵfac","t","ɵdir","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","overlap","isAbove","isAfter","hidden","disabled","inputs","color","features","MatBadgeModule","ɵmod","ɵinj","factory","imports","webApiQueryRun","webApiQueryRoot","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","importQuery","pipe","fileBase64","AppId","ContentBase64","clonePipeline","Id","PipelinesService","TranslateHttpLoader","prefix","suffix","lang","permissionsDialog","initContext","panelSize","panelClass","getComponent","routes","component","matcher","EditModule","RefreshEditModule","PermissionsRoutingModule","forChild","withComponents","_c0","_c1","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","MatSlideToggle","multi","MatSlideToggleChange","checked","MatSlideToggleBase","_MatSlideToggleMixinBase","_focusMonitor","_changeDetectorRef","tabIndex","defaults","_onChange","_","_onTouched","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","parseInt","monitor","focusOrigin","_inputElement","focus","Promise","resolve","stopMonitoring","_emitChangeEvent","fn","isDisabled","markForCheck","options","focusVia","detectChanges","ɵcmp","viewQuery","_t","_thumbEl","first","_thumbBarEl","disableRipple","required","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","$event","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","directives","styles","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","MatSlideToggleModule","onMousedown","MousedownStopPropagationDirective","EmptyRouteComponent","StringDefault","StringUrlPath","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringTemplatePicker","StringWysiwyg","BooleanDefault","DatetimeDefault","EmptyDefault","NumberDefault","EntityDefault","EntityQuery","EntityContentBlocks","HyperlinkDefault","HyperlinkLibrary","ExternalWebComponent","CustomGPS","CustomDefault","OldTypeDropdown","OldTypeWysiwyg","OldTypeDefault","StringWysiwygTinymce","StringWysiwygAdv","StringWysiwygDnn","DefaultSuffix","router","snapshot","oldEditUrl","newEditUrl","currentUrl","newUrl","navigate","RefreshEditComponent","editRefreshRoutes","typeId","contentTypeName","MetadataService"],"mappings":"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","file":"common.d1ff31927ffdd4d0d8c2.js","sourcesContent":["import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\n\r\n@Injectable()\r\nexport class AppsListService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<App[]>;\r\n  }\r\n\r\n  create(name: string) {\r\n    return this.http.post(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: { zoneId: this.context.zoneId.toString(), name }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\n\r\n@Directive({ selector: '[appDragAndDrop]' })\r\nexport class DragAndDropDirective implements OnInit, OnDestroy {\r\n  @Input() private markStyle: 'outline' | 'fill' | 'shadow' = 'outline';\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  @Input() private allowedFileTypes = '';\r\n  @Output() private filesDropped = new EventEmitter<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass: string;\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n  private subscription = new Subscription();\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass = `eav-droparea-${this.markStyle}`;\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass);\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent(this.element, 'dragover').subscribe((event: DragEvent) => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent(this.element, 'dragleave').subscribe((event: DragEvent) => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass, this.dragClass);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = this.convertToArray(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes);\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private convertToArray(fileList: FileList) {\r\n    const fileArray: File[] = [];\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      fileArray.push(fileList[i]);\r\n    }\r\n    return fileArray;\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes.replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams } from '@ag-grid-community/all-modules';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private params: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const value: boolean = this.params.valueGetter(params.node);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.params.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","export class DataTypeConstants {\r\n  public static readonly String = 'String';\r\n  public static readonly Entity = 'Entity';\r\n  public static readonly Boolean = 'Boolean';\r\n  public static readonly Number = 'Number';\r\n  public static readonly Custom = 'Custom';\r\n  public static readonly DateTime = 'DateTime';\r\n  public static readonly Hyperlink = 'Hyperlink';\r\n  public static readonly Empty = 'Empty';\r\n}\r\n","import { DataTypeConstants } from './constants/data-type.constants';\r\n\r\nexport function calculateTypeIcon(typeName: string): string {\r\n  switch (typeName) {\r\n    case DataTypeConstants.String:\r\n      return 'text_fields';\r\n    case DataTypeConstants.Entity:\r\n      return 'share';\r\n    case DataTypeConstants.Boolean:\r\n      return 'toggle_on';\r\n    case DataTypeConstants.Number:\r\n      return 'dialpad';\r\n    case DataTypeConstants.Custom:\r\n      return 'extension';\r\n    case DataTypeConstants.DateTime:\r\n      return 'today';\r\n    case DataTypeConstants.Hyperlink:\r\n      return 'link';\r\n    case DataTypeConstants.Empty:\r\n      return 'crop_free';\r\n    default:\r\n      return 'device_unknown';\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityRoot } from 'projects/edit';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../../../../edit/shared/services/global-configuration.service';\r\n\r\n@Directive({ selector: '[appToggleDebug]' })\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-types.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyPortalRoot, keyRequestToken, keyTabId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { EditForm } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCodeFile(path: string) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form: EditForm = {\r\n      items: [{ Path: path }]\r\n    };\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: queryId }],\r\n    };\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyPipelineId, queryId.toString()) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam = `&${rawKey}=${rawValue}`;\r\n    return hashParam;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: IdFieldParams) {\r\n    this.id = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [matTooltip]=\"tooltip\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DialogSettings } from '../models/dialog-settings.model';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getDialogSettings() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appid: this.context.appId.toString() },\r\n    }) as Observable<DialogSettings>;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ReplaceConfig } from '../../replace-content/models/replace-config.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {\r\n      params: { appId: this.context.appId.toString(), guid: item.guid, part: item.part, index: item.index.toString() }\r\n    }) as Observable<ReplaceConfig>;\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    }) as Observable<GroupHeader[]>;\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'header'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid }\r\n    }) as Observable<GroupHeader>;\r\n  }\r\n\r\n}\r\n","export const defaultControllerName = 'MyController.cs';\r\nexport const defaultTemplateName = '_MyFile.cshtml';\r\nexport const defaultTokenName = 'MyFile.html';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n  constructor(private metadataService: MetadataService, private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: string, key: string) {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions) as Observable<Permission[]>;\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false) as Observable<null>;\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants } from '../shared/constants/eav.constants';\r\n\r\n/**\r\n * Navigation system to access permissions dialogs as sub-dialogs for many use cases\r\n */\r\nexport const GoToPermissions = {\r\n\r\n  go(targetType: number, keyType: string, key: string) {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  },\r\n\r\n  /** Go to edit permissions for entity */\r\n  goEntity(key: string) {\r\n    return this.go(eavConstants.metadata.entity.type, eavConstants.keyTypes.guid, key);\r\n  },\r\n\r\n  /** Go to edit permissions for content-type. For historic reasons, it's the same as Entity */\r\n  goContentType(key: string) {\r\n    return this.goEntity(key);\r\n  },\r\n\r\n  goAttribute(id: number) {\r\n    return this.go(eavConstants.metadata.attribute.type, eavConstants.keyTypes.number, id);\r\n  },\r\n\r\n  goApp(appId: number) {\r\n    return this.go(eavConstants.metadata.app.type, eavConstants.keyTypes.number, appId);\r\n  },\r\n\r\n  /**\r\n   * The route definition for use in all routing components which can route to this dialog\r\n   */\r\n  route: {\r\n    path: 'permissions/:type/:keyType/:key',\r\n    loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permission' },\r\n  } as Route,\r\n};\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ImportAppResult } from '../models/import-app-result.model';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ? changedName : '');\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<ImportAppResult>;\r\n  }\r\n}\r\n","export const fieldNamePattern = /^[A-Za-z][A-Za-z0-9-]+$/;\r\nexport const fieldNameError = 'Standard letters, numbers and hyphens are allowed. Must start with a letter.';\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","\r\nexport * from './pipelines.service';\r\n","import { Directive, NgZone, ElementRef, Renderer2, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { AriaDescriber, A11yModule } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nlet nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/** @docs-private */\nclass MatBadgeBase {\n}\nconst _MatBadgeMixinBase = mixinDisabled(MatBadgeBase);\n/** Directive to display a text badge. */\nclass MatBadge extends _MatBadgeMixinBase {\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        /** Whether the badge has any content. */\n        this._hasContent = false;\n        this._color = 'primary';\n        this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n    }\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() { return this._color; }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** Whether the badge should overlap its contents or not */\n    get overlap() { return this._overlap; }\n    set overlap(val) {\n        this._overlap = coerceBooleanProperty(val);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() { return this._description; }\n    set description(newDescription) {\n        if (newDescription !== this._description) {\n            const badgeElement = this._badgeElement;\n            this._updateHostAriaDescription(newDescription, this._description);\n            this._description = newDescription;\n            if (badgeElement) {\n                newDescription ? badgeElement.setAttribute('aria-label', newDescription) :\n                    badgeElement.removeAttribute('aria-label');\n            }\n        }\n    }\n    /** Whether the badge is hidden. */\n    get hidden() { return this._hidden; }\n    set hidden(val) {\n        this._hidden = coerceBooleanProperty(val);\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    ngOnChanges(changes) {\n        const contentChange = changes['content'];\n        if (contentChange) {\n            const value = contentChange.currentValue;\n            this._hasContent = value != null && `${value}`.trim().length > 0;\n            this._updateTextContent();\n        }\n    }\n    ngOnDestroy() {\n        const badgeElement = this._badgeElement;\n        if (badgeElement) {\n            if (this.description) {\n                this._ariaDescriber.removeDescription(badgeElement, this.description);\n            }\n            // When creating a badge through the Renderer, Angular will keep it in an index.\n            // We have to destroy it ourselves, otherwise it'll be retained in memory.\n            if (this._renderer.destroyNode) {\n                this._renderer.destroyNode(badgeElement);\n            }\n        }\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    /** Injects a span element into the DOM with the content. */\n    _updateTextContent() {\n        if (!this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        else {\n            this._badgeElement.textContent = this._stringifyContent();\n        }\n        return this._badgeElement;\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        const contentClass = 'mat-badge-content';\n        // Clear any existing badges which may have persisted from a server-side render.\n        this._clearExistingBadges(contentClass);\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        badgeElement.classList.add(contentClass);\n        badgeElement.textContent = this._stringifyContent();\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        if (this.description) {\n            badgeElement.setAttribute('aria-label', this.description);\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Sets the aria-label property on the element */\n    _updateHostAriaDescription(newDescription, oldDescription) {\n        // ensure content available before setting label\n        const content = this._updateTextContent();\n        if (oldDescription) {\n            this._ariaDescriber.removeDescription(content, oldDescription);\n        }\n        if (newDescription) {\n            this._ariaDescriber.describe(content, newDescription);\n        }\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        if (colorPalette !== this._color) {\n            const classList = this._elementRef.nativeElement.classList;\n            if (this._color) {\n                classList.remove(`mat-badge-${this._color}`);\n            }\n            if (colorPalette) {\n                classList.add(`mat-badge-${colorPalette}`);\n            }\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges(cssClass) {\n        const element = this._elementRef.nativeElement;\n        let childCount = element.children.length;\n        // Use a reverse while, because we'll be removing elements from the list as we're iterating.\n        while (childCount--) {\n            const currentChild = element.children[childCount];\n            if (currentChild.classList.contains(cssClass)) {\n                element.removeChild(currentChild);\n            }\n        }\n    }\n    /** Gets the string representation of the badge content. */\n    _stringifyContent() {\n        // Convert null and undefined to an empty string which is consistent\n        // with how Angular handles them in inside template interpolations.\n        const content = this.content;\n        return content == null ? '' : `${content}`;\n    }\n}\nMatBadge.ɵfac = function MatBadge_Factory(t) { return new (t || MatBadge)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatBadge.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatBadge, selectors: [[\"\", \"matBadge\", \"\"]], hostAttrs: [1, \"mat-badge\"], hostVars: 20, hostBindings: function MatBadge_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-badge-overlap\", ctx.overlap)(\"mat-badge-above\", ctx.isAbove())(\"mat-badge-below\", !ctx.isAbove())(\"mat-badge-before\", !ctx.isAfter())(\"mat-badge-after\", ctx.isAfter())(\"mat-badge-small\", ctx.size === \"small\")(\"mat-badge-medium\", ctx.size === \"medium\")(\"mat-badge-large\", ctx.size === \"large\")(\"mat-badge-hidden\", ctx.hidden || !ctx._hasContent)(\"mat-badge-disabled\", ctx.disabled);\n    } }, inputs: { disabled: [\"matBadgeDisabled\", \"disabled\"], position: [\"matBadgePosition\", \"position\"], size: [\"matBadgeSize\", \"size\"], color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\"], description: [\"matBadgeDescription\", \"description\"], hidden: [\"matBadgeHidden\", \"hidden\"], content: [\"matBadge\", \"content\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatBadge.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: AriaDescriber },\n    { type: Renderer2 },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatBadge.propDecorators = {\n    color: [{ type: Input, args: ['matBadgeColor',] }],\n    overlap: [{ type: Input, args: ['matBadgeOverlap',] }],\n    position: [{ type: Input, args: ['matBadgePosition',] }],\n    content: [{ type: Input, args: ['matBadge',] }],\n    description: [{ type: Input, args: ['matBadgeDescription',] }],\n    size: [{ type: Input, args: ['matBadgeSize',] }],\n    hidden: [{ type: Input, args: ['matBadgeHidden',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadge, [{\n        type: Directive,\n        args: [{\n                selector: '[matBadge]',\n                inputs: ['disabled: matBadgeDisabled'],\n                host: {\n                    'class': 'mat-badge',\n                    '[class.mat-badge-overlap]': 'overlap',\n                    '[class.mat-badge-above]': 'isAbove()',\n                    '[class.mat-badge-below]': '!isAbove()',\n                    '[class.mat-badge-before]': '!isAfter()',\n                    '[class.mat-badge-after]': 'isAfter()',\n                    '[class.mat-badge-small]': 'size === \"small\"',\n                    '[class.mat-badge-medium]': 'size === \"medium\"',\n                    '[class.mat-badge-large]': 'size === \"large\"',\n                    '[class.mat-badge-hidden]': 'hidden || !_hasContent',\n                    '[class.mat-badge-disabled]': 'disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.AriaDescriber }, { type: ɵngcc0.Renderer2 }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matBadgePosition']\n        }], size: [{\n            type: Input,\n            args: ['matBadgeSize']\n        }], color: [{\n            type: Input,\n            args: ['matBadgeColor']\n        }], overlap: [{\n            type: Input,\n            args: ['matBadgeOverlap']\n        }], description: [{\n            type: Input,\n            args: ['matBadgeDescription']\n        }], hidden: [{\n            type: Input,\n            args: ['matBadgeHidden']\n        }], content: [{\n            type: Input,\n            args: ['matBadge']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBadgeModule {\n}\nMatBadgeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatBadgeModule });\nMatBadgeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatBadgeModule_Factory(t) { return new (t || MatBadgeModule)(); }, imports: [[\n            A11yModule,\n            MatCommonModule\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBadgeModule, { declarations: function () { return [MatBadge]; }, imports: function () { return [A11yModule,\n        MatCommonModule]; }, exports: function () { return [MatBadge, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadgeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    MatCommonModule\n                ],\n                exports: [MatBadge, MatCommonModule],\n                declarations: [MatBadge]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n\n//# sourceMappingURL=badge.js.map","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityList } from 'projects/edit';\r\nimport { from, Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryRoot = 'admin/query/';\r\nconst webApiQueryImport = webApiQueryRoot + 'import';\r\nconst webApiQueryClone = webApiQueryRoot + 'Clone';\r\nconst webApiQueryDelete = webApiQueryRoot + 'Delete';\r\nexport const webApiQueryRun = webApiQueryRoot + 'Run';\r\nexport const webApiQuerySave = webApiQueryRoot + 'Save';\r\nexport const webApiQueryGet = webApiQueryRoot + 'Get';\r\nexport const webApiQueryDataSources = webApiQueryRoot + 'DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    }) as Observable<Query[]>;\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      mergeMap(fileBase64 => {\r\n        return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        }) as Observable<boolean>;\r\n      })\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    }) as Observable<boolean>;\r\n  }\r\n}\r\n","class TranslateHttpLoader {\n    constructor(http, prefix = \"/assets/i18n/\", suffix = \".json\") {\n        this.http = http;\n        this.prefix = prefix;\n        this.suffix = suffix;\n    }\n    /**\n     * Gets the translations from the server\n     */\n    getTranslation(lang) {\n        return this.http.get(`${this.prefix}${lang}${this.suffix}`);\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TranslateHttpLoader };\n\n//# sourceMappingURL=ngx-translate-http-loader.js.map","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../../../../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: permissionsDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PermissionsRoutingModule { }\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { PermissionsActionsComponent } from './ag-grid-components/permissions-actions/permissions-actions.component';\r\nimport { PermissionsRoutingModule } from './permissions-routing.module';\r\nimport { PermissionsComponent } from './permissions.component';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  entryComponents: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PermissionsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    AgGridModule.withComponents([]),\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ]\r\n})\r\nexport class PermissionsModule { }\r\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appMousedownStopPropagation]' })\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-empty-route',\r\n  templateUrl: './empty-route.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EmptyRouteComponent {\r\n  constructor() { }\r\n}\r\n","<router-outlet></router-outlet>\r\n","export class InputTypeConstants {\r\n    // String\r\n    public static readonly StringDefault = 'string-default';\r\n    public static readonly StringUrlPath = 'string-url-path';\r\n    public static readonly StringDropdown = 'string-dropdown';\r\n    public static readonly StringDropdownQuery = 'string-dropdown-query';\r\n    public static readonly StringFontIconPicker = 'string-font-icon-picker';\r\n    public static readonly StringTemplatePicker = 'string-template-picker';\r\n    public static readonly StringWysiwyg = 'string-wysiwyg';\r\n    // Boolean\r\n    public static readonly BooleanDefault = 'boolean-default';\r\n    // DateTime\r\n    public static readonly DatetimeDefault = 'datetime-default';\r\n    // Empty\r\n    public static readonly EmptyDefault = 'empty-default';\r\n    // Number\r\n    public static readonly NumberDefault = 'number-default';\r\n    // Entity\r\n    public static readonly EntityDefault = 'entity-default';\r\n    public static readonly EntityQuery = 'entity-query';\r\n    public static readonly EntityContentBlocks = 'entity-content-blocks';\r\n    // Hyperlink\r\n    public static readonly HyperlinkDefault = 'hyperlink-default';\r\n    public static readonly HyperlinkLibrary = 'hyperlink-library';\r\n    // Custom\r\n    public static readonly ExternalWebComponent = 'external-web-component';\r\n    public static readonly CustomGPS = 'custom-gps';\r\n    public static readonly CustomDefault = 'custom-default';\r\n    // Old\r\n    public static readonly OldTypeDropdown = 'dropdown';\r\n    public static readonly OldTypeWysiwyg = 'wysiwyg';\r\n    public static readonly OldTypeDefault = 'default';\r\n    public static readonly StringWysiwygTinymce = 'string-wysiwyg-tinymce';\r\n    public static readonly StringWysiwygAdv = 'string-wysiwyg-adv';\r\n    public static readonly StringWysiwygDnn = 'string-wysiwyg-dnn';\r\n    // Default\r\n    public static readonly DefaultSuffix = '-default';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EditParams } from './edit-matcher.models';\r\nimport { calculatePathFromRoot } from './shared/services/edit-routing.helpers';\r\n\r\n@Component({\r\n  template: '',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RefreshEditComponent {\r\n  constructor(router: Router, route: ActivatedRoute) {\r\n    const params = route.snapshot.params as EditParams;\r\n    const oldEditUrl = `edit/refresh/${params.items}`;\r\n    const newEditUrl = `edit/${params.items}`;\r\n\r\n    const currentUrl = calculatePathFromRoot(route);\r\n    const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n    if (lastIndex <= 0) { return; }\r\n    const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n    router.navigate([newUrl]);\r\n  }\r\n}\r\n\r\nconst editRefreshRoutes: Routes = [\r\n  {\r\n    path: '', component: RefreshEditComponent, data: { title: 'Refreshing Edit Dialog' }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RefreshEditComponent,\r\n  ],\r\n  entryComponents: [\r\n    RefreshEditComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(editRefreshRoutes),\r\n  ],\r\n})\r\nexport class RefreshEditModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param typeId metadataOf something. For more info checkout out eavConstants file\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of content type for which we search for permissions. Key is connected with keyType\r\n   * @param contentTypeName name of content type where permissions are stored\r\n   */\r\n  getMetadata(typeId: number, keyType: string, key: string, contentTypeName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: typeId.toString(),\r\n        keyType,\r\n        key,\r\n        contentType: contentTypeName,\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}