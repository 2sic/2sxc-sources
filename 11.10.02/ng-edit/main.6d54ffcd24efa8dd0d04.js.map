{"version":3,"sources":["./src/app/shared/constants/session.constants.ts","../edit/shared/helpers/url-helper.ts","./src/app/shared/helpers/angular-console-log.helper.ts","./src/environments/environment.ts","./src/app/shared/constants/dialog-types.constants.ts","./src/app/shared/services/context.ts","../edit/edit.matcher.ts","../edit/shared/store/reducers/global-configuration.reducer.ts","../edit/shared/store/reducers/index.ts","../edit/shared/store/selectors/global-configuration.selectors.ts","./src/app/shared/constants/eav.constants.ts","./src/app/shared/helpers/url-prep.helper.ts","../edit/shared/store/actions/global-configuration.actions.ts","../edit/shared/store/ngrx-data/entity-metadata.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/params-init.factory.ts","./src/app/shared/interceptors/handle-errors.interceptor.ts","./src/app/shared/interceptors/set-headers.interceptor.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":["prefix","keyZoneId","keyRequestToken","keyTabId","keyContentBlockId","keyModuleId","keyAppId","keyDebug","keyDialog","keyContentType","keyItems","keyPartOfPage","keyPortalRoot","keyPublishing","keyFilters","keyPipelineId","keyApi","keyUrl","readQueryStringParameters","url","queryParams","split","forEach","f","length","decodeURIComponent","replace","getUrlParams","qs","join","tokens","params","re","exec","replaceUrlParam","paramName","paramValue","pattern","RegExp","search","indexOf","getUrlPrefix","area","eavConfig","result","systemRoot","portalRoot","appRoot","endsWith","substring","angularConsoleLog","message","production","console","groupCollapsed","optionalParams","trace","groupEnd","environment","Zone","AppImport","App","ContentType","ContentItems","Edit","ItemHistory","Develop","PipelineDesigner","Replace","InstanceList","parentContext","ready","this","parent","globalWindow","window","contextId","id","_zoneId","routeNum","zoneId","_appId","appId","_rvt","requestToken","_tabId","tabId","_contentBlockId","contentBlockId","_moduleId","moduleId","init","route","routeSnapshot","snapshot","clearCachedValues","initRoot","sessionStorage","getItem","sessionNumber","Error","name","num","parseInt","isNaN","paramMap","get","Context","editRoot","path","hasDetails","hasUpdate","posParams","items","detailsEntityGuid","detailsFieldId","updateEntityGuid","updateFieldId","consumed","slice","refreshEditRoot","edit","refreshEdit","initialState","debugEnabled","globalConfigurationReducer","state","metaReducers","reducer","action","reducers","globalConfiguration","selectDebugEnabled","eavConstants","metadata","attribute","type","target","app","entity","contentType","zone","cmsObject","keyTypes","guid","string","number","scopes","default","value","contentTypes","template","permissions","query","settings","resources","pipelineDesigner","outDataSource","className","in","description","visualDesignerData","Top","Left","Width","defaultPipeline","dataSources","entityGuid","partAssemblyAndType","streamWiring","From","Out","To","In","testParameters","convertFormToUrl","form","formUrl","item","Parent","innerItem","EntityId","Field","Add","Index","Prefill","keys","Object","key","paramEncode","toString","ContentTypeName","addItem","For","String","Target","Number","Guid","Metadata","keyType","toLocaleLowerCase","metadataKeys","metaKey","targetType","DuplicateEntity","Group","Part","convertUrlToForm","startsWith","options","option","innerItemParams","prefillParams","paramDecode","push","test","editItem","newParams","forParams","forType","forValue","forTarget","copyParams","groupParams","groupItem","text","loadDebugEnabled","toggleDebugEnabled","entityConfig","entityMetadata","Item","selectId","undefined","Feature","Language","LanguageInstance","formId","ContentTypeItem","InputType","Type","pluralNames","appRoutes","loadChildren","then","m","AppsManagementModule","data","title","ImportAppModule","AppAdministrationModule","CodeEditorModule","VisualQueryModule","ReplaceContentModule","ManageContentListModule","ContentItemsModule","ContentTypeFieldsModule","ItemHistoryModule","matcher","EditModule","RefreshEditModule","ContentExportModule","ContentImportModule","PermissionsModule","AppRoutingModule","forRoot","el","dnnContext","context","titleService","router","activatedRoute","matIconRegistry","preConfigure","subscription","Subscription","setDefaultFontSetClass","ngOnInit","appTitle","getTitle","add","events","pipe","filter","event","map","child","firstChild","subscribe","setTitle","ngOnDestroy","unsubscribe","AppComponent","paramsInitFactory","injector","log","eavKeys","location","hash","alert","href","removeItem","setItem","urlHash","queryParametersFromUrl","paramKeys","dialog","navigate","JSON","parse","historyItems","pipelineId","replaceItems","groupItems","$2sxc","totalPopup","close","error","env","load","page","rvt","root","api","excludedUrls","intercept","req","next","handle","catchError","checkIfExcluded","showDetailedHttpError","throwError","includes","infoText","status","srvResp","msg","Message","msgDet","MessageDetail","ExceptionMessage","HandleErrorsInterceptor","modified","body","FormData","clone","setHeaders","SetHeadersInterceptor","AppModule","provide","useFactory","deps","multi","useClass","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","bootstrapModule","catch","err","webpackEmptyAsyncContext","Promise","resolve","e","code","module","exports"],"mappings":"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","file":"main.6d54ffcd24efa8dd0d04.js","sourcesContent":["export const prefix = 'eav-';\r\nexport const keyZoneId = prefix + 'zoneId';\r\nexport const keyRequestToken = prefix + 'rvt';\r\nexport const keyTabId = prefix + 'tid';\r\nexport const keyContentBlockId = prefix + 'cbid';\r\nexport const keyModuleId = prefix + 'mid';\r\nexport const keyAppId = prefix + 'appId';\r\nexport const keyDebug = prefix + 'debug';\r\nexport const keyDialog = prefix + 'dialog';\r\nexport const keyContentType = prefix + 'contentType';\r\nexport const keyItems = prefix + 'items';\r\nexport const keyPartOfPage = prefix + 'partOfPage';\r\nexport const keyPortalRoot = prefix + 'portalroot';\r\nexport const keyPublishing = prefix + 'publishing';\r\nexport const keyFilters = prefix + 'filters';\r\nexport const keyPipelineId = prefix + 'pipelineId';\r\nexport const keyApi = prefix + 'api';\r\n\r\n/** Url which opened the dialog. Used for debugging */\r\nexport const keyUrl = prefix + 'url';\r\n","import { EavConfig } from '../models/eav-config';\r\n\r\nexport class UrlHelper {\r\n\r\n  static readQueryStringParameters(url: string): { [key: string]: string } {\r\n    const queryParams: { [key: string]: string } = {};\r\n    url.split('&').forEach(f => {\r\n      if (f.split('=').length === 2) {\r\n        queryParams[f.split('=')[0]] = decodeURIComponent(f.split('=')[1].replace(/\\+/g, ' '));\r\n      }\r\n    });\r\n    return queryParams;\r\n  }\r\n\r\n  /** https://stackoverflow.com/questions/979975/how-to-get-the-value-from-the-get-parameters/1099670#1099670 */\r\n  static getUrlParams(qs: string) {\r\n    qs = qs.split('+').join(' ');\r\n\r\n    const params: { [key: string]: string } = {};\r\n    let tokens;\r\n    const re = /[?&]?([^=]+)=([^&]*)/g;\r\n\r\n    // tslint:disable-next-line:no-conditional-assignment\r\n    while (tokens = re.exec(qs)) {\r\n      params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  static replaceUrlParam(url: string, paramName: string, paramValue: string) {\r\n    if (paramValue === null) { paramValue = ''; }\r\n\r\n    const pattern = new RegExp('\\\\b(' + paramName + '=).*?(&|#|$)');\r\n    if (url.search(pattern) >= 0) { return url.replace(pattern, '$1' + paramValue + '$2'); }\r\n\r\n    url = url.replace(/[?#]$/, '');\r\n    return url + (url.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;\r\n  }\r\n\r\n  static getUrlPrefix(area: string, eavConfig: EavConfig) {\r\n    let result = '';\r\n\r\n    if (area === 'system') { result = eavConfig.systemRoot; }                    // used to link to JS-stuff and similar\r\n    if (area === 'zone') { result = eavConfig.portalRoot; }                      // used to link to the site-root (like an image)\r\n    if (area === 'app') { result = eavConfig.appRoot; }                          // used to find the app-root of something inside an app\r\n    if (result.endsWith('/')) { result = result.substring(0, result.length - 1); }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { environment } from '../../../environments/environment';\r\n\r\nexport function angularConsoleLog(message?: any, ...optionalParams: any[]) {\r\n  if (environment.production) { return; }\r\n\r\n  console.groupCollapsed(message, ...optionalParams);\r\n  // tslint:disable-next-line:no-console\r\n  console.trace();\r\n  console.groupEnd();\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","export class DialogTypeConstants {\r\n  public static readonly Zone = 'zone';\r\n  public static readonly AppImport = 'app-import';\r\n  public static readonly App = 'app';\r\n  public static readonly ContentType = 'contenttype';\r\n  public static readonly ContentItems = 'contentitems';\r\n  public static readonly Edit = 'edit';\r\n  public static readonly ItemHistory = 'item-history';\r\n  public static readonly Develop = 'develop';\r\n  public static readonly PipelineDesigner = 'pipeline-designer';\r\n  public static readonly Replace = 'replace';\r\n  public static readonly InstanceList = 'instance-list';\r\n}\r\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { keyAppId, keyContentBlockId, keyModuleId, keyRequestToken, keyTabId, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { angularConsoleLog } from '../helpers/angular-console-log.helper';\r\n\r\n/** The context provides information */\r\n@Injectable()\r\nexport class Context {\r\n\r\n  /** Id of current context */\r\n  public id: number;\r\n\r\n  /** Determines if the context is ready to use, and everything is initialized */\r\n  public ready = false;\r\n\r\n  /** The parent, for hierarchical lookup */\r\n  private parent: Context;\r\n\r\n  private routeSnapshot: ActivatedRouteSnapshot;\r\n\r\n  /** The current Zone ID */\r\n  get zoneId(): number {\r\n    return this._zoneId || (this._zoneId = this.routeNum(keyZoneId) || this.parent.zoneId);\r\n  }\r\n  private _zoneId: number;\r\n\r\n  /** The current App ID */\r\n  get appId(): number {\r\n    return (this._appId != null) ? this._appId : (this._appId = this.routeNum(keyAppId) || this.parent.appId);\r\n  }\r\n  private _appId: number;\r\n\r\n  /**\r\n   * The request verification token for http requests.\r\n   * It's only loaded from the root, never from sub-contexts\r\n   */\r\n  get requestToken(): string { return this._rvt || (this._rvt = this.parent.requestToken); }\r\n  private _rvt: string;\r\n\r\n  /** Tab Id is global */\r\n  get tabId(): number {\r\n    return this._tabId || (this._tabId = this.routeNum(keyTabId) || this.parent.tabId);\r\n  }\r\n  private _tabId: number;\r\n\r\n  /** Content Block Id is global */\r\n  get contentBlockId(): number {\r\n    return this._contentBlockId || (this._contentBlockId = this.routeNum(keyContentBlockId) || this.parent.contentBlockId);\r\n  }\r\n  private _contentBlockId: number;\r\n\r\n  /** Module Id is global */\r\n  get moduleId(): number {\r\n    return this._moduleId || (this._moduleId = this.routeNum(keyModuleId) || this.parent.moduleId);\r\n  }\r\n  private _moduleId: number;\r\n\r\n  constructor(@Optional() @SkipSelf() parentContext: Context) {\r\n    this.parent = parentContext;\r\n\r\n    // spm NOTE: I've given id to every context to make it easier to follow how things work\r\n    const globalWindow = window as any;\r\n    if (!globalWindow.contextId) { globalWindow.contextId = 0; }\r\n    this.id = globalWindow.contextId++;\r\n    angularConsoleLog('Context.constructor', this);\r\n  }\r\n\r\n  /**\r\n   * This is the initializer at entry-componets of modules.\r\n   * It ensures that within that module, the context has the values given by the route\r\n   */\r\n  init(route: ActivatedRoute) {\r\n    this.routeSnapshot = route && route.snapshot;\r\n    this.clearCachedValues();\r\n    this.ready = route != null;\r\n    angularConsoleLog('Context.init', this, route);\r\n  }\r\n\r\n  initRoot() {\r\n    // required, global things\r\n    this._rvt = sessionStorage.getItem(keyRequestToken);\r\n    this._zoneId = this.sessionNumber(keyZoneId);\r\n    this._tabId = this.sessionNumber(keyTabId);\r\n    this._contentBlockId = this.sessionNumber(keyContentBlockId);\r\n    this._moduleId = this.sessionNumber(keyModuleId);\r\n\r\n    if (!this._rvt || !this._zoneId || !this._tabId || !this._contentBlockId || !this._moduleId) {\r\n      throw new Error('Context is missing some of the required parameters');\r\n    }\r\n\r\n    // optional global things\r\n    this._appId = this.sessionNumber(keyAppId);\r\n\r\n    this.ready = true;\r\n    angularConsoleLog('Context.initRoot', this);\r\n  }\r\n\r\n  private sessionNumber(name: string): number {\r\n    const result = sessionStorage.getItem(name);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get a number from the route, or optionally its parents.\r\n   * Returns value in route or null\r\n   */\r\n  private routeNum(name: string): number {\r\n    // catch case where state is null, like when the recursive parent is in use\r\n    if (this.routeSnapshot == null) { return null; }\r\n\r\n    const paramName = name.substring(prefix.length);\r\n    const result = this.routeSnapshot.paramMap.get(paramName);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears cached values. Required when one module instance is opened multiple times,\r\n   * e.g. Apps Management -> App Admin for appId 2 -> back -> App Admin for appId 17.\r\n   * Module is reused, and so is context and it contains values for previous appId.\r\n   */\r\n  private clearCachedValues() {\r\n    this._zoneId = null;\r\n    this._appId = null;\r\n    this._rvt = null;\r\n    this._tabId = null;\r\n    this._contentBlockId = null;\r\n    this._moduleId = null;\r\n  }\r\n}\r\n","import { UrlMatchResult, UrlSegment } from '@angular/router';\r\nimport { EditPosParams } from './edit-matcher.models';\r\n\r\n/**\r\n * ':zoneId/:appId/edit/:items'\r\n * ':zoneId/:appId/edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * ':zoneId/:appId/edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function editRoot(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 4) { return null; }\r\n  if (url[2].path !== 'edit') { return null; }\r\n  const hasDetails = url[4] != null && url[4].path === 'details' && url[5] != null && url[6] != null;\r\n  const hasUpdate = url[4] != null && url[4].path === 'update' && url[5] != null && url[6] != null;\r\n  const posParams: EditPosParams = {\r\n    zoneId: url[0],\r\n    appId: url[1],\r\n    items: url[3],\r\n    ...(hasDetails && { detailsEntityGuid: url[5], detailsFieldId: url[6] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[5], updateFieldId: url[6] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 7 : 4),\r\n    posParams: posParams as any\r\n  };\r\n  return match;\r\n}\r\n\r\n/** ':zoneId/:appId/edit/refresh/:items' */\r\nexport function refreshEditRoot(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 5) { return null; }\r\n  if (url[2].path !== 'edit' || url[3].path !== 'refresh') { return null; }\r\n  const posParams: EditPosParams = {\r\n    zoneId: url[0],\r\n    appId: url[1],\r\n    items: url[4],\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, 5),\r\n    posParams: posParams as any\r\n  };\r\n  return match;\r\n}\r\n\r\n/**\r\n * 'edit/:items'\r\n * 'edit/:items/details/:detailsEntityGuid/:detailsFieldId'\r\n * 'edit/:items/update/:updateEntityGuid/:updateFieldId'\r\n */\r\nexport function edit(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 2) { return null; }\r\n  if (url[0].path !== 'edit') { return null; }\r\n  const hasDetails = url[2] != null && url[2].path === 'details' && url[3] != null && url[4] != null;\r\n  const hasUpdate = url[2] != null && url[2].path === 'update' && url[3] != null && url[4] != null;\r\n  const posParams: EditPosParams = {\r\n    items: url[1],\r\n    ...(hasDetails && { detailsEntityGuid: url[3], detailsFieldId: url[4] }),\r\n    ...(hasUpdate && { updateEntityGuid: url[3], updateFieldId: url[4] }),\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, (hasDetails || hasUpdate) ? 5 : 2),\r\n    posParams: posParams as any\r\n  };\r\n  return match;\r\n}\r\n\r\n/** 'edit/refresh/:items' */\r\nexport function refreshEdit(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 3) { return null; }\r\n  if (url[0].path !== 'edit' || url[1].path !== 'refresh') { return null; }\r\n  const posParams: EditPosParams = {\r\n    items: url[2],\r\n  };\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, 3),\r\n    posParams: posParams as any\r\n  };\r\n  return match;\r\n}\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport { keyDebug } from '../../../../ng-dialogs/src/app/shared/constants/session.constants';\r\nimport * as GlobalConfigurationActions from '../actions/global-configuration.actions';\r\n\r\nexport interface GlobalConfigurationState {\r\n  debugEnabled: boolean;\r\n}\r\n\r\nexport const initialState: GlobalConfigurationState = {\r\n  debugEnabled: sessionStorage.getItem(keyDebug) === 'true',\r\n};\r\n\r\nconst globalConfigurationReducer = createReducer(\r\n  initialState,\r\n  on(GlobalConfigurationActions.loadDebugEnabled, (state, { debugEnabled }) => ({ ...state, debugEnabled })),\r\n  on(GlobalConfigurationActions.toggleDebugEnabled, (state) => ({ ...state, debugEnabled: !state.debugEnabled })),\r\n);\r\n\r\nexport function reducer(state: GlobalConfigurationState | undefined, action: Action) {\r\n  return globalConfigurationReducer(state, action);\r\n}\r\n","import { ActionReducer, ActionReducerMap, MetaReducer, } from '@ngrx/store';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { environment } from '../../../../ng-dialogs/src/environments/environment';\r\nimport * as fromGlobalConfiguration from './global-configuration.reducer';\r\n\r\nexport interface EavState {\r\n  globalConfiguration: fromGlobalConfiguration.GlobalConfigurationState;\r\n}\r\n\r\n/** Console log all actions */\r\nexport function logger(reducer: ActionReducer<EavState>): ActionReducer<EavState> {\r\n  return (state: EavState, action: any): EavState => {\r\n    angularConsoleLog('[STORE] state', state);\r\n    angularConsoleLog('[STORE] action', action);\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\n/**\r\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\r\n * the root meta-reducer. To add more meta-reducers, provide an array of meta-reducers\r\n * that will be composed to form the root meta-reducer.\r\n */\r\nexport const metaReducers: MetaReducer<any>[] = !environment.production\r\n  ? [logger]\r\n  : [];\r\n\r\nexport const reducers: ActionReducerMap<EavState> = {\r\n  globalConfiguration: fromGlobalConfiguration.reducer,\r\n};\r\n","import { createSelector } from '@ngrx/store';\r\nimport { EavState } from '../reducers';\r\nimport { GlobalConfigurationState } from '../reducers/global-configuration.reducer';\r\n\r\nexport const selectGlobalConfiguration = (state: EavState) => state.globalConfiguration;\r\n\r\nexport const selectDebugEnabled = createSelector(\r\n  selectGlobalConfiguration,\r\n  (state: GlobalConfigurationState) => state.debugEnabled\r\n);\r\n","export type EavMetadataKey = 'attribute' | 'app' | 'entity' | 'contentType' | 'zone' | 'cmsObject';\r\nexport type EavKeyTypeKey = 'guid' | 'string' | 'number';\r\nexport interface EavScopeOption { name: string; value: string; }\r\n\r\nexport const eavConstants = {\r\n  metadata: {\r\n    /** metadataOfAttribute */\r\n    attribute: { type: 2, target: 'EAV Field Properties' },\r\n    /** metadataOfApp */\r\n    app: { type: 3, target: 'App' },\r\n    /** metadataOfEntity */\r\n    entity: { type: 4, target: 'Entity' },\r\n    /** metadataOfContentType */\r\n    contentType: { type: 5, target: 'ContentType' },\r\n    /** metadataOfZone */\r\n    zone: { type: 6, target: 'Zone' },\r\n    /** metadataOfCmsObject */\r\n    cmsObject: { type: 10, target: 'CmsObject' },\r\n  },\r\n\r\n  /** Loopup type for the metadata, e.g. key=80adb152-efad-4aa4-855e-74c5ef230e1f is keyType=guid */\r\n  keyTypes: {\r\n    guid: 'guid',\r\n    string: 'string',\r\n    number: 'number',\r\n  },\r\n\r\n  /** Scopes */\r\n  scopes: {\r\n    /** This is the main schema and the data you usually see is from here */\r\n    default: { name: 'Default', value: '2SexyContent' },\r\n    /** This contains content-types for configuration, settings and resources of the app */\r\n    app: { name: 'System: App', value: '2SexyContent-App' },\r\n  },\r\n\r\n  /** Content types where templates, permissions, etc. are stored */\r\n  contentTypes: {\r\n    /** Content type containing app templates (views) */\r\n    template: '2SexyContent-Template',\r\n    /** Content type containing permissions */\r\n    permissions: 'PermissionConfiguration',\r\n    /** Content type containing queries */\r\n    query: 'DataPipeline',\r\n    /** Content type containing content type metadata (app administration > data > metadata) */\r\n    contentType: 'ContentType',\r\n    /** Content type containing app settings */\r\n    settings: 'App-Settings',\r\n    /** Content type containing app resources */\r\n    resources: 'App-Resources',\r\n  },\r\n\r\n  pipelineDesigner: {\r\n    outDataSource: {\r\n      className: 'SexyContentTemplate',\r\n      in: ['ListContent', 'Default'],\r\n      name: '2sxc Target (View or API)',\r\n      description: 'The template/script which will show this data',\r\n      visualDesignerData: { Top: 20, Left: 200, Width: 700 }\r\n    },\r\n    defaultPipeline: {\r\n      dataSources: [\r\n        {\r\n          entityGuid: 'unsaved1',\r\n          partAssemblyAndType: 'ToSic.Eav.DataSources.Caches.ICache, ToSic.Eav.DataSources',\r\n          visualDesignerData: { Top: 440, Left: 440 }\r\n        }, {\r\n          entityGuid: 'unsaved2',\r\n          partAssemblyAndType: 'ToSic.Eav.DataSources.PublishingFilter, ToSic.Eav.DataSources',\r\n          visualDesignerData: { Top: 300, Left: 440 }\r\n        }, {\r\n          entityGuid: 'unsaved3',\r\n          partAssemblyAndType: 'ToSic.SexyContent.DataSources.ModuleDataSource, ToSic.SexyContent',\r\n          visualDesignerData: { Top: 170, Left: 440 }\r\n        }\r\n      ],\r\n      streamWiring: [\r\n        { From: 'unsaved1', Out: 'Default', To: 'unsaved2', In: 'Default' },\r\n        { From: 'unsaved1', Out: 'Drafts', To: 'unsaved2', In: 'Drafts' },\r\n        { From: 'unsaved1', Out: 'Published', To: 'unsaved2', In: 'Published' },\r\n        { From: 'unsaved2', Out: 'Default', To: 'unsaved3', In: 'Default' },\r\n        { From: 'unsaved3', Out: 'ListContent', To: 'Out', In: 'ListContent' },\r\n        { From: 'unsaved3', Out: 'Default', To: 'Out', In: 'Default' }\r\n      ]\r\n    },\r\n    testParameters: '[Demo:Demo]=true',\r\n  },\r\n};\r\n","import { EavFor } from '../../../../../edit/shared/models/eav';\r\nimport { eavConstants, EavMetadataKey } from '../constants/eav.constants';\r\nimport { AddItem, EditForm, EditItem, GroupItem, InnerItem } from '../models/edit-form.model';\r\n\r\nexport function convertFormToUrl(form: EditForm) {\r\n  let formUrl = '';\r\n\r\n  for (const item of form.items) {\r\n    if (formUrl) { formUrl += ','; }\r\n\r\n    if ((item as InnerItem).Parent) {\r\n      // Inner Item\r\n      const innerItem = item as InnerItem;\r\n      formUrl += 'inner:' + innerItem.EntityId + ':' + innerItem.Field\r\n        + ':' + innerItem.Parent + ':' + innerItem.Add + ':' + innerItem.Index;\r\n      if (innerItem.Prefill) {\r\n        const keys = Object.keys(innerItem.Prefill);\r\n        for (const key of keys) {\r\n          formUrl += '&prefill:' + key + '~' + paramEncode(innerItem.Prefill[key].toString());\r\n        }\r\n      }\r\n    } else if ((item as EditItem).EntityId) {\r\n      // Edit Item\r\n      const editItem = item as EditItem;\r\n      formUrl += editItem.EntityId;\r\n    } else if ((item as AddItem).ContentTypeName) {\r\n      // Add Item\r\n      const addItem = item as AddItem;\r\n      formUrl += 'new:' + addItem.ContentTypeName;\r\n\r\n      if (addItem.For?.String) {\r\n        formUrl += '&for:s~' + paramEncode(addItem.For.String) + ':' + addItem.For.Target;\r\n      } else if (addItem.For?.Number) {\r\n        formUrl += '&for:n~' + addItem.For.Number + ':' + addItem.For.Target;\r\n      } else if (addItem.For?.Guid) {\r\n        formUrl += '&for:g~' + addItem.For.Guid + ':' + addItem.For.Target;\r\n      } else if (addItem.Metadata) {\r\n        let keyType: string;\r\n        switch (addItem.Metadata.keyType.toLocaleLowerCase()) {\r\n          case eavConstants.keyTypes.string:\r\n            keyType = 's';\r\n            break;\r\n          case eavConstants.keyTypes.number:\r\n            keyType = 'n';\r\n            break;\r\n          case eavConstants.keyTypes.guid:\r\n            keyType = 'g';\r\n            break;\r\n        }\r\n        let target: string;\r\n        const metadataKeys = Object.keys(eavConstants.metadata) as EavMetadataKey[];\r\n        for (const metaKey of metadataKeys) {\r\n          if (addItem.Metadata.targetType !== eavConstants.metadata[metaKey].type) { continue; }\r\n          target = eavConstants.metadata[metaKey].target;\r\n          break;\r\n        }\r\n        formUrl += '&for:' + keyType + '~' + paramEncode(addItem.Metadata.key) + ':' + target;\r\n      }\r\n\r\n      if (addItem.Prefill) {\r\n        const keys = Object.keys(addItem.Prefill);\r\n        for (const key of keys) {\r\n          formUrl += '&prefill:' + key + '~' + paramEncode(addItem.Prefill[key].toString());\r\n        }\r\n      }\r\n\r\n      if (addItem.DuplicateEntity) {\r\n        formUrl += '&copy:' + addItem.DuplicateEntity;\r\n      }\r\n    } else if ((item as GroupItem).Group) {\r\n      // Group Item\r\n      const groupItem = item as GroupItem;\r\n      formUrl += 'group:' + groupItem.Group.Guid + ':' + groupItem.Group.Index + ':' + groupItem.Group.Part + ':' + groupItem.Group.Add;\r\n    }\r\n  }\r\n\r\n  return formUrl;\r\n}\r\n\r\nexport function convertUrlToForm(formUrl: string) {\r\n  const form: EditForm = { items: [] };\r\n  const items = formUrl.split(',');\r\n\r\n  for (const item of items) {\r\n    const isNumber = /^[0-9]*$/g;\r\n    if (item.startsWith('inner:')) {\r\n      // Inner Item\r\n      const innerItem = {} as InnerItem;\r\n      const options = item.split('&');\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('inner:')) {\r\n          const innerItemParams = item.split(':');\r\n          innerItem.EntityId = parseInt(innerItemParams[1], 10);\r\n          innerItem.Field = innerItemParams[2];\r\n          innerItem.Parent = innerItemParams[3];\r\n          innerItem.Add = innerItemParams[4] === 'true';\r\n          innerItem.Index = parseInt(innerItemParams[5], 10);\r\n        } else if (option.startsWith('prefill:')) {\r\n          if (innerItem.Prefill == null) {\r\n            innerItem.Prefill = {};\r\n          }\r\n          const prefillParams = option.split(':');\r\n          const key = prefillParams[1].split('~')[0];\r\n          const value = paramDecode(prefillParams[1].split('~')[1]);\r\n          innerItem.Prefill[key] = value;\r\n        }\r\n      }\r\n      form.items.push(innerItem);\r\n    } else if (isNumber.test(item)) {\r\n      // Edit Item\r\n      const editItem: EditItem = { EntityId: parseInt(item, 10) };\r\n      form.items.push(editItem);\r\n    } else if (item.startsWith('new:')) {\r\n      // Add Item\r\n      const addItem = {} as AddItem;\r\n      const options = item.split('&');\r\n\r\n      for (const option of options) {\r\n        if (option.startsWith('new:')) {\r\n          // Add Item ContentType\r\n          const newParams = option.split(':');\r\n          addItem.ContentTypeName = newParams[1];\r\n        } else if (option.startsWith('for:')) {\r\n          // Add Item For\r\n          addItem.For = {} as EavFor;\r\n          const forParams = option.split(':');\r\n          const forType = forParams[1].split('~')[0];\r\n          const forValue = forParams[1].split('~')[1];\r\n          const forTarget = forParams[2];\r\n\r\n          switch (forType) {\r\n            case 's':\r\n              addItem.For.String = paramDecode(forValue);\r\n              break;\r\n            case 'n':\r\n              addItem.For.Number = parseInt(forValue, 10);\r\n              break;\r\n            case 'g':\r\n              addItem.For.Guid = forValue;\r\n              break;\r\n          }\r\n          addItem.For.Target = forTarget;\r\n        } else if (option.startsWith('prefill:')) {\r\n          // Add Item Prefill\r\n          if (addItem.Prefill == null) {\r\n            addItem.Prefill = {};\r\n          }\r\n          const prefillParams = option.split(':');\r\n          const key = prefillParams[1].split('~')[0];\r\n          const value = paramDecode(prefillParams[1].split('~')[1]);\r\n          addItem.Prefill[key] = value;\r\n        } else if (option.startsWith('copy:')) {\r\n          // Add Item Copy\r\n          const copyParams = option.split(':');\r\n          addItem.DuplicateEntity = parseInt(copyParams[1], 10);\r\n        }\r\n      }\r\n      form.items.push(addItem);\r\n    } else if (item.startsWith('group:')) {\r\n      // Group Item\r\n      const groupParams = item.split(':');\r\n      const groupItem: GroupItem = {\r\n        Group: {\r\n          Guid: groupParams[1],\r\n          Index: parseInt(groupParams[2], 10),\r\n          Part: groupParams[3],\r\n          Add: groupParams[4] === 'true',\r\n        }\r\n      };\r\n      form.items.push(groupItem);\r\n    }\r\n  }\r\n\r\n  return form;\r\n}\r\n\r\n/** Encodes characters in URL parameter to not mess up routing. Don't forget to decode it! :) */\r\nfunction paramEncode(text: string) {\r\n  text = text.replace(/\\//g, '%2F');\r\n  text = text.replace(/\\:/g, '%3A');\r\n  text = text.replace(/\\&/g, '%26');\r\n  text = text.replace(/\\~/g, '%7E');\r\n  return text;\r\n}\r\n\r\n/** Decodes characters in URL parameter */\r\nfunction paramDecode(text: string) {\r\n  text = text.replace(/%2F/g, '/');\r\n  text = text.replace(/%3A/g, ':');\r\n  text = text.replace(/%26/g, '&');\r\n  text = text.replace(/%7E/g, '~');\r\n  return text;\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { GlobalConfigurationState } from '../reducers/global-configuration.reducer';\r\n\r\nexport const loadDebugEnabled = createAction(\r\n  '[GlobalConfiguration] LOAD_DEBUG_ENABLED',\r\n  props<GlobalConfigurationState>()\r\n);\r\n\r\nexport const toggleDebugEnabled = createAction('[GlobalConfiguration] TOGGLE_DEBUG_ENABLED');\r\n","import { EntityMetadataMap } from '@ngrx/data';\r\n\r\nexport const entityMetadata: EntityMetadataMap = {\r\n  Item: {\r\n    selectId: itemSelectId,\r\n  },\r\n  Feature: {},\r\n  Language: {\r\n    selectId: languageSelectId,\r\n  },\r\n  LanguageInstance: {\r\n    selectId: languageInstanceSelectId,\r\n  },\r\n  ContentType: {\r\n    selectId: contentTypeSelectId,\r\n  },\r\n  ContentTypeItem: {\r\n    selectId: contentTypeItemSelectId,\r\n  },\r\n  InputType: {\r\n    selectId: InputTypeSelectId,\r\n  },\r\n};\r\n\r\nexport const pluralNames = {\r\n  Feature: 'Features', // example\r\n};\r\n\r\nexport const entityConfig = {\r\n  entityMetadata,\r\n  pluralNames,\r\n};\r\n\r\nexport function itemSelectId<T extends { entity: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.entity.guid;\r\n}\r\n\r\nexport function languageSelectId<T extends { key: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.key;\r\n}\r\n\r\nexport function languageInstanceSelectId<T extends { formId: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.formId;\r\n}\r\n\r\nexport function contentTypeSelectId<T extends { contentType: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.contentType.id;\r\n}\r\n\r\nexport function contentTypeItemSelectId<T extends { guid: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.guid;\r\n}\r\n\r\nexport function InputTypeSelectId<T extends { Type: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.Type;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { editRoot, refreshEditRoot } from '../../../edit/edit.matcher';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: ':zoneId/apps',\r\n    loadChildren: () => import('./apps-management/apps-management.module').then(m => m.AppsManagementModule),\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/import',\r\n    loadChildren: () => import('./import-app/import-app.module').then(m => m.ImportAppModule),\r\n    data: { title: 'Import App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/app',\r\n    loadChildren: () => import('./app-administration/app-administration.module').then(m => m.AppAdministrationModule),\r\n    data: { title: 'App' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/code',\r\n    loadChildren: () => import('./code-editor/code-editor.module').then(m => m.CodeEditorModule),\r\n    data: { title: 'Code Editor' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/query/:pipelineId',\r\n    loadChildren: () => import('./visual-query/visual-query.module').then(m => m.VisualQueryModule),\r\n    data: { title: 'Visual Query' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/replace',\r\n    loadChildren: () => import('./replace-content/replace-content.module').then(m => m.ReplaceContentModule),\r\n    data: { title: 'Apps' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/reorder',\r\n    loadChildren: () => import('./manage-content-list/manage-content-list.module').then(m => m.ManageContentListModule),\r\n    data: { title: 'Reorder Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/items/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-items/content-items.module').then(m => m.ContentItemsModule),\r\n    data: { title: 'Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/fields/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule),\r\n    data: { title: 'Fields' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/versions/:itemId',\r\n    loadChildren: () => import('./item-history/item-history.module').then(m => m.ItemHistoryModule),\r\n  },\r\n  {\r\n    matcher: editRoot,\r\n    loadChildren: () => import('../../../edit/edit.module').then(m => m.EditModule),\r\n    data: { title: 'Edit Item' },\r\n  },\r\n  {\r\n    matcher: refreshEditRoot,\r\n    loadChildren: () => import('../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n  },\r\n  // routes below are not linked directly from the initializer and are used for testing\r\n  // to make sure each module contains enough data to be self sustainable\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule),\r\n    data: { title: 'Export Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName/:selectedIds',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule),\r\n    data: { title: 'Export Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/import/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-import/content-import.module').then(m => m.ContentImportModule),\r\n    data: { title: 'Import Items' },\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/permissions/:type/:keyType/:key',\r\n    loadChildren: () => import('./permissions/permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Context as DnnContext, DnnAppComponent } from '@2sic.com/dnn-sxc-angular';\r\nimport { ChangeDetectionStrategy, Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { keyContentBlockId, keyModuleId } from './shared/constants/session.constants';\r\nimport { Context } from './shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppComponent extends DnnAppComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    dnnContext: DnnContext,\r\n    private context: Context,\r\n    private titleService: Title,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private matIconRegistry: MatIconRegistry,\r\n  ) {\r\n    super(\r\n      el,\r\n      dnnContext.preConfigure({\r\n        moduleId: parseInt(sessionStorage.getItem(keyModuleId), 10),\r\n        contentBlockId: parseInt(sessionStorage.getItem(keyContentBlockId), 10),\r\n      }),\r\n    );\r\n    this.context.initRoot();\r\n    this.matIconRegistry.setDefaultFontSetClass('material-icons-outlined');\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Mostly copied from https://blog.bitsrc.io/dynamic-page-titles-in-angular-98ce20b5c334\r\n    // Routes need a data: { title: '...' } for this to work\r\n    const appTitle = this.titleService.getTitle(); // initial title when loading the page\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map(() => {\r\n          let child = this.activatedRoute.firstChild;\r\n          while (child.firstChild) {\r\n            child = child.firstChild;\r\n          }\r\n          if (child.snapshot.data['title']) {\r\n            return child.snapshot.data['title'];\r\n          }\r\n          return appTitle;\r\n        }),\r\n      ).subscribe((title: string) => {\r\n        this.titleService.setTitle(title);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { JsInfo, SxcRoot } from '@2sic.com/2sxc-typings';\r\nimport { Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UrlHelper } from '../../../edit/shared/helpers/url-helper';\r\nimport { DialogTypeConstants } from './shared/constants/dialog-types.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyApi, keyAppId, keyContentType, keyDialog, keyItems, keyPipelineId, keyPortalRoot, keyRequestToken, keyTabId, keyUrl, keyZoneId, prefix } from './shared/constants/session.constants';\r\nimport { convertFormToUrl } from './shared/helpers/url-prep.helper';\r\nimport { EditForm, EditItem, GroupItem } from './shared/models/edit-form.model';\r\n\r\ndeclare const $2sxc: SxcRoot;\r\n\r\nexport function paramsInitFactory(injector: Injector) {\r\n  return () => {\r\n    console.log('Setting parameters config and clearing route');\r\n    const eavKeys = Object.keys(sessionStorage).filter(key => key.startsWith(prefix));\r\n    const isParamsRoute = !window.location.hash.startsWith('#/');\r\n    if (isParamsRoute) {\r\n      console.log('Initial route:', window.location.href);\r\n      // clear our part of the session\r\n      for (const key of eavKeys) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n      sessionStorage.setItem(keyUrl, window.location.href); // save url which opened the dialog\r\n      sessionStorage.setItem(keyDialog, DialogTypeConstants.Edit); // set edit dialog as the default\r\n\r\n      // save params\r\n      const urlHash = window.location.hash.substring(1); // substring removes first # char\r\n      const queryParametersFromUrl = UrlHelper.readQueryStringParameters(urlHash);\r\n      const paramKeys = Object.keys(queryParametersFromUrl);\r\n      for (const key of paramKeys) {\r\n        const value = queryParametersFromUrl[key];\r\n        if (value == null) { continue; }\r\n        sessionStorage.setItem(prefix + key, value);\r\n      }\r\n\r\n      // redirect\r\n      const router = injector.get(Router);\r\n      const zoneId = sessionStorage.getItem(keyZoneId);\r\n      const appId = sessionStorage.getItem(keyAppId);\r\n      const dialog = sessionStorage.getItem(keyDialog);\r\n      const contentType = sessionStorage.getItem(keyContentType);\r\n      const items = sessionStorage.getItem(keyItems);\r\n      switch (dialog) {\r\n        case DialogTypeConstants.Zone:\r\n          router.navigate([`${zoneId}/apps`]);\r\n          break;\r\n        case DialogTypeConstants.AppImport:\r\n          router.navigate([`${zoneId}/import`]);\r\n          break;\r\n        case DialogTypeConstants.App:\r\n          router.navigate([`${zoneId}/${appId}/app`]);\r\n          break;\r\n        case DialogTypeConstants.ContentType:\r\n          router.navigate([`${zoneId}/${appId}/fields/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.ContentItems:\r\n          router.navigate([`${zoneId}/${appId}/items/${contentType}`]);\r\n          break;\r\n        case DialogTypeConstants.Edit:\r\n          const editItems: EditItem[] = JSON.parse(items);\r\n          const form: EditForm = { items: editItems };\r\n          const formUrl = convertFormToUrl(form);\r\n          router.navigate([`${zoneId}/${appId}/edit/${formUrl}`]);\r\n          break;\r\n        case DialogTypeConstants.ItemHistory:\r\n          const historyItems: EditItem[] = JSON.parse(items);\r\n          router.navigate([`${zoneId}/${appId}/versions/${historyItems[0].EntityId}`]);\r\n          break;\r\n        case DialogTypeConstants.Develop:\r\n          router.navigate([`${zoneId}/${appId}/code`]);\r\n          break;\r\n        case DialogTypeConstants.PipelineDesigner:\r\n          const pipelineId = sessionStorage.getItem(keyPipelineId);\r\n          router.navigate([`${zoneId}/${appId}/query/${pipelineId}`]);\r\n          break;\r\n        case DialogTypeConstants.Replace:\r\n          const replaceItems: GroupItem[] = JSON.parse(items);\r\n          const rGuid = replaceItems[0].Group.Guid;\r\n          const rPart = replaceItems[0].Group.Part;\r\n          const rIndex = replaceItems[0].Group.Index;\r\n          const add = replaceItems[0].Group.Add;\r\n          const queryParams = add ? { add: true } : {};\r\n          router.navigate([`${zoneId}/${appId}/${rGuid}/${rPart}/${rIndex}/replace`], { queryParams });\r\n          break;\r\n        case DialogTypeConstants.InstanceList:\r\n          const groupItems: GroupItem[] = JSON.parse(items);\r\n          const gGuid = groupItems[0].Group.Guid;\r\n          const gPart = groupItems[0].Group.Part;\r\n          const gIndex = groupItems[0].Group.Index;\r\n          router.navigate([`${zoneId}/${appId}/${gGuid}/${gPart}/${gIndex}/reorder`]);\r\n          break;\r\n        default:\r\n          alert(`Cannot open unknown dialog \"${dialog}\"`);\r\n          try {\r\n            (window.parent as any).$2sxc.totalPopup.close();\r\n          } catch (error) { }\r\n      }\r\n    } else if (eavKeys.length === 0) {\r\n      // if not params route and no params are saved, e.g. browser was reopened, throw error\r\n      alert('Missing required url parameters. Please reopen dialog.');\r\n      throw new Error('Missing required url parameters. Please reopen dialog.');\r\n    } else {\r\n      console.log('Initial route:', sessionStorage.getItem(keyUrl));\r\n    }\r\n\r\n    loadEnvironment();\r\n  };\r\n}\r\n\r\nfunction loadEnvironment() {\r\n  $2sxc.env.load({\r\n    page: parseInt(sessionStorage.getItem(keyTabId), 10),\r\n    rvt: sessionStorage.getItem(keyRequestToken),\r\n    root: sessionStorage.getItem(keyPortalRoot),\r\n    api: sessionStorage.getItem(keyApi),\r\n  } as any as JsInfo);\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HandleErrorsInterceptor implements HttpInterceptor {\r\n  /** URLs excluded from detailed error alert  */\r\n  private excludedUrls = [\r\n    'dist/ng-edit/i18n',\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (!this.checkIfExcluded(error.url)) {\r\n          this.showDetailedHttpError(error);\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private checkIfExcluded(url: string) {\r\n    for (const excludedUrl of this.excludedUrls) {\r\n      if (url.includes(excludedUrl)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private showDetailedHttpError(error: HttpErrorResponse) {\r\n    let infoText = 'Had an error talking to the server (status ' + error.status + ').';\r\n    const srvResp = error.error;\r\n    if (srvResp) {\r\n      const msg = srvResp.Message;\r\n      if (msg) { infoText += '\\nMessage: ' + msg; }\r\n      const msgDet = srvResp.MessageDetail || srvResp.ExceptionMessage;\r\n      if (msgDet) { infoText += '\\nDetail: ' + msgDet; }\r\n\r\n      if (msgDet && msgDet.indexOf('No action was found') === 0) {\r\n        if (msgDet.indexOf('that matches the name') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: you probably got the action-name wrong in your JS.';\r\n        } else if (msgDet.indexOf('that matches the request.') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: Seems like the parameters are the wrong amount or type.';\r\n        }\r\n      }\r\n\r\n      if (msg && msg.indexOf('Controller') === 0 && msg.indexOf('not found') > 0) {\r\n        infoText += '\\n\\nTip from 2sxc: you probably spelled the controller name wrong or forgot to remove the word \\'controller\\' from the call in JS. To call a controller called \\'DemoController\\' only use \\'Demo\\'.';\r\n      }\r\n      infoText += '\\n\\nif you are an advanced user you can learn more about what went wrong - discover how on 2sxc.org/help?tag=debug';\r\n    }\r\n\r\n    alert(infoText);\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SetHeadersInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let modified: HttpRequest<any>;\r\n    if (req.body instanceof FormData) {\r\n      // sending files. Do not set content type so browser can add delimiter boundary automatically\r\n      return next.handle(req);\r\n    } else {\r\n      modified = req.clone({\r\n        setHeaders: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n        }\r\n      });\r\n      return next.handle(modified);\r\n    }\r\n  }\r\n}\r\n","import { DnnInterceptor } from '@2sic.com/dnn-sxc-angular';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { EntityDataModule } from '@ngrx/data';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { metaReducers, reducers } from '../../../edit/shared/store';\r\nimport { entityConfig } from '../../../edit/shared/store/ngrx-data/entity-metadata';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { paramsInitFactory } from './params-init.factory';\r\nimport { HandleErrorsInterceptor } from './shared/interceptors/handle-errors.interceptor';\r\nimport { SetHeadersInterceptor } from './shared/interceptors/set-headers.interceptor';\r\nimport { Context } from './shared/services/context';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    StoreModule.forRoot(reducers, { metaReducers, runtimeChecks: { strictStateImmutability: true, strictActionImmutability: true } }),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    EntityDataModule.forRoot(entityConfig),\r\n    TranslateModule.forRoot(),\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    { provide: APP_INITIALIZER, useFactory: paramsInitFactory, deps: [Injector], multi: true },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    DnnInterceptor,\r\n    { provide: HTTP_INTERCEPTORS, useClass: SetHeadersInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HandleErrorsInterceptor, multi: true },\r\n    Context,\r\n    Title\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}