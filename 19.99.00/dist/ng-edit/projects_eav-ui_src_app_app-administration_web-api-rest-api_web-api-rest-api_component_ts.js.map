{"version":3,"file":"projects_eav-ui_src_app_app-administration_web-api-rest-api_web-api-rest-api_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/web-api-rest-api/web-api-rest-api.component.ts","./projects/eav-ui/src/app/app-administration/web-api-rest-api/web-api-rest-api.component.html","./projects/eav-ui/src/app/code-editor/services/source.service.ts"],"sourcesContent":["import { Component, computed, effect, inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../../../../core';\r\nimport { SourceService } from '../../code-editor/services/source.service';\r\nimport { classLog } from '../../shared/logging';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  webApisTypes: true,\r\n  syncUrl: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-web-api-rest-api',\r\n    imports: [\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        ReactiveFormsModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n    ],\r\n    templateUrl: './web-api-rest-api.component.html'\r\n})\r\nexport class WebApiRestApiComponent {\r\n  log = classLog({ WebApiRestApiComponent }, logSpecs);\r\n  #sourceSvc = transient(SourceService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  #formBuilder = inject(FormBuilder);\r\n\r\n  constructor() {\r\n    // Update form if the url changes and the item is found\r\n    effect(() => {\r\n      const l = this.log.fnIf('syncUrl');\r\n      const webApis = this.webApisTypes();\r\n      if (webApis.length === 0)\r\n        return l.end();\r\n      const urlPath = this.#dialogRouter.urlSegments.at(-1);\r\n\r\n      var encodedUrlPath = urlPath.replace(/%252F/g, \"/\");\r\n\r\n      const webApi = webApis.find(w => w.path === encodedUrlPath);\r\n      l.a('status:', { webApis, webApi, urlPath, encodedUrlPath });\r\n      if (webApi)\r\n        this.webApiTypeForm.get('webApiType').setValue(webApi.path);\r\n      l.end();\r\n    });\r\n  }\r\n\r\n  #getAllWebApis = this.#sourceSvc.getWebApisSig();\r\n\r\n  webApisTypes = computed(() => {\r\n    const webApis = this.#getAllWebApis();\r\n    return webApis;\r\n  });\r\n\r\n  webApiTypeForm: FormGroup = this.#formBuilder.group({\r\n    webApiType: ['']\r\n  });\r\n\r\n  openRestApi(apiRoute: string): void {\r\n    if (!apiRoute) return;\r\n    this.#dialogRouter.navRelative([encodeURIComponent(apiRoute)]);\r\n  }\r\n}\r\n","<form [formGroup]=\"webApiTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Endpoint</mat-label>\r\n    <mat-select formControlName=\"webApiType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (webApisTypes()) {\r\n        @for (endpoint of webApisTypes().sort(); track endpoint) {\r\n          <mat-option [value]=\"endpoint.path\">\r\n            {{ endpoint.name }}\r\n          </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n","import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { ViewOrFileIdentifier } from '../../shared/models/edit-form.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst apiExplorerAppApiFiles = 'admin/ApiExplorer/AppApiFiles';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService extends HttpServiceBase {\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]): Observable<SourceView> {\r\n    return this.getHttpApiUrl<SourceView>(appFilesAsset, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  // TODO: For Code Editor,\r\n  // getSig(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[], initial: undefined): Signal<SourceView> {\r\n  //   // Signal für die SourceView erstellen\r\n  //   const temp = this.getSignal<SourceView>(appFilesAsset, {\r\n  //     params: {\r\n  //       appId: this.appId,\r\n  //       global,\r\n  //       ...this.templateIdOrPath(viewKey, global, urlItems),\r\n  //     },\r\n  //   }, initial);\r\n  //   return computed(() => {\r\n  //     const result = temp();\r\n\r\n  //     if (result && result.Type.toLocaleLowerCase() === 'auto') {\r\n  //       switch (result.Extension.toLocaleLowerCase()) {\r\n  //         case '.cs':\r\n  //         case '.cshtml':\r\n  //           result.Type = 'Razor';\r\n  //           break;\r\n  //         case '.html':\r\n  //         case '.css':\r\n  //         case '.js':\r\n  //           result.Type = 'Token';\r\n  //           break;\r\n  //       }\r\n  //     }\r\n\r\n  //     return result;\r\n  //   });\r\n  // }\r\n\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: ViewOrFileIdentifier[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(mask?: string): Observable<FileAsset[]> {\r\n    return this.getHttpApiUrl<{ Files: FileAsset[] }>(appFilesAll, {\r\n      params: {\r\n        appId: this.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.getHttpApiUrl<{ files: WebApi[] }>(apiExplorerAppApiFiles, {\r\n      params: {\r\n        appId: this.appId,\r\n      },\r\n    }).pipe(\r\n      map(({ files }) => {\r\n        files.forEach(file => {\r\n          file.isShared ??= false;\r\n          file.isCompiled ??= false;\r\n        });\r\n        return files;\r\n      }),\r\n    ).pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.path.lastIndexOf('/');\r\n          const fileExtIndex = file.path.lastIndexOf('.');\r\n          const folder = file.path.substring(0, splitIndex);\r\n          const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.path, folder, name, isShared: file.isShared, endpointPath: file.endpointPath, isCompiled: file.isCompiled, edition: file.edition };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApisSig(): Signal<WebApi[]> {\r\n    // Get the signal that retrieves the API files\r\n    const apiFilesSignal = this.getSignal<{ files: WebApi[] }>(apiExplorerAppApiFiles, {\r\n      params: {\r\n        appId: this.appId,\r\n      },\r\n    });\r\n\r\n    // Use a computed signal to transform the data\r\n    const webApisSignal = computed(() => {\r\n      const files = apiFilesSignal()?.files;\r\n\r\n      if(!files)\r\n        return [];\r\n\r\n      // Ensure the default values for `isShared` and `isCompiled`\r\n      files.forEach(file => {\r\n        file.isShared ??= false;\r\n        file.isCompiled ??= false;\r\n      });\r\n\r\n      // Map the files to the desired WebApi format\r\n      return files.map(file => {\r\n        const splitIndex = file.path.lastIndexOf('/');\r\n        const fileExtIndex = file.path.lastIndexOf('.');\r\n        const folder = file.path.substring(0, splitIndex);\r\n        const name = file.path.substring(splitIndex + 1, fileExtIndex);\r\n\r\n        return {\r\n          path: file.path,\r\n          folder,\r\n          name,\r\n          isShared: file.isShared,\r\n          endpointPath: file.endpointPath,\r\n          isCompiled: file.isCompiled,\r\n          edition: file.edition,\r\n        } as WebApi;\r\n      });\r\n    });\r\n\r\n    return webApisSignal;\r\n  }\r\n\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.getHttpApiUrl<WebApiDetails>(apiExplorerInspect, {\r\n      params: { appId: this.appId, zoneId: this.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.getHttpApiUrl<PredefinedTemplatesResponse>(appFilesPredefinedTemplates, {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.getHttpApiUrl<Preview>(appFilesPreview, {\r\n      params: {\r\n        appId: this.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n"],"names":["computed","effect","inject","FormBuilder","ReactiveFormsModule","MatButtonModule","MatCardModule","MatIconModule","MatSelectModule","RouterOutlet","transient","SourceService","classLog","SxcGridModule","DialogRoutingService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","endpoint_r1","path","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵrepeaterCreate","WebApiRestApiComponent_Conditional_5_For_1_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","ctx_r1","webApisTypes","sort","logSpecs","all","syncUrl","WebApiRestApiComponent","sourceSvc","dialogRouter","formBuilder","constructor","log","getAllWebApis","getWebApisSig","webApis","webApiTypeForm","group","webApiType","l","fnIf","length","end","urlPath","urlSegments","at","encodedUrlPath","replace","webApi","find","w","a","get","setValue","openRestApi","apiRoute","navRelative","encodeURIComponent","selectors","decls","vars","consts","template","WebApiRestApiComponent_Template","rf","ctx","ɵɵlistener","WebApiRestApiComponent_Template_mat_select_valueChange_4_listener","$event","ɵɵtemplate","WebApiRestApiComponent_Conditional_5_Template","ɵɵelement","ɵɵconditional","i1","MatFormField","MatLabel","i2","MatSelect","i3","MatOption","i4","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation","Signal","map","HttpServiceBase","appFilesAll","appFilesAsset","appFilesCreate","apiExplorerInspect","apiExplorerAppApiFiles","appFilesPredefinedTemplates","appFilesPreview","viewKey","global","urlItems","getHttpApiUrl","params","appId","templateIdOrPath","pipe","view","Type","toLocaleLowerCase","Extension","save","http","post","apiUrl","getAll","mask","Files","forEach","file","Shared","getWebApis","files","isShared","isCompiled","splitIndex","lastIndexOf","fileExtIndex","folder","substring","endpointPath","edition","apiFilesSignal","getSignal","webApisSignal","getWebApiDetails","apiPath","zoneId","getPredefinedTemplates","purpose","type","getPreview","templateKey","create","test","i","EntityId","toString","IsShared","Path","templateId","__ngFactoryType__","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}