{"version":3,"file":"default-projects_eav-ui_src_app_dev-rest_query_query_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/dev-rest/query/introduction/introduction.component.ts","./projects/eav-ui/src/app/dev-rest/query/introduction/introduction.component.html","./projects/eav-ui/src/app/dev-rest/tab-permissions/tab-permissions.component.ts","./projects/eav-ui/src/app/dev-rest/tab-permissions/tab-permissions.component.html","./projects/eav-ui/src/app/dev-rest/query/query-samples.ts","./projects/eav-ui/src/app/dev-rest/query/query.component.ts","./projects/eav-ui/src/app/dev-rest/query/query.component.html"],"sourcesContent":["import { Component, input, OnInit } from '@angular/core';\r\nimport { AllScenarios, DevRestBaseModel } from '../..';\r\n\r\n@Component({\r\n  selector: 'app-dev-query-introduction',\r\n  templateUrl: './introduction.component.html',\r\n})\r\nexport class DevRestQueryIntroductionComponent implements OnInit {\r\n  data = input<DevRestBaseModel>();\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","<p>\r\n  To learn more about queries you may want to read these <a href=\"https://docs.2sxc.org/index.html\" target=\"_blank\">docs</a>:\r\n</p>\r\n<ul>\r\n  <li><a href=\"https://docs.2sxc.org/basics/query/index.html\" target=\"_blank\">Queries in 2sxc</a></li>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/query-rest-web-api.html\" target=\"_blank\">Query REST API</a></li>\r\n</ul>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { DevRestBaseModel } from '..';\r\nimport { transient } from '../../../../../core';\r\nimport { GoToPermissions } from '../../permissions/go-to-permissions';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-tab-permissions',\r\n    templateUrl: './tab-permissions.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        TippyDirective,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n        SxcGridModule,\r\n    ]\r\n})\r\nexport class DevRestTabPermissionsComponent {\r\n  data = input<DevRestBaseModel>();\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  openPermissions() {\r\n    this.#dialogRouter.navRelative([GoToPermissions.getUrlContentType(this.data().permissionTarget)]);\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          field: 'Grant',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<h3>Permissions ({{ data().permissions.length }})</h3>\r\n<p>\r\n  This target <code>{{ data().name }}</code> has {{ data().permissions.length }} permissions\r\n  configured.\r\n  <button mat-icon-button tippy=\"Open permissions\" (click)=\"openPermissions()\">\r\n    @if (data().permissions.length) {\r\n      <mat-icon [matBadge]=\"data().permissions.length\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n        matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n        person\r\n      </mat-icon>\r\n    }\r\n    @if (!data().permissions.length) {\r\n      <mat-icon>person</mat-icon>\r\n    }\r\n  </button>\r\n</p>\r\n@if (!data().permissions.length) {\r\n  <p class=\"warning info-box\">\r\n    <mat-icon>warning</mat-icon>\r\n    Warning: you don't have any permissions configured. So only Super-Users (Host) will be able to use the API\r\n    endpoints.\r\n  </p>\r\n}\r\n\r\n<ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data().permissions\" [gridOptions]=\"gridOptions\"\r\n  [style.height]=\"(33 + data().permissions.length * 48) + 'px'\">\r\n</ag-grid-angular>\r\n\r\n<h4>Super-Users (Host) can use all Endpoints</h4>\r\n<p>\r\n  As a super-user you can always access these REST endpoints, so this will make development easy.\r\n  Just remember to change the content-type permissions when you publish your work to public pages.\r\n</p>\r\n\r\n<h4>Set permissions for visitors to use this</h4>\r\n<p>\r\n  To let JavaScript access the REST endpoints for normal users, you must set the permissions of the\r\n  content-type.\r\n  Usually you will just want to set it like <em>if user has view-permissions, let him read this\r\n    content-type</em>.\r\n  In rare cases (eg. JS based forms) you may also want to give it some write permissions. Just be careful.\r\n  If you give write permissions, you will usually <em>only</em> want to give create, but not edit.\r\n</p>\r\n\r\n<h4>Setting permissions for use outside of DNN</h4>\r\n<p>\r\n  When calling API endpoints from a DNN page you will usually use the <code>$2sxc</code> or the DNN\r\n  Services-Framework.\r\n  These automatically add some HTTP-Headers (see tab about HTTP Headers) which let DNN determine that the\r\n  API-Call\r\n  was made on a specific page/module - and DNN uses this to check the permissions.\r\n</p>\r\n<p>\r\n  IF you are calling the endpoint from outside of DNN then these headers will be missing.\r\n  Because of this, permissions saying \"If has VIEW permissions, allow read\" will fail - because DNN cannot\r\n  determine\r\n  if the user has view permissions.\r\n</p>\r\n<p>\r\n  So to enable use from external, the condition must be \"If has ANONYMOUS permissions, allow ...\".\r\n  Because the ANONYMOUS check passes even if DNN doesn't know what page the module is on.\r\n</p>\r\n","import { SxcGlobal } from '@2sic.com/2sxc-typings';\r\nimport { ApiCall, CodeSample, hint$2sxc, Scenario, warningExternal } from '..';\r\nimport { Context } from '../../shared/services/context';\r\n// tslint:disable: curly\r\n\r\nexport function generateQueryCalls($2sxc: SxcGlobal, scenario: Scenario, context: Context, root: string, id: number,\r\n  streamNames: string, urlParams: string) {\r\n  const virtual = root[0] !== '/' && !root.startsWith('http');\r\n\r\n  // if urlParams exist and it doesn't starts with a ?, add that\r\n  if (urlParams && urlParams.length && urlParams[0] !== '?')\r\n    urlParams = '?' + urlParams;\r\n\r\n  const contextParams = virtual\r\n    ? `${urlParams}${urlParams ? '&' : '?'}PageId=${context.tabId}&ModuleId=${context.moduleId}`\r\n    : '';\r\n  const directUrl = $2sxc.http.apiUrl(root) + contextParams;\r\n  // const directWId = $2sxc.http.apiUrl(withId) + contextParams;\r\n  const pathWithParams = root + urlParams;\r\n  const pathWithStream = `${root}/${streamNames ?? 'Default'}${urlParams}`;\r\n\r\n  return [\r\n    new ApiCall(virtual, 'GET', pathWithParams, 'read all query streams', 'Read list of all items', true,\r\n      snippetsGet(scenario, pathWithParams, context), directUrl),\r\n\r\n    new ApiCall(virtual, 'GET', pathWithStream, 'read only Stream Default', 'Read list of all items', true,\r\n      snippetsGet(scenario, pathWithStream, context), directUrl),\r\n\r\n    // #todoquery 2dm\r\n    // 1. later sample with IDs\r\n    // 1. later maybe sample with guids, but not certain because it's kind of an unexpected opening\r\n  ];\r\n}\r\n\r\nfunction snippetsGet(scenario: Scenario, path: string, context: Context, streamNames?: string): CodeSample[] {\r\n  const moduleId = context.moduleId;\r\n  const virtual = path[0] !== '/';\r\n  const list: CodeSample[] = [];\r\n  const pathWithContext = `${path}?PageId=${context.tabId}&ModuleId=${moduleId}`;\r\n\r\n  if (scenario.inSameContext)\r\n    list.push(new CodeSample('Example with global $2sxc and event-context',\r\n      'This example finds the context information from the HTML where an action started.',\r\n      `\r\n<button onclick=\"$2sxc(this).webApi.get('${path}').then(data => console.log(data))\">\r\n  get it\r\n</button>`, false, [hint$2sxc]));\r\n\r\n  if (scenario.in2sxc)\r\n    list.push(new CodeSample(`Example with global $2sxc and a Module-Id ${moduleId}`,\r\n      `This is how you get the context when your code doesn't start with a DOM context, so you need the moduleId.`,\r\n      `\r\n// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n// now get the data in the promise\r\nsxc.webApi.get('${path}')\r\n  .then(data => {\r\n    console.log(data)\r\n  });`,\r\n      false, [hint$2sxc]),\r\n      new CodeSample(`Same example as one-liner`,\r\n        'This is the same as above, but as a one-liner so you can run it directly in the F12 console right now.',\r\n        `$2sxc(${moduleId}).webApi.get('${path}').then(data => console.log('just got:', data));`, true));\r\n\r\n  if (scenario.in2sxc && scenario.inSameContext)\r\n    list.push(new CodeSample('Example where you get the Module-Id from Razor',\r\n      `This example doesn't use a fixed moduleId but let's the Razor add the current moduleId when the page is rendered.`,\r\n      `\r\n// this will be replaced on the server with the ID\r\nvar moduleId = @Dnn.Module.ModuleID;\r\nvar sxc = $2sxc(moduleId);\r\nvar promise = sxc.webApi.get('${path}');`, false, [hint$2sxc]));\r\n\r\n  // jquery examples, they differ based on the scenario\r\n  const endPointGetter = virtual ? `$2sxc.http.apiUrl('${path}')` : `'${path}'`;\r\n  const endPointGetWithParams = virtual ? `$2sxc.http.apiUrl('${pathWithContext}')` : `'${pathWithContext}'`;\r\n  if (scenario.inSameSite) {\r\n    // jQuery using setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery inside DNN',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      It shows you how to resolve the virtual path for use in other ways.`,\r\n      `\r\nvar endpoint = ${endPointGetter};\r\n$.ajax({\r\n  url:endpoint,\r\n  beforeSend: $.dnnSF(${moduleId}).setModuleHeaders\r\n}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner\r\n    list.push(new CodeSample('Using jQuery as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will only work if you're on a DNN page with this module.`,\r\n      `$.ajax({url: ${endPointGetter}, beforeSend: $.dnnSF(${moduleId}).setModuleHeaders }).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n    // jQuery without setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery and add Context in URL',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      But instead of using the DNN Services Framework it adds relevant headers to the url.`,\r\n      `\r\n$.ajax(${endPointGetWithParams}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner without SetModuleHeaders\r\n    list.push(new CodeSample('Using jQuery with url-context as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will work on a DNN page which has jQuery activated. `,\r\n      `$.ajax(${endPointGetWithParams}).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n  } else {\r\n    // jQuery External\r\n    list.push(new CodeSample('Using jQuery in another Site or External',\r\n      `This example uses jQuery and doesn't use $2sxc or the DNN ServicesFramework,\r\n      because they would be either missing, or give wrong context-headers.`,\r\n      `\r\n$.ajax('${path}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n\r\n    // jQuery External with Context\r\n    list.push(new CodeSample('Using jQuery with Context in URL',\r\n      `This example uses jQuery and includes a module-context. This is unusual for external access, but may be needed sometime.`,\r\n      `\r\n$.ajax('${pathWithContext}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n  }\r\n  // return generated snippets\r\n  return list;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { Component, HostBinding, OnDestroy } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, share } from 'rxjs';\r\nimport { GoToDevRest } from '..';\r\nimport { transient } from '../../../../../core';\r\nimport { PipelinesService } from '../../app-administration/services';\r\nimport { PermissionsService } from '../../permissions';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DevRestBase } from '../dev-rest-base.component';\r\nimport { DevRestUrlsAndCodeComponent } from '../dev-rest-urls-and-code/dev-rest-urls-and-code.component';\r\nimport { SelectorWithHelpComponent } from '../selector-with-help/selector-with-help.component';\r\nimport { DevRestTabExamplesComponent } from '../tab-examples/tab-examples.component';\r\nimport { DevRestHttpHeadersComponent } from '../tab-headers/tab-headers.component';\r\nimport { DevRestTabIntroductionComponent } from '../tab-introduction/tab-introduction.component';\r\nimport { DevRestTabPermissionsComponent } from '../tab-permissions/tab-permissions.component';\r\nimport { DevRestQueryIntroductionComponent } from './introduction/introduction.component';\r\nimport { generateQueryCalls } from './query-samples';\r\nimport { DevRestQueryModel } from './query-template-vars';\r\n\r\nconst pathToQuery = 'app/{appname}/query/{queryname}';\r\n@Component({\r\n    selector: 'app-dev-rest-query',\r\n    templateUrl: './query.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        TippyDirective,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        SelectorWithHelpComponent,\r\n        MatTabsModule,\r\n        DevRestQueryIntroductionComponent,\r\n        DevRestTabIntroductionComponent,\r\n        DevRestTabExamplesComponent,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        DevRestUrlsAndCodeComponent,\r\n        DevRestTabPermissionsComponent,\r\n        DevRestHttpHeadersComponent,\r\n        AsyncPipe,\r\n    ]\r\n})\r\nexport class DevRestQueryComponent extends DevRestBase<DevRestQueryModel> implements OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  /** Test values for url params */\r\n  urlParams$ = new BehaviorSubject<string>('');\r\n\r\n  /** Test values for stream names */\r\n  streamNames$ = new BehaviorSubject<string>('Default');\r\n\r\n  /** This is necessary, because the Query-Rest can still be opened from the Visual-Query as a dialog */\r\n  isSideNavContent: boolean;\r\n\r\n  private pipelinesService = transient(PipelinesService);\r\n\r\n  // TODO: @2dg Offen ViewModel\r\n\r\n  constructor(\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    context: Context,\r\n    dialog: MatDialogRef<DevRestQueryComponent>,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    dnnContext: DnnContext,\r\n  ) {\r\n    const permissionsService = transient(PermissionsService);\r\n\r\n    super(context, dialog, dnnContext, router, route, permissionsService);\r\n\r\n    this.isSideNavContent = this.router.url.includes(GoToDevRest.routeQuery);\r\n\r\n    // build Query Stream\r\n    const query$ = combineLatest([\r\n      route.paramMap.pipe(map(pm => pm.get(GoToDevRest.paramQuery))),\r\n      this.pipelinesService.getAll(eavConstants.contentTypes.query).pipe(share()),\r\n    ]).pipe(\r\n      map(([queryGuid, all]) => all.find(q => q.Guid === queryGuid)),\r\n      share()\r\n    );\r\n\r\n    this.permissions$ = this.buildPermissionStream(GoToDevRest.paramQuery);\r\n\r\n    // Build Root Stream (for the root folder)\r\n    const root$ = combineLatest([query$, this.scenario$, this.dialogSettings$]).pipe(\r\n      map(([query, scenario, dialogSettings]) => {\r\n        const resolved = pathToQuery\r\n          .replace('{queryname}', query.Name)\r\n          .replace('{appname}', scenario.inSameContext ? 'auto' : encodeURI(dialogSettings.Context.App.Folder));\r\n        return this.rootBasedOnScenario(resolved, scenario);\r\n      }),\r\n    );\r\n\r\n    // build variables for template\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([query$, this.scenario$, this.permissions$]),\r\n      combineLatest([root$, /* itemOfThisType$, */ this.dialogSettings$]),\r\n      combineLatest([this.streamNames$, this.urlParams$])\r\n    ]).pipe(\r\n      map(([[query, scenario, permissions], [root, diag], [streamNames, urlParams]]) => ({\r\n        ...this.buildBaseViewModel(query.Name, query.Guid, diag, permissions, root, scenario),\r\n        query,\r\n        apiCalls: generateQueryCalls(dnnContext.$2sxc, scenario, context, root, 0 /* #todoquery */, streamNames, urlParams),\r\n      })),\r\n    );\r\n  }\r\n\r\n  updateStreams(event: Event) {\r\n    this.streamNames$.next((event.target as HTMLInputElement).value);\r\n  }\r\n  updateParams(event: Event) {\r\n    this.urlParams$.next((event.target as HTMLInputElement).value);\r\n  }\r\n\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Using REST with Query:&nbsp; <code>{{ vm.name }}</code></div>\r\n    @if (!isSideNavContent){\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n    }\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <router-outlet></router-outlet>\r\n    <!-- Template below this line -->\r\n    <app-selector-with-help label=\"Choose Scenario\" [items]=\"scenarios\" [valueInput]=\"vm.scenario.key\"\r\n      (valueChange)=\"changeScenario($event)\">\r\n    </app-selector-with-help>\r\n    <mat-tab-group dynamicHeight color=\"accent\"\r\n      class=\"mat-tab-group-fit-height mat-tab-group-fancy-scrollbar default-fonts\">\r\n      <!-- Introduction -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Introduction\">\r\n          <mat-icon>emoji_objects</mat-icon>\r\n          <span>Introduction</span>\r\n        </div>\r\n        <app-dev-query-introduction [data]=\"vm\"></app-dev-query-introduction>\r\n        <app-dev-rest-tab-introduction [data]=\"vm\"></app-dev-rest-tab-introduction>\r\n      </mat-tab>\r\n      <!-- Absolute / Virtual URLs -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\"\r\n          [tippy]=\"(vm.scenario.useVirtual ? 'Virtual ' : 'Absolute ') + 'REST URLs'\">\r\n          <mat-icon>code_curly</mat-icon>\r\n          <span>Call {{ vm.scenario.useVirtual ? 'Virtual' : 'Absolute' }} REST URLs</span>\r\n        </div>\r\n        <app-dev-rest-tab-examples-intro [data]=\"vm\"></app-dev-rest-tab-examples-intro>\r\n        <!-- Custom Parameters for calling -->\r\n        <div class=\"params-form\">\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Stream Name(s) to Limit, comma-separated</mat-label>\r\n            <input matInput placeholder=\"Default\" [value]=\"streamNames$.value\" (input)=\"updateStreams($event)\">\r\n          </mat-form-field>\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Additional Url Parameters</mat-label>\r\n            <input matInput placeholder=\"?id=27\" [value]=\"urlParams$.value\" (input)=\"updateParams($event)\">\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- REST Tab showing the urls and code snippets -->\r\n        <app-dev-rest-urls-and-code [data]=\"vm\"></app-dev-rest-urls-and-code>\r\n      </mat-tab>\r\n      <!-- Permissions explained -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Permissions\">\r\n          <mat-icon>person</mat-icon>\r\n          <span>Permissions ({{ vm.permissions.length }})</span>\r\n          @if (!vm.permissions.length) {\r\n          <mat-icon>warning</mat-icon>\r\n          }\r\n        </div>\r\n        <app-dev-rest-tab-permissions [data]=\"vm\"></app-dev-rest-tab-permissions>\r\n      </mat-tab>\r\n      <!-- HTTP Headers Explained -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"HTTP headers and auto\">\r\n          <mat-icon>perm_device_information</mat-icon>\r\n          <span>HTTP headers & &nbsp;<code>/auto/</code></span>\r\n        </div>\r\n        <app-dev-rest-tab-headers [data]=\"vm\"></app-dev-rest-tab-headers>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n}\r\n"],"names":["input","AllScenarios","DevRestQueryIntroductionComponent","constructor","data","scenarios","ngOnInit","selectors","inputs","decls","vars","consts","template","DevRestQueryIntroductionComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","MatBadgeModule","MatButtonModule","MatIconModule","transient","GoToPermissions","ColumnDefinitions","defaultGridOptions","TippyDirective","SxcGridModule","DialogRoutingService","ɵɵproperty","ctx_r0","permissions","length","DevRestTabPermissionsComponent","dialogRouter","gridOptions","buildGridOptions","openPermissions","navRelative","getUrlContentType","permissionTarget","columnDefs","Id","TextWide","headerName","field","width","headerClass","cellClass","DevRestTabPermissionsComponent_Template","ɵɵlistener","DevRestTabPermissionsComponent_Template_button_click_7_listener","ɵɵtemplate","DevRestTabPermissionsComponent_Conditional_8_Template","DevRestTabPermissionsComponent_Conditional_9_Template","DevRestTabPermissionsComponent_Conditional_10_Template","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate","name","ɵɵconditional","ɵɵstyleProp","i1","MatIconButton","i2","MatIcon","i3","MatBadge","i4","AgGridAngular","encapsulation","ApiCall","CodeSample","hint$2sxc","warningExternal","generateQueryCalls","$2sxc","scenario","context","root","id","streamNames","urlParams","virtual","startsWith","contextParams","tabId","moduleId","directUrl","http","apiUrl","pathWithParams","pathWithStream","snippetsGet","path","list","pathWithContext","inSameContext","push","in2sxc","endPointGetter","endPointGetWithParams","inSameSite","Context","DnnContext","AsyncPipe","MatDialogRef","MatFormFieldModule","MatInputModule","MatTabsModule","ActivatedRoute","Router","RouterOutlet","BehaviorSubject","combineLatest","map","share","GoToDevRest","PipelinesService","PermissionsService","eavConstants","DevRestBase","DevRestUrlsAndCodeComponent","SelectorWithHelpComponent","DevRestTabExamplesComponent","DevRestHttpHeadersComponent","DevRestTabIntroductionComponent","DevRestQueryComponent_Conditional_0_Conditional_6_Template_button_click_0_listener","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵresetView","closeDialog","vm_r4","useVirtual","DevRestQueryComponent_Conditional_0_div_29_Conditional_5_Template","DevRestQueryComponent_Conditional_0_Conditional_6_Template","DevRestQueryComponent_Conditional_0_Template_app_selector_with_help_valueChange_9_listener","$event","_r1","changeScenario","DevRestQueryComponent_Conditional_0_div_12_Template","DevRestQueryComponent_Conditional_0_div_16_Template","DevRestQueryComponent_Conditional_0_Template_input_input_22_listener","updateStreams","DevRestQueryComponent_Conditional_0_Template_input_input_26_listener","updateParams","DevRestQueryComponent_Conditional_0_div_29_Template","DevRestQueryComponent_Conditional_0_div_32_Template","isSideNavContent","key","streamNames$","value","urlParams$","pathToQuery","DevRestQueryComponent","dialog","router","route","dnnContext","permissionsService","hostClass","pipelinesService","url","includes","routeQuery","query$","paramMap","pipe","pm","get","paramQuery","getAll","contentTypes","query","queryGuid","all","find","q","Guid","permissions$","buildPermissionStream","root$","scenario$","dialogSettings$","dialogSettings","resolved","replace","Name","encodeURI","App","Folder","rootBasedOnScenario","viewModel$","diag","buildBaseViewModel","apiCalls","event","next","target","ɵɵdirectiveInject","hostVars","hostBindings","DevRestQueryComponent_HostBindings","ɵɵhostProperty","DevRestQueryComponent_Conditional_0_Template","tmp_0_0","ɵɵpipeBind1","i5","i6","i7","MatTabLabel","MatTab","MatTabGroup","i8","MatFormField","MatLabel","i9","MatInput"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}