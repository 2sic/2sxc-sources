{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_component_ts-node_modules_lodash-es__arrayE-b0a38f.js","mappings":"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","sources":["./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/datasource.helpers.ts","./node_modules/lodash-es/_baseAssignValue.js","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./node_modules/lodash-es/_defineProperty.js","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./node_modules/lodash-es/_getPrototype.js","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber-constants.ts","./node_modules/lodash-es/_arrayEach.js","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/jsplumb-instance-manager.ts","./node_modules/lodash-es/_baseCreate.js","./projects/eav-ui/src/app/visual-query/plumb-editor/lines-decorator.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/endpoints-manager.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/endpoint-definitions.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/connections-manager.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/wirings.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/query-data-manager.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/connection-line-colors.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../shared/models/edit-form.model';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { transient } from '../../../../../core';\r\nimport { isCtrlS } from '../../edit/dialog/main/keyboard-shortcuts';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { findDefByType } from '../plumb-editor/datasource.helpers';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\n\r\n/**\r\n * Service containing the state for the visual query.\r\n * It's shared, so should not be used with transient(...);\r\n */\r\n@Injectable()\r\nexport class VisualQueryStateService extends ServiceBase implements OnDestroy {\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #queryDefSvc = transient(QueryDefinitionService);\r\n  #dialogRoute = transient(DialogRoutingService);\r\n  #titleSvc = transient(Title);\r\n\r\n  pipelineModel = signal<PipelineModel>(null);\r\n  dataSources = signal<DataSource[]>(null);\r\n  dataSourceConfigs = signal<DataSourceConfigs>({});\r\n\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n\r\n  queryResult?: PipelineResult;\r\n\r\n  #pipelineId = parseInt(this.#dialogRoute.getParam('pipelineId'), 10);\r\n  #refreshPipeline = false;\r\n  #refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.#fetchDataSources(() => this.#fetchPipeline(true, true, false));\r\n    this.#attachKeyboardSave();\r\n    this.#dialogRoute.doOnDialogClosed(() => {\r\n      if (this.#refreshPipeline || this.#refreshDataSourceConfigs)\r\n        this.#fetchPipeline(this.#refreshPipeline, this.#refreshDataSourceConfigs, this.#refreshPipeline);\r\n      this.#refreshPipeline = false;\r\n      this.#refreshDataSourceConfigs = false;\r\n    });\r\n  }\r\n\r\n  public editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.#savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [EditPrep.editId(this.pipelineModel().Pipeline.EntityId)],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n      this.#refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  public saveAndRun(save: boolean, run: boolean): void {\r\n    if (save && run)\r\n      return this.#savePipeline(() => this.runPipeline());\r\n\r\n    if (save)\r\n      return this.#savePipeline();\r\n\r\n    if (run)\r\n      return this.runPipeline();\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const designerData: Record<string, any> = JsonHelpers.tryParse(query.Pipeline.VisualDesignerData) ?? {};\r\n    designerData.ShowDataSourceDetails = showDetails;\r\n    query.Pipeline.VisualDesignerData = JSON.stringify(designerData);\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const newSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (query.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    query.DataSources.push(newSource);\r\n    this.pipelineModel.set(query);\r\n    this.#savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    query.DataSources = query.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Name = name;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Description = description;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!dataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    dataSource.VisualDesignerData = { ...dataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  #calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null)\r\n        return;\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '')\r\n            return;\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName))\r\n            return;\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title !== null && attributeValue[0]?.Id !== null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs.set(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = findDefByType(this.dataSources(), pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const { targetType, keyType } = eavConstants.metadata.entity;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.#metadataSvc.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [EditPrep.editId(metadata.Items[0].Id)],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n        this.#refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.#contentTypesSvc.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [ EditPrep.newMetadata(key, contentTypeName, eavConstants.metadata.entity) ],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n          this.#refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  #savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.#queryDefSvc.savePipeline(this.pipelineModel()).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel.set(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.#queryDefSvc.runPipeline(this.pipelineModel().Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.queryResult = pipelineResult;\r\n        this.#showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel.set(cloneDeep(this.pipelineModel()));\r\n\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25): void {\r\n    if (stream.Error)\r\n      return this.#showStreamErrorResult(stream);\r\n\r\n    if (stream.Count === 0)\r\n      return;\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel().Pipeline.EntityId;\r\n    this.#queryDefSvc.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel().DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.#showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (_: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  #fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar)\r\n      this.snackBar.open('Reloading query, please wait...');\r\n\r\n    this.#queryDefSvc.fetchPipeline(this.#pipelineId, this.dataSources()).subscribe(pipelineModel => {\r\n      if (showSnackBar)\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n\r\n      this.#titleSvc.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n\r\n      if (refreshPipeline)\r\n        this.pipelineModel.set(pipelineModel);\r\n\r\n      if (refreshDataSourceConfigs)\r\n        this.#calculateDataSourceConfigs(pipelineModel.DataSources);\r\n    });\r\n  }\r\n\r\n  #showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.matDialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.matDialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #fetchDataSources(callback?: () => void) {\r\n    this.#queryDefSvc.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources.set(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  #attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.#dialogRoute.snapshot.firstChild),\r\n          filter(event => isCtrlS(event)),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.#savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): T[] {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n    return array;\r\n  }\r\n\r\n  // probably better: Array.from(new Set(merged));\r\n  // static distinct<T extends unknown>(array: T[]): T[] {\r\n  //   return array.filter(onlyUnique);\r\n  // }\r\n\r\n}\r\n\r\n// function onlyUnique<T extends unknown>(value: T, index: number, array: T[]): boolean {\r\n//   return array.indexOf(value) === index;\r\n// }","import { DataSource } from '../models';\r\nimport { JsPlumbEndpoint } from './jsplumb.models';\r\n\r\nexport function findDefByType(dataSources: DataSource [], partAssemblyAndType: string): DataSource | undefined {\r\n  return dataSources.find(ds => ds.PartAssemblyAndType === partAssemblyAndType)\r\n}\r\n\r\nexport function getEndpointLabel(endpoint: JsPlumbEndpoint) : string {\r\n  return endpoint.getOverlay('endpointLabel').label\r\n}","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, HostBinding, Inject, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { VisualQueryStateService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\n\r\n@Component({\r\n    selector: 'app-rename-stream',\r\n    templateUrl: './rename-stream.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        NgClass,\r\n        MatDialogActions,\r\n        MatSlideToggleModule,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n    ]\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.queryResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialog: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#buildForm();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialog.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  #buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists)\r\n      return;\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.queryResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null)\r\n          this.controls.label.patchValue(null);\r\n      })\r\n    );\r\n\r\n    this.#contentTypesSvc.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.queryResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { findDefByType } from './datasource.helpers';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools' },\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    const ds = findDefByType(dataSources, pipelineDataSource.PartAssemblyAndType);\r\n    const typeInfo: TypeInfo = (ds)\r\n      ? {\r\n        ...(ds.PrimaryType ? guiTypes[ds.PrimaryType] : guiTypes.Unknown),\r\n\r\n        DynamicIn: ds.DynamicIn ?? false,\r\n        DynamicOut: ds.OutMode != 'static',\r\n        Icon: ds.Icon,\r\n        UiHint: ds.UiHint,\r\n        HelpLink: ds.HelpLink,\r\n        outMode: ds.OutMode,\r\n        // ...(ds.Icon ? { Icon: ds.Icon } : {}),\r\n        // ...(ds.UiHint ? { UiHint: ds.UiHint } : {}),\r\n        // ...(ds.OutMode != null ? { OutMode: ds.OutMode } : {}),\r\n        // ...(ds.HelpLink != null ? { HelpLink: ds.HelpLink } : {}),\r\n        ...(ds.EnableConfig != null ? { EnableConfig: ds.EnableConfig } : {}),\r\n      } satisfies TypeInfo\r\n      : {\r\n        ...guiTypes.Unknown,\r\n        DynamicOut: false,\r\n        DynamicIn: false,\r\n        outMode: 'static',\r\n      };\r\n      // console.log(\"2dm test\", pipelineDataSource, ds, typeInfo);\r\n    \r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appMousedownStopPropagation]',\r\n})\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { Component, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { transient } from '../../../../../core';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\n\r\n@Component({\r\n    selector: 'app-run-explorer',\r\n    templateUrl: './run-explorer.component.html',\r\n    styleUrls: ['./run-explorer.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n    ]\r\n})\r\nexport class RunExplorerComponent {\r\n\r\n  warningSig = signal<string[]>(\r\n    calculateWarnings(this.vsSvc?.pipelineModel() ?? null, this.context)\r\n  );\r\n\r\n  visualDesignerDataSig = signal<Record<string, any>>(\r\n    JsonHelpers.tryParse(this.vsSvc?.pipelineModel()?.Pipeline.VisualDesignerData) ?? {}\r\n  );\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private context: Context,\r\n    public vsSvc: VisualQueryStateService,\r\n  ) { }\r\n\r\n  editPipeline() {\r\n    this.vsSvc.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.vsSvc.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.vsSvc.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.vsSvc.pipelineModel().Pipeline.EntityGuid;\r\n    this.#dialogRouter.navRelative([GoToDevRest.getUrlQueryDialog(queryGuid)]);\r\n  }\r\n}\r\n","@if (vsSvc.pipelineModel()) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">Save and run</button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">Run</button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">Save</button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (vsSvc.pipelineModel().Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of vsSvc.pipelineModel().Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (vsSvc.pipelineModel().Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of vsSvc.pipelineModel().Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerDataSig()) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle\r\n            color=\"primary\"\r\n            [checked]=\"visualDesignerDataSig().ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"\r\n          />\r\n        </div>\r\n      }\r\n      @if (warningSig()) {\r\n        @if (warningSig().length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warningSig(); track warning) {\r\n                <li [innerHTML]=\"warning\"></li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (vsSvc.pipelineModel().Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ vsSvc.pipelineModel().Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return (event.key === 's' || event.key === 'S') && (event.ctrlKey || event.metaKey);\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) return;\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","import { JsonPipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n    selector: 'app-stream-error-result',\r\n    templateUrl: './stream-error-result.component.html',\r\n    styleUrls: ['./stream-error-result.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogActions,\r\n        JsonPipe,\r\n    ]\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialog: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nexport function domIdOfGuid(guid: string): string {\r\n  return dataSrcIdPrefix + guid;\r\n}\r\n\r\nexport function guidOfDomId(domId: string): string {\r\n  return domId.replace(dataSrcIdPrefix, '');\r\n}","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","// tslint:disable-next-line:max-line-length\r\nimport { NgClass, NgStyle } from '@angular/common';\r\nimport { AfterViewInit, ChangeDetectorRef, Component, computed, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { findDefByType } from './datasource.helpers';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { domIdOfGuid } from './plumber-constants';\r\nimport { Plumber } from './plumber.helper';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  ngAfterViewInit: false,\r\n}\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n    selector: 'app-plumb-editor',\r\n    templateUrl: './plumb-editor.component.html',\r\n    styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n    imports: [\r\n        NgStyle,\r\n        NgClass,\r\n        MatIconModule,\r\n        MousedownStopPropagationDirective,\r\n    ]\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  log = classLog({ PlumbEditorComponent }, logSpecs);\r\n\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  /** provide this fn to the UI */\r\n  domIdOfGuid = domIdOfGuid;\r\n  hardReset = false;\r\n\r\n  #plumber: Plumber;\r\n  #scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n\r\n  #queryDefinitionSvc = transient(QueryDefinitionService);\r\n\r\n  showDataSourceDetails = computed(() => {\r\n    const result = JsonHelpers.tryParse(this.visQuerySvc.pipelineModel()?.Pipeline.VisualDesignerData) ?? {};\r\n    return result.ShowDataSourceDetails ?? false;\r\n  });\r\n\r\n  typeInfos = computed(() =>\r\n    calculateTypeInfos(this.visQuerySvc.pipelineModel()?.DataSources ?? [], this.visQuerySvc.dataSources()\r\n    ));\r\n\r\n  constructor(\r\n    public visQuerySvc: VisualQueryStateService, // Check if this not with transient better\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) { super(); }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.#scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.visQuerySvc.putEntityCountOnConnections$.subscribe(result => {\r\n        this.#plumber.lineDecorator.addEntityCount(result);\r\n      })\r\n    );\r\n\r\n    // October 2024 2dg\r\n    // Unclear whether this workaround is still needed, when switching to signal it was commented out October 2024\r\n    // Leave comment in until Q2 2025\r\n\r\n    // this.viewModel$ = combineLatest([\r\n    //   this.vsSvc.pipelineModel$,\r\n    // ]).pipe(\r\n    //   map(([pipelineModel]) => {\r\n    //     if (pipelineModel == null) return;\r\n    //     // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n    //     // This wipes dom entirely and gives us new elements\r\n    //     this.hardReset = true;\r\n    //     this.changeDetectorRef.detectChanges(); // Forces the view to re-render\r\n    //     this.hardReset = false;\r\n    //     const viewModel: PlumbEditorViewModel = {\r\n    //       removed: \"removeLater\",\r\n    //     };\r\n    //     return viewModel;\r\n    //   }),\r\n    // );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fnIf('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.#scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        l.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.#plumber?.destroy();\r\n        this.#plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visQuerySvc.pipelineModel(),\r\n          this.visQuerySvc.dataSources(),\r\n          () => this.onConnectionsChanged(),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          {\r\n            matDialog: this.matDialog,\r\n            viewContainerRef: this.viewContainerRef,\r\n            changeDetectorRef: this.changeDetectorRef,\r\n            onConnectionsChanged: () => this.onConnectionsChanged(),\r\n          },\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#plumber?.destroy();\r\n    this.#scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.#plumber.connections.getAll();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.visQuerySvc.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visQuerySvc.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visQuerySvc.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource): void {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved'))\r\n      return this.visQuerySvc.saveAndRun(true, false);\r\n\r\n    this.visQuerySvc.editDataSource(dataSource);\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = findDefByType(this.visQuerySvc.dataSources(), partAssemblyAndType);\r\n    return this.#queryDefinitionSvc.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`))\r\n      return;\r\n\r\n    // Update UI\r\n    this.#plumber.removeAllEndpoints(pipelineDataSource.EntityGuid);\r\n\r\n    // Tell backend to clean up\r\n    const connections = this.#plumber.connections.getAll();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.visQuerySvc.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '')\r\n      return;\r\n\r\n    this.visQuerySvc.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null)\r\n      return;\r\n\r\n    this.visQuerySvc.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if (visQuerySvc.pipelineModel()) {\r\n  <div #domRoot id=\"pipeline-root\">\r\n    <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n    @if (!hardReset) {\r\n      @for (dataSource of visQuerySvc.pipelineModel().DataSources; track dataSource) {\r\n        <div\r\n          #domDataSource\r\n          [id]=\"domIdOfGuid(dataSource.EntityGuid)\"\r\n          class=\"dataSource\"\r\n          [ngStyle]=\"{\r\n            top: dataSource.VisualDesignerData.Top + 'px',\r\n            left: dataSource.VisualDesignerData.Left + 'px',\r\n            'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null,\r\n          }\"\r\n          [ngClass]=\"{\r\n            'show-details': showDataSourceDetails() && visQuerySvc.dataSourceConfigs()[dataSource.EntityId]?.length,\r\n          }\"\r\n        >\r\n          <div class=\"actions left\">\r\n            <mat-icon class=\"type-info\" [title]=\"typeInfos()[dataSource.EntityGuid].UiHint\">\r\n              {{ typeInfos()[dataSource.EntityGuid].Icon }}\r\n            </mat-icon>\r\n            @if (visQuerySvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].EnableConfig) {\r\n              <mat-icon\r\n                class=\"configure\"\r\n                title=\"Configure data source\"\r\n                appMousedownStopPropagation\r\n                (click)=\"configureDataSource(dataSource)\"\r\n              >\r\n                settings\r\n              </mat-icon>\r\n            }\r\n            @if (typeInfos()[dataSource.EntityGuid].HelpLink) {\r\n              <mat-icon\r\n                class=\"help\"\r\n                title=\"Help for this data source\"\r\n                appMousedownStopPropagation\r\n                (click)=\"openHelp(typeInfos()[dataSource.EntityGuid].HelpLink)\"\r\n              >\r\n                help_outline\r\n              </mat-icon>\r\n            }\r\n          </div>\r\n          <div class=\"actions right\">\r\n            @if (visQuerySvc.pipelineModel().Pipeline.AllowEdit && !isOutDataSource(dataSource)) {\r\n              <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\"> delete </mat-icon>\r\n            }\r\n          </div>\r\n          <div\r\n            class=\"name\"\r\n            title=\"Click to edit name\"\r\n            appMousedownStopPropagation\r\n            (click)=\"visQuerySvc.pipelineModel().Pipeline.AllowEdit && editName(dataSource)\"\r\n          >\r\n            <span>{{ dataSource.Name || '(no name)' }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br />\r\n          <div\r\n            class=\"description\"\r\n            title=\"Click to edit description\"\r\n            appMousedownStopPropagation\r\n            (click)=\"visQuerySvc.pipelineModel().Pipeline.AllowEdit && editDescription(dataSource)\"\r\n          >\r\n            <span>{{ dataSource.Description }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br />\r\n          @if (showDataSourceDetails() && visQuerySvc.dataSourceConfigs()[dataSource.EntityId]?.length) {\r\n            <hr style=\"margin: 0\" />\r\n            <table class=\"configs\">\r\n              @for (config of visQuerySvc.dataSourceConfigs()[dataSource.EntityId]; track config) {\r\n                <tr class=\"config\">\r\n                  <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n                  <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n                </tr>\r\n              }\r\n            </table>\r\n          }\r\n          <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}</div>\r\n          @if (visQuerySvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].DynamicOut) {\r\n            <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\"></div>\r\n          }\r\n          @if (visQuerySvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].DynamicIn) {\r\n            <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\"></div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { WindowWithJsPlumb } from '../window';\r\nimport { ConnectionLineColors } from './connection-line-colors';\r\nimport { JsPlumbInstance } from './jsplumb.models';\r\n\r\ndeclare const window: WindowWithJsPlumb;\r\n\r\nexport class JsPlumbInstanceManager {\r\n  constructor(private jsPlumbRoot: HTMLElement, private lineColors: ConnectionLineColors) {\r\n    this.instance = window.jsPlumb.getInstance(this.createInstanceDefaults(this.jsPlumbRoot));\r\n  }\r\n\r\n  instance: JsPlumbInstance;\r\n\r\n  createInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.lineColors.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  destroy() {\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n    this.instance = null;\r\n  }\r\n}","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import { classLogEnabled } from '../../shared/logging';\r\nimport { PipelineModel, PipelineResult, PipelineResultStream } from '../models';\r\nimport { JsPlumbEndpoint, JsPlumbInstance } from './jsplumb.models';\r\nimport { domIdOfGuid } from './plumber-constants';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  putEntityCountOnConnections: false,\r\n}\r\n\r\nexport class LinesDecorator {\r\n  log = classLogEnabled({LinesDecorator}, logSpecs);\r\n\r\n  constructor(\r\n    private instance: JsPlumbInstance, \r\n    private pipelineModel: PipelineModel,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n  ) { }\r\n  \r\n  /**\r\n   * Updates the entity count on each connections based on the provided result.\r\n   * @param result PipelineResult\r\n   */\r\n  addEntityCount(result: PipelineResult) {\r\n    const l = this.log.fnIf('putEntityCountOnConnections');\r\n    result.Streams?.forEach(stream => {\r\n      const outDomId = domIdOfGuid(stream.Source);\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const inDomId = outTargets.includes(stream.Target)\r\n        ? domIdOfGuid('Out')\r\n        : domIdOfGuid(stream.Target);\r\n\r\n      const fromUuid = outDomId + '_out_' + stream.SourceOut;\r\n      const toUuid = inDomId + '_in_' + stream.TargetIn;\r\n\r\n      const endpoint: JsPlumbEndpoint = this.instance.getEndpoint(fromUuid);\r\n      endpoint?.connections\r\n        ?.filter((connection) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: () => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit)\r\n                  return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n    l.end('done');\r\n  }\r\n}","import { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { classLogEnabled } from '../../shared/logging';\r\nimport { PipelineDataSource } from '../models';\r\nimport { ConnectionsManager } from './connections-manager';\r\nimport { findDefByType, getEndpointLabel } from './datasource.helpers';\r\nimport { EndpointDefinitionsService } from './endpoint-definitions';\r\nimport { JsPlumbEndpoint, JsPlumbInstance } from './jsplumb.models';\r\nimport { domIdOfGuid } from './plumber-constants';\r\nimport { QueryDataManager } from './query-data-manager';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  addEndpoint: false,\r\n  reOrientAllLabels: false,\r\n  updateAfterChanges: false,\r\n  wireHasConnection: false,\r\n  mirrorEndpoints: false,\r\n  fields: ['TestIn2', 'Default'],\r\n}\r\n\r\nconst endPointsWhereWeRotate = 3;\r\nconst maxLabelLengthToRotate = 30;\r\n\r\nexport class EndpointsManager {\r\n  log = classLogEnabled({EndpointsManager}, logSpecs);\r\n\r\n  constructor(\r\n    private instance: JsPlumbInstance, \r\n    private endpointDefs: EndpointDefinitionsService,\r\n    private connections: ConnectionsManager,\r\n    private queryData: QueryDataManager,\r\n  ) { }\r\n\r\n  \r\n  addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, queryDs: PipelineDataSource, extraStyling?: string) {\r\n    const l = this.log.fnIfInList('addEndpoint', 'fields', endpointName, { endpointName, isIn, queryDs });\r\n    const dsDefinition = findDefByType(this.queryData.dataSources, queryDs.PartAssemblyAndType);\r\n    const connectionList = isIn\r\n      ? dsDefinition.In\r\n      : dsDefinition.Out;\r\n    const hasDynamic = connectionList?.some(name => this.endpointDefs.getInfo(name, false).required === false);\r\n    const endpointInfo = this.endpointDefs.getInfo(endpointName, hasDynamic);\r\n\r\n    l.a(`endpointInfo`, { dataSource: dsDefinition, connectionList, hasDynamic, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    // Figure out additional styling based on the endpoint type\r\n    const style = hasDynamic\r\n      ? 'dynamic' // dynamic endpoints are not required\r\n      : !endpointInfo.required\r\n        ? ''      // not required\r\n        : this.#wireHasConnection(domDataSource, endpointInfo.name, isIn) ? '' : 'required'; // required - check if it's populated; otherwise make red\r\n\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const model = isIn\r\n      ? this.endpointDefs.buildTargetDef(queryDs.EntityGuid, `${style} ${extraStyling}`)\r\n      : this.endpointDefs.buildSourceDef(queryDs.EntityGuid, `${style} ${extraStyling}`);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.queryData.query.Pipeline.AllowEdit\r\n        || queryDs.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    // Add endpoint and add label and css in case it must be angled\r\n    const endpoint = this.instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    l.end(\"end\", {overlay});\r\n  }\r\n\r\n  /**\r\n   * Check if a specific endpoint has a connection\r\n   * Note that it uses the query model to check, not the DOM.\r\n   * So in certain cases where a change is just being made, it could be wrong.\r\n   */\r\n  #wireHasConnection(domDataSource: HTMLElement, name: string, isIn: boolean = true) {\r\n    const l = this.log.fnIf('wireHasConnection', { domDataSource, name, isIn });\r\n    const wireExists = this.queryData.query.Pipeline.StreamWiring?.some(wire => isIn\r\n        ? domIdOfGuid(wire.To) === domDataSource.id && wire.In === name\r\n        : domIdOfGuid(wire.From) === domDataSource.id && wire.Out === name\r\n    );\r\n    return l.r(wireExists, 'wireExists' + wireExists);\r\n  }\r\n\r\n  #isDoingUpdate = false;\r\n\r\n  updateAfterChanges() {\r\n    const l = this.log.fnIf('updateAfterChanges', { query: this.queryData.query, isDoing: this.#isDoingUpdate });\r\n\r\n    // Prevent loops\r\n    if (this.#isDoingUpdate)\r\n      return l.end('already doing update, exit');\r\n    this.#isDoingUpdate = true;\r\n\r\n    this.#mirrorEndpoints();\r\n\r\n    this.#reOrientAllLabels();\r\n\r\n    this.#isDoingUpdate = false;\r\n    this.instance.repaintEverything();\r\n    l.end('done');\r\n  }\r\n\r\n  #mirrorEndpoints() {\r\n    const l = this.log.fnIf('mirrorEndpoints', { query: this.queryData.query });\r\n    // Get all parts which have mirror-in mode\r\n    const partsMirrorIn = this.queryData.query.DataSources\r\n    .map(ds => {\r\n      const def = findDefByType(this.queryData.dataSources, ds.PartAssemblyAndType);\r\n      return (def.OutMode === 'mirror-in') ? { def, guid: ds.EntityGuid } : null;\r\n    })\r\n    .filter(d => d !== null);\r\n    \r\n    // Check if we need to mirror anything\r\n    partsMirrorIn.forEach(ds => {\r\n      const { inPoints, outPoints } = this.#getEndpointsByType(ds.guid);\r\n\r\n      const inLabels = inPoints.map(p => ({ point: p, label: getEndpointLabel(p)}));\r\n      const outLabels = outPoints.map(p => ({ point: p, label: getEndpointLabel(p)}));\r\n\r\n      // Get mismatching lists of out and in\r\n      const missingInOut = inLabels.filter(inP => !outLabels.some(outP => outP.label === inP.label));\r\n      const outWithoutIn = outLabels.filter(outP => !inLabels.some(inP => inP.label === outP.label));\r\n      l.a('inMissingInOut', { inPoints, outPoints, missingInOut, outWithoutIn });\r\n\r\n      // Add missing labels to out\r\n      const { domDataSource, dataSource } = this.queryData.findDataSourceAndDom(ds.guid);\r\n      if (missingInOut.length) {\r\n        missingInOut.forEach(p => this.addEndpoint(domDataSource, p.label, false, dataSource, 'mirror-in'));\r\n      }\r\n\r\n      // Remove excessive labels\r\n      // Only consider the ones which have a `mirror-in` class and remove them\r\n      outWithoutIn.forEach(p => {\r\n        if (p.point.canvas.classList.contains('mirror-in')) {\r\n          const hasConnection = p.point.connections?.length;\r\n          if (!hasConnection)\r\n            this.instance.deleteEndpoint(p.point);\r\n        }\r\n      });\r\n    });  \r\n  }\r\n\r\n  /**\r\n   * Ugly way to get the endpoints by type in/out. Not elegant, but don't know a better method ATM\r\n   */\r\n  #getEndpointsByType(guid: string) {\r\n    const endpoints = this.instance.selectEndpoints({ element: domIdOfGuid(guid) });\r\n    const inPoints: JsPlumbEndpoint[] = [];\r\n    const outPoints: JsPlumbEndpoint[] = [];\r\n    endpoints.each((ep: JsPlumbEndpoint) => (ep.isTarget ? inPoints : outPoints).push(ep));\r\n    return { inPoints, outPoints };\r\n  }\r\n\r\n  /**\r\n   * Check all labels and if there are too many, rotate them at an angle\r\n   */\r\n  #reOrientAllLabels() {\r\n    const l = this.log.fnIf('reOrientAllLabels');\r\n    const parts = this.queryData.query.DataSources.map(ds => ds.EntityGuid);\r\n\r\n    parts.forEach(guid => {\r\n      const {inPoints, outPoints} = this.#getEndpointsByType(guid);\r\n      this.#reorientListOfEndpoints(inPoints);\r\n      this.#reorientListOfEndpoints(outPoints);\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  #reorientListOfEndpoints(endpoints: JsPlumbEndpoint[]) {\r\n    const countExceeded = endpoints.length > endPointsWhereWeRotate;\r\n\r\n    const labels = endpoints.map(endpoint => getEndpointLabel(endpoint)).join(',');\r\n\r\n    if (countExceeded || labels.length > maxLabelLengthToRotate)\r\n      endpoints.forEach(element => element.addClass('angled'));\r\n    else\r\n      endpoints.forEach(element => element.removeClass('angled'));\r\n  }\r\n\r\n\r\n  removeAllEndpoints(dataSourceGuid: string) {\r\n    const elementId = domIdOfGuid(dataSourceGuid);\r\n    this.connections.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.connections.bulkDelete = false;\r\n  }\r\n\r\n}\r\n\r\n","import { classLog } from '../../shared/logging';\r\nimport { PipelineModel } from '../models';\r\nimport { EndpointLabelRenameParts } from './endpoint-label-rename.model';\r\nimport { JsPlumbEndpoint, JsPlumbOverlay } from './jsplumb.models';\r\nimport { EndpointInfo } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getEndpointOverlays: true,\r\n  getEndpointInfo: true,\r\n  buildSourceDef: true,\r\n  buildTargetDef: true,\r\n}\r\n\r\n/**\r\n * Trivial helper to get endpoint definitions and similar things\r\n */\r\nexport class EndpointDefinitionsService {\r\n\r\n  log = classLog({EndpointDefinitionsService}, logSpecs);\r\n\r\n  constructor(\r\n    private pipelineModel: PipelineModel,\r\n    private renameDialogParts: EndpointLabelRenameParts,\r\n  ) { }\r\n\r\n  #getEndpointOverlays(isSource: boolean) {\r\n    const l = this.log.fnIf('getEndpointOverlays', {isSource});\r\n    const result = [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n    return l.r(result);\r\n  }\r\n\r\n  getInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    const l = this.log.fnIf('getEndpointInfo', {endpointName, isDynamic});\r\n    // let name: string;\r\n    // let required: boolean;\r\n\r\n    // Trim name and see if it's required - marked with a trailing '*'\r\n    const trimmed = endpointName.trim();\r\n    const required = trimmed.endsWith('*');\r\n    const name = !required\r\n      ? trimmed\r\n      : trimmed.substring(0, trimmed.length - 1);\r\n\r\n    if (isDynamic)\r\n      return l.r({\r\n        name,\r\n        required: false\r\n      } satisfies EndpointInfo, 'isDynamic');\r\n\r\n    return l.r({ name, required } satisfies EndpointInfo, 'notDynamic');\r\n  }\r\n\r\n  buildSourceDef(dsGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildSourceDef', {pipelineDataSourceGuid: dsGuid, style});\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + (style ?? ''),\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.#getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: JsPlumbOverlay) => this.onChangeLabel(endpointOrOverlay, isSource, dsGuid),\r\n      },\r\n    };\r\n    return l.r(sourceEndpoint);\r\n  }\r\n\r\n  buildTargetDef(dsGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildTargetDef', {pipelineDataSourceGuid: dsGuid, style});\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.#getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: JsPlumbOverlay) => this.onChangeLabel(endpointOrOverlay, isSource, dsGuid),\r\n      },\r\n    };\r\n    return l.r(targetEndpoint);\r\n  }\r\n\r\n\r\n  onChangeLabel(endpointOrOverlay: JsPlumbEndpoint | JsPlumbOverlay, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit)\r\n      return;\r\n\r\n    debugger;\r\n    const overlay: JsPlumbOverlay = (endpointOrOverlay as JsPlumbEndpoint)?.getOverlay?.('endpointLabel')\r\n      ?? endpointOrOverlay as JsPlumbOverlay;\r\n\r\n    this.renameDialogParts.matDialog\r\n      .open(RenameStreamComponent, {\r\n        autoFocus: false,\r\n        data: {\r\n          pipelineDataSourceGuid,\r\n          isSource,\r\n          label: overlay.label,\r\n        } satisfies RenameStreamDialogData,\r\n        viewContainerRef: this.renameDialogParts.viewContainerRef,\r\n        width: '650px',\r\n      })\r\n      .afterClosed().subscribe(newLabel => {\r\n        if (!newLabel)\r\n          return;\r\n        overlay.setLabel(newLabel);\r\n        setTimeout(() => this.renameDialogParts.onConnectionsChanged());\r\n      });\r\n\r\n    this.renameDialogParts.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n\r\n  // public onChangeLabel(endpointOrOverlay: JsPlumbEndpoint | JsPlumbOverlay, isSource: boolean, pipelineDataSourceGuid: string) {\r\n  //   if (!this.pipelineModel.Pipeline.AllowEdit)\r\n  //     return;\r\n\r\n  //   const overlay: JsPlumbOverlay = (endpointOrOverlay as JsPlumbEndpoint)?.getOverlay('endpointLabel')\r\n  //     ?? endpointOrOverlay as JsPlumbOverlay;\r\n\r\n  //   this.matDialog\r\n  //     .open(RenameStreamComponent, {\r\n  //       autoFocus: false,\r\n  //       data: {\r\n  //         pipelineDataSourceGuid,\r\n  //         isSource,\r\n  //         label: overlay.label,\r\n  //       } satisfies RenameStreamDialogData,\r\n  //       viewContainerRef: this.viewContainerRef,\r\n  //       width: '650px',\r\n  //     })\r\n  //     .afterClosed().subscribe(newLabel => {\r\n  //       if (!newLabel)\r\n  //         return;\r\n  //       overlay.setLabel(newLabel);\r\n  //       setTimeout(() => this.onConnectionsChanged());\r\n  //     });\r\n\r\n  //   this.changeDetectorRef.markForCheck();\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\nimport { findDefByType } from '../plumb-editor/datasource.helpers';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService extends HttpServiceBase {\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.getHttp<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.appId, id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.#buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.#fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  #buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = findDefByType(dataSources, templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  #fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.getHttp<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        // Add the final target DataSource to the list of DataSources\r\n        dataSources.push(eavConstants.pipelineDesigner.outFinalTarget);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.appId, Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.#fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.getHttp<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.appId, id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.getHttp<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.appId, id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { VisualQueryStateService } from './services/visual-query.service';\r\n\r\n@Component({\r\n    selector: 'app-visual-query',\r\n    templateUrl: './visual-query.component.html',\r\n    styleUrls: ['./visual-query.component.scss'],\r\n    imports: [\r\n        RouterOutlet,\r\n        NgClass,\r\n        MatIconModule,\r\n        RunExplorerComponent,\r\n        AddExplorerComponent,\r\n        PlumbEditorComponent,\r\n    ],\r\n    providers: [\r\n        VisualQueryStateService, // Shared State for the entire Visual Query, - init run here\r\n    ]\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private visualQueryService: VisualQueryStateService\r\n  ) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n","import { KeyValue, KeyValuePipe } from '@angular/common';\r\nimport { Component, computed, signal } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { DataSource } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\n\r\n@Component({\r\n    selector: 'app-add-explorer',\r\n    templateUrl: './add-explorer.component.html',\r\n    styleUrls: ['./add-explorer.component.scss'],\r\n    imports: [\r\n        MatSlideToggleModule,\r\n        MatIconModule,\r\n        KeyValuePipe,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AddExplorerComponent {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  #difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n\r\n  #difficulty = signal(this.#difficulties.default);\r\n\r\n  sorted = computed(() => filterAndSortDataSources(this.visualQueryService.dataSources(), this.#difficulty()));\r\n\r\n  constructor(private visualQueryService: VisualQueryStateService) { }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.#difficulties.advanced : this.#difficulties.default;\r\n    this.#difficulty.set(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n","@if (sorted()) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of sorted() | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { classLogEnabled } from '../../shared/logging';\r\nimport { DataSource, PipelineModel, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { ConnectionLineColors } from './connection-line-colors';\r\nimport { ConnectionsManager } from './connections-manager';\r\nimport { getEndpointLabel } from './datasource.helpers';\r\nimport { EndpointDefinitionsService } from './endpoint-definitions';\r\nimport { EndpointLabelRenameParts } from './endpoint-label-rename.model';\r\nimport { EndpointsManager } from './endpoints-manager';\r\nimport { JsPlumbInstanceManager } from './jsplumb-instance-manager';\r\nimport { JsPlumbEndpoint, JsPlumbInstance } from './jsplumb.models';\r\nimport { LinesDecorator } from './lines-decorator';\r\nimport { domIdOfGuid, guidOfDomId } from './plumber-constants';\r\nimport { QueryDataManager } from './query-data-manager';\r\nimport { WiringsHelper } from './wirings.helper';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  addEndpoint: true,\r\n  initDomDataSources: false,\r\n  eventConnectionDetached: true,\r\n  eventConnectionAttached: true,\r\n  fields: ['TestIn2'],\r\n}\r\n\r\nexport class Plumber {\r\n\r\n  log = classLogEnabled({Plumber}, logSpecs);\r\n\r\n  #instance: JsPlumbInstance;\r\n\r\n  lineColors = new ConnectionLineColors();\r\n\r\n  #endpointDefs: EndpointDefinitionsService;\r\n\r\n  lineDecorator: LinesDecorator;\r\n\r\n  connections: ConnectionsManager;\r\n\r\n  #instanceManager: JsPlumbInstanceManager;\r\n\r\n  endpoints: EndpointsManager;\r\n\r\n  queryData: QueryDataManager;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private query: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChangedParent: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    renameDialogParts: EndpointLabelRenameParts,\r\n  ) {\r\n    this.queryData = new QueryDataManager(this.jsPlumbRoot, this.query, this.dataSources);\r\n    this.#endpointDefs = new EndpointDefinitionsService(query, { ...renameDialogParts, onConnectionsChanged: () => this.#onConnectionsChanged() });\r\n    this.#instanceManager = new JsPlumbInstanceManager(this.jsPlumbRoot, this.lineColors);\r\n    this.#instance = this.#instanceManager.instance;\r\n    // requires instance, so must happen after that\r\n    this.lineDecorator = new LinesDecorator(this.#instance, this.query, this.onDebugStream);\r\n    this.connections = new ConnectionsManager(this.#instance, this.query, this.dataSources, this.#endpointDefs, () => this.#onConnectionsChanged());\r\n    this.endpoints = new EndpointsManager(this.#instance, this.#endpointDefs, this.connections, this.queryData);\r\n\r\n    // Suspend drawing while initializing\r\n    this.#instance.batch(() => {\r\n      this.#initDomDataSources();\r\n      new WiringsHelper(this, this.#instance, this.queryData).initWirings();\r\n      this.connections.setup();\r\n      this.endpoints.updateAfterChanges();\r\n    });\r\n\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.#instance.repaintEverything();\r\n\r\n  }\r\n  #onConnectionsChanged() {\r\n    // After connection changes, re-check if we need to slant the labels\r\n    this.endpoints.updateAfterChanges();\r\n    // call the parent for storing the data etc.\r\n    this.onConnectionsChangedParent();\r\n  }\r\n\r\n  destroy() {\r\n    this.#instanceManager.destroy();\r\n  }\r\n\r\n  removeAllEndpoints(pipelineDataSourceGuid: string) {\r\n    const elementId = domIdOfGuid(pipelineDataSourceGuid);\r\n    this.connections.bulkDelete = true;\r\n    this.#instance.batch(() => {\r\n      this.#instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.connections.bulkDelete = false;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.#instance\r\n      .selectEndpoints({ target: domIdOfGuid('Out') })\r\n      .each((endpoint: JsPlumbEndpoint) => {\r\n        streamsOut.push(getEndpointLabel(endpoint));\r\n      });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  #initDomDataSources() {\r\n    const l = this.log.fnIf('initDomDataSources');\r\n    for (const queryDs of this.query.DataSources) {\r\n      const { domDataSource: domDs, definition: dataSource } = this.queryData.findDomAndDef(queryDs.EntityGuid, queryDs.PartAssemblyAndType);\r\n      if (!domDs)\r\n        continue;\r\n\r\n      if (this.query.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.#instance.draggable(domDs, {\r\n          grid: [20, 20],\r\n          stop: (event: { el: HTMLElement, finalPos: number[] }) => {\r\n            const element: HTMLElement = event.el;\r\n            const queryDsGuid: string = guidOfDomId(element.id);\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => this.onDragend(queryDsGuid, position));\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.endpoints.addEndpoint(domDs, name, false, queryDs);\r\n      });\r\n\r\n      // Add dynamic Out-Endpoints (if .OutMode is not static)\r\n      if (dataSource.OutMode != 'static') {\r\n        const dynOut = this.#endpointDefs.buildSourceDef(queryDs.EntityGuid);\r\n        this.#instance.makeSource(domDs, dynOut, { filter: '.add-endpoint' });\r\n      }\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.endpoints.addEndpoint(domDs, name, true, queryDs);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.#endpointDefs.buildTargetDef(queryDs.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.#instance.makeTarget(domDs, targetEndpointUnlimited);\r\n      }\r\n\r\n    }\r\n    l.end();\r\n  }\r\n\r\n\r\n}\r\n","import { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\n\r\n@Component({\r\n    selector: 'app-query-result',\r\n    templateUrl: './query-result.component.html',\r\n    styleUrls: ['./query-result.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTabsModule,\r\n        JsonPipe,\r\n        KeyValuePipe,\r\n    ]\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialog: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel().Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) return;\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos. Executed in {{ timeUsed }}ms ({{\r\n        ticksUsed\r\n      }}\r\n      ticks)\r\n    </p>\r\n\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <!-- Results -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n        <div class=\"eav-tab-description\">\r\n          <div>\r\n            @if (top === 0) {\r\n              Showing All results\r\n            }\r\n            @if (top !== 0) {\r\n              Showing top {{ top }} results\r\n            }\r\n          </div>\r\n          <div>\r\n            @for (option of optionsForTop; track option) {\r\n              <button mat-button (click)=\"show(option)\">\r\n                Show\r\n                @if (option === 0) {\r\n                  All\r\n                }\r\n                @if (option !== 0) {\r\n                  {{ option }}\r\n                }\r\n              </button>\r\n            }\r\n          </div>\r\n        </div>\r\n        <pre class=\"eav-pre-scroll\">{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <!-- Parameters -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n\r\n          <div class=\"eav-tab-content\">\r\n            <ul>\r\n              @for (param of parameters; track param) {\r\n                <li>{{ param }}</li>\r\n              }\r\n            </ul>\r\n          </div>\r\n        </mat-tab>\r\n      }\r\n\r\n      <!-- Sources -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <div class=\"eav-tab-content\">\r\n          <table>\r\n            <tr>\r\n              <th>Name and Guid</th>\r\n              <th>Type</th>\r\n              <th>Configuration</th>\r\n              <th>Error</th>\r\n            </tr>\r\n            @for (source of sources | keyvalue; track source) {\r\n              <tr>\r\n                <td>\r\n                  @if (source.value.Definition?.Name) {\r\n                    <div>{{ source.value.Definition?.Name }}</div>\r\n                  }\r\n                  <pre>{{ source.value.Guid }}</pre>\r\n                </td>\r\n                <td>{{ source.value.Type }}</td>\r\n                <td>\r\n                  <ol>\r\n                    @for (config of source.value.Configuration | keyvalue; track config) {\r\n                      <li>\r\n                        <b>{{ config.key }}</b\r\n                        >=<em>{{ config.value }}</em>\r\n                      </li>\r\n                    }\r\n                  </ol>\r\n                </td>\r\n                <td>{{ source.value.Error }}</td>\r\n              </tr>\r\n            }\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n\r\n      <!-- Streams -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <div class=\"eav-tab-content\">\r\n          <table>\r\n            <tr>\r\n              <th>Source</th>\r\n              <th>Target</th>\r\n              <th>Items</th>\r\n              <th>Error</th>\r\n            </tr>\r\n            @for (stream of streams; track stream) {\r\n              <tr>\r\n                <td>\r\n                  <pre>{{ stream.Source + ':' + stream.SourceOut }}</pre>\r\n                </td>\r\n                <td>\r\n                  <pre>{{ stream.Target + ':' + stream.TargetIn }}</pre>\r\n                </td>\r\n                <td>{{ stream.Count }}</td>\r\n                <td>{{ stream.Error }}</td>\r\n              </tr>\r\n            }\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { classLogEnabled } from '../../shared/logging';\r\nimport { DataSource, PipelineModel, StreamWire } from '../models';\r\nimport { findDefByType, getEndpointLabel } from './datasource.helpers';\r\nimport { EndpointDefinitionsService } from './endpoint-definitions';\r\nimport { JsPlumbConnection, JsPlumbInstance } from './jsplumb.models';\r\nimport { guidOfDomId } from './plumber-constants';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  eventConnectionDetached: false,\r\n  eventConnectionAttached: false,\r\n}\r\n\r\nexport class ConnectionsManager {\r\n  log = classLogEnabled({ConnectionsManager}, logSpecs);\r\n  bulkDelete: boolean = false;\r\n\r\n  constructor(\r\n    private instance: JsPlumbInstance, \r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private endpointsSvc: EndpointDefinitionsService,\r\n    private onConnectionsChanged: () => void,\r\n  ) { }\r\n\r\n  /**\r\n   * Handle attach/detach of connections\r\n   */\r\n  setup(): void{\r\n    this.instance.bind('connectionDetached', (info: JsPlumbConnection) => this.handleDetached(info));\r\n    this.instance.bind('connection', (info: JsPlumbConnection) => this.handleAttached(info));\r\n  }\r\n\r\n  getAll(): StreamWire[] {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections()\r\n      .map((connection: JsPlumbConnection) => ({\r\n        From: guidOfDomId(connection.sourceId),\r\n        Out: getEndpointLabel(connection.endpoints[0]),\r\n        To: guidOfDomId(connection.targetId),\r\n        In: getEndpointLabel(connection.endpoints[1]),\r\n      } satisfies StreamWire)\r\n    );\r\n    return connectionInfos;\r\n  }\r\n  \r\n  \r\n  handleDetached(info: JsPlumbConnection) {\r\n    const l = this.log.fnIf('eventConnectionDetached');\r\n    if (this.bulkDelete)\r\n      return l.end('in bulk-delete mode, exit');\r\n\r\n    const domDataSource = info.target;\r\n    const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n      pipelineDS => pipelineDS.EntityGuid === guidOfDomId(domDataSource.id)\r\n    );\r\n    const dataSource = findDefByType(this.dataSources, pipelineDataSource.PartAssemblyAndType);\r\n    const label = getEndpointLabel(info.targetEndpoint);\r\n    const isDynamic = !dataSource.In.some(name => this.endpointsSvc.getInfo(name, false).name === label);\r\n    if (isDynamic)\r\n      this.instance.deleteEndpoint(info.targetEndpoint);\r\n    setTimeout(() => this.onConnectionsChanged());\r\n    l.end('done');\r\n  }\r\n\r\n  handleAttached(info: JsPlumbConnection) {\r\n    const l = this.log.fnIf('eventConnectionAttached');\r\n    // This seems to handle a special detach case, but ATM 2025-04-03 I can't see where it would ever hit\r\n    if (info.sourceId === info.targetId) {\r\n      setTimeout(() => {\r\n        this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n        setTimeout(() => this.onConnectionsChanged());\r\n      });\r\n      return l.end('self-connection, will delete and exit');\r\n    }\r\n    const targetEndpointOverlay = info.targetEndpoint.getOverlay('endpointLabel');\r\n    const targetLabel = targetEndpointOverlay.getLabel();\r\n    const endpoints = this.instance.getEndpoints(info.target.id);\r\n    const targetHasSameLabel = endpoints.some(ep => {\r\n      const label = getEndpointLabel(ep);\r\n      return label === targetLabel && info.targetEndpoint.id !== ep.id && ep.canvas.classList.contains('targetEndpoint');\r\n    });\r\n\r\n    // If label already exists, create a PleaseRename label\r\n    if (targetHasSameLabel)\r\n      targetEndpointOverlay.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n    setTimeout(() => this.onConnectionsChanged());\r\n    l.end('done', { targetLabel, targetHasSameLabel });\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  if(!pipelineModel) return [];\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { classLogEnabled } from '../../shared/logging';\r\nimport { DataSourceSet } from './data-source-set.model';\r\nimport { JsPlumbInstance } from './jsplumb.models';\r\nimport { domIdOfGuid } from './plumber-constants';\r\nimport { Plumber } from './plumber.helper';\r\nimport { QueryDataManager } from './query-data-manager';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  initWirings: true,\r\n  ensureWireEndpointExists: true,\r\n  findDataSourceInDom: true,\r\n  fields: ['TestIn2', '*'],\r\n}\r\n\r\nexport class WiringsHelper {\r\n  log = classLogEnabled({WiringsHelper}, logSpecs);\r\n\r\n  constructor(\r\n    private plumber: Plumber,\r\n    private instance: JsPlumbInstance,\r\n    private queryData: QueryDataManager,\r\n  ) { }\r\n\r\n  initWirings() {\r\n    const l = this.log.fnIf('initWirings');\r\n    const wiringsRaw = this.queryData.query.Pipeline.StreamWiring;\r\n    if (!wiringsRaw)\r\n      return l.end('no wirings');\r\n\r\n    const wirings = wiringsRaw.map(wire => {\r\n      // read connections from Pipeline\r\n      const outDsDomId = domIdOfGuid(wire.From);\r\n      const outPointDomId = outDsDomId + '_out_' + wire.Out;\r\n      const inDsDomId = domIdOfGuid(wire.To);\r\n      const inPointDomId = inDsDomId + '_in_' + wire.In;\r\n      return {\r\n        outPointDomId,\r\n        inPointDomId,\r\n        wire\r\n      };\r\n    });\r\n\r\n    l.a('wirings', { wireDetails: wirings });\r\n\r\n    // Build all the Endpoints which don't exist yet based on the wirings\r\n    wirings.forEach(w => {\r\n      // Ensure Out-Endpoint exist\r\n      this.#ensureWireEndpointExists(w.outPointDomId, w.wire.From, w.wire.Out, false);\r\n\r\n      // Ensure In-Endpoint exist\r\n      this.#ensureWireEndpointExists(w.inPointDomId, w.wire.To, w.wire.In, true);\r\n    });\r\n\r\n    // Connect all the wirings\r\n    wirings.forEach(w => this.#connect(w.outPointDomId, w.inPointDomId));\r\n\r\n    this.instance.repaintEverything();\r\n\r\n    l.end();\r\n  }\r\n\r\n  #connect(outDomId: string, inDomId: string) {\r\n    try {\r\n      this.instance.connect({\r\n        uuids: [outDomId, inDomId],\r\n        paintStyle: this.plumber.lineColors.nextLinePaintStyle(outDomId),\r\n      });\r\n    } catch (e) {\r\n      console.error({ message: 'Connection failed', from: outDomId, to: inDomId });\r\n    }\r\n  }\r\n  \r\n\r\n  #ensureWireEndpointExists(endpointId: string, sourceGuid: string, name: string, isIn: boolean) : DataSourceSet | null {\r\n    const l = this.log.fnIfInList('ensureWireEndpointExists', 'fields', name, { endpointId, sourceGuid, name, isIn });\r\n    // Find data source infos & DOM, if not found, do nothing\r\n    const set = this.#findDataSourceInDom(endpointId, sourceGuid, name);\r\n    if (set == null)\r\n      return l.r(set, \"set null\");\r\n\r\n    // const name = isIn ? wire.In : wire.Out;\r\n    this.plumber.endpoints.addEndpoint(set.domDataSource, name, isIn, set.dataSource);\r\n    return l.r(set, 'ok');\r\n  }\r\n\r\n  #findDataSourceInDom(endpointId: string, sourceGuid: string, name: string) : DataSourceSet | null {\r\n    const l = this.log.fnIfInList('findDataSourceInDom', 'fields', name, { endpointId, sourceGuid, name });\r\n    // if exists, do nothing\r\n    if (this.instance.getEndpoint(endpointId))\r\n      return l.r(null, \"endpoint exists, exit\");\r\n\r\n    const result = this.queryData.findDataSourceAndDom(sourceGuid);\r\n    return l.r(result, `found: ${result != null}`);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);\r\n\r\n\r\n      // 2025-04-02 2dm standardized / reduced the code old\r\n      // leave commented out portions in for a few weeks, to ensure we know what happened if something breaks\r\n      // Ensure In-Endpoint exist\r\n      // if (!this.#instance.getEndpoint(fromUuid)) {\r\n      //   const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n      //   if (!domDataSource)\r\n      //     return;\r\n      //   const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n      //   const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n      //   this.#addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      // }\r\n      // Ensure Out-Endpoint exist\r\n      // if (!this.#instance.getEndpoint(toUuid)) {\r\n      //   const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n      //   if (!domDataSource)\r\n      //     return;\r\n      //   const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n      //   const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n      //   // if (wire.In === \"DEBUG\") debugger;\r\n      //   this.#addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      // }\r\n\r\n      // this.#connect(w.outPointDomId, w.inPointDomId);\r\n","import { classLogEnabled } from '../../shared/logging';\r\nimport { DataSource, PipelineModel } from '../models';\r\nimport { DataSourceSet } from './data-source-set.model';\r\nimport { findDefByType } from './datasource.helpers';\r\nimport { domIdOfGuid, guidOfDomId } from './plumber-constants';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  findDataSourceAndDom: false,\r\n  // fields: ['TestIn2', 'Default'],\r\n}\r\n\r\nexport class QueryDataManager {\r\n  log = classLogEnabled({QueryDataManager}, logSpecs);\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement, \r\n    public query: PipelineModel,\r\n    public dataSources: DataSource[]\r\n  ) { }\r\n\r\n  findDomAndDef(guid: string, partAssemblyAndType: string): (DataSourceSet & { definition: DataSource }) | null {\r\n    const dsSet = this.findDataSourceAndDom(guid);\r\n    if (!dsSet)\r\n      return null;\r\n    const dsDef = findDefByType(this.dataSources, partAssemblyAndType);\r\n    if (!dsDef)\r\n      return null;\r\n    return { ...dsSet, definition: dsDef };\r\n  }\r\n\r\n  findDataSourceAndDom(sourceElementId: string) : DataSourceSet | null {\r\n    const l = this.log.fnIf('findDataSourceAndDom', { sourceElementId });\r\n\r\n    // if DOM doesn't exist, do nothing\r\n    const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + domIdOfGuid(sourceElementId));\r\n    if (!domDataSource)\r\n      return l.r(null, \"DOM not found, exit\");\r\n\r\n    const guid = guidOfDomId(domDataSource.id);\r\n    const dataSource = this.query.DataSources.find(pipeDs => pipeDs.EntityGuid === guid);\r\n    return l.r({ domDataSource, dataSource }, \"returning data source\");\r\n  }\r\n}\r\n\r\n","import { classLog } from '../../shared/logging';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n}\r\n\r\n/**\r\n * Helper to manage the line colors on each connection\r\n */\r\nexport class ConnectionLineColors {\r\n  log = classLog({ConnectionLineColors}, logSpecs);\r\n\r\n  constructor() { }\r\n\r\n  #lineCount = 0;\r\n  #linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  #lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  #maxCols = this.#lineColors.length - 1;\r\n  #uuidColorMap: Record<string, any> = {};\r\n\r\n\r\n  nextLinePaintStyle(uuid: string) {\r\n    return this.#uuidColorMap[uuid] ??= this.#nextLineColor();\r\n  }\r\n\r\n  #nextLineColor() {\r\n    return {\r\n      ...this.#linePaintDefault,\r\n      stroke: this.#lineColors[this.#lineCount++ % this.#maxCols],\r\n    };\r\n  }\r\n\r\n}"],"names":["ChangeDetectorRef","NgZone","signal","ViewContainerRef","MatDialog","MatSnackBar","Title","cloneDeep","filter","fromEvent","Subject","ContentTypesService","MetadataService","eavConstants","convertFormToUrl","EditPrep","QueryDefinitionService","transient","isCtrlS","JsonHelpers","DialogRoutingService","ServiceBase","findDefByType","QueryResultComponent","StreamErrorResultComponent","VisualQueryStateService","contentTypesSvc","metadataSvc","queryDefSvc","dialogRoute","titleSvc","pipelineId","refreshPipeline","refreshDataSourceConfigs","constructor","snackBar","matDialog","viewContainerRef","zone","changeDetectorRef","pipelineModel","dataSources","dataSourceConfigs","putEntityCountOnConnections$","parseInt","getParam","ngOnDestroy","complete","init","fetchDataSources","fetchPipeline","attachKeyboardSave","doOnDialogClosed","editPipelineEntity","savePipeline","form","items","editId","Pipeline","EntityId","formUrl","navRelative","saveAndRun","save","run","runPipeline","showDataSourceDetails","showDetails","query","designerData","tryParse","VisualDesignerData","ShowDataSourceDetails","JSON","stringify","set","addDataSource","dataSource","newSource","Description","EntityGuid","DataSources","length","undefined","Name","PartAssemblyAndType","Top","Left","push","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","pipelineDS","StreamWiring","StreamsOut","renameDataSource","name","find","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","calculateDataSourceConfigs","#calculateDataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","Id","dataSourceConfig","value","editDataSource","pipelineDataSource","contentTypeName","ContentType","targetType","keyType","metadata","entity","key","getMetadata","subscribe","Items","retrieveContentType","next","contentType","open","duration","newMetadata","error","message","#savePipeline","callback","top","pipelineResult","queryResult","showQueryResult","console","warn","setTimeout","debugStream","stream","Error","showStreamErrorResult","Count","Source","SourceOut","streamResult","ds","source","sourceName","original","_","#fetchPipeline","showSnackBar","setTitle","#showQueryResult","result","dialogData","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","#showStreamErrorResult","errorData","ErrorData","#fetchDataSources","#attachKeyboardSave","runOutsideAngular","subscriptions","add","window","pipe","snapshot","firstChild","event","preventDefault","i0","ɵɵinject","i1","i2","factory","ɵfac","ArrayHelpers","toggleInArray","item","array","index","indexOf","splice","partAssemblyAndType","getEndpointLabel","endpoint","getOverlay","label","defineProperty","baseAssignValue","object","NgClass","FormsModule","ReactiveFormsModule","UntypedFormControl","UntypedFormGroup","Validators","MatButtonModule","MatOptionModule","MAT_DIALOG_DATA","MatDialogActions","MatDialogRef","MatFormFieldModule","MatIconModule","MatInputModule","MatSelectModule","MatSlideToggleModule","distinctUntilChanged","startWith","BaseComponent","FieldHintComponent","ClickStopPropagationDirective","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵelement","ɵɵtemplate","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","ɵɵadvance","ɵɵconditional","ctx_r0","isSource","pipelineResultExists","controls","touched","errors","required","scopeOption_r3","ɵɵtextInterpolate1","ɵɵrepeaterCreate","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","ɵɵrepeaterTrackByIdentity","scopeOptions","ɵɵrepeater","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","ɵɵlistener","RenameStreamComponent_Conditional_10_Template_button_click_7_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Template_button_click_10_listener","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","ɵɵpureFunction1","_c0","RenameStreamComponent_Conditional_13_Template_mat_slide_toggle_change_0_listener","$event","_r5","toggleAdvancedMode","RenameStreamComponent","dialog","visualQueryService","hostClass","ngOnInit","buildForm","closeDialog","close","checked","rename","formValue","getRawValue","#buildForm","scope","scopes","default","valueChanges","values","Sources","Guid","Out","out","Scope","map","patchValue","getScopes","sourceOut","filtered","s","some","o","ɵɵdirectiveInject","selectors","hostVars","hostBindings","RenameStreamComponent_HostBindings","rf","ctx","ɵɵhostProperty","RenameStreamComponent_Template_button_click_4_listener","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","RenameStreamComponent_Template_button_click_15_listener","RenameStreamComponent_Template_button_click_17_listener","valid","i3","MatButton","MatIconButton","i4","MatIcon","i5","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i6","MatFormField","MatLabel","MatSuffix","i7","MatInput","i8","MatSelect","i9","MatOption","i10","MatSlideToggle","encapsulation","getNative","func","e","guiTypes","App","Label","Icon","UiHint","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Target","Unknown","Debug","System","calculateTypeInfos","pipelineDataSources","typeInfos","typeInfo","PrimaryType","DynamicIn","DynamicOut","OutMode","HelpLink","outMode","EnableConfig","MousedownStopPropagationDirective","onMousedown","stopPropagation","MousedownStopPropagationDirective_HostBindings","MousedownStopPropagationDirective_mousedown_HostBindingHandler","GoToDevRest","Context","calculateWarnings","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","tmp_2_0","ctx_r1","vsSvc","Params","split","param_r4","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","TestParameters","RunExplorerComponent_Conditional_0_Conditional_25_Template_mat_slide_toggle_change_3_listener","visualDesignerDataSig","warning_r6","ɵɵsanitizeHtml","RunExplorerComponent_Conditional_0_Conditional_26_Conditional_0_For_8_Template","warningSig","RunExplorerComponent_Conditional_0_Conditional_26_Conditional_0_Template","ɵɵtextInterpolate","RunExplorerComponent_Conditional_0_Template_button_click_3_listener","_r1","saveAndRunQuery","RunExplorerComponent_Conditional_0_Template_button_click_5_listener","RunExplorerComponent_Conditional_0_Template_button_click_7_listener","RunExplorerComponent_Conditional_0_Template_button_click_14_listener","editPipeline","RunExplorerComponent_Conditional_0_Template_button_click_17_listener","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_26_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","RunExplorerComponent_Conditional_0_Template_button_click_29_listener","openRestApi","tmp_1_0","RunExplorerComponent","dialogRouter","context","queryGuid","getUrlQueryDialog","decls","vars","consts","template","RunExplorerComponent_Template","RunExplorerComponent_Conditional_0_Template","styles","overArg","getPrototype","getPrototypeOf","isEscape","ctrlKey","metaKey","filterAndSortDataSources","maxDifficulty","cloned","Difficulty","pipelineDesigner","outDataSource","sort","a","b","toLocaleLowerCase","localeCompare","sorted","type","JsonPipe","openInsights","$2sxc","http","apiUrl","StreamErrorResultComponent_Template","StreamErrorResultComponent_Template_button_click_4_listener","StreamErrorResultComponent_Template_button_click_12_listener","ɵɵpipeBind1","dataSrcIdPrefix","domIdOfGuid","guid","guidOfDomId","domId","replace","arrayEach","iteratee","NgStyle","computed","ElementRef","QueryList","BehaviorSubject","combineLatest","loadScripts","classLog","Plumber","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template_mat_icon_click_0_listener","dataSource_r3","$implicit","ctx_r3","configureDataSource","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template_mat_icon_click_0_listener","openHelp","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template_mat_icon_click_0_listener","_r6","remove","config_r7","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","visQuerySvc","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template_div_click_9_listener","AllowEdit","editName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template_div_click_15_listener","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","ɵɵpureFunction3","_c2","Width","_c3","tmp_16_0","isOutDataSource","tmp_24_0","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","logSpecs","all","ngAfterViewInit","jsPlumbUrl","PlumbEditorComponent","plumber","scriptLoaded$","queryDefinitionSvc","log","test","src","lineDecorator","addEntityCount","l","fnIf","domDataSourcesLoaded$","domDataSourcesRef","changes","scriptLoaded","domDataSourcesLoaded","destroy","domRootRef","nativeElement","onConnectionsChanged","onDragend","bind","onDebugStream","end","getAll","getStreamsOut","typeNameFilter","TypeNameForUi","confirm","removeAllEndpoints","url","newName","prompt","trim","newDescription","viewQuery","PlumbEditorComponent_Query","PlumbEditorComponent_Conditional_0_Template","JsPlumbInstanceManager","jsPlumbRoot","lineColors","instance","jsPlumb","getInstance","createInstanceDefaults","container","defaults","Container","Connector","curviness","PaintStyle","nextLinePaintStyle","HoverPaintStyle","stroke","strokeWidth","outlineStroke","outlineWidth","reset","unbindContainer","isObject","objectCreate","create","baseCreate","proto","prototype","classLogEnabled","putEntityCountOnConnections","LinesDecorator","Streams","outDomId","outTargets","inDomId","fromUuid","toUuid","TargetIn","getEndpoint","connection","endpoints","getUuid","toString","cssClass","setLabel","events","click","addEndpoint","reOrientAllLabels","updateAfterChanges","wireHasConnection","mirrorEndpoints","fields","endPointsWhereWeRotate","maxLabelLengthToRotate","EndpointsManager","endpointDefs","queryData","isDoingUpdate","domDataSource","endpointName","isIn","queryDs","extraStyling","fnIfInList","dsDefinition","connectionList","In","hasDynamic","getInfo","endpointInfo","style","uuid","id","model","buildTargetDef","buildSourceDef","params","enabled","overlay","#wireHasConnection","wireExists","wire","To","From","r","isDoing","repaintEverything","#mirrorEndpoints","partsMirrorIn","def","d","inPoints","outPoints","getEndpointsByType","inLabels","p","point","outLabels","missingInOut","inP","outP","outWithoutIn","findDataSourceAndDom","canvas","classList","contains","hasConnection","deleteEndpoint","#getEndpointsByType","selectEndpoints","element","each","ep","isTarget","#reOrientAllLabels","parts","reorientListOfEndpoints","#reorientListOfEndpoints","countExceeded","labels","join","addClass","removeClass","dataSourceGuid","elementId","bulkDelete","batch","delete","getEndpointOverlays","getEndpointInfo","EndpointDefinitionsService","renameDialogParts","#getEndpointOverlays","location","isDynamic","trimmed","endsWith","substring","dsGuid","sourceEndpoint","paintStyle","fill","radius","maxConnections","anchor","faces","overlays","endpointOrOverlay","onChangeLabel","targetEndpoint","dropOptions","hoverClass","activeClass","width","afterClosed","newLabel","webApiQueryDataSources","webApiQueryDebugStream","webApiQueryGet","webApiQueryRun","webApiQuerySave","HttpServiceBase","pipelineEntityId","getHttp","appId","buildDefaultModel","fixPipelineDataSources","#buildDefaultModel","templateDataSources","defaultPipeline","templateDS","streamWiring","#fixPipelineDataSources","outDataSourceExists","outDs","outDsConst","appid","zoneId","outFinalTarget","input","format","globalParts","classFullName","classFullNameParts","className","pipeline","post","newPipelineModel","from","__ngFactoryType__","ActivatedRoute","RouterOutlet","AddExplorerComponent","VisualQueryComponent","route","explorer","activeExplorer","toggleExplorer","VisualQueryComponent_Query","VisualQueryComponent_Template","VisualQueryComponent_Template_div_click_3_listener","VisualQueryComponent_Template_div_click_6_listener","VisualQueryComponent_Template_div_click_10_listener","KeyValuePipe","TippyDirective","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template_div_click_0_listener","dataSource_r6","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","ɵɵcomponentInstance","trackDataSources","group_r4","AddExplorerComponent_Conditional_0_For_6_Template_div_click_0_listener","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_13_0","toggledItems","AddExplorerComponent_Conditional_0_Template_mat_slide_toggle_change_4_listener","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","difficulties","difficulty","dataSourceDifficulties","advanced","AddExplorerComponent_Template","AddExplorerComponent_Conditional_0_Template","ConnectionLineColors","ConnectionsManager","QueryDataManager","WiringsHelper","initDomDataSources","eventConnectionDetached","eventConnectionAttached","instanceManager","onConnectionsChangedParent","initWirings","setup","#onConnectionsChanged","target","streamsOutStr","#initDomDataSources","domDs","definition","findDomAndDef","draggable","grid","stop","el","queryDsGuid","finalPos","outCount","dynOut","makeSource","inCount","in","targetEndpointUnlimited","makeTarget","MatTabsModule","ɵɵtextInterpolate2","option_r3","QueryResultComponent_For_20_Template_button_click_0_listener","show","QueryResultComponent_For_20_Conditional_2_Template","QueryResultComponent_For_20_Conditional_3_Template","QueryResultComponent_Conditional_24_div_1_Template","QueryResultComponent_Conditional_24_For_5_Template","parameters","source_r5","Definition","config_r6","QueryResultComponent_For_39_Conditional_2_Template","QueryResultComponent_For_39_For_10_Template","Type","Configuration","stream_r7","testParams","concat","timeUsed","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","streams","QueryResultComponent_Template","QueryResultComponent_Conditional_4_Template","QueryResultComponent_Template_button_click_5_listener","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_Conditional_17_Template","QueryResultComponent_For_20_Template","QueryResultComponent_Conditional_24_Template","QueryResultComponent_div_26_Template","QueryResultComponent_For_39_Template","QueryResultComponent_div_42_Template","QueryResultComponent_For_55_Template","MatTabLabel","MatTab","MatTabGroup","endpointsSvc","info","handleDetached","handleAttached","connectionInfos","getAllConnections","sourceId","targetId","deleteConnection","fireEvent","targetEndpointOverlay","targetLabel","getLabel","getEndpoints","targetHasSameLabel","Math","floor","random","warnings","queryParams","param","paramSyntax","matched","testParamSyntax","midRegex","midMatch","exec","testMid","urlMid","moduleId","oldMidRegex","oldMidMatch","ensureWireEndpointExists","findDataSourceInDom","wiringsRaw","wirings","outDsDomId","outPointDomId","inDsDomId","inPointDomId","wireDetails","w","connect","#connect","uuids","to","#ensureWireEndpointExists","endpointId","sourceGuid","#findDataSourceInDom","groupBy","arr","reduce","groups","dsSet","dsDef","sourceElementId","querySelector","pipeDs","lineCount","linePaintDefault","maxCols","uuidColorMap","nextLineColor","#nextLineColor"],"sourceRoot":"webpack:///","x_google_ignoreList":[3,6,11,17,21]}