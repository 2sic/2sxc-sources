{"version":3,"file":"projects_eav-ui_src_app_app-administration_data-rest-api_data-rest-api_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAA0D;AACmB;AAClB;AACJ;AACA;AACI;AACZ;AACC;AACqC;AACF;AACjC;;;;;;;;;ICL1Ca,4DAAA,oBAA0C;IACxCA,oDAAA,GACF;IAAAA,0DAAA,EAAa;;;;IAFDA,wDAAA,UAAAK,cAAA,CAAAC,MAAA,CAA4B;IACtCN,uDAAA,EACF;IADEA,gEAAA,MAAAK,cAAA,CAAAI,KAAA,MACF;;;ADkBF,MAAOC,oBAAoB;EAC/B,CAAAC,eAAgB;EAChB,CAAAC,YAAa;EAEb,CAAAC,WAAY;EAEZC,YAAA;IALA,MAAAH,eAAgB,GAAGf,gDAAS,CAACG,0DAAmB,CAAC;IACjD,MAAAa,YAAa,GAAGhB,gDAAS,CAACE,wFAAoB,CAAC;IAE/C,MAAAe,WAAY,GAAGzB,qDAAM,CAACC,uDAAW,CAAC;IAkBlC,KAAA0B,YAAY,GAAG,IAAI,CAAC,CAAAJ,eAAgB,CAACK,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC;IAE/D,KAAAC,eAAe,GAAc,IAAI,CAAC,CAAAJ,WAAY,CAACK,KAAK,CAAC;MACnDC,WAAW,EAAE,CAAC,EAAE;KACjB,CAAC;IAnBA;IACAhC,qDAAM,CAAC,MAAK;MACV,MAAMiC,KAAK,GAAG,IAAI,CAACL,YAAY,EAAE;MACjC,IAAIK,KAAK,CAACC,MAAM,KAAK,CAAC,EACpB;MAEF,MAAMC,aAAa,GAAG,IAAI,CAAC,CAAAV,YAAa,CAACW,WAAW,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;MAE3D,MAAMC,IAAI,GAAGL,KAAK,CAACM,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACrB,MAAM,KAAKgB,aAAa,CAAC;MAC1D,IAAIG,IAAI,EACN,IAAI,CAACR,eAAe,CAACW,GAAG,CAAC,aAAa,CAAC,CAACC,QAAQ,CAACJ,IAAI,CAACnB,MAAM,CAAC;IACjE,CAAC,CAAC;EAEJ;EASAwB,WAAWA,CAACC,KAAa;IACvB,IAAI,CAACA,KAAK,EAAE;IACZ,IAAI,CAAC,CAAAnB,YAAa,CAACoB,WAAW,CAAC,CAAC,GAAGD,KAAK,EAAE,CAAC,CAAC;EAC9C;;;uCAhCWrB,oBAAoB;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAuB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCvB7BvC,4DAFJ,cAAoC,wBACwB,gBAC7C;UAAAA,oDAAA,mBAAY;UAAAA,0DAAA,EAAY;UACnCA,4DAAA,oBAA8E;UAApCA,wDAAA,yBAAA0C,gEAAAC,MAAA;YAAA,OAAeH,GAAA,CAAAV,WAAA,CAAAa,MAAA,CAAmB;UAAA,EAAC;UAC3E3C,8DAAA,IAAA6C,mCAAA,yBAAAC,UAAA,CAIC;UAGP9C,0DAFI,EAAa,EACE,EACZ;UAEPA,uDAAA,oBAA+B;;;UAbzBA,wDAAA,cAAAwC,GAAA,CAAAvB,eAAA,CAA6B;UAI7BjB,uDAAA,GAIC;UAJDA,wDAAA,CAAAwC,GAAA,CAAAzB,YAAA,EAAc,CAAAkC,IAAA,EAAO,CAIpB;;;qBDOCvD,qEAAe,EAAAwD,sEAAA,EAAAA,kEAAA,EAAAG,+DAAA,EAAAE,6DAAA,EACfhE,qEAAe,EACfC,kEAAa,EACbC,kEAAa,EACbH,+DAAmB,EAAAmE,4DAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EACnB9D,0DAAY,EACZE,0FAAa;MAAAkE,aAAA;IAAA;EAAA","sources":["./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.ts","./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.html"],"sourcesContent":["import { Component, effect, inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../../../../core';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ContentTypesService } from '../services';\r\n\r\n@Component({\r\n    selector: 'app-data-rest-api',\r\n    imports: [\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        ReactiveFormsModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n    ],\r\n    templateUrl: './data-rest-api.component.html'\r\n})\r\nexport class DataRestApiComponent {\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  #formBuilder = inject(FormBuilder);\r\n\r\n  constructor() {\r\n    // Update form if the url changes and the item is found\r\n    effect(() => {\r\n      const types = this.contentTypes();\r\n      if (types.length === 0)\r\n        return;\r\n\r\n      const urlStaticName = this.#dialogRouter.urlSegments.at(-1);\r\n\r\n      const type = types.find(ct => ct.NameId === urlStaticName);\r\n      if (type)\r\n        this.contentTypeForm.get('contentType').setValue(type.NameId);\r\n    });\r\n\r\n  }\r\n\r\n  contentTypes = this.#contentTypesSvc.getTypesSig(\"Default\", []);\r\n\r\n  contentTypeForm: FormGroup = this.#formBuilder.group({\r\n    contentType: ['']\r\n  });\r\n\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.#dialogRouter.navRelative([`${event}`]);\r\n  }\r\n}\r\n","<form [formGroup]=\"contentTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Content-Type</mat-label>\r\n    <mat-select formControlName=\"contentType\" (valueChange)=\"openRestApi($event)\">\r\n      @for (contentType of contentTypes().sort() ; track contentType.Id) {\r\n        <mat-option [value]=\"contentType.NameId\" >\r\n          {{ contentType.Label }}\r\n        </mat-option>\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n"],"names":["effect","inject","FormBuilder","ReactiveFormsModule","MatButtonModule","MatCardModule","MatIconModule","MatSelectModule","RouterOutlet","transient","SxcGridModule","DialogRoutingService","ContentTypesService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","contentType_r1","NameId","ɵɵadvance","ɵɵtextInterpolate1","Label","DataRestApiComponent","contentTypesSvc","dialogRouter","formBuilder","constructor","contentTypes","getTypesSig","contentTypeForm","group","contentType","types","length","urlStaticName","urlSegments","at","type","find","ct","get","setValue","openRestApi","event","navRelative","selectors","decls","vars","consts","template","DataRestApiComponent_Template","rf","ctx","ɵɵlistener","DataRestApiComponent_Template_mat_select_valueChange_4_listener","$event","ɵɵrepeaterCreate","DataRestApiComponent_For_6_Template","_forTrack0","ɵɵelement","ɵɵrepeater","sort","i1","MatFormField","MatLabel","i2","MatSelect","i3","MatOption","i4","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}