{"version":3,"file":"default-projects_eav-ui_src_app_features_feature-icon_feature-icon_component_ts-projects_eav--06ee1b.js","mappings":"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","sources":["./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/features/feature-icon/feature-icon.component.ts","./projects/eav-ui/src/app/features/feature-icon/feature-icon.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./node_modules/@angular/material/fesm2022/checkbox.mjs"],"sourcesContent":["// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { classLog } from '../logging';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  log = classLog({ClickStopPropagationDirective});\r\n\r\n  // Log constructor to detect that it was really attached/created\r\n  constructor() {\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.log.a('onClick', { event });\r\n    event.stopPropagation();\r\n\r\n    // This should never be added here, as it's often on a link, and the default behavior (link open) should happen\r\n    // event.preventDefault();\r\n  }\r\n\r\n}\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n    selector: 'app-feature-icon',\r\n    templateUrl: './feature-icon.component.html',\r\n    imports: [\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class FeatureIconComponent extends FeatureComponentBase { }\r\n","@if (show()) {\r\n  <mat-icon class=\"feature-icon\" tippyTranslate=\"Features.NotActivated\" [tippyData]=\"{ name: featureNameId() }\" (click)=\"openDialog()\">diamond</mat-icon>\r\n}","import { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n    selector: 'app-feature-text-info',\r\n    templateUrl: './feature-text-info.component.html',\r\n    styleUrls: ['./feature-text-info.component.scss'],\r\n    imports: [\r\n        MatIconModule,\r\n        TranslateModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  asInfo = input<boolean>(false);\r\n\r\n  constructor() { super(); }\r\n\r\n  icon = computedObj('icon', () => this.asInfo() ? 'info' : 'warning');\r\n}\r\n","@if (show()) {\r\n  <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: feature()\">\r\n    <!-- Icon column -->\r\n    <mat-icon class=\"icon icon-{{icon()}}\">{{ icon() }}</mat-icon>\r\n    <!-- Text column -->\r\n    <div class=\"feature-text-info-content\">\r\n      <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n      <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n}\r\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, inject, ElementRef, ChangeDetectorRef, NgZone, ANIMATION_MODULE_TYPE, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { _StructuralStylesLoader, MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n        disabledInteractive: false,\n    };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n    /** The initial state of the component before any user interaction. */\n    TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n    /** The state representing the component when it's becoming checked. */\n    TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n    /** The state representing the component when it's becoming unchecked. */\n    TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n    /** The state representing the component when it's becoming indeterminate. */\n    TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n    /** The source checkbox of the event. */\n    source;\n    /** The new `checked` value of the checkbox. */\n    checked;\n}\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _ngZone = inject(NgZone);\n    _animationMode = inject(ANIMATION_MODULE_TYPE, { optional: true });\n    _options = inject(MAT_CHECKBOX_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    /** Focuses the checkbox. */\n    focus() {\n        this._inputElement.nativeElement.focus();\n    }\n    /** Creates the change event that will be emitted by the checkbox. */\n    _createChangeEvent(isChecked) {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    /** Gets the element on which to add the animation CSS classes. */\n    _getAnimationTargetElement() {\n        return this._inputElement?.nativeElement;\n    }\n    /** CSS classes to add when transitioning between the different checkbox states. */\n    _animationClasses = {\n        uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n        uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n        checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n        checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n        indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n        indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked',\n    };\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     */\n    ariaLabel = '';\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    ariaLabelledby = null;\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    ariaDescribedby;\n    /**\n     * Users can specify the `aria-expanded` attribute which will be forwarded to the input element\n     */\n    ariaExpanded;\n    /**\n     * Users can specify the `aria-controls` attribute which will be forwarded to the input element\n     */\n    ariaControls;\n    /** Users can specify the `aria-owns` attribute which will be forwarded to the input element */\n    ariaOwns;\n    _uniqueId;\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    id;\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Whether the checkbox is required. */\n    required;\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    labelPosition = 'after';\n    /** Name value will be applied to the input element if present */\n    name = null;\n    /** Event emitted when the checkbox's `checked` value changes. */\n    change = new EventEmitter();\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    indeterminateChange = new EventEmitter();\n    /** The value attribute of the native input element */\n    value;\n    /** Whether the checkbox has a ripple. */\n    disableRipple;\n    /** The native `<input type=\"checkbox\">` element */\n    _inputElement;\n    /** The native `<label>` element */\n    _labelElement;\n    /** Tabindex for the checkbox. */\n    tabIndex;\n    // TODO(crisbeto): this should be a ThemePalette, but some internal apps were abusing\n    // the lack of type checking previously and assigning random strings.\n    /**\n     * Theme color of the checkbox. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/checkbox/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether the checkbox should remain interactive when it is disabled. */\n    disabledInteractive;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    _currentAnimationClass = '';\n    _currentCheckState = TransitionCheckState.Init;\n    _controlValueAccessorChangeFn = () => { };\n    _validatorChangeFn = () => { };\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n        this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n        this.id = this._uniqueId = inject(_IdGenerator).getId('mat-mdc-checkbox-');\n        this.disabledInteractive = this._options?.disabledInteractive ?? false;\n    }\n    ngOnChanges(changes) {\n        if (changes['required']) {\n            this._validatorChangeFn();\n        }\n    }\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _checked = false;\n    /** Whether the checkbox is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _disabled = false;\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            }\n            else {\n                this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _indeterminate = false;\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    // Implemented as a part of Validator.\n    validate(control) {\n        return this.required && control.value !== true ? { 'required': true } : null;\n    }\n    // Implemented as a part of Validator.\n    registerOnValidatorChange(fn) {\n        this._validatorChangeFn = fn;\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._getAnimationTargetElement();\n        if (oldState === newState || !element) {\n            return;\n        }\n        if (this._currentAnimationClass) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n        const clickAction = this._options?.clickAction;\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if ((this.disabled && this.disabledInteractive) ||\n            (!this.disabled && clickAction === 'noop')) {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _onBlur() {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        switch (oldState) {\n            case TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === TransitionCheckState.Checked) {\n                    return this._animationClasses.uncheckedToChecked;\n                }\n                else if (newState == TransitionCheckState.Indeterminate) {\n                    return this._checked\n                        ? this._animationClasses.checkedToIndeterminate\n                        : this._animationClasses.uncheckedToIndeterminate;\n                }\n                break;\n            case TransitionCheckState.Unchecked:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.uncheckedToChecked\n                    : this._animationClasses.uncheckedToIndeterminate;\n            case TransitionCheckState.Checked:\n                return newState === TransitionCheckState.Unchecked\n                    ? this._animationClasses.checkedToUnchecked\n                    : this._animationClasses.checkedToIndeterminate;\n            case TransitionCheckState.Indeterminate:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.indeterminateToChecked\n                    : this._animationClasses.indeterminateToUnchecked;\n        }\n        return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n    _onInputClick() {\n        this._handleInputClick();\n    }\n    _onTouchTargetClick() {\n        this._handleInputClick();\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /**\n     *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n     *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n     *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n     *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n     *  bubbles when the label is clicked.\n     */\n    _preventBubblingFromLabel(event) {\n        if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n            event.stopPropagation();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatCheckbox, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.0\", type: MatCheckbox, isStandalone: true, selector: \"mat-checkbox\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], ariaExpanded: [\"aria-expanded\", \"ariaExpanded\", booleanAttribute], ariaControls: [\"aria-controls\", \"ariaControls\"], ariaOwns: [\"aria-owns\", \"ariaOwns\"], id: \"id\", required: [\"required\", \"required\", booleanAttribute], labelPosition: \"labelPosition\", name: \"name\", value: \"value\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? undefined : numberAttribute(value))], color: \"color\", disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute], checked: [\"checked\", \"checked\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], indeterminate: [\"indeterminate\", \"indeterminate\", booleanAttribute] }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, host: { properties: { \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\", \"class.mdc-checkbox--disabled\": \"disabled\", \"id\": \"id\", \"class.mat-mdc-checkbox-disabled\": \"disabled\", \"class.mat-mdc-checkbox-checked\": \"checked\", \"class.mat-mdc-checkbox-disabled-interactive\": \"disabledInteractive\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"mat-accent\\\"\" }, classAttribute: \"mat-mdc-checkbox\" }, providers: [\n            MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR,\n            {\n                provide: NG_VALIDATORS,\n                useExisting: MatCheckbox,\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_labelElement\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matCheckbox\"], usesOnChanges: true, ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-controls]=\\\"ariaControls\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n           [attr.aria-owns]=\\\"ariaOwns\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', host: {\n                        'class': 'mat-mdc-checkbox',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                        '[class.mdc-checkbox--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Add classes that users can use to more easily target disabled or checked checkboxes.\n                        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n                        '[class.mat-mdc-checkbox-checked]': 'checked',\n                        '[class.mat-mdc-checkbox-disabled-interactive]': 'disabledInteractive',\n                        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"',\n                    }, providers: [\n                        MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR,\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: MatCheckbox,\n                            multi: true,\n                        },\n                    ], exportAs: 'matCheckbox', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-controls]=\\\"ariaControls\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n           [attr.aria-owns]=\\\"ariaOwns\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], ariaExpanded: [{\n                type: Input,\n                args: [{ alias: 'aria-expanded', transform: booleanAttribute }]\n            }], ariaControls: [{\n                type: Input,\n                args: ['aria-controls']\n            }], ariaOwns: [{\n                type: Input,\n                args: ['aria-owns']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _labelElement: [{\n                type: ViewChild,\n                args: ['label']\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? undefined : numberAttribute(value)) }]\n            }], color: [{\n                type: Input\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], indeterminate: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.0\", type: MatCheckboxRequiredValidator, isStandalone: true, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatCheckboxRequiredValidatorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, imports: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCheckboxRequiredValidator],\n                    exports: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.0\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule], exports: [MatCheckbox, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCheckbox, MatCommonModule],\n                    exports: [MatCheckbox, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxRequiredValidatorModule };\n"],"names":["FeatureNames","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","classLog","ClickStopPropagationDirective","constructor","log","a","onClick","event","stopPropagation","selectors","hostBindings","ClickStopPropagationDirective_HostBindings","rf","ctx","i0","ɵɵlistener","ClickStopPropagationDirective_click_HostBindingHandler","$event","NgClass","NgTemplateOutlet","input","MatFormFieldModule","ɵɵelementContainer","ɵɵelementStart","ɵɵtemplate","FieldHintComponent_Case_1_ng_container_1_Template","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","ɵɵprojection","FieldHintComponent","isError","isShort","toggleIsShort","inputs","ngContentSelectors","_c0","decls","vars","consts","template","FieldHintComponent_Template","FieldHintComponent_Template_div_click_0_listener","ɵɵrestoreView","_r1","ɵɵresetView","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","ɵɵpureFunction1","_c1","ɵɵconditional","tmp_2_0","i1","MatHint","MatError","styles","MatIconModule","TippyDirective","FeatureComponentBase","FeatureIconComponent_Conditional_0_Template_mat_icon_click_0_listener","ctx_r1","ɵɵnextContext","openDialog","ɵɵtext","featureNameId","FeatureIconComponent","__ngFactoryType__","features","ɵɵInheritDefinitionFeature","FeatureIconComponent_Template","FeatureIconComponent_Conditional_0_Template","show","MatIcon","encapsulation","TranslateModule","computedObj","FeatureTextInfoComponent_Conditional_0_Template_div_click_0_listener","ɵɵpipeBind2","feature","ɵɵclassMapInterpolate1","icon","ɵɵtextInterpolate","ɵɵpipeBind1","FeatureTextInfoComponent","asInfo","FeatureTextInfoComponent_Template","FeatureTextInfoComponent_Conditional_0_Template","i2","TranslatePipe","_IdGenerator","InjectionToken","forwardRef","inject","ElementRef","ChangeDetectorRef","NgZone","ANIMATION_MODULE_TYPE","EventEmitter","HostAttributeToken","booleanAttribute","numberAttribute","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","ViewChild","Directive","NgModule","NG_VALUE_ACCESSOR","NG_VALIDATORS","CheckboxRequiredValidator","_StructuralStylesLoader","MatRipple","_MatInternalFormField","MatCommonModule","_CdkPrivateStyleLoader","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","disabledInteractive","TransitionCheckState","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatCheckbox","multi","MatCheckboxChange","source","checked","defaults","_elementRef","_changeDetectorRef","_ngZone","_animationMode","optional","_options","focus","_inputElement","nativeElement","_createChangeEvent","isChecked","_getAnimationTargetElement","_animationClasses","uncheckedToChecked","uncheckedToIndeterminate","checkedToUnchecked","checkedToIndeterminate","indeterminateToChecked","indeterminateToUnchecked","ariaLabel","ariaLabelledby","ariaDescribedby","ariaExpanded","ariaControls","ariaOwns","_uniqueId","id","inputId","required","labelPosition","name","change","indeterminateChange","value","disableRipple","_labelElement","tabIndex","_onTouched","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_validatorChangeFn","load","parseInt","getId","ngOnChanges","changes","ngAfterViewInit","_syncIndeterminate","_indeterminate","_checked","markForCheck","disabled","_disabled","indeterminate","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","emit","_isRippleDisabled","_onLabelTextChange","detectChanges","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","validate","control","registerOnValidatorChange","newState","oldState","element","classList","remove","_getAnimationClassForCheckStateTransition","length","add","animationClass","runOutsideAngular","setTimeout","_emitChangeEvent","toggle","_handleInputClick","Promise","resolve","then","_onInteractionEvent","_onBlur","nativeCheckbox","_onInputClick","_onTouchTargetClick","_preventBubblingFromLabel","target","contains","ɵfac","MatCheckbox_Factory","ɵcmp","ɵɵdefineComponent","type","viewQuery","MatCheckbox_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","MatCheckbox_HostBindings","ɵɵhostProperty","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","undefined","outputs","exportAs","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","MatCheckbox_Template","ɵɵgetCurrentView","ɵɵprojectionDef","MatCheckbox_Template_div_click_0_listener","MatCheckbox_Template_div_click_3_listener","MatCheckbox_Template_input_blur_4_listener","MatCheckbox_Template_input_click_4_listener","MatCheckbox_Template_input_change_4_listener","ɵɵelement","ɵɵnamespaceSVG","ɵɵnamespaceHTML","checkbox_r2","ɵɵreference","dependencies","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","providers","None","OnPush","imports","alias","transform","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","ɵMatCheckboxRequiredValidator_BaseFactory","MatCheckboxRequiredValidator_Factory","ɵɵgetInheritedFactory","ɵdir","ɵɵdefineDirective","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","MatCheckboxModule","MatCheckboxModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[8]}