{"version":3,"file":"projects_eav-ui_src_app_content-type-fields_edit-content-type-fields_edit-content-type-fields-974b18.js","mappings":"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","sources":["./projects/eav-ui/src/app/shared/fields/input-type-catalog.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields.component.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./node_modules/rxjs/dist/esm/internal/operators/reduce.js"],"sourcesContent":["export const InputTypeCatalog = {\r\n  // Boolean\r\n  BooleanDefault: 'boolean-default',\r\n  BooleanTristate: 'boolean-tristate',\r\n\r\n  // Custom\r\n  CustomDefault: 'custom-default',\r\n  CustomGps: 'custom-gps',\r\n  CustomJsonEditor: 'custom-json-editor',\r\n\r\n  // Date / Time\r\n  DateTimeDefault: 'datetime-default',\r\n\r\n  DefaultSuffix: '-default',\r\n\r\n  // Empty\r\n  EmptyDefault: 'empty-default',\r\n  EmptyEnd: 'empty-end',\r\n  EmptyMessage: 'empty-message',\r\n\r\n  // Entity - all pickers\r\n  EntityContentBlocks: 'entity-content-blocks',\r\n  EntityDefault: 'entity-default',\r\n  EntityQuery: 'entity-query',\r\n\r\n  // External\r\n  ExternalWebComponent: 'external-web-component',\r\n\r\n  // Hyperlink / File\r\n  HyperlinkDefault: 'hyperlink-default',\r\n  HyperlinkLibrary: 'hyperlink-library',\r\n\r\n  // Numbers\r\n  NumberDefault: 'number-default',\r\n  NumberDropdown: 'number-dropdown', // picker\r\n\r\n  // String\r\n  StringDefault: 'string-default',\r\n  StringDropdown: 'string-dropdown', // picker\r\n  StringDropdownQuery: 'string-dropdown-query', // picker\r\n  StringFontIconPicker: 'string-font-icon-picker',\r\n  StringJson: 'string-json',\r\n  StringTemplatePicker: 'string-template-picker', // picker\r\n  StringUrlPath: 'string-url-path',\r\n  StringWysiwyg: 'string-wysiwyg',\r\n\r\n  /** New Pickers v17.x */\r\n  EntityPicker: 'entity-picker',\r\n  StringPicker: 'string-picker',\r\n  NumberPicker: 'number-picker',\r\n\r\n  /** for all situations where we need a fallback; new v16.04 */\r\n  Unknown: 'unknown',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { NgClass } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, HostBinding, linkedSignal, QueryList, Signal, signal, ViewChild, ViewChildren } from '@angular/core';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { catchError, concatMap, filter, of, toArray } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { fieldNameError, fieldNamePattern } from '../../app-administration/constants/field-name.patterns';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { ContentTypesFieldsService } from '../../shared/fields/content-types-fields.service';\r\nimport { DataTypeCatalog } from '../../shared/fields/data-type-catalog';\r\nimport { Field, FieldInputTypeOption } from '../../shared/fields/field.model';\r\nimport { InputTypeCatalog } from '../../shared/fields/input-type-catalog';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { calculateTypeIcon, calculateTypeLabel } from '../content-type-fields.helpers';\r\nimport { ReservedNamesValidatorDirective } from './reserved-names.directive';\r\n\r\ninterface Hints {\r\n  input: string;\r\n  data: string;\r\n}\r\n\r\ntype FieldSubset = Pick<Field, 'Id' | 'Type' | 'InputType' | 'StaticName' | 'IsTitle' | 'SortOrder'>;\r\n\r\n@Component({\r\n  selector: 'app-edit-content-type-fields',\r\n  templateUrl: './edit-content-type-fields.component.html',\r\n  styleUrls: ['./edit-content-type-fields.component.scss'],\r\n  imports: [\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReservedNamesValidatorDirective,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    TranslateModule,\r\n    FieldHintComponent,\r\n  ]\r\n})\r\nexport class EditContentTypeFieldsComponent extends BaseComponent implements AfterViewInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @ViewChild('ngForm', { read: NgForm }) private form: NgForm;\r\n  @ViewChildren('autoFocusInputField') autoFocusInputField!: QueryList<ElementRef>;\r\n\r\n  #typesSvc = transient(ContentTypesService);\r\n  #typesFieldsSvc = transient(ContentTypesFieldsService);\r\n\r\n  constructor(\r\n    protected dialog: MatDialogRef<EditContentTypeFieldsComponent>,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super();\r\n    this.dialog.disableClose = true;\r\n    this.subscriptions.add(\r\n      this.dialog.backdropClick().subscribe(_ => {\r\n        if (this.form.dirty) {\r\n          const confirmed = confirm('You have unsaved changes. Are you sure you want to close this dialog?');\r\n          if (!confirmed) return;\r\n        }\r\n        this.dialog.close();\r\n      })\r\n    );\r\n  }\r\n\r\n  // External functions / constants to pass to the view\r\n  fieldNamePattern = fieldNamePattern;\r\n  fieldNameError = fieldNameError;\r\n  findIcon = calculateTypeIcon;\r\n  findLabel = calculateTypeLabel;\r\n\r\n  /** Edit mode is either not set (new fields) or edit-name / edit-inputType */\r\n  editMode = this.route.snapshot.paramMap.get('editMode') as 'name' | 'inputType';\r\n  filteredInputTypeOptions: FieldInputTypeOption[][] = [];\r\n  saving = signal(false);\r\n\r\n  /** Data types such as string, number, ... */\r\n  dataTypes = this.#typesFieldsSvc.dataTypes();\r\n\r\n  #inputTypeOptions = this.#typesFieldsSvc.getInputTypes();\r\n  #contentTypeSig = this.#typesSvc.getTypeSig(this.route.snapshot.paramMap.get('contentTypeStaticName'), null);\r\n\r\n  // Existing fields - to setup reserved names and initialize the fields\r\n  existingFieldsLazy = computedObj<Signal<Field[]>>('rawFields', () => {\r\n    const contentType = this.#contentTypeSig();\r\n    return contentType\r\n      ? this.#typesFieldsSvc.getFieldsSig(contentType.NameId)\r\n      : signal([]);\r\n  });\r\n\r\n  fields = (() => {\r\n    // Get the fields once the data is ready\r\n    const initial = computedObj('fields', () => {\r\n      const fields = this.existingFieldsLazy()();\r\n      if (this.editMode != null) {\r\n        if (fields.length === 0) return [];\r\n        const routeId = this.route.snapshot.paramMap.get('id');\r\n        const editFieldId = routeId ? parseInt(routeId, 10) : null;\r\n        const editField = fields.find(field => field.Id === editFieldId);\r\n        return [editField];\r\n      } else\r\n        return this.#generateNewList(fields.length);\r\n    });\r\n\r\n    return linkedSignal({\r\n      source: initial,\r\n      computation: fields => fields,\r\n    });\r\n  })();\r\n\r\n  // Figure out the reserved names which should not be used as field names\r\n  #reservedNamesSystem = this.#typesFieldsSvc.reservedNames();\r\n  reservedNames = computedObj('reservedNamesAll', () => {\r\n    // setup watchers\r\n    const fields = this.existingFieldsLazy()();\r\n    const reservedNames = this.#reservedNamesSystem();\r\n    if (fields.length === 0)\r\n      return reservedNames;\r\n    const merged = ReservedNamesValidatorDirective.mergeReserved(reservedNames, fields);\r\n    \r\n    // If we're about to rename, allow the current name to be reused\r\n    if (this.editMode === 'name')\r\n      delete merged[fields[0].StaticName];\r\n    return merged;\r\n  });\r\n\r\n  ngAfterViewInit(): void {\r\n    // Wait for the inputFields to be available\r\n    // But delay execution to ensure the view is fully rendered\r\n    if (this.autoFocusInputField)\r\n      setTimeout(() => this.autoFocusInputField.first?.nativeElement?.focus(), 250);\r\n  }\r\n\r\n  #generateNewList(existingFieldCount: number): FieldSubset[] {\r\n    return [...Array(8).keys()].map(k => ({\r\n      Id: 0,\r\n      Type: DataTypeCatalog.String,\r\n      InputType: InputTypeCatalog.StringDefault,\r\n      StaticName: '',\r\n      // first one is title, if there were no fields before\r\n      IsTitle: existingFieldCount === 0 && k === 0,\r\n      SortOrder: existingFieldCount + k + 1,\r\n    } satisfies FieldSubset));\r\n  }\r\n\r\n  /** 2D array of all possible options (by field index) */\r\n  inputTypeOptions = computedObj('inputTypeOptions', () => {\r\n    const all = this.#inputTypeOptions();\r\n    const fields = this.fields();\r\n    return fields.map((field, i) => {\r\n      return all.filter(option => option.dataType === field.Type.toLocaleLowerCase());\r\n    });\r\n  });\r\n\r\n  updateFieldPart(index: number, patch: Partial<Field>) {\r\n    this.fields.update(fields => [...fields].map((f, i) => (i !== index) ? f : ({ ...f, ...patch })));\r\n  }\r\n\r\n  setFieldType(index: number, type: string) {\r\n    // First update the field, as we'll access this again indirectly through other signals\r\n    this.updateFieldPart(index, { Type: type });\r\n\r\n    // Check if it has a xxx-default like string-default in the list\r\n    const defaultInputName = type.toLocaleLowerCase() + InputTypeCatalog.DefaultSuffix;\r\n    const options = this.inputTypeOptions()[index];\r\n    const inputName = options.find(option => option.inputType === defaultInputName)?.inputType\r\n      ?? options[0].inputType;\r\n    this.updateFieldPart(index, { InputType: inputName });\r\n  }\r\n\r\n  hints = computedObj('hints', () => {\r\n    const fields = this.fields();\r\n    return fields.map((field, i) => {\r\n      const dataType = this.dataTypes().find(dataType => dataType.name === field.Type);\r\n      const inputType = this.#inputTypeOptions().find(option => option.inputType === field.InputType);\r\n      return {\r\n        data: dataType?.description ?? '',\r\n        input: inputType?.isObsolete\r\n          ? `OBSOLETE - ${inputType.obsoleteMessage}`\r\n          : inputType?.description ?? '',\r\n      } satisfies Hints;\r\n    });\r\n  });\r\n\r\n  getInputTypeOption(inputName: string) {\r\n    return this.#inputTypeOptions().find(option => option.inputType === inputName);\r\n  }\r\n\r\n  save() {\r\n    this.saving.set(true);\r\n    this.snackBar.open('Saving...');\r\n\r\n    // Prepare finalize-action to reuse below\r\n    const doneAndClose = () => {\r\n      this.saving.set(false);\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.dialog.close();\r\n    }\r\n\r\n    if (this.editMode != null) {\r\n      const field = this.fields()[0];\r\n      if (this.editMode === 'name') {\r\n        this.#typesFieldsSvc\r\n          .rename(field.Id, this.#contentTypeSig().Id, field.StaticName)\r\n          .subscribe(() => doneAndClose());\r\n      } else if (this.editMode === 'inputType') {\r\n        this.#typesFieldsSvc\r\n          .updateInputType(field.Id, field.StaticName, field.InputType)\r\n          .subscribe(() => doneAndClose());\r\n      }\r\n    } else {\r\n      of(...this.fields())\r\n        .pipe(\r\n          filter(field => !!field.StaticName),\r\n          concatMap(field =>\r\n            this.#typesFieldsSvc.add(field, this.#contentTypeSig().Id).pipe(catchError(_ => of(null)))\r\n          ),\r\n          toArray(),\r\n        )\r\n        .subscribe(() => doneAndClose());\r\n    }\r\n  }\r\n}\r\n","<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      @if (editMode === undefined) {\r\n        Fields\r\n      }\r\n      @if (editMode === null) {\r\n        Add Fields\r\n      }\r\n      @if (editMode != null) {\r\n        Edit Field\r\n      }\r\n    </div>\r\n  </div>\r\n  @if (fields().length) {\r\n    <form #ngForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n      <div class=\"eav-dialog-content\">\r\n        @for (field of fields(); track field.SortOrder; let i = $index) {\r\n          <div class=\"eav-row-container\">\r\n            <div class=\"eav-edit-input\">\r\n              <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                <mat-label>Name</mat-label>\r\n                <input\r\n                  matInput\r\n                  [pattern]=\"fieldNamePattern\"\r\n                  [appReservedNames]=\"reservedNames()\"\r\n                  [(ngModel)]=\"field.StaticName\"\r\n                  [name]=\"'StaticName' + i\"\r\n                  #staticName=\"ngModel\"\r\n                  [disabled]=\"editMode === 'inputType'\"\r\n                  #autoFocusInputField\r\n                />\r\n              </mat-form-field>\r\n              @if (staticName.touched && staticName.errors) {\r\n                @if (staticName.errors.pattern) {\r\n                  <app-field-hint [isError]=\"true\">{{ fieldNameError }}</app-field-hint>\r\n                }\r\n                @if (staticName.errors.reservedNames) {\r\n                  <app-field-hint [isError]=\"true\">\r\n                    {{ staticName.errors.reservedNames }}\r\n                  </app-field-hint>\r\n                }\r\n              }\r\n            </div>\r\n            <div class=\"eav-edit-input\">\r\n              <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                <mat-label>Data Type</mat-label>\r\n                <mat-select\r\n                  (selectionChange)=\"setFieldType(i, $event.value)\"\r\n                  [ngModel]=\"field.Type\"\r\n                  [name]=\"'Type' + i\"\r\n                  [disabled]=\"editMode != null\"\r\n                  panelClass=\"eav-type-field-type-select\"\r\n                  panelWidth=\"\"\r\n                >\r\n                  <mat-select-trigger>\r\n                    <mat-icon class=\"eav-type-icon\">{{ findIcon(field.Type) }}</mat-icon>\r\n                    <span>{{ findLabel(field.Type) }}</span>\r\n                  </mat-select-trigger>\r\n                  @for (dataType of dataTypes(); track dataType) {\r\n                    <mat-option [value]=\"dataType.name\">\r\n                      {{ dataType.label }}\r\n                      <!-- Icon must come last; Angular will put it first. Otherwise we can't type the name of the label to quickly find an entry -->\r\n                      <mat-icon class=\"eav-type-icon\">{{ dataType.icon }}</mat-icon>\r\n                    </mat-option>\r\n                  }\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <app-field-hint>{{ hints()[i].data }}</app-field-hint>\r\n            </div>\r\n            <div class=\"eav-edit-input\">\r\n              <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                <mat-label>Input Type</mat-label>\r\n                <mat-select\r\n                  (selectionChange)=\"updateFieldPart(i, { InputType: $event.value })\"\r\n                  [ngModel]=\"field.InputType\"\r\n                  [name]=\"'InputType' + i\"\r\n                  [disabled]=\"editMode === 'name'\"\r\n                  panelClass=\"eav-type-field-input-type-select\"\r\n                  panelWidth=\"\"\r\n                >\r\n                  <mat-select-trigger>\r\n                    <span>{{ getInputTypeOption(field.InputType)?.label }}</span>\r\n                    <mat-icon class=\"eav-input-icon\">{{ getInputTypeOption(field.InputType)?.icon }}</mat-icon>\r\n                  </mat-select-trigger>\r\n                  @for (option of inputTypeOptions()[i]; track option) {\r\n                    <mat-option [value]=\"option.inputType\" [ngClass]=\"{ 'eav-input-obsolete': option.isObsolete }\">\r\n                      {{ option.label }}\r\n                      @if (option.icon) {\r\n                        <!-- span is needed here because <mat-option> by default puts mat-icon to the beginning -->\r\n                        <span>\r\n                          <mat-icon class=\"eav-input-icon\">{{ option.icon }}</mat-icon>\r\n                        </span>\r\n                      }\r\n                    </mat-option>\r\n                  }\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <app-field-hint>{{ hints()[i].input }}</app-field-hint>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      <!-- Save / cancel buttons -->\r\n      <mat-dialog-actions>\r\n        <div class=\"spacer\"></div>\r\n        <button mat-raised-button type=\"button\" (click)=\"dialog.close()\">Cancel</button>\r\n        <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!ngForm.form.valid || saving()\">Save</button>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  }\r\n</div>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { scanInternals } from './scanInternals';\nimport { operate } from '../util/lift';\nexport function reduce(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n"],"names":["InputTypeCatalog","BooleanDefault","BooleanTristate","CustomDefault","CustomGps","CustomJsonEditor","DateTimeDefault","DefaultSuffix","EmptyDefault","EmptyEnd","EmptyMessage","EntityContentBlocks","EntityDefault","EntityQuery","ExternalWebComponent","HyperlinkDefault","HyperlinkLibrary","NumberDefault","NumberDropdown","StringDefault","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringJson","StringTemplatePicker","StringUrlPath","StringWysiwyg","EntityPicker","StringPicker","NumberPicker","Unknown","NgClass","ElementRef","linkedSignal","QueryList","Signal","signal","FormsModule","NgForm","MatButtonModule","MatOptionModule","MatDialogActions","MatDialogRef","MatFormFieldModule","MatIconModule","MatInputModule","MatSelectModule","MatSnackBar","ActivatedRoute","TranslateModule","catchError","concatMap","filter","of","toArray","transient","fieldNameError","fieldNamePattern","ContentTypesService","BaseComponent","FieldHintComponent","ContentTypesFieldsService","DataTypeCatalog","computedObj","calculateTypeIcon","calculateTypeLabel","ReservedNamesValidatorDirective","i0","ɵɵtext","ɵɵelementStart","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","ɵɵtextInterpolate1","staticName_r5","errors","reservedNames","ɵɵtemplate","EditContentTypeFieldsComponent_Conditional_6_For_4_Conditional_8_Conditional_0_Template","EditContentTypeFieldsComponent_Conditional_6_For_4_Conditional_8_Conditional_1_Template","ɵɵconditional","pattern","dataType_r7","name","label","icon","option_r8","EditContentTypeFieldsComponent_Conditional_6_For_4_For_34_Conditional_2_Template","inputType","ɵɵpureFunction1","_c2","isObsolete","ɵɵtwoWayListener","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_input_ngModelChange_5_listener","$event","field_r4","ɵɵrestoreView","_r3","$implicit","ɵɵtwoWayBindingSet","StaticName","ɵɵresetView","EditContentTypeFieldsComponent_Conditional_6_For_4_Conditional_8_Template","ɵɵlistener","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_selectionChange_13_listener","ɵ$index_18_r6","$index","ɵɵnextContext","setFieldType","value","ɵɵrepeaterCreate","EditContentTypeFieldsComponent_Conditional_6_For_4_For_20_Template","ɵɵrepeaterTrackByIdentity","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_selectionChange_27_listener","updateFieldPart","InputType","EditContentTypeFieldsComponent_Conditional_6_For_4_For_34_Template","ɵɵtwoWayProperty","editMode","touched","Type","findIcon","findLabel","ɵɵrepeater","dataTypes","hints","data","tmp_31_0","getInputTypeOption","tmp_32_0","inputTypeOptions","input","EditContentTypeFieldsComponent_Conditional_6_Template_form_ngSubmit_0_listener","_r1","save","EditContentTypeFieldsComponent_Conditional_6_For_4_Template","_forTrack0","ɵɵelement","EditContentTypeFieldsComponent_Conditional_6_Template_button_click_7_listener","dialog","close","fields","ngForm_r9","form","valid","saving","EditContentTypeFieldsComponent","typesSvc","typesFieldsSvc","constructor","route","snackBar","hostClass","snapshot","paramMap","get","filteredInputTypeOptions","getInputTypes","contentTypeSig","getTypeSig","existingFieldsLazy","contentType","getFieldsSig","NameId","initial","length","routeId","editFieldId","parseInt","editField","find","field","Id","generateNewList","source","computation","reservedNamesSystem","merged","mergeReserved","all","map","i","option","dataType","toLocaleLowerCase","description","obsoleteMessage","disableClose","subscriptions","add","backdropClick","subscribe","_","dirty","confirmed","confirm","ngAfterViewInit","autoFocusInputField","setTimeout","first","nativeElement","focus","#generateNewList","existingFieldCount","Array","keys","k","String","IsTitle","SortOrder","index","patch","update","f","type","defaultInputName","options","inputName","set","open","doneAndClose","duration","rename","updateInputType","pipe","ɵɵdirectiveInject","i1","i2","i3","selectors","viewQuery","EditContentTypeFieldsComponent_Query","rf","ctx","ɵɵhostProperty","EditContentTypeFieldsComponent_Conditional_3_Template","EditContentTypeFieldsComponent_Conditional_4_Template","EditContentTypeFieldsComponent_Conditional_5_Template","EditContentTypeFieldsComponent_Conditional_6_Template","undefined","i4","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","PatternValidator","NgModel","i5","MatFormField","MatLabel","i6","MatInput","i7","MatSelect","MatSelectTrigger","i8","MatOption","i9","MatIcon","i10","MatButton","styles","NgTemplateOutlet","ɵɵelementContainer","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","ɵɵprojection","isError","isShort","toggleIsShort","inputs","ngContentSelectors","_c0","decls","vars","consts","template","FieldHintComponent_Template","FieldHintComponent_Template_div_click_0_listener","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","_c1","tmp_2_0","MatHint","MatError","scanInternals","operate","reduce","accumulator","seed","arguments"],"sourceRoot":"webpack:///","x_google_ignoreList":[5]}