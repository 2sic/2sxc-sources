{"version":3,"file":"projects_eav-ui_src_app_app-administration_data_data_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACuF;AAC1C;AACc;AACF;AACG;AACM;AACX;AACI;AACD;AACI;AACJ;AACV;AAC4C;AAEhC;AACd;AACwB;AACH;AACS;AACL;AAEoB;AACC;AACxB;AACmB;AACd;AACH;AACE;AACC;AACY;AACF;AACf;AACc;AAGV;AACO;AACF;AACH;AACH;;;;;;;;;;;IChB3D2C,6DAAA,oBAAuC;IACrCA,qDAAA,GACF;IAAAA,2DAAA,EAAa;;;;IAFDA,yDAAA,UAAAK,cAAA,CAAAC,IAAA,CAA0B;IACpCN,wDAAA,EACF;IADEA,iEAAA,MAAAK,cAAA,CAAAI,KAAA,MACF;;;;;;IAYJT,6DAAA,iBAOC;IADCA,yDAAA,mBAAAW,8DAAA;MAAAX,4DAAA,CAAAa,GAAA;MAAA,MAAAC,MAAA,GAAAd,4DAAA;MAAA,OAAAA,0DAAA,CAASc,MAAA,CAAAG,WAAA,EAAa;IAAA,EAAC;IAEvBjB,6DAAA,kBAA2B;IAAAA,qDAAA,YAAK;IAAAA,2DAAA,EAAW;IAC3CA,6DAAA,WAAM;IAAAA,qDAAA,YAAK;IACbA,2DADa,EAAO,EACX;;;ADYX,MAAOkB,aAAc,SAAQpC,4EAAa;EAG9C,CAAAqC,QAAS;EAET,CAAAC,cAAe;EACf,CAAAC,gBAAiB;EACjB,CAAAC,eAAgB;EAChB,CAAAC,YAAa;EAEbC,YAAA;IAAgB,KAAK,EAAE;IARvB,KAAAC,OAAO,GAAGnE,sDAAM,CAACoC,wFAAmB,CAAC,CAAC+B,OAAO;IAC7C,MAAAN,QAAS,GAAG7D,sDAAM,CAACS,qEAAW,CAAC;IAE/B,MAAAqD,cAAe,GAAG7C,gDAAS,CAACoB,iFAAmB,CAAC;IAChD,MAAA0B,gBAAiB,GAAG9C,gDAAS,CAACC,iGAAoB,CAAC;IACnD,MAAA8C,eAAgB,GAAG/C,gDAAS,CAACqB,wFAAsB,CAAC;IACpD,MAAA2B,YAAa,GAAGhD,gDAAS,CAACiB,yFAAoB,CAAC;IAI/C,KAAAkC,YAAY,GAAGnE,sDAAM,CAAgBoE,SAAS,CAAC;IAC/C,KAAAC,KAAK,GAAGrE,sDAAM,CAASoE,SAAS,CAAC;IACjC,KAAAE,YAAY,GAAGtE,sDAAM,CAAoB,EAAE,CAAC;IAC5C,KAAAuE,aAAa,GAAGzE,wDAAQ,CAAC,MAAM,IAAI,CAACwE,YAAY,EAAE,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC1B,IAAI,KAAK,IAAI,CAACsB,KAAK,EAAE,CAAC,CAAC;IAEtF;IACA,KAAAK,WAAW,GAAG,IAAI,CAAC,CAAAC,gBAAiB,EAAE;IACtC,KAAAlD,mBAAmB,GAAGA,iGAAmB;EAThB;EAYzBmD,QAAQA,CAAA;IACN,IAAI,CAAC,CAAAC,WAAY,EAAE;IACnB,IAAI,CAAC,CAAAC,yBAA0B,EAAE;IACjC,IAAI,CAAC,CAAAd,YAAa,CAACe,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAAC,iBAAkB,EAAE,CAAC;IAEpE,IAAI,CAAC,CAAAjB,eAAgB,CAACkB,WAAW,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACnD,IAAI,CAACC,iBAAiB,GAAGD,IAAI,CAACE,OAAO,CAACC,MAAM,CAACC,cAAc;IAC7D,CAAC,CAAC;EACJ;EAEAC,YAAYA,CAACC,KAAa;IACxB,MAAMC,UAAU,GAAGD,KAAK,CAAC,CAAC,CAAC;IAC3B,MAAME,GAAG,GAAGD,UAAU,CAAC3C,IAAI,CAAC6C,SAAS,CAACF,UAAU,CAAC3C,IAAI,CAAC8C,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAACC,iBAAiB,EAAE;IAC/F,QAAQH,GAAG;MACT,KAAK,KAAK;QACR/E,2CAAI,CAACiB,gFAAQ,CAAC4D,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACM,IAAI,CAAChF,2CAAI,CAAC,CAAC,CAAC,CAAC,CAACmE,SAAS,CAACc,UAAU,IAAG;UAC5D,MAAMC,eAAe,GAAGD,UAAU,CAACE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC5E,MAAMC,WAAW,GAAG,IAAI,CAAChC,YAAY,EAAE,CAACK,IAAI,CAAC4B,EAAE,IAAIA,EAAE,CAACC,IAAI,KAAKJ,eAAe,CAAC;UAC/E,IAAIE,WAAW,IAAI,IAAI,EAAE;YACvB,MAAMG,OAAO,GAAG,mCAAmCL,eAAe,qDAAqD;YACvH,IAAI,CAAC,CAAArC,QAAS,CAAC2C,IAAI,CAACD,OAAO,EAAE,IAAI,EAAE;cAAEE,QAAQ,EAAE;YAAI,CAAE,CAAC;YACtD;UACF;UACA,IAAI,CAAC,CAAAC,cAAe,CAACN,WAAW,EAAEV,KAAK,CAAC;QAC1C,CAAC,CAAC;QACF;MACF,KAAK,MAAM;QACT,IAAI,CAACiB,UAAU,CAACjB,KAAK,CAAC;QACtB;IACJ;EACF;EAEAiB,UAAUA,CAACjB,KAAc;IACvB,MAAMkB,UAAU,GAAyB;MAAElB;IAAK,CAAE;IAClD,IAAI,CAAC,CAAAzB,YAAa,CAAC4C,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE;MAAEC,KAAK,EAAEF;IAAU,CAAE,CAAC;EACnE;EAEAG,eAAeA,CAAA;IACb,OAAO,IAAI,CAAC,CAAAC,KAAM,CAAC,QAAQ,CAAC;EAC9B;EAEAC,eAAeA,CAACb,WAAwB;IACtC,IAAI,CAACA,WAAW,EAAE;MAChB,IAAI,CAAC,CAAAnC,YAAa,CAAC4C,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC,MAAM;MACL,IAAIT,WAAW,CAACc,QAAQ,CAACC,QAAQ,EAAE;MACnC,IAAI,CAAC,CAAAlD,YAAa,CAAC4C,WAAW,CAAC,CAAC,GAAGT,WAAW,CAACgB,MAAM,OAAO,CAAC,CAAC;IAChE;EACF;EAEA,CAAAnC,iBAAkBoC,CAAA;IAChB,IAAI,CAAC,CAAAvD,cAAe,CAACwD,oBAAoB,CAAC,IAAI,CAAChD,KAAK,EAAE,CAAC,CAACa,SAAS,CAACf,YAAY,IAAG;MAC/E,KAAK,MAAMgC,WAAW,IAAIhC,YAAY,EAAE;QACtCgC,WAAW,CAACmB,aAAa,GAAGnB,WAAW,CAACoB,KAAK,CAACC,OAAO,CAAC,aAAa,EAAE,GAAG,CAAC;MAC3E;MACA,IAAI,CAACrD,YAAY,CAACsD,GAAG,CAACtD,YAAY,CAAC;MACnC,IAAI,IAAI,CAACE,KAAK,EAAE,KAAK3C,0EAAY,CAACgG,MAAM,CAACC,OAAO,CAACC,KAAK,EAAE;QACtD,MAAMtB,OAAO,GAAG,4FAA4F;QAC5G,IAAI,CAAC,CAAA1C,QAAS,CAAC2C,IAAI,CAACD,OAAO,EAAE,IAAI,EAAE;UAAEE,QAAQ,EAAE;QAAI,CAAE,CAAC;MACxD;IACF,CAAC,CAAC;EACJ;EAEA,CAAA3B,WAAYgD,CAAA;IACV,IAAI,CAAC,CAAAhE,cAAe,CAACiE,WAAW,EAAE,CAAC5C,SAAS,CAAC6C,SAAS,IAAG;MACvD;MACA;MACA,MAAMC,MAAM,GAAG,IAAI,CAAC1D,YAAY,EAAE,CAC/B3D,MAAM,CAACsH,IAAI,IAAIF,SAAS,CAACvD,IAAI,CAAC0D,IAAI,IAAIA,IAAI,CAACnF,IAAI,KAAKkF,IAAI,CAAClF,IAAI,CAAC,IAAI,IAAI,CAAC;MAE1E;MACA,MAAMoF,aAAa,GAAGJ,SAAS,CAAClH,GAAG,CAAC4D,CAAC,IAAG;QACtC,IAAI2D,SAAS,GAAG,CAAC3D,CAAC,CAAC4D,cAAc,GAC7B,GAAG5D,CAAC,CAAC6D,UAAU,QAAQ,CAAe;QAAA,EACrC7D,CAAC,CAAC4D,cAAc,IAAI5D,CAAC,CAAC6D,UAAU,GAC/B7D,CAAC,CAAC4D,cAAc,GAAG,YAAY,CAAK;QAAA,EACpC,GAAG5D,CAAC,CAAC6D,UAAU,YAAY7D,CAAC,CAAC4D,cAAc,SAAS;QAC1D,OAAQ;UAAE,GAAG5D,CAAC;UAAEvB,KAAK,EAAEuB,CAAC,CAAC1B,IAAI,GAAG,MAAMqF,SAAS;QAAE,CAAE;MACrD,CAAC,CAAC;MAEF,IAAI,CAAC9D,YAAY,CAACmD,GAAG,CAAC,CAAC,GAAGU,aAAa,EAAE,GAAGH,MAAM,CAAC,CAAC;IACtD,CAAC,CAAC;EACJ;EAEAtE,WAAWA,CAAA;IACT,MAAM6E,UAAU,GAAGC,MAAM,CAACC,MAAM,CAAC,kJAAkJ,CAAC;IACpL,IAAI,CAACF,UAAU,EAAE;IACjB,IAAI,CAAC,CAAA3E,QAAS,CAAC2C,IAAI,CAAC,WAAW,CAAC;IAChC,IAAI,CAAC,CAAA1C,cAAe,CAACH,WAAW,CAAC6E,UAAU,CAAC,CAACrD,SAAS,CAACwD,CAAC,IAAG;MACzD,IAAI,CAAC,CAAA9E,QAAS,CAAC2C,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE,CAAC;MACtD,IAAI,CAAC,CAAAxB,iBAAkB,EAAE;IAC3B,CAAC,CAAC;EACJ;EAEA2D,WAAWA,CAACC,QAAgB;IAC1B,IAAIA,QAAQ,KAAKnH,iGAAmB,EAAE;MACpCmH,QAAQ,GAAGH,MAAM,CAAC,mMAAmM,CAAC,IAAI/G,0EAAY,CAACgG,MAAM,CAACC,OAAO,CAACC,KAAK;IAC7P;IACA,IAAI,CAAC,CAAA5D,YAAa,CAAC4C,WAAW,CAAC,CAAC,IAAI,EAAEgC,QAAQ,CAAC,CAAC;EAClD;EAEA;;;;;;EAMA,CAAA9D,yBAA0B+D,CAAA;IACxB,IAAI,CAACC,aAAa,CAACC,GAAG,CACpB,IAAI,CAAC,CAAA/E,YAAa,CAACgF,MAAM,CAACC,MAAM,CAAClD,IAAI,CACnCpF,6CAAM,CAACuI,KAAK,IAAIA,KAAK,YAAYzI,2DAAa,CAAC,EAC/CI,0CAAG,CAAC,MAAM,IAAI,CAAC,CAAAmD,YAAa,CAACmF,QAAQ,CAAC,OAAO,CAAC,CAAC,EAC/CrI,gDAAS,CAAC,IAAI,CAAC,CAAAkD,YAAa,CAACmF,QAAQ,CAAC,OAAO,CAAC,CAAC,EAC/CxI,6CAAM,CAAC0D,KAAK,IAAI,CAAC,CAACA,KAAK,CAAC,EACxBnC,8EAAe,CAACkH,CAAC,IAAIA,CAAC,CAAC,CACxB,CAAClE,SAAS,CAACb,KAAK,IAAG;MAClB,IAAI,CAACA,KAAK,CAACoD,GAAG,CAACpD,KAAK,CAAC;MAErB;MACA,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE,CAACzD,GAAG,CAACwI,MAAM,IAAIA,MAAM,CAACtG,IAAI,CAAC,CAACuG,QAAQ,CAACjF,KAAK,CAAC,EAAE;QACnE,MAAMkF,cAAc,GAAoB;UACtCxG,IAAI,EAAEsB,KAAK;UACXnB,KAAK,EAAEmB,KAAK;UACZiE,UAAU,EAAE,CAAC;UACbD,cAAc,EAAE,CAAC;UACjBmB,UAAU,EAAE;SACb;QACD,IAAI,CAAClF,YAAY,CAACmD,GAAG,CAAC,CAAC,GAAG,IAAI,CAACnD,YAAY,EAAE,EAAEiF,cAAc,CAAC,CAAC;MACjE;MACA,IAAI,CAAC,CAAAvE,iBAAkB,EAAE;IAC3B,CAAC,CAAC,CACH;EACH;EAEA;EAEA,CAAAL,gBAAiB8E,CAAA;IACf,MAAM/E,WAAW,GAAgB;MAC/B,GAAGlD,gGAAkB;MACrBkI,UAAU,EAAE,CACV;QACE,GAAGpI,iFAAiB,CAACqI,qBAAqB;QAC1CC,kBAAkB,EAAEtI,iFAAiB,CAACuI,0BAA0B,CAAc,YAAY;OAC3F,EACD;QACE,GAAGvI,iFAAiB,CAACwI,eAAe;QACpCC,UAAU,EAAE,aAAa;QACzBC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE,KAAK;QACXC,UAAU,EAAEA,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,KAAI;UACvD,MAAMC,YAAY,GAAgBH,KAAK,CAAClF,IAAI;UAC5C,MAAMsF,YAAY,GAAgBH,KAAK,CAACnF,IAAI;UAC5C,OAAOqF,YAAY,CAAClD,aAAa,CAACoD,aAAa,CAACD,YAAY,CAACnD,aAAa,CAAC;QAC7E,CAAC;QACDqD,YAAY,EAAGC,CAAwB,IAAKvJ,wEAAY,CAACwJ,QAAQ,CAAC,IAAI,CAAC,CAAA9D,KAAM,CAAC,SAAS6D,CAAC,CAACzF,IAAI,CAACgC,MAAM,EAAE,CAAC,EAAEyD,CAAC,CAACzF,IAAI,CAACoC,KAAK;OACtH,EACD;QACE,GAAGjG,iFAAiB,CAACwJ,KAAK;QAC1Bd,KAAK,EAAE,OAAO;QACdW,YAAY,EAAEnI,iFAAkB;QAChCoH,kBAAkB,EAAG;UACnBmB,UAAU,EAAG3E,EAAE,IAAK,IAAI,CAAC,CAAAW,KAAM,CAAC,QAAQ,IAAI,CAAC,CAAAiE,YAAa,CAAC5E,EAAE,CAAC,EAAE,CAAC;UACjE6E,QAAQ,EAAG7E,EAAE,IAAK,IAAI,CAAC,CAAAW,KAAM,CAAC,SAASX,EAAE,CAACe,MAAM,EAAE;;OAErD,EACD;QACE,GAAG7F,iFAAiB,CAAC4J,MAAM;QAC3BlB,KAAK,EAAE,QAAQ;QACfW,YAAY,EAAEpI,oFAAmB;QACjCqH,kBAAkB,EAAG;UACnBuB,SAAS,EAAGhF,WAAW,IAAK,IAAI,CAAC,CAAAY,KAAM,CAAC,UAAUZ,WAAW,CAACgB,MAAM,EAAE;;OAEzE,EACD;QACE,GAAG7F,iFAAiB,CAAC8J,cAAc;QACnCpB,KAAK,EAAE,MAAM;QACbqB,SAAS,EAAGT,CAAC,IAAK,GAAGA,CAAC,CAACzF,IAAI,CAAC8B,QAAQ,CAACqE,WAAW,GAAG,YAAY,GAAG,0BAA0B,EAAE,CAACpF,KAAK,CAAC,GAAG,CAAC;QACzGqF,WAAW,EAAGX,CAAwB,IAAKA,CAAC,CAACzF,IAAI,EAAEkB,IAAI;QACvDmF,aAAa,EAAGZ,CAAC,IAAK,IAAI,CAAC5D,eAAe,CAAC4D,CAAC,CAACzF,IAAI;OAClD,EACD;QACE,GAAG7D,iFAAiB,CAACmK,aAAa;QAClCzB,KAAK,EAAE,aAAa;QACpBuB,WAAW,EAAGX,CAAwB,IAAKA,CAAC,CAACzF,IAAI,EAAEuG,UAAU,EAAEC;OAChE,EACD;QACE,GAAGrK,iFAAiB,CAACsK,mBAAmB;QACxCjB,YAAY,EAAErI,uFAAoB;QAClCsH,kBAAkB,EAAG;UACnBiC,uBAAuB,EAAEA,CAAA,KAAM,IAAI,CAACzG,iBAAiB;UACrD2B,KAAK,EAAEA,CAAC+E,IAAI,EAAE1F,EAAE,KAAI;YAClB,QAAQ0F,IAAI;cACV,KAAK,sBAAsB;gBAAE,OAAO,IAAI,CAAC,CAAA/E,KAAM,CAAC,QAAQ,IAAI,CAAC,CAAAgF,yBAA0B,CAAC3F,EAAE,CAAC,EAAE,CAAC;cAC9F,KAAK,iBAAiB;gBAAE,OAAO,IAAI,CAAC,CAAAW,KAAM,CAAC3F,2EAAe,CAAC4K,iBAAiB,CAAC5F,EAAE,CAACe,MAAM,CAAC,CAAC;cACxF,KAAK,iBAAiB;gBAAE,OAAO,IAAI,CAAC,CAAAJ,KAAM,CAACX,EAAE,CAACa,QAAQ,CAACC,QAAQ,GAAG,EAAE,GAAG,GAAGd,EAAE,CAACe,MAAM,OAAO,CAAC;cAC3F,KAAK,cAAc;gBAAE,OAAO,IAAI,CAAC,CAAAJ,KAAM,CAAC5F,mDAAY,CAAC6K,iBAAiB,CAAC5F,EAAE,CAACe,MAAM,EAAE,8BAA8Bf,EAAE,CAACC,IAAI,KAAKD,EAAE,CAAC6F,EAAE,GAAG,CAAC,CAAC;cACtI,KAAK,aAAa;gBAAE,OAAO,IAAI,CAAC,CAAAlF,KAAM,CAAC7F,iEAAW,CAACgL,UAAU,CAAC9F,EAAE,CAAC,CAAC;cAClE,KAAK,YAAY;gBAAE,OAAO,IAAI,CAAC,CAAAW,KAAM,CAAC,UAAUX,EAAE,CAACe,MAAM,EAAE,CAAC;cAC5D,KAAK,YAAY;gBAAE,OAAO,IAAI,CAAC,CAAAJ,KAAM,CAAC,GAAGX,EAAE,CAACe,MAAM,SAAS,CAAC;YAC9D;UACF,CAAC;UACDgF,EAAE,EAAEA,CAACL,IAAI,EAAE1F,EAAE,KAAI;YACf,QAAQ0F,IAAI;cACV,KAAK,YAAY;gBAAE,IAAI,CAAC,CAAAM,UAAW,CAAChG,EAAE,CAAC;gBAAE;cACzC,KAAK,mBAAmB;gBAAE,IAAI,CAAC,CAAAiG,iBAAkB,CAACjG,EAAE,CAAC;gBAAE;YACzD;UACF;;OAEH;KAEJ;IACD,OAAO1B,WAAW;EACpB;EAEA;EAEA;EAEA,CAAAqC,KAAMuF,CAACC,GAAW;IAChB,OAAO,GAAG,GAAG,IAAI,CAAC,CAAAvI,YAAa,CAACwI,WAAW,CAACD,GAAG,CAAC;EAClD;EAEA,CAAAvB,YAAayB,CAACtG,WAAwB;IACpC,OAAOrE,kFAAgB,CAAC;MACtB4K,KAAK,EAAE,CAAC3K,qEAAQ,CAAC4K,WAAW,CAACxG,WAAW,CAACgB,MAAM,CAAC;KAC9B,CAAC;EACvB;EAEAyF,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAAC,CAAA7F,KAAM,CAAC,KAAK,CAAC;EAC3B;EAEA,CAAAgF,yBAA0Bc,CAAC1G,WAAwB;IACjD,MAAM2G,IAAI,GAAa;MACrBJ,KAAK,EAAE,CACL,CAACvG,WAAW,CAACuF,UAAU,GACnB;QACA,GAAG3J,qEAAQ,CAACgL,WAAW,CAAC5G,WAAW,CAACgB,MAAM,EAAEzF,0EAAY,CAACyC,YAAY,CAACgC,WAAW,EAAEzE,0EAAY,CAACsL,QAAQ,CAAC7G,WAAW,CAAC;QACrH8G,OAAO,EAAE;UACP1F,KAAK,EAAEpB,WAAW,CAACE,IAAI;UACvBsF,WAAW,EAAExF,WAAW,CAACwF;;OAE5B,GACC5J,qEAAQ,CAACmL,MAAM,CAAC/G,WAAW,CAACuF,UAAU,CAACO,EAAE,CAAC;KAEjD;IACD,OAAOnK,kFAAgB,CAACgL,IAAI,CAAC;EAC/B;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA,CAAAV,UAAWe,CAAChH,WAAwB;IAClC,IAAI,CAAC,CAAArC,gBAAiB,CAACsJ,UAAU,CAACjH,WAAW,CAACgB,MAAM,CAAC;EACvD;EAGA,CAAAV,cAAe4G,CAAClH,WAAwB,EAAEV,KAAc;IACtD,IAAI,CAAC,CAAAzB,YAAa,CAAC4C,WAAW,CAAC,CAAC,GAAGT,WAAW,CAACgB,MAAM,SAAS,CAAC,EAAE;MAAEN,KAAK,EAAE;QAAEpB;MAAK;IAAoC,CAAE,CAAC;EAC1H;EAEA,CAAA4G,iBAAkBiB,CAACnH,WAAwB;IACzC,IAAI,CAACoH,OAAO,CAAC,oCAAoCpH,WAAW,CAACE,IAAI,MAAMF,WAAW,CAAC8F,EAAE,IAAI,CAAC,EAAE;IAC5F,IAAI,CAAC,CAAArI,QAAS,CAAC2C,IAAI,CAAC,aAAa,CAAC;IAClC,IAAI,CAAC,CAAA1C,cAAe,CAAC2J,MAAM,CAACrH,WAAW,CAAC,CAACjB,SAAS,CAACwD,CAAC,IAAG;MACrD,IAAI,CAAC,CAAA9E,QAAS,CAAC2C,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE,CAAC;MACxD,IAAI,CAAC,CAAAxB,iBAAkB,EAAE;IAC3B,CAAC,CAAC;EACJ;;;uCApTWrB,aAAa;IAAA;EAAA;;;YAAbA,aAAa;MAAA8J,SAAA;MAAAC,QAAA,GAAAjL,yEAAA;MAAAmL,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UC1DxBxL,6DAFF,aAA+C,yBAS5C;UADCA,yDAAA,0BAAA0L,+DAAAC,MAAA;YAAA,OAAgBF,GAAA,CAAA1I,YAAA,CAAA4I,MAAA,CAAoB;UAAA,EAAC;UAEvC3L,2DAAA,EAAkB;UAIZA,6DAHN,4BAA+C,aACT,wBAC2C,oBAM1E;UAFCA,yDAAA,2BAAA4L,2DAAAD,MAAA;YAAA,OAAiBF,GAAA,CAAAvF,WAAA,CAAAyF,MAAA,CAAmB;UAAA,EAAC;UAInC3L,6DADF,yBAAoB,WACZ;UAAAA,qDAAA,GAAmC;UAC3CA,2DAD2C,EAAO,EAC7B;UACrBA,+DAAA,IAAA8L,6BAAA,yBAAA9L,wEAAA,CAIC;UACDA,6DAAA,qBAA0C;UAAAA,qDAAA,uBAAe;UAE7DA,2DAF6D,EAAa,EAC3D,EACE;UAGbA,6DAFJ,YAA8B,iBACsE,mBACrE;UAAAA,qDAAA,oBAAY;UAAAA,2DAAA,EAAW;UAClDA,6DAAA,YAAM;UAAAA,qDAAA,oBAAY;UAEtBA,2DAFsB,EAAO,EAClB,EACP;UACJA,yDAAA,KAAAiM,qCAAA,qBAAiB;UAanBjM,2DAAA,EAAM;UAGFA,6DAFJ,YAAkC,kBAC0E,gBAC9F;UAAAA,qDAAA,WAAG;UAIrBA,2DAJqB,EAAW,EACjB,EACP,EACe,EACjB;UACNA,wDAAA,qBAA+B;;;;UAtD3BA,wDAAA,EAA0B;UAG1BA,yDAHA,YAAAyL,GAAA,CAAA/J,YAAA,GAA0B,gBAAA+J,GAAA,CAAAxJ,WAAA,CACC,gCAEI;UAQzBjC,wDAAA,GAAmB;UAAnBA,yDAAA,YAAAyL,GAAA,CAAA7J,KAAA,GAAmB;UAMX5B,wDAAA,GAAmC;UAAnCA,iEAAA,aAAAmM,OAAA,GAAAV,GAAA,CAAA3J,aAAA,qBAAAqK,OAAA,CAAA1L,KAAA,KAAmC;UAE3CT,wDAAA,EAIC;UAJDA,yDAAA,CAAAyL,GAAA,CAAA5J,YAAA,EAAc,CAIb;UACW7B,wDAAA,GAA6B;UAA7BA,yDAAA,UAAAyL,GAAA,CAAAzM,mBAAA,CAA6B;UAG1CgB,wDAAA,GAA0B;UAA1BA,yDAAA,SAAAyL,GAAA,CAAApH,eAAA,IAAArE,4DAAA,CAA0B;UAM7BA,wDAAA,GAYC;UAZDA,4DAAA,CAAAyL,GAAA,CAAAhK,OAAA,aAYC;UAEAzB,wDAAA,EAA8B;UAA9BA,yDAAA,SAAAyL,GAAA,CAAAtB,mBAAA,IAAAnK,4DAAA,CAA8B;;;qBDJ7BrC,uEAAgB,EAChBC,6EAAkB,EAAA2O,uEAAA,EAClBzO,sEAAe,EAAA2O,gEAAA,EAAAA,uEAAA,EAAAG,8DAAA,EACfpP,wDAAW,EAAAsP,4DAAA,EAAAA,oDAAA,EACXpP,oEAAe,EACfD,sEAAe,EAAAwP,gEAAA,EAAAA,mEAAA,EACfpP,kEAAa,EAAAuP,4DAAA,EACbnP,0DAAY,EACZsB,2FAAa,EAAA+N,sEAAA,EACbpO,6FAAoB,EACpBC,+EAAc;MAAAqO,MAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;AEvDmC;AACA;AACF;AACA;AACc;AACO;AAEW;;;;;;;;ICNjFxN,4DADF,WAA2J,eAC/I;IAAAA,oDAAA,WAAI;IAChBA,0DADgB,EAAW,EACvB;;;;IAFDA,wDAAA,SAAA8N,MAAA,CAAAC,MAAA,CAAAzJ,KAAA,yBAAAwJ,MAAA,CAAApK,WAAA,GAAA1D,2DAAA,CAA0D;;;;;IAK3DA,4DADF,aAA6C,eACjC;IAAAA,oDAAA,WAAI;IAChBA,0DADgB,EAAW,EACrB;;;;;IAKJA,4DADF,WAAuI,kBAQpI;IACCA,oDAAA,oBACF;IACFA,0DADE,EAAW,EACT;;;;IAXDA,wDAAA,SAAA8N,MAAA,CAAAC,MAAA,CAAAzJ,KAAA,iBAAAwJ,MAAA,CAAApK,WAAA,GAAA1D,2DAAA,CAAkD;IAEjDA,uDAAA,EAAwC;IAIxCA,wDAJA,aAAA8N,MAAA,CAAApK,WAAA,CAAAsK,QAAA,CAAAC,MAAA,CAAwC,oBAAAH,MAAA,CAAApK,WAAA,CAAAsK,QAAA,CAAAC,MAAA,CAIO;;;;;IAQjDjO,4DADF,aAA6C,mBAS1C;IACCA,oDAAA,oBACF;IACFA,0DADE,EAAW,EACP;;;;IAVFA,uDAAA,EAAwC;IAKxCA,wDALA,aAAA8N,MAAA,CAAApK,WAAA,CAAAsK,QAAA,CAAAC,MAAA,CAAwC,oBAAAH,MAAA,CAAApK,WAAA,CAAAsK,QAAA,CAAAC,MAAA,CAKO;;;;;IAUjDjO,4DADF,WAA6I,kBAQ1I;IACCA,oDAAA,cAAM;IAEVA,0DAFU,EACP,EACC;;;;IAXDA,wDAAA,SAAA8N,MAAA,CAAAC,MAAA,CAAAzJ,KAAA,oBAAAwJ,MAAA,CAAApK,WAAA,GAAA1D,2DAAA,CAAqD;IAEpDA,uDAAA,EAA0C;IAI1CA,wDAJA,aAAA8N,MAAA,CAAApK,WAAA,CAAAwK,WAAA,CAAAC,KAAA,CAA0C,oBAAAL,MAAA,CAAApK,WAAA,CAAAwK,WAAA,CAAAC,KAAA,CAIO;;;;;IAQnDnO,4DADF,aAA6C,mBAS1C;IACCA,oDAAA,eACF;IACFA,0DADE,EAAW,EACP;;;;IAVFA,uDAAA,EAA0C;IAK1CA,wDALA,aAAA8N,MAAA,CAAApK,WAAA,CAAAwK,WAAA,CAAAC,KAAA,CAA0C,oBAAAL,MAAA,CAAApK,WAAA,CAAAwK,WAAA,CAAAC,KAAA,CAKO;;;;;;IAgBnDnO,4DADF,YAAuH,eAC3G;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAW;IAC7BA,4DAAA,WAAM;IAAAA,oDAAA,aAAM;IACdA,0DADc,EAAO,EACjB;IACJA,4DAAA,YAAmE;IACjEA,uDAAA,mBAA0C;IAC1CA,4DAAA,WAAM;IAAAA,oDAAA,eAAQ;IAChBA,0DADgB,EAAO,EACnB;IACJA,4DAAA,iBAAqE;IAA/CA,wDAAA,mBAAAoO,qEAAA;MAAApO,2DAAA,CAAAa,GAAA;MAAA,MAAAiN,MAAA,GAAA9N,2DAAA;MAAA,OAAAA,yDAAA,CAAS8N,MAAA,CAAAC,MAAA,CAAArE,EAAA,CAAU,YAAY,EAAAoE,MAAA,CAAApK,WAAA,CAAc;IAAA,EAAC;IAClE1D,4DAAA,gBAAU;IAAAA,oDAAA,sBAAc;IAAAA,0DAAA,EAAW;IACnCA,4DAAA,YAAM;IAAAA,oDAAA,2BAAmB;IAC3BA,0DAD2B,EAAO,EACzB;IAEPA,4DADF,aAAkE,gBACtD;IAAAA,oDAAA,sBAAc;IAAAA,0DAAA,EAAW;IACnCA,4DAAA,YAAM;IAAAA,oDAAA,mBAAW;IACnBA,0DADmB,EAAO,EACtB;IAEFA,4DADF,aAAkE,gBACtD;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAW;IACjCA,4DAAA,YAAM;IAAAA,oDAAA,mBAAW;IACnBA,0DADmB,EAAO,EACtB;IACJA,4DAAA,kBAA4H;IAAtDA,wDAAA,mBAAAqO,sEAAA;MAAArO,2DAAA,CAAAa,GAAA;MAAA,MAAAiN,MAAA,GAAA9N,2DAAA;MAAA,OAAAA,yDAAA,CAAS8N,MAAA,CAAAC,MAAA,CAAArE,EAAA,CAAU,mBAAmB,EAAAoE,MAAA,CAAApK,WAAA,CAAc;IAAA,EAAC;IACzH1D,4DAAA,gBAAU;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAW;IAC3BA,4DAAA,YAAM;IAAAA,oDAAA,cAAM;IACdA,0DADc,EAAO,EACZ;;;;IAvB8DA,wDAApE,SAAA8N,MAAA,CAAAC,MAAA,CAAAzJ,KAAA,oBAAAwJ,MAAA,CAAApK,WAAA,GAAA1D,2DAAA,CAAqD,aAAA8N,MAAA,CAAApK,WAAA,CAAAc,QAAA,CAAA8J,aAAA,CAA8D;IAIrGtO,uDAAA,GAAiD;IAAjDA,wDAAA,SAAA8N,MAAA,CAAAC,MAAA,CAAAzJ,KAAA,gBAAAwJ,MAAA,CAAApK,WAAA,GAAA1D,2DAAA,CAAiD;IAQjDA,uDAAA,GAAgD;IAAhDA,wDAAA,SAAA8N,MAAA,CAAAC,MAAA,CAAAzJ,KAAA,eAAAwJ,MAAA,CAAApK,WAAA,GAAA1D,2DAAA,CAAgD;IAIhDA,uDAAA,GAAgD;IAAhDA,wDAAA,SAAA8N,MAAA,CAAAC,MAAA,CAAAzJ,KAAA,eAAAwJ,MAAA,CAAApK,WAAA,GAAA1D,2DAAA,CAAgD;IAI3CA,uDAAA,GAA+C;IAA/CA,wDAAA,aAAA8N,MAAA,CAAApK,WAAA,CAAAc,QAAA,CAAA+J,aAAA,CAA+C;;;ADzEnE,MAAO1O,oBAAqB,SAAQgO,4FAAsB;EAiB9DW,MAAMA,CAACT,MAA4D;IACjE,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACrK,WAAW,GAAGqK,MAAM,CAACrL,IAAI;IAC9B,MAAMC,iBAAiB,GAAG,IAAI,CAACoL,MAAM,CAAC3E,uBAAuB,EAAE;IAC/D,IAAI,CAACzG,iBAAiB,GAAGA,iBAAiB,IAAIiL,2EAAS,EAAE,CAACa,IAAI,CAAC,IAAI,CAAC/K,WAAW,CAACgB,MAAM,CAAC;EACzF;;;;;8JAtBW7E,oBAAoB,IAAA6O,iBAAA,IAApB7O,oBAAoB;MAAA;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAmL,SAAA;MAAAC,QAAA,GAAAjL,wEAAA;MAAAmL,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAqD,8BAAAnD,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCvBjCxL,4DAAA,aAA+B;UAqD3BA,wDApDF,IAAA4O,2CAAA,eAAmE,IAAAC,2CAAA,iBAI1D,IAAAC,2CAAA,eAMoC,IAAAC,2CAAA,iBAapC,IAAAC,2CAAA,eAgBqD,IAAAC,2CAAA,iBAarD;UAiBPjP,4DADF,aAAgG,eACpF;UAAAA,oDAAA,iBAAU;UAExBA,0DAFwB,EAAW,EAC3B,EACF;UAENA,4DAAA,sBAAiD;UAC/CA,wDAAA,KAAAkP,4CAAA,0BAA4B;UA0B9BlP,0DAAA,EAAW;;;;UApGTA,uDAAA,EAQC;UARDA,2DAAA,EAAAyL,GAAA,CAAA/H,WAAA,CAAAc,QAAA,CAAAqE,WAAA,IAAA4C,GAAA,CAAA/H,WAAA,CAAAuF,UAAA,SAQC;UAEDjJ,uDAAA,GA2BC;UA3BDA,2DAAA,EAAAyL,GAAA,CAAA/H,WAAA,CAAAc,QAAA,CAAA2K,eAAA,SA2BC;UAEDnP,uDAAA,GA2BC;UA3BDA,2DAAA,EAAAyL,GAAA,CAAA/H,WAAA,CAAAc,QAAA,CAAAqE,WAAA,IAAA4C,GAAA,CAAA9I,iBAAA,SA2BC;UAEoE3C,uDAAA,GAA0B;UAA1BA,wDAAA,sBAAAoP,OAAA,CAA0B;;;qBDrDzF1B,mEAAe,EAAAnB,6DAAA,EACf1O,iEAAa,EAAA4O,2DAAA,EACbgB,mEAAc,EAAAb,6DAAA,EACde,iEAAa,EAAAb,2DAAA,EAAAA,+DAAA,EAAAA,kEAAA,EAAAA,kEAAA,EACb3N,8EAAc;MAAAwQ,aAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;AEpBiC;AACI;AACnB;AAExC;;;;;AAKM,SAAUlQ,eAAeA,CAC7BqQ,EAAmB;EAEnB,OAAOxM,0CAAI,CACTsM,oEAAoB,EAAE,EACtBxR,mDAAG,CAAC0R,EAAE,CAAC,EACPF,oEAAoB,EAAE,CACvB;AACH;AAEM,SAAUG,kBAAkBA,CAChCD,EAAmB;EAEnB,OAAOxM,0CAAI,CACTsM,oEAAoB,CAACC,yDAAO,CAAC,EAC7BzR,mDAAG,CAAC0R,EAAE,CAAC,EACPF,oEAAoB,CAACC,yDAAO,CAAC,CAC9B;AACH;;;;;;;;;;;;;;;;;;ACxByD;AACF;AACqB;;;;AAatE,MAAO9P,kBAAkB;EAW7ByO,MAAMA,CAACT,MAA0D;IAC/D,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACrK,WAAW,GAAGqK,MAAM,CAACrL,IAAI;IAC9B,IAAI,CAACyC,KAAK,GAAG4I,MAAM,CAAC5I,KAAK;EAC3B;EAEA6K,OAAOA,CAACjC,MAAY;IAClB,OAAO,IAAI;EACb;;;uCAnBWhO,kBAAkB;IAAA;EAAA;;;YAAlBA,kBAAkB;MAAAiL,SAAA;MAAAG,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA2E,4BAAAzE,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UChB3BxL,4DAFJ,aAA+B,WACsG,aAC1G;UAAAA,oDAAA,GAAW;UACpCA,0DADoC,EAAM,EACtC;UAIFA,4DADF,WAA4H,eAChH;UAAAA,oDAAA,UAAG;UAEjBA,0DAFiB,EAAW,EACtB,EACA;;;UAR+DA,uDAAA,EAAyB;UAAzBA,oEAAA,cAAAyL,GAAA,CAAAtG,KAAA,WAAyB;UAACnF,wDAAA,SAAAyL,GAAA,CAAAsC,MAAA,CAAAvF,QAAA,CAAAiD,GAAA,CAAA/H,WAAA,GAAA1D,2DAAA,CAAqC;UACzGA,uDAAA,GAAW;UAAXA,+DAAA,CAAAyL,GAAA,CAAAtG,KAAA,CAAW;UAIgDnF,uDAAA,EAAuC;UAAvCA,wDAAA,SAAAyL,GAAA,CAAAsC,MAAA,CAAAzF,UAAA,CAAAmD,GAAA,CAAA/H,WAAA,GAAA1D,2DAAA,CAAuC;;;qBDOrH0N,mEAAe,EAAAnB,6DAAA,EACf1O,iEAAa,EAAA4O,2DAAA,EACbtN,8EAAc;MAAAqO,MAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;AEZmC;AACA;AACF;AACqB;;;;;AAatE,MAAO1N,mBAAmB;EAe9B0O,MAAMA,CAACT,MAA2D;IAChE,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACrK,WAAW,GAAGqK,MAAM,CAACrL,IAAI;IAC9B,IAAI,CAACyC,KAAK,GAAG4I,MAAM,CAAC5I,KAAK;IACzB,IAAI,CAACiL,OAAO,GAAG,CAAC,IAAI,CAAC1M,WAAW,CAACc,QAAQ,CAACC,QAAQ,GAC9C,aAAa,GACb,GAAG,IAAI,CAACf,WAAW,CAACc,QAAQ,CAAC6L,eAAe,GAAG,GAAG,IAAI,CAAC3M,WAAW,CAACc,QAAQ,CAAC6L,eAAe,MAAM,GAAG,EAAE,8CAA8C,IAAI,CAAC3M,WAAW,CAAC4M,WAAW,iEAAiE;IACrP,IAAI,CAACC,IAAI,GAAG,CAAC,IAAI,CAAC7M,WAAW,CAACc,QAAQ,CAACC,QAAQ,GAAG,KAAK,GAAG,OAAO;EACnE;EAEAuL,OAAOA,CAACjC,MAAY;IAClB,OAAO,IAAI;EACb;;;uCA3BWjO,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAkL,SAAA;MAAAG,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAkF,6BAAAhF,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCjB5BxL,4DAFJ,aAA+B,WAC+F,kBAE1E;UAC9CA,oDAAA,GACF;UAEJA,0DAFI,EAAW,EACT,EACA;;;UAN+DA,uDAAA,EAAiB;UAACA,wDAAlB,UAAAyL,GAAA,CAAA2E,OAAA,CAAiB,SAAA3E,GAAA,CAAAsC,MAAA,CAAArF,SAAA,CAAA+C,GAAA,CAAA/H,WAAA,GAAA1D,2DAAA,CAAuC;UAC/GA,uDAAA,EAAkB;UAC1BA,wDADQ,aAAAyL,GAAA,CAAAtG,KAAA,CAAkB,oBAAAsG,GAAA,CAAAtG,KAAA,CACD;UACzBnF,uDAAA,EACF;UADEA,gEAAA,MAAAyL,GAAA,CAAA8E,IAAA,MACF;;;qBDQI7C,mEAAe,EAAAnB,6DAAA,EACf1O,iEAAa,EAAA4O,2DAAA,EACbgB,mEAAc,EAAAb,6DAAA,EACdzN,8EAAc;MAAAwQ,aAAA;IAAA;EAAA","sources":["./projects/eav-ui/src/app/app-administration/data/data.component.ts","./projects/eav-ui/src/app/app-administration/data/data.component.html","./projects/eav-ui/src/app/app-administration/data/data-actions/data-actions.component.ts","./projects/eav-ui/src/app/app-administration/data/data-actions/data-actions.component.html","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts","./projects/eav-ui/src/app/app-administration/data/data-items/data-items.component.ts","./projects/eav-ui/src/app/app-administration/data/data-items/data-items.component.html","./projects/eav-ui/src/app/app-administration/data/data-fields/data-fields.component.ts","./projects/eav-ui/src/app/app-administration/data/data-fields/data-fields.component.html"],"sourcesContent":["import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationEnd, RouterOutlet } from '@angular/router';\r\nimport { filter, from, map, startWith, take } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ContentExportService } from '../../content-export/services/content-export.service';\r\nimport { ContentImportDialogData } from '../../content-import/content-import-dialog.config';\r\nimport { GoToDevRest } from '../../dev-rest/go-to-dev-rest';\r\nimport { GoToMetadata } from '../../metadata';\r\nimport { GoToPermissions } from '../../permissions/go-to-permissions';\r\nimport { AgGridHelper } from '../../shared/ag-grid/ag-grid-helper';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DragAndDropDirective } from '../../shared/directives/drag-and-drop.directive';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { toString } from '../../shared/helpers/file-to-base64.helper';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { mapUntilChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { GlobalConfigService } from '../../shared/services/global-config.service';\r\nimport { ContentType } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\nimport { ContentTypesService } from '../services/content-types.service';\r\nimport { DialogConfigAppService } from '../services/dialog-config-app.service';\r\nimport { DataActionsComponent } from './data-actions/data-actions.component';\r\nimport { DataFieldsComponent } from './data-fields/data-fields.component';\r\nimport { DataItemsComponent } from './data-items/data-items.component';\r\n\r\n@Component({\r\n    selector: 'app-data',\r\n    templateUrl: './data.component.html',\r\n    styleUrls: ['./data.component.scss'],\r\n    imports: [\r\n        MatDialogActions,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        FormsModule,\r\n        MatOptionModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n        DragAndDropDirective,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class DataComponent extends BaseComponent implements OnInit, OnDestroy {\r\n\r\n  isDebug = inject(GlobalConfigService).isDebug;\r\n  #snackBar = inject(MatSnackBar);\r\n\r\n  #contentTypeSvc = transient(ContentTypesService);\r\n  #contentExportSvc = transient(ContentExportService);\r\n  #dialogConfigSvc = transient(DialogConfigAppService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor() { super(); }\r\n\r\n  contentTypes = signal<ContentType[]>(undefined);\r\n  scope = signal<string>(undefined);\r\n  scopeOptions = signal<ScopeDetailsDto[]>([]);\r\n  scopeSelected = computed(() => this.scopeOptions().find(s => s.name === this.scope()));\r\n\r\n  /** Possible scopes - the ones from the backend + manually entered scopes by the current user */\r\n  gridOptions = this.#buildGridOptions();\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  enablePermissions!: boolean;\r\n\r\n  ngOnInit() {\r\n    this.#fetchScopes();\r\n    this.#refreshScopeOnRouteChange();\r\n    this.#dialogRouter.doOnDialogClosed(() => this.#fetchContentTypes());\r\n\r\n    this.#dialogConfigSvc.getCurrent$().subscribe(data => {\r\n      this.enablePermissions = data.Context.Enable.AppPermissions;\r\n    });\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    const ext = importFile.name.substring(importFile.name.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n    switch (ext) {\r\n      case 'xml':\r\n        from(toString(files[0])).pipe(take(1)).subscribe(fileString => {\r\n          const contentTypeName = fileString.split('<Entity Type=\"')[1]?.split('\"')[0];\r\n          const contentType = this.contentTypes().find(ct => ct.Name === contentTypeName);\r\n          if (contentType == null) {\r\n            const message = `Cannot find Content Type named '${contentTypeName}'. Please open Content Type Import dialog manually.`;\r\n            this.#snackBar.open(message, null, { duration: 5000 });\r\n            return;\r\n          }\r\n          this.#openDataImport(contentType, files);\r\n        });\r\n        break;\r\n      case 'json':\r\n        this.importType(files);\r\n        break;\r\n    }\r\n  }\r\n\r\n  importType(files?: File[]) {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.#dialogRouter.navRelative(['import'], { state: dialogData });\r\n  }\r\n\r\n  urlToImportType() {\r\n    return this.#urlTo('import');\r\n  }\r\n\r\n  editContentType(contentType: ContentType) {\r\n    if (!contentType) {\r\n      this.#dialogRouter.navRelative(['add']);\r\n    } else {\r\n      if (contentType.EditInfo.ReadOnly) return;\r\n      this.#dialogRouter.navRelative([`${contentType.NameId}/edit`]);\r\n    }\r\n  }\r\n\r\n  #fetchContentTypes() {\r\n    this.#contentTypeSvc.retrieveContentTypes(this.scope()).subscribe(contentTypes => {\r\n      for (const contentType of contentTypes) {\r\n        contentType._compareLabel = contentType.Label.replace(/\\p{Emoji}/gu, 'ž');\r\n      }\r\n      this.contentTypes.set(contentTypes);\r\n      if (this.scope() !== eavConstants.scopes.default.value) {\r\n        const message = 'Warning! You are in a special scope. Changing things here could easily break functionality';\r\n        this.#snackBar.open(message, null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  #fetchScopes() {\r\n    this.#contentTypeSvc.getScopesV2().subscribe(scopeList => {\r\n      // Merge the new scopes with the existing ones - in case there were manual scopes added\r\n      // If old scope list had a manual scope which the server didn't send, re-add it here\r\n      const manual = this.scopeOptions()\r\n        .filter(sOld => scopeList.find(sNew => sNew.name === sOld.name) == null);\r\n\r\n      // Add a nice label to each scope containing count-information of types\r\n      const withNiceLabel = scopeList.map(s => {\r\n        let countInfo = !s.typesInherited\r\n          ? `${s.typesTotal} types`               // only not-inherited\r\n          : (s.typesInherited == s.typesTotal)\r\n            ? s.typesInherited + ' sys types'     // only inherited\r\n            : `${s.typesTotal} types / ${s.typesInherited} system`;\r\n        return ({ ...s, label: s.name + ` - ${countInfo}` });\r\n      });\r\n\r\n      this.scopeOptions.set([...withNiceLabel, ...manual]);\r\n    });\r\n  }\r\n\r\n  createGhost() {\r\n    const sourceName = window.prompt('To create a ghost content-type enter source static name / id - this is a very advanced operation - read more about it on 2sxc.org/help?tag=ghost');\r\n    if (!sourceName) return;\r\n    this.#snackBar.open('Saving...');\r\n    this.#contentTypeSvc.createGhost(sourceName).subscribe(_ => {\r\n      this.#snackBar.open('Saved', null, { duration: 2000 });\r\n      this.#fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n    }\r\n    this.#dialogRouter.navRelative(['..', newScope]);\r\n  }\r\n\r\n  /**\r\n   * Refreshes the scope when the route changes.\r\n   * ...also adds a scope name if the route scope is not found in the list of possible scopes.\r\n   * This is to allow an admin to enter a custom scope.\r\n   * Note 2024-03-04 2dm - not sure if this auto-add feature is still needed though...\r\n   */\r\n  #refreshScopeOnRouteChange() {\r\n    this.subscriptions.add(\r\n      this.#dialogRouter.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map(() => this.#dialogRouter.getParam('scope')),\r\n        startWith(this.#dialogRouter.getParam('scope')),\r\n        filter(scope => !!scope),\r\n        mapUntilChanged(m => m),\r\n      ).subscribe(scope => {\r\n        this.scope.set(scope);\r\n\r\n        // If we can't find the scope in the list of options, add it as it was entered manually\r\n        if (!this.scopeOptions().map(option => option.name).includes(scope)) {\r\n          const newScopeOption: ScopeDetailsDto = {\r\n            name: scope,\r\n            label: scope,\r\n            typesTotal: 0,\r\n            typesInherited: 0,\r\n            typesOfApp: 0,\r\n          };\r\n          this.scopeOptions.set([...this.scopeOptions(), newScopeOption]);\r\n        }\r\n        this.#fetchContentTypes();\r\n      })\r\n    );\r\n  }\r\n\r\n  //#region Grid\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<ContentType>('StaticName'),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWidePrimary,\r\n          headerName: 'ContentType',\r\n          field: 'Label',\r\n          sort: 'asc',\r\n          comparator: (valueA, valueB, nodeA, nodeB, isInverted) => {\r\n            const contentTypeA: ContentType = nodeA.data;\r\n            const contentTypeB: ContentType = nodeB.data;\r\n            return contentTypeA._compareLabel.localeCompare(contentTypeB._compareLabel);\r\n          },\r\n          cellRenderer: (p: { data: ContentType }) => AgGridHelper.cellLink(this.#urlTo(`items/${p.data.NameId}`), p.data.Label),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Items,\r\n          field: 'Items',\r\n          cellRenderer: DataItemsComponent,\r\n          cellRendererParams: ({\r\n            addItemUrl: (ct) => this.#urlTo(`edit/${this.#routeAddItem(ct)}`),\r\n            itemsUrl: (ct) => this.#urlTo(`items/${ct.NameId}`),\r\n          } satisfies DataItemsComponent[\"params\"]),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Fields,\r\n          field: 'Fields',\r\n          cellRenderer: DataFieldsComponent,\r\n          cellRendererParams: ({\r\n            fieldsUrl: (contentType) => this.#urlTo(`fields/${contentType.NameId}`),\r\n          } satisfies DataFieldsComponent[\"params\"]),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideMin100,\r\n          field: 'Name',\r\n          cellClass: (p) => `${p.data.EditInfo.DisableEdit ? 'no-outline' : 'primary-action highlight'}`.split(' '),\r\n          valueGetter: (p: { data: ContentType }) => p.data?.Name,\r\n          onCellClicked: (p) => this.editContentType(p.data),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideFlex3,\r\n          field: 'Description',\r\n          valueGetter: (p: { data: ContentType }) => p.data?.Properties?.Description,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight4,\r\n          cellRenderer: DataActionsComponent,\r\n          cellRendererParams: ({\r\n            enablePermissionsGetter: () => this.enablePermissions,\r\n            urlTo: (verb, ct) => {\r\n              switch (verb) {\r\n                case 'createUpdateMetaData': return this.#urlTo(`edit/${this.#routeCreateOrEditMetadata(ct)}`);\r\n                case 'openPermissions': return this.#urlTo(GoToPermissions.getUrlContentType(ct.NameId));\r\n                case 'editContentType': return this.#urlTo(ct.EditInfo.ReadOnly ? '' : `${ct.NameId}/edit`);\r\n                case 'openMetadata': return this.#urlTo(GoToMetadata.getUrlContentType(ct.NameId, `Metadata for Content Type: ${ct.Name} (${ct.Id})`));\r\n                case 'openRestApi': return this.#urlTo(GoToDevRest.getUrlData(ct));\r\n                case 'dataExport': return this.#urlTo(`export/${ct.NameId}`);\r\n                case 'dataImport': return this.#urlTo(`${ct.NameId}/import`);\r\n              }\r\n            },\r\n            do: (verb, ct) => {\r\n              switch (verb) {\r\n                case 'typeExport': this.#exportType(ct); break;\r\n                case 'deleteContentType': this.#deleteContentType(ct); break;\r\n              }\r\n            }\r\n          } satisfies DataActionsComponent['params']),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Actions in the grid\r\n\r\n  #urlTo(url: string) {\r\n    return '#' + this.#dialogRouter.urlSubRoute(url);\r\n  }\r\n\r\n  #routeAddItem(contentType: ContentType): string {\r\n    return convertFormToUrl({\r\n      items: [EditPrep.newFromType(contentType.NameId)],\r\n    } satisfies EditForm);\r\n  }\r\n\r\n  urlToNewContentType(): string {\r\n    return this.#urlTo('add');\r\n  }\r\n\r\n  #routeCreateOrEditMetadata(contentType: ContentType): string {\r\n    const form: EditForm = {\r\n      items: [\r\n        !contentType.Properties\r\n          ? {\r\n            ...EditPrep.newMetadata(contentType.NameId, eavConstants.contentTypes.contentType, eavConstants.metadata.contentType),\r\n            Prefill: {\r\n              Label: contentType.Name,\r\n              Description: contentType.Description\r\n            },\r\n          }\r\n          : EditPrep.editId(contentType.Properties.Id),\r\n      ],\r\n    };\r\n    return convertFormToUrl(form);\r\n  }\r\n\r\n  // 2pp | not in use?\r\n  // #createOrEditMetadata(contentType: ContentType) {\r\n  //   this.#dialogRouter.navParentFirstChild([`edit/${this.#routeCreateOrEditMetadata(contentType)}`]);\r\n  // }\r\n\r\n  // #openPermissions(contentType: ContentType) {\r\n  //   this.#dialogRouter.navParentFirstChild([GoToPermissions.getUrlContentType(contentType.NameId)]);\r\n  // }\r\n\r\n  // #routeMetadata(ct: ContentType) {\r\n  //   return GoToMetadata.getUrlContentType(ct.NameId, `Metadata for Content Type: ${ct.Name} (${ct.Id})`);\r\n  // }\r\n\r\n  // #openMetadata(contentType: ContentType) {\r\n  //   this.#dialogRouter.navParentFirstChild([this.#routeMetadata(contentType)]);\r\n  // }\r\n\r\n  // #openRestApi(contentType: ContentType) {\r\n  //   this.#dialogRouter.navParentFirstChild([GoToDevRest.getUrlData(contentType)]);\r\n  // }\r\n\r\n  #exportType(contentType: ContentType) {\r\n    this.#contentExportSvc.exportJson(contentType.NameId);\r\n  }\r\n\r\n\r\n  #openDataImport(contentType: ContentType, files?: File[]) {\r\n    this.#dialogRouter.navRelative([`${contentType.NameId}/import`], { state: { files } satisfies ContentImportDialogData });\r\n  }\r\n\r\n  #deleteContentType(contentType: ContentType) {\r\n    if (!confirm(`Are you sure you want to delete '${contentType.Name}' (${contentType.Id})?`)) return;\r\n    this.#snackBar.open('Deleting...');\r\n    this.#contentTypeSvc.delete(contentType).subscribe(_ => {\r\n      this.#snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.#fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <!-- This is the table, you see in the Data Tab. The fields are defined inside the TS file -->\r\n  <ag-grid-angular\r\n    class=\"ag-theme-material\"\r\n    [rowData]=\"contentTypes()\"\r\n    [gridOptions]=\"gridOptions\"\r\n    appDragAndDrop\r\n    [allowedFileTypes]=\"'xml,json'\"\r\n    (filesDropped)=\"filesDropped($event)\"\r\n  >\r\n  </ag-grid-angular>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field eav-scope-dropdown\">\r\n        <mat-select\r\n          [ngModel]=\"scope()\"\r\n          name=\"Scope\"\r\n          (ngModelChange)=\"changeScope($event)\"\r\n          panelWidth=\"\"\r\n        >\r\n          <mat-select-trigger>\r\n            <span>Scope: {{ scopeSelected()?.label }}</span>\r\n          </mat-select-trigger>\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n            <mat-option [value]=\"scopeOption.name\">\r\n              {{ scopeOption.label }}\r\n            </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Scope: Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <a [href]=\"urlToImportType()\">\r\n        <button mat-button class=\"eav-button__with-icon\" tippy=\"Import content type\" tippyPlacement=\"top\">\r\n          <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n          <span>Content Type</span>\r\n        </button>\r\n      </a>\r\n      @if (isDebug()) {\r\n        <button\r\n          mat-button\r\n          class=\"eav-button__with-icon\"\r\n          color=\"accent\"\r\n          tippy=\"Create a ghost content type\"\r\n          tippyPlacement=\"top\"\r\n          (click)=\"createGhost()\"\r\n        >\r\n          <mat-icon class=\"eav-icon\">share</mat-icon>\r\n          <span>Ghost</span>\r\n        </button>\r\n      }\r\n    </div>\r\n    <a [href]=\"urlToNewContentType()\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new content type\" tippyPlacement=\"top\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </a>\r\n  </mat-dialog-actions>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { guidRegex } from '../../../shared/constants/guid.constants';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { ContentType } from '../../models/content-type.model';\r\nimport { AgActionsAlwaysRefresh } from '../../queries/ag-actions/ag-actions-component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-data-actions',\r\n    templateUrl: './data-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n        MatMenuModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class DataActionsComponent extends AgActionsAlwaysRefresh {\r\n  contentType: ContentType;\r\n  enablePermissions: boolean;\r\n\r\n  public params: {\r\n    enablePermissionsGetter(): boolean;\r\n\r\n    do(verb: 'typeExport' | 'deleteContentType', contentType: ContentType): void;\r\n    urlTo(verb: 'createUpdateMetaData'\r\n      | 'openPermissions'\r\n      | 'editContentType'\r\n      | 'openMetadata'\r\n      | 'openRestApi'\r\n      | 'dataExport'\r\n      | 'dataImport', contentType: ContentType): string;\r\n  };\r\n\r\n  agInit(params: ICellRendererParams & DataActionsComponent['params']): void {\r\n    this.params = params;\r\n    this.contentType = params.data;\r\n    const enablePermissions = this.params.enablePermissionsGetter();\r\n    this.enablePermissions = enablePermissions && guidRegex().test(this.contentType.NameId);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  @if (!contentType.EditInfo.DisableEdit || contentType.Properties) {\r\n    <a [href]=\"params.urlTo('createUpdateMetaData', contentType)\" class=\"eav-grid-action-button default-link highlight\" matRipple tippy=\"Description and more\">\r\n      <mat-icon>edit</mat-icon>\r\n    </a>\r\n  } @else {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>edit</mat-icon>\r\n    </div>\r\n  }\r\n\r\n  @if (!contentType.EditInfo.DisableMetadata) {\r\n    <a [href]=\"params.urlTo('openMetadata', contentType)\" class=\"eav-grid-action-button default-link highlight\" matRipple tippy=\"Metadata\">\r\n      <mat-icon\r\n        [matBadge]=\"contentType.Metadata.length\"\r\n        matBadgePosition=\"below after\"\r\n        matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\"\r\n        [matBadgeHidden]=\"!contentType.Metadata.length\"\r\n        aria-hidden=\"false\"\r\n      >\r\n        local_offer\r\n      </mat-icon>\r\n    </a>\r\n  } @else {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon\r\n        [matBadge]=\"contentType.Metadata.length\"\r\n        matBadgePosition=\"below after\"\r\n        matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\"\r\n        matBadgeDisabled=\"true\"\r\n        [matBadgeHidden]=\"!contentType.Metadata.length\"\r\n        aria-hidden=\"false\"\r\n      >\r\n        local_offer\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n\r\n  @if (!contentType.EditInfo.DisableEdit && enablePermissions) {\r\n    <a [href]=\"params.urlTo('openPermissions', contentType)\" class=\"eav-grid-action-button default-link highlight\" matRipple tippy=\"Permissions\">\r\n      <mat-icon\r\n        [matBadge]=\"contentType.Permissions.Count\"\r\n        matBadgePosition=\"below after\"\r\n        matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\"\r\n        [matBadgeHidden]=\"!contentType.Permissions.Count\"\r\n        aria-hidden=\"false\"\r\n      >\r\n        person</mat-icon\r\n      >\r\n    </a>\r\n  } @else {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon\r\n        [matBadge]=\"contentType.Permissions.Count\"\r\n        matBadgePosition=\"below after\"\r\n        matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\"\r\n        matBadgeDisabled=\"true\"\r\n        [matBadgeHidden]=\"!contentType.Permissions.Count\"\r\n        aria-hidden=\"false\"\r\n      >\r\n        person\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <a [href]=\"params.urlTo('editContentType', contentType)\" mat-menu-item [disabled]=\"contentType.EditInfo.DisableRename\">\r\n      <mat-icon>settings</mat-icon>\r\n      <span>Rename</span>\r\n    </a>\r\n    <a mat-menu-item [href]=\"params.urlTo('openRestApi', contentType)\">\r\n      <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n      <span>REST API</span>\r\n    </a>\r\n    <button mat-menu-item (click)=\"params.do('typeExport', contentType)\">\r\n      <mat-icon>cloud_download</mat-icon>\r\n      <span>Export content type</span>\r\n    </button>\r\n    <a mat-menu-item [href]=\"params.urlTo('dataExport', contentType)\">\r\n      <mat-icon>cloud_download</mat-icon>\r\n      <span>Export data</span>\r\n    </a>\r\n    <a mat-menu-item [href]=\"params.urlTo('dataImport', contentType)\">\r\n      <mat-icon>cloud_upload</mat-icon>\r\n      <span>Import data</span>\r\n    </a>\r\n    <button mat-menu-item [disabled]=\"contentType.EditInfo.DisableDelete\" (click)=\"params.do('deleteContentType', contentType)\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(isEqual),\r\n    map(fn),\r\n    distinctUntilChanged(isEqual),\r\n  );\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { ContentType } from '../../models';\r\n\r\n@Component({\r\n    selector: 'app-data-items',\r\n    templateUrl: './data-items.component.html',\r\n    styleUrls: ['./data-items.component.scss'],\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class DataItemsComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n  \r\n  /** Params, directly typed here and anywhere it's used should use this type definition */\r\n  public params: {\r\n    addItemUrl(contentType: ContentType): string;\r\n    itemsUrl(contentType: ContentType): string;\r\n  };\r\n\r\n  protected contentType: ContentType;\r\n\r\n  agInit(params: ICellRendererParams & DataItemsComponent[\"params\"]): void {\r\n    this.params = params;\r\n    this.contentType = params.data;\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <a class=\"eav-grid-action-button default-link highlight\" matRipple tippy=\"{{ value }} items\" [href]=\"params.itemsUrl(contentType)\">\r\n    <div class=\"text-icon\">{{ value }}</div>\r\n  </a>\r\n\r\n  <!-- TODO: fix color again -->\r\n  <a class=\"eav-grid-action-button default-link highlight\" matRipple tippy=\"Add item\" [href]=\"params.addItemUrl(contentType)\">\r\n    <mat-icon>add</mat-icon>\r\n  </a>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { ContentType } from '../../models/content-type.model';\r\n\r\n@Component({\r\n    selector: 'app-data-fields',\r\n    templateUrl: './data-fields.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class DataFieldsComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n  tooltip: string;\r\n  icon: string;\r\n\r\n  // TODO: @2pp - change all cases where Ag-Grid has separate interfaces to use this params mechanism\r\n  // 2dm will brief you\r\n  // 1. put type directly on the params (and make public)\r\n  // 2. make type checks (like in agInit) use this, as well as the type checks in the grid-definitions\r\n  // 3. where simple, call it directly from the HTML, don't create more methods which just call this again\r\n  public params: {\r\n    fieldsUrl(contentType: ContentType): string;\r\n  };\r\n  protected contentType: ContentType;\r\n\r\n  agInit(params: ICellRendererParams & DataFieldsComponent[\"params\"]): void {\r\n    this.params = params;\r\n    this.contentType = params.data;\r\n    this.value = params.value;\r\n    this.tooltip = !this.contentType.EditInfo.ReadOnly\r\n      ? 'Edit fields'\r\n      : `${this.contentType.EditInfo.ReadOnlyMessage ? `${this.contentType.EditInfo.ReadOnlyMessage}\\n\\n` : ''}This ContentType shares the definition of #${this.contentType.SharedDefId} so you can't edit it here. Read 2sxc.org/help?tag=shared-types`;\r\n    this.icon = !this.contentType.EditInfo.ReadOnly ? 'dns' : 'share';\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <a class=\"eav-grid-action-button default-link highlight\" matRipple [tippy]=\"tooltip\" [href]=\"params.fieldsUrl(contentType)\">\r\n    <mat-icon [matBadge]=\"value\" matBadgePosition=\"below after\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n      [matBadgeHidden]=\"!value\" aria-hidden=\"false\">\r\n      {{icon}}\r\n    </mat-icon>\r\n  </a>\r\n</div>"],"names":["computed","inject","signal","FormsModule","MatButtonModule","MatOptionModule","MatDialogActions","MatFormFieldModule","MatIconModule","MatSelectModule","MatSnackBar","NavigationEnd","RouterOutlet","filter","from","map","startWith","take","transient","ContentExportService","GoToDevRest","GoToMetadata","GoToPermissions","AgGridHelper","ColumnDefinitions","BaseComponent","defaultGridOptions","dropdownInsertValue","eavConstants","DragAndDropDirective","TippyDirective","toString","convertFormToUrl","EditPrep","SxcGridModule","DialogRoutingService","mapUntilChanged","GlobalConfigService","ContentTypesService","DialogConfigAppService","DataActionsComponent","DataFieldsComponent","DataItemsComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","scopeOption_r1","name","ɵɵadvance","ɵɵtextInterpolate1","label","ɵɵlistener","DataComponent_Conditional_19_Template_button_click_0_listener","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵresetView","createGhost","DataComponent","snackBar","contentTypeSvc","contentExportSvc","dialogConfigSvc","dialogRouter","constructor","isDebug","contentTypes","undefined","scope","scopeOptions","scopeSelected","find","s","gridOptions","buildGridOptions","ngOnInit","fetchScopes","refreshScopeOnRouteChange","doOnDialogClosed","fetchContentTypes","getCurrent$","subscribe","data","enablePermissions","Context","Enable","AppPermissions","filesDropped","files","importFile","ext","substring","lastIndexOf","toLocaleLowerCase","pipe","fileString","contentTypeName","split","contentType","ct","Name","message","open","duration","openDataImport","importType","dialogData","navRelative","state","urlToImportType","urlTo","editContentType","EditInfo","ReadOnly","NameId","#fetchContentTypes","retrieveContentTypes","_compareLabel","Label","replace","set","scopes","default","value","#fetchScopes","getScopesV2","scopeList","manual","sOld","sNew","withNiceLabel","countInfo","typesInherited","typesTotal","sourceName","window","prompt","_","changeScope","newScope","#refreshScopeOnRouteChange","subscriptions","add","router","events","event","getParam","m","option","includes","newScopeOption","typesOfApp","#buildGridOptions","columnDefs","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWidePrimary","headerName","field","sort","comparator","valueA","valueB","nodeA","nodeB","isInverted","contentTypeA","contentTypeB","localeCompare","cellRenderer","p","cellLink","Items","addItemUrl","routeAddItem","itemsUrl","Fields","fieldsUrl","TextWideMin100","cellClass","DisableEdit","valueGetter","onCellClicked","TextWideFlex3","Properties","Description","ActionsPinnedRight4","enablePermissionsGetter","verb","routeCreateOrEditMetadata","getUrlContentType","Id","getUrlData","do","exportType","deleteContentType","#urlTo","url","urlSubRoute","#routeAddItem","items","newFromType","urlToNewContentType","#routeCreateOrEditMetadata","form","newMetadata","metadata","Prefill","editId","#exportType","exportJson","#openDataImport","#deleteContentType","confirm","delete","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","DataComponent_Template","rf","ctx","DataComponent_Template_ag_grid_angular_filesDropped_1_listener","$event","DataComponent_Template_mat_select_ngModelChange_5_listener","ɵɵrepeaterCreate","DataComponent_For_10_Template","ɵɵrepeaterTrackByIdentity","ɵɵtemplate","DataComponent_Conditional_19_Template","ɵɵelement","tmp_4_0","ɵɵrepeater","ɵɵsanitizeUrl","ɵɵconditional","i1","MatFormField","i2","MatSelect","MatSelectTrigger","i3","MatOption","i4","NgControlStatus","NgModel","i5","MatButton","MatFabButton","i6","MatIcon","i7","AgGridAngular","styles","MatBadgeModule","MatRippleModule","MatMenuModule","guidRegex","AgActionsAlwaysRefresh","ctx_r0","params","Metadata","length","Permissions","Count","DataActionsComponent_ng_template_12_Template_button_click_9_listener","DataActionsComponent_ng_template_12_Template_button_click_24_listener","DisableRename","DisableDelete","agInit","test","__ngFactoryType__","DataActionsComponent_Template","DataActionsComponent_Conditional_1_Template","DataActionsComponent_Conditional_2_Template","DataActionsComponent_Conditional_3_Template","DataActionsComponent_Conditional_4_Template","DataActionsComponent_Conditional_5_Template","DataActionsComponent_Conditional_6_Template","DataActionsComponent_ng_template_12_Template","DisableMetadata","menu_r3","MatRipple","MatBadge","MatMenu","MatMenuItem","MatMenuContent","MatMenuTrigger","encapsulation","distinctUntilChanged","isEqual","fn","mapUntilObjChanged","refresh","DataItemsComponent_Template","ɵɵpropertyInterpolate1","ɵɵtextInterpolate","tooltip","ReadOnlyMessage","SharedDefId","icon","DataFieldsComponent_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}