{"version":3,"file":"projects_eav-ui_src_app_content-import_content-import_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/shared/directives/base.directive.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./projects/eav-ui/src/app/content-import/content-import.component.ts","./projects/eav-ui/src/app/content-import/content-import.component.html","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts","./projects/eav-ui/src/app/content-import/services/content-import.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseDirective implements OnDestroy {\r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { EntityLightIdentifier } from '../../../../../edit-types/src/EntityLight';\r\nimport { classLog } from '../logging';\r\nimport { HttpServiceBase } from './http-service-base';\r\nimport { QueryService } from './query.service';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getEntities: false,\r\n  getAvailableEntities: false,\r\n  delete: false,\r\n};\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService extends HttpServiceBase {\r\n\r\n  log = classLog({ EntityService }, logSpecs);\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityLightIdentifier[]> {\r\n    this.log.fnIf('getEntities');\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityLightIdentifier[]> {\r\n    var log = this.log.fnIf('getAvailableEntities');\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(appId: number, contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    this.log.fnIf('delete', { appId, contentType, entityId, force, parentId, parent });\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(nameId: string) {\r\n    return this.getHttpApiUrl<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    });\r\n  }\r\n\r\n  getTypeSig(nameId: string, initial: ContentType): Signal<ContentType> {\r\n    return this.getSignal<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    }, initial);\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.getHttpApiUrl<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  getTypesSig(scope: string, initial: ContentType[]): Signal<ContentType[]> {\r\n    return this.getSignal<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  // todo: switch to using the GetSignal with `map` parameter similar to the initial version above\r\n  getScopesSig(initial: undefined): Signal<ScopeOption[]> {\r\n    const scopesSignal = this.getSignal<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(\r\n      webApiTypeScopes,\r\n      { params: { appId: this.appId } }, initial,\r\n    );\r\n\r\n    const scopeOptionsSignal = computed(() => {\r\n      const scopesData = scopesSignal();\r\n\r\n      // Add null/undefined check here\r\n      if (!scopesData || !scopesData.old) {\r\n        return []; // Return an empty array or handle this case as appropriate\r\n      }\r\n\r\n      const scopes = scopesData.old;\r\n      return Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n    });\r\n\r\n    return scopeOptionsSignal;\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.NameId }, // TODO: @2pp - replace staticName with NameId\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceNameId: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceNameId },\r\n    });\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Component, HostBinding, Inject, OnInit, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\nimport { transient } from '../../../../core';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { DialogConfigAppService } from '../app-administration/services/dialog-config-app.service';\r\nimport { DragAndDropDirective } from '../shared/directives/drag-and-drop.directive';\r\nimport { ContentImportDialogData } from './content-import-dialog.config';\r\nimport { ContentImport, EvaluateContentResult, ImportContentResult } from './models/content-import.model';\r\nimport { ContentImportService } from './services/content-import.service';\r\n\r\n@Component({\r\n    selector: 'app-content-import',\r\n    templateUrl: './content-import.component.html',\r\n    styleUrls: ['./content-import.component.scss'],\r\n    imports: [\r\n        FormsModule,\r\n        MatButtonModule,\r\n        MatRadioModule,\r\n        MatDialogActions,\r\n        DragAndDropDirective,\r\n    ]\r\n})\r\nexport class ContentImportComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  private contentImportService = transient(ContentImportService);\r\n  private contentTypesService = transient(ContentTypesService);\r\n  private dialogConfigSvc = transient(DialogConfigAppService);\r\n\r\n  formValues: ContentImport;\r\n\r\n  private viewStates = {\r\n    waiting: 0,\r\n    default: 1,\r\n    evaluated: 2,\r\n    imported: 3,\r\n  };\r\n\r\n  contentType = signal<ContentType>(null);\r\n  viewStateSelected = signal(this.viewStates.default);\r\n  evaluationResult = signal<EvaluateContentResult>(null);\r\n  importResult = signal<ImportContentResult>(null);\r\n\r\n  errors: Record<number, string> = {\r\n    0: 'Unknown error occured.',\r\n    1: 'Selected content-type does not exist.',\r\n    2: 'Document is not a valid XML file.',\r\n    3: 'Selected content-type does not match the content-type in the XML file.',\r\n    4: 'The language is not supported.',\r\n    5: 'The document does not specify all languages for all entities.',\r\n    6: 'Language reference cannot be parsed, the language is not supported.',\r\n    7: 'Language reference cannot be parsed, the read-write protection is not supported.',\r\n    8: 'Value cannot be read, because of it has an invalid format.'\r\n  };\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: ContentImportDialogData,\r\n    private dialog: MatDialogRef<ContentImportComponent>,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const contentTypeTemp = this.contentTypesService.retrieveContentType(this.contentTypeStaticName);\r\n    const dialogSettings$ = this.dialogConfigSvc.getCurrent$();\r\n    forkJoin([contentTypeTemp, dialogSettings$]).subscribe(([contentType, dialogSettings]) => {\r\n      this.contentType.set(contentType);\r\n      this.formValues = {\r\n        defaultLanguage: dialogSettings.Context.Language.Primary,\r\n        contentType: this.contentTypeStaticName,\r\n        file: this.dialogData.files != null ? this.dialogData.files[0] : null,\r\n        resourcesReferences: 'Keep',\r\n        clearEntities: 'None',\r\n      };\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  evaluateContent() {\r\n    this.viewStateSelected.set(this.viewStates.waiting);\r\n    this.contentImportService.evaluateContent(this.formValues).subscribe(result => {\r\n      this.evaluationResult.set(result);\r\n      this.viewStateSelected.set(this.viewStates.evaluated);\r\n    });\r\n  }\r\n\r\n  importContent() {\r\n    this.viewStateSelected.set(this.viewStates.waiting);\r\n    this.contentImportService.importContent(this.formValues).subscribe(result => {\r\n      this.importResult.set(result);\r\n      this.viewStateSelected.set(this.viewStates.imported);\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.viewStateSelected.set(this.viewStates.default);\r\n    this.evaluationResult.set(null);\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    this.formValues.file = (event.target as HTMLInputElement).files[0];\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    this.formValues.file = importFile;\r\n  }\r\n}\r\n","<div class=\"eav-dialog\" appDragAndDrop [allowedFileTypes]=\"'xml'\" (filesDropped)=\"filesDropped($event)\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">{{ contentType()?.Name }} Import Data</div>\r\n  </div>\r\n  <div class=\"eav-dialog-description\">\r\n    <p>\r\n      This will import content-items into 2sxc. It requires that you already defined the content-type before you try\r\n      importing, and that you created the import-file using the template provided by the Export. Please visit\r\n      <a href=\"https://2sxc.org/help\" target=\"_blank\">https://2sxc.org/help</a> for more instructions.\r\n    </p>\r\n  </div>\r\n  @if (formValues != null) {\r\n  @switch (viewStateSelected()) {\r\n  <!-- FORM -->\r\n  @case (1) {\r\n  <form #ngForm=\"ngForm\">\r\n    <div class=\"eav-dialog-content\">\r\n      <div>\r\n        <button mat-raised-button tippy=\"Open file browser\" (click)=\"fileInput.click()\">\r\n          <span>{{ formValues.file ? formValues.file.name : 'Select or drop file' }}</span>\r\n        </button>\r\n        <input #fileInput type=\"file\" (change)=\"fileChange($event)\" class=\"hide\" />\r\n      </div>\r\n      <div>\r\n        <p class=\"eav-radio-group-label\">References to pages / files</p>\r\n        <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.resourcesReferences\"\r\n          name=\"ResourcesReferences\">\r\n          <mat-radio-button value=\"Keep\">\r\n            Import links as written in the file (for example /Portals/...)\r\n          </mat-radio-button>\r\n          <mat-radio-button value=\"Resolve\">\r\n            Try to resolve paths to references\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <div>\r\n        <p class=\"eav-radio-group-label\">Clear all other entities</p>\r\n        <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.clearEntities\" name=\"ClearEntities\">\r\n          <mat-radio-button value=\"None\">\r\n            Keep all entities not found in import\r\n          </mat-radio-button>\r\n          <mat-radio-button value=\"All\">\r\n            Remove all entities not found in import\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <p class=\"eav-hint\">Remember to backup your DNN first!</p>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" [disabled]=\"!formValues.file || !formValues.file.name\"\r\n        (click)=\"evaluateContent()\">\r\n        Preview Import\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n  }\r\n  <!-- END FORM -->\r\n  <!-- WAITING -->\r\n  @case (0) {\r\n  <div class=\"eav-dialog-content\">\r\n    <p>Please wait while processing...</p>\r\n  </div>\r\n  }\r\n  <!-- END WAITING -->\r\n  <!-- EVALUATION RESULT -->\r\n  @case (2) {\r\n  @if (evaluationResult()) {\r\n  <!-- DETAILS / STATISTICS -->\r\n  @if (evaluationResult().Success) {\r\n  <div class=\"eav-dialog-content\">\r\n    <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n    <p class=\"eav-evaluation__title\">File contains:</p>\r\n    <ul class=\"eav-evaluation__content\">\r\n      <li>{{ evaluationResult().Detail.DocumentElementsCount }} content-items (records/entities)</li>\r\n      <li>{{ evaluationResult().Detail.LanguagesInDocumentCount }} languages</li>\r\n      <li>{{ evaluationResult().Detail.AttributeNamesInDocument.length }} columns:\r\n        {{ evaluationResult().Detail.AttributeNamesInDocument.join(', ') }}</li>\r\n    </ul>\r\n    <p class=\"eav-evaluation__title\">If you press Import, it will:</p>\r\n    <ul class=\"eav-evaluation__content\">\r\n      <li>Create {{ evaluationResult().Detail.AmountOfEntitiesCreated }} content-items</li>\r\n      <li>Update {{ evaluationResult().Detail.AmountOfEntitiesUpdated }} content-items</li>\r\n      <li>Delete {{ evaluationResult().Detail.AmountOfEntitiesDeleted }} content-items</li>\r\n      <li>Ignore {{ evaluationResult().Detail.AttributeNamesNotImported.length }} columns:\r\n        {{ evaluationResult().Detail.AttributeNamesNotImported.join(', ') }}</li>\r\n    </ul>\r\n    <p class=\"eav-hint\">Note: The import validates much data and may take several minutes.</p>\r\n  </div>\r\n  }\r\n  <!-- END DETAILS / STATISTICS -->\r\n  <!-- ERRORS -->\r\n  @if (!evaluationResult().Success) {\r\n  <div class=\"eav-dialog-content\">\r\n    <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n    <ul class=\"eav-evaluation__content\">\r\n      @for (error of evaluationResult().Errors; track error) {\r\n      <li>\r\n        <div>{{ errors[error.ErrorCode] }}</div>\r\n        @if (error.ErrorDetail) {\r\n        <div><i>Details: {{ error.ErrorDetail }}</i></div>\r\n        }\r\n        @if (error.LineNumber) {\r\n        <div><i>Line-no: {{ error.LineNumber }}</i></div>\r\n        }\r\n        @if (error.LineDetail) {\r\n        <div><i>Line-details: {{ error.LineDetail }}</i></div>\r\n        }\r\n      </li>\r\n      }\r\n    </ul>\r\n  </div>\r\n  }\r\n  <!-- END ERRORS -->\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button (click)=\"back()\">Back</button>\r\n    <button mat-raised-button color=\"accent\" [disabled]=\"!evaluationResult().Success\" (click)=\"importContent()\">\r\n      Import\r\n    </button>\r\n  </mat-dialog-actions>\r\n  }\r\n  }\r\n  <!-- END EVALUATION RESULT -->\r\n  <!-- IMPORT RESULT -->\r\n  @case (3) {\r\n  @if (importResult()) {\r\n  <div class=\"eav-dialog-content\">\r\n    @if (importResult().Success) {\r\n    <p>Import done.</p>\r\n    }\r\n    @if (!importResult().Success) {\r\n    <p>Import failed.</p>\r\n    }\r\n  </div>\r\n  }\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button color=\"accent\" (click)=\"closeDialog()\">Close</button>\r\n  </mat-dialog-actions>\r\n  }\r\n  <!-- END IMPORT RESULT -->\r\n  }\r\n  }\r\n</div>\r\n","import { Directive, ElementRef, HostListener, input, NgZone, OnDestroy, OnInit, output, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent } from 'rxjs';\r\nimport { BaseDirective } from './base.directive';\r\n\r\n@Directive({\r\n  selector: '[appDragAndDrop]',\r\n})\r\nexport class DragAndDropDirective extends BaseDirective implements OnInit, OnDestroy {\r\n  markStyle = input<'outline' | 'fill' | 'shadow'>('outline');\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  allowedFileTypes = input<string>('');\r\n  protected filesDropped = output<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass = signal<string>('');\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass.set(`eav-droparea-${this.markStyle()}`);\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass());\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass(), this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes());\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes().replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { ContentImport, EvaluateContentResult, ImportContentRequest, ImportContentResult } from '../models/content-import.model';\r\nimport { webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class ContentImportService extends HttpServiceBase {\r\n\r\n  evaluateContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.appId,\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return this.http.post<EvaluateContentResult>(this.apiUrl(webApiEntityRoot + 'XmlPreview'), requestData).pipe(\r\n          map(result => {\r\n            if (!result.Success) {\r\n              result.Errors = result.Detail as any;\r\n              delete result.Detail;\r\n            }\r\n            return result;\r\n          }),\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  importContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.appId,\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return this.http.post<ImportContentResult>(this.apiUrl(webApiEntityRoot + 'XmlUpload'), requestData);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\nimport { Context } from './context';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getAvailableEntities: false,\r\n  getEntities: false,\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = classLog({QueryService}, logSpecs);\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getFromQuery(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["Subscription","BaseDirective","constructor","subscriptions","ngOnDestroy","unsubscribe","filter","map","shareReplay","switchMap","transient","classLog","HttpServiceBase","QueryService","logSpecs","all","getEntities","getAvailableEntities","delete","webApiEntityRoot","webApiEntityList","EntityService","log","queryService","getEntities$","params","fnIf","pipe","p","contentTypeName","entitiesFilter","contentTypes","itemIds","fields","data","Default","appId","contentType","entityId","force","parentId","parentField","parent","http","apiUrl","id","toString","__ngFactoryType__","factory","ɵfac","computed","Signal","webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","webApiTypeSave","webApiTypeDelete","webApiTypeImport","webApiTypeAddGhost","ContentTypesService","retrieveContentType","nameId","getHttpApiUrl","contentTypeId","getTypeSig","initial","getSignal","retrieveContentTypes","scope","getTypesSig","getScopes","scopesData","scopes","old","scopeOptions","Object","keys","key","name","value","getScopesSig","scopesSignal","scopeOptionsSignal","getScopesV2","save","post","appid","staticName","NameId","import","files","formData","FormData","file","append","zoneId","createGhost","sourceNameId","innerFrom","Observable","mergeMap","isArrayLike","isFunction","mapOneOrManyArgs","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","undefined","add","remove","isEventTarget","methodName","handler","isNodeStyleEventEmitter","toCommonHandlerRegistry","isJQueryStyleEventEmitter","subTarget","TypeError","subscriber","args","next","length","addListener","removeListener","on","off","addEventListener","removeEventListener","signal","FormsModule","MatButtonModule","MAT_DIALOG_DATA","MatDialogActions","MatDialogRef","MatRadioModule","ActivatedRoute","forkJoin","DialogConfigAppService","DragAndDropDirective","ContentImportService","i0","ɵɵelementStart","ɵɵlistener","ContentImportComponent_Conditional_10_Case_0_Template_button_click_4_listener","ɵɵrestoreView","_r1","fileInput_r2","ɵɵreference","ɵɵresetView","click","ɵɵtext","ɵɵelementEnd","ContentImportComponent_Conditional_10_Case_0_Template_input_change_7_listener","$event","ctx_r2","ɵɵnextContext","fileChange","ɵɵtwoWayListener","ContentImportComponent_Conditional_10_Case_0_Template_mat_radio_group_ngModelChange_12_listener","ɵɵtwoWayBindingSet","formValues","resourcesReferences","ContentImportComponent_Conditional_10_Case_0_Template_mat_radio_group_ngModelChange_20_listener","clearEntities","ContentImportComponent_Conditional_10_Case_0_Template_button_click_28_listener","closeDialog","ContentImportComponent_Conditional_10_Case_0_Template_button_click_30_listener","evaluateContent","ɵɵadvance","ɵɵtextInterpolate","ɵɵtwoWayProperty","ɵɵproperty","ɵɵtextInterpolate1","evaluationResult","Detail","DocumentElementsCount","LanguagesInDocumentCount","ɵɵtextInterpolate2","AttributeNamesInDocument","join","AmountOfEntitiesCreated","AmountOfEntitiesUpdated","AmountOfEntitiesDeleted","AttributeNamesNotImported","error_r5","ErrorDetail","LineNumber","LineDetail","ɵɵtemplate","ContentImportComponent_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_3_Template","ContentImportComponent_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_4_Template","ContentImportComponent_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_5_Template","errors","ErrorCode","ɵɵconditional","ɵɵrepeaterCreate","ContentImportComponent_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","Errors","ContentImportComponent_Conditional_10_Case_2_Conditional_0_Conditional_0_Template","ContentImportComponent_Conditional_10_Case_2_Conditional_0_Conditional_1_Template","ContentImportComponent_Conditional_10_Case_2_Conditional_0_Template_button_click_3_listener","_r4","back","ContentImportComponent_Conditional_10_Case_2_Conditional_0_Template_button_click_5_listener","importContent","Success","ContentImportComponent_Conditional_10_Case_2_Conditional_0_Template","ContentImportComponent_Conditional_10_Case_3_Conditional_0_Conditional_1_Template","ContentImportComponent_Conditional_10_Case_3_Conditional_0_Conditional_2_Template","importResult","ContentImportComponent_Conditional_10_Case_3_Conditional_0_Template","ContentImportComponent_Conditional_10_Case_3_Template_button_click_2_listener","_r6","ContentImportComponent_Conditional_10_Case_0_Template","ContentImportComponent_Conditional_10_Case_1_Template","ContentImportComponent_Conditional_10_Case_2_Template","ContentImportComponent_Conditional_10_Case_3_Template","tmp_1_0","viewStateSelected","ContentImportComponent","dialogData","dialog","route","hostClass","contentImportService","contentTypesService","dialogConfigSvc","viewStates","waiting","default","evaluated","imported","contentTypeStaticName","snapshot","paramMap","get","ngOnInit","contentTypeTemp","dialogSettings$","getCurrent$","subscribe","dialogSettings","set","defaultLanguage","Context","Language","Primary","close","result","event","filesDropped","importFile","ɵɵdirectiveInject","i1","i2","selectors","hostVars","hostBindings","ContentImportComponent_HostBindings","rf","ctx","ɵɵhostProperty","ContentImportComponent_Template_div_filesDropped_0_listener","ContentImportComponent_Conditional_10_Template","Name","i3","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","NgModel","NgForm","i4","MatButton","i5","MatRadioGroup","MatRadioButton","styles","ElementRef","input","NgZone","output","MatSnackBar","elementRef","zone","snackBar","markStyle","allowedFileTypes","dropAreaClass","markStyleClass","dragClass","timeouts","element","nativeElement","classList","runOutsideAngular","preventDefault","stopPropagation","clearTimeouts","push","window","setTimeout","onDrop","fileList","dataTransfer","Array","from","filterTypes","emit","timeout","clearTimeout","allowedTypes","split","type","toLocaleLowerCase","filtered","extIndex","lastIndexOf","ext","substring","allowed","includes","allowedTypesString","replace","message","open","duration","DragAndDropDirective_HostBindings","DragAndDropDirective_drop_HostBindingHandler","toBase64","fileBase64","requestData","AppId","DefaultLanguage","ContentType","ContentBase64","ResourcesReferences","ClearEntities","HttpClient","context","getFromQuery","queryUrl","hasParams","paramsLower","hasAppId","allParams","urlParams","Guids","ɵɵinject","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","readAsText"],"sourceRoot":"webpack:///","x_google_ignoreList":[3]}