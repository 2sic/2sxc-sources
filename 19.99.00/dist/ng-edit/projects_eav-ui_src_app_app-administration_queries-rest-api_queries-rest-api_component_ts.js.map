{"version":3,"file":"projects_eav-ui_src_app_app-administration_queries-rest-api_queries-rest-api_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/queries-rest-api/queries-rest-api.component.ts","./projects/eav-ui/src/app/app-administration/queries-rest-api/queries-rest-api.component.html"],"sourcesContent":["import { Component, computed, effect, inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../../../../core';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { classLog } from '../../shared/logging';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Query } from '../models';\r\nimport { PipelinesService } from '../services';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  queryTypes: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'app-web-api-rest-api',\r\n    imports: [\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        ReactiveFormsModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n    ],\r\n    templateUrl: './queries-rest-api.component.html'\r\n})\r\nexport class QueriesRestApiComponent {\r\n  log = classLog({ QueriesRestApiComponent }, logSpecs);\r\n\r\n  #pipelinesSvc = transient(PipelinesService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  #formBuilder = inject(FormBuilder);\r\n\r\n  constructor() {\r\n    // Update form if the url changes and the item is found\r\n    effect(() => {\r\n      const queryTypes = this.queryTypes();\r\n      if (queryTypes.length === 0)\r\n        return;\r\n      const urlGuidName = this.#dialogRouter.urlSegments.at(-1);\r\n      const selectedContentType = queryTypes.find(q => q.Guid === urlGuidName);\r\n      if (selectedContentType)\r\n        this.queryTypeForm.get('queryType').setValue(selectedContentType.Guid);\r\n    });\r\n  }\r\n\r\n  #getAllQueryTypes = this.#pipelinesSvc.getAllRes(eavConstants.contentTypes.query, []);\r\n\r\n  queryTypes = computed<Query[]>(() => {\r\n    const l = this.log.fnIf('queryTypes');\r\n    const queries = this.#getAllQueryTypes.value();\r\n    return l.r(queries || []);\r\n  }, { });\r\n\r\n  queryTypeForm: FormGroup = this.#formBuilder.group({\r\n    queryType: ['']\r\n  });\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.#dialogRouter.navRelative([`${event}`]);\r\n  }\r\n}\r\n","\r\n<form [formGroup]=\"queryTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Query</mat-label>\r\n    <mat-select formControlName=\"queryType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (queryTypes()) {\r\n        @for (contentType of queryTypes().sort(); track contentType) {\r\n        <mat-option [value]=\"contentType.Guid\">\r\n          {{ contentType.Name }}\r\n        </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n"],"names":["computed","effect","inject","FormBuilder","ReactiveFormsModule","MatButtonModule","MatCardModule","MatIconModule","MatSelectModule","RouterOutlet","transient","eavConstants","classLog","SxcGridModule","DialogRoutingService","PipelinesService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","contentType_r1","Guid","ɵɵadvance","ɵɵtextInterpolate1","Name","ɵɵrepeaterCreate","QueriesRestApiComponent_Conditional_5_For_1_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","ctx_r1","queryTypes","sort","logSpecs","all","QueriesRestApiComponent","pipelinesSvc","dialogRouter","formBuilder","constructor","log","getAllQueryTypes","getAllRes","contentTypes","query","l","fnIf","queries","value","r","queryTypeForm","group","queryType","length","urlGuidName","urlSegments","at","selectedContentType","find","q","get","setValue","openRestApi","event","navRelative","selectors","decls","vars","consts","template","QueriesRestApiComponent_Template","rf","ctx","ɵɵlistener","QueriesRestApiComponent_Template_mat_select_valueChange_4_listener","$event","ɵɵtemplate","QueriesRestApiComponent_Conditional_5_Template","ɵɵelement","ɵɵconditional","i1","MatFormField","MatLabel","i2","MatSelect","i3","MatOption","i4","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}