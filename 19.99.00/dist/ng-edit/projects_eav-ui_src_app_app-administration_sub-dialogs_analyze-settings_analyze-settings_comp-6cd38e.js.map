{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_analyze-settings_analyze-settings_comp-6cd38e.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.html"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\n\r\n@Component({\r\n    selector: 'app-analyze-settings-key',\r\n    templateUrl: './analyze-settings-key.component.html',\r\n    styleUrls: ['./analyze-settings-key.component.scss'],\r\n    imports: [\r\n        MatRippleModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AnalyzeSettingsKeyComponent implements ICellRendererAngularComp {\r\n  key: string;\r\n\r\n  constructor() { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.key = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div matRipple class=\"key-box highlight\" [tippy]=\"key\" (click)=\"clipboard.copyToClipboard(key)\">\r\n  <span class=\"key\">{{ key }}</span>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, computed, OnInit, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { Of, transient } from '../../../../../../core';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../../shared/routing/dialog-routing.service';\r\nimport { ViewsService } from '../../services';\r\nimport { AnalyzeSettingsService } from '../../services/analyze-settings.service';\r\nimport { AnalyzeSettingsKeyComponent } from './analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from './analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results/analyze-settings-total-results.models';\r\nimport { AnalyzeSettingsValueComponent } from './analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzeParts } from './analyze-settings.models';\r\n\r\n@Component({\r\n    selector: 'app-analyze-settings',\r\n    templateUrl: './analyze-settings.component.html',\r\n    styleUrls: ['./analyze-settings.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        FormsModule,\r\n        MatOptionModule,\r\n        SxcGridModule,\r\n    ]\r\n})\r\nexport class AnalyzeSettingsComponent implements OnInit {\r\n  part: Of<typeof AnalyzeParts>;\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  #viewsSvc = transient(ViewsService);\r\n  #analyzeSettingsSvc = transient(AnalyzeSettingsService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<AnalyzeSettingsComponent>,\r\n  ) {\r\n    this.part = this.#dialogRouter.getParam('part') as Of<typeof AnalyzeParts>;\r\n  }\r\n\r\n  selectedView = signal<string>(undefined);\r\n  views = this.#viewsSvc.getAll();\r\n\r\n  stack = computed(() =>\r\n    this.#analyzeSettingsSvc.getStackSig(this.part, undefined, this.selectedView(), true)\r\n  );\r\n\r\n  ngOnInit(): void {\r\n    this.#getStack();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  changeView(viewGuid: string): void {\r\n    this.selectedView.set(viewGuid);\r\n    this.#getStack();\r\n  }\r\n\r\n\r\n  #getStack(): void {\r\n    this.stack();\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Key',\r\n          field: 'Path',\r\n          cellRenderer: AnalyzeSettingsKeyComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Value',\r\n          field: '_value',\r\n          cellRenderer: AnalyzeSettingsValueComponent,\r\n        },\r\n        {\r\n          field: 'Source',\r\n          ...ColumnDefinitions.TextNarrow,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Items,\r\n          headerName: 'Total',\r\n          field: 'TotalResults',\r\n          width: 72,\r\n          cellClass: 'no-outline',\r\n          cellRenderer: AnalyzeSettingsTotalResultsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AnalyzeSettingsTotalResultsParams = {\r\n              openDetails: (stackItem) => {\r\n                this.#dialogRouter.navRelative([`details/${this.selectedView()}/${stackItem.Path}`]);\r\n              },\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Analyze {{ part }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"padding-class\">\r\n    <p class=\"dialog-description\">\r\n      Settings and Resources are consolidated from many sources. Here you see what the resulting values would be.\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <mat-form-field color=\"accent\" class=\"view-select-box\">\r\n      <mat-label>Merge settings / resources of a View</mat-label>\r\n      <mat-select [ngModel]=\"selectedView()\" (ngModelChange)=\"changeView($event)\">\r\n        <mat-option [value]=\"undefined\">No view selected - this is how APIs see the data</mat-option>\r\n        @for (view of views(); track view) {\r\n        <mat-option [value]=\"view.Guid\">{{ view.Name }}</mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"grid-wrapper padding-class\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"stack()()\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { SettingsStackItem } from '../analyze-settings.models';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results.models';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-analyze-settings-total-results',\r\n    templateUrl: './analyze-settings-total-results.component.html',\r\n    styleUrls: ['./analyze-settings-total-results.component.scss'],\r\n    imports: [\r\n        MatIconModule,\r\n        MatRippleModule,\r\n    ]\r\n})\r\nexport class AnalyzeSettingsTotalResultsComponent implements ICellRendererAngularComp {\r\n  totalResults: number;\r\n\r\n  private stackItem: SettingsStackItem;\r\n  private params: ICellRendererParams & AnalyzeSettingsTotalResultsParams;\r\n\r\n  agInit(params: ICellRendererParams & AnalyzeSettingsTotalResultsParams): void {\r\n    this.totalResults = params.value;\r\n    this.params = params;\r\n    this.stackItem = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openDetails(): void {\r\n    this.params.openDetails(this.stackItem);\r\n  }\r\n}\r\n","@if (totalResults <= 1) {\r\n  <div class=\"input-component no-click\">\r\n    <div>{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n@if (totalResults > 1) {\r\n  <div matRipple class=\"input-component highlight\" tippy=\"Open details\" (click)=\"openDetails()\">\r\n    <div class=\"text\">{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}"],"names":["MatRippleModule","transient","TippyDirective","ClipboardService","AnalyzeSettingsKeyComponent","constructor","clipboard","agInit","params","key","value","refresh","selectors","decls","vars","consts","template","AnalyzeSettingsKeyComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","AnalyzeSettingsKeyComponent_Template_div_click_0_listener","copyToClipboard","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","i1","MatRipple","styles","computed","signal","FormsModule","MatButtonModule","MatOptionModule","MatDialogRef","MatFormFieldModule","MatIconModule","MatSelectModule","RouterOutlet","ColumnDefinitions","defaultGridOptions","SxcGridModule","DialogRoutingService","ViewsService","AnalyzeSettingsService","AnalyzeSettingsTotalResultsComponent","AnalyzeSettingsValueComponent","view_r1","Guid","Name","AnalyzeSettingsComponent","viewsSvc","analyzeSettingsSvc","dialogRouter","dialog","gridOptions","buildGridOptions","selectedView","undefined","views","getAll","stack","getStackSig","part","getParam","ngOnInit","getStack","closeDialog","close","changeView","viewGuid","set","#getStack","columnDefs","TextWideActionClass","headerName","field","cellRenderer","TextNarrow","Items","width","cellClass","cellRendererParams","openDetails","stackItem","navRelative","Path","ɵɵdirectiveInject","AnalyzeSettingsComponent_Template","AnalyzeSettingsComponent_Template_button_click_5_listener","ɵɵelement","AnalyzeSettingsComponent_Template_mat_select_ngModelChange_15_listener","$event","ɵɵrepeaterCreate","AnalyzeSettingsComponent_For_19_Template","ɵɵrepeaterTrackByIdentity","ɵɵtextInterpolate1","ɵɵrepeater","i2","MatIconButton","i3","MatIcon","i4","MatFormField","MatLabel","i5","MatSelect","i6","MatOption","i7","NgControlStatus","NgModel","i8","AgGridAngular","ctx_r0","totalResults","AnalyzeSettingsTotalResultsComponent_Conditional_1_Template_div_click_0_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","data","AnalyzeSettingsTotalResultsComponent_Template","ɵɵtemplate","AnalyzeSettingsTotalResultsComponent_Conditional_0_Template","AnalyzeSettingsTotalResultsComponent_Conditional_1_Template","ɵɵconditional"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}