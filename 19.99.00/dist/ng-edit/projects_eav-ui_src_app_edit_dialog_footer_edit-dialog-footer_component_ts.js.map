{"version":3,"file":"projects_eav-ui_src_app_edit_dialog_footer_edit-dialog-footer_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/edit/dialog/footer/logs-config/config-editor-dialog/config-editor-dialog.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/config-editor-dialog/config-editor-dialog.component.html","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/specs-editor-dialog/specs-editor-dialog.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/specs-editor-dialog/specs-editor-dialog.component.html","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.html","./node_modules/@angular/cdk/fesm2022/clipboard.mjs","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.html","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/logs-config.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-config/logs-config.component.html","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/snippet-label-size.pipe.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts"],"sourcesContent":["import { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { Component, HostBinding, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogActions,\r\n  MatDialogClose,\r\n  MatDialogModule, MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { transient } from '../../../../../../../../core/transient';\r\nimport { ClipboardService } from '../../../../..//shared/services/clipboard.service';\r\nimport { MonacoEditorComponent } from '../../../../../monaco-editor/monaco-editor.component';\r\nimport { TippyDirective } from '../../../../../shared/directives/tippy.directive';\r\n@Component({\r\n    imports: [\r\n        MatDialogModule,\r\n        FormsModule,\r\n        MonacoEditorComponent,\r\n        MatButtonModule,\r\n        MatDialogActions,\r\n        MatDialogClose,\r\n        ClipboardModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ],\r\n    selector: 'app-monaco-editor-dialog',\r\n    templateUrl: './config-editor-dialog.component.html'\r\n})\r\nexport class ConfigEditorDialogComponent {\r\n\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  \r\n  selectedConfig: string;\r\n  focused = false;\r\n  editorOptions = {\r\n    theme: 'vs-light',\r\n    language: 'json',\r\n    readOnly: true,\r\n    automaticLayout: true,\r\n    minimap: { enabled: false },\r\n    scrollBeyondLastLine: false,\r\n  };\r\n  filename = 'exported-config.json';\r\n\r\n  constructor(\r\n    public dialog: MatDialogRef<ConfigEditorDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.selectedConfig = JSON.stringify(data.configData, null, 2);\r\n  }\r\n  \r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  onFocused(focused: boolean): void {\r\n    this.focused = focused;\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Configs Exporter</div>\r\n    <button mat-icon-button mat-dialog-close tippy=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\" style=\"padding-bottom: 0;\">\r\n    <app-monaco-editor\r\n      [filename]=\"filename\"\r\n      [value]=\"selectedConfig\"\r\n      [options]=\"editorOptions\"\r\n      (focused)=\"onFocused(true)\"\r\n      (blurred)=\"onFocused(false)\"\r\n      style=\"height: 350px; width: 100%\"\r\n    />\r\n  </div>\r\n  <mat-dialog-actions>\r\n    <button mat-icon-button (click)=\"clipboard.copyToClipboard(selectedConfig)\" tippy=\"Copy Config To Clipboard\">\r\n      <mat-icon>content_copy</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { JsonPipe, NgClass } from '@angular/common';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { Of } from '../../../../../../../core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { MonacoEditorComponent } from '../../../../monaco-editor/monaco-editor.component';\r\nimport { eavConstants } from '../../../../shared/constants/eav.constants';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../../shared/logging';\r\nimport { EditPrep } from '../../../../shared/models/edit-form.model';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\nimport { EntityEditService } from '../../../../shared/services/entity-edit.service';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { DesignerState } from '../../../formulas/designer/designer-state.model';\r\nimport { FormulaDesignerService } from '../../../formulas/designer/formula-designer.service';\r\nimport { defaultFormula, defaultListItemFormula } from '../../../formulas/formula-definitions';\r\nimport { FormulaIdentifier } from '../../../formulas/results/formula-results.models';\r\nimport { FormulaNewPickerTargets, FormulaTargets } from '../../../formulas/targets/formula-targets';\r\nimport { ContentTypeService } from '../../../shared/content-types/content-type.service';\r\nimport { ItemService } from '../../../state/item.service';\r\nimport { SelectTargets } from './formula-designer.models';\r\nimport { SnippetLabelSizePipe } from './snippet-label-size.pipe';\r\n\r\n@Component({\r\n    selector: 'app-formula-designer',\r\n    templateUrl: './formula-designer.component.html',\r\n    styleUrls: ['./formula-designer.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        FormsModule,\r\n        MatOptionModule,\r\n        NgClass,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MonacoEditorComponent,\r\n        MatMenuModule,\r\n        JsonPipe,\r\n        SnippetLabelSizePipe,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class FormulaDesignerComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({FormulaDesignerComponent});\r\n\r\n  #designerSvc = inject(FormulaDesignerService);\r\n\r\n  #entitiesService = transient(EntityEditService);\r\n  \r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private formConfig: FormConfigService,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  SelectTargets = SelectTargets;\r\n  loadError = false;\r\n  freeTextTarget = false;\r\n  allowSaveFormula = this.formConfig.config.enableFormulaSave;\r\n  isDeleted = signal(false);\r\n  saving = signal(false);\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    minimap: {\r\n      enabled: false,\r\n    },\r\n    lineHeight: 19,\r\n    lineNumbers: 'off',\r\n    lineDecorationsWidth: 0,\r\n    folding: false,\r\n    scrollBeyondLastLine: false,\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n  filename = `formula${this.formConfig.config.formId}.js`;\r\n  focused = false;\r\n\r\n\r\n  protected state = this.#designerSvc.designerState;\r\n  protected result = this.#designerSvc.formulaResult;\r\n  protected targetOptions = this.#designerSvc.currentTargetOptions;\r\n  \r\n  protected entityOptions = this.#designerSvc.entityOptions;\r\n  protected fieldsOptions = this.#designerSvc.fieldsOptions;\r\n  protected currentFormula = this.#designerSvc.currentFormula;\r\n\r\n  protected v2JsTypings = this.#designerSvc.v2JsTypings;\r\n\r\n  protected v1ContextSnippets = this.#designerSvc.v1ContextSnippets;\r\n  protected v1DataSnippets = this.#designerSvc.v1DataSnippets;\r\n\r\n  protected template = computed(() => Object.values(FormulaNewPickerTargets).includes(this.state().target)\r\n    ? defaultListItemFormula\r\n    : defaultFormula\r\n  );\r\n\r\n\r\n  ngOnInit(): void {\r\n    // Make sure all necessary services have what they need, otherwise flag & exit\r\n    // 1. Make sure the designer has access to all itemSettingsServices\r\n    this.loadError = false;\r\n    if (Object.keys(this.#designerSvc.itemSettingsServices).length < 1) {\r\n      this.loadError = true;\r\n      return;\r\n    }\r\n    \r\n    this.#designerSvc.setDesignerOpen(true);\r\n    this.#designerSvc.initAfterItemSettingsAreReady();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.#designerSvc.setDesignerOpen(false);\r\n  }\r\n\r\n  selectedChanged(target: Of<typeof SelectTargets>, value: string | Of<typeof FormulaTargets>): void {\r\n    const newState: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    switch (target) {\r\n      case SelectTargets.Entity:\r\n        newState.entityGuid = value;\r\n        const selectedSettingsSvc = this.#designerSvc.itemSettingsServices[newState.entityGuid];\r\n        newState.fieldName = Object.keys(selectedSettingsSvc.allProps())[0];\r\n        break;\r\n      case SelectTargets.Field:\r\n        newState.fieldName = value;\r\n        break;\r\n      case SelectTargets.Target:\r\n        newState.target = value as Of<typeof FormulaTargets>;\r\n        break;\r\n    }\r\n\r\n    this.#designerSvc.designerState.set(newState);\r\n  }\r\n\r\n  toggleFreeText(): void {\r\n    this.freeTextTarget = !this.freeTextTarget;\r\n  }\r\n\r\n  formulaChanged(formula: string): void {\r\n    this.#designerSvc.cache.updateFormulaFromEditor(this.#designerIdentifier, formula, false);\r\n  }\r\n\r\n  onFocused(focused: boolean): void {\r\n    this.focused = focused;\r\n  }\r\n\r\n  toggleEdit(): void {\r\n    const oldState = this.#designerSvc.designerState();\r\n    const designer: DesignerState = {\r\n      ...oldState,\r\n      editMode: !oldState.editMode,\r\n    };\r\n    this.#designerSvc.designerState.set(designer);\r\n    if (designer.editMode && this.#designerSvc.currentFormula() == null)\r\n      this.#designerSvc.cache.updateFormulaFromEditor(this.#designerIdentifier, this.template(), false);\r\n  }\r\n\r\n  reset(): void {\r\n    const designer: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    const identifier = this.#designerIdentifier;\r\n    this.#designerSvc.designerState.set(designer);\r\n    this.#designerSvc.cache.resetFormula(identifier);\r\n    this.#designerSvc.itemSettingsServices[identifier.entityGuid].retriggerFormulas('designer-reset');\r\n  }\r\n\r\n  run(): void {\r\n    const identifier = this.#designerIdentifier;\r\n    const formula = this.#designerSvc.currentFormula();\r\n    this.#designerSvc.cache.updateFormulaFromEditor(identifier, formula.sourceCode, true);\r\n    this.#designerSvc.itemSettingsServices[identifier.entityGuid].retriggerFormulas('designer-run');\r\n    this.isDeleted.set(false);\r\n  }\r\n\r\n  get #designerIdentifier(): FormulaIdentifier {\r\n    const designer = this.#designerSvc.designerState();\r\n    const id: FormulaIdentifier = { entityGuid: designer.entityGuid, fieldName: designer.fieldName, target: designer.target };\r\n    return id;\r\n  }\r\n\r\n  //#region Save/Delete\r\n\r\n  save(): void {\r\n    this.saving.set(true);\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    if (formula.sourceCodeId == null) {\r\n      const item = this.itemService.get(formula.entityGuid);\r\n      const attributeDef = this.contentTypeService.getAttributeOfItem(item, formula.fieldName);\r\n      const atAllFieldSettings = attributeDef.Metadata.find(m => m.Type.Id === '@All');\r\n      if (!atAllFieldSettings) {\r\n        this.snackBar.open('Field configuration is missing. Please create formula in Administration', undefined, { duration: 3000 });\r\n        this.saving.set(false);\r\n        return;\r\n      }\r\n      this.#entitiesService.create(\r\n        eavConstants.contentTypes.formulas,\r\n        {\r\n          Title: formula.target,\r\n          Target: formula.target,\r\n          Formula: formula.sourceCode,\r\n          Enabled: true,\r\n          ParentRelationship: EditPrep.relationship(atAllFieldSettings.Guid, 'Formulas'),\r\n        },\r\n      ).subscribe(savedFormula => {\r\n        this.#designerSvc.cache.updateSaved(formula, savedFormula.Guid, savedFormula.Id);\r\n        this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n        this.saving.set(false);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.#entitiesService.update(eavConstants.contentTypes.formulas, formula.sourceCodeId, { Formula: formula.sourceCode }).subscribe(() => {\r\n      this.#designerSvc.cache.updateSaved(formula, formula.sourceCodeGuid, formula.sourceCodeId);\r\n      this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n      this.saving.set(false);\r\n    });\r\n  }\r\n\r\n  deleteFormula(): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    const id = formula.sourceCodeId;\r\n    const title = formula.fieldName + ' - ' + formula.target;\r\n\r\n    const confirmed = confirm(this.translate.instant('Data.Delete.Question', { title, id }));\r\n    if (!confirmed)\r\n      return;\r\n\r\n    this.#entitiesService.delete(eavConstants.contentTypes.formulas, formula.sourceCodeId, true)\r\n      .subscribe({\r\n        next: () => {\r\n          this.#designerSvc.cache.delete(formula);\r\n          this.snackBar.open(this.translate.instant('Message.Deleted'), null, { duration: 2000 });\r\n          this.isDeleted.set(true);\r\n          if (designer.editMode)\r\n            this.toggleEdit();\r\n        },\r\n        error: (_: HttpErrorResponse) => {\r\n          this.snackBar.open(this.translate.instant('Message.DeleteError'), null, { duration: 2000 });\r\n        }\r\n      });\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n","@if (!loadError) {\r\n  <div class=\"formula-context-box\">\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Entity</mat-label>\r\n      <mat-select [ngModel]=\"state().entityGuid\" (ngModelChange)=\"selectedChanged(SelectTargets.Entity, $event)\">\r\n        @for (entityOption of entityOptions(); track entityOption.entityGuid)\r\n        {\r\n          <mat-option\r\n            [value]=\"entityOption.entityGuid\">\r\n            <span [ngClass]=\"{ 'has-formula': entityOption.hasFormula }\">\r\n              {{ entityOption.label }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Attribute</mat-label>\r\n      <mat-select [ngModel]=\"state().fieldName\" (ngModelChange)=\"selectedChanged(SelectTargets.Field, $event)\"\r\n        [disabled]=\"state().entityGuid == null\">\r\n        @for (fieldOption of fieldsOptions(); track fieldOption.fieldName)\r\n        {\r\n          <mat-option\r\n            [value]=\"fieldOption.fieldName\">\r\n            <span [ngClass]=\"{ 'has-formula': fieldOption.hasFormula }\">\r\n              {{ fieldOption.fieldName }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Target</mat-label>\r\n      @if (!freeTextTarget)\r\n      {\r\n        <mat-select [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n          @for (targetOption of targetOptions(); track targetOption) {\r\n            <mat-option [value]=\"targetOption.target\">\r\n              <span [ngClass]=\"{ 'has-formula': targetOption.hasFormula }\">\r\n                {{ targetOption.label }}\r\n              </span>\r\n            </mat-option>\r\n          }\r\n        </mat-select>\r\n      }\r\n      @else\r\n      {\r\n        <input matInput [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n      }\r\n    </mat-form-field>\r\n    <button mat-icon-button tippy=\"FreeText Target\" class=\"eav-formula-button\"\r\n      [disabled]=\"state().entityGuid == null || state().fieldName == null\" (click)=\"toggleFreeText()\">\r\n      <mat-icon>text_fields</mat-icon>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n    <a mat-icon-button tippy=\"Help\" class=\"eav-formula-button\" href=\"https://go.2sxc.org/formulas\" target=\"_blank\">\r\n      <mat-icon>help</mat-icon>\r\n    </a>\r\n  </div>\r\n  <div class=\"formula-box\">\r\n    <div class=\"formula-field\" [ngClass]=\"{\r\n      'disabled': !state().editMode || state().entityGuid == null || state().fieldName == null || state().target == null,\r\n      'focused': focused\r\n      }\">\r\n      <mat-label class=\"label\">Function</mat-label>\r\n      <app-monaco-editor class=\"editor\" [filename]=\"filename\" [value]=\"currentFormula()?.sourceCode ?? template()\"\r\n        [jsTypings]=\"v2JsTypings()\" (valueChanged)=\"formulaChanged($event)\" [options]=\"monacoOptions\"\r\n        (focused)=\"onFocused(true)\" (blurred)=\"onFocused(false)\">\r\n      </app-monaco-editor>\r\n    </div>\r\n    <div class=\"formula-snippets fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': !state().editMode }\">\r\n      @for (snippet of v1DataSnippets(); track snippet.code)\r\n      {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"clipboard.copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n      @if (v1DataSnippets()?.length && v1ContextSnippets().length)\r\n      {\r\n        <div class=\"separator\"></div>\r\n      }\r\n      @for (snippet of v1ContextSnippets(); track snippet.code)\r\n      {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"clipboard.copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n    </div>\r\n  </div>\r\n  <div class=\"formula-footer-box\">\r\n    <div class=\"formula-result-box hide-scrollbar\">\r\n      <span class=\"label\">Result:&nbsp;</span>\r\n      @if (result() != null && !isDeleted())\r\n      {\r\n        @if (!result().isError)\r\n        {\r\n          @if (result().value !== undefined) {\r\n            <span>{{ result().value | json }}</span>\r\n          }\r\n          @else if (!result().isOnlyPromise) {\r\n            <span class=\"result-undefined\">undefined</span>\r\n          }\r\n          @else {\r\n            <span>promise(🤞🏽)</span>\r\n          }\r\n        }\r\n        @else\r\n        {\r\n          <span class=\"result-error\">\r\n            Calculation failed. Please check console for more info\r\n          </span>\r\n        }\r\n      }\r\n    </div>\r\n    <div class=\"formula-actions-box\">\r\n      <button mat-icon-button tippy=\"Edit\" (click)=\"toggleEdit()\">\r\n        <mat-icon>edit</mat-icon>\r\n      </button>\r\n      <button mat-icon-button tippy=\"Menu\" [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"deleteFormula()\"\r\n          [disabled]=\"!currentFormula()?.sourceCodeId\">\r\n          <mat-icon>delete</mat-icon>\r\n          <span>Delete</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"reset()\">\r\n          <mat-icon>history</mat-icon>\r\n          <span>Reset</span>\r\n        </button>\r\n      </mat-menu>\r\n      @if (allowSaveFormula)\r\n      {\r\n        <button mat-icon-button tippy=\"Save\"\r\n          [tippyDisabled]=\"!state().editMode || !currentFormula()?.sourceCode\"\r\n          [disabled]=\"!state().editMode || !currentFormula()?.sourceCode || saving()\" (click)=\"save()\">\r\n          <mat-icon>save</mat-icon>\r\n        </button>\r\n      }\r\n      <button mat-icon-button tippy=\"Run\"\r\n        [disabled]=\"!state().editMode || !currentFormula()?.sourceCode\" (click)=\"run()\">\r\n        <mat-icon>play_arrow</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { Of } from '../../../../../../core';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { EavWindow } from '../../../shared/models/eav-window.model';\r\nimport { UserPreferences } from '../../../shared/user/user-preferences.service';\r\nimport { DataDumpComponent } from './data-dump/data-dump.component';\r\nimport { DebugTypes } from './edit-dialog-footer.models';\r\nimport { footerPreferences } from './footer-preferences';\r\nimport { FormulaDesignerComponent } from './formula-designer/formula-designer.component';\r\nimport { LogsDumpComponent } from './logs-dump/logs-dump.component';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n    selector: 'app-edit-dialog-footer',\r\n    templateUrl: './edit-dialog-footer.component.html',\r\n    styleUrls: ['./edit-dialog-footer.component.scss'],\r\n    imports: [\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        NgClass,\r\n        DataDumpComponent,\r\n        FormulaDesignerComponent,\r\n        LogsDumpComponent,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class EditDialogFooterComponent {\r\n\r\n  log = classLog({EditDialogFooterComponent});\r\n\r\n  DebugTypes = DebugTypes;\r\n\r\n  sxcVer = window.sxcVersion.substring(0, window.sxcVersion.lastIndexOf('.'));\r\n  \r\n  prefManager = inject(UserPreferences).part(footerPreferences);\r\n  preferences = this.prefManager.data;\r\n\r\n  toggleDialog(type: Of<typeof DebugTypes>): void {\r\n    const s = this.preferences();\r\n    const hideTab = s.tab === type;\r\n    const tab = hideTab ? null :  type;\r\n    const expanded = hideTab ? false : s.expanded;\r\n    const size = hideTab ? 0 : expanded ? 2 : 1;\r\n    this.prefManager.setMany({ tab, expanded, size });\r\n  }\r\n\r\n  toggleSize(): void {\r\n    const expanded = !this.preferences().expanded;\r\n    const size = expanded ? 2 : 1;\r\n    this.prefManager.setMany({ expanded, size });\r\n  }\r\n\r\n  pinResource(part: string): string {\r\n    return pinResources[(`${part}-${this.preferences().pinned}`)];\r\n  }\r\n}\r\n\r\nconst pinResources: Record<string, string> = {\r\n  ['status-true']: 'pinned - will remain visible on reload',\r\n  ['status-false']: 'not pinned - will hide on reload',\r\n  ['icon-true']: 'keep_public',\r\n  ['icon-false']: 'keep_off',\r\n}\r\n","<mat-card appearance=\"raised\" class=\"mat-elevation-z4\" [ngClass]=\"{ 'debug-enabled': preferences().tab != null }\">\r\n  \r\n  <div class=\"debug-buttons-container\">\r\n    <button mat-button tippy=\"Show Data JSON\" (click)=\"toggleDialog(DebugTypes.Data)\">\r\n      <mat-icon>offline_bolt</mat-icon>\r\n      <span>Data</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Formula Designer\" (click)=\"toggleDialog(DebugTypes.Formulas)\">\r\n      <mat-icon>functions</mat-icon>\r\n      <span>Formulas</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Logs\" (click)=\"toggleDialog(DebugTypes.Logs)\">\r\n      <mat-icon>speed</mat-icon>\r\n      <span>Logs</span>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n\r\n    <!-- Special expand button when working with formulas, to get more space -->\r\n    @if (preferences().tab != null)\r\n    {\r\n      <button mat-icon-button tippy=\"expand/shrink\" (click)=\"toggleSize()\">\r\n        <mat-icon>{{ preferences().expanded ? 'unfold_less' : 'expand' }}</mat-icon>\r\n      </button>\r\n    }\r\n    @else\r\n    {\r\n      <button mat-icon-button [tippy]=\"'Developer tools are only visible to developers. ' + pinResource('status')\" (click)=\"prefManager.toggle('pinned')\">\r\n        <mat-icon>{{ pinResource('icon') }}</mat-icon>\r\n      </button>\r\n    }\r\n\r\n    <div class=\"sxc-version\">\r\n      2sxc {{ sxcVer }}\r\n    </div>\r\n  </div>\r\n\r\n  @if (preferences().tab != null)\r\n  {\r\n    <div class=\"debug-info-container\" [ngClass]=\"'size' + (preferences().expanded ? '-xl' : '')\">\r\n      @switch (preferences().tab) {\r\n        @case (DebugTypes.Data) {\r\n          <app-data-dump></app-data-dump>\r\n        }\r\n        @case (DebugTypes.Formulas) {\r\n          <app-formula-designer></app-formula-designer>\r\n        }\r\n        @case (DebugTypes.Logs) {\r\n          <app-logs-dump></app-logs-dump>\r\n        }\r\n      }\r\n    </div>\r\n  }\r\n</mat-card>","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogActions,\r\n  MatDialogClose,\r\n  MatDialogModule,\r\n  MatDialogRef\r\n} from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MonacoEditorComponent } from '../../../../../monaco-editor/monaco-editor.component';\r\nimport { TippyDirective } from '../../../../../shared/directives/tippy.directive';\r\n@Component({\r\n    imports: [\r\n        MatDialogModule,\r\n        FormsModule,\r\n        MonacoEditorComponent,\r\n        MatButtonModule,\r\n        MatDialogActions,\r\n        MatDialogClose,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ],\r\n    selector: 'app-monaco-editor-dialog',\r\n    templateUrl: './specs-editor-dialog.component.html'\r\n})\r\nexport class SpecsEditorDialogComponent {\r\n\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  logSpecs: string;\r\n  focused = false;\r\n  editorOptions = {\r\n    theme: 'vs-light',\r\n    language: 'json',\r\n    readOnly: false,\r\n    automaticLayout: true,\r\n    minimap: { enabled: false },\r\n    scrollBeyondLastLine: false,\r\n  };\r\n  filename = 'log-specs.json';\r\n\r\n  constructor(\r\n    public dialog: MatDialogRef<SpecsEditorDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.logSpecs = JSON.stringify(data.logSpecs, null, 2);\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  onSave(): void {\r\n    this.dialog.close(this.logSpecs);\r\n  }\r\n\r\n  onValueChanged(newValue: string): void {\r\n    this.logSpecs = newValue;\r\n  }\r\n\r\n  onFocused(focused: boolean): void {\r\n    this.focused = focused;\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Log Specs Editor</div>\r\n    <button mat-icon-button mat-dialog-close tippy=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\" style=\"padding-bottom: 0;\">\r\n    <app-monaco-editor\r\n      [filename]=\"filename\"\r\n      [value]=\"logSpecs\"\r\n      [options]=\"editorOptions\"\r\n      (valueChanged)=\"onValueChanged($event)\"\r\n      (focused)=\"onFocused(true)\"\r\n      (blurred)=\"onFocused(false)\"\r\n      style=\"height: 350px; width: 100%\"\r\n    />\r\n  </div>\r\n  <mat-dialog-actions>\r\n    <button mat-icon-button (click)=\"onSave()\" tippy=\"Save Specs\">\r\n      <mat-icon>save</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Of } from '../../../../../../../core';\r\nimport { FormulaCacheItem } from '../../../formulas/cache/formula-cache.model';\r\nimport { FormulaTargets } from '../../../formulas/targets/formula-targets';\r\n\r\nexport interface EntityOption {\r\n  entityGuid: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  label: string;\r\n}\r\n\r\nexport interface FieldOption {\r\n  fieldName: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  inputType: string;\r\n  label: string;\r\n}\r\n\r\nexport interface TargetOption {\r\n  hasFormula: boolean;\r\n  label: string;\r\n  target: Of<typeof FormulaTargets>;\r\n}\r\n\r\nexport interface DesignerSnippet {\r\n  code: string;\r\n  label: string;\r\n}\r\n\r\nexport const SelectTargets = {\r\n  Entity: 'entityGuid',\r\n  Field: 'fieldValue',\r\n  Target: 'formulaTarget',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Component } from '@angular/core';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { ItemService } from '../../../state/item.service';\r\n\r\n@Component({\r\n    selector: 'app-data-dump',\r\n    templateUrl: './data-dump.component.html',\r\n    styleUrls: ['./data-dump.component.scss'],\r\n    imports: [JsonPipe]\r\n})\r\nexport class DataDumpComponent {\r\n  protected items = this.itemService.getManySignal(this.formConfig.config.itemGuids);\r\n  constructor(private itemService: ItemService, private formConfig: FormConfigService) { }\r\n}\r\n","  <textarea readonly class=\"fancy-scrollbar-light\">{{ items() | json }}</textarea>\r\n\r\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, InjectionToken, NgZone, EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n    _document;\n    _textarea;\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = (this._textarea = this._document.createElement('textarea'));\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n        textarea.readOnly = true;\n        // The element needs to be inserted into the fullscreen container, if the page\n        // is in fullscreen mode, otherwise the browser won't execute the copy command.\n        (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try {\n            // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            textarea.remove();\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    _document = inject(DOCUMENT);\n    constructor() { }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: Clipboard, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: Clipboard, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    _clipboard = inject(Clipboard);\n    _ngZone = inject(NgZone);\n    /** Content to be copied. */\n    text = '';\n    /**\n     * How many times to attempt to copy the text. This may be necessary for longer text, because\n     * the browser needs time to fill an intermediate textarea element and copy the content.\n     */\n    attempts = 1;\n    /**\n     * Emits when some text is copied to the clipboard. The\n     * emitted value indicates whether copying was successful.\n     */\n    copied = new EventEmitter();\n    /** Copies that are currently being attempted. */\n    _pending = new Set();\n    /** Whether the directive has been destroyed. */\n    _destroyed;\n    /** Timeout for the current copy attempt. */\n    _currentTimeout;\n    constructor() {\n        const config = inject(CDK_COPY_TO_CLIPBOARD_CONFIG, { optional: true });\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: CdkCopyToClipboard, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.0\", type: CdkCopyToClipboard, isStandalone: true, selector: \"[cdkCopyToClipboard]\", inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" }, host: { listeners: { \"click\": \"copy()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: CdkCopyToClipboard, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCopyToClipboard]',\n                    host: {\n                        '(click)': 'copy()',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { text: [{\n                type: Input,\n                args: ['cdkCopyToClipboard']\n            }], attempts: [{\n                type: Input,\n                args: ['cdkCopyToClipboardAttempts']\n            }], copied: [{\n                type: Output,\n                args: ['cdkCopyToClipboardCopied']\n            }] } });\n\nclass ClipboardModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.0\", ngImport: i0, type: ClipboardModule, imports: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: ClipboardModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: ClipboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkCopyToClipboard],\n                    exports: [CdkCopyToClipboard],\n                }]\n        }] });\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n","import { DatePipe, NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { LogEntry, LoggingService, LogSeverities } from '../../../shared/services/logging.service';\r\nimport { LogsConfigComponent } from \"../logs-config/logs-config.component\";\r\n\r\n@Component({\r\n    selector: 'app-logs-dump',\r\n    templateUrl: './logs-dump.component.html',\r\n    styleUrls: ['./logs-dump.component.scss'],\r\n    imports: [\r\n        NgClass,\r\n        DatePipe,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        LogsConfigComponent,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class LogsDumpComponent {\r\n  LogSeverities = LogSeverities;\r\n  showSettings = true;\r\n\r\n  protected logs = this.loggingService.getLogsSignal();\r\n\r\n  constructor(private loggingService: LoggingService) { }\r\n\r\n  logToConsole(log: LogEntry): void {\r\n    switch (log.severity) {\r\n      case LogSeverities.Log:\r\n        console.log(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Warn:\r\n        console.warn(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Error:\r\n        console.error(log.label, log.error);\r\n        break;\r\n    }\r\n  }\r\n\r\n  showLogSettings(show: boolean): void {\r\n    this.showSettings = show;\r\n  }\r\n}\r\n\r\n","<div class=\"logs-box fancy-scrollbar-light\">\r\n  <div class=\"logs-content\">\r\n    @if (!showSettings) {\r\n      @if (logs().length === 0) {\r\n        <div>Logs are empty</div>\r\n      } \r\n      @for (log of logs(); track log) {\r\n        <div\r\n          class=\"log-entry\"\r\n          [ngClass]=\"{\r\n            'log-error': log.severity === LogSeverities.Error,\r\n            'log-warn': log.severity === LogSeverities.Warn\r\n          }\"\r\n        >\r\n          <span class=\"log-entry-part log-entry-time\"\r\n            >{{ log.time | date : \"HH:mm:ss\" }}:</span\r\n          >\r\n          <span class=\"log-entry-part log-entry-label\">{{ log.label }}</span>\r\n          <span\r\n            class=\"log-entry-part log-entry-show\"\r\n            tippy=\"Log to console\"\r\n            (click)=\"logToConsole(log)\"\r\n          >\r\n            console\r\n          </span>\r\n        </div>\r\n      }\r\n    } @else {\r\n      <app-logs-config />\r\n    }\r\n  </div>\r\n\r\n  <div class=\"log-button\">\r\n    <button mat-icon-button tippy=\"Show Logs Settings\" (click)=\"showLogSettings(true)\">\r\n      <mat-icon>settings</mat-icon>\r\n    </button>\r\n    <button mat-icon-button tippy=\"Show Logs Output\" (click)=\"showLogSettings(false)\">\r\n      <mat-icon>contract</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { LogManager } from '../../../../shared/logging/log-manager';\r\nimport { LoggingService, LogSeverities } from '../../../shared/services/logging.service';\r\nimport { ConfigEditorDialogComponent } from '../logs-config/config-editor-dialog/config-editor-dialog.component';\r\nimport { SpecsEditorDialogComponent } from '../logs-config/specs-editor-dialog/specs-editor-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-logs-config',\r\n  templateUrl: './logs-config.component.html',\r\n  styleUrls: ['./logs-config.component.scss'],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    TippyDirective,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n  ]\r\n})\r\nexport class LogsConfigComponent {\r\n  LogSeverities = LogSeverities;\r\n  logManager = LogManager.singleton();\r\n  allLogs = this.logManager.mergeAllSpecs;\r\n  configs: string[] = [];\r\n  sessionPrefix = 'logSpecs';\r\n  selectedFilter: \"activated\" | \"deactivated\" | \"\";\r\n  selectedConfig: string | null = null;\r\n  searchTerm: string = '';\r\n\r\n  protected logs = this.loggingService.getLogsSignal();\r\n\r\n  constructor(\r\n    private loggingService: LoggingService,\r\n    private matDialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) { this.loadConfigsFromStateManager(); }\r\n\r\n  /* Toggle Functions */\r\n  checkAll(): void {\r\n    const allChecked = Object.values(this.allLogs).every(\r\n      (specs) => specs.enabled\r\n    );\r\n\r\n    if (allChecked) {\r\n      // Reset all to unchecked\r\n      for (const spec of Object.keys(this.allLogs)) {\r\n        if (this.isChecked(spec)) {\r\n          this.logManager.toggle(spec);\r\n        }\r\n      }\r\n    } else {\r\n      for (const spec of Object.keys(this.allLogs)) {\r\n        if (!this.isChecked(spec)) {\r\n          this.logManager.toggle(spec);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.applyFilters();\r\n  }\r\n\r\n  onFilterSelected(filter: \"activated\" | \"deactivated\" | \"\"): void {\r\n    this.selectedFilter = filter;\r\n    this.applyFilters();\r\n  }\r\n\r\n  filterLogs(event: Event): void {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    this.searchTerm = inputElement.value.toLowerCase(); // Store the search term\r\n    this.applyFilters();\r\n  }\r\n\r\n  isChecked(name: string): boolean {\r\n    return this.allLogs[name]?.enabled ?? false;\r\n  }\r\n\r\n  toggleConfig(name: string): void {\r\n    this.logManager.toggle(name);\r\n    this.applyFilters();\r\n  }\r\n\r\n  /* Config Functions */\r\n  loadConfigsFromStateManager(): void {\r\n    const savedConfigs = Object.keys(this.logManager.state.cache).filter(\r\n      (key) => key.startsWith(this.sessionPrefix)\r\n    );\r\n    this.configs = savedConfigs.map((key) =>\r\n      key.replace(`${this.sessionPrefix}.`, '')\r\n    );\r\n  }\r\n\r\n  onConfigSelected(configName: string | null): void {\r\n    this.selectedConfig = configName;\r\n  }\r\n\r\n  private applyFilters(): void {\r\n \r\n    let filteredLogs = Object.entries(this.logManager.mergeAllSpecs); // Always start from full logs\r\n  \r\n    if (this.searchTerm) {\r\n      filteredLogs = filteredLogs.filter(([key]) => key.toLowerCase().includes(this.searchTerm));\r\n    }\r\n  \r\n    if (this.selectedFilter === 'activated') {\r\n      filteredLogs = filteredLogs.filter(([, log]) => log.enabled);\r\n    } else if (this.selectedFilter === 'deactivated') {\r\n      filteredLogs = filteredLogs.filter(([, log]) => !log.enabled);\r\n    }\r\n  \r\n    this.allLogs = Object.fromEntries(filteredLogs);\r\n  }\r\n\r\n  saveConfig(): void {\r\n    const configName = prompt('Enter the config name:');\r\n  \r\n    if (configName) {\r\n      // Save all activated logs, irrespective of the filters\r\n      const enabledConfigs = Object.fromEntries(\r\n        Object.entries(this.logManager.mergeAllSpecs).filter(\r\n          ([, config]) => config.enabled\r\n        )\r\n      );\r\n  \r\n      const fullConfigKey = `${this.sessionPrefix}.${configName}`;\r\n      this.logManager.state.add(fullConfigKey, enabledConfigs);\r\n  \r\n      this.snackBar.open(`Config \"${configName}\" has been saved.`, null, {\r\n        duration: 2000,\r\n      });\r\n      this.loadConfigsFromStateManager();\r\n    }\r\n  }\r\n  \r\n  exportConfig(): void {\r\n    const fullConfigKey = `${this.sessionPrefix}.${this.selectedConfig}`;\r\n    const configData = this.logManager.state.cache[fullConfigKey];\r\n\r\n    if (configData && Object.keys(configData).length > 0) {\r\n      this.matDialog.open(ConfigEditorDialogComponent, {\r\n        width: '800px',\r\n        data: { configData },\r\n      });\r\n    } else {\r\n      this.snackBar.open(`No active logs to export for \"${this.selectedConfig}\".`, null, {\r\n        duration: 2000,\r\n      });\r\n    }\r\n    \r\n    this.applyFilters();\r\n  }\r\n\r\n  /* Specs Editor Dialog Functions */\r\n  hasLogSpecs(logKey: string): boolean {\r\n    const specs = this.allLogs[logKey]?.specs;\r\n    return !!specs && Object.keys(specs).length > 0;\r\n  }\r\n\r\n  openLogSpecs(logKey: string): void {\r\n    let logSpecs = this.allLogs[logKey].specs;\r\n    const dialogRef = this.matDialog.open(SpecsEditorDialogComponent, {\r\n      width: '800px',\r\n      data: { logSpecs: logSpecs },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        const updatedSpecs = JSON.parse(result);\r\n\r\n        this.allLogs[logKey].specs = updatedSpecs;\r\n\r\n        this.logManager.updateSpecs(this.allLogs);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"log-content fancy-scrollbar-light\">\r\n  <div class=\"menu\">\r\n    <mat-form-field id=\"search-input\" color=\"accent\">\r\n      <mat-label>Search</mat-label>\r\n      <input matInput placeholder=\"Search\" (input)=\"filterLogs($event)\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field id=\"active-filter-dropdown\" color=\"accent\">\r\n      <mat-label>Show</mat-label>\r\n      <mat-select [(value)]=\"selectedFilter\" (selectionChange)=\"onFilterSelected($event.value)\">\r\n        <mat-option value=\"\"> All </mat-option>\r\n        <mat-option value=\"activated\"> Activated </mat-option>\r\n        <mat-option value=\"deactivated\"> Deactivated </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    \r\n    <button mat-icon-button tippy=\"Toggle All Logs in View\" (click)=\"checkAll()\">\r\n      <mat-icon>check_box</mat-icon>\r\n    </button>\r\n\r\n    <button mat-icon-button (click)=\"saveConfig()\" tippy=\"Save Configuration with all selected Logs\">\r\n      <mat-icon>save</mat-icon>\r\n    </button>\r\n\r\n    <button\r\n      mat-icon-button\r\n      [disabled]=\"selectedConfig === null\"\r\n      (click)=\"exportConfig()\"\r\n      tippy=\"Export the selected configuration from the saved Configs\"\r\n    >\r\n      <mat-icon>ios_share</mat-icon>\r\n    </button>\r\n    \r\n    <mat-form-field color=\"accent\">\r\n      <mat-label>Configs</mat-label>\r\n      <mat-select\r\n        [(value)]=\"selectedConfig\"\r\n        (selectionChange)=\"onConfigSelected($event.value)\"\r\n      >\r\n        <mat-option *ngFor=\"let config of configs\" [value]=\"config\">\r\n          {{ config }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n  <div *ngFor=\"let log of allLogs | keyvalue\">\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        [id]=\"log.key\"\r\n        [name]=\"log.key\"\r\n        [checked]=\"isChecked(log.key)\"\r\n        (change)=\"toggleConfig(log.key)\"\r\n      />\r\n      {{ log.key }}\r\n      @if (hasLogSpecs(log.key)) {\r\n        <button (click)=\"openLogSpecs(log.key)\" tippy=\"Edit Log Specs\">\r\n          <mat-icon class=\"specs-icon\">data_object</mat-icon>\r\n        </button>\r\n      }\r\n    </label>\r\n  </div>\r\n</div>\r\n","export const DebugTypes = {\r\n  Data: 'data',\r\n  Formulas: 'formulas',\r\n  Logs: 'logs',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'snippetLabelSize',\r\n})\r\nexport class SnippetLabelSizePipe implements PipeTransform {\r\n\r\n  private maxLength = 24;\r\n\r\n  transform(label: string): string {\r\n    if (label.length <= this.maxLength) { return label; }\r\n    return `…${label.substring(label.length - this.maxLength)}`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { webApiEntityRoot } from './entity.service';\r\nimport { HttpServiceBase } from './http-service-base';\r\n\r\n@Injectable()\r\nexport class EntityEditService extends HttpServiceBase {\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.appId, force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n"],"names":["ClipboardModule","FormsModule","MatButtonModule","MAT_DIALOG_DATA","MatDialogModule","MatDialogRef","MatIconModule","transient","ClipboardService","MonacoEditorComponent","TippyDirective","ConfigEditorDialogComponent","constructor","dialog","data","hostClass","focused","editorOptions","theme","language","readOnly","automaticLayout","minimap","enabled","scrollBeyondLastLine","filename","clipboard","selectedConfig","JSON","stringify","configData","onFocused","i0","ɵɵdirectiveInject","i1","selectors","hostVars","hostBindings","ConfigEditorDialogComponent_HostBindings","rf","ctx","ɵɵhostProperty","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ConfigEditorDialogComponent_Template_app_monaco_editor_focused_8_listener","ConfigEditorDialogComponent_Template_app_monaco_editor_blurred_8_listener","ConfigEditorDialogComponent_Template_button_click_10_listener","copyToClipboard","ɵɵadvance","ɵɵproperty","MatDialogClose","MatDialogActions","i2","MatIconButton","i3","MatIcon","encapsulation","JsonPipe","NgClass","computed","inject","signal","MatOptionModule","MatFormFieldModule","MatInputModule","MatMenuModule","MatSelectModule","MatSnackBar","TranslateService","eavConstants","classLog","EditPrep","EntityEditService","FormConfigService","FormulaDesignerService","defaultFormula","defaultListItemFormula","FormulaNewPickerTargets","ContentTypeService","ItemService","SelectTargets","SnippetLabelSizePipe","entityOption_r3","entityGuid","ɵɵpureFunction1","_c2","hasFormula","ɵɵtextInterpolate1","label","fieldOption_r4","fieldName","targetOption_r6","target","FormulaDesignerComponent_Conditional_0_Conditional_16_Template_mat_select_ngModelChange_0_listener","$event","ɵɵrestoreView","_r5","ctx_r1","ɵɵnextContext","ɵɵresetView","selectedChanged","Target","ɵɵrepeaterCreate","FormulaDesignerComponent_Conditional_0_Conditional_16_For_2_Template","ɵɵrepeaterTrackByIdentity","state","ɵɵrepeater","targetOptions","FormulaDesignerComponent_Conditional_0_Conditional_17_Template_input_ngModelChange_0_listener","_r7","FormulaDesignerComponent_Conditional_0_For_32_Template_div_click_0_listener","snippet_r9","_r8","$implicit","code","ɵɵpipeBind1","ɵɵelement","FormulaDesignerComponent_Conditional_0_For_35_Template_div_click_0_listener","snippet_r11","_r10","ɵɵtextInterpolate","result","value","ɵɵtemplate","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_1_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_2_Template","ɵɵconditional","undefined","isOnlyPromise","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_1_Template","isError","FormulaDesignerComponent_Conditional_0_Conditional_60_Template_button_click_0_listener","_r12","save","editMode","tmp_3_0","currentFormula","sourceCode","tmp_4_0","saving","FormulaDesignerComponent_Conditional_0_Template_mat_select_ngModelChange_4_listener","_r1","Entity","FormulaDesignerComponent_Conditional_0_For_6_Template","_forTrack0","FormulaDesignerComponent_Conditional_0_Template_mat_select_ngModelChange_10_listener","Field","FormulaDesignerComponent_Conditional_0_For_12_Template","_forTrack1","FormulaDesignerComponent_Conditional_0_Conditional_16_Template","FormulaDesignerComponent_Conditional_0_Conditional_17_Template","FormulaDesignerComponent_Conditional_0_Template_button_click_18_listener","toggleFreeText","FormulaDesignerComponent_Conditional_0_Template_app_monaco_editor_valueChanged_29_listener","formulaChanged","FormulaDesignerComponent_Conditional_0_Template_app_monaco_editor_focused_29_listener","FormulaDesignerComponent_Conditional_0_Template_app_monaco_editor_blurred_29_listener","FormulaDesignerComponent_Conditional_0_For_32_Template","_forTrack2","FormulaDesignerComponent_Conditional_0_Conditional_33_Template","FormulaDesignerComponent_Conditional_0_For_35_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Template","FormulaDesignerComponent_Conditional_0_Template_button_click_42_listener","toggleEdit","FormulaDesignerComponent_Conditional_0_Template_button_click_50_listener","deleteFormula","FormulaDesignerComponent_Conditional_0_Template_button_click_55_listener","reset","FormulaDesignerComponent_Conditional_0_Conditional_60_Template","FormulaDesignerComponent_Conditional_0_Template_button_click_61_listener","run","entityOptions","fieldsOptions","freeTextTarget","ɵɵpureFunction2","_c0","tmp_11_0","template","v2JsTypings","monacoOptions","_c1","v1DataSnippets","tmp_16_0","length","v1ContextSnippets","isDeleted","menu_r13","tmp_20_0","sourceCodeId","allowSaveFormula","tmp_22_0","FormulaDesignerComponent","designerSvc","entitiesService","snackBar","formConfig","itemService","contentTypeService","translate","log","loadError","config","enableFormulaSave","lineHeight","lineNumbers","lineDecorationsWidth","folding","tabSize","fixedOverflowWidgets","formId","designerState","formulaResult","currentTargetOptions","Object","values","includes","ngOnInit","keys","itemSettingsServices","setDesignerOpen","initAfterItemSettingsAreReady","ngOnDestroy","newState","selectedSettingsSvc","allProps","set","formula","cache","updateFormulaFromEditor","designerIdentifier","oldState","designer","identifier","resetFormula","retriggerFormulas","#designerIdentifier","id","item","get","attributeDef","getAttributeOfItem","atAllFieldSettings","Metadata","find","m","Type","Id","open","duration","create","contentTypes","formulas","Title","Formula","Enabled","ParentRelationship","relationship","Guid","subscribe","savedFormula","updateSaved","update","sourceCodeGuid","title","confirmed","confirm","instant","delete","next","error","_","i4","i5","decls","vars","consts","FormulaDesignerComponent_Template","FormulaDesignerComponent_Conditional_0_Template","i6","MatFormField","MatLabel","i7","MatSelect","i8","MatOption","i9","DefaultValueAccessor","NgControlStatus","NgModel","i10","MatInput","i11","MatIconAnchor","i12","i13","MatMenu","MatMenuItem","MatMenuTrigger","styles","MatCardModule","UserPreferences","DataDumpComponent","DebugTypes","footerPreferences","LogsDumpComponent","EditDialogFooterComponent_Conditional_18_Template_button_click_0_listener","toggleSize","preferences","expanded","EditDialogFooterComponent_Conditional_19_Template_button_click_0_listener","_r3","prefManager","toggle","pinResource","EditDialogFooterComponent_Conditional_22_Case_1_Template","EditDialogFooterComponent_Conditional_22_Case_2_Template","EditDialogFooterComponent_Conditional_22_Case_3_Template","tmp_2_0","tab","Data","Formulas","Logs","EditDialogFooterComponent","sxcVer","window","sxcVersion","substring","lastIndexOf","part","toggleDialog","type","s","hideTab","size","setMany","pinResources","pinned","EditDialogFooterComponent_Template","EditDialogFooterComponent_Template_button_click_2_listener","EditDialogFooterComponent_Template_button_click_7_listener","EditDialogFooterComponent_Template_button_click_12_listener","EditDialogFooterComponent_Conditional_18_Template","EditDialogFooterComponent_Conditional_19_Template","EditDialogFooterComponent_Conditional_22_Template","MatCard","MatButton","SpecsEditorDialogComponent","logSpecs","onClose","close","onSave","onValueChanged","newValue","SpecsEditorDialogComponent_HostBindings","SpecsEditorDialogComponent_Template_app_monaco_editor_valueChanged_8_listener","SpecsEditorDialogComponent_Template_app_monaco_editor_focused_8_listener","SpecsEditorDialogComponent_Template_app_monaco_editor_blurred_8_listener","SpecsEditorDialogComponent_Template_button_click_10_listener","items","getManySignal","itemGuids","DataDumpComponent_Template","DOCUMENT","Injectable","InjectionToken","NgZone","EventEmitter","Directive","Input","Output","NgModule","PendingCopy","_document","_textarea","text","textarea","createElement","style","position","top","opacity","left","setAttribute","fullscreenElement","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","execCommand","focus","destroy","remove","Clipboard","pendingCopy","beginCopy","ɵfac","Clipboard_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","CDK_COPY_TO_CLIPBOARD_CONFIG","CdkCopyToClipboard","_clipboard","_ngZone","attempts","copied","_pending","Set","_destroyed","_currentTimeout","optional","remainingAttempts","pending","add","attempt","runOutsideAngular","setTimeout","emit","clearTimeout","forEach","clear","CdkCopyToClipboard_Factory","ɵdir","ɵɵdefineDirective","CdkCopyToClipboard_HostBindings","CdkCopyToClipboard_click_HostBindingHandler","inputs","outputs","selector","host","ClipboardModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","DatePipe","LoggingService","LogSeverities","LogsConfigComponent","LogsDumpComponent_Conditional_2_For_2_Template_span_click_6_listener","log_r2","ctx_r2","logToConsole","severity","Error","Warn","ɵɵpipeBind2","time","LogsDumpComponent_Conditional_2_Conditional_0_Template","LogsDumpComponent_Conditional_2_For_2_Template","logs","loggingService","showSettings","getLogsSignal","Log","console","warn","showLogSettings","show","LogsDumpComponent_Template","LogsDumpComponent_Conditional_2_Template","LogsDumpComponent_Conditional_3_Template","LogsDumpComponent_Template_button_click_5_listener","LogsDumpComponent_Template_button_click_8_listener","CommonModule","MatDialog","LogManager","config_r1","LogsConfigComponent_div_30_Conditional_4_Template_button_click_0_listener","log_r3","ctx_r3","openLogSpecs","key","LogsConfigComponent_div_30_Template_input_change_2_listener","_r2","toggleConfig","LogsConfigComponent_div_30_Conditional_4_Template","isChecked","hasLogSpecs","matDialog","logManager","singleton","allLogs","mergeAllSpecs","configs","sessionPrefix","searchTerm","loadConfigsFromStateManager","checkAll","allChecked","every","specs","spec","applyFilters","onFilterSelected","filter","selectedFilter","filterLogs","event","inputElement","toLowerCase","name","savedConfigs","startsWith","map","replace","onConfigSelected","configName","filteredLogs","entries","fromEntries","saveConfig","prompt","enabledConfigs","fullConfigKey","exportConfig","width","logKey","dialogRef","afterClosed","updatedSpecs","parse","updateSpecs","LogsConfigComponent_Template","LogsConfigComponent_Template_input_input_5_listener","ɵɵtwoWayListener","LogsConfigComponent_Template_mat_select_valueChange_9_listener","ɵɵtwoWayBindingSet","LogsConfigComponent_Template_mat_select_selectionChange_9_listener","LogsConfigComponent_Template_button_click_16_listener","LogsConfigComponent_Template_button_click_19_listener","LogsConfigComponent_Template_button_click_22_listener","LogsConfigComponent_Template_mat_select_valueChange_28_listener","LogsConfigComponent_Template_mat_select_selectionChange_28_listener","LogsConfigComponent_mat_option_29_Template","LogsConfigComponent_div_30_Template","ɵɵtwoWayProperty","NgForOf","KeyValuePipe","maxLength","transform","pure","webApiEntityRoot","HttpServiceBase","contentType","entity","http","post","params","appId","zoneId","entityId","tryForce","apiUrl","toString","force"],"sourceRoot":"webpack:///","x_google_ignoreList":[11]}