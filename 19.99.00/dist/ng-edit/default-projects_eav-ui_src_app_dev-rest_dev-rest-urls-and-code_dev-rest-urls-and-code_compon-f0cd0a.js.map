{"version":3,"file":"default-projects_eav-ui_src_app_dev-rest_dev-rest-urls-and-code_dev-rest-urls-and-code_compon-f0cd0a.js","mappings":"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","sources":["./projects/eav-ui/src/app/dev-rest/tab-introduction/tab-introduction.component.ts","./projects/eav-ui/src/app/dev-rest/tab-introduction/tab-introduction.component.html","./projects/eav-ui/src/app/dev-rest/tab-examples/tab-examples.component.ts","./projects/eav-ui/src/app/dev-rest/tab-examples/tab-examples.component.html","./projects/eav-ui/src/app/dev-rest/tab-headers/tab-headers.component.ts","./projects/eav-ui/src/app/dev-rest/tab-headers/tab-headers.component.html","./projects/eav-ui/src/app/dev-rest/dev-rest-urls-and-code/dev-rest-urls-and-code.component.ts","./projects/eav-ui/src/app/dev-rest/dev-rest-urls-and-code/dev-rest-urls-and-code.component.html","./projects/eav-ui/src/app/dev-rest/info-box/info-box.component.ts","./projects/eav-ui/src/app/dev-rest/info-box/info-box.component.html"],"sourcesContent":["import { Component, input, OnInit } from '@angular/core';\r\nimport { AllScenarios } from '..';\r\nimport { DevRestBaseModel } from '../base-template-vars';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-tab-introduction',\r\n  templateUrl: './tab-introduction.component.html',\r\n})\r\nexport class DevRestTabIntroductionComponent implements OnInit {\r\n  data = input<DevRestBaseModel>();\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","<p>\r\n  All data can be used in JavaScript, SPAs or anywhere with the REST API\r\n  (see <a href=\"https://docs.2sxc.org/web-api/index.html\" target=\"_blank\">docs</a>).\r\n  Use this for things like:\r\n</p>\r\n<ul>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/index.html\" target=\"_blank\">WebAPI in 2sxc</a></li>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/headless/index.html\" target=\"_blank\">Using DNN/2sxc as a headless CMS</a></li>\r\n  <li>Create SPAs in DNN/2sxc</li>\r\n  <li>Get data for mobile apps</li>\r\n  <li>Share data to other platforms</li>\r\n</ul>\r\n<p>\r\n  Just set off HTTP <code>GET</code> requests or similar\r\n  to the endpoint like <code>{{ data().root }}</code>. You can find the full list with example code\r\n  in the next tabs.\r\n  Make sure you also read about permissions and HTTP headers.\r\n</p>\r\n<h3>Scenarios Explained (dropdown on top)</h3>\r\n<p>\r\n  The examples / code / permission infos will change based on the scenario you choose.\r\n</p>\r\n@for (scenario of scenarios; track scenario) {\r\n  <h4>Scenario: {{ scenario.name }}</h4>\r\n  <p>\r\n    {{ scenario.description }}\r\n  </p>\r\n  @if (scenario.notes) {\r\n    <p>\r\n      <em>\r\n        {{ scenario.notes }}\r\n      </em>\r\n    </p>\r\n  }\r\n}\r\n","import { Component, input } from '@angular/core';\r\nimport { DevRestBaseModel } from '..';\r\nimport { InfoBoxComponent } from '../info-box/info-box.component';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-tab-examples-intro',\r\n    templateUrl: './tab-examples.component.html',\r\n    styleUrls: ['./tab-examples.component.scss'],\r\n    imports: [InfoBoxComponent]\r\n})\r\nexport class DevRestTabExamplesComponent {\r\n  data = input<DevRestBaseModel>();\r\n\r\n  constructor() { }\r\n}\r\n","@if (data().scenario.useVirtual) {\r\n  <app-info-box type=\"info\">\r\n    Virtual REST URLs are short. They will be resolved internally\r\n    to the full length (based on the dnn-version, current portal, etc.)\r\n    thanks to $2sxc JS API. This happens when you use the\r\n    <a href=\"https://docs.2sxc.org/js-code/2sxc-api/basics/how-it-works.html\" target=\"_blank\">\r\n      $2sxc(<em>id-or-htmlnode</em>).webApi.get(...)\r\n    </a>\r\n    or if you use\r\n    <a href=\"https://go.2sxc.org/js-angular\" target=\"_blank\">\r\n      sxc-angular (npm package)\r\n    </a>\r\n    (which also passes url-resolving through $2sxc).\r\n  </app-info-box>\r\n}\r\n\r\n@if (data().scenario.needsAnonymous && !data().permissionsHasAnonymous) {\r\n  <app-info-box type=\"warning\">\r\n    To use the REST API from external, you usually will want to set some permissions for <code>Anonymous</code>.\r\n    As of now, no such permissions are configured.\r\n  </app-info-box>\r\n}\r\n\r\n@if (data().scenario.needsAnonymous && data().permissionsHasAnonymous) {\r\n  <app-info-box type=\"alert\">\r\n    It seems that you have some permissions configured for <code>Anonymous</code>.\r\n    This is correct if you plan on using the REST endpoints from externally.\r\n    Please make sure that they are the ones you need, and that you don't accidentally open up too much.\r\n  </app-info-box>\r\n}\r\n\r\n<p>\r\n  The examples below use real values to make it easier to get started.\r\n  The values used are the current content-type <code>{{ data().name }}</code>,\r\n  the current Module ID <code>{{ data().moduleId }}</code>\r\n  and the folder of the current App folder <code>{{ data().folder }}</code> (where needed).\r\n  @if (data().itemId) {\r\n    The code also looked up an item of this type and will use it's ID <code>{{ data().itemId }}</code> in the\r\n    examples.\r\n  }\r\n</p>","import { Component, input, OnInit } from '@angular/core';\r\nimport { DevRestBaseModel } from '..';\r\nimport { InfoBoxComponent } from '../info-box/info-box.component';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-tab-headers',\r\n    templateUrl: './tab-headers.component.html',\r\n    imports: [InfoBoxComponent]\r\n})\r\nexport class DevRestHttpHeadersComponent implements OnInit {\r\n  data = input<DevRestBaseModel>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","<h2>HTTP Headers, Security and Context</h2>\r\n<!-- Background about Context -->\r\n<p>\r\n  HTTP headers and url-parameters are used for <strong>Security</strong> and <strong>Context</strong>.\r\n  We'll explain the <em>Security</em> part further below, and start with <em>Context</em>.\r\n  When you work with WebApi endpoints, there are two distinct scenarios:\r\n</p>\r\n<h3>Using WebApi with Context</h3>\r\n<p>\r\n    In this case the endpoint knows what <strong>Page</strong> and what <strong>module</strong> the request is for.\r\n    This <strong>Context</strong> is then used to <em>auto-detect</em> the app (so you can use <code>/auto/</code> in the url).\r\n    <br>\r\n    It can also be used for for security checks - so you can set <strong>Permissions</strong>\r\n    like <code>Allow READ If the user may see the module</code>.\r\n</p>\r\n<app-info-box type=\"tip\">\r\n  TIP: In the case of <strong>Queries</strong> the <strong>Context</strong> can also provide parameters which were configured in the module.\r\n</app-info-box>\r\n\r\n<h3>Using WebApi without Context</h3>\r\n<p>\r\n  If the <strong>Context</strong> is not known, the endpoint cannot <em>auto-detect</em> the the app, so instead of <code>/auto/</code>\r\n  you must supply the correct app-name in the url, in this case <code>{{ data().folder }}</code>.\r\n  <br>\r\n  You also must specify more specific <strong>Permissions</strong> like <code>Allow READ if user is in group Members</code> or\r\n  <code>Allow READ for all ANONYMOUS users</code>.\r\n</p>\r\n\r\n<app-info-box type=\"info\" title=\"Site & Language are <em>not</em> part of the Context.\">\r\n  Technically the context needs more information than we just talked about, like what <strong>Site</strong> are we on and what\r\n  <strong>Language</strong> is being used. This information is already in the URL. So the root (before any <code>/api/</code>)\r\n  paths already contains that information.\r\n</app-info-box>\r\n\r\n<!-- Defining the Context -->\r\n<h2>How to get the Context</h2>\r\n<h3>How the Context is Defined</h3>\r\n<p>\r\n  The context always requires a <code>PageId</code> (in DNN it is hisorically called the <code>TabId</code>) and the <code>ModuleId</code>.\r\n  This lets the system look up the configuration for this module and figure out everything else.\r\n</p>\r\n\r\n<h3>Supplying Context in HTTP Headers (default)</h3>\r\n<p>\r\n  The standard behavior is to include the Context information in hidden <strong>HTTP headers</strong>.\r\n  This requires a bit more JavaScript code to attach the headers, but most of the APIs like the <code>$2sxc</code>\r\n  will do this automatically when used from within a 2sxc-App.\r\n  These are the context headers provided by $2sxc:\r\n</p>\r\n<ul>\r\n  <li>\r\n    <code>PageId</code> - this is the page we're on (number). <em>this header is new in v11.11</em>\r\n  </li>\r\n  <li>\r\n    <s><code>TabId</code></s> - <em>obsolete</em> this is also the page id (number). <em>just but for backward compatibility</em>\r\n  </li>\r\n  <li>\r\n    <code>ModuleId</code> - this is the module id (number)\r\n  </li>\r\n  <li>\r\n    <code>ContentBlockId</code> - this in an internal ID for working in inner-content (number). You will usually not care about this.\r\n  </li>\r\n</ul>\r\n\r\n<h3>Supplying Context as URL Parameters <code>?PageId=...</code></h3>\r\n<p>\r\n  The headers above (<code>PageId</code>, <code>ModuleId</code>) can also be added to the URL and will have the same effect.\r\n</p>\r\n\r\n<!-- Security -->\r\n<h2>Security Headers</h2>\r\n<p>\r\n  In addition to context headers, a request can also include <strong>Security</strong> headers:\r\n</p>\r\n<ol>\r\n  <li>\r\n    <code>RequestVerificationToken</code> - this is a crypto key to prove that the request originated from the\r\n    same site. It's only included in POST/PUT/DELETE but not GET requests.\r\n  </li>\r\n</ol>\r\n<p>\r\n  These are only used on <code>PUT</code>, <code>POST</code>, <code>DELETE</code> etc. but not on <code>GET</code> requests.\r\n</p>\r\n<app-info-box type=\"tip\">\r\n  This header is only usefull to verify that the request came from a real DNN page.\r\n  The 2sxc-api <code>$2sxc</code> will add this automatically for you, so you don't need to do anything if you use that.\r\n</app-info-box>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DevRestBaseModel } from '..';\r\nimport { transient } from '../../../../../core/transient';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ClipboardService } from '../../shared/services/clipboard.service';\r\nimport { InfoBoxComponent } from '../info-box/info-box.component';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-urls-and-code',\r\n    templateUrl: './dev-rest-urls-and-code.component.html',\r\n    styleUrls: ['./dev-rest-urls-and-code.component.scss'],\r\n    imports: [\r\n        MatExpansionModule,\r\n        MatButtonModule,\r\n        TippyDirective,\r\n        MatIconModule,\r\n        InfoBoxComponent,\r\n    ]\r\n})\r\nexport class DevRestUrlsAndCodeComponent {\r\n  data = input<DevRestBaseModel>();\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  callApiGet(url: string) {\r\n    this.http.get<any>(url).subscribe(res => {\r\n      console.log(`Called ${url} and got this:`, res);\r\n      this.openSnackBar(`Called ${url}. You can see the full result in the F12 console`, 'API call returned');\r\n    });\r\n    this.openSnackBar(`Calling ${url}. You can see the full result in the F12 console`, 'API call sent');\r\n  }\r\n\r\n  private openSnackBar(message: string, action?: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","<mat-accordion multi class=\"rest-urls-accordion\">\r\n  @for (apiCall of data().apiCalls; track apiCall) {\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <div class=\"rest-urls-title\">\r\n            <code>{{ apiCall.verb }}</code>: <code>{{ apiCall.url }}</code>\r\n            <span>&nbsp;to {{ apiCall.teaser }}</span>\r\n          </div>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <mat-panel-description style=\"display: block;\">\r\n        <h4>{{ apiCall.instructions }}</h4>\r\n        <p>\r\n          HTTP Verb: <code>{{ apiCall.verb }}</code> <br>\r\n          {{ data().scenario.useVirtual ? 'Virtual' : 'Absolute' }} Url: <code>{{ apiCall.url }}</code>\r\n        </p>\r\n        @if (apiCall.enableButton) {\r\n          <p>\r\n            <button mat-raised-button (click)=\"callApiGet(apiCall.url)\">Call and Output to Console</button>\r\n            @if (apiCall.browseUrl) {\r\n              &nbsp;\r\n              <a [href]=\"apiCall.browseUrl\" target=\"_blank\">Open in Browser</a>\r\n              @if (data().scenario.useVirtual) {\r\n                <span>\r\n                  (for the demo to work it will add context parameters)\r\n                </span>\r\n              }\r\n            }\r\n          </p>\r\n        }\r\n        <!-- show the code examples -->\r\n        @for (code of apiCall.code; track code) {\r\n          <h4>{{ code.title }}</h4>\r\n          <p>{{ code.description }}</p>\r\n          <div class=\"code-example\">\r\n            <pre class=\"code-example__text\">{{ code.code }}</pre>\r\n            <button mat-icon-button class=\"code-example__copy\" tippy=\"Copy to clipboard\" (click)=\"clipboard.copyToClipboard(code.code)\">\r\n              <mat-icon>content_copy</mat-icon>\r\n            </button>\r\n          </div>\r\n          <!-- show hints / warnings -->\r\n          @for (hint of code.hints; track hint) {\r\n            <app-info-box [type]=\"hint.type\">\r\n              <span [innerHtml]=\"hint.message\"></span>\r\n            </app-info-box>\r\n          }\r\n        }\r\n      </mat-panel-description>\r\n    </mat-expansion-panel>\r\n  }\r\n</mat-accordion>","import { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { infoBoxIconMap, InfoBoxType } from './hint';\r\n\r\n@Component({\r\n    selector: 'app-info-box',\r\n    templateUrl: './info-box.component.html',\r\n    styleUrls: ['./info-box.component.scss'],\r\n    imports: [MatIconModule]\r\n})\r\nexport class InfoBoxComponent {\r\n  type = input<InfoBoxType>();\r\n  // 2pp - not in use: title = input<string>();\r\n\r\n  constructor() { }\r\n\r\n  getIcon() {\r\n    return infoBoxIconMap[this.type()];\r\n  }\r\n}\r\n","<p class=\"icon-box {{ type() }}\">\r\n  <mat-icon>{{ getIcon() }}</mat-icon>\r\n  <!-- @if (title()) {\r\n    <strong [innerHTML]=\"title()\"></strong>\r\n    <br>\r\n  } -->\r\n  <ng-content></ng-content>\r\n</p>\r\n"],"names":["input","AllScenarios","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","scenario_r1","notes","ɵɵtemplate","DevRestTabIntroductionComponent_For_31_Conditional_4_Template","name","description","ɵɵconditional","DevRestTabIntroductionComponent","constructor","data","scenarios","ngOnInit","selectors","inputs","decls","vars","consts","template","DevRestTabIntroductionComponent_Template","rf","ctx","ɵɵrepeaterCreate","DevRestTabIntroductionComponent_For_31_Template","ɵɵrepeaterTrackByIdentity","ɵɵtextInterpolate","root","ɵɵrepeater","InfoBoxComponent","ctx_r0","itemId","DevRestTabExamplesComponent","DevRestTabExamplesComponent_Template","DevRestTabExamplesComponent_Conditional_0_Template","DevRestTabExamplesComponent_Conditional_1_Template","DevRestTabExamplesComponent_Conditional_2_Template","DevRestTabExamplesComponent_Conditional_14_Template","scenario","useVirtual","needsAnonymous","permissionsHasAnonymous","moduleId","folder","styles","DevRestHttpHeadersComponent","DevRestHttpHeadersComponent_Template","ɵɵelement","encapsulation","HttpClient","MatButtonModule","MatExpansionModule","MatIconModule","MatSnackBar","transient","TippyDirective","ClipboardService","DevRestUrlsAndCodeComponent_For_2_Conditional_22_Conditional_3_Conditional_3_Template","ɵɵproperty","apiCall_r2","browseUrl","ɵɵsanitizeUrl","ctx_r2","ɵɵlistener","DevRestUrlsAndCodeComponent_For_2_Conditional_22_Template_button_click_1_listener","ɵɵrestoreView","_r1","ɵɵnextContext","$implicit","ɵɵresetView","callApiGet","url","DevRestUrlsAndCodeComponent_For_2_Conditional_22_Conditional_3_Template","hint_r6","type","message","ɵɵsanitizeHtml","DevRestUrlsAndCodeComponent_For_2_For_24_Template_button_click_7_listener","code_r5","_r4","clipboard","copyToClipboard","code","DevRestUrlsAndCodeComponent_For_2_For_24_For_11_Template","title","hints","DevRestUrlsAndCodeComponent_For_2_Conditional_22_Template","DevRestUrlsAndCodeComponent_For_2_For_24_Template","verb","teaser","instructions","enableButton","DevRestUrlsAndCodeComponent","snackBar","http","get","subscribe","res","console","log","openSnackBar","action","open","duration","ɵɵdirectiveInject","i1","i2","DevRestUrlsAndCodeComponent_Template","DevRestUrlsAndCodeComponent_For_2_Template","apiCalls","i3","MatAccordion","MatExpansionPanel","MatExpansionPanelHeader","MatExpansionPanelTitle","MatExpansionPanelDescription","i4","MatButton","MatIconButton","i5","MatIcon","infoBoxIconMap","getIcon","ngContentSelectors","_c0","InfoBoxComponent_Template","ɵɵprojection","ɵɵclassMapInterpolate1"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}