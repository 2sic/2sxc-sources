{"version":3,"file":"default-projects_eav-ui_src_app_shared_components_base_component_ts-projects_eav-ui_src_app_s-83efe3.js","mappings":"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","sources":["./projects/eav-ui/src/app/shared/directives/base.directive.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/@angular/material/fesm2022/progress-spinner.mjs","./projects/eav-ui/src/app/shared/components/base.component.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts"],"sourcesContent":["import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseDirective implements OnDestroy {\r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    _elementRef = inject(ElementRef);\n    /** Whether the _mat-animation-noopable class should be applied, disabling animations.  */\n    _noopAnimations;\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress spinner. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/progress-spinner/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    _color;\n    _defaultColor = 'primary';\n    /** The element of the determinate spinner. */\n    _determinateCircle;\n    constructor() {\n        const animationMode = inject(ANIMATION_MODULE_TYPE, { optional: true });\n        const defaults = inject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS);\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            this._elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     */\n    mode;\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    _value = 0;\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    _diameter = BASE_SIZE;\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    _strokeWidth;\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatProgressSpinner, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.0\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * A newer base component, without Log being created / requested.\r\n * This is so it's easier to inherit than the BaseComponent,\r\n * which would make typed log with specs harder to implement.\r\n * \r\n * Note that as with time, we wish to get away from these, as we don't want to use many observables any more.\r\n */\r\n@Component({\r\n  selector: 'app-base-component',\r\n  template: '',\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseComponent implements OnDestroy {\r\n  \r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeHtml',\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n"],"names":["Subscription","BaseDirective","constructor","subscriptions","ngOnDestroy","unsubscribe","innerFrom","Observable","mergeMap","isArrayLike","isFunction","mapOneOrManyArgs","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","undefined","pipe","add","remove","isEventTarget","map","methodName","handler","isNodeStyleEventEmitter","toCommonHandlerRegistry","isJQueryStyleEventEmitter","subTarget","TypeError","subscriber","args","next","length","addListener","removeListener","on","off","addEventListener","removeEventListener","i0","InjectionToken","inject","ElementRef","ANIMATION_MODULE_TYPE","numberAttribute","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","ViewChild","NgModule","NgTemplateOutlet","MatCommonModule","_c0","MatProgressSpinner_ng_template_0_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵattribute","_viewBox","ɵɵadvance","ɵɵstyleProp","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","providedIn","factory","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinner","_elementRef","_noopAnimations","color","_color","_defaultColor","value","_determinateCircle","animationMode","optional","defaults","_forceAnimations","mode","nativeElement","nodeName","toLowerCase","strokeWidth","_value","v","Math","max","min","_diameter","size","_strokeWidth","viewBox","PI","_strokeDashOffset","ɵfac","MatProgressSpinner_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatProgressSpinner_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatProgressSpinner_HostBindings","ɵɵclassMap","ɵɵclassProp","inputs","exportAs","decls","vars","consts","template","MatProgressSpinner_Template","ɵɵtemplate","ɵɵtemplateRefExtractor","ɵɵnamespaceHTML","ɵɵelementContainer","circle_r2","ɵɵreference","ɵɵproperty","dependencies","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","selector","host","OnPush","None","imports","transform","MatSpinner","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","BaseComponent","BaseComponent_Template","DomSanitizer","SafeHtmlPipe","sanitizer","html","bypassSecurityTrustHtml","ɵɵdirectiveInject","i1","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2]}