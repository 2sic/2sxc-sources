{"version":3,"file":"projects_eav-ui_src_app_edit_routing_edit-reload_component_ts-projects_eav-ui_src_app_shared_-7519af.js","mappings":"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","sources":["./projects/eav-ui/src/app/edit/routing/edit-reload.component.ts","./projects/eav-ui/src/app/shared/services/service-base.ts","./projects/eav-ui/src/app/shared/services/query.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { classLog } from '../../shared/logging';\r\nimport { UrlHelpers } from '../shared/helpers';\r\nimport { EditUrlParams } from './edit-url-params.model';\r\n\r\n/**\r\n * The purpose of this component is to refresh the edit dialog completely.\r\n * It works as follows:\r\n * 1. A close event of the child which requests a full refresh (probably just the history?)\r\n *    will cause the router to replace the Path to a url going to this control. This flushes the previous edit.\r\n * 2. This component will then navigate to the original edit dialog, restoring the original parameters. \r\n * \r\n * TODO: not sure if this is the best way to do this...\r\n */\r\n@Component({\r\n  selector: 'app-edit-reload',\r\n  template: '',\r\n})\r\nexport class EditReloadComponent {\r\n\r\n  log = classLog({EditReloadComponent});\r\n\r\n  constructor(router: Router, route: ActivatedRoute) {\r\n    const l = this.log.fn('constructor', null, 'üîÑÔ∏è');\r\n    const p = route.snapshot.params as EditUrlParams;\r\n    const url = UrlHelpers.newUrlIfCurrentContainsOldUrl(route, `edit/refresh/${p.items}`, `edit/${p.items}`);\r\n    if (!url) return l.rNull('No URL to navigate to');\r\n    router.navigate([url]);\r\n    l.r('‚úÖ refresh complete');\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\nimport { Context } from './context';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  getAvailableEntities: false,\r\n  getEntities: false,\r\n};\r\n\r\n@Injectable()\r\nexport class QueryService {\r\n\r\n  log = classLog({QueryService}, logSpecs);\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getFromQuery(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.fnIf('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.fnIf(`getEntities`, { log, contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n"],"names":["ActivatedRoute","Router","classLog","UrlHelpers","EditReloadComponent","constructor","router","route","log","l","fn","p","snapshot","params","url","newUrlIfCurrentContainsOldUrl","items","rNull","navigate","r","i0","…µ…µdirectiveInject","i1","selectors","decls","vars","template","EditReloadComponent_Template","rf","ctx","encapsulation","Subscription","ServiceBase","subscriptions","ngOnDestroy","destroy","unsubscribe","factory","…µfac","HttpClient","Context","logSpecs","all","getAvailableEntities","getEntities","QueryService","http","context","getFromQuery","queryUrl","fields","entitiesFilter","fnIf","hasParams","paramsLower","toLocaleLowerCase","hasAppId","includes","allParams","appId","urlParams","substring","post","Guids","contentTypes","itemIds","join","…µ…µinject","i2"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}