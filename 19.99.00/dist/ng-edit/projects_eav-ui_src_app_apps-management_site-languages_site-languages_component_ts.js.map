{"version":3,"file":"projects_eav-ui_src_app_apps-management_site-languages_site-languages_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.html"],"sourcesContent":["import { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { GridOptions, ModuleRegistry } from '@ag-grid-community/core';\r\nimport { Component, computed, signal } from '@angular/core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { transient } from '../../../../../core';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { SiteLanguagesStatusComponent } from './site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status/site-languages-status.models';\r\n\r\n@Component({\r\n    selector: 'app-site-languages',\r\n    templateUrl: './site-languages.component.html',\r\n    imports: [\r\n        MatDialogActions,\r\n        SxcGridModule,\r\n    ]\r\n})\r\nexport class SiteLanguagesComponent {\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  #zoneSvc = transient(ZoneService);\r\n  constructor() {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  #refreshLanguagesSig = signal(0);\r\n\r\n  languages = computed(() => {\r\n    const r = this.#refreshLanguagesSig();\r\n    return this.#zoneSvc.getLanguage(undefined);\r\n  })\r\n\r\n\r\n  #toggleLanguage(language: SiteLanguage, enable: boolean): void {\r\n    this.#zoneSvc.toggleLanguage(language.Code, enable).subscribe(d => { // wait until the language change\r\n      this.#refreshLanguagesSig.set(this.#refreshLanguagesSig() + 1);\r\n    })\r\n\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          field: 'Code',\r\n          filter: 'agTextColumnFilter',\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<SiteLanguage> = {\r\n              tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Culture',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            this.#toggleLanguage(language, !language.IsEnabled);\r\n          },\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          valueGetter: (p: { data: SiteLanguage }) => p.data.IsEnabled,\r\n          cellRenderer: SiteLanguagesStatusComponent,\r\n          cellRendererParams: (() => {\r\n            const params: SiteLanguagesStatusParams = {\r\n              onToggleLanguage: (language, enable) => this.#toggleLanguage(language, enable),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","@if (languages()(); as languages) {\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages\" [gridOptions]=\"gridOptions\"> </ag-grid-angular>\r\n    <mat-dialog-actions align=\"end\"></mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n    selector: 'app-site-languages-status',\r\n    templateUrl: './site-languages-status.component.html',\r\n    styleUrls: ['./site-languages-status.component.scss'],\r\n    imports: [MatSlideToggleModule]\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private params: ICellRendererParams & SiteLanguagesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & SiteLanguagesStatusParams): void {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage(event: MatSlideToggleChange): void {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onToggleLanguage(language, event.checked);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage($event)\"></mat-slide-toggle>\r\n"],"names":["ClientSideRowModelModule","ModuleRegistry","computed","signal","MatDialogActions","transient","ColumnDefinitions","BooleanFilterComponent","defaultGridOptions","SxcGridModule","ZoneService","SiteLanguagesStatusComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx","ctx_r0","gridOptions","SiteLanguagesComponent","zoneSvc","constructor","buildGridOptions","refreshLanguagesSig","languages","r","getLanguage","undefined","registerModules","toggleLanguage","#toggleLanguage","language","enable","Code","subscribe","d","set","#buildGridOptions","columnDefs","IdWithDefaultRenderer","field","filter","cellRendererParams","params","tooltipGetter","TextWide","headerName","sort","onCellClicked","data","IsEnabled","width","headerClass","cellClass","split","sortable","valueGetter","p","cellRenderer","onToggleLanguage","selectors","decls","vars","consts","template","SiteLanguagesComponent_Template","rf","ɵɵtemplate","SiteLanguagesComponent_Conditional_0_Template","ɵɵconditional","tmp_0_0","i1","AgGridAngular","encapsulation","MatSlideToggleModule","agInit","value","refresh","event","checked","SiteLanguagesStatusComponent_Template","ɵɵlistener","SiteLanguagesStatusComponent_Template_mat_slide_toggle_change_0_listener","$event","MatSlideToggle","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}