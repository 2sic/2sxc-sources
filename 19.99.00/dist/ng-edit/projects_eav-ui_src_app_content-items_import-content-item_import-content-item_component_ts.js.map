{"version":3,"file":"projects_eav-ui_src_app_content-items_import-content-item_import-content-item_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item.component.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item.component.html"],"sourcesContent":["import { Injectable, Signal } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\nconst logSpecs = {\r\n  getAll: true,\r\n  getAllSig: true,\r\n}\r\n\r\n@Injectable()\r\nexport class ContentItemsService extends HttpServiceBase {\r\n\r\n  log = classLog({ ContentItemsService }, logSpecs);\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    this.log.fnIf('getAll', { contentTypeStaticName });\r\n    return this.getHttpApiUrl<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getAllSig(contentTypeStaticName: string, initial: undefined): Signal<ContentItem[]> {\r\n    this.log.fnIf('getAllSig', { contentTypeStaticName, initial });\r\n    return this.getSignal<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    }, initial);\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsAll, {\r\n      params: { appId: this.appId, staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { transient } from '../../../../../core';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, UploadTypes } from '../../shared/components/file-upload-dialog';\r\nimport { ContentItemsService } from '../services/content-items.service';\r\n\r\n@Component({\r\n    selector: 'app-import-content-item',\r\n    templateUrl: './import-content-item.component.html',\r\n    imports: [FileUploadDialogComponent,]\r\n})\r\nexport class ImportContentItemComponent {\r\n\r\n  uploadType = UploadTypes.ContentItem;\r\n\r\n  private contentItemsService = transient(ContentItemsService);\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) dialogData: FileUploadDialogData) {\r\n    dialogData.title ??= `Import Single Item`;\r\n    dialogData.description ??= `Select an item file (json) from your computer to import.`;\r\n    dialogData.allowedFileTypes ??= 'json';\r\n    dialogData.upload$ ??= (files) => this.contentItemsService.importItem(files[0]);\r\n  }\r\n\r\n}\r\n","<app-file-upload-dialog [uploadType]=\"uploadType\"></app-file-upload-dialog>\r\n"],"names":["Signal","from","map","switchMap","webApiFieldsAll","toBase64","classLog","webApiEntityList","webApiEntityRoot","HttpServiceBase","logSpecs","getAll","getAllSig","ContentItemsService","constructor","log","contentTypeStaticName","fnIf","getHttpApiUrl","params","appId","contentType","initial","getSignal","getColumns","staticName","importItem","file","pipe","fileBase64","http","post","apiUrl","AppId","ContentBase64","success","result","Success","Messages","__ngFactoryType__","factory","ɵfac","MAT_DIALOG_DATA","transient","FileUploadDialogComponent","UploadTypes","ImportContentItemComponent","dialogData","uploadType","ContentItem","contentItemsService","title","description","allowedFileTypes","upload$","files","i0","ɵɵdirectiveInject","selectors","decls","vars","consts","template","ImportContentItemComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}