{"version":3,"file":"default-projects_eav-ui_src_app_permissions_permissions_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts"],"sourcesContent":["import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnInit, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n    selector: 'app-permissions',\r\n    templateUrl: './permissions.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        MatDialogActions,\r\n        SxcGridModule,\r\n    ]\r\n})\r\nexport class PermissionsComponent implements OnInit {\r\n  gridOptions = this.buildGridOptions();\r\n  permissions = signal<Permission[]>([]);\r\n  #permissionsService = transient(PermissionsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n  }));\r\n\r\n  #prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<PermissionsComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.#fetchPermissions();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchPermissions());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  #fetchPermissions() {\r\n    this.#permissionsService.getAll(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .subscribe(permissions => {\r\n        this.permissions.set(permissions);\r\n      });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ...EditPrep.newMetadataFromInfo(\r\n            eavConstants.contentTypes.permissions,\r\n            EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n          ),\r\n          ...(this.#prefills[this.#params.targetType] && { Prefill: this.#prefills[this.#params.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [EditPrep.editId(permission.Id)],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) return;\r\n    this.snackBar.open('Deleting...');\r\n    this.#permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.#fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<Permission>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Permissions</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions()\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of, transient } from '../../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { EntityEditService } from '../../shared/services/entity-edit.service';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n\r\n  private entitiesService = transient(EntityEditService);\r\n\r\n  getAll(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  get urlSegments() { return this.router.url.split('/'); }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-permissions-actions',\r\n    templateUrl: './permissions-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService extends HttpServiceBase {\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.getHttp<MetadataDto>(webApiRoot, {\r\n      params: {\r\n        appId: this.appId,\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { webApiEntityRoot } from './entity.service';\r\nimport { HttpServiceBase } from './http-service-base';\r\n\r\n@Injectable()\r\nexport class EntityEditService extends HttpServiceBase {\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.appId, force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n"],"names":["signal","MatButtonModule","MatDialogActions","MatDialogRef","MatIconModule","MatSnackBar","RouterOutlet","convert","transient","ColumnDefinitions","defaultGridOptions","eavConstants","convertFormToUrl","EditPrep","SxcGridModule","DialogRoutingService","PermissionsActionsComponent","PermissionsService","PermissionsComponent","permissionsService","dialogRoutes","params","prefills","constructor","dialog","snackBar","gridOptions","buildGridOptions","permissions","getParams","p","targetType","parseInt","keyType","key","metadata","language","PermissionType","ngOnInit","fetchPermissions","doOnDialogClosed","closeDialog","close","#fetchPermissions","getAll","subscribe","set","editPermission","permission","form","items","newMetadataFromInfo","contentTypes","constructMetadataInfo","Prefill","editId","Id","formUrl","navRelative","deletePermission","confirm","Title","open","delete","duration","columnDefs","cellRendererParams","idFieldParamsTooltipGetter","TextWide","headerName","field","sort","onCellClicked","data","Character","ActionsPinnedRight1","cellRenderer","onDelete","i0","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","PermissionsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PermissionsComponent_Template_button_click_4_listener","ɵɵelement","PermissionsComponent_Template_button_click_12_listener","ɵɵadvance","ɵɵproperty","i3","MatIconButton","MatFabButton","i4","MatIcon","i5","AgGridAngular","encapsulation","map","EntityEditService","MetadataService","metadataService","entitiesService","getMetadata","pipe","Items","id","factory","ɵfac","ActivatedRoute","NavigationEnd","Router","filter","pairwise","startWith","classLog","ServiceBase","logSpecs","router","route","log","snapshot","url","urlSegments","split","getParam","paramMap","get","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","end","urlSubRoute","tree","createUrlTree","relativeTo","routeUrl","serializeUrl","navPath","navigate","commands","events","event","firstChild","hadChildBefore","hasChildNow","ɵɵinject","MatRippleModule","TippyDirective","agInit","refresh","PermissionsActionsComponent_Template","PermissionsActionsComponent_Template_div_click_1_listener","MatRipple","HttpServiceBase","webApiRoot","contentTypeName","getHttp","appId","toString","contentType","__ngFactoryType__","webApiEntityRoot","create","entity","http","post","zoneId","update","entityId","type","tryForce","apiUrl","force"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}