{"version":3,"file":"projects_eav-ui_src_app_app-administration_data-rest-api_data-rest-api_component_ts.765b8f15840fac89.js","mappings":"2XAMQA,MAAA,kBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAC,EAAAC,QACVF,cAAA,IAAAC,EAAAE,MAAA,8BAFFH,MAAA,EAAAI,EAAA,mBAAAJ,kCAAAK,EAAAC,eAAcC,SCoBf,IAAMC,EAAoB,MAA3B,MAAOA,EACXC,GACAC,GAEAC,GAmBAC,YAAoBC,GAAAC,KAAAD,KAtBpBC,MAAAL,KAAmBM,KAAUC,MAC7BF,MAAAJ,KAAgBK,KAAUE,KAE1BH,MAAAH,EAAsBG,MAAKL,EAAiBS,wBAAwB,eAAWC,GAE/EL,KAAAR,gBAAec,OAAS,KACtB,MAAMd,EAAeQ,MAAKH,IAEpBU,EAAcP,MAAKJ,EAAcY,IAAIC,MAAM,KAC3CC,EAAgBH,EAAYA,EAAYI,OAAS,GAEjDC,EAAsBpB,GAAcqB,KAAKC,GAAeA,EAAY1B,SAAWsB,GACrF,OAAIE,GACFZ,KAAKe,gBAAgBC,IAAI,eAAeC,SAASL,EAAoBxB,QAEhEI,IAGTQ,KAAAe,gBAA6Bf,KAAKD,GAAGmB,MAAM,CACzCJ,YAAa,CAAC,KAGwB,CAExCK,YAAYC,GACLA,GACLpB,MAAKJ,EAAcyB,YAAY,CAAC,GAAGD,KACrC,iDA5BW1B,GAAoBR,MAAAoC,MAAA,oCAApB5B,EAAoB6B,UAAA,wBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,0HAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDvB7B1C,MAFJ,WAEIA,CAFgC,qBAEhCA,CADwD,eAC7CA,MAAA,kBAAYA,QACvBA,MAAA,kBAA0CA,MAAA,uBAAA4C,GAAA,OAAeD,EAAAV,YAAAW,EAAmB,GAC1E5C,MAAA,EAAA6C,EAAA,KASN7C,YAEAA,MAAA,0BAfMA,MAAA,YAAA2C,EAAAd,iBAIA7B,MAAA,GAAAA,MAAA2C,EAAArC,eAAA,sBCWEwC,KAAeC,UAAAC,KAAAC,KACfC,KACAC,KACAC,KACAC,KAAmBjB,yBACnBkB,KACAC,KAAaC,cAAA,YAIRhD,CAAoB","names":["i0","contentType_r1","NameId","Label","DataRestApiComponent_Conditional_5_For_1_Template","ctx_r1","contentTypes","sort","DataRestApiComponent","#contentTypesSvc","#dialogRouter","#getAllContentTypes","constructor","fb","this","transient","ContentTypesService","DialogRoutingService","retrieveContentTypesSig","undefined","computed","urlSegments","url","split","urlStaticName","length","selectedContentType","find","contentType","contentTypeForm","get","setValue","group","openRestApi","event","navRelative","i1","selectors","decls","vars","consts","template","rf","ctx","$event","DataRestApiComponent_Conditional_5_Template","MatSelectModule","i2","i3","i4","MatButtonModule","MatCardModule","MatIconModule","ReactiveFormsModule","RouterOutlet","SxcGridModule","encapsulation"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.html","./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.ts"],"sourcesContent":["<form [formGroup]=\"contentTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Content-Type</mat-label>\r\n    <mat-select formControlName=\"contentType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (contentTypes()) {\r\n        @for (contentType of contentTypes().sort() ; track contentType) {\r\n        <mat-option [value]=\"contentType.NameId\" >\r\n          {{ contentType.Label }}\r\n        </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, computed } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../../../../core';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ContentTypesService } from '../services';\r\n\r\n@Component({\r\n    selector: 'app-data-rest-api',\r\n    imports: [\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        ReactiveFormsModule,\r\n        RouterOutlet,\r\n        SxcGridModule,\r\n    ],\r\n    templateUrl: './data-rest-api.component.html'\r\n})\r\nexport class DataRestApiComponent {\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  #getAllContentTypes = this.#contentTypesSvc.retrieveContentTypesSig(\"Default\", undefined);\r\n\r\n  contentTypes = computed(() => {\r\n    const contentTypes = this.#getAllContentTypes();\r\n\r\n    const urlSegments = this.#dialogRouter.url.split('/');\r\n    const urlStaticName = urlSegments[urlSegments.length - 1]\r\n\r\n    const selectedContentType = contentTypes?.find(contentType => contentType.NameId === urlStaticName);\r\n    if (selectedContentType)\r\n      this.contentTypeForm.get('contentType').setValue(selectedContentType.NameId);\r\n\r\n    return contentTypes;\r\n  });\r\n\r\n  contentTypeForm: FormGroup = this.fb.group({\r\n    contentType: ['']\r\n  });\r\n\r\n  constructor(private fb: FormBuilder,) { }\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.#dialogRouter.navRelative([`${event}`]);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}