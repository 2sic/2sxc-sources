{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_component_ts-node_modules_lodash-es__arrayE-ac6327.64a27734e0ea0a34.js","mappings":"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","names":["webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","ContentTypesService","HttpServiceBase","retrieveContentType","nameId","this","getHttpApiUrl","params","appId","contentTypeId","retrieveContentTypeSig","initial","getSignal","retrieveContentTypes","scope","retrieveContentTypesSig","getScopes","pipe","map","scopesData","scopes","old","Object","keys","key","name","value","getScopesSig","scopesSignal","computed","getScopesV2","save","contentType","http","post","apiUrl","appid","delete","staticName","NameId","import","files","formData","FormData","file","append","zoneId","createGhost","sourceNameId","__ngFactoryType__","factory","ɵfac","ExportAppPartsService","getContentInfo","exportParts","contentTypeIds","entityIds","templateIds","url","webApiAppPartsRoot","join","window","open","ExportAppService","getAppInfo","exportAppUrl","webApiAppRoot","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","toString","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","webApiEntityList","getAllSig","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","ViewsService","export","getPolymorphism","getUsage","guid","isEscape","event","isCtrlS","ctrlKey","metaKey","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","MousedownStopPropagationDirective","onMousedown","stopPropagation","selectors","hostBindings","rf","ctx","i0","$event","ArrayHelpers","toggleInArray","item","array","index","indexOf","push","splice","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText","guiTypes","App","Name","Label","Icon","UiHint","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Source","Target","Unknown","Debug","System","QueryDefinitionService","fetchPipeline","pipelineEntityId","dataSources","getHttp","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","Description","EntityGuid","EntityId","undefined","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","In","Out","PrimaryType","TypeNameForUi","typeNameFilter","input","format","globalParts","classFullNameParts","savePipeline","pipeline","newPipelineModel","runPipeline","top","debugStream","source","sourceOut","out","ctx_r0","sourceName","option_r3","_r2","$implicit","show","QueryResultComponent_For_20_Conditional_2_Template","QueryResultComponent_For_20_Conditional_3_Template","param_r4","QueryResultComponent_Conditional_24_div_1_Template","QueryResultComponent_Conditional_24_For_5_Template","parameters","source_r5","Definition","config_r6","QueryResultComponent_For_39_Conditional_2_Template","QueryResultComponent_For_39_For_10_Template","Guid","Type","Configuration","Error","stream_r7","SourceOut","TargetIn","Count","QueryResultComponent","constructor","dialogData","dialog","visualQueryService","ngOnInit","Params","filter","el","testParams","TestParameters","concat","timeUsed","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","i1","i2","decls","vars","consts","template","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_Conditional_17_Template","QueryResultComponent_For_20_Template","QueryResultComponent_Conditional_24_Template","QueryResultComponent_div_26_Template","QueryResultComponent_For_39_Template","QueryResultComponent_div_42_Template","QueryResultComponent_For_55_Template","MatButtonModule","i3","MatIconModule","i4","MatTabsModule","i5","JsonPipe","KeyValuePipe","styles","StreamErrorResultComponent","errorData","openInsights","$2sxc","MatDialogActions","VisualQueryStateService","ServiceBase","#contentTypesSvc","#metadataSvc","#queryDefSvc","#dialogRoute","#titleSvc","#pipelineId","#refreshPipeline","#refreshDataSourceConfigs","snackBar","matDialog","viewContainerRef","zone","changeDetectorRef","super","transient","MetadataService","DialogRoutingService","Title","signal","dataSourceConfigs","putEntityCountOnConnections$","Subject","parseInt","getParam","ngOnDestroy","complete","init","#fetchDataSources","#fetchPipeline","#attachKeyboardSave","doOnDialogClosed","editPipelineEntity","#savePipeline","form","items","EditPrep","editId","formUrl","convertFormToUrl","navRelative","saveAndRun","run","showDataSourceDetails","showDetails","query","cloneDeep","designerData","JsonHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","set","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","#calculateDataSourceConfigs","forEach","Metadata","metadataItem","entries","attributeName","attributeValue","includes","Array","isArray","editDataSource","contentTypeName","targetType","keyType","metadata","entity","getMetadata","subscribe","Items","next","duration","newMetadata","callback","pipelineResult","queryResult","#showQueryResult","console","warn","setTimeout","stream","#showStreamErrorResult","pipelineId","streamResult","_","refreshPipeline","refreshDataSourceConfigs","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","subscriptions","add","fromEvent","snapshot","firstChild","preventDefault","dataSource_r6","_r5","ctx_r1","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r4","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_13_0","toggledItems","_r1","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","#difficulties","#difficulty","filterAndSortDataSources","maxDifficulty","filtered","sort","a","b","toLocaleLowerCase","localeCompare","type","difficulty","checked","advanced","AddExplorerComponent_Conditional_0_Template","MatSlideToggleModule","TippyDirective","logSpecs","all","getEndpointOverlays","getEndpointInfo","buildSourceEndpoint","buildTargetEndpoint","EndpointsHelper","plumb","log","classLog","isSource","fnIf","r","location","label","cssClass","endpointName","isDynamic","l","required","trimmed","trim","endsWith","substring","style","sourceEndpoint","paintStyle","fill","radius","maxConnections","anchor","faces","overlays","events","click","endpointOrOverlay","onChangeLabel","targetEndpoint","isTarget","dropOptions","hoverClass","activeClass","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","pipelineResultExists","controls","touched","errors","scopeOption_r3","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_c0","toggleAdvancedMode","RenameStreamComponent","BaseComponent","hostClass","#buildForm","rename","formValue","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","valueChanges","startWith","distinctUntilChanged","values","Scope","patchValue","s","o","hostVars","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i6","MatInputModule","i7","MatSelectModule","i8","i9","MatOptionModule","NgClass","i10","FieldHintComponent","ClickStopPropagationDirective","encapsulation","addEndpoint","dataSrcIdPrefix","Plumber","#instance","#lineCount","#linePaintDefault","#lineColors","#maxCols","#uuidColorMap","#bulkDelete","#dialog","#endpoints","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","stroke","strokeWidth","outlineStroke","outlineWidth","jsPlumb","getInstance","#getInstanceDefaults","batch","#initDomDataSources","#initWirings","#bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","target","each","endpoint","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","overlay","AllowEdit","#nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","fnCond","domDataSource","querySelector","draggable","grid","stop","finalPos","outCount","#addEndpoint","inCount","in","targetEndpointUnlimited","makeTarget","makeSource","end","fn","wirings","inGroups","groupBy","wire","outGroups","pipeDataSource","connect","uuids","message","to","isIn","queryDs","count","d","connectionList","hasDynamic","endpointInfo","angled","model","enabled","addClass","width","afterClosed","newLabel","bind","info","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","arr","reduce","groups","dataSource_r3","ctx_r3","configureDataSource","openHelp","typeInfos","_r6","remove","config_r7","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","vsSvc","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","editName","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","_c2","Width","_c3","tmp_16_0","isOutDataSource","tmp_24_0","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","ngAfterViewInit","PlumbEditorComponent","#plumber","#scriptLoaded$","#queryDefinitionSvc","BehaviorSubject","calculateTypeInfos","typeInfo","loadScripts","test","src","domDataSourcesLoaded$","domDataSourcesRef","changes","combineLatest","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","newName","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","NgStyle","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","tmp_2_0","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","visualDesignerDataSig","RunExplorerComponent_Conditional_0_Conditional_26_Conditional_0_For_8_Template","warningSig","RunExplorerComponent_Conditional_0_Conditional_26_Conditional_0_Template","saveAndRunQuery","editPipeline","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_26_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","openRestApi","tmp_1_0","RunExplorerComponent","#dialogRouter","context","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","queryGuid","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","VisualQueryComponent","route","explorer","activeExplorer","toggleExplorer","RouterOutlet","__WEBPACK_DEFAULT_EXPORT__","arrayEach","iteratee","objectCreate","create","object","proto","isObject","prototype","getPrototype","overArg","getPrototypeOf"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/endpoints.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html","./node_modules/lodash-es/_arrayEach.js","./node_modules/lodash-es/_baseCreate.js","./node_modules/lodash-es/_getPrototype.js"],"sourcesContent":["import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(nameId: string) {\r\n    return this.getHttpApiUrl<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypeSig(nameId: string, initial: ContentType): Signal<ContentType> {\r\n    return this.getSignal<ContentType>(webApiTypeGet, {\r\n      params: { appId: this.appId, contentTypeId: nameId }\r\n    }, initial);\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.getHttpApiUrl<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypesSig(scope: string, initial: undefined): Signal<ContentType[]> {\r\n    return this.getSignal<ContentType[]>(webApiTypes, {\r\n      params: { appId: this.appId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  // todo: switch to using the GetSignal with `map` parameter similar to the initial version above\r\n  getScopesSig(initial: undefined): Signal<ScopeOption[]> {\r\n    const scopesSignal = this.getSignal<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(\r\n      webApiTypeScopes,\r\n      { params: { appId: this.appId } }, initial,\r\n    );\r\n\r\n    const scopeOptionsSignal = computed(() => {\r\n      const scopesData = scopesSignal();\r\n\r\n      // Add null/undefined check here\r\n      if (!scopesData || !scopesData.old) {\r\n        return []; // Return an empty array or handle this case as appropriate\r\n      }\r\n\r\n      const scopes = scopesData.old;\r\n      return Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n    });\r\n\r\n    return scopeOptionsSignal;\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.getHttpApiUrl<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(webApiTypeScopes, {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.NameId }, // TODO: @2pp - replace staticName with NameId\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceNameId: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceNameId },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\nconst webApiAppPartsGet = 'admin/appParts/get';\r\n@Injectable()\r\nexport class ExportAppPartsService extends HttpServiceBase {\r\n\r\n  getContentInfo(scope: string, initial: ContentInfo) {\r\n    return this.getSignal<ContentInfo>(webApiAppPartsGet, {\r\n      params: { appid: this.appId, zoneId: this.zoneId, scope }\r\n    }, initial);\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.appId\r\n      + '&zoneId=' + this.zoneId\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n const webApiAppRootStatistics = 'admin/app/Statistics';\r\n const webApiAppRootSaveData = 'admin/app/SaveData';\r\n\r\n\r\n@Injectable()\r\nexport class ExportAppService extends HttpServiceBase {\r\n\r\n  getAppInfo(initial: AppInfo) {\r\n    return this.getSignal<AppInfo>(webApiAppRootStatistics, {\r\n      params: { appid: this.appId, zoneId: this.zoneId },\r\n    }, initial);\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.appId}&zoneId=${this.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    // return this.get<boolean>(webApiAppRoot + 'SaveData', {\r\n    return this.getHttpApiUrl<boolean>(webApiAppRootSaveData, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService extends HttpServiceBase {\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.appId,\r\n        zoneId: this.zoneId,\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.getHttpApiUrl<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  getAllSig(contentType: string, initial?: Query[]) {\r\n    return this.getSignal<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    }, initial);\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.getHttpApiUrl<null>(webApiQueryClone, {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViews = 'admin/view/all';\r\nconst webApiViewDelete = 'admin/view/delete';\r\nconst webApiViewImport = 'admin/view/import';\r\nconst webApiViewPolymorph = 'admin/view/polymorphism';\r\nconst webApiViewUsage = 'admin/view/usage';\r\nconst webApiJson = 'admin/view/json';\r\n\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getSignal<View[]>(webApiViews, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.getHttpApiUrl<boolean>(webApiViewDelete, {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiJson)\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.getSignal<Polymorphism>(webApiViewPolymorph, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.getSignal<ViewUsage[]>(webApiViewUsage, {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return (event.key === 's' || event.key === 'S') && (event.ctrlKey || event.metaKey);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appMousedownStopPropagation]',\r\n})\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // probably better: Array.from(new Set(merged));\r\n  // static distinct<T extends unknown>(array: T[]): T[] {\r\n  //   return array.filter(onlyUnique);\r\n  // }\r\n\r\n}\r\n\r\n\r\n// function onlyUnique<T extends unknown>(value: T, index: number, array: T[]): boolean {\r\n//   return array.indexOf(value) === index;\r\n// }","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const ds = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (ds) {\r\n      typeInfo = { ...(ds.PrimaryType ? guiTypes[ds.PrimaryType] : guiTypes.Unknown) };\r\n      if (ds.Icon != null) { typeInfo.Icon = ds.Icon; }\r\n      if (ds.DynamicIn != null) { typeInfo.DynamicIn = ds.DynamicIn; }\r\n      if (ds.DynamicOut != null) { typeInfo.DynamicOut = ds.DynamicOut; }\r\n      if (ds.HelpLink != null) { typeInfo.HelpLink = ds.HelpLink; }\r\n      if (ds.EnableConfig != null) { typeInfo.EnableConfig = ds.EnableConfig; }\r\n      if (ds.UiHint != null) { typeInfo.UiHint = ds.UiHint; }\r\n    }\r\n    if (!typeInfo)\r\n      typeInfo = { ...guiTypes.Unknown };\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService extends HttpServiceBase {\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.getHttp<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.appId, id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.getHttp<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.appId,\r\n        zoneId: this.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.appId, Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.getHttp<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.appId, id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.getHttp<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.appId, id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos. Executed in {{ timeUsed }}ms ({{\r\n        ticksUsed\r\n      }}\r\n      ticks)\r\n    </p>\r\n\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <!-- Results -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n        <div class=\"eav-tab-description\">\r\n          <div>\r\n            @if (top === 0) {\r\n              Showing All results\r\n            }\r\n            @if (top !== 0) {\r\n              Showing top {{ top }} results\r\n            }\r\n          </div>\r\n          <div>\r\n            @for (option of optionsForTop; track option) {\r\n              <button mat-button (click)=\"show(option)\">\r\n                Show\r\n                @if (option === 0) {\r\n                  All\r\n                }\r\n                @if (option !== 0) {\r\n                  {{ option }}\r\n                }\r\n              </button>\r\n            }\r\n          </div>\r\n        </div>\r\n        <pre class=\"eav-pre-scroll\">{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <!-- Parameters -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n\r\n          <div class=\"eav-tab-content\">\r\n            <ul>\r\n              @for (param of parameters; track param) {\r\n                <li>{{ param }}</li>\r\n              }\r\n            </ul>\r\n          </div>\r\n        </mat-tab>\r\n      }\r\n\r\n      <!-- Sources -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <div class=\"eav-tab-content\">\r\n          <table>\r\n            <tr>\r\n              <th>Name and Guid</th>\r\n              <th>Type</th>\r\n              <th>Configuration</th>\r\n              <th>Error</th>\r\n            </tr>\r\n            @for (source of sources | keyvalue; track source) {\r\n              <tr>\r\n                <td>\r\n                  @if (source.value.Definition?.Name) {\r\n                    <div>{{ source.value.Definition?.Name }}</div>\r\n                  }\r\n                  <pre>{{ source.value.Guid }}</pre>\r\n                </td>\r\n                <td>{{ source.value.Type }}</td>\r\n                <td>\r\n                  <ol>\r\n                    @for (config of source.value.Configuration | keyvalue; track config) {\r\n                      <li>\r\n                        <b>{{ config.key }}</b\r\n                        >=<em>{{ config.value }}</em>\r\n                      </li>\r\n                    }\r\n                  </ol>\r\n                </td>\r\n                <td>{{ source.value.Error }}</td>\r\n              </tr>\r\n            }\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n\r\n      <!-- Streams -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <div class=\"eav-tab-content\">\r\n          <table>\r\n            <tr>\r\n              <th>Source</th>\r\n              <th>Target</th>\r\n              <th>Items</th>\r\n              <th>Error</th>\r\n            </tr>\r\n            @for (stream of streams; track stream) {\r\n              <tr>\r\n                <td>\r\n                  <pre>{{ stream.Source + ':' + stream.SourceOut }}</pre>\r\n                </td>\r\n                <td>\r\n                  <pre>{{ stream.Target + ':' + stream.TargetIn }}</pre>\r\n                </td>\r\n                <td>{{ stream.Count }}</td>\r\n                <td>{{ stream.Error }}</td>\r\n              </tr>\r\n            }\r\n          </table>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\n\r\n@Component({\r\n    selector: 'app-query-result',\r\n    templateUrl: './query-result.component.html',\r\n    styleUrls: ['./query-result.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTabsModule,\r\n        JsonPipe,\r\n        KeyValuePipe,\r\n    ]\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialog: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel().Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) return;\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { JsonPipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n    selector: 'app-stream-error-result',\r\n    templateUrl: './stream-error-result.component.html',\r\n    styleUrls: ['./stream-error-result.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogActions,\r\n        JsonPipe,\r\n    ]\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialog: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../../shared/models/edit-form.model';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { transient } from '../../../../../core';\r\nimport { isCtrlS } from '../../edit/dialog/main/keyboard-shortcuts';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\n\r\n/**\r\n * Service containing the state for the visual query.\r\n * It's shared, so should not be used with transient(...);\r\n */\r\n@Injectable()\r\nexport class VisualQueryStateService extends ServiceBase implements OnDestroy {\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #queryDefSvc = transient(QueryDefinitionService);\r\n  #dialogRoute = transient(DialogRoutingService);\r\n  #titleSvc = transient(Title);\r\n\r\n  pipelineModel = signal<PipelineModel>(null);\r\n  dataSources = signal<DataSource[]>(null);\r\n  dataSourceConfigs = signal<DataSourceConfigs>({});\r\n\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n\r\n  queryResult?: PipelineResult;\r\n\r\n  #pipelineId = parseInt(this.#dialogRoute.getParam('pipelineId'), 10);\r\n  #refreshPipeline = false;\r\n  #refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.#fetchDataSources(() => this.#fetchPipeline(true, true, false));\r\n    this.#attachKeyboardSave();\r\n    this.#dialogRoute.doOnDialogClosed(() => {\r\n      if (this.#refreshPipeline || this.#refreshDataSourceConfigs)\r\n        this.#fetchPipeline(this.#refreshPipeline, this.#refreshDataSourceConfigs, this.#refreshPipeline);\r\n      this.#refreshPipeline = false;\r\n      this.#refreshDataSourceConfigs = false;\r\n    });\r\n  }\r\n\r\n  public editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.#savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [EditPrep.editId(this.pipelineModel().Pipeline.EntityId)],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n      this.#refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  public saveAndRun(save: boolean, run: boolean): void {\r\n    if (save && run)\r\n      return this.#savePipeline(() => this.runPipeline());\r\n\r\n    if (save)\r\n      return this.#savePipeline();\r\n\r\n    if (run)\r\n      return this.runPipeline();\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const designerData: Record<string, any> = JsonHelpers.tryParse(query.Pipeline.VisualDesignerData) ?? {};\r\n    designerData.ShowDataSourceDetails = showDetails;\r\n    query.Pipeline.VisualDesignerData = JSON.stringify(designerData);\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const newSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (query.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    query.DataSources.push(newSource);\r\n    this.pipelineModel.set(query);\r\n    this.#savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    query.DataSources = query.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Name = name;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    dataSource.Description = description;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    query.Pipeline.StreamWiring = connections;\r\n    query.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const query = cloneDeep(this.pipelineModel());\r\n    const dataSource = query.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!dataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    dataSource.VisualDesignerData = { ...dataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel.set(query);\r\n  }\r\n\r\n  #calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) return;\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') return;\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) return;\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title !== null && attributeValue[0]?.Id !== null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs.set(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources().find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const { targetType, keyType } = eavConstants.metadata.entity;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.#metadataSvc.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [EditPrep.editId(metadata.Items[0].Id)],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n        this.#refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.#contentTypesSvc.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [ EditPrep.newMetadata(key, contentTypeName, eavConstants.metadata.entity) ],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.#dialogRoute.navRelative([`edit/${formUrl}`]);\r\n          this.#refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  #savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.#queryDefSvc.savePipeline(this.pipelineModel()).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel.set(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.#queryDefSvc.runPipeline(this.pipelineModel().Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.queryResult = pipelineResult;\r\n        this.#showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel.set(cloneDeep(this.pipelineModel()));\r\n\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25): void {\r\n    if (stream.Error)\r\n      return this.#showStreamErrorResult(stream);\r\n\r\n    if (stream.Count === 0)\r\n      return;\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel().Pipeline.EntityId;\r\n    this.#queryDefSvc.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel().DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.#showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (_: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  #fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar)\r\n      this.snackBar.open('Reloading query, please wait...');\r\n\r\n    this.#queryDefSvc.fetchPipeline(this.#pipelineId, this.dataSources()).subscribe(pipelineModel => {\r\n      if (showSnackBar)\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n\r\n      this.#titleSvc.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline)\r\n      this.pipelineModel.set(pipelineModel);\r\n\r\n\r\n      if (refreshDataSourceConfigs)\r\n        this.#calculateDataSourceConfigs(pipelineModel.DataSources);\r\n    });\r\n  }\r\n\r\n  #showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.matDialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.matDialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #fetchDataSources(callback?: () => void) {\r\n    this.#queryDefSvc.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources.set(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  #attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.#dialogRoute.snapshot.firstChild),\r\n          filter(event => isCtrlS(event)),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.#savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","@if (sorted()) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of sorted() | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue, KeyValuePipe } from '@angular/common';\r\nimport { Component, computed, signal } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { DataSource } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\n\r\n@Component({\r\n    selector: 'app-add-explorer',\r\n    templateUrl: './add-explorer.component.html',\r\n    styleUrls: ['./add-explorer.component.scss'],\r\n    imports: [\r\n        MatSlideToggleModule,\r\n        MatIconModule,\r\n        KeyValuePipe,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AddExplorerComponent {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  #difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n\r\n  #difficulty = signal(this.#difficulties.default);\r\n\r\n  sorted = computed(() => filterAndSortDataSources(this.visualQueryService.dataSources(), this.#difficulty()));\r\n\r\n  constructor(private visualQueryService: VisualQueryStateService) { }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.#difficulties.advanced : this.#difficulties.default;\r\n    this.#difficulty.set(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) return;\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","import { classLog } from '../../shared/logging';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { Plumber } from './plumber.helper';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  getEndpointOverlays: true,\r\n  getEndpointInfo: true,\r\n  buildSourceEndpoint: true,\r\n  buildTargetEndpoint: true,\r\n}\r\n\r\nexport class EndpointsHelper {\r\n\r\n  log = classLog({EndpointsHelper}, logSpecs);\r\n\r\n  constructor(private plumb: Plumber) { }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    const l = this.log.fnIf('getEndpointOverlays', {isSource});\r\n    const result = [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n    return l.r(result);\r\n  }\r\n\r\n  getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    const l = this.log.fnIf('getEndpointInfo', {endpointName, isDynamic});\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    const trimmed = endpointName.trim();\r\n    required = trimmed.endsWith('*');\r\n    name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n\r\n    if (isDynamic)\r\n      return l.r({\r\n        name,\r\n        required: false\r\n      } satisfies EndpointInfo, 'isDynamic');\r\n\r\n    return l.r({ name, required } satisfies EndpointInfo, 'notDynamic');\r\n  }\r\n\r\n  buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildSourceEndpoint', {pipelineDataSourceGuid, style});\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + (style ?? ''),\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => this.plumb.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid),\r\n      },\r\n    };\r\n    return l.r(sourceEndpoint);\r\n  }\r\n\r\n  buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const l = this.log.fnIf('buildTargetEndpoint', {pipelineDataSourceGuid, style});\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => this.plumb.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid),\r\n      },\r\n    };\r\n    return l.r(targetEndpoint);\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, HostBinding, Inject, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../../core';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { VisualQueryStateService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\n\r\n@Component({\r\n    selector: 'app-rename-stream',\r\n    templateUrl: './rename-stream.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        NgClass,\r\n        MatDialogActions,\r\n        MatSlideToggleModule,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n    ]\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.queryResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialog: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#buildForm();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialog.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  #buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists)\r\n      return;\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.queryResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null)\r\n          this.controls.label.patchValue(null);\r\n      })\r\n    );\r\n\r\n    this.#contentTypesSvc.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.queryResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { classLog } from '../../shared/logging';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { WindowWithJsPlumb } from '../window';\r\nimport { EndpointsHelper } from './endpoints.helper';\r\nimport { PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  addEndpoint: true,\r\n}\r\n\r\ndeclare const window: WindowWithJsPlumb;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nconst endPointsWhereWeRotate = 3;\r\n\r\nexport class Plumber {\r\n\r\n  log = classLog({Plumber}, logSpecs);\r\n\r\n  #instance: PlumbType;\r\n  #lineCount = 0;\r\n  #linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  #lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  #maxCols = this.#lineColors.length - 1;\r\n  #uuidColorMap: Record<string, any> = {};\r\n  #bulkDelete = false;\r\n  #dialog: MatDialogRef<RenameStreamComponent>;\r\n\r\n  #endpoints: EndpointsHelper;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.#endpoints = new EndpointsHelper(this);\r\n    this.#instance = window.jsPlumb.getInstance(this.#getInstanceDefaults(this.jsPlumbRoot));\r\n    this.#instance.batch(() => {\r\n      this.#initDomDataSources();\r\n      this.#initWirings();\r\n      this.#bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.#instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.#dialog?.close();\r\n    this.#instance.reset();\r\n    this.#instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.#bulkDelete = true;\r\n    this.#instance.batch(() => {\r\n      this.#instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.#bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.#instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.#instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.#instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  #nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.#uuidColorMap[uuid] ||\r\n      (this.#uuidColorMap[uuid] = Object.assign({}, this.#linePaintDefault, { stroke: this.#lineColors[this.#lineCount++ % this.#maxCols] }))\r\n    );\r\n  }\r\n\r\n  #getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.#nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  #initDomDataSources() {\r\n    const l = this.log.fnCond(false, 'initDomDataSources');\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) continue;\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) continue;\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.#instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.#addEndpoint(domDataSource, name, false, pipelineDataSource, outCount);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.#addEndpoint(domDataSource, name, true, pipelineDataSource, inCount);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.#endpoints.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.#instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut)\r\n        this.#instance.makeSource(domDataSource, this.#endpoints.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n    }\r\n    l.end();\r\n  }\r\n\r\n  /** Create wires */\r\n  #initWirings() {\r\n    const l = this.log.fn('initWirings');\r\n    const wirings = this.pipelineModel.Pipeline.StreamWiring;\r\n    if (!wirings) return l.end('no wirings');\r\n\r\n    const inGroups = groupBy(wirings, wire => wire.To);\r\n    const outGroups = groupBy(wirings, wire => wire.From);\r\n\r\n    l.values({ inGroups, outGroups });\r\n\r\n    wirings.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.#instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.#addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.#instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n\r\n        // if (wire.In === \"DEBUG\") debugger;\r\n\r\n        this.#addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      }\r\n\r\n      try {\r\n        this.#instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.#nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  #addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, queryDs: PipelineDataSource, count: number = 0) {\r\n    const l = this.log.fnIf('addEndpoint', { endpointName, isIn, queryDs });\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === queryDs.PartAssemblyAndType);\r\n    const connectionList = isIn ? dataSource.In : dataSource.Out;\r\n    const hasDynamic = connectionList?.some(name => this.#endpoints.getEndpointInfo(name, false));\r\n    // const count = connectionList?.length ?? -1;\r\n    const endpointInfo = this.#endpoints.getEndpointInfo(endpointName, hasDynamic);\r\n\r\n    l.a(`endpointInfo ${count}`, { dataSource, connectionList, isDynamic: hasDynamic, count, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    let style: string;\r\n    if (hasDynamic)\r\n      style = 'dynamic';\r\n    else if (!endpointInfo.required)\r\n      style = '';\r\n    else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const angled = count > endPointsWhereWeRotate;\r\n    const model = isIn\r\n      ? this.#endpoints.buildTargetEndpoint(queryDs.EntityGuid, style)\r\n      : this.#endpoints.buildSourceEndpoint(queryDs.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || queryDs.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.#instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    if (angled)\r\n      overlay.addClass('angled');\r\n    l.end(\"end\", {count, angled, overlay});\r\n  }\r\n\r\n  public onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit)\r\n      return;\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.#dialog = this.matDialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.#dialog.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) return;\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => this.onConnectionsChanged());\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #bindEvents() {\r\n    this.#instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.#bulkDelete) return;\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.#endpoints.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic)\r\n        this.#instance.deleteEndpoint(info.targetEndpoint);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n\r\n    this.#instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.#instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => this.onConnectionsChanged());\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.#instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel)\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n}\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);\r\n","@if (vsSvc.pipelineModel()) {\r\n  <div #domRoot id=\"pipeline-root\">\r\n    <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n    @if (!hardReset) {\r\n      @for (dataSource of vsSvc.pipelineModel().DataSources; track dataSource) {\r\n        <div\r\n          #domDataSource\r\n          [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\"\r\n          class=\"dataSource\"\r\n          [ngStyle]=\"{\r\n            top: dataSource.VisualDesignerData.Top + 'px',\r\n            left: dataSource.VisualDesignerData.Left + 'px',\r\n            'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null,\r\n          }\"\r\n          [ngClass]=\"{\r\n            'show-details': showDataSourceDetails() && vsSvc.dataSourceConfigs()[dataSource.EntityId]?.length,\r\n          }\"\r\n        >\r\n          <div class=\"actions left\">\r\n            <mat-icon class=\"type-info\" [title]=\"typeInfos()[dataSource.EntityGuid].UiHint\">\r\n              {{ typeInfos()[dataSource.EntityGuid].Icon }}\r\n            </mat-icon>\r\n            @if (vsSvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].EnableConfig) {\r\n              <mat-icon\r\n                class=\"configure\"\r\n                title=\"Configure data source\"\r\n                appMousedownStopPropagation\r\n                (click)=\"configureDataSource(dataSource)\"\r\n              >\r\n                settings\r\n              </mat-icon>\r\n            }\r\n            @if (typeInfos()[dataSource.EntityGuid].HelpLink) {\r\n              <mat-icon\r\n                class=\"help\"\r\n                title=\"Help for this data source\"\r\n                appMousedownStopPropagation\r\n                (click)=\"openHelp(typeInfos()[dataSource.EntityGuid].HelpLink)\"\r\n              >\r\n                help_outline\r\n              </mat-icon>\r\n            }\r\n          </div>\r\n          <div class=\"actions right\">\r\n            @if (vsSvc.pipelineModel().Pipeline.AllowEdit && !isOutDataSource(dataSource)) {\r\n              <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\"> delete </mat-icon>\r\n            }\r\n          </div>\r\n          <div\r\n            class=\"name\"\r\n            title=\"Click to edit name\"\r\n            appMousedownStopPropagation\r\n            (click)=\"vsSvc.pipelineModel().Pipeline.AllowEdit && editName(dataSource)\"\r\n          >\r\n            <span>{{ dataSource.Name || '(no name)' }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br />\r\n          <div\r\n            class=\"description\"\r\n            title=\"Click to edit description\"\r\n            appMousedownStopPropagation\r\n            (click)=\"vsSvc.pipelineModel().Pipeline.AllowEdit && editDescription(dataSource)\"\r\n          >\r\n            <span>{{ dataSource.Description }}</span>\r\n            <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n          </div>\r\n          <br />\r\n          @if (showDataSourceDetails() && vsSvc.dataSourceConfigs()[dataSource.EntityId]?.length) {\r\n            <hr style=\"margin: 0\" />\r\n            <table class=\"configs\">\r\n              @for (config of vsSvc.dataSourceConfigs()[dataSource.EntityId]; track config) {\r\n                <tr class=\"config\">\r\n                  <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n                  <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n                </tr>\r\n              }\r\n            </table>\r\n          }\r\n          <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}</div>\r\n          @if (vsSvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].DynamicOut) {\r\n            <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\"></div>\r\n          }\r\n          @if (vsSvc.pipelineModel().Pipeline.AllowEdit && typeInfos()[dataSource.EntityGuid].DynamicIn) {\r\n            <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\"></div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","// tslint:disable-next-line:max-line-length\r\nimport { NgClass, NgStyle } from '@angular/common';\r\nimport { AfterViewInit, ChangeDetectorRef, Component, computed, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\n\r\nconst logSpecs = {\r\n  all: false,\r\n  ngAfterViewInit: false,\r\n}\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n    selector: 'app-plumb-editor',\r\n    templateUrl: './plumb-editor.component.html',\r\n    styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n    imports: [\r\n        NgStyle,\r\n        NgClass,\r\n        MatIconModule,\r\n        MousedownStopPropagationDirective,\r\n    ]\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  log = classLog({ PlumbEditorComponent }, logSpecs);\r\n\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  #plumber: Plumber;\r\n  #scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n\r\n  #queryDefinitionSvc = transient(QueryDefinitionService);\r\n\r\n  showDataSourceDetails = computed(() => {\r\n    const result = JsonHelpers.tryParse(this.vsSvc.pipelineModel()?.Pipeline.VisualDesignerData) ?? {};\r\n    return result.ShowDataSourceDetails ?? false;\r\n  });\r\n\r\n  typeInfos = computed(() =>\r\n    calculateTypeInfos(this.vsSvc.pipelineModel()?.DataSources ?? [], this.vsSvc.dataSources()\r\n    ));\r\n\r\n  constructor(\r\n    public vsSvc: VisualQueryStateService, // Check if this not with transient better\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) { super(); }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.#scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.vsSvc.putEntityCountOnConnections$.subscribe(result => {\r\n        this.#plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    // October 2024 2dg\r\n    // Unclear whether this workaround is still needed, when switching to signal it was commented out October 2024\r\n    // Leave comment in until Q2 2025\r\n\r\n    // this.viewModel$ = combineLatest([\r\n    //   this.vsSvc.pipelineModel$,\r\n    // ]).pipe(\r\n    //   map(([pipelineModel]) => {\r\n    //     if (pipelineModel == null) return;\r\n    //     // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n    //     // This wipes dom entirely and gives us new elements\r\n    //     this.hardReset = true;\r\n    //     this.changeDetectorRef.detectChanges(); // Forces the view to re-render\r\n    //     this.hardReset = false;\r\n    //     const viewModel: PlumbEditorViewModel = {\r\n    //       removed: \"removeLater\",\r\n    //     };\r\n    //     return viewModel;\r\n    //   }),\r\n    // );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fnIf('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.#scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        l.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.#plumber?.destroy();\r\n        this.#plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.vsSvc.pipelineModel(),\r\n          this.vsSvc.dataSources(),\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.matDialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#plumber?.destroy();\r\n    this.#scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.#plumber.getAllConnections();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.vsSvc.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.vsSvc.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.vsSvc.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource): void {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved'))\r\n      return this.vsSvc.saveAndRun(true, false);\r\n\r\n    this.vsSvc.editDataSource(dataSource);\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.vsSvc.dataSources().find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.#queryDefinitionSvc.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) return;\r\n\r\n    this.#plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.#plumber.getAllConnections();\r\n    const streamsOut = this.#plumber.getStreamsOut();\r\n    this.vsSvc.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') return;\r\n\r\n    this.vsSvc.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) return;\r\n\r\n    this.vsSvc.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if (vsSvc.pipelineModel()) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">Save and run</button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">Run</button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">Save</button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (vsSvc.pipelineModel().Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of vsSvc.pipelineModel().Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (vsSvc.pipelineModel().Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of vsSvc.pipelineModel().Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerDataSig()) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle\r\n            color=\"primary\"\r\n            [checked]=\"visualDesignerDataSig().ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"\r\n          />\r\n        </div>\r\n      }\r\n      @if (warningSig()) {\r\n        @if (warningSig().length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warningSig(); track warning) {\r\n                <li [innerHTML]=\"warning\"></li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (vsSvc.pipelineModel().Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ vsSvc.pipelineModel().Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { transient } from '../../../../../core';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\n\r\n@Component({\r\n    selector: 'app-run-explorer',\r\n    templateUrl: './run-explorer.component.html',\r\n    styleUrls: ['./run-explorer.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n    ]\r\n})\r\nexport class RunExplorerComponent {\r\n\r\n  warningSig = signal<string[]>(\r\n    calculateWarnings(this.vsSvc?.pipelineModel() ?? null, this.context)\r\n  );\r\n\r\n  visualDesignerDataSig = signal<Record<string, any>>(\r\n    JsonHelpers.tryParse(this.vsSvc?.pipelineModel()?.Pipeline.VisualDesignerData) ?? {}\r\n  );\r\n\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private context: Context,\r\n    public vsSvc: VisualQueryStateService,\r\n  ) { }\r\n\r\n  editPipeline() {\r\n    this.vsSvc.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.vsSvc.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.vsSvc.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.vsSvc.pipelineModel().Pipeline.EntityGuid;\r\n    this.#dialogRouter.navRelative([GoToDevRest.getUrlQueryDialog(queryGuid)]);\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  if(!pipelineModel) return [];\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) return;\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { VisualQueryStateService } from './services/visual-query.service';\r\n\r\n@Component({\r\n    selector: 'app-visual-query',\r\n    templateUrl: './visual-query.component.html',\r\n    styleUrls: ['./visual-query.component.scss'],\r\n    imports: [\r\n        RouterOutlet,\r\n        NgClass,\r\n        MatIconModule,\r\n        RunExplorerComponent,\r\n        AddExplorerComponent,\r\n        PlumbEditorComponent,\r\n    ],\r\n    providers: [\r\n        VisualQueryStateService, // Shared State for the entire Visual Query, - init run here\r\n    ]\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private visualQueryService: VisualQueryStateService\r\n  ) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n"],"x_google_ignoreList":[32,33,34]}