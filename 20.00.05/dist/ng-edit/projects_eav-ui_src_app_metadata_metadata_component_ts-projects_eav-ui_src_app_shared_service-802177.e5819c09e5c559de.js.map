{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts-projects_eav-ui_src_app_shared_service-802177.e5819c09e5c559de.js","mappings":"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","names":["logSpecs","getAll","getAllLive","getAllOnce","ContentItemsService","HttpServiceBaseSignal","constructor","this","log","classLog","getAllPromise","contentTypeStaticName","fnIf","fetchPromise","webApiEntityList","params","appId","contentType","httpResource","url","apiUrl","refresh","getColumnsPromise","webApiFieldsAll","staticName","importItem","file","from","toBase64","pipe","switchMap","fileBase64","http","post","webApiEntityRoot","AppId","ContentBase64","map","success","Success","Messages","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_10__","jDH","factory","ɵfac","ServiceBase","subscriptions","Subscription","ngOnDestroy","destroy","unsubscribe","_angular_core__WEBPACK_IMPORTED_MODULE_1__","MetadataActionsComponent","agInit","deleteMetadata","onDelete","data","debug_node_JnOYh9kg","VBU","selectors","decls","vars","consts","template","rf","ctx","i0","MatRippleModule","i1","MatIconModule","i2","TippyDirective","encapsulation","MetadataContentTypeComponent","value","metadata","_Type","Description","styles","scopeOption_r1","name","MetadataSaveDialogComponent_Conditional_14_For_5_Template","ctx_r1","scopeOptions","length","dropdownInsertValue","contentType_r3","NameId","Label","MetadataSaveDialogComponent_Conditional_18_For_2_Template","tmp_1_0","contentTypes","MetadataSaveDialogComponent","#contentTypesService","dialog","hostClass","formValid","signal","canSave","computed","guidedContentType","advancedMode","transient","ContentTypesService","scope","eavConstants","scopes","default","getScopesSig","getTypes","ngOnInit","buildForm","#watchKeyboardShortcuts","form","statusChanges","subscribe","set","valid","closeDialog","close","toggleGuidedContentType","toggleAdvancedMode","event","checked","saveAndClose","formValues","getRawValue","keydownEvents","isCtrlEnter","preventDefault","UntypedFormGroup","addControl","UntypedFormControl","Validators","required","controls","valueChanges","startWith","distinctUntilChanged","newScope","patchValue","prompt","some","option","hostVars","hostBindings","MetadataSaveDialogComponent_Conditional_14_Template","MetadataSaveDialogComponent_Conditional_18_Template","MetadataSaveDialogComponent_Conditional_19_Template","MetadataSaveDialogComponent_Conditional_27_Template","$event","_c0","touched","errors","FormsModule","ReactiveFormsModule","MatFormFieldModule","i3","MatSelectModule","i4","MatOptionModule","MatInputModule","i5","MatButtonModule","i6","NgClass","i7","MatSlideToggleModule","i8","FieldHintComponent","ClickStopPropagationDirective","MatDialogActions","SaveCloseButtonFabComponent","ctx_r0","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_11_Conditional_5_Template","MetadataComponent_Conditional_11_Conditional_6_Template","MetadataComponent_Conditional_11_Conditional_7_Template","MetadataComponent_Conditional_11_Conditional_8_Template","Target","TargetType","metadataSet","Items","gridOptions","_r2","createMetadata","recommendation_r5","Icon","Enabled","_r4","$implicit","MetadataComponent_Conditional_15_For_10_Conditional_1_Template","MetadataComponent_Conditional_15_For_10_Conditional_2_Template","fabOpen","_r3","openChange","MetadataComponent_Conditional_15_For_10_Template","recommendations","MetadataComponent","#entitiesSvc","#metadataSvc","#contentItemSvc","#dialogRoutes","snackBar","matDialog","viewContainerRef","changeDetectorRef","EntityEditService","MetadataService","DialogRoutingService","#buildGridOptions","#params","convert","getParams","p","targetType","parseInt","keyType","key","#itemsFromHttp","item","find","i","Guid","For","undefined","#metadataResource","getMetadataLive","#helpTextConst","empty","description","hint","content","uxHelpText","clone","structuredClone","Recommendations","forEach","r","startsWith","icon","replace","window","atob","filter","Id","Count","title","decodeURIComponent","getParam","console","error","doOnDialogClosed","update","pre","open","recommendation","CreateEmpty","Name","create","calculateItemFor","duration","next","createMetadataForm","openFeatureDialog","MissingFeature","autoFocus","width","afterClosed","items","formUrl","convertFormToUrl","navRelative","markForCheck","temp","EditPrep","constructMetadataInfo","newMetadataFromInfo","#editMetadata","editId","#deleteMetadata","confirmed","delete","entityId","entityTitle","hasDeleteSnackbar","message","DeleteWarning","ConfirmDeleteDialogComponent","isConfirmed","#metadataEditUrl","urlSubRoute","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWide","field","cellRenderer","AgGridHelper","cellLink","onCellClicked","headerName","valueGetter","ActionsPinnedRight1","MetadataComponent_Conditional_10_Template","MetadataComponent_Conditional_11_Template","MetadataComponent_Conditional_12_Template","MetadataComponent_Conditional_14_Template","MetadataComponent_Conditional_15_Template","tmp_2_0","tmp_5_0","tmp_6_0","tmp_7_0","RouterOutlet","SxcGridModule","EcoFabSpeedDialComponent","EcoFabSpeedDialTriggerComponent","EcoFabSpeedDialActionsComponent","MatBadgeModule","MatBadgeIconDirective","SafeHtmlPipe","GridWithHelpComponent","PermissionsActionsComponent","deletePermission","PermissionsComponent","#permissionsService","#refresh","#prefills","buildGridOptions","PermissionsService","permissions","language","PermissionType","x","editPermission","permission","Prefill","#deletePermission","sort","Character","obj","fn","getWith","link","body","classes","a","onClick","stopPropagation","FsC","permissionsDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","Promise","all","__webpack_require__","e","then","bind","permissionRoutes","path","component","DialogEntryComponent","children","EditRoutes","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","input","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","inputs","ngContentSelectors","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","NgTemplateOutlet","metadataService","entitiesService","getMetadata","metaDataSignal","id","_angular_core__WEBPACK_IMPORTED_MODULE_6__","gridWrapper","viewChild","read","ElementRef","agGrid","contentChild","AgGridAngular","dialogAction","helpText","rowLength","DEFAULT_ROW_HEIGHT","GRID_HEADER_HEIGHT","HELP_CARD_BUFFER","effect","gridWrapperEl","nativeElement","untracked","#updateLayout","agGridEl","dialogActionEl","helpCard","querySelector","classList","toggle","style","flex","dimensions","#calculateDimensions","rowHeight","agGridHeight","sideNavEl","document","dialogEl","maxHeight","clientHeight","dialogHeaderHeight","dialogActionHeight","shouldHideHelp","helpCardHeight","wrapperHeight","offsetHeight","contentQueries","dirIndex","GoToPermissions","route","loadChildren","m","getUrl","getUrlApp","app","toString","getUrlAttribute","attribute","getUrlContentType","guid","getUrlEntity","entity","getUrlLanguage","webApiRoot","HttpServiceBase","contentTypeName","getHttpApiUrl","newHttpResource","getMetadataPromise","_angular_core__WEBPACK_IMPORTED_MODULE_2__","zoneId","type","tryForce","force","context","HttpContext","IGNORED_STATUSES","_angular_core__WEBPACK_IMPORTED_MODULE_5__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/core/object-utilities.ts","./projects/eav-ui/src/app/shared/ag-grid/ag-grid-helper.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions.routing.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/ag-grid/grid-with-help/grid-with-help.component.ts","./projects/eav-ui/src/app/shared/ag-grid/grid-with-help/grid-with-help.component.html","./projects/eav-ui/src/app/permissions/go-to-permissions.ts","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts"],"sourcesContent":["import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\nconst logSpecs = {\r\n  getAll: true,\r\n  getAllLive: true,\r\n  getAllOnce: true,\r\n\r\n}\r\n@Injectable()\r\nexport class ContentItemsService extends HttpServiceBaseSignal {\r\n\r\n  log = classLog({ ContentItemsService }, logSpecs);\r\n  \r\n  getAllPromise(contentTypeStaticName: string): Promise<ContentItem[]> {\r\n    this.log.fnIf('getAll', { contentTypeStaticName });\r\n    return this.fetchPromise<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getAllOnce(contentTypeStaticName: string) {\r\n    this.log.fnIf('getAllOnce', { contentTypeStaticName });\r\n    return httpResource<ContentItem[]>(() => {\r\n      return ({\r\n        url: this.apiUrl(webApiEntityList),\r\n        params: { appId: this.appId, contentType: contentTypeStaticName }\r\n      });\r\n    });\r\n  }\r\n\r\n  getAllLive(contentTypeStaticName: string, refresh: Signal<unknown>) {\r\n    this.log.fnIf('getAllLive', { contentTypeStaticName, refresh });\r\n    return httpResource<ContentItem[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiEntityList),\r\n        params: { appId: this.appId, contentType: contentTypeStaticName }\r\n      });\r\n    });\r\n  }\r\n\r\n  getColumnsPromise(contentTypeStaticName: string): Promise<Field[]> {\r\n    return this.fetchPromise<Field[]>(webApiFieldsAll, {\r\n      params: { appId: this.appId, staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-metadata-actions',\r\n    templateUrl: './metadata-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-metadata-content-type',\r\n    templateUrl: './metadata-content-type.component.html',\r\n    styleUrls: ['./metadata-content-type.component.scss'],\r\n    imports: [TippyDirective,]\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Create Metadata\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      This is a special operation to add an item which as metadata for another item,\r\n      see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n    </p>\r\n    <form [formGroup]=\"form\">\r\n      <!-- Scope -->\r\n      @if (advancedMode && guidedContentType) {\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions().length ? 'No items found' : ''\">\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n      </app-field-hint>\r\n      }\r\n\r\n      <!-- Content Type of metadata item -->\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Content Type</mat-label>\r\n        @if (guidedContentType) {\r\n        <mat-select formControlName=\"contentType\" required\r\n          [placeholder]=\"!contentTypes()?.length ? 'No items found' : ''\">\r\n          @for (contentType of contentTypes(); track contentType) {\r\n          <mat-option [value]=\"contentType.NameId\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!guidedContentType) {\r\n        <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n        }\r\n        <div matTextSuffix>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n            (click)=\"toggleGuidedContentType(true)\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n            (click)=\"toggleGuidedContentType(false)\">\r\n            <mat-icon>text_fields</mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-form-field>\r\n      @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n\r\n      <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n        {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n      </mat-slide-toggle>\r\n      \r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <app-save-close-button-fab\r\n      [ngClass]=\"!canSave() ? 'disabled' : ''\"\r\n      [disabled]=\"!canSave()\"\r\n      (action)=\"saveAndClose()\"\r\n    />\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, computed, HostBinding, OnInit, signal, WritableSignal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { isCtrlEnter } from '../../edit/dialog/main/keyboard-shortcuts';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { SaveCloseButtonFabComponent } from '../../shared/modules/save-close-button-fab/save-close-button-fab.component';\r\nimport { MetadataSaveFormValues } from './metadata-save-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-metadata-save-dialog',\r\n    templateUrl: './metadata-save-dialog.component.html',\r\n    styleUrls: ['./metadata-save-dialog.component.scss'],\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        NgClass,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n        MatDialogActions,\r\n        SaveCloseButtonFabComponent,\r\n    ]\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  formValid = signal(false);\r\n  protected canSave = computed(() => this.formValid());\r\n\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesService = transient(ContentTypesService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataSaveDialogComponent>,\r\n  ) { }\r\n\r\n  scope = signal(eavConstants.scopes.default.value);\r\n  scopeOptions = this.#contentTypesService.getScopesSig() as WritableSignal<ScopeOption[]>;\r\n\r\n  contentTypes = this.#contentTypesService.getTypes(this.scope).value;\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n    this.#watchKeyboardShortcuts();\r\n\r\n    // Subscribe to form status changes to update signal\r\n    this.form.statusChanges.subscribe(() => {\r\n      this.formValid.set(this.form.valid);\r\n    });\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialog.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  saveAndClose(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n  \r\n  #watchKeyboardShortcuts(): void {\r\n    this.dialog.keydownEvents().subscribe(event => {\r\n      if (isCtrlEnter(event) && this.canSave()) {\r\n        event.preventDefault();\r\n        this.saveAndClose();\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions().some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions.set([newScopeOption, ...this.scopeOptions()]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.scope.set(newScope);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <app-grid-with-help style=\"height: 100%\" [helpText]=\"uxHelpText()\" [refresh]=\"refresh()\" [rowLength]=\"metadataSet()?.Items.length\">\r\n    <div class=\"eav-dialog-header\" eav-dialog-header>\r\n      <div class=\"eav-dialog-header__title\">\r\n        {{ title || 'Metadata' }}\r\n      </div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"eav-dialog-content\" eav-dialog-content>\r\n      <p>\r\n        @if (!itemFor()) {\r\n          This item is not metadata for anything else.\r\n        } @else {\r\n          This item is metadata for:\r\n          <br />Target: {{ itemFor().Target }} <br />TargetType: {{ itemFor().TargetType }}\r\n          @if (itemFor().KeyNumber) {\r\n            <br />Key Number: {{ itemFor().KeyNumber }}\r\n          }\r\n          @if (itemFor().KeyGuid) {\r\n            <br />Key Guid: {{ itemFor().KeyGuid }}\r\n          }\r\n          @if (itemFor().KeyString) {\r\n            <br />Key String: {{ itemFor().KeyString }}\r\n          }\r\n          @if (itemFor().Title) {\r\n            <br />Title: {{ itemFor().Title }}\r\n          }\r\n        }\r\n      </p>\r\n    </div>\r\n\r\n    @if (metadataSet()?.Items.length > 0) {\r\n      <ag-grid-angular\r\n        class=\"ag-theme-material eav-dialog-content\"\r\n        [rowData]=\"metadataSet()?.Items\"\r\n        [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    }\r\n\r\n    <mat-dialog-actions align=\"end\">\r\n      @if (recommendations()?.length === 0) {\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\" (click)=\"createMetadata()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      }\r\n      @if (recommendations()?.length > 0) {\r\n        <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\" (openChange)=\"openChange($event)\">\r\n          <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n            <button mat-fab class=\"grid-fab\">\r\n              <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n            </button>\r\n          </eco-fab-speed-dial-trigger>\r\n          <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n            <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\" (click)=\"createMetadata()\">\r\n              <mat-icon>search</mat-icon>\r\n            </button>\r\n            @for (recommendation of recommendations(); track recommendation) {\r\n              <button\r\n                mat-mini-fab\r\n                class=\"eav-eco-fab-speed-dial-action-button\"\r\n                [attr.label]=\"recommendation.Title\"\r\n                (click)=\"createMetadata(recommendation)\"\r\n              >\r\n                @if (recommendation.Icon && fabOpen()) {\r\n                  <div\r\n                    style=\"color: white; fill: white\"\r\n                    [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n                    matBadgeColor=\"accent\"\r\n                    matBadgeSize=\"small\"\r\n                    [matBadgeIcon]=\"!recommendation.Enabled ? 'diamond' : null\"\r\n                    matBadgePosition=\"below after\"\r\n                    aria-hidden=\"false\"\r\n                  ></div>\r\n                } @else {\r\n                  <mat-icon>add</mat-icon>\r\n                }\r\n              </button>\r\n            }\r\n          </eco-fab-speed-dial-actions>\r\n        </eco-fab-speed-dial>\r\n      }\r\n    </mat-dialog-actions>\r\n  </app-grid-with-help>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","import { GridOptions, ICellRendererParams } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ConfirmDeleteDialogComponent } from '../app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from '../app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EavForInAdminUi } from '../edit/shared/models/eav';\r\nimport { openFeatureDialog } from '../features/shared/base-feature.component';\r\nimport { MetadataService } from '../permissions';\r\nimport { AgGridHelper } from '../shared/ag-grid/ag-grid-helper';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { GridWithHelpComponent, HelpTextConst } from '../shared/ag-grid/grid-with-help/grid-with-help.component';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { MatBadgeIconDirective } from '../shared/directives/mat-badge-icon.directive';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../shared/logging';\r\nimport { EditForm, EditPrep, ItemAddIdentifier } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataItem, MetadataRecommendation } from './models/metadata.model';\r\n\r\n@Component({\r\n  selector: 'app-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss'],\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    MatBadgeIconDirective,\r\n    SafeHtmlPipe,\r\n    GridWithHelpComponent,\r\n  ]\r\n})\r\nexport class MetadataComponent implements OnInit {\r\n\r\n  log = classLog({ MetadataComponent });\r\n\r\n  #entitiesSvc = transient(EntityEditService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #contentItemSvc = transient(ContentItemsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  fabOpen = signal(false);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key', 'title', 'contentTypeStaticName']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n    contentTypeStaticName: p.contentTypeStaticName,\r\n  }));\r\n\r\n\r\n  // Signal to get itemFor - must be _outside_ the computed property, otherwise it regenerates infinitely\r\n  #itemsFromHttp = this.#contentItemSvc.getAllOnce(this.#params.contentTypeStaticName).value;\r\n\r\n  itemFor = computed<EavForInAdminUi | undefined>(() => {\r\n    const item = this.#itemsFromHttp()?.find(i => i.Guid === this.#params.key);\r\n    return (item?.For)\r\n      ? item.For\r\n      : undefined;\r\n  });\r\n\r\n  refresh = signal<number>(0);\r\n  #metadataResource = this.#metadataSvc.getMetadataLive(this.refresh, this.#params.targetType, this.#params.keyType, this.#params.key).value\r\n\r\n\r\n  // UI Help Text for the UX Help Info Card\r\n  #helpTextConst: HelpTextConst = {\r\n    empty: {\r\n      description: '<p><b>This is where you manage Metadata</b></p>',\r\n      hint: \"<p>Click the (+) in the bottom right corner to create your first Metadata for the current item.</p>\"\r\n    },\r\n    content: {\r\n      description: '<p><b>Each row shows Metadata for the current item</b> <br>Metadata describes/configures something, similar to labels you could attach to clothes.</p>',\r\n      hint: '<p>Click on the row to edit the Metadata. <br>You can also create new Metadata.</p>'\r\n    }\r\n  };\r\n\r\n  uxHelpText = computed(() => {\r\n    const data = this.metadataSet()?.Items;\r\n    return data?.length === 0 ? this.#helpTextConst.empty : this.#helpTextConst.content;\r\n  })\r\n\r\n\r\n  metadataSet = computed(() => {\r\n    const metadata = this.#metadataResource();\r\n    if (!metadata) return undefined;\r\n\r\n    const clone = structuredClone(metadata);\r\n\r\n    clone.Recommendations.forEach(r => {\r\n      if (r.Icon?.startsWith('base64:')) {\r\n        let icon = r.Icon.replace('base64:', '');\r\n        icon = window.atob(icon);\r\n        icon = icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n        r.Icon = icon;\r\n      }\r\n    });\r\n    return clone;\r\n  });\r\n\r\n\r\n  recommendations = computed(() => {\r\n    const metadata = this.metadataSet();\r\n    return metadata?.Recommendations.filter(r =>\r\n      metadata?.Items.filter(i => i._Type.Id === r.Id).length < r.Count\r\n    );\r\n  });\r\n\r\n  protected title = (() => {\r\n    try {\r\n      return decodeURIComponent(this.#dialogRoutes.getParam('title') ?? '');\r\n    } catch (e) {\r\n      console.error('Couldn\\'t properly decode title');\r\n      return this.#dialogRoutes.getParam('title') ?? '';\r\n    }\r\n  })();\r\n\r\n  ngOnInit() {\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.refresh.update(pre => pre + 1));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        openFeatureDialog(this.matDialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.#entitiesSvc.create(recommendation.Id, { For: this.calculateItemFor('dummy').For }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.refresh.update(pre => pre + 1)\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.refresh.update(pre => pre + 1)\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.matDialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) return;\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [this.calculateItemFor(contentType)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(contentType: string): ItemAddIdentifier {\r\n    const temp = EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key);\r\n    return EditPrep.newMetadataFromInfo(contentType, temp);\r\n  }\r\n\r\n\r\n  #editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(metadata.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        hasDeleteSnackbar: true,\r\n        message: this.metadataSet().Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.matDialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed)\r\n          this.#deleteMetadata(metadata, true);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.#entitiesSvc.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.refresh.update(pre => pre + 1);\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  #metadataEditUrl(metadata: MetadataItem): string {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(metadata.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    // Use your dialogRoutes service to generate the correct sub-route\r\n    return '#' + this.#dialogRoutes.urlSubRoute(`edit/${formUrl}`);\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<MetadataItem>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Title',\r\n          cellRenderer: (params: ICellRendererParams & { data: MetadataItem }) =>\r\n            AgGridHelper.cellLink(\r\n              this.#metadataEditUrl(params.data),\r\n              params.value\r\n            ),\r\n          onCellClicked: (p: { data: MetadataItem }) => this.#editMetadata(p.data),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          valueGetter: (p: { data: MetadataItem }) => `${p.data._Type.Name}${p.data._Type.Title !== p.data._Type.Name ? ` (${p.data._Type.Title})` : ''}`,\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => ({\r\n            onDelete: (metadata) => this.#deleteMetadata(metadata),\r\n          } satisfies MetadataActionsParams))(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-permissions-actions',\r\n    templateUrl: './permissions-actions.component.html',\r\n    imports: [\r\n        MatRippleModule,\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ConfirmDeleteDialogComponent } from '../app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from '../app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    SxcGridModule,\r\n  ]\r\n})\r\nexport class PermissionsComponent implements OnInit {\r\n  gridOptions = this.buildGridOptions();\r\n  #permissionsService = transient(PermissionsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n  }));\r\n\r\n  #refresh = signal<number>(0);\r\n  permissions = this.#permissionsService.getAllLive(this.#params.targetType, this.#params.keyType, this.#params.key, this.#refresh);\r\n\r\n  #prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<PermissionsComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private matDialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#refresh.update(x => x + 1));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ...EditPrep.newMetadataFromInfo(\r\n            eavConstants.contentTypes.permissions,\r\n            EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n          ),\r\n          ...(this.#prefills[this.#params.targetType] && { Prefill: this.#prefills[this.#params.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [EditPrep.editId(permission.Id)],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #deletePermission(permission: Permission) {\r\n    const data: ConfirmDeleteDialogData = {\r\n      entityId: permission.Id,\r\n      entityTitle: permission.Title,\r\n      message: \"Delete this permission?\",\r\n      hasDeleteSnackbar: true\r\n    };\r\n    const confirmationDialogRef = this.matDialog.open(ConfirmDeleteDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '400px',\r\n    });\r\n    confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n      if (isConfirmed)\r\n        this.#permissionsService.delete(permission.Id).subscribe(() => {\r\n          this.snackBar.open('Deleted', null, { duration: 2000 });\r\n          this.#refresh.update(x => x + 1);\r\n        })\r\n    });\r\n    return;\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<Permission>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.#deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Permissions</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions()\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","\r\n/**\r\n * Conversion function to change something to something else, a bit like 'map' but for a single item.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `getWith` function, but has a different name to indicate the usage.\r\n */\r\nexport function convert<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n/**\r\n * Function to do something with an object and return the result.\r\n * \r\n * Typically used in short return statements.\r\n * \r\n * Internally it's the same as the `convert` function, but has a different name to indicate the usage.\r\n */\r\nexport function getWith<T extends unknown, R extends unknown>(obj: T, fn: (value: T) => R): R {\r\n  return fn(obj);\r\n}\r\n\r\n","export class AgGridHelper {\r\n  public static cellLink(link: string, body: string, classes?: string): string {\r\n    return `<a class=\"default-link fill-cell ${classes}\" href=\"${link}\">${body}</a>`;\r\n  }\r\n}","import { Directive, HostListener } from '@angular/core';\r\nimport { classLog } from '../logging';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  log = classLog({ClickStopPropagationDirective});\r\n\r\n  // Log constructor to detect that it was really attached/created\r\n  constructor() {\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.log.a('onClick', { event });\r\n    event.stopPropagation();\r\n\r\n    // This should never be added here, as it's often on a link, and the default behavior (link open) should happen\r\n    // event.preventDefault();\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const permissionRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: permissionsDialog },\r\n    children: EditRoutes\r\n  },\r\n];\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { computed, Injectable, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of, transient } from '../../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { EntityEditService } from '../../shared/services/entity-edit.service';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n  private entitiesService = transient(EntityEditService);\r\n\r\n  getAll(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  getAllLive(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string, refresh?: Signal<unknown>,\r\n  ): Signal<Permission[]> {\r\n    const metaDataSignal = this.metadataService.getMetadataLive(refresh, targetType, keyType, key, eavConstants.contentTypes.permissions\r\n    ).value;\r\n\r\n    return computed(() => {\r\n      const metaData = metaDataSignal();\r\n      return (metaData?.Items ?? []) as Permission[];\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { AgGridAngular } from '@ag-grid-community/angular';\r\nimport { Component, contentChild, effect, ElementRef, input, untracked, viewChild } from '@angular/core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\n\r\nexport interface HelpTextConst {\r\n  empty: GridWithHelpInput;\r\n  content: GridWithHelpInput;\r\n}\r\n\r\nexport interface GridWithHelpInput {\r\n  description: string;\r\n  hint: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-grid-with-help',\r\n  imports: [],\r\n  templateUrl: './grid-with-help.component.html',\r\n  styleUrl: './grid-with-help.component.scss'\r\n})\r\n\r\nexport class GridWithHelpComponent {\r\n  // ViewChild and ContentChild references - Access to DOM elements\r\n  gridWrapper = viewChild(\"gridWrapper\", { read: ElementRef });\r\n  agGrid = contentChild(AgGridAngular, { read: ElementRef });\r\n  dialogAction = contentChild(MatDialogActions, { read: ElementRef });\r\n\r\n  // Input properties - Required data from parent component\r\n  readonly helpText = input.required<GridWithHelpInput>({});\r\n  readonly refresh = input.required<number>();\r\n  readonly rowLength = input.required<number>();\r\n\r\n  // Constants - Fixed values for layout calculations\r\n  readonly DEFAULT_ROW_HEIGHT = 47; // Default height for AG Grid rows in pixels\r\n  readonly GRID_HEADER_HEIGHT = 64; // Height of AG Grid header in pixels\r\n  readonly HELP_CARD_BUFFER = 12;   // Additional buffer space for help card in pixels\r\n\r\n  constructor() {\r\n    // Effect that reacts to changes in refresh and rowLength signals\r\n    effect(() => {\r\n      const refresh = this.refresh();\r\n      const rowLength = this.rowLength();\r\n      const gridWrapperEl = this.gridWrapper()?.nativeElement;\r\n\r\n      // Early return if grid wrapper element is not available\r\n      if (!gridWrapperEl) return;\r\n\r\n      // Untracked execution to prevent unnecessary effect re-runs during layout updates\r\n      untracked(() => this.#updateLayout(gridWrapperEl, rowLength));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Main layout update method - Handles the dynamic sizing and positioning of grid and help card\r\n   * @param gridWrapperEl - The main container element\r\n   * @param rowLength - Number of rows in the grid\r\n   */\r\n  #updateLayout(gridWrapperEl: HTMLElement, rowLength: number): void {\r\n    // Get references to essential DOM elements\r\n    const agGridEl = this.agGrid()?.nativeElement;\r\n    const dialogActionEl = this.dialogAction()?.nativeElement;\r\n    const helpCard = gridWrapperEl.querySelector('.help-info-card') as HTMLElement;\r\n\r\n    helpCard.classList.toggle('center-center', rowLength === 0);\r\n\r\n    // Early return if critical elements are missing\r\n    if (!agGridEl || !dialogActionEl) return;\r\n\r\n    helpCard.style.flex = \"\";\r\n\r\n    // Calculate all necessary dimensions for layout\r\n    const dimensions = this.#calculateDimensions(gridWrapperEl, agGridEl, dialogActionEl, helpCard, rowLength);\r\n\r\n    // Set AG Grid height based on row count and maximum height to prevent overflow\r\n    agGridEl.style.flex = dimensions.rowHeight ? `0 0 ${dimensions.agGridHeight}px` : '0px';\r\n\r\n    // Outer Container for max Size\r\n    const sideNavEl = document.querySelector<HTMLElement>('.mat-sidenav-content'); // with SideNav (settings)\r\n    const dialogEl = document.querySelector<HTMLElement>('.mat-mdc-dialog-container'); // only Dialog (Content)\r\n\r\n    const outerContainer = sideNavEl ?? dialogEl;\r\n    const maxHeight = outerContainer.clientHeight - dimensions.dialogHeaderHeight - dimensions.dialogActionHeight;\r\n\r\n    agGridEl.style.maxHeight = `${maxHeight}px`;\r\n\r\n    // Determine if help card should be hidden when content exceeds available space\r\n    const shouldHideHelp = dimensions.helpCardHeight + dimensions.agGridHeight + dimensions.dialogActionHeight + dimensions.dialogHeaderHeight > dimensions.wrapperHeight;\r\n\r\n    helpCard.style.flex = \"1 1 auto\";\r\n    // Remove Help card from layout if it should be hidden\r\n    helpCard?.classList.toggle('hidden-help-info-card', shouldHideHelp);\r\n  }\r\n\r\n  // Calculate dimensions for AG Grid and help card based on current layout\r\n  #calculateDimensions(gridWrapperEl: HTMLElement, agGridEl: HTMLElement, dialogActionEl: HTMLElement, helpCard: HTMLElement, rowLength: number) {\r\n    const rowHeight = agGridEl.querySelector('.ag-row')?.clientHeight ?? this.DEFAULT_ROW_HEIGHT;\r\n    const agGridHeight = this.GRID_HEADER_HEIGHT + (rowLength * rowHeight);\r\n    const helpCardHeight = helpCard.clientHeight + this.HELP_CARD_BUFFER;\r\n    const dialogActionHeight = dialogActionEl.offsetHeight;\r\n    const dialogHeaderHeight = gridWrapperEl.querySelector('.eav-dialog-header')?.clientHeight ?? 0;\r\n    // Get total available wrapper height\r\n    const wrapperHeight = gridWrapperEl.offsetHeight;\r\n    return {\r\n      rowHeight,\r\n      agGridHeight,\r\n      helpCardHeight,\r\n      dialogActionHeight,\r\n      dialogHeaderHeight,\r\n      wrapperHeight\r\n    };\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"grid-wrapper-dynamic\" #gridWrapper>\r\n  <ng-content select=\"[eav-dialog-header]\"></ng-content>\r\n  <ng-content select=\"[eav-dialog-content]\"> </ng-content>\r\n  <ng-content select=\"ag-grid-angular\"></ng-content>\r\n  <div class=\"help-info-card\">\r\n    <div class=\"help-info-card-text\">\r\n      <span [innerHTML]=\"helpText().description\"></span>\r\n      <span [innerHTML]=\"helpText().hint\"></span>\r\n    </div>\r\n  </div>\r\n  <ng-content select=\"mat-dialog-actions\"></ng-content>\r\n</div>\r\n","import { Route } from '@angular/router';\r\nimport { Of } from '../../../../core';\r\nimport { eavConstants, MetadataKeyTypes } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.routing').then(m => m.permissionRoutes),\r\n    // loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { Injectable, Signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyTypes } from '../../shared/constants/eav.constants';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n@Injectable()\r\nexport class MetadataService extends HttpServiceBase {\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  // TODO: 2dg, ask 2dm \r\n  getMetadata(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.getHttpApiUrl<MetadataDto>(webApiRoot, {\r\n      params: {\r\n        appId: this.appId,\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getMetadataLive(refresh: Signal<unknown>, targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string) {\r\n    return this.newHttpResource<MetadataDto>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiRoot),\r\n        params: {\r\n          appId: this.appId,\r\n          targetType: targetType.toString(),\r\n          keyType,\r\n          key: key.toString(),\r\n          ...(contentTypeName && { contentType: contentTypeName }),\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  // New method to return a promise\r\n  getMetadataPromise(targetType: number, keyType: Of<typeof MetadataKeyTypes>, key: string | number, contentTypeName?: string): Promise<MetadataDto> {\r\n    return this.fetchPromise<MetadataDto>(webApiRoot, {\r\n      params: {\r\n        appId: this.appId,\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { HttpContext } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { IGNORED_STATUSES } from '../interceptors/handle-errors.interceptor';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { webApiEntityRoot } from './entity.service';\r\nimport { HttpServiceBaseSignal } from './http-service-base-signal';\r\n\r\n@Injectable()\r\nexport class EntityEditService extends HttpServiceBaseSignal {\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.appId, force: tryForce.toString() },\r\n      context: new HttpContext().set(IGNORED_STATUSES, [400]),\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n"],"x_google_ignoreList":[]}