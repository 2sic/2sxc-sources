{"version":3,"file":"default-projects_eav-ui_src_app_features_feature-icon-text_feature-icon-text_component_ts-pro-ffb1c9.9f57cea1cc865849.js","mappings":"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","names":["_isStrictComparable","isStrictComparable","value","isObject","_matchesStrictComparable","matchesStrictComparable","key","srcValue","object","undefined","Object","_baseMatches","baseMatches","source","matchData","getMatchData","result","keys","length","baseIsMatch","customizer","index","noCustomizer","data","objValue","stack","Stack","baseIsEqual","COMPARE_PARTIAL_FLAG","reIsDeepProp","reIsPlainProp","_isKey","isKey","isArray","type","isSymbol","test","memoize","func","resolver","TypeError","memoized","args","arguments","apply","this","cache","has","get","set","Cache","MapCache","lodash_es_memoize","rePropName","reEscapeChar","_stringToPath","memoizeCapped","size","clear","string","charCodeAt","push","replace","match","number","quote","subString","_castPath","castPath","stringToPath","toString","_toKey","toKey","_baseGet","baseGet","path","_baseHasIn","baseHasIn","lodash_es_hasIn","hasIn","hasPath","hasFunc","isLength","isIndex","isArguments","_baseMatchesProperty","baseMatchesProperty","defaultValue","lodash_es_identity","identity","lodash_es_property","property","baseProperty","basePropertyDeep","_baseIteratee","baseIteratee","BADGE_CONTENT_CLASS","_MatBadgeStyleLoader","static","__ngFactoryType__","i0","selectors","decls","vars","template","rf","ctx","styles","encapsulation","changeDetection","MatBadge","_ngZone","inject","NgZone","_elementRef","ElementRef","_ariaDescriber","AriaDescriber","_renderer","Renderer2","_animationsDisabled","_idGenerator","_IdGenerator","color","_color","_setColor","overlap","disabled","position","content","_content","newContent","_updateRenderedContent","description","_description","newDescription","_updateDescription","hidden","_badgeElement","_inlineBadgeDescription","_isInitialized","_interactivityChecker","InteractivityChecker","_document","DOCUMENT","constructor","styleLoader","_CdkPrivateStyleLoader","load","_VisuallyHiddenLoader","isAbove","indexOf","isAfter","getBadgeElement","ngOnInit","_clearExistingBadges","_createBadgeElement","ngOnDestroy","destroyNode","remove","removeDescription","nativeElement","_isHostInteractive","isFocusable","ignoreVisibility","badgeElement","createElement","activeClass","setAttribute","getId","classList","add","appendChild","requestAnimationFrame","runOutsideAngular","newContentNormalized","trim","textContent","_removeInlineDescription","describe","_updateInlineDescription","colorPalette","badges","querySelectorAll","Array","from","hostAttrs","hostVars","hostBindings","inputs","booleanAttribute","MatBadgeModule","imports","A11yModule","MatCommonModule","__WEBPACK_DEFAULT_EXPORT__","isObjectLike","baseGetTag","_arrayAggregator","arrayAggregator","array","setter","iteratee","accumulator","_baseEach","createBaseEach","eachFunc","fromRight","collection","isArrayLike","iterable","baseForOwn","_baseAggregator","baseAggregator","baseEach","hasOwnProperty","prototype","lodash_es_groupBy","createAggregator","initializer","call","baseAssignValue","reduce","seed","operate","scanInternals","empty","InputTypeCatalog","EmptyDefault","EmptyEnd","EmptyMessage","ends","oldValuePickers","StringDropdown","NumberDropdown","StringFontIconPicker","oldEntityPickers","EntityContentBlocks","EntityDefault","EntityQuery","oldOtherPickers","StringDropdownQuery","StringTemplatePicker","newPicker","EntityPicker","StringPicker","NumberPicker","InputTypeHelpers","isEmpty","inputType","includes","endsPreviousGroup","isGroupStart","isGroupEnd","isMessage","isNewPicker","isOldValuePicker","isAnyPicker","INFINITY","symbolProto","Symbol","symbolToString","_baseToString","baseToString","arrayMap","lodash_es_toString","_defineProperty","getNative","_baseAssignValue","defineProperty","configurable","enumerable","writable","_baseFor","createBaseFor","keysFunc","props","_baseForOwn","baseFor","_r1","ctx_r1","openDialog","_c0","featureNameId","FeatureIconTextComponent","FeatureComponentBase","_angular_core__WEBPACK_IMPORTED_MODULE_1__","VBU","features","consts","FeatureIconTextComponent_Conditional_0_Template","show","MatIconModule","i1","TippyDirective","ToggleDebugDirective","globalConfigService","onClick","event","navigator","platform","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","window","getSelection","removeAllRanges","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FsC","$event"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/lodash-es/_isStrictComparable.js","./node_modules/lodash-es/_getMatchData.js","./node_modules/lodash-es/_matchesStrictComparable.js","./node_modules/lodash-es/_baseMatches.js","./node_modules/lodash-es/_baseIsMatch.js","./node_modules/lodash-es/_isKey.js","./node_modules/lodash-es/memoize.js","./node_modules/lodash-es/_stringToPath.js","./node_modules/lodash-es/_memoizeCapped.js","./node_modules/lodash-es/_castPath.js","./node_modules/lodash-es/_toKey.js","./node_modules/lodash-es/_baseGet.js","./node_modules/lodash-es/_baseHasIn.js","./node_modules/lodash-es/_hasPath.js","./node_modules/lodash-es/hasIn.js","./node_modules/lodash-es/_baseMatchesProperty.js","./node_modules/lodash-es/get.js","./node_modules/lodash-es/identity.js","./node_modules/lodash-es/property.js","./node_modules/lodash-es/_baseProperty.js","./node_modules/lodash-es/_basePropertyDeep.js","./node_modules/lodash-es/_baseIteratee.js","./node_modules/@angular/material/fesm2022/badge.mjs","./node_modules/lodash-es/isSymbol.js","./node_modules/lodash-es/_arrayAggregator.js","./node_modules/lodash-es/_baseEach.js","./node_modules/lodash-es/_createBaseEach.js","./node_modules/lodash-es/_baseAggregator.js","./node_modules/lodash-es/groupBy.js","./node_modules/lodash-es/_createAggregator.js","./node_modules/rxjs/dist/esm/internal/operators/reduce.js","./projects/eav-ui/src/app/shared/fields/input-type-helpers.ts","./node_modules/lodash-es/_baseToString.js","./node_modules/lodash-es/_arrayMap.js","./node_modules/lodash-es/toString.js","./node_modules/lodash-es/_defineProperty.js","./node_modules/lodash-es/_baseAssignValue.js","./node_modules/lodash-es/_baseFor.js","./node_modules/lodash-es/_createBaseFor.js","./node_modules/lodash-es/_baseForOwn.js","./projects/eav-ui/src/app/features/feature-icon-text/feature-icon-text.component.html","./projects/eav-ui/src/app/features/feature-icon-text/feature-icon-text.component.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts"],"sourcesContent":["import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n","import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n","import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n","import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n","import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n","import { AriaDescriber, _IdGenerator, InteractivityChecker, A11yModule } from '@angular/cdk/a11y';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, inject, NgZone, ElementRef, Renderer2, DOCUMENT, HOST_TAG_NAME, booleanAttribute, Directive, Input, NgModule } from '@angular/core';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/bidi';\n\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/**\n * Component used to load the structural styles of the badge.\n * @docs-private\n */\nclass _MatBadgeStyleLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatBadgeStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _MatBadgeStyleLoader, isStandalone: true, selector: \"ng-component\", ngImport: i0, template: '', isInline: true, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color, var(--mat-sys-error));color:var(--mat-badge-text-color, var(--mat-sys-on-error));font-family:var(--mat-badge-text-font, var(--mat-sys-label-small-font));font-weight:var(--mat-badge-text-weight, var(--mat-sys-label-small-weight));border-radius:var(--mat-badge-container-shape, var(--mat-sys-corner-full))}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}@media(forced-colors: active){.mat-badge-content{outline:solid 1px;border-radius:0}}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color, color-mix(in srgb, var(--mat-sys-error) 38%, transparent));color:var(--mat-badge-disabled-state-text-color, var(--mat-sys-on-error))}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, 6px);min-height:var(--mat-badge-small-size-container-size, 6px);line-height:var(--mat-badge-small-size-line-height, 6px);padding:var(--mat-badge-small-size-container-padding, 0);font-size:var(--mat-badge-small-size-text-size, 0);margin:var(--mat-badge-small-size-container-offset, -6px 0)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset, -6px)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, 16px);min-height:var(--mat-badge-container-size, 16px);line-height:var(--mat-badge-line-height, 16px);padding:var(--mat-badge-container-padding, 0 4px);font-size:var(--mat-badge-text-size, var(--mat-sys-label-small-size));margin:var(--mat-badge-container-offset, -12px 0)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset, -12px)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, 16px);min-height:var(--mat-badge-large-size-container-size, 16px);line-height:var(--mat-badge-large-size-line-height, 16px);padding:var(--mat-badge-large-size-container-padding, 0 4px);font-size:var(--mat-badge-large-size-text-size, var(--mat-sys-label-small-size));margin:var(--mat-badge-large-size-container-offset, -12px 0)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset, -12px)}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatBadgeStyleLoader, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color, var(--mat-sys-error));color:var(--mat-badge-text-color, var(--mat-sys-on-error));font-family:var(--mat-badge-text-font, var(--mat-sys-label-small-font));font-weight:var(--mat-badge-text-weight, var(--mat-sys-label-small-weight));border-radius:var(--mat-badge-container-shape, var(--mat-sys-corner-full))}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}@media(forced-colors: active){.mat-badge-content{outline:solid 1px;border-radius:0}}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color, color-mix(in srgb, var(--mat-sys-error) 38%, transparent));color:var(--mat-badge-disabled-state-text-color, var(--mat-sys-on-error))}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, 6px);min-height:var(--mat-badge-small-size-container-size, 6px);line-height:var(--mat-badge-small-size-line-height, 6px);padding:var(--mat-badge-small-size-container-padding, 0);font-size:var(--mat-badge-small-size-text-size, 0);margin:var(--mat-badge-small-size-container-offset, -6px 0)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset, -6px)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, 16px);min-height:var(--mat-badge-container-size, 16px);line-height:var(--mat-badge-line-height, 16px);padding:var(--mat-badge-container-padding, 0 4px);font-size:var(--mat-badge-text-size, var(--mat-sys-label-small-size));margin:var(--mat-badge-container-offset, -12px 0)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset, -12px)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, 16px);min-height:var(--mat-badge-large-size-container-size, 16px);line-height:var(--mat-badge-large-size-line-height, 16px);padding:var(--mat-badge-large-size-container-padding, 0 4px);font-size:var(--mat-badge-large-size-text-size, var(--mat-sys-label-small-size));margin:var(--mat-badge-large-size-container-offset, -12px 0)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset, -12px)}\\n\"] }]\n        }] });\n/** Directive to display a text badge. */\nclass MatBadge {\n    _ngZone = inject(NgZone);\n    _elementRef = inject(ElementRef);\n    _ariaDescriber = inject(AriaDescriber);\n    _renderer = inject(Renderer2);\n    _animationsDisabled = _animationsDisabled();\n    _idGenerator = inject(_IdGenerator);\n    /**\n     * Theme color of the badge. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/badge/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    _color = 'primary';\n    /** Whether the badge should overlap its contents or not */\n    overlap = true;\n    /** Whether the badge is disabled. */\n    disabled;\n    /**\n     * Position the badge should reside.\n     * Accepts any combination of 'above'|'below' and 'before'|'after'\n     */\n    position = 'above after';\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    _content;\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateDescription(newDescription);\n    }\n    _description;\n    /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n    size = 'medium';\n    /** Whether the badge is hidden. */\n    hidden;\n    /** Visible badge element. */\n    _badgeElement;\n    /** Inline badge description. Used when the badge is applied to non-interactive host elements. */\n    _inlineBadgeDescription;\n    /** Whether the OnInit lifecycle hook has run yet */\n    _isInitialized = false;\n    /** InteractivityChecker to determine if the badge host is focusable. */\n    _interactivityChecker = inject(InteractivityChecker);\n    _document = inject(DOCUMENT);\n    constructor() {\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_MatBadgeStyleLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = this._elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n            const tagName = inject(HOST_TAG_NAME);\n            // Heads-up for developers to avoid putting matBadge on <mat-icon>\n            // as it is aria-hidden by default docs mention this at:\n            // https://material.angular.dev/components/badge/overview#accessibility\n            if (tagName.toLowerCase() === 'mat-icon' &&\n                nativeElement.getAttribute('aria-hidden') === 'true') {\n                console.warn(`Detected a matBadge on an \"aria-hidden\" \"<mat-icon>\". ` +\n                    `Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.` +\n                    `\\n${nativeElement.outerHTML}`);\n            }\n        }\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n            this._inlineBadgeDescription?.remove();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Gets whether the badge's host element is interactive. */\n    _isHostInteractive() {\n        // Ignore visibility since it requires an expensive style caluclation.\n        return this._interactivityChecker.isFocusable(this._elementRef.nativeElement, {\n            ignoreVisibility: true,\n        });\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', this._idGenerator.getId('mat-badge-content-'));\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationsDisabled) {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && !this._animationsDisabled) {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent ?? ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateDescription(newDescription) {\n        // Always start by removing the aria-describedby; we will add a new one if necessary.\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        // NOTE: We only check whether the host is interactive here, which happens during\n        // when then badge content changes. It is possible that the host changes\n        // interactivity status separate from one of these. However, watching the interactivity\n        // status of the host would require a `MutationObserver`, which is likely more code + overhead\n        // than it's worth; from usages inside Google, we see that the vats majority of badges either\n        // never change interactivity, or also set `matBadgeHidden` based on the same condition.\n        if (!newDescription || this._isHostInteractive()) {\n            this._removeInlineDescription();\n        }\n        this._description = newDescription;\n        // We don't add `aria-describedby` for non-interactive hosts elements because we\n        // instead insert the description inline.\n        if (this._isHostInteractive()) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        else {\n            this._updateInlineDescription();\n        }\n    }\n    _updateInlineDescription() {\n        // Create the inline description element if it doesn't exist\n        if (!this._inlineBadgeDescription) {\n            this._inlineBadgeDescription = this._document.createElement('span');\n            this._inlineBadgeDescription.classList.add('cdk-visually-hidden');\n        }\n        this._inlineBadgeDescription.textContent = this.description;\n        this._badgeElement?.appendChild(this._inlineBadgeDescription);\n    }\n    _removeInlineDescription() {\n        this._inlineBadgeDescription?.remove();\n        this._inlineBadgeDescription = undefined;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatBadge, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatBadge, isStandalone: true, selector: \"[matBadge]\", inputs: { color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\", booleanAttribute], disabled: [\"matBadgeDisabled\", \"disabled\", booleanAttribute], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\", booleanAttribute] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: [{ alias: 'matBadgeOverlap', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matBadgeDisabled', transform: booleanAttribute }]\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: [{ alias: 'matBadgeHidden', transform: booleanAttribute }]\n            }] } });\n\nclass MatBadgeModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader], exports: [MatBadge, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    // Note: we _shouldn't_ have to import `_MatBadgeStyleLoader`,\n                    // but it seems to be necessary for tests.\n                    imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader],\n                    exports: [MatBadge, MatCommonModule],\n                }]\n        }] });\n\nexport { MatBadge, MatBadgeModule };\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import { scanInternals } from './scanInternals';\nimport { operate } from '../util/lift';\nexport function reduce(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n","import { Of } from '../../../../../core';\r\nimport { InputTypeCatalog } from './input-type-catalog';\r\n\r\nconst empty: Of<typeof InputTypeCatalog>[] = [InputTypeCatalog.EmptyDefault, InputTypeCatalog.EmptyEnd, InputTypeCatalog.EmptyMessage];\r\n\r\nconst ends: Of<typeof InputTypeCatalog>[] = [InputTypeCatalog.EmptyDefault, InputTypeCatalog.EmptyEnd];\r\n\r\nconst oldValuePickers: Of<typeof InputTypeCatalog>[] = [\r\n  InputTypeCatalog.StringDropdown,\r\n  InputTypeCatalog.NumberDropdown,\r\n  InputTypeCatalog.StringFontIconPicker,\r\n];\r\n\r\nconst oldEntityPickers: Of<typeof InputTypeCatalog>[] = [\r\n  InputTypeCatalog.EntityContentBlocks,\r\n  InputTypeCatalog.EntityDefault,\r\n  InputTypeCatalog.EntityQuery,\r\n];\r\n\r\nconst oldOtherPickers: Of<typeof InputTypeCatalog>[] = [\r\n  InputTypeCatalog.StringDropdownQuery,\r\n  InputTypeCatalog.StringTemplatePicker,\r\n];\r\n\r\nconst newPicker: Of<typeof InputTypeCatalog>[] = [\r\n  InputTypeCatalog.EntityPicker,\r\n  InputTypeCatalog.StringPicker,\r\n  InputTypeCatalog.NumberPicker,\r\n];\r\n\r\nexport class InputTypeHelpers {\r\n  static isEmpty(inputType: Of<typeof InputTypeCatalog>): boolean {\r\n    return empty.includes(inputType);\r\n  }\r\n\r\n  static endsPreviousGroup(inputType: Of<typeof InputTypeCatalog>): boolean {\r\n    return ends.includes(inputType);\r\n  }\r\n\r\n  static isGroupStart(inputType: Of<typeof InputTypeCatalog>): boolean {\r\n    return inputType === InputTypeCatalog.EmptyDefault;\r\n  }\r\n\r\n  static isGroupEnd(inputType: Of<typeof InputTypeCatalog>): boolean {\r\n    return inputType === InputTypeCatalog.EmptyEnd;\r\n  }\r\n\r\n  static isMessage(inputType: Of<typeof InputTypeCatalog>): boolean {\r\n    return inputType === InputTypeCatalog.EmptyMessage;\r\n  }\r\n\r\n  /** True if it's either an EntityPicker, StringPicker or NumberPicker */\r\n  static isNewPicker(inputType: Of<typeof InputTypeCatalog>): boolean {\r\n    return newPicker.includes(inputType);\r\n  }\r\n\r\n  static isOldValuePicker(inputType: Of<typeof InputTypeCatalog>): boolean {\r\n    return oldValuePickers.includes(inputType);\r\n  }\r\n\r\n  static isAnyPicker(inputType: Of<typeof InputTypeCatalog>): boolean {\r\n    return newPicker.includes(inputType)\r\n      || oldValuePickers.includes(inputType)\r\n      || oldEntityPickers.includes(inputType)\r\n      || oldOtherPickers.includes(inputType);\r\n  }\r\n}\r\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","@if (show()) {\r\n  <mat-icon class=\"feature-icon-text\" tippyTranslate=\"Features.NotActivated\" [tippyData]=\"{ name: featureNameId() }\" (click)=\"openDialog()\">diamond</mat-icon>\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n    selector: 'app-feature-icon-text',\r\n    templateUrl: './feature-icon-text.component.html',\r\n    styleUrls: ['./feature-icon-text.component.scss'],\r\n    imports: [\r\n        MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class FeatureIconTextComponent extends FeatureComponentBase { }\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../services/global-config.service';\r\n\r\n@Directive({\r\n  selector: '[appToggleDebug]',\r\n})\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39]}