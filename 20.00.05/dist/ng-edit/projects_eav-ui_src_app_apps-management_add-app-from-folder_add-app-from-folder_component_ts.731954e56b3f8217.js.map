{"version":3,"file":"projects_eav-ui_src_app_apps-management_add-app-from-folder_add-app-from-folder_component_ts.731954e56b3f8217.js","mappings":"mSAWO,IAAMA,EAAoB,MAA3B,MAAOA,EAQXC,GACAC,GACAC,GACAC,GAEAC,cAVAC,KAAAC,cAAgBC,MAAMC,WAGtBH,KAAAI,UAASF,QAAe,GAExBF,MAAAL,KAAaU,OAAOC,KACpBN,MAAAJ,KAAoBS,OAAOE,OAC3BP,MAAAH,KAAqBQ,OAAOG,OAC5BR,MAAAF,KAAmBO,OAAOI,KAI1BT,KAAAU,WAAUC,MAAY,UAAW,IAAMX,MAAKF,EAAiBc,WAAWZ,KAAKC,kBAE7ED,KAAAa,QAAOF,MAAY,OAAQ,KACzB,MAAMG,EAAOd,KAAKU,UAClB,OAAY,MAARI,GACGd,KAAKI,WAAaU,GAAMC,YAAa,IAP9B,CAUhBC,aACEC,EAAkBjB,MAAKL,EAAYK,KAAKC,gBAAiBD,MAAKJ,EAAmBI,MAAKH,EACxF,CAACqB,SAAAlB,KAAA,mBAAAmB,iBAzBUzB,EAAoB,EAAAwB,SAAAlB,KAAA,UAAAoB,EAAAC,IAAA,MAApB3B,EAAoB4B,OAAA,CAAArB,cAAA,oBAAAG,OAAA,uBAApBV,CAAoB,KA4B3B,SAAUuB,EAAkBM,EAAmBC,EAAmBC,EAAoCC,GAC1GH,EAAOI,KAAKC,6BAA4B,CACtCC,WAAW,EACXC,KAAMN,EACNC,iBAAkBA,EAClBM,MAAO,UAGTL,GAAmBM,cACrB,wEC3CO,IAAMC,EAAgB,MAAvB,MAAOA,EAEXlC,YAAoBmC,GAAAlC,KAAAkC,UAAyB,CAE7CC,gBAAgBC,IACdD,OAAgBC,GAChBpC,KAAKkC,SAASP,KAAK,sBAAuB,KAAM,CAAEU,SAAU,KAC9D,CAACnB,SAAAlB,KAAA,mBAAAmB,iBAPUc,GAAgBK,MAAAC,MAAA,EAAArB,SAAAlB,KAAA,WAAAwC,EAAAC,IAAA,OAAhBR,EAAgBS,QAAhBT,EAAgBU,UAAAC,WADH,gBACbX,CAAgB,uCCHtB,MAAMY,EAAe,CAC1BC,qBAAsB,uBACtBC,sBAAuB,wBACvBC,wBAAyB,0BACzBC,gBAAiB,kBACjBC,sBAAuB,wBACvBC,mBAAoB,qBACpBC,0BAA2B,4BAC3BC,WAAY,wBACZC,sBAAuB,wBACvBC,sBAAuB,wBACvBC,kCAAmC,oCACnCC,wBAAyB,0BACzBC,wBAAyB,0BAGzBC,iBAAkB,mBAClBC,cAAe,gBACfC,gBAAiB,kBACjBC,sBAAuB,wBACvBC,eAAgB,iBAChBC,iBAAkB,kPCRb,IAAMC,EAAoB,MAA3B,MAAOA,EAIXC,OAAOC,GACLnE,KAAKoE,KAAOD,EAAOE,MACnBrE,KAAKsE,QAAUH,EAAOI,cAAcJ,EAAOrC,KAC7C,CAEA0C,QAAQL,GACN,OAAO,CACT,CAACjD,SAAAlB,KAAA,mBAAAmB,iBAXU8C,EAAoB,EAAA/C,SAAAlB,KAAA,UAAAyE,EAAAC,IAAA,MAApBT,EAAoBU,UAAA,wBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,2CAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICd/B1C,MADF,UACEA,CADoB,UACdA,MAAA,GAAUA,QAChBA,MAAA,gBAA8CA,MAAA,UAChDA,iBAFQA,MAAA,GAAAA,MAAA2C,EAAAb,MACsB9B,cAAA,QAAA2C,EAAAX,yBDShBY,KAAa3C,KACnB4C,KAAcC,OAAA,2IAGTnB,CAAoB,KELpBoB,EAAqB,MAA5B,MAAOA,EAGXnB,OAAOC,GACLnE,KAAKmE,OAASA,CAChB,CAEAK,QAAQL,GACN,OAAO,CACT,CAEOmB,SAASC,GACdvF,KAAKmE,OAAOmB,SAAStF,KAAKmE,OAAOrC,KAAMyD,EAAMC,cAAcC,QAC7D,CAACvE,SAAAlB,KAAA,mBAAAmB,iBAbUkE,EAAqB,EAAAnE,SAAAlB,KAAA,UAAAyE,EAAAC,IAAA,MAArBW,EAAqBV,UAAA,wBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,4FAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICThC1C,MADF,UACEA,CADwB,aAC8EA,MAAA,kBAAAoD,GAAA,OAAUT,EAAAK,SAAAI,EAAgB,GAClIpD,iBADgDA,QAA+BA,MAA/B,WAAA2C,EAAAd,OAAAwB,WAA+BrD,CAAD,UAAA2C,EAAAd,OAAAE,qKDSjEgB,CAAqB,oDEA9B/C,MAAA,OACEA,MAAA,2EACFA,kCAGAA,MAAA,SACEA,MAAA,uBAEFA,8BAFsDA,QAA0BA,MAA1B,UAAAsD,EAAAC,cAA0BvD,CAAD,cAAAsD,EAAAE,cCc5E,IAAMC,EAAyB,MAAhC,MAAOA,EAOXC,GACAC,GAIAlG,YACUwB,EACAW,GADAlC,KAAAuB,SACAvB,KAAAkC,WAbgBlC,KAAAkG,UAAY,mBAEtClG,KAAA8F,YAAc9F,KAAKmG,mBACnBnG,KAAAoG,YAAsB,EAEfpG,KAAAqG,YAAWhG,OAAOI,KACzBT,MAAAgG,EAA0BhG,KAAKqG,SAAStF,UAAU8B,IAAaC,sBAC/D9C,MAAAiG,KAAmBK,KAAUC,KAE7BvG,KAAA8C,qBAAuBD,IAAaC,qBAOpC9C,KAAA6F,YAAc7F,MAAKiG,EAAiBO,iBAAiBnC,KAFjD,CAIJoC,cACEzG,KAAKuB,OAAOmF,OACd,CAEApB,SAASqB,EAAiBC,GACxB,MAAMC,EAAkB7G,KAAK6F,cAEzBe,EACFC,EAAgBC,KAAKH,GAErBE,EAAgBE,OAAOF,EAAgBG,QAAQL,GAAM,GAEvD3G,KAAK6F,YAAYoB,IAAIJ,EACvB,CAEAK,UACElH,KAAKoG,YAAa,EAClBpG,KAAKkC,SAASP,KAAK,kBAAcwF,EAAW,CAAE9E,SAAU,MACxDrC,MAAKiG,EAAiBmB,mBAAmBpH,KAAK6F,eAAewB,UAAU,CACrEC,MAAOA,KACLtH,KAAKoG,YAAa,EAClBpG,KAAKkC,SAASP,KAAK,wEAAoEwF,EAAW,CAAE9E,SAAU,KAAM,EAEtHkF,KAAMA,KACJvH,KAAKoG,YAAa,EAClBpG,KAAKkC,SAASP,KAAK,qBAAiBwF,EAAW,CAAE9E,SAAU,MAC3DrC,KAAKyG,aAAW,GAGtB,CAEQN,mBAiCN,MAhCiC,IAC5BqB,IACHC,WAAY,CACV,CACEC,MAAO,GACP3F,MAAO,GACP4F,UAAW,aACXC,UAAU,EACVC,aAAcxC,EACdyC,mBAAqBA,MAEjBnC,YAAa3F,MAAKgG,IAClBV,SAAUA,CAACqB,EAAKC,IAAY5G,KAAKsF,SAASqB,EAAKC,MAKrD,IACKmB,IAAkBC,UACrBN,MAAO,OACPO,KAAM,EACNC,KAAM,MACNL,aAAc5D,EACd6D,mBAC4C,CACxCvD,cAAgB4D,GAAe,kBAAkBA,EAAWC,yBAAyBD,EAAWE,oBAAoBF,EAAWG,yBAAyBH,EAAWI,iBAQ/K,CAACrH,SAAAlB,KAAA,mBAAAmB,iBApFU4E,GAAyBzD,MAAAC,KAAAD,MAAAkG,MAAA,EAAAtH,SAAAlB,KAAA,UAAAyE,EAAAC,IAAA,MAAzBqB,EAAyBpB,UAAA,8BAAA8D,SAAA,EAAAC,aAAA,SAAA1D,EAAAC,GAAA,EAAAD,GAAzB1C,MAAA,YAAA2C,EAAAiB,8YD5BT5D,MAFJ,UAEIA,CAFoB,UAEpBA,CAD6B,WACSA,MAAA,yBACxCA,UACAA,MAAA,WACEA,MAAA,6BACAA,MAAA,OACEA,MAAA,6GACFA,QACAA,MAAA,EAAAqG,EAAA,SAKArG,MAAA,EAAAsG,EAAA,WAMFtG,QAEEA,MADF,0BACEA,CAD8B,eACUA,MAAA,0BAAS2C,EAAAwB,aAAa,GAC5DnE,MAAA,eACFA,QACAA,MAAA,eACEA,MAAA,0BAAS2C,EAAAiC,SAAS,GAClB5E,MAAA,gBAGNA,0BAzB2BA,MAAA,GAAAA,MAAA,gBAAA2C,EAAAnC,sBAIvBR,MAAA,GAAAA,MAAA,WAAAuG,EAAA5D,EAAAY,eAAA,KAAAgD,EAAAC,QAAA,MAKAxG,eAAA,OAAAyG,EAAA9D,EAAAY,eAAA,KAAAkD,EAAAD,QAAA,QAWkExG,MAAA,GAAAA,MAAA,eAAA2C,EAAAY,cAAAiD,QAAA7D,EAAAmB,4BCDlE4C,IACAC,KAAeC,KACfC,IACAC,IAAaC,MAAAjE,OAAA,mEAGJW,CAAyB,4EC1BtC,MAAMuD,EAAuB,wBAEtB,IAAMC,EAAqB,MAA5B,MAAOA,UAA6BC,IAExCC,iBAAiBC,GACf,OAAO1J,KAAK2J,gBAAyB,MACnCC,IAAK5J,KAAK6J,OAAOP,GACjBnF,OAAQ,CAAEuF,OAAQA,OAEtB,CAEAI,kBAAkBC,GAChB,MAAMC,KAAcC,OAAkB,IACtC,UAAWP,KAAUK,EAEnB/J,KAAKkK,aAAsBZ,EAAsB,CAC/CnF,OAAQ,CAAEuF,YACTS,KAAKzJ,IACNsJ,EAAYI,OAAOC,GAAQ,IAAIA,EAAM3J,GAAQ,GAGjD,OAAOsJ,CACT,CAAC9I,SAAAlB,KAAA,4DApBUuJ,KAAoBpI,GAApBoI,EAAoB,GAoB9B,GApB8BrI,SAAAlB,KAAA,WAAAwC,EAAAC,IAAA,OAApB8G,EAAoB7G,QAApB6G,EAAoB5G,mBAApB4G,CAAqB,wMCgBxBjH,MADF,UACEA,CADwB,WACSA,MAAA,wBAAoCA,QAEnEA,MADF,UACEA,CAD+B,UACzBA,MAAA,wBAEVA,mCAJmCA,MAAA,GAAAA,MAAA,GAAAA,MAAA,4BAEzBA,MAAA,GAAAA,YAAA,IAAAgI,EAAA5J,UAAAK,UAAA,kFAORuB,MADF,UACEA,CADwB,WACSA,MAAA,WAAKA,QAEpCA,MADF,WACEA,CADyC,YACnCA,MAAA,mBAAAA,MAAAiI,GAAA,MAAAD,EAAAhI,MAAA,UAAAA,MAASgI,EAAAE,UAAArI,gBAA0BmI,EAAA5J,UAAS+J,MAAM,GAAEnI,MAAA,GAE9DA,qCAF8DA,MAAA,GAAAA,MAAAgI,EAAA5J,UAAA+J,+CA9BhEnI,MAFJ,UAEIA,CAFoB,UAEpBA,CAD6B,WAE3BA,MAAA,GACFA,QACAA,MAAA,cAA6CA,MAAA,mBAAAA,MAAAoI,GAAA,MAAAJ,EAAAhI,QAAA,OAAAA,MAASgI,EAAA7D,cAAa,GACjEnE,MAAA,cAAUA,MAAA,WAEdA,YACAA,MAAA,WACEA,MAAA,6BAGEA,MADF,WACEA,CADwB,YACSA,MAAA,UAAGA,QAElCA,MADF,WACEA,CAD+B,aACzBA,MAAA,mBAAAA,MAAAoI,GAAA,MAAAJ,EAAAhI,QAAA,OAAAA,MAASgI,EAAAE,UAAArI,gBAA0BmI,EAAA5J,UAASgJ,QAAQ,GAAEpH,MAAA,IAEhEA,YAEAA,MAAA,GAAAqI,EAAA,aASArI,MAAA,GAAAsI,EAAA,aAUEtI,MADF,WACEA,CADwB,YACSA,MAAA,uBAAgBA,QAE/CA,MADF,WACEA,CAD+B,WACzBA,MAAA,IAGZA,cAGIA,MAFJ,2BAEIA,CAF4B,UAE5BA,CAD2D,eACjDA,MAAA,kBAAWA,QACrBA,MAAA,sBAGNA,oCA/CMA,MAAA,GAAAA,MAAA,IAAAgI,EAAA5J,UAAA0D,KAAA,KAOC9B,MAAA,GAAAA,MAAA,YAAAA,MAAA,IAAAgI,EAAA5J,UAAAmK,aAAAvI,OAK6DA,MAAA,GAAAA,MAAAgI,EAAA5J,UAAAgJ,QAIhEpH,cAAAgI,EAAAQ,UAAAC,WAAA,OASAzI,cAAAgI,EAAAQ,UAAAE,SAAA,OAYU1I,MAAA,GAAAA,MAAAgI,EAAA5J,UAAAuK,SAAAC,OAAA,KAAAZ,EAAA5J,UAAAuK,SAAAE,SAKP7I,MAAA,GAAAA,MAAA,OAAAgI,EAAA5J,UAAA0K,KAAA9I,QCxBF,IAAM+I,EAA6B,MAApC,MAAOA,EAGXtL,YAC+CuL,EACnC/J,GADmCvB,KAAAsL,cACnCtL,KAAAuB,SAJZvB,KAAAuL,SAAQrL,SAOEF,KAAA8K,WAAUnK,MAAY,UAAW,IAAOX,KAAKuL,SAAWvL,KAAKsL,aAC7DtL,KAAAU,WAAUC,MAAY,UAAW,IAAMX,KAAK8K,WAAWpK,SACvDV,KAAAwK,aAAYlE,KAAUrE,IAJ5B,CAMJwE,cACEzG,KAAKuB,OAAOmF,OACd,CAACxF,SAAAlB,KAAA,mBAAAmB,iBAdUkK,GAA6B/I,MAIlBkJ,IAAe,GAAAlJ,MAAAC,KAAA,EAAArB,SAAAlB,KAAA,UAAAyL,EAAA/G,IAAA,MAJ1B2G,EAA6B1G,UAAA,iCAAArD,OAAA,CAAAiK,MAAA,aAAA3G,MAAA,EAAAC,KAAA,EAAAC,OAAA,wWAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GDtB1C1C,MAAA,EAAAoJ,EAAA,mBAAApJ,MAAA2C,EAAAvE,UAAA,qBCeQuI,KAAeT,SACftD,KAAagE,KACbyC,IACAC,IAAevC,KACfL,KAAgB6C,cAAA,WAGXR,CAA6B,iEChBnC,IAAMM,EAAY,MAAnB,MAAOA,EAEX5L,YAAoB+L,GAAA9L,KAAA8L,WAA2B,CAE/CC,UAAUC,GACR,OAAOhM,KAAK8L,UAAUG,wBAAwBD,EAChD,CAAC9K,SAAAlB,KAAA,mBAAAmB,iBANUwK,GAAYrJ,MAAAC,KAAA,MAAArB,SAAAlB,KAAA,WAAAyL,EAAAS,IAAA,sBAAZP,EAAYQ,MAAA,WAAZR,CAAY,kGCAzB,MAGMS,EAAmB,gBAKlB,IAAM7F,EAAgB,MAAvB,MAAOA,UAAwBiD,IAGnC6C,WAAW7H,GACT,SAAO8H,MAAoB,KACzB9H,IACQ,CACNoF,IAAK5J,KAAK6J,OAfQ,kBAgBlB1F,OAAQ,CAAEoI,OAAQvM,KAAKuM,UAG7B,CAEAC,iBACE,SAAOF,MAAoB,MACzB1C,IAAK5J,KAAK6J,OAtBqB,6BAuB/B1F,OAAQ,CAAEoI,OAAQvM,KAAKuM,UAE3B,CAEA/F,iBACE,SAAO8F,MAA2B,MAChC1C,IAAK5J,KAAK6J,OA5BiB,4BA6B3B1F,OAAQ,CAAEoI,OAAQvM,KAAKuM,UAE3B,CAEAE,OAAOrI,EAAcsI,EAAuBC,GAC1C,OAAO3M,KAAK4M,KAAKC,KAAW7M,KAAK6J,OAAOuC,GAAmB,GAAI,CAC7DjI,OAAQ,CACNoI,OAAQvM,KAAKuM,OACbnI,UACoB,MAAhBsI,GAAwB,CAAEA,mBACZ,MAAdC,GAAsB,CAAEA,gBAGlC,CAEAG,eAAelD,EAAamD,GAC1B,MAAMC,EAAcC,mBAAmBF,GACvC,OAAwB/M,KAAK4M,KAAKC,KAAK,wCAAwCjD,aAAeoD,IAAe,GAC/G,CAEA5F,mBAAmBvB,GACjB,OAAO7F,KAAK4M,KAAKC,KAAW7M,KAAK6J,OAhDG,gCAgDsChE,EAAa,CACrF1B,OAAQ,CACNoI,OAAQvM,KAAKuM,SAGnB,CAEAW,OAAOC,GACL,OAAOnN,KAAK4M,KAAKM,OAAalN,KAAK6J,OAAOuC,GAAmB,CAC3DjI,OAAQ,CAAEoI,OAAQvM,KAAKuM,OAAQY,MAAOA,EAAMC,aAEhD,CAEMC,WAAWF,GAAa,IAAAG,EAAAtN,KAAA,SAAAuN,KAAA,YAC5B,OAAOD,EAAKE,iBA7DgB,uBA6D0B,CACpDrJ,OAAQ,CAAEoI,OAAQe,EAAKf,OAAQY,MAAOA,EAAMC,aAC3C,EAHyB,EAI9B,CAAClM,SAAAlB,KAAA,4DA7DUuG,KAAepF,GAAfoF,EAAe,GA6DzB,GA7DyBrF,SAAAlB,KAAA,WAAAyN,EAAAhL,IAAA,OAAf8D,EAAe7D,QAAf6D,EAAe5D,mBAAf4D,CAAgB,wLCb3BjE,MAAA,gCAA+BA,MAAA,mBAAAA,MAAAoI,GAAA,MAAAJ,EAAAhI,QAAA,OAAAA,MAASgI,EAAAtJ,aAAY,GAElDsB,MAAA,cAAuCA,MAAA,GAAYA,QAGjDA,MADF,UACEA,CADqC,WACAA,MAAA,wBAAgDA,QACrFA,MAAA,WAAwCA,MAAA,yBAA+CA,QACvFA,MAAA,IAEJA,kCATsDA,MAAA,QAAAA,MAAA,uBAAAgI,EAAA5J,YAE1C4B,MAAA,GAAAA,YAAA,aAAAgI,EAAAoD,SAA6BpL,cAAAgI,EAAAoD,QAGApL,MAAA,GAAAA,YAAA,sCACGA,MAAA,GAAAA,YAAA,uCCUvC,IAAM6G,EAAyB,MAAhC,MAAOA,UAAiCzJ,IAI5CK,cACE4N,QAJF3N,KAAA4N,UAAS1N,QAAe,GAOxBF,KAAA0N,QAAO/M,MAAY,OAAQ,IAAMX,KAAK4N,SAAW,OAAS,UAF1D,CAAC1M,SAAAlB,KAAA,mBAAAmB,iBANUgI,EAAwB,EAAAjI,SAAAlB,KAAA,UAAAwC,EAAAkC,IAAA,MAAxByE,EAAwBxE,UAAA,4BAAArD,OAAA,CAAAsM,OAAA,cAAAvH,SAAA,CAAA/D,OAAAuL,mBAAAC,EAAAlJ,MAAA,EAAAC,KAAA,EAAAC,OAAA,6KAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,YDjBrC1C,MAAA,EAAAyL,EAAA,qBAAAzL,MAAA2C,EAAApE,OAAA,qBCYIqE,KAAa3C,KACbqJ,IAAepD,KACfrD,KAAcC,OAAA,8oBAGL+D,CAAyB,wPChBpC7G,MAAA,uCAA4BA,MAAA,QAAAA,MAAA,EAAAwL,EAAA7I,ICcvB,IAAMrD,EAA0B,MAAjC,MAAOA,EACXoM,GAGAjO,YACkCkO,EACtB1M,EACF2M,GAFwBlO,KAAAiO,aACtBjO,KAAAuB,SACFvB,KAAAkO,QANVlO,MAAAgO,KAAoB1H,KAAUiD,KAC9BvJ,KAAAwB,aAAYyI,OAAe,IAcjBjK,KAAAwK,aAAYlE,KAAUrE,IAR5B,CAEJkM,WACEnO,KAAKwB,UAAUyF,IAAIjH,KAAKkO,MAAME,SAAStM,KAAKN,WAAgBxB,KAAKiO,YAAc,IAC/EjO,KAAKqO,eAAiBrO,MAAKgO,EAAkBvE,iBAAiBzJ,KAAKwB,WAAW6C,KAChF,CAACnD,SAAAlB,KAAA,mBAAAmB,iBAbUS,GAA0BU,MAK3BkJ,KAAelJ,MAAAC,KAAAD,MAAAkG,MAAA,EAAAtH,SAAAlB,KAAA,UAAAwC,EAAAkC,IAAA,MALd9C,EAA0B+C,UAAA,8BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,cAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,GDfvC1C,MAAA,EAAAgM,EAAA,+CAAAhM,OAAAiM,EAAAtJ,EAAAoJ,kBAAA,KAAAE,mBCYQlD,KAA6BQ,cAAA,WAGxBjK,CAA0B","names":["FeatureComponentBase","#matDialog","#viewContainerRef","#changeDetectorRef","#featuresService","constructor","this","featureNameId","input","required","showIf","inject","MatDialog","ViewContainerRef","ChangeDetectorRef","FeaturesService","feature","computedObj","getCurrent","show","feat","isEnabled","openDialog","openFeatureDialog","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","FsC","inputs","dialog","featureId","viewContainerRef","changeDetectorRef","open","FeatureInfoDialogComponent","autoFocus","data","width","markForCheck","ClipboardService","snackBar","copyToClipboard","text","duration","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_1__","jDH","factory","ɵfac","providedIn","FeatureNames","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","DataExportImportBundles","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","AppNameShowComponent","agInit","params","name","value","tooltip","tooltipGetter","refresh","debug_node_JnOYh9kg","VBU","selectors","decls","vars","consts","template","rf","ctx","MatIconModule","TippyDirective","styles","CheckboxCellComponent","onChange","event","currentTarget","checked","$event","isDisabled","ctx_r0","pendingApps","gridOptions","AddAppFromFolderComponent","#isAddFromFolderEnabled","#appsListService","hostClass","buildGridOptions","installing","features","transient","AppsListService","getPendingApps","closeDialog","close","app","enabled","pendingAppsTemp","push","splice","indexOf","set","install","undefined","installPendingApps","subscribe","error","next","defaultGridOptions","columnDefs","field","cellClass","sortable","cellRenderer","cellRendererParams","ColumnDefinitions","ItemsText","flex","sort","pendingApp","ServerFolder","Folder","Version","Description","i2","hostVars","hostBindings","AddAppFromFolderComponent_Conditional_8_Template","AddAppFromFolderComponent_Conditional_9_Template","tmp_1_0","length","tmp_2_0","MatDialogActions","MatButtonModule","i3","FeatureTextInfoComponent","SxcGridModule","i4","webApiFeatureDetails","FeatureDetailService","HttpServiceBaseSignal","getFeatureDetail","nameId","newHttpResource","url","apiUrl","getFeatureDetails","nameIds","featureList","signal","fetchPromise","then","update","prev","ctx_r1","_r3","clipboard","guid","_r1","FeatureDetailsDialogComponent_Conditional_0_Conditional_16_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_17_Template","description","mySpecs","showStatus","showGuid","security","Impact","Message","link","FeatureDetailsDialogComponent","dialogSpecs","specs","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_0__","FeatureDetailsDialogComponent_Conditional_0_Template","SafeHtmlPipe","TranslateModule","encapsulation","sanitizer","transform","html","bypassSecurityTrustHtml","EJ8","pure","webApiAppRootApp","getAllLive","httpResource","zoneId","getInheritable","create","inheritAppId","templateId","http","post","createTemplate","newName","encodedName","encodeURIComponent","delete","appId","toString","flushCache","_this","_asyncToGenerator","getStatusPromise","_angular_core__WEBPACK_IMPORTED_MODULE_4__","icon","super","asInfo","ngContentSelectors","_c0","FeatureTextInfoComponent_Conditional_0_Template","#featureDetailSvc","dialogData","route","ngOnInit","snapshot","featureDetails","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/services/clipboard.service.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Directive, ViewContainerRef, inject, input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { FeaturesService } from '../features.service';\r\n\r\n/**\r\n * Base component for various UI components which inform that a feature is not enabled.\r\n * It's meant to show the indicator/warning, and open a dialog with more information about the feature.\r\n */\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n\r\n  /** Feature NameId to check */\r\n  featureNameId = input.required<string>();\r\n\r\n  /** When to show it - typically when it is _not_ enabled (default) */\r\n  showIf = input<boolean>(false);\r\n\r\n  #matDialog = inject(MatDialog);\r\n  #viewContainerRef = inject(ViewContainerRef);\r\n  #changeDetectorRef = inject(ChangeDetectorRef);\r\n  #featuresService = inject(FeaturesService);\r\n\r\n  constructor() { }\r\n\r\n  feature = computedObj('feature', () => this.#featuresService.getCurrent(this.featureNameId()));\r\n\r\n  show = computedObj('show', () => {\r\n    const feat = this.feature();\r\n    if (feat == null) return false;\r\n    return this.showIf() == (feat?.isEnabled ?? false);\r\n  })\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.#matDialog, this.featureNameId(), this.#viewContainerRef, this.#changeDetectorRef);\r\n  }\r\n}\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef?.markForCheck();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../helpers/copy-to-clipboard.helper';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ClipboardService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n  DataExportImportBundles: 'DataExportImportBundles',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-app-name-show',\r\n    templateUrl: './app-name-show.component.html',\r\n    styleUrls: ['./app-name-show.component.scss'],\r\n    imports: [MatIconModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AppNameShowComponent implements ICellRendererAngularComp {\r\n  name: string;\r\n  tooltip: string;\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.name = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"name-box\">\r\n  <span>{{ name }}</span>\r\n  <mat-icon class=\"info-icon\" [tippy]=\"tooltip\">info</mat-icon>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { CheckboxCellParams } from './checkbox-cell.model';\r\n\r\n@Component({\r\n  selector: 'app-checkbox-cell',\r\n  templateUrl: './checkbox-cell.component.html',\r\n  styleUrls: ['./checkbox-cell.component.scss'],\r\n})\r\nexport class CheckboxCellComponent implements ICellRendererAngularComp {\r\n  params: ICellRendererParams & CheckboxCellParams;\r\n\r\n  agInit(params: ICellRendererParams & CheckboxCellParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  public onChange(event: any) {\r\n    this.params.onChange(this.params.data, event.currentTarget.checked);\r\n  }\r\n}\r\n","<div class=\"checkbox-box\">\r\n  <input class=\"checkbox-input\" type=\"checkbox\" [disabled]=\"params.isDisabled\" [checked]=\"params.value\" (change)=\"onChange($event)\">\r\n</div>\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Add App from Folder</div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <app-feature-text-info [featureNameId]=\"AppSyncWithSiteFiles\"></app-feature-text-info>\r\n    <p>\r\n      Select an app from the apps-folder which has been copied there (or git-cloned) but not installed yet.\r\n    </p>\r\n    @if (pendingApps()?.length == 0) {\r\n    <p>\r\n      Nothing to show. All apps in the 2sxc folder are already installed.\r\n    </p>\r\n    }\r\n    @if (pendingApps()?.length > 0) {\r\n    <div>\r\n      <ag-grid-angular class=\"ag-theme-material eav-grid\" [rowData]=\"pendingApps()\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n    }\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button type=\"button\" mat-raised-button (click)=\"closeDialog()\">\r\n      Cancel\r\n    </button>\r\n    <button type=\"button\" mat-raised-button class=\"eav-action-button\" [disabled]=\"pendingApps().length === 0 || installing\"\r\n      (click)=\"install()\">\r\n      Install\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, HostBinding, WritableSignal, inject } from \"@angular/core\";\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogActions, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { transient } from '../../../../../core';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from \"../../shared/constants/default-grid-options.constants\";\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { PendingApp } from \"../models/app.model\";\r\nimport { AppsListService } from \"../services/apps-list.service\";\r\nimport { AppNameShowComponent } from './app-name-show/app-name-show.component';\r\nimport { CheckboxCellComponent } from './checkbox-cell/checkbox-cell.component';\r\nimport { CheckboxCellParams } from './checkbox-cell/checkbox-cell.model';\r\n\r\n@Component({\r\n  selector: 'app-add-app-from-folder',\r\n  templateUrl: './add-app-from-folder.component.html',\r\n  styleUrls: ['./add-app-from-folder.component.scss'],\r\n  imports: [\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    FeatureTextInfoComponent,\r\n    SxcGridModule,\r\n  ]\r\n})\r\nexport class AddAppFromFolderComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  gridOptions = this.buildGridOptions();\r\n  installing: boolean = false;\r\n\r\n  public features = inject(FeaturesService);\r\n  #isAddFromFolderEnabled = this.features.isEnabled[FeatureNames.AppSyncWithSiteFiles];\r\n  #appsListService = transient(AppsListService);\r\n\r\n  AppSyncWithSiteFiles = FeatureNames.AppSyncWithSiteFiles;\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<AddAppFromFolderComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  pendingApps = this.#appsListService.getPendingApps().value as WritableSignal<PendingApp[]>;\r\n\r\n  closeDialog(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  onChange(app: PendingApp, enabled: boolean) {\r\n    const pendingAppsTemp = this.pendingApps();\r\n\r\n    if (enabled)\r\n      pendingAppsTemp.push(app);\r\n    else\r\n      pendingAppsTemp.splice(pendingAppsTemp.indexOf(app), 1);\r\n\r\n    this.pendingApps.set(pendingAppsTemp);\r\n  }\r\n\r\n  install(): void {\r\n    this.installing = true;\r\n    this.snackBar.open('Installing', undefined, { duration: 2000 });\r\n    this.#appsListService.installPendingApps(this.pendingApps()).subscribe({\r\n      error: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Failed to install app. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Installed app', undefined, { duration: 2000 });\r\n        this.closeDialog();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: '',\r\n          width: 40,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          cellRenderer: CheckboxCellComponent,\r\n          cellRendererParams: (() => {\r\n            const params: CheckboxCellParams = {\r\n              isDisabled: !this.#isAddFromFolderEnabled(),\r\n              onChange: (app, enabled) => this.onChange(app, enabled),\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ItemsText,\r\n          field: 'Name',\r\n          flex: 1,\r\n          sort: 'asc',\r\n          cellRenderer: AppNameShowComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<PendingApp> = {\r\n              tooltipGetter: (pendingApp) => `Server folder: ${pendingApp.ServerFolder}\\nFolder: ${pendingApp.Folder}\\nVersion: ${pendingApp.Version}\\nDescription: ${pendingApp.Description}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ]\r\n    }\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\n","import { Injectable, signal, Signal } from '@angular/core';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { Feature } from '../models';\r\n\r\nconst webApiFeatureDetails = \"admin/feature/details\";\r\n@Injectable()\r\nexport class FeatureDetailService extends HttpServiceBaseSignal {\r\n  \r\n  getFeatureDetail(nameId: Signal<string>) {\r\n    return this.newHttpResource<Feature>(() => ({\r\n      url: this.apiUrl(webApiFeatureDetails),\r\n      params: { nameId: nameId() },\r\n    }));\r\n  }\r\n\r\n  getFeatureDetails(nameIds: string[]): Signal<Feature[]> {\r\n    const featureList = signal<Feature[]>([]);\r\n    for (const nameId of nameIds) {\r\n\r\n      this.fetchPromise<Feature>(webApiFeatureDetails, {\r\n        params: { nameId }\r\n      }).then(feature => {\r\n        featureList.update(prev => [...prev, feature]);\r\n      });\r\n    }\r\n    return featureList;\r\n  }\r\n}\r\n","@if (feature()) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">\r\n        {{ feature().name }}\r\n      </div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <p [innerHtml]=\"feature().description | safeHtml\"></p>\r\n      <!-- Name ID -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">ID:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span (click)=\"clipboard.copyToClipboard(feature().nameId)\">{{ feature().nameId }}</span>\r\n        </div>\r\n      </div>\r\n      <!-- Status -->\r\n      @if (mySpecs().showStatus) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ 'Features.Status' | translate }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span>{{ (feature().isEnabled ? 'Features.Active' : 'Features.NotActive') | translate }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- GUID -->\r\n      @if (mySpecs().showGuid) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">GUID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span (click)=\"clipboard.copyToClipboard(feature().guid)\">{{ feature().guid }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- Security Rating -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">Security Rating:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ feature().security.Impact + ': ' + feature().security.Message }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <a [href]=\"feature().link\" target=\"_blank\" mat-raised-button>\r\n        <mat-icon>open_in_new</mat-icon>\r\n        Find out more\r\n      </a>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { Component, Inject, input, Optional } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../core/transient';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { ClipboardService } from '../../../shared/services/clipboard.service';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n    selector: 'app-feature-details-dialog',\r\n    templateUrl: './feature-details-dialog.component.html',\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        SafeHtmlPipe,\r\n        TranslateModule,\r\n        MatDialogActions,\r\n    ]\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n  specs = input<FeatureDetailsDialogData>();\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private dialogSpecs: FeatureDetailsDialogData,\r\n    protected dialog: MatDialogRef<FeatureDetailsDialogComponent>,\r\n  ) { }\r\n\r\n  protected mySpecs = computedObj('mySpecs', () =>  this.specs() ?? this.dialogSpecs );\r\n  protected feature = computedObj('feature', () => this.mySpecs()?.feature);\r\n  protected clipboard = transient(ClipboardService);\r\n  \r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeHtml',\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { App, PendingApp } from '../models/app.model';\r\n\r\nconst webApiAppRootList = 'admin/app/list';\r\nconst webApiAppRootInheritableApps = 'admin/app/InheritableApps';\r\nconst webApiAppRootPendingApps = 'admin/app/GetPendingApps';\r\nconst webApiAppRootApp = 'admin/app/app';\r\nconst webApiAppRootInstallPendingApps = 'admin/app/InstallPendingApps';\r\nconst webApiAppRootFlushcache = 'admin/app/flushcache';\r\n\r\n@Injectable()\r\nexport class AppsListService extends HttpServiceBaseSignal {\r\n\r\n  // clean way to create a new resource every time if refresh change\r\n  getAllLive(refresh: Signal<unknown>) {\r\n    return httpResource<App[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiAppRootList),\r\n        params: { zoneId: this.zoneId }\r\n      });\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return httpResource<App[]>(() => ({\r\n      url: this.apiUrl(webApiAppRootInheritableApps),\r\n      params: { zoneId: this.zoneId }\r\n    }));\r\n  }\r\n\r\n  getPendingApps() {\r\n    return httpResource<PendingApp[]>(() => ({\r\n      url: this.apiUrl(webApiAppRootPendingApps),\r\n      params: { zoneId: this.zoneId },\r\n    }));\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootApp), {}, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  createTemplate(url: string, newName: string) {\r\n    const encodedName = encodeURIComponent(newName);\r\n    return <Observable<any>>this.http.post(`sys/install/RemotePackage?packageUrl=${url}&newName=${encodedName}`, {});\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootInstallPendingApps), pendingApps, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRootApp), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  async flushCache(appId: number): Promise<number> {\r\n    return this.getStatusPromise(webApiAppRootFlushcache, {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n}\r\n","@if (show()) {\r\n  <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: feature()\">\r\n    <!-- Icon column -->\r\n    <mat-icon class=\"icon icon-{{icon()}}\">{{ icon() }}</mat-icon>\r\n    <!-- Text column -->\r\n    <div class=\"feature-text-info-content\">\r\n      <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n      <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { computedObj } from '../../shared/signals/signal.utilities';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss'],\r\n  imports: [\r\n    MatIconModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  asInfo = input<boolean>(false);\r\n\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  icon = computedObj('icon', () => this.asInfo() ? 'info' : 'warning');\r\n}\r\n","@if (featureDetails(); as feature) {\r\n  <app-feature-details-dialog [specs]=\"{ feature: feature, showGuid: false, showStatus: true, showClose: true }\"></app-feature-details-dialog>\r\n}\r\n","import { Component, Inject, OnInit, signal } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { transient } from \"projects/core\";\r\nimport { FeatureDetailsDialogComponent } from \"../../apps-management/licence-info/feature-details-dialog/feature-details-dialog.component\";\r\nimport { ClipboardService } from \"../../shared/services/clipboard.service\";\r\nimport { FeatureDetailService } from \"../services/feature-detail.service\";\r\n\r\n@Component({\r\n    selector: 'app-feature-info-dialog',\r\n    templateUrl: './feature-info-dialog.component.html',\r\n    imports: [\r\n        FeatureDetailsDialogComponent\r\n    ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  #featureDetailSvc = transient(FeatureDetailService);\r\n  featureId = signal<string>('');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    protected dialog: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.featureId.set(this.route.snapshot.data['featureId'] || this.dialogData || '');\r\n    this.featureDetails = this.#featureDetailSvc.getFeatureDetail(this.featureId).value;\r\n  }\r\n\r\n  protected featureDetails: any;\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n"],"x_google_ignoreList":[]}