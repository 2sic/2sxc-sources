{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_sub-dialogs_confirm-delete-dialog_confirm--93867c.1e9ee149cb8d0299.js","mappings":"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","names":["i0","ctx_r0","dialogData","message","ConfirmDeleteDialogComponent","#snackBar","constructor","dialog","this","hostClass","inject","MatSnackBar","ngOnInit","hasDeleteSnackbar","open","#watchKeyboardShortcuts","keydownEvents","subscribe","event","isCtrlEnter","preventDefault","close","closeDialog","confirm","saveAndClose","dismiss","static","__ngFactoryType__","MAT_DIALOG_DATA","i1","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","hostVars","hostBindings","rf","ctx","ConfirmDeleteDialogComponent_Conditional_8_Template","title","entityTitle","entityId","MatButtonModule","i2","SafeHtmlPipe","MatIconModule","i3","MatDialogActions","SaveCloseButtonFabComponent","styles","ExtendedFabSpeedDialActionDirective","elementRef","disabled","input","ngOnChanges","changes","nativeElement","toggleAttribute","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","inputs","features","SaveCloseButtonBase","label","icon","ngClass","action","output","isDisabled","onClick","emit","outputs","ExtendedFabSpeedDialTriggerContentDirective","templateRef","ExtendedFabSpeedDialActionsContentDirective","isEscape","key","isCtrlS","ctrlKey","metaKey","logSpecs","doOnDialogClosed","DialogRoutingService","ServiceBase","router","route","super","log","classLog","snapshot","url","urlSegments","split","getParam","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","data","a","end","doOnDialogClosedWithData","#childDialogClosedWithData","urlSubRoute","params","tree","createUrlTree","relativeTo","serializeUrl","navPath","navigate","navRelative","commands","events","pipe","filter","NavigationEnd","startWith","firstChild","map","pairwise","hadChildBefore","hasChildNow","tap","fn","snapShot","prev","curr","_angular_core__WEBPACK_IMPORTED_MODULE_8__","jDH","factory","Éµfac","ExtendedFabSpeedDialTriggerDirective","ExtendedFabSpeedDialComponent","BaseComponent","open$","BehaviorSubject","ngAfterContentInit","combineLatest","distinctUntilChanged","actionButtons","undefined","forEach","btn","i","all","max","Math","min","length","step","transitionDuration","style","ngOnDestroy","complete","setOpen","pointerType","next","_angular_core__WEBPACK_IMPORTED_MODULE_6__","contentQueries","dirIndex","ElementRef","$event","trigger","actions","NgTemplateOutlet","encapsulation","_r1","ctx_r1","decls","vars","consts","template","SaveCloseButtonFabComponent_ng_template_1_Template","NgClass","i4","MatRippleModule","i5","TranslateModule","i6","TippyDirective"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-action.directive.ts","./projects/eav-ui/src/app/shared/modules/save-close-button/save-close-button-base.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-trigger-content.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-actions-content.directive.ts","./projects/eav-ui/src/app/edit/dialog/main/keyboard-shortcuts.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial-trigger.directive.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.component.ts","./projects/eav-ui/src/app/shared/modules/extended-fab-speed-dial/extended-fab-speed-dial.component.html","./projects/eav-ui/src/app/shared/modules/save-close-button-fab/save-close-button-fab.component.html","./projects/eav-ui/src/app/shared/modules/save-close-button-fab/save-close-button-fab.component.ts"],"sourcesContent":["<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ dialogData.title ?? 'Delete' }} {{ dialogData.entityTitle }} ({{ dialogData.entityId }})\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"eav-dialog-content\">\r\n    @if (dialogData.message) {\r\n      <p [innerHtml]=\"dialogData.message | safeHtml\"></p>\r\n    }\r\n  </div>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <app-save-close-button-fab\r\n      [label]=\"'Delete and close (ctrl + enter)'\"\r\n      (action)=\"saveAndClose(true)\"\r\n    />\r\n  </mat-dialog-actions>\r\n</div>","import { Component, HostBinding, inject, Inject, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { isCtrlEnter } from '../../../edit/dialog/main/keyboard-shortcuts';\r\nimport { SaveCloseButtonFabComponent } from '../../../shared/modules/save-close-button-fab/save-close-button-fab.component';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete-dialog',\r\n  templateUrl: './confirm-delete-dialog.component.html',\r\n  styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n  imports: [\r\n    MatButtonModule,\r\n    SafeHtmlPipe,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    SaveCloseButtonFabComponent,\r\n  ]\r\n})\r\nexport class ConfirmDeleteDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #snackBar = inject(MatSnackBar);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    public dialog: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.dialogData.hasDeleteSnackbar)\r\n      this.#snackBar.open('Deleting...');\r\n\r\n    this.#watchKeyboardShortcuts();\r\n  }\r\n\r\n  #watchKeyboardShortcuts(): void {\r\n    this.dialog.keydownEvents().subscribe(event => {\r\n      if (isCtrlEnter(event)) {\r\n        event.preventDefault();\r\n        this.dialog.close(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    confirm\r\n      ? this.dialog.close(confirm)\r\n      : this.dialog.close();\r\n  }\r\n\r\n  saveAndClose(confirm: boolean) {\r\n    this.closeDialog(confirm);\r\n    if (this.dialogData.hasDeleteSnackbar)\r\n      this.#snackBar.dismiss();\r\n  }\r\n}\r\n","import { Directive, ElementRef, input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extended-fab-speed-dial-action]',\r\n})\r\nexport class ExtendedFabSpeedDialActionDirective implements OnChanges {\r\n  disabled = input<boolean>(false);\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled != null) {\r\n      this.elementRef.nativeElement.toggleAttribute('disabled', this.disabled());\r\n    }\r\n  }\r\n}\r\n","import { Directive, input, output } from '@angular/core';\r\n\r\n// 2pp: needs to be a directive in order to make input, output functions work\r\n@Directive()\r\nexport abstract class SaveCloseButtonBase {\r\n  /** Button label, can be a translation key or plain text */\r\n  label = input<string>('Form.Buttons.SaveAndClose');\r\n\r\n  /** Material icon name to show */\r\n  icon = input<string>('done');\r\n\r\n  /** Classes to apply to the button */\r\n  ngClass = input<string>('');\r\n\r\n  /** If true, disables the button. Can also be a function returning boolean */\r\n  disabled = input<boolean | (() => boolean)>(false);\r\n\r\n  /** Emits when the button is clicked */\r\n  action = output<Event>();\r\n\r\n  /** Derived property for disabled state */\r\n  get isDisabled(): boolean {\r\n    return typeof this.disabled === 'function' ? !!this.disabled() : !!this.disabled;\r\n  }\r\n\r\n  onClick(event: Event) {\r\n    if (!this.isDisabled) {\r\n      this.action.emit(event);\r\n    }\r\n  }\r\n}","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extendedFabSpeedDialTriggerContent]',\r\n})\r\nexport class ExtendedFabSpeedDialTriggerContentDirective {\r\n  constructor(public templateRef: TemplateRef<unknown>) { }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extendedFabSpeedDialActionsContent]',\r\n})\r\nexport class ExtendedFabSpeedDialActionsContentDirective {\r\n  constructor(public templateRef: TemplateRef<unknown>) { }\r\n}\r\n","/**\r\n * Checks if the keyboard event is triggered by the Escape key.\r\n * @param event KeyboardEvent\r\n * @returns boolean\r\n */\r\nexport function isEscape(event: KeyboardEvent): boolean {\r\n  return event.key === 'Escape';\r\n}\r\n\r\n/**\r\n * Checks if the keyboard event is triggered by Ctrl + S (or Cmd + S on Mac).\r\n * @param event KeyboardEvent\r\n * @returns boolean\r\n */\r\nexport function isCtrlS(event: KeyboardEvent): boolean {\r\n  return (event.key === 's' || event.key === 'S') && (event.ctrlKey || event.metaKey);\r\n}\r\n\r\n/**\r\n * Checks if the keyboard event is triggered by Ctrl + Enter (or Cmd + Enter on Mac).\r\n * @param event KeyboardEvent\r\n * @returns boolean\r\n */\r\nexport function isCtrlEnter(event: KeyboardEvent): boolean {\r\n  return event.key === 'Enter' && (event.ctrlKey || event.metaKey);\r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, tap } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  get urlSegments() { return this.router.url.split('/'); }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe((data: unknown) => {\r\n        l.a('Dialog closed', { data });\r\n        return callback();\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  public doOnDialogClosedWithData(callback: (data: any) => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.#childDialogClosedWithData().subscribe(({ state }) => {\r\n        l.a('Dialog closed', { state });\r\n        callback(state);\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n  #childDialogClosedWithData() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      tap(event => {\r\n        const l = this.log.fn(\"childDialogClosed$\", {\r\n          event,\r\n          firstChild: this.route.snapshot.firstChild,\r\n          snapShot: this.route.snapshot,\r\n          state: this.router.getCurrentNavigation()?.extras.state,\r\n        });\r\n        l.a('NavigationEnd', { event });\r\n        l.end();\r\n      }),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => ({\r\n        hasChildNow: !!this.route.snapshot.firstChild,\r\n        state: this.router.getCurrentNavigation()?.extras.state,\r\n      })),\r\n      pairwise(),\r\n      filter(([prev, curr]) => prev.hasChildNow && !curr.hasChildNow),\r\n      map(([prev, curr]) => ({\r\n        hadChildBefore: prev.hasChildNow,\r\n        hasChildNow: curr.hasChildNow,\r\n        state: curr.state\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Directive, ElementRef, input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n  selector: '[extended-fab-speed-dial-trigger]',\r\n})\r\nexport class ExtendedFabSpeedDialTriggerDirective implements OnChanges {\r\n  disabled = input<boolean>(false);\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled != null) {\r\n      this.elementRef.nativeElement.toggleAttribute('disabled', this.disabled());\r\n    }\r\n  }\r\n}\r\n","// tslint:disable-next-line:max-line-length\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { AfterContentInit, Component, ContentChild, ContentChildren, ElementRef, input, OnDestroy, QueryList, ViewEncapsulation } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, startWith } from 'rxjs';\r\nimport { BaseComponent } from '../../components/base.component';\r\nimport { ExtendedFabSpeedDialActionDirective } from './extended-fab-speed-dial-action.directive';\r\nimport { ExtendedFabSpeedDialActionsContentDirective } from './extended-fab-speed-dial-actions-content.directive';\r\nimport { ExtendedFabSpeedDialTriggerContentDirective } from './extended-fab-speed-dial-trigger-content.directive';\r\n\r\n/**\r\n * Special Speed-Dial kind of FAB which opens more menu items on hover.\r\n *\r\n * IMPORTANT: to work it needs ca. 4 more directives.\r\n * So never import this component directly, but instead import the ExtendedFabSpeedDialImports.\r\n */\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'extended-fab-speed-dial',\r\n    templateUrl: './extended-fab-speed-dial.component.html',\r\n    styleUrls: ['./extended-fab-speed-dial.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class ExtendedFabSpeedDialComponent extends BaseComponent implements AfterContentInit, OnDestroy {\r\n  @ContentChild(ExtendedFabSpeedDialTriggerContentDirective) trigger: ExtendedFabSpeedDialTriggerContentDirective;\r\n  @ContentChild(ExtendedFabSpeedDialActionsContentDirective) actions: ExtendedFabSpeedDialActionsContentDirective;\r\n  @ContentChildren(ExtendedFabSpeedDialActionDirective, { read: ElementRef }) actionButtons: QueryList<ElementRef<HTMLButtonElement>>;\r\n\r\n  disabled = input<boolean>(false);\r\n\r\n  open$ = new BehaviorSubject(false);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.subscriptions.add(\r\n      combineLatest([\r\n        this.open$.pipe(distinctUntilChanged()),\r\n        this.actionButtons.changes.pipe(startWith(undefined)),\r\n      ]).subscribe(([open]) => {\r\n        this.actionButtons.forEach((btn, i, all) => {\r\n          const min = 0.3;\r\n          const max = Math.min(min + (all.length - 1) * 0.05, 0.6);\r\n          const step = (max - min) / (all.length - 1);\r\n          const transitionDuration = `${open ? min + step * i : max - step * i}s`;\r\n          if (btn.nativeElement.style.transitionDuration !== transitionDuration) {\r\n            btn.nativeElement.style.transitionDuration = transitionDuration;\r\n          }\r\n        });\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.open$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  setOpen(event: PointerEvent, open: boolean): void {\r\n    if (event.pointerType === 'touch') return;\r\n    this.open$.next(open);\r\n  }\r\n}\r\n","<div class=\"extended-fab-speed-dial\" [attr.disabled]=\"disabled() || null\" (pointerenter)=\"setOpen($event, true)\"\r\n  (pointerleave)=\"setOpen($event, false)\">\r\n  <div class=\"extended-fab-speed-dial-trigger\">\r\n    <ng-container [ngTemplateOutlet]=\"trigger?.templateRef\"></ng-container>\r\n  </div>\r\n  <div class=\"extended-fab-speed-dial-actions\">\r\n    <ng-container [ngTemplateOutlet]=\"actions?.templateRef\"></ng-container>\r\n  </div>\r\n</div>\r\n","<extended-fab-speed-dial>\r\n  <ng-template extendedFabSpeedDialTriggerContent>\r\n    <button\r\n      type=\"button\"\r\n      [tippy]=\"(label() | translate) + ' (' + ('Form.Buttons.ActionAndCloseShortcut' | translate) + ')'\"\r\n      tippyShowDelay=\"500\"\r\n      [ngClass]=\"ngClass()\"\r\n      [disabled]=\"isDisabled\"\r\n      (click)=\"onClick($event)\"\r\n      extended-fab-speed-dial-trigger\r\n      matRipple\r\n    >\r\n      <span>{{ label() | translate }}</span>\r\n      <span class=\"keybinding-hint\">\r\n        <kbd>â</kbd><kbd>â</kbd>\r\n      </span>\r\n      <mat-icon>{{ icon() }}</mat-icon>\r\n    </button>\r\n  </ng-template>\r\n</extended-fab-speed-dial>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { ExtendedFabSpeedDialImports } from '../extended-fab-speed-dial/extended-fab-speed-dial.imports';\r\nimport { SaveCloseButtonBase } from '../save-close-button/save-close-button-base.directive';\r\n\r\n@Component({\r\n  selector: 'app-save-close-button-fab',\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    ...ExtendedFabSpeedDialImports,\r\n    MatRippleModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n  templateUrl: './save-close-button-fab.component.html',\r\n  styleUrls: ['../save-close-button/save-close-button.component.scss'],\r\n})\r\nexport class SaveCloseButtonFabComponent extends SaveCloseButtonBase {}"],"x_google_ignoreList":[]}