{"version":3,"sources":["./src/app/content-export/content-export-dialog.config.ts","./src/app/content-export/content-export-routing.module.ts","./src/app/content-export/content-export.module.ts","./src/app/content-export/services/content-export.service.ts","../edit/shared/services/eav.service.ts","./src/app/app-administration/services/content-types.service.ts","../edit/shared/services/entity.service.ts","../edit/shared/store/actions/item.actions.ts"],"names":["contentExportDialog","name","initContext","panelSize","panelClass","getComponent","routes","path","component","data","dialog","ContentExportRoutingModule","forChild","ContentExportModule","context","dnnContext","exportContent","values","selectedIds","selectedIdsString","join","url","this","$2sxc","http","apiUrl","appId","language","defaultLanguage","contentTypeStaticName","recordExport","resourcesReferences","languageReferences","window","open","exportJson","typeName","exportEntity","id","prefix","metadata","ContentExportService","webApiEditRoot","store","forceConnectorSave$","formValueChange$","formDisabledChange$","ngOnDestroy","complete","setEavConfig","editDialogContext","eavConfig","zoneId","toString","appRoot","App","Url","lang","Language","Current","langPri","Primary","langs","All","moduleId","partOfPage","sessionStorage","getItem","portalRoot","Site","tabId","systemRoot","location","pathname","split","versioningOptions","getVersioningOptions","fetchFormData","items","post","params","saveItem","item","dispatch","saveItemSuccess","saveItemError","error","saveFormData","body","publishing","show","hide","branch","publish","console","EavService","webApiTypeRoot","retrieveContentType","staticName","get","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","scopes","Object","keys","map","key","value","save","contentType","appid","delete","StaticName","import","files","formData","FormData","append","createGhost","sourceStaticName","ContentTypesService","webApiEntityRoot","webApiEntityList","eavService","getAvailableEntities","filterText","contentTypeName","reactiveEntities","p","filter","entityId","force","EntityService","SAVE_ITEM_ATTRIBUTES_VALUES","SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS","SAVE_ITEM_ATTRIBUTES_VALUES_ERROR","type"],"mappings":"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","file":"content-export-content-export-module.639b8557f579cdba16f2.js","sourcesContent":["import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentExportDialog: DialogConfig = {\r\n  name: 'EXPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentExportComponent } = await import('./content-export.component');\r\n    return ContentExportComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentExportDialog } from './content-export-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: contentExportDialog } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContentExportRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ContentExportRoutingModule } from './content-export-routing.module';\r\nimport { ContentExportComponent } from './content-export.component';\r\nimport { ContentExportService } from './services/content-export.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContentExportComponent,\r\n  ],\r\n  entryComponents: [\r\n    ContentExportComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ContentExportRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentExportService,\r\n    AppDialogConfigService,\r\n    ContentTypesService,\r\n  ]\r\n})\r\nexport class ContentExportModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityRoot } from '../../../../../edit/shared/services/entity.service';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentExport } from '../models/content-export.model';\r\n\r\n@Injectable()\r\nexport class ContentExportService {\r\n  constructor(private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Download')\r\n      + '?appId=' + this.context.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiTypeRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { FormDisabledSet, FormValueSet } from '../../../edit-types';\r\nimport { keyPartOfPage, keyPublishing } from '../../../ng-dialogs/src/app/shared/constants/session.constants';\r\nimport { Context } from '../../../ng-dialogs/src/app/shared/services/context';\r\nimport { EavFormData, EditDialogContext } from '../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { EavConfig } from '../models/eav-config';\r\nimport { Item } from '../models/eav/item';\r\nimport { SaveResult } from '../models/eav/save-result.model';\r\nimport { VersioningOptions } from '../models/eav/versioning-options';\r\nimport * as fromStore from '../store';\r\nimport * as itemActions from '../store/actions/item.actions';\r\n\r\nexport const webApiEditRoot = 'cms/edit/';\r\n\r\n@Injectable()\r\nexport class EavService implements OnDestroy {\r\n  /**\r\n   * Tells subscribed custom components that they should submit their values,\r\n   * e.g. form is going to be saved and we don't want to miss any values.\r\n   * Custom components run outside Angular zone and we have to wait for their values to update.\r\n   */\r\n  forceConnectorSave$ = new Subject<null>();\r\n  /** Temporary solution to circumvent value not being emitted on language change. Fix language change!  */\r\n  formValueChange$ = new Subject<FormValueSet>();\r\n  /** Temporary solution to circumvent disabled not being emitted on language change. Fix language change!  */\r\n  formDisabledChange$ = new Subject<FormDisabledSet>();\r\n\r\n  eavConfig: EavConfig;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private store: Store<fromStore.EavState>,\r\n    private dnnContext: DnnContext,\r\n    /** Used to fetch form data and fill up eavConfig. Do not use anywhere else */\r\n    private context: Context,\r\n  ) { }\r\n\r\n  // spm TODO: ngOnDestroy only fires in services provided in component\r\n  ngOnDestroy() {\r\n    this.forceConnectorSave$.complete();\r\n    this.formValueChange$.complete();\r\n    this.formDisabledChange$.complete();\r\n  }\r\n\r\n  /** Create EavConfiguration from sessionStorage */\r\n  setEavConfig(editDialogContext: EditDialogContext) {\r\n    this.eavConfig = {\r\n      zoneId: this.context.zoneId.toString(),\r\n      appId: this.context.appId.toString(),\r\n      appRoot: editDialogContext.App.Url,\r\n      lang: editDialogContext.Language.Current,\r\n      langPri: editDialogContext.Language.Primary,\r\n      langs: editDialogContext.Language.All,\r\n      moduleId: this.context.moduleId.toString(),\r\n      partOfPage: sessionStorage.getItem(keyPartOfPage),\r\n      portalRoot: editDialogContext.Site.Url,\r\n      tabId: this.context.tabId.toString(),\r\n      systemRoot: window.location.pathname.split('/dist/')[0] + '/',\r\n      versioningOptions: this.getVersioningOptions(\r\n        sessionStorage.getItem(keyPartOfPage) === 'true',\r\n        sessionStorage.getItem(keyPublishing),\r\n      ),\r\n    };\r\n  }\r\n\r\n  fetchFormData(items: string) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'load'), items, {\r\n      params: { appId: this.context.appId.toString() }\r\n    }) as Observable<EavFormData>;\r\n  }\r\n\r\n  saveItem(item: Item) {\r\n    this.store.dispatch(new itemActions.SaveItemAttributesValuesAction(item));\r\n  }\r\n\r\n  saveItemSuccess(data: SaveResult) {\r\n    this.store.dispatch(new itemActions.SaveItemAttributesValuesSuccessAction(data));\r\n  }\r\n\r\n  saveItemError(error: any) {\r\n    this.store.dispatch(new itemActions.SaveItemAttributesValuesErrorAction(error));\r\n  }\r\n\r\n  saveFormData(body: string) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'save'), body, {\r\n      params: { appId: this.eavConfig.appId.toString(), partOfPage: this.eavConfig.partOfPage }\r\n    }) as Observable<SaveResult>;\r\n  }\r\n\r\n  private getVersioningOptions(partOfPage: boolean, publishing: string): VersioningOptions {\r\n    if (!partOfPage) {\r\n      return { show: true, hide: true, branch: true };\r\n    }\r\n\r\n    const publish = publishing || '';\r\n    switch (publish) {\r\n      case '':\r\n      case 'DraftOptional':\r\n        return { show: true, hide: true, branch: true };\r\n      case 'DraftRequired':\r\n        return { branch: true, hide: true };\r\n      default: {\r\n        console.error('invalid versioning requiremenets: ' + publish);\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { EavScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\n\r\nexport const webApiTypeRoot = 'admin/type/';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get(this.apiUrl(webApiTypeRoot + 'get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    }) as Observable<ContentType>;\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get(this.apiUrl(webApiTypeRoot + 'list'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    }) as Observable<ContentType[]>;\r\n  }\r\n\r\n  getScopes() {\r\n    return this.http.get(this.apiUrl(webApiTypeRoot + 'scopes'), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map((scopes: { [key: string]: string }) => {\r\n        const scopeOptions: EavScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post(this.apiUrl(webApiTypeRoot + 'save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete(this.apiUrl(webApiTypeRoot + 'delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post(this.apiUrl(webApiTypeRoot + 'import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<ImportAppResult>;\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post(this.apiUrl(webApiTypeRoot + 'addghost'), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from 'projects/ng-dialogs/src/app/shared/services/context';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, share, switchMap } from 'rxjs/operators';\r\nimport { EntityInfo } from '../models/eav/entity-info';\r\nimport { EavService, webApiEditRoot } from './eav.service';\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n@Injectable()\r\nexport class EntityService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private eavService: EavService,\r\n    private context: Context,\r\n    private dnnContext: DnnContext,\r\n  ) { }\r\n\r\n  getAvailableEntities(filterText: string, contentTypeName: string) {\r\n    // eavConfig for edit ui and context for other calls\r\n    const context = this.eavService.eavConfig != null ? this.eavService.eavConfig : this.context;\r\n    return this.http.post<EntityInfo[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'EntityPicker'), filterText, {\r\n      params: { contentTypeName, appId: context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  // Experimental 2dm\r\n  reactiveEntities(params: Observable<{ contentTypeName: string; filter: string }>) {\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.filter, p.contentTypeName).pipe(share())),\r\n    );\r\n  }\r\n\r\n  delete(contentType: string, entityId: string, force: boolean) {\r\n    return this.http.delete(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType, id: entityId, appId: this.eavService.eavConfig.appId.toString(), force: force.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { Item } from '../../models/eav/item';\r\nimport { SaveResult } from '../../models/eav/save-result.model';\r\n\r\n// Item Attributes\r\nexport const SAVE_ITEM_ATTRIBUTES_VALUES = '[Item] SAVE_ITEM_ATTRIBUTES_VALUES';\r\nexport const SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS = '[Item] SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS';\r\nexport const SAVE_ITEM_ATTRIBUTES_VALUES_ERROR = '[Item] SAVE_ITEM_ATTRIBUTES_VALUES_ERROR';\r\n\r\n/** Save (submit) */\r\nexport class SaveItemAttributesValuesAction implements Action {\r\n  readonly type = SAVE_ITEM_ATTRIBUTES_VALUES;\r\n  constructor(public item: Item) { }\r\n}\r\n\r\nexport class SaveItemAttributesValuesSuccessAction implements Action {\r\n  readonly type = SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS;\r\n  constructor(public data: SaveResult) { }\r\n}\r\n\r\nexport class SaveItemAttributesValuesErrorAction implements Action {\r\n  readonly type = SAVE_ITEM_ATTRIBUTES_VALUES_ERROR;\r\n  constructor(public error: any) { }\r\n}\r\n\r\nexport type Actions\r\n  = SaveItemAttributesValuesAction\r\n  | SaveItemAttributesValuesSuccessAction\r\n  | SaveItemAttributesValuesErrorAction;\r\n"],"sourceRoot":"webpack:///"}