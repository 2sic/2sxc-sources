{"version":3,"sources":["./src/app/app-administration/getting-started/getting-started.component.ts","./src/app/app-administration/getting-started/getting-started.component.html","./src/app/app-administration/ag-grid-components/data-items/data-items.component.ts","./src/app/app-administration/ag-grid-components/data-items/data-items.component.html","./src/app/app-administration/ag-grid-components/data-fields/data-fields.component.html","./src/app/app-administration/ag-grid-components/data-fields/data-fields.component.ts","./src/app/app-administration/ag-grid-components/data-actions/data-actions.component.html","./src/app/app-administration/ag-grid-components/data-actions/data-actions.component.ts","./src/app/app-administration/data/data.component.html","./src/app/app-administration/data/data.component.ts","./src/app/app-administration/ag-grid-components/queries-actions/queries-actions.component.ts","./src/app/app-administration/ag-grid-components/queries-actions/queries-actions.component.html","./src/app/app-administration/queries/queries.component.ts","./src/app/app-administration/queries/queries.component.html","./src/app/app-administration/views/views.helpers.ts","./src/app/app-administration/ag-grid-components/views-type/views-type.component.ts","./src/app/app-administration/ag-grid-components/views-type/views-type.component.html","./src/app/app-administration/ag-grid-components/views-show/views-show.component.html","./src/app/app-administration/ag-grid-components/views-show/views-show.component.ts","./src/app/app-administration/ag-grid-components/views-actions/views-actions.component.ts","./src/app/app-administration/ag-grid-components/views-actions/views-actions.component.html","./src/app/app-administration/views/views.component.ts","./src/app/app-administration/views/views.component.html","./src/app/app-administration/ag-grid-components/web-api-actions/web-api-actions.component.ts","./src/app/app-administration/ag-grid-components/web-api-actions/web-api-actions.component.html","./src/app/app-administration/web-api/web-api.component.ts","./src/app/app-administration/web-api/web-api.component.html","./src/app/app-administration/app-configuration/app-configuration.component.html","./src/app/app-administration/app-configuration/app-configuration.component.ts","./src/app/app-administration/app-administration-nav/app-administration-nav.component.html","./src/app/app-administration/app-administration-nav/app-administration-nav.component.ts","./src/app/shared/constants/eav.constants.ts"],"names":["sanitizer","ngOnInit","this","gettingStartedSafe","bypassSecurityTrustResourceUrl","gettingStartedUrl","GettingStartedComponent","agInit","params","value","refresh","DataItemsComponent","contentType","data","DataFieldsComponent","enableAppFeatures","enableAppFeaturesGetter","showPermissions","isGuid","StaticName","editContentType","onEdit","createOrEditMetadata","onCreateOrEditMetadata","openExport","onOpenExport","openImport","onOpenImport","openPermissions","onOpenPermissions","deleteContentType","onDelete","txtToTest","RegExp","test","DataActionsComponent","router","route","contentTypesService","globalConfigurationService","appDialogConfigService","snackBar","debugEnabled","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","valueGetter","idValueGetter","flex","minWidth","sort","onCellClicked","showContentItems","bind","nameValueGetter","addItem","editFields","cellRendererParams","frameworkComponents","idFieldComponent","dataItemsComponent","dataFieldsComponent","dataActionsComponent","modules","subscription","Subscription","hasChild","snapshot","firstChild","scope","scopes","default","defaultScope","getDialogSettings","toPromise","dialogSettings","IsContent","fetchScopes","fetchContentTypes","refreshOnChildClosed","add","getDebugEnabled","subscribe","ngOnDestroy","unsubscribe","navigate","relativeTo","Id","retrieveContentTypes","contentTypes","getScopes","scopeOptions","createGhost","sourceName","window","prompt","open","res","duration","changeScope","event","newScope","find","option","push","name","Name","Label","JSON","stringify","items","ContentTypeName","UsesSharedDef","form","Metadata","EntityId","toString","For","Target","metadata","target","String","Prefill","Description","entity","type","keyTypes","guid","confirm","delete","result","events","pipe","hadChild","DataComponent","editQuery","onEditQuery","cloneQuery","onCloneQuery","exportQuery","onExportQuery","deleteQuery","QueriesActionsComponent","pipelinesService","contentExportService","dialogService","openVisualQueryDesigner","queriesActionsComponent","fetchQueries","getAll","query","queries","importQuery","TestParameters","pipelineDesigner","testParameters","Guid","openQueryDesigner","clonePipeline","exportEntity","QueriesComponent","calculateViewType","view","icon","HasQuery","List","ContentType","ViewsTypeComponent","ViewsShowComponent","openCode","onOpenCode","deleteView","ViewsActionsComponent","templatesService","showValueGetter","editView","typeValueGetter","contentDemoValueGetter","presentationDemoValueGetter","headerDemoValueGetter","headerPresDemoValueGetter","booleanFilterComponent","viewsTypeComponent","viewsShowComponent","viewsActionsComponent","fetchTemplates","fetchPolymorph","views","polymorphism","pl","template","editPolymorphisms","TypeName","IsHidden","DemoId","DemoTitle","PresentationType","ListContentType","ListPresentationType","openCodeFile","TemplatePath","ViewsComponent","deleteApi","WebApiActionsComponent","webApisService","sanitizeService","webApiActions","fetchWebApis","addController","length","nameLower","sanitizeName","replace","toLocaleLowerCase","extIndex","lastIndexOf","substring","typeIndex","charAt","toLocaleUpperCase","create","paths","webApis","map","path","splitIndex","fileExtIndex","folder","api","alert","WebApiComponent","contentItemsService","context","eavConstants","edit","staticName","contentItems","Error","config","app","number","appId","exportApp","exportParts","importParts","AppConfigurationComponent","dialogRef","tabs","tab","tabIndex","indexOf","url","closeDialog","close","changeTab","index","toggleDebugEnabled","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","AppAdministrationNavComponent","attribute","zone","cmsObject","string","cmsSystem","system","permissions","settings","resources","outDataSource","className","in","description","visualDesignerData","Top","Left","Width","defaultPipeline","dataSources","entityGuid","partAssemblyAndType","streamWiring","From","Out","To","In"],"mappings":"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","file":"app-administration-nav-component.f61c2ee6cdfc8954597d.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { SafeUrl, DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-getting-started',\r\n  templateUrl: './getting-started.component.html',\r\n  styleUrls: ['./getting-started.component.scss']\r\n})\r\nexport class GettingStartedComponent implements OnInit {\r\n  @Input() gettingStartedUrl: string;\r\n  gettingStartedSafe: SafeUrl;\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit() {\r\n    this.gettingStartedSafe = this.sanitizer.bypassSecurityTrustResourceUrl(this.gettingStartedUrl);\r\n  }\r\n\r\n}\r\n","<iframe class=\"iframe\" [src]=\"gettingStartedSafe\"></iframe>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\n@Component({\r\n  selector: 'app-data-items',\r\n  templateUrl: './data-items.component.html',\r\n  styleUrls: ['./data-items.component.scss']\r\n})\r\nexport class DataItemsComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div matRipple class=\"chip-component highlight\" matTooltip=\"Add item\">\r\n  <div class=\"chip-box\">\r\n    <span class=\"chip\">{{ value }}</span>\r\n  </div>\r\n  <div class=\"like-button\">\r\n    <mat-icon>add</mat-icon>\r\n  </div>\r\n</div>\r\n","<div matRipple class=\"chip-component highlight\" matTooltip=\"Edit fields\" *ngIf=\"!contentType.UsesSharedDef\">\r\n  <div class=\"chip-box\">\r\n    <span class=\"chip\">{{ value }}</span>\r\n  </div>\r\n  <div class=\"like-button\">\r\n    <mat-icon>dns</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"chip-component disabled\" *ngIf=\"contentType.UsesSharedDef\"\r\n  matTooltip=\"This content-type shares the definition of #{{contentType.SharedDefId}} so you can't edit it here. Read 2sxc.org/help?tag=shared-types\">\r\n  <div class=\"chip-box\">\r\n    <span class=\"chip\">{{ value }}</span>\r\n  </div>\r\n  <div class=\"like-button disabled\">\r\n    <mat-icon>share</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\nimport { ContentType } from '../../models/content-type.model';\r\n\r\n@Component({\r\n  selector: 'app-data-fields',\r\n  templateUrl: './data-fields.component.html',\r\n  styleUrls: ['./data-fields.component.scss']\r\n})\r\nexport class DataFieldsComponent implements ICellRendererAngularComp {\r\n  contentType: ContentType;\r\n  value: number;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.contentType = params.data;\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"!contentType.UsesSharedDef\" matTooltip=\"Metadata\"\r\n    (click)=\"createOrEditMetadata()\">\r\n    <mat-icon>edit</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"contentType.UsesSharedDef\">\r\n    <mat-icon>edit</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Export\" (click)=\"openExport()\">\r\n    <mat-icon>cloud_download</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Import\" (click)=\"openImport()\">\r\n    <mat-icon>cloud_upload</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"showPermissions\" matTooltip=\"Permissions\"\r\n    (click)=\"openPermissions()\">\r\n    <mat-icon>person</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"!showPermissions\">\r\n    <mat-icon>person</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"!contentType.UsesSharedDef\" (click)=\"editContentType()\"\r\n    matTooltip=\"Settings\">\r\n    <mat-icon>settings</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"contentType.UsesSharedDef\">\r\n    <mat-icon>settings</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"!contentType.UsesSharedDef\" matTooltip=\"Delete\"\r\n    (click)=\"deleteContentType()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"contentType.UsesSharedDef\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { ContentType } from '../../models/content-type.model';\r\nimport { DataActionsParams } from './data-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-data-actions',\r\n  templateUrl: './data-actions.component.html',\r\n  styleUrls: ['./data-actions.component.scss']\r\n})\r\nexport class DataActionsComponent implements ICellRendererAngularComp {\r\n  private params: DataActionsParams;\r\n  contentType: ContentType;\r\n  showPermissions: boolean;\r\n\r\n  agInit(params: DataActionsParams) {\r\n    this.params = params;\r\n    this.contentType = this.params.data;\r\n    const enableAppFeatures = this.params.enableAppFeaturesGetter();\r\n    this.showPermissions = enableAppFeatures && this.isGuid(this.contentType.StaticName);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  editContentType() {\r\n    this.params.onEdit(this.contentType);\r\n  }\r\n\r\n  createOrEditMetadata() {\r\n    this.params.onCreateOrEditMetadata(this.contentType);\r\n  }\r\n\r\n  openExport() {\r\n    this.params.onOpenExport(this.contentType);\r\n  }\r\n\r\n  openImport() {\r\n    this.params.onOpenImport(this.contentType);\r\n  }\r\n\r\n  openPermissions() {\r\n    this.params.onOpenPermissions(this.contentType);\r\n  }\r\n\r\n  deleteContentType() {\r\n    this.params.onDelete(this.contentType);\r\n  }\r\n\r\n  private isGuid(txtToTest: string) {\r\n    const patt = new RegExp(/[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/i);\r\n    return patt.test(txtToTest); // note: can't use the txtToTest.match because it causes infinite digest cycles\r\n  }\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"contentTypes\" [columnDefs]=\"columnDefs\" [modules]=\"modules\"\r\n    [frameworkComponents]=\"frameworkComponents\" [enableCellTextSelection]=\"true\" [suppressScrollOnNewData]=\"true\"\r\n    [animateRows]=\"true\" [accentedSort]=\"true\" [valueCache]=\"true\" [headerHeight]=\"32\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"scope-box\">\r\n    <button mat-icon-button color=\"accent\" matTooltip=\"Create a ghost content type\" *ngIf=\"debugEnabled\"\r\n      (click)=\"createGhost()\">\r\n      <mat-icon>share</mat-icon>\r\n    </button>\r\n    <mat-form-field appearance=\"standard\" color=\"accent\" class=\"scope-box__dropdown\">\r\n      <mat-select [ngModel]=\"scope\" name=\"Scope\" (selectionChange)=\"changeScope($event)\">\r\n        <mat-option *ngFor=\"let scopeOption of scopeOptions\" [value]=\"scopeOption.value\">\r\n          {{ 'Scope: ' + scopeOption.name }}\r\n        </mat-option>\r\n        <mat-option value=\"Other\">Scope: Other...</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Create a new content type\"\r\n    (click)=\"editContentType(null)\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ColDef, AllCommunityModules, CellClickedEvent, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { ContentType } from '../models/content-type.model';\r\nimport { ContentTypesService } from '../services/content-types.service';\r\nimport { DataItemsComponent } from '../ag-grid-components/data-items/data-items.component';\r\nimport { DataFieldsComponent } from '../ag-grid-components/data-fields/data-fields.component';\r\nimport { DataActionsComponent } from '../ag-grid-components/data-actions/data-actions.component';\r\nimport { eavConstants, EavScopesKey, EavScopeOption } from '../../shared/constants/eav.constants';\r\nimport { DataActionsParams } from '../ag-grid-components/data-actions/data-actions.models';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\nimport { GlobalConfigurationService } from '../../../../../edit/shared/services/global-configuration.service';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\n\r\n@Component({\r\n  selector: 'app-data',\r\n  templateUrl: './data.component.html',\r\n  styleUrls: ['./data.component.scss']\r\n})\r\nexport class DataComponent implements OnInit, OnDestroy {\r\n  contentTypes: ContentType[];\r\n  scope: string;\r\n  defaultScope: string;\r\n  scopeOptions: EavScopeOption[];\r\n  debugEnabled = false;\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n      cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Content Type', field: 'Name', flex: 2, minWidth: 250, cellClass: 'primary-action highlight', sort: 'asc',\r\n      sortable: true, filter: 'agTextColumnFilter', onCellClicked: this.showContentItems.bind(this), valueGetter: this.nameValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Items', field: 'Items', width: 102, headerClass: 'dense', cellClass: 'secondary-action no-padding',\r\n      sortable: true, filter: 'agNumberColumnFilter', cellRenderer: 'dataItemsComponent', onCellClicked: this.addItem.bind(this),\r\n    },\r\n    {\r\n      headerName: 'Fields', field: 'Fields', width: 94, headerClass: 'dense', cellClass: 'secondary-action no-padding',\r\n      sortable: true, filter: 'agNumberColumnFilter', cellRenderer: 'dataFieldsComponent', onCellClicked: this.editFields.bind(this),\r\n    },\r\n    {\r\n      width: 240, cellClass: 'secondary-action no-padding', cellRenderer: 'dataActionsComponent',\r\n      cellRendererParams: {\r\n        enableAppFeaturesGetter: this.enableAppFeaturesGetter.bind(this),\r\n        onEdit: this.editContentType.bind(this),\r\n        onCreateOrEditMetadata: this.createOrEditMetadata.bind(this),\r\n        onOpenExport: this.openExport.bind(this),\r\n        onOpenImport: this.openImport.bind(this),\r\n        onOpenPermissions: this.openPermissions.bind(this),\r\n        onDelete: this.deleteContentType.bind(this),\r\n      } as DataActionsParams,\r\n    },\r\n    {\r\n      headerName: 'Description', field: 'Description', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    idFieldComponent: IdFieldComponent,\r\n    dataItemsComponent: DataItemsComponent,\r\n    dataFieldsComponent: DataFieldsComponent,\r\n    dataActionsComponent: DataActionsComponent,\r\n  };\r\n  modules = AllCommunityModules;\r\n\r\n  private enableAppFeatures = false;\r\n  private subscription = new Subscription();\r\n  private hasChild: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private contentTypesService: ContentTypesService,\r\n    private globalConfigurationService: GlobalConfigurationService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n    this.scope = eavConstants.scopes.default.value;\r\n    this.defaultScope = eavConstants.scopes.default.value;\r\n    // this.scopeOptions = Object.keys(eavConstants.scopes).map((key: EavScopesKey) => eavConstants.scopes[key]);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    const dialogSettings = await this.appDialogConfigService.getDialogSettings().toPromise();\r\n    this.enableAppFeatures = !dialogSettings.IsContent;\r\n    this.fetchScopes();\r\n    this.fetchContentTypes();\r\n    this.refreshOnChildClosed();\r\n    this.subscription.add(\r\n      this.globalConfigurationService.getDebugEnabled().subscribe(debugEnabled => {\r\n        this.debugEnabled = debugEnabled;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  private showContentItems(params: CellClickedEvent) {\r\n    const contentType = params.data as ContentType;\r\n    this.router.navigate([`items/${contentType.StaticName}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  editContentType(contentType: ContentType) {\r\n    if (!contentType) {\r\n      this.router.navigate([`${this.scope}/add`], { relativeTo: this.route.firstChild });\r\n    } else {\r\n      this.router.navigate([`${this.scope}/${contentType.Id}/edit`], { relativeTo: this.route.firstChild });\r\n    }\r\n  }\r\n\r\n  private fetchContentTypes() {\r\n    this.contentTypesService.retrieveContentTypes(this.scope).subscribe(contentTypes => {\r\n      this.contentTypes = contentTypes;\r\n    });\r\n  }\r\n\r\n  private fetchScopes() {\r\n    this.contentTypesService.getScopes().subscribe(contentTypes => {\r\n      this.scopeOptions = contentTypes;\r\n    });\r\n  }\r\n\r\n  createGhost() {\r\n    // tslint:disable-next-line:max-line-length\r\n    const sourceName = window.prompt('To create a ghost content-type enter source static name / id - this is a very advanced operation - read more about it on 2sxc.org/help?tag=ghost');\r\n    if (!sourceName) { return; }\r\n    this.snackBar.open('Saving...');\r\n    this.contentTypesService.createGhost(sourceName).subscribe(res => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  changeScope(event: MatSelectChange) {\r\n    let newScope: string = event.value;\r\n    if (newScope === 'Other') {\r\n      // tslint:disable-next-line:max-line-length\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.');\r\n      if (!newScope) {\r\n        newScope = eavConstants.scopes.default.value;\r\n      } else if (!this.scopeOptions.find(option => option.value === newScope)) {\r\n        const newScopeOption: EavScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        this.scopeOptions.push(newScopeOption);\r\n      }\r\n    }\r\n    this.scope = newScope;\r\n    this.fetchContentTypes();\r\n    if (this.scope !== this.defaultScope) {\r\n      this.snackBar.open(\r\n        'Warning! You are in a special scope. Changing things here could easily break functionality',\r\n        null,\r\n        { duration: 2000 }\r\n      );\r\n    }\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const contentType: ContentType = params.data;\r\n    return `ID: ${contentType.Id}\\nGUID: ${contentType.StaticName}`;\r\n  }\r\n\r\n  private nameValueGetter(params: ValueGetterParams) {\r\n    const contentType: ContentType = params.data;\r\n    if (contentType.Name !== contentType.Label) {\r\n      return `${contentType.Label} (${contentType.Name})`;\r\n    } else {\r\n      return contentType.Name;\r\n    }\r\n  }\r\n\r\n  private enableAppFeaturesGetter() {\r\n    return this.enableAppFeatures;\r\n  }\r\n\r\n  private addItem(params: CellClickedEvent) {\r\n    const contentType = params.data as ContentType;\r\n    const form: EditForm = {\r\n      items: [{ ContentTypeName: contentType.StaticName }],\r\n    };\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private editFields(params: CellClickedEvent) {\r\n    const contentType = params.data as ContentType;\r\n    if (contentType.UsesSharedDef) { return; }\r\n    this.router.navigate([`fields/${contentType.StaticName}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private createOrEditMetadata(contentType: ContentType) {\r\n    const form: EditForm = {\r\n      items: !contentType.Metadata\r\n        ? [{\r\n          ContentTypeName: eavConstants.contentTypes.contentType,\r\n          For: {\r\n            Target: eavConstants.metadata.contentType.target,\r\n            String: contentType.StaticName,\r\n          },\r\n          Prefill: { Label: contentType.Name, Description: contentType.Description },\r\n        }]\r\n        : [{ EntityId: contentType.Metadata.Id.toString() }],\r\n    };\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private openExport(contentType: ContentType) {\r\n    this.router.navigate([`export/${contentType.StaticName}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private openImport(contentType: ContentType) {\r\n    this.router.navigate([`${contentType.StaticName}/import`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private openPermissions(contentType: ContentType) {\r\n    this.router.navigate(\r\n      [`permissions/${eavConstants.metadata.entity.type}/${eavConstants.keyTypes.guid}/${contentType.StaticName}`],\r\n      { relativeTo: this.route.firstChild }\r\n    );\r\n  }\r\n\r\n  private deleteContentType(contentType: ContentType) {\r\n    if (!confirm(`Are you sure you want to delete '${contentType.Name}' (${contentType.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.contentTypesService.delete(contentType).subscribe(result => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        const hadChild = this.hasChild;\r\n        this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n        if (!this.hasChild && hadChild) {\r\n          this.fetchContentTypes();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { Query } from '../../models/query.model';\r\nimport { QueriesActionsParams } from './queries-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-queries-actions',\r\n  templateUrl: './queries-actions.component.html',\r\n  styleUrls: ['./queries-actions.component.scss']\r\n})\r\nexport class QueriesActionsComponent implements ICellRendererAngularComp {\r\n  private params: QueriesActionsParams;\r\n\r\n  agInit(params: QueriesActionsParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  editQuery() {\r\n    const query: Query = this.params.data;\r\n    this.params.onEditQuery(query);\r\n  }\r\n\r\n  cloneQuery() {\r\n    const query: Query = this.params.data;\r\n    this.params.onCloneQuery(query);\r\n  }\r\n\r\n  exportQuery() {\r\n    const query: Query = this.params.data;\r\n    this.params.onExportQuery(query);\r\n  }\r\n\r\n  openPermissions() {\r\n    const query: Query = this.params.data;\r\n    this.params.onOpenPermissions(query);\r\n  }\r\n\r\n  deleteQuery() {\r\n    const query: Query = this.params.data;\r\n    this.params.onDelete(query);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Edit\" (click)=\"editQuery()\">\r\n    <mat-icon>edit</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Copy\" (click)=\"cloneQuery()\">\r\n    <mat-icon>file_copy</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Export\" (click)=\"exportQuery()\">\r\n    <mat-icon>cloud_download</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Permissions\" (click)=\"openPermissions()\">\r\n    <mat-icon>person</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Delete\" (click)=\"deleteQuery()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ColDef, AllCommunityModules, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { Query } from '../models/query.model';\r\nimport { QueriesActionsComponent } from '../ag-grid-components/queries-actions/queries-actions.component';\r\nimport { PipelinesService } from '../services/pipelines.service';\r\nimport { ContentExportService } from '../services/content-export.service';\r\nimport { QueriesActionsParams } from '../ag-grid-components/queries-actions/queries-actions.models';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-queries',\r\n  templateUrl: './queries.component.html',\r\n  styleUrls: ['./queries.component.scss']\r\n})\r\nexport class QueriesComponent implements OnInit, OnDestroy {\r\n  queries: Query[];\r\n\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n      cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n      filter: 'agTextColumnFilter', onCellClicked: this.openVisualQueryDesigner.bind(this),\r\n    },\r\n    {\r\n      width: 200, cellClass: 'secondary-action no-padding',\r\n      cellRenderer: 'queriesActionsComponent', cellRendererParams: {\r\n        onEditQuery: this.editQuery.bind(this),\r\n        onCloneQuery: this.cloneQuery.bind(this),\r\n        onOpenPermissions: this.openPermissions.bind(this),\r\n        onExportQuery: this.exportQuery.bind(this),\r\n        onDelete: this.deleteQuery.bind(this),\r\n      } as QueriesActionsParams,\r\n    },\r\n    {\r\n      headerName: 'Description', field: 'Description', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n      filter: 'agTextColumnFilter',\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    idFieldComponent: IdFieldComponent,\r\n    queriesActionsComponent: QueriesActionsComponent,\r\n  };\r\n  modules = AllCommunityModules;\r\n\r\n  private subscription = new Subscription();\r\n  private hasChild: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private pipelinesService: PipelinesService,\r\n    private contentExportService: ContentExportService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n  ) {\r\n    this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchQueries();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  private fetchQueries() {\r\n    this.pipelinesService.getAll(eavConstants.contentTypes.query).subscribe((queries: Query[]) => {\r\n      this.queries = queries;\r\n    });\r\n  }\r\n\r\n  importQuery() {\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  editQuery(query: Query) {\r\n    const form: EditForm = {\r\n      items: (query === null)\r\n        ? [{ ContentTypeName: eavConstants.contentTypes.query, Prefill: { TestParameters: eavConstants.pipelineDesigner.testParameters } }]\r\n        : [{ EntityId: query.Id.toString() }],\r\n    };\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const query: Query = params.data;\r\n    return `ID: ${query.Id}\\nGUID: ${query.Guid}`;\r\n  }\r\n\r\n  private openVisualQueryDesigner(params: ValueGetterParams) {\r\n    const query: Query = params.data;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: query.Id.toString() }],\r\n    };\r\n    this.dialogService.openQueryDesigner(form, query.Id);\r\n  }\r\n\r\n  private cloneQuery(query: Query) {\r\n    this.snackBar.open('Copying...');\r\n    this.pipelinesService.clonePipeline(query.Id).subscribe(() => {\r\n      this.snackBar.open('Copied', null, { duration: 2000 });\r\n      this.fetchQueries();\r\n    });\r\n  }\r\n\r\n  private openPermissions(query: Query) {\r\n    this.router.navigate(\r\n      [`permissions/${eavConstants.metadata.entity.type}/${eavConstants.keyTypes.guid}/${query.Guid}`],\r\n      { relativeTo: this.route.firstChild }\r\n    );\r\n  }\r\n\r\n  private exportQuery(query: Query) {\r\n    this.contentExportService.exportEntity(query.Id, 'Query', true);\r\n  }\r\n\r\n  private deleteQuery(query: Query) {\r\n    if (!confirm(`Delete Pipeline '${query.Name}' (${query.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.pipelinesService.delete(query.Id).subscribe(res => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchQueries();\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        const hadChild = this.hasChild;\r\n        this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n        if (!this.hasChild && hadChild) {\r\n          this.fetchQueries();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"queries\" [columnDefs]=\"columnDefs\" [modules]=\"modules\"\r\n    [frameworkComponents]=\"frameworkComponents\" [enableCellTextSelection]=\"true\" [suppressScrollOnNewData]=\"true\"\r\n    [animateRows]=\"true\" [accentedSort]=\"true\" [valueCache]=\"true\" [headerHeight]=\"32\">\r\n  </ag-grid-angular>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\">\r\n    <eco-fab-speed-dial-trigger spin=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab matTooltip=\"Import query\" (click)=\"importQuery()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab matTooltip=\"Create a new query\" (click)=\"editQuery(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>\r\n","import { View } from '../models/view.model';\r\n\r\nexport function calculateViewType(view: View) {\r\n  let value = '';\r\n  let icon = '';\r\n  if (view.HasQuery) {\r\n    value = 'Data (from query)';\r\n    icon = 'filter';\r\n  } else if (view.List) {\r\n    value = 'Items (list)';\r\n    icon = 'menu';\r\n  } else if (!view.ContentType && !view.HasQuery) {\r\n    value = 'Code';\r\n    icon = 'check_box_outline_blank';\r\n  } else if (!view.List) {\r\n    value = 'Item (one)';\r\n    icon = 'looks_one';\r\n  }\r\n  return { value, icon };\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\nimport { calculateViewType } from '../../views/views.helpers';\r\n\r\n@Component({\r\n  selector: 'app-views-type',\r\n  templateUrl: './views-type.component.html',\r\n  styleUrls: ['./views-type.component.scss']\r\n})\r\nexport class ViewsTypeComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  icon: string;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    const view = params.data;\r\n    const type = calculateViewType(view);\r\n    this.icon = type.icon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\" matTooltip=\"{{ value }}\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">visibility_off</mat-icon>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\n@Component({\r\n  selector: 'app-views-show',\r\n  templateUrl: './views-show.component.html',\r\n  styleUrls: ['./views-show.component.scss']\r\n})\r\nexport class ViewsShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { View } from '../../models/view.model';\r\nimport { ViewActionsParams } from './views-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-views-actions',\r\n  templateUrl: './views-actions.component.html',\r\n  styleUrls: ['./views-actions.component.scss']\r\n})\r\nexport class ViewsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ViewActionsParams;\r\n\r\n  agInit(params: ViewActionsParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openCode() {\r\n    const view: View = this.params.data;\r\n    this.params.onOpenCode(view);\r\n  }\r\n\r\n  openPermissions() {\r\n    const view: View = this.params.data;\r\n    this.params.onOpenPermissions(view);\r\n  }\r\n\r\n  deleteView() {\r\n    const view: View = this.params.data;\r\n    this.params.onDelete(view);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Code\" (click)=\"openCode()\">\r\n    <mat-icon>code</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Permissions\" (click)=\"openPermissions()\">\r\n    <mat-icon>person</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Delete\" (click)=\"deleteView()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColDef, CellClickedEvent, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { View } from '../models/view.model';\r\nimport { calculateViewType } from './views.helpers';\r\nimport { ViewsTypeComponent } from '../ag-grid-components/views-type/views-type.component';\r\nimport { ViewsShowComponent } from '../ag-grid-components/views-show/views-show.component';\r\nimport { ViewsActionsComponent } from '../ag-grid-components/views-actions/views-actions.component';\r\nimport { TemplatesService } from '../services/templates.service';\r\nimport { ViewActionsParams } from '../ag-grid-components/views-actions/views-actions.models';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\n\r\n@Component({\r\n  selector: 'app-views',\r\n  templateUrl: './views.component.html',\r\n  styleUrls: ['./views.component.scss']\r\n})\r\nexport class ViewsComponent implements OnInit, OnDestroy {\r\n  views: View[];\r\n\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n      cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Show', field: 'IsHidden', width: 70, headerClass: 'dense', cellClass: 'no-outline', cellRenderer: 'viewsShowComponent',\r\n      sortable: true, filter: 'booleanFilterComponent', valueGetter: this.showValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'primary-action highlight',\r\n      sortable: true, filter: 'agTextColumnFilter', onCellClicked: this.editView.bind(this),\r\n    },\r\n    {\r\n      headerName: 'Type', field: 'Type', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter', cellRenderer: 'viewsTypeComponent', valueGetter: this.typeValueGetter,\r\n    },\r\n    {\r\n      width: 120, cellClass: 'secondary-action no-padding', cellRenderer: 'viewsActionsComponent',\r\n      cellRendererParams: {\r\n        onOpenCode: this.openCode.bind(this),\r\n        onOpenPermissions: this.openPermissions.bind(this),\r\n        onDelete: this.deleteView.bind(this),\r\n      } as ViewActionsParams,\r\n    },\r\n    {\r\n      headerName: 'Url Key', field: 'ViewNameInUrl', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Path', field: 'TemplatePath', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Content', field: 'ContentType.Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Default', field: 'ContentType.DemoId', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter', valueGetter: this.contentDemoValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Presentation', field: 'PresentationType.Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Default', field: 'PresentationType.DemoId', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter', valueGetter: this.presentationDemoValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Header', field: 'ListContentType.Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Default', field: 'ListContentType.DemoId', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter', valueGetter: this.headerDemoValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Header Presentation', field: 'ListPresentationType.Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Default', field: 'ListPresentationType.DemoId', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter', valueGetter: this.headerPresDemoValueGetter,\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    idFieldComponent: IdFieldComponent,\r\n    booleanFilterComponent: BooleanFilterComponent,\r\n    viewsTypeComponent: ViewsTypeComponent,\r\n    viewsShowComponent: ViewsShowComponent,\r\n    viewsActionsComponent: ViewsActionsComponent,\r\n  };\r\n  modules = AllCommunityModules;\r\n\r\n  private subscription = new Subscription();\r\n  private hasChild: boolean;\r\n\r\n  polymorphism: Polymorphism;\r\n\r\n  constructor(\r\n    private templatesService: TemplatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n  ) {\r\n    this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchTemplates();\r\n    this.fetchPolymorph();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  private fetchTemplates() {\r\n    this.templatesService.getAll().subscribe(views => {\r\n      this.views = views;\r\n    });\r\n  }\r\n\r\n  private fetchPolymorph() {\r\n    // TODO: SPM - do we need to keep a reference to this subscription?\r\n    this.templatesService.polymorphism().subscribe(pl => this.polymorphism = pl);\r\n  }\r\n\r\n  editView(params: CellClickedEvent) {\r\n    let form: EditForm;\r\n    if (params === null) {\r\n      form = {\r\n        items: [{ ContentTypeName: eavConstants.contentTypes.template }],\r\n      };\r\n    } else {\r\n      const view: View = params.data;\r\n      form = {\r\n        items: [{ EntityId: view.Id.toString() }],\r\n      };\r\n    }\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  editPolymorphisms() {\r\n    // this must already be loaded - cheap check\r\n    if (!this.polymorphism) { return; }\r\n\r\n    const form: EditForm = {\r\n      items: [\r\n        this.polymorphism.Id\r\n          ? { EntityId: this.polymorphism.Id.toString() }\r\n          : { ContentTypeName: this.polymorphism.TypeName }\r\n      ]\r\n    };\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `ID: ${view.Id}\\nGUID: ${view.Guid}`;\r\n  }\r\n\r\n  private showValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return !view.IsHidden;\r\n  }\r\n\r\n  private typeValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    const type = calculateViewType(view);\r\n    return type.value;\r\n  }\r\n\r\n  private contentDemoValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `${view.ContentType.DemoId} ${view.ContentType.DemoTitle}`;\r\n  }\r\n\r\n  private presentationDemoValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `${view.PresentationType.DemoId} ${view.PresentationType.DemoTitle}`;\r\n  }\r\n\r\n  private headerDemoValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `${view.ListContentType.DemoId} ${view.ListContentType.DemoTitle}`;\r\n  }\r\n\r\n  private headerPresDemoValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `${view.ListPresentationType.DemoId} ${view.ListPresentationType.DemoTitle}`;\r\n  }\r\n\r\n  private openCode(view: View) {\r\n    // const form: EditForm = {\r\n    //   items: [\r\n    //     { Path: view.TemplatePath }\r\n    //   ]\r\n    // };\r\n    this.dialogService.openCodeFile(view.TemplatePath);\r\n  }\r\n\r\n  private openPermissions(view: View) {\r\n    this.router.navigate(\r\n      [`permissions/${eavConstants.metadata.entity.type}/${eavConstants.keyTypes.guid}/${view.Guid}`],\r\n      { relativeTo: this.route.firstChild }\r\n    );\r\n  }\r\n\r\n  private deleteView(view: View) {\r\n    if (!confirm(`Delete '${view.Name}' (${view.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.templatesService.delete(view.Id).subscribe(res => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchTemplates();\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        const hadChild = this.hasChild;\r\n        this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n        if (!this.hasChild && hadChild) {\r\n          this.fetchTemplates();\r\n          this.fetchPolymorph();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"views\" [columnDefs]=\"columnDefs\" [modules]=\"modules\"\r\n    [frameworkComponents]=\"frameworkComponents\" [enableCellTextSelection]=\"true\" [suppressScrollOnNewData]=\"true\"\r\n    [animateRows]=\"true\" [accentedSort]=\"true\" [valueCache]=\"true\" [headerHeight]=\"32\">\r\n  </ag-grid-angular>\r\n\r\n  <div>\r\n    <button mat-button matTooltip=\"Configure Polymorphism\" (click)=\"editPolymorphisms()\">\r\n      <!-- todo: would be nice if we had a raw-loader to include the right logo <img src=\"polymorph-logo.png\"> -->\r\n      <mat-icon>layers</mat-icon>\r\n      Polymorphism\r\n      {{ polymorphism?.Id === null\r\n        ? \"not configured\"\r\n        : ( polymorphism.Resolver === null ? \"disabled\" : \"using \" + polymorphism.Resolver )\r\n      }}\r\n    </button>\r\n  </div>\r\n\r\n  <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Create a new view\" (click)=\"editView(null)\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { WebApiActionsParams } from './web-api-actions.models';\r\nimport { WebApi } from '../../models/web-api.model';\r\n\r\n@Component({\r\n  selector: 'app-web-api-actions',\r\n  templateUrl: './web-api-actions.component.html',\r\n  styleUrls: ['./web-api-actions.component.scss']\r\n})\r\nexport class WebApiActionsComponent implements ICellRendererAngularComp {\r\n  private params: WebApiActionsParams;\r\n\r\n  agInit(params: WebApiActionsParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openCode() {\r\n    const api: WebApi = this.params.data;\r\n    this.params.onOpenCode(api);\r\n  }\r\n\r\n  deleteApi() {\r\n    const api: WebApi = this.params.data;\r\n    this.params.onDelete(api);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Code\" (click)=\"openCode()\">\r\n    <mat-icon>code</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight not-implemented\" style=\"display: none;\" matRipple matTooltip=\"Delete\"\r\n    (click)=\"deleteApi()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ColDef, AllCommunityModules } from '@ag-grid-community/all-modules';\r\n\r\nimport { WebApisService } from '../services/web-apis.service';\r\nimport { WebApi } from '../models/web-api.model';\r\nimport { WebApiActionsComponent } from '../ag-grid-components/web-api-actions/web-api-actions.component';\r\nimport { WebApiActionsParams } from '../ag-grid-components/web-api-actions/web-api-actions.models';\r\nimport { SanitizeService } from '../../../../../edit/eav-material-controls/adam/sanitize.service';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\n\r\n@Component({\r\n  selector: 'app-web-api',\r\n  templateUrl: './web-api.component.html',\r\n  styleUrls: ['./web-api.component.scss']\r\n})\r\nexport class WebApiComponent implements OnInit {\r\n  webApis: WebApi[];\r\n\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      headerName: 'Folder', field: 'folder', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Name', field: 'name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      width: 80, cellClass: 'secondary-action no-padding', cellRenderer: 'webApiActions', cellRendererParams: {\r\n        onOpenCode: this.openCode.bind(this),\r\n        onDelete: this.deleteApi.bind(this),\r\n      } as WebApiActionsParams,\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    webApiActions: WebApiActionsComponent,\r\n  };\r\n  modules = AllCommunityModules;\r\n\r\n  constructor(\r\n    private webApisService: WebApisService,\r\n    private sanitizeService: SanitizeService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchWebApis();\r\n  }\r\n\r\n  addController() {\r\n    let name = prompt('Controller name:', 'TestController.cs');\r\n    if (name === null || name.length === 0) { return; }\r\n\r\n    name = this.sanitizeService.sanitizeName(name);\r\n    name = name.replace(/\\s/g, ''); // remove all whitespaces\r\n    // find name without extension\r\n    let nameLower = name.toLocaleLowerCase();\r\n    const extIndex = nameLower.lastIndexOf('.cs');\r\n    if (extIndex > 0) {\r\n      nameLower = nameLower.substring(0, extIndex);\r\n    }\r\n    const typeIndex = nameLower.lastIndexOf('controller');\r\n    if (typeIndex > 0) {\r\n      nameLower = nameLower.substring(0, typeIndex);\r\n    }\r\n    // uppercase first letter, take other letters as is and append extension\r\n    name = name.charAt(0).toLocaleUpperCase() + name.substring(1, nameLower.length) + 'Controller.cs';\r\n\r\n    this.snackBar.open('Saving...');\r\n    this.webApisService.create(name).subscribe(res => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.fetchWebApis();\r\n    });\r\n  }\r\n\r\n  private fetchWebApis() {\r\n    this.webApisService.getAll().subscribe(paths => {\r\n      this.webApis = paths.map(path => {\r\n        const splitIndex = path.lastIndexOf('/');\r\n        const fileExtIndex = path.lastIndexOf('.');\r\n        const folder = path.substring(0, splitIndex);\r\n        const name = path.substring(splitIndex + 1, fileExtIndex);\r\n        return {\r\n          folder,\r\n          name,\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  private openCode(api: WebApi) {\r\n    // const form: EditForm = {\r\n    //   items: [\r\n    //     { Path: `${api.folder}/${api.name}.cs` }\r\n    //   ]\r\n    // };\r\n    this.dialogService.openCodeFile(`${api.folder}/${api.name}.cs`);\r\n  }\r\n\r\n  private deleteApi(api: WebApi) {\r\n    alert('Delete api');\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"webApis\" [columnDefs]=\"columnDefs\" [modules]=\"modules\"\r\n    [frameworkComponents]=\"frameworkComponents\" [enableCellTextSelection]=\"true\" [suppressScrollOnNewData]=\"true\"\r\n    [animateRows]=\"true\" [accentedSort]=\"true\" [valueCache]=\"true\" [headerHeight]=\"32\">\r\n  </ag-grid-angular>\r\n\r\n  <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Create a new controller\" (click)=\"addController()\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>App Settings</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Edit app settings\" (click)=\"edit(eavConstants.contentTypes.settings)\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button matTooltip=\"Configure app settings\"\r\n          (click)=\"config(eavConstants.contentTypes.settings)\">\r\n          <mat-icon>settings</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Settings are configurations used by the app - like SQL-connection strings, default \"items-to-show\" numbers and\r\n      things like that. They can also be multi-language, so that a setting (like default RSS-Feed) could be different in\r\n      each language.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>App Resources</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Edit app resources\" (click)=\"edit(eavConstants.contentTypes.resources)\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button matTooltip=\"Configure app resources\"\r\n          (click)=\"config(eavConstants.contentTypes.resources)\">\r\n          <mat-icon>settings</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Resources are used for labels and things like that in the App. They are usually needed to create multi-lingual\r\n      views and such, and should not be used for App-Settings.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>App Package Definition</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Edit app definition\" (click)=\"edit(eavConstants.scopes.app.value)\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      The app-package definition is important when exporting/importing this app.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card *ngIf=\"showPermissions\" class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>App Permissions</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Edit permissions\" (click)=\"openPermissions()\">\r\n          <mat-icon>person</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Permissions give access to people to the entire app (all content-types / data), so use with care.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Export this entire App</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Export\" (click)=\"exportApp()\">\r\n          <mat-icon>cloud_download</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Create an app-package (zip) which can be installed in another portal.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Export or Import parts of this App</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Export\" (click)=\"exportParts()\">\r\n          <mat-icon>cloud_download</mat-icon>\r\n        </button>\r\n        <button mat-icon-button matTooltip=\"Import\" (click)=\"importParts()\">\r\n          <mat-icon>cloud_upload</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Create an xml containing parts of the app, e.g. content and templates.\r\n      Import parts from such an xml into this app.\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { ContentItemsService } from '../../content-items/services/content-items.service';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\n\r\n@Component({\r\n  selector: 'app-app-configuration',\r\n  templateUrl: './app-configuration.component.html',\r\n  styleUrls: ['./app-configuration.component.scss']\r\n})\r\nexport class AppConfigurationComponent implements OnInit {\r\n  eavConstants = eavConstants;\r\n  showPermissions = false;\r\n\r\n  constructor(\r\n    private contentItemsService: ContentItemsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.appDialogConfigService.getDialogSettings().subscribe(dialogSettings => {\r\n      this.showPermissions = !dialogSettings.IsContent;\r\n    });\r\n  }\r\n\r\n  edit(staticName: string) {\r\n    this.contentItemsService.getAll(staticName).subscribe(contentItems => {\r\n      if (contentItems.length !== 1) { throw new Error(`Found too many settings for the type ${staticName}`); }\r\n      const item = contentItems[0];\r\n      const form: EditForm = {\r\n        items: [{ EntityId: item.Id.toString() }],\r\n      };\r\n      this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n    });\r\n  }\r\n\r\n  config(staticName: string) {\r\n    this.router.navigate([`fields/${staticName}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  openPermissions() {\r\n    this.router.navigate(\r\n      [`permissions/${eavConstants.metadata.app.type}/${eavConstants.keyTypes.number}/${this.context.appId}`],\r\n      { relativeTo: this.route.firstChild }\r\n    );\r\n  }\r\n\r\n  exportApp() {\r\n    this.router.navigate([`export`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  exportParts() {\r\n    this.router.navigate([`export/parts`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  importParts() {\r\n    this.router.navigate([`import/parts`], { relativeTo: this.route.firstChild });\r\n  }\r\n}\r\n","<div (click)=\"toggleDebugEnabled($event)\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Administration</div>\r\n      <button mat-icon-button matTooltip=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n  <mat-tab-group dynamicHeight color=\"accent\" *ngIf=\"dialogSettings\" (selectedTabChange)=\"changeTab($event)\"\r\n    [selectedIndex]=\"tabIndex\">\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Getting Started\">\r\n        <mat-icon>info</mat-icon>\r\n        <span>Info</span>\r\n      </div>\r\n      <app-getting-started [gettingStartedUrl]=\"dialogSettings.GettingStartedUrl\">\r\n      </app-getting-started>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Content\">\r\n        <mat-icon>menu</mat-icon>\r\n        <span>Data</span>\r\n      </div>\r\n      <app-data *matTabContent></app-data>\r\n    </mat-tab>\r\n\r\n    <mat-tab *ngIf=\"!dialogSettings.IsContent\">\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Query Designer\">\r\n        <mat-icon>filter_list</mat-icon>\r\n        <span>Queries</span>\r\n      </div>\r\n      <app-queries *matTabContent></app-queries>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Views / Templates\">\r\n        <mat-icon>layers</mat-icon>\r\n        <span>Views</span>\r\n      </div>\r\n      <app-views *matTabContent></app-views>\r\n    </mat-tab>\r\n\r\n    <mat-tab *ngIf=\"!dialogSettings.IsContent\">\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"WebApi / Data\">\r\n        <mat-icon>offline_bolt</mat-icon>\r\n        <span>WebApi</span>\r\n      </div>\r\n      <app-web-api *matTabContent></app-web-api>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"App Settings\">\r\n        <mat-icon>settings_applications</mat-icon>\r\n        <span>App</span>\r\n      </div>\r\n      <app-app-configuration *matTabContent></app-app-configuration>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { DialogSettings } from '../models/dialog-settings.model';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\nimport { GlobalConfigurationService } from '../../../../../edit/shared/services/global-configuration.service';\r\n\r\n@Component({\r\n  selector: 'app-app-administration-nav',\r\n  templateUrl: './app-administration-nav.component.html',\r\n  styleUrls: ['./app-administration-nav.component.scss']\r\n})\r\nexport class AppAdministrationNavComponent implements OnInit, OnDestroy {\r\n  tabs = ['home', 'data', 'queries', 'views', 'web-api', 'app']; // tabs have to match template and filter below\r\n  tabIndex: number;\r\n  dialogSettings: DialogSettings;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AppAdministrationNavComponent>,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private globalConfigurationService: GlobalConfigurationService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.appDialogConfigService.getDialogSettings().subscribe(dialogSettings => {\r\n        if (dialogSettings.IsContent) {\r\n          this.tabs = this.tabs.filter(tab => !(tab === 'queries' || tab === 'web-api'));\r\n        }\r\n        this.tabIndex = this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path); // set tab initially\r\n        this.dialogSettings = dialogSettings; // needed to filter tabs\r\n      })\r\n    );\r\n    this.subscription.add(\r\n      // change tab when route changed\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\r\n        this.tabIndex = this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n\r\n  toggleDebugEnabled(event: MouseEvent) {\r\n    const enableDebugEvent = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (enableDebugEvent) { this.globalConfigurationService.toggleDebugEnabled(); }\r\n  }\r\n}\r\n","export type EavMetadataKey = 'attribute' | 'app' | 'entity' | 'contentType' | 'zone' | 'cmsObject';\r\nexport type EavKeyTypeKey = 'guid' | 'string' | 'number';\r\nexport type EavScopesKey = 'default' | 'app' | 'cmsSystem' | 'system';\r\nexport interface EavScopeOption { name: string; value: string; }\r\n\r\nexport const eavConstants = {\r\n  metadata: {\r\n    /** metadataOfAttribute */\r\n    attribute: { type: 2, target: 'EAV Field Properties' },\r\n    /** metadataOfApp */\r\n    app: { type: 3, target: 'App' },\r\n    /** metadataOfEntity */\r\n    entity: { type: 4, target: 'Entity' },\r\n    /** metadataOfContentType */\r\n    contentType: { type: 5, target: 'ContentType' },\r\n    /** metadataOfZone */\r\n    zone: { type: 6, target: 'Zone' },\r\n    /** metadataOfCmsObject */\r\n    cmsObject: { type: 10, target: 'CmsObject' },\r\n  },\r\n\r\n  /** Loopup type for the metadata, e.g. key=80adb152-efad-4aa4-855e-74c5ef230e1f is keyType=guid */\r\n  keyTypes: {\r\n    guid: 'guid',\r\n    string: 'string',\r\n    number: 'number',\r\n  },\r\n\r\n  /** Scopes */\r\n  scopes: {\r\n    /** This is the main schema and the data you usually see is from here */\r\n    default: { name: 'Default', value: '2SexyContent' },\r\n    /** This contains content-types for configuration, settings and resources of the app */\r\n    app: { name: 'App', value: '2SexyContent-App' },\r\n    /** This contains view-definitions, content-types etc. */\r\n    cmsSystem: { name: 'CMS System', value: '2SexyContent-System' },\r\n    /** This contains core EAV data like input-field configurations and similar */\r\n    system: { name: 'System', value: 'System' },\r\n  },\r\n\r\n  /** Content types where templates, permissions, etc. are stored */\r\n  contentTypes: {\r\n    /** Content type containing app templates (views) */\r\n    template: '2SexyContent-Template',\r\n    /** Content type containing permissions */\r\n    permissions: 'PermissionConfiguration',\r\n    /** Content type containing queries */\r\n    query: 'DataPipeline',\r\n    /** Content type containing content type metadata (app administration > data > metadata) */\r\n    contentType: 'ContentType',\r\n    /** Content type containing app settings */\r\n    settings: 'App-Settings',\r\n    /** Content type containing app resources */\r\n    resources: 'App-Resources',\r\n  },\r\n\r\n  pipelineDesigner: {\r\n    outDataSource: {\r\n      className: 'SexyContentTemplate',\r\n      in: ['ListContent', 'Default'],\r\n      name: '2sxc Target (View or API)',\r\n      description: 'The template/script which will show this data',\r\n      visualDesignerData: { Top: 20, Left: 200, Width: 700 }\r\n    },\r\n    defaultPipeline: {\r\n      dataSources: [\r\n        {\r\n          entityGuid: 'unsaved1',\r\n          partAssemblyAndType: 'ToSic.Eav.DataSources.Caches.ICache, ToSic.Eav.DataSources',\r\n          visualDesignerData: { Top: 440, Left: 440 }\r\n        }, {\r\n          entityGuid: 'unsaved2',\r\n          partAssemblyAndType: 'ToSic.Eav.DataSources.PublishingFilter, ToSic.Eav.DataSources',\r\n          visualDesignerData: { Top: 300, Left: 440 }\r\n        }, {\r\n          entityGuid: 'unsaved3',\r\n          partAssemblyAndType: 'ToSic.SexyContent.DataSources.ModuleDataSource, ToSic.SexyContent',\r\n          visualDesignerData: { Top: 170, Left: 440 }\r\n        }\r\n      ],\r\n      streamWiring: [\r\n        { From: 'unsaved1', Out: 'Default', To: 'unsaved2', In: 'Default' },\r\n        { From: 'unsaved1', Out: 'Drafts', To: 'unsaved2', In: 'Drafts' },\r\n        { From: 'unsaved1', Out: 'Published', To: 'unsaved2', In: 'Published' },\r\n        { From: 'unsaved2', Out: 'Default', To: 'unsaved3', In: 'Default' },\r\n        { From: 'unsaved3', Out: 'ListContent', To: 'Out', In: 'ListContent' },\r\n        { From: 'unsaved3', Out: 'Default', To: 'Out', In: 'Default' }\r\n      ]\r\n    },\r\n    testParameters: '[Demo:Demo]=true',\r\n  },\r\n};\r\n"],"sourceRoot":"webpack:///"}