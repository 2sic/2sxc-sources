{"version":3,"sources":["./src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.html","./src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.ts","./src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.html","./src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.ts","./src/app/apps-management/constants/app.patterns.ts","./src/app/apps-management/apps-list/apps-list.component.ts","./src/app/apps-management/apps-list/apps-list.component.html","./src/app/apps-management/ag-grid-components/enable-languages-status/enable-languages-status.component.ts","./src/app/apps-management/ag-grid-components/enable-languages-status/enable-languages-status.component.html","./src/app/apps-management/enable-languages/enable-languages.component.ts","./src/app/apps-management/enable-languages/enable-languages.component.html","./src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.html","./src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.ts","./src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.html","./src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.ts","./src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.html","./src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.ts","./src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.ts","./src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.html","./src/app/apps-management/manage-features/manage-features.component.html","./src/app/apps-management/manage-features/manage-features.component.ts","./src/app/apps-management/sxc-insights/sxc-insights.component.html","./src/app/apps-management/sxc-insights/sxc-insights.component.ts","./src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./src/app/apps-management/apps-management-nav/apps-management-nav.component.ts"],"names":["agInit","params","this","value","refresh","AppsListShowComponent","app","data","deleteApp","onDelete","flushCache","onFlush","AppsListActionsComponent","appNamePattern","router","route","appsListService","snackBar","modules","gridOptions","frameworkComponents","booleanFilterComponent","idFieldComponent","appsListShowComponent","appsListActionsComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","valueGetter","idValueGetter","showValueGetter","flex","minWidth","onCellClicked","openApp","bind","cellRendererParams","flushApp","type","subscription","Subscription","hasChild","snapshot","firstChild","ngOnInit","fetchAppsList","refreshOnChildClosed","ngOnDestroy","unsubscribe","browseCatalog","window","open","createApp","name","prompt","trim","replace","match","create","subscribe","duration","importApp","navigate","relativeTo","getAll","apps","Id","Guid","IsHidden","result","Name","delete","alert","confirm","toString","parent","add","events","pipe","event","hadChild","AppsListComponent","toggleLanguage","onEnabledToggle","EnableLanguagesStatusComponent","languagesService","enableLanguagesStatusComponent","handleNameClicked","fetchLanguages","Code","language","save","IsEnabled","languages","EnableLanguagesComponent","FeaturesListEnabledComponent","FeaturesListUiComponent","FeaturesListPublicComponent","FeaturesListSecurityComponent","sanitizer","featuresConfigService","showManagement","showSpinner","featuresListEnabledComponent","featuresListUiComponent","featuresListPublicComponent","featuresListSecurityComponent","openFeature","valueGetterDateTime","fetchFeatures","destroyManagementListener","toggleManagement","openManagement","id","features","managementUrl","bypassSecurityTrustResourceUrl","getManageFeaturesUrl","url","indexOf","Error","managementCallbackBound","managementCallback","addEventListener","managementListener","element","listener","origin","endsWith","featuresString","JSON","stringify","saveFeatures","e","removeEventListener","rawValue","colDef","substring","ManageFeaturesComponent","sxcInsightsService","positiveWholeNumber","actionsDiabled","openInsights","activatePageLog","pageLogDuration","res","undefined","SxcInsightsComponent","dialogRef","context","tabs","zoneId","tabIndex","path","closeDialog","close","changeTab","index","AppsManagementNavComponent"],"mappings":"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","file":"apps-management-nav-component.b1ce9ac92afeaca63d4e.js","sourcesContent":["<div class=\"icon-container\">\r\n  <mat-icon matTooltip=\"Show this app to users\" *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon matTooltip=\"Don't show this app to users\" *ngIf=\"!value\">visibility_off</mat-icon>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-show',\r\n  templateUrl: './apps-list-show.component.html',\r\n  styleUrls: ['./apps-list-show.component.scss']\r\n})\r\nexport class AppsListShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matTooltip=\"FlushCache\" (click)=\"flushCache()\">\r\n    <mat-icon>cached</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"app.IsApp\" matTooltip=\"Delete\" (click)=\"deleteApp()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"!app.IsApp\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss']\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  private params: AppsListActionsParams;\r\n  app: App;\r\n\r\n  agInit(params: AppsListActionsParams) {\r\n    this.params = params;\r\n    this.app = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteApp() {\r\n    this.params.onDelete(this.app);\r\n  }\r\n\r\n  flushCache() {\r\n    this.params.onFlush(this.app);\r\n  }\r\n}\r\n","export const appNamePattern = /^[A-Za-z](?:[A-Za-z0-9\\s\\(\\)]+)*$/;\r\nexport const appNameError = 'Standard letters, numbers, spaces and round brackets are allowed. Must start with a letter.';\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AllCommunityModules, GridOptions, CellClickedEvent, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppsListShowComponent } from '../ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { AppsListActionsComponent } from '../ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from '../ag-grid-components/apps-list-actions/apps-list-actions.models';\r\nimport { appNamePattern, appNameError } from '../constants/app.patterns';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss']\r\n})\r\nexport class AppsListComponent implements OnInit, OnDestroy {\r\n  apps: App[];\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      appsListShowComponent: AppsListShowComponent,\r\n      appsListActionsComponent: AppsListActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Show', field: 'IsHidden', width: 70, headerClass: 'dense', cellClass: 'icons no-outline', sortable: true,\r\n        filter: 'booleanFilterComponent', cellRenderer: 'appsListShowComponent', valueGetter: this.showValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', onCellClicked: this.openApp.bind(this),\r\n      },\r\n      {\r\n        width: 80, cellClass: 'secondary-action no-padding', cellRenderer: 'appsListActionsComponent',\r\n        cellRendererParams: {\r\n          onDelete: this.deleteApp.bind(this),\r\n          onFlush: (app) => this.flushApp(app),\r\n        } as AppsListActionsParams,\r\n      },\r\n      {\r\n        headerName: 'Folder', field: 'Folder', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Version', field: 'Version', width: 70, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      }, {\r\n        headerName: 'Items', field: 'Items', width: 70, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', type: 'numericColumn',\r\n      },\r\n\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n  private hasChild: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchAppsList();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  browseCatalog() {\r\n    window.open('http://2sxc.org/apps');\r\n  }\r\n\r\n  createApp() {\r\n    let name = prompt('Enter App Name (will also be used for folder)');\r\n    if (name === null) { return; }\r\n    name = name.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs\r\n    while (!name.match(appNamePattern)) {\r\n      name = prompt(`Enter App Name (will also be used for folder)\\n${appNameError}`, name);\r\n      if (name === null) { return; }\r\n      name = name.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs\r\n    }\r\n    this.snackBar.open('Saving...');\r\n    this.appsListService.create(name).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.fetchAppsList();\r\n    });\r\n  }\r\n\r\n  importApp() {\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private fetchAppsList() {\r\n    this.appsListService.getAll().subscribe(apps => {\r\n      this.apps = apps;\r\n    });\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const app: App = params.data;\r\n    return `ID: ${app.Id}\\nGUID: ${app.Guid}`;\r\n  }\r\n\r\n  private showValueGetter(params: ValueGetterParams) {\r\n    const app: App = params.data;\r\n    return !app.IsHidden;\r\n  }\r\n\r\n  private deleteApp(app: App) {\r\n    // tslint:disable-next-line:max-line-length\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) {\r\n      return;\r\n    } else if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open(`Deleting...`);\r\n      this.appsListService.delete(app.Id).subscribe(() => {\r\n        this.snackBar.open(`Deleted`, null, { duration: 2000 });\r\n        this.fetchAppsList();\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App) {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open(`Flushing cache...`);\r\n    this.appsListService.flushCache(app.Id).subscribe(() => {\r\n      this.snackBar.open(`Cache flushed`, null, { duration: 2000 });\r\n    });\r\n  }\r\n\r\n  private openApp(params: CellClickedEvent) {\r\n    const appId = (params.data as App).Id;\r\n    this.router.navigate([appId.toString()], { relativeTo: this.route.parent });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        const hadChild = this.hasChild;\r\n        this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n        if (!this.hasChild && hadChild) {\r\n          this.fetchAppsList();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps\" [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\">\r\n    <eco-fab-speed-dial-trigger spin=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab matTooltip=\"Find more apps\" (click)=\"browseCatalog()\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab matTooltip=\"Import app\" (click)=\"importApp()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab matTooltip=\"Create app\" (click)=\"createApp()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { EnableLanguage } from '../../models/enable-language.model';\r\nimport { EnableLanguagesStatusParams } from './enable-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-enable-languages-status',\r\n  templateUrl: './enable-languages-status.component.html',\r\n  styleUrls: ['./enable-languages-status.component.scss']\r\n})\r\nexport class EnableLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  private params: EnableLanguagesStatusParams;\r\n  value: boolean;\r\n\r\n  agInit(params: EnableLanguagesStatusParams) {\r\n    this.params = params;\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage() {\r\n    const language: EnableLanguage = this.params.data;\r\n    this.params.onEnabledToggle(language);\r\n  }\r\n}\r\n","<div class=\"cell-box\">\r\n  <mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage()\"></mat-slide-toggle>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AllCommunityModules, GridOptions, CellClickedEvent, ValueGetterParams } from '@ag-grid-community/all-modules';\r\n\r\nimport { EnableLanguagesService } from '../services/enable-languages.service';\r\nimport { EnableLanguage } from '../models/enable-language.model';\r\nimport { EnableLanguagesStatusComponent } from '../ag-grid-components/enable-languages-status/enable-languages-status.component';\r\nimport { EnableLanguagesStatusParams } from '../ag-grid-components/enable-languages-status/enable-languages-status.models';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\n\r\n@Component({\r\n  selector: 'app-enable-languages',\r\n  templateUrl: './enable-languages.component.html',\r\n  styleUrls: ['./enable-languages.component.scss']\r\n})\r\nexport class EnableLanguagesComponent implements OnInit {\r\n  languages: EnableLanguage[];\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      enableLanguagesStatusComponent: EnableLanguagesStatusComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Code', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Culture', flex: 2, minWidth: 250, cellClass: 'primary-action highlight no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', onCellClicked: this.handleNameClicked.bind(this),\r\n      },\r\n      {\r\n        headerName: 'Status', field: 'IsEnabled', width: 72, headerClass: 'dense', cellClass: 'no-padding no-outline',\r\n        cellRenderer: 'enableLanguagesStatusComponent', sortable: true, filter: 'booleanFilterComponent',\r\n        cellRendererParams: {\r\n          onEnabledToggle: this.toggleLanguage.bind(this),\r\n        } as EnableLanguagesStatusParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private languagesService: EnableLanguagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchLanguages();\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const language: EnableLanguage = params.data;\r\n    return `ID: ${language.Code}`;\r\n  }\r\n\r\n  private handleNameClicked(params: CellClickedEvent) {\r\n    const language: EnableLanguage = params.data;\r\n    this.toggleLanguage(language);\r\n  }\r\n\r\n  private toggleLanguage(language: EnableLanguage) {\r\n    this.languagesService.save(language.Code, !language.IsEnabled).subscribe(() => {\r\n      this.fetchLanguages();\r\n    });\r\n  }\r\n\r\n  private fetchLanguages() {\r\n    this.languagesService.getAll().subscribe(languages => {\r\n      this.languages = languages;\r\n    });\r\n  }\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages\" [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon matTooltip=\"Feature is enabled\" *ngIf=\"value\">toggle_on</mat-icon>\r\n  <mat-icon matTooltip=\"Feature is disabled\" *ngIf=\"!value\">toggle_off</mat-icon>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss']\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-features-list-ui',\r\n  templateUrl: './features-list-ui.component.html',\r\n  styleUrls: ['./features-list-ui.component.scss']\r\n})\r\nexport class FeaturesListUiComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">person</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-features-list-public',\r\n  templateUrl: './features-list-public.component.html',\r\n  styleUrls: ['./features-list-public.component.scss']\r\n})\r\nexport class FeaturesListPublicComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-features-list-security',\r\n  templateUrl: './features-list-security.component.html',\r\n  styleUrls: ['./features-list-security.component.scss']\r\n})\r\nexport class FeaturesListSecurityComponent implements ICellRendererAngularComp {\r\n\r\n  agInit(params: ICellRendererParams) {\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon matTooltip=\"Security Status still work-in progress\" class=\"feature-security-icon\">help</mat-icon>\r\n</div>\r\n","<div class=\"grid-wrapper-nav\" [ngClass]=\"{ 'iframe-wrapper': showManagement }\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [ngClass]=\"{ 'force-hide': showManagement }\" [rowData]=\"features\"\r\n    [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n\r\n  <mat-spinner class=\"spinner\" *ngIf=\"showSpinner\" mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n\r\n  <iframe class=\"iframe\" *ngIf=\"showManagement\" [src]=\"managementUrl\"></iframe>\r\n\r\n  <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Manage features\" (click)=\"toggleManagement()\">\r\n    <mat-icon>tune</mat-icon>\r\n  </button>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { SafeUrl, DomSanitizer } from '@angular/platform-browser';\r\nimport { AllCommunityModules, GridOptions, ICellRendererParams, ValueGetterParams, CellClickedEvent } from '@ag-grid-community/all-modules';\r\n\r\nimport { Feature } from '../models/feature.model';\r\nimport { FeaturesListEnabledComponent } from '../ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListUiComponent } from '../ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { FeaturesListPublicComponent } from '../ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from '../ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { ElementEventListener } from '../../../../../shared/element-event-listener.model';\r\nimport { ManageFeaturesMessageData } from '../models/manage-features-message-data.model';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\n\r\n@Component({\r\n  selector: 'app-manage-features',\r\n  templateUrl: './manage-features.component.html',\r\n  styleUrls: ['./manage-features.component.scss']\r\n})\r\nexport class ManageFeaturesComponent implements OnInit, OnDestroy {\r\n  features: Feature[];\r\n  showManagement = false;\r\n  showSpinner = false;\r\n  managementUrl: SafeUrl;\r\n  managementListener: ElementEventListener;\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      featuresListEnabledComponent: FeaturesListEnabledComponent,\r\n      featuresListUiComponent: FeaturesListUiComponent,\r\n      featuresListPublicComponent: FeaturesListPublicComponent,\r\n      featuresListSecurityComponent: FeaturesListSecurityComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Enabled', field: 'enabled', width: 80, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListEnabledComponent',\r\n      },\r\n      {\r\n        headerName: 'UI', field: 'ui', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListUiComponent',\r\n      },\r\n      {\r\n        headerName: 'Public', field: 'public', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListPublicComponent'\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'id', flex: 2, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', onCellClicked: this.openFeature,\r\n        cellRenderer: (params: ICellRendererParams) => 'details (name lookup still WIP)',\r\n      },\r\n      {\r\n        headerName: 'Expires', field: 'expires', flex: 1, minWidth: 200, cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter', valueGetter: this.valueGetterDateTime,\r\n      },\r\n      { headerName: 'Security', width: 70, cellClass: 'no-outline', cellRenderer: 'featuresListSecurityComponent' },\r\n    ],\r\n  };\r\n\r\n  constructor(private sanitizer: DomSanitizer, private featuresConfigService: FeaturesConfigService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchFeatures();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyManagementListener();\r\n  }\r\n\r\n  toggleManagement() {\r\n    this.showManagement = !this.showManagement;\r\n    this.destroyManagementListener();\r\n    if (this.showManagement) {\r\n      this.openManagement();\r\n    }\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const feature: Feature = params.data;\r\n    return `GUID: ${feature.id}`;\r\n  }\r\n\r\n  private openFeature(params: CellClickedEvent) {\r\n    window.open(`https://2sxc.org/r/f/${params.value}`, '_blank');\r\n  }\r\n\r\n  private fetchFeatures() {\r\n    this.featuresConfigService.getAll().subscribe(features => {\r\n      this.features = features;\r\n    });\r\n  }\r\n\r\n  private openManagement() {\r\n    this.showSpinner = true;\r\n    this.managementUrl = this.sanitizer.bypassSecurityTrustResourceUrl(''); // reset url\r\n\r\n    this.featuresConfigService.getManageFeaturesUrl().subscribe(url => {\r\n      this.showSpinner = false;\r\n\r\n      if (url.indexOf('error: user needs host permissions') > -1) {\r\n        this.showManagement = false;\r\n        throw new Error('User needs host permissions!');\r\n      }\r\n\r\n      this.managementUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n      const managementCallbackBound = this.managementCallback.bind(this);\r\n      // event to receive message from iframe\r\n      window.addEventListener('message', managementCallbackBound);\r\n      this.managementListener = { element: window, type: 'message', listener: managementCallbackBound };\r\n    });\r\n  }\r\n\r\n  /** This should await callbacks from the iframe and if it gets a valid callback containing a json, it should send it to the server */\r\n  private managementCallback(event: MessageEvent) {\r\n    this.destroyManagementListener();\r\n    if (typeof (event.data) === 'undefined') { return; }\r\n    if (event.origin.endsWith('2sxc.org') === false) { return; } // something from an unknown domain, let's ignore it\r\n\r\n    try {\r\n      const features: ManageFeaturesMessageData = event.data;\r\n      const featuresString = JSON.stringify(features);\r\n      this.featuresConfigService.saveFeatures(featuresString).subscribe(result => {\r\n        this.showManagement = false;\r\n        this.fetchFeatures();\r\n      });\r\n    } catch (e) { }\r\n  }\r\n\r\n  private destroyManagementListener() {\r\n    if (this.managementListener) {\r\n      this.managementListener.element.removeEventListener(this.managementListener.type, this.managementListener.listener);\r\n      this.managementListener = null;\r\n    }\r\n  }\r\n\r\n  private valueGetterDateTime(params: ValueGetterParams) {\r\n    const rawValue: string = params.data[params.colDef.field];\r\n    if (!rawValue) { return null; }\r\n\r\n    // remove 'Z' and replace 'T'\r\n    return rawValue.substring(0, 19).replace('T', ' ');\r\n  }\r\n}\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>2sxc Insights for Super Users</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n          <mat-icon>speed</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This is to access a special section to see what is really in the server memory. It's intended for extensive\r\n      debugging\r\n      - see also <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Activate Page Level Logging</mat-card-title>\r\n      <div class=\"actions-box\"></div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div>\r\n        This will place insights-logs in the HTML of the user output for users with ?debug=true in the url. It can only\r\n        be activated for short periods of time.\r\n      </div>\r\n      <div class=\"activate-log-form\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration='ngModel'>\r\n        </mat-form-field>\r\n        <ng-container *ngIf=\"duration.touched && duration.errors\">\r\n          <app-field-hint *ngIf=\"duration.errors.pattern\" [isError]=\"true\">Only positive whole numbers</app-field-hint>\r\n        </ng-container>\r\n        <div class=\"actions\">\r\n          <button mat-raised-button color=\"accent\" (click)=\"activatePageLog()\"\r\n            [disabled]=\"actionsDiabled || !pageLogDuration || pageLogDuration < 0\">\r\n            Activate\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\n\r\n@Component({\r\n  selector: 'app-sxc-insights',\r\n  templateUrl: './sxc-insights.component.html',\r\n  styleUrls: ['./sxc-insights.component.scss']\r\n})\r\nexport class SxcInsightsComponent implements OnInit {\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[^-]\\d*$/;\r\n  actionsDiabled = false;\r\n\r\n  constructor(private sxcInsightsService: SxcInsightsService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openInsights() {\r\n    window.open('/desktopmodules/2sxc/api/sys/insights/help');\r\n  }\r\n\r\n  activatePageLog() {\r\n    this.actionsDiabled = true;\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.pageLogDuration = undefined;\r\n      this.actionsDiabled = false;\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n  }\r\n}\r\n","<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">\r\n    <div>Manage Apps in Zone {{ zoneId }}</div>\r\n    <button mat-icon-button matTooltip=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n<mat-tab-group dynamicHeight color=\"accent\" (selectedTabChange)=\"changeTab($event)\" [selectedIndex]=\"tabIndex\">\r\n  <mat-tab>\r\n    <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Apps\">\r\n      <mat-icon>star_border</mat-icon>\r\n      <span>Apps</span>\r\n    </div>\r\n    <app-apps-list *matTabContent></app-apps-list>\r\n  </mat-tab>\r\n\r\n  <mat-tab>\r\n    <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Languages\">\r\n      <mat-icon>translate</mat-icon>\r\n      <span>Languages</span>\r\n    </div>\r\n    <app-enable-languages *matTabContent></app-enable-languages>\r\n  </mat-tab>\r\n\r\n  <mat-tab>\r\n    <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"These settings apply to all zones/portals\">\r\n      <mat-icon>tune</mat-icon>\r\n      <span>Features</span>\r\n    </div>\r\n    <app-manage-features *matTabContent></app-manage-features>\r\n  </mat-tab>\r\n\r\n  <mat-tab>\r\n    <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Insights\">\r\n      <mat-icon>speed</mat-icon>\r\n      <span>2sxc Insights</span>\r\n    </div>\r\n    <app-sxc-insights *matTabContent></app-sxc-insights>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss']\r\n})\r\nexport class AppsManagementNavComponent implements OnInit, OnDestroy {\r\n  zoneId: number;\r\n  tabs = ['list', 'languages', 'features', 'sxc-insights']; // tabs order has to match template\r\n  tabIndex: number;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n  ) {\r\n    this.zoneId = this.context.zoneId;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // set tab initially\r\n    this.tabIndex = this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path);\r\n\r\n    this.subscription.add(\r\n      // change tab when route changed\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\r\n        this.tabIndex = this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}