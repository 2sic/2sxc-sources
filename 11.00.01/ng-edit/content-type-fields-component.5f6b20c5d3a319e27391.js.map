{"version":3,"sources":["./src/app/shared/constants/eav.constants.ts","./src/app/content-type-fields/ag-grid-components/content-type-fields-title/content-type-fields-title.component.ts","./src/app/content-type-fields/ag-grid-components/content-type-fields-title/content-type-fields-title.component.html","./src/app/content-type-fields/ag-grid-components/content-type-fields-input-type/content-type-fields-input-type.component.ts","./src/app/content-type-fields/ag-grid-components/content-type-fields-input-type/content-type-fields-input-type.component.html","./src/app/content-type-fields/ag-grid-components/content-type-fields-actions/content-type-fields-actions.component.html","./src/app/content-type-fields/ag-grid-components/content-type-fields-actions/content-type-fields-actions.component.ts","./src/app/content-type-fields/ag-grid-components/content-type-fields-type/content-type-fields-type.component.ts","./src/app/content-type-fields/ag-grid-components/content-type-fields-type/content-type-fields-type.component.html","./src/app/content-type-fields/content-type-fields.component.ts","./src/app/content-type-fields/content-type-fields.component.html"],"names":["eavConstants","metadata","attribute","type","target","app","entity","contentType","zone","cmsObject","keyTypes","guid","string","number","scopes","default","name","value","cmsSystem","system","contentTypes","template","permissions","query","settings","resources","pipelineDesigner","outDataSource","className","in","description","visualDesignerData","Top","Left","Width","defaultPipeline","dataSources","entityGuid","partAssemblyAndType","streamWiring","From","Out","To","In","testParameters","agInit","params","this","icon","refresh","ContentTypeFieldsTitleComponent","ContentTypeFieldsInputTypeComponent","field","data","showPermissions","InputType","StringWysiwyg","Type","Hyperlink","rename","onRename","delete","onDelete","openPermissions","onOpenPermissions","ContentTypeFieldsActionsComponent","ContentTypeFieldsTypeComponent","dialogRef","route","router","contentTypesService","contentTypesFieldsService","snackBar","enableTextSelection","columnDefs","rowDrag","width","cellClass","headerName","cellRenderer","onCellClicked","setTitle","bind","flex","minWidth","sortable","filter","editFieldMetadata","headerClass","changeInputType","valueGetter","inputTypeValueGetter","cellRendererParams","frameworkComponents","contentTypeFieldsTitleComponent","contentTypeFieldsTypeComponent","contentTypeFieldsInputTypeComponent","contentTypeFieldsActionsComponent","modules","gridOptions","getRowClass","EmptyDefault","sortApplied","filterApplied","rowDragSuppressed","subscription","Subscription","hasChild","snapshot","firstChild","contentTypeStaticName","paramMap","get","ngOnInit","retrieveContentType","toPromise","fetchFields","refreshOnChildClosed","ngOnDestroy","unsubscribe","onGridReady","gridApi","api","onRowDragEnter","event","onRowDragEnd","idArray","fields","map","Id","reOrder","subscribe","res","onRowDragMove","movingNode","node","overNode","overData","fromIndex","indexOf","toIndex","newStore","slice","moveInArray","setRowData","clearFocusedCell","arr","element","splice","onSortChanged","sortModel","getSortModel","length","suppressRowDrag","onFilterChanged","filterModel","getFilterModel","fieldsFiltered","Object","keys","shouldSuppress","setSuppressRowDrag","closeDialog","close","add","navigate","relativeTo","substring","getFields","form","items","createItemDefinition","JSON","stringify","metadataType","undefined","Metadata","EntityId","ContentTypeName","For","Target","Number","Prefill","Name","StaticName","open","duration","newName","prompt","trim","replace","match","confirm","events","pipe","hadChild","ContentTypeFieldsComponent"],"mappings":"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","file":"content-type-fields-component.5f6b20c5d3a319e27391.js","sourcesContent":["export type EavMetadataKey = 'attribute' | 'app' | 'entity' | 'contentType' | 'zone' | 'cmsObject';\r\nexport type EavKeyTypeKey = 'guid' | 'string' | 'number';\r\nexport type EavScopesKey = 'default' | 'app' | 'cmsSystem' | 'system';\r\nexport interface EavScopeOption { name: string; value: string; }\r\n\r\nexport const eavConstants = {\r\n  metadata: {\r\n    /** metadataOfAttribute */\r\n    attribute: { type: 2, target: 'EAV Field Properties' },\r\n    /** metadataOfApp */\r\n    app: { type: 3, target: 'App' },\r\n    /** metadataOfEntity */\r\n    entity: { type: 4, target: 'Entity' },\r\n    /** metadataOfContentType */\r\n    contentType: { type: 5, target: 'ContentType' },\r\n    /** metadataOfZone */\r\n    zone: { type: 6, target: 'Zone' },\r\n    /** metadataOfCmsObject */\r\n    cmsObject: { type: 10, target: 'CmsObject' },\r\n  },\r\n\r\n  /** Loopup type for the metadata, e.g. key=80adb152-efad-4aa4-855e-74c5ef230e1f is keyType=guid */\r\n  keyTypes: {\r\n    guid: 'guid',\r\n    string: 'string',\r\n    number: 'number',\r\n  },\r\n\r\n  /** Scopes */\r\n  scopes: {\r\n    /** This is the main schema and the data you usually see is from here */\r\n    default: { name: 'Default', value: '2SexyContent' },\r\n    /** This contains content-types for configuration, settings and resources of the app */\r\n    app: { name: 'App', value: '2SexyContent-App' },\r\n    /** This contains view-definitions, content-types etc. */\r\n    cmsSystem: { name: 'CMS System', value: '2SexyContent-System' },\r\n    /** This contains core EAV data like input-field configurations and similar */\r\n    system: { name: 'System', value: 'System' },\r\n  },\r\n\r\n  /** Content types where templates, permissions, etc. are stored */\r\n  contentTypes: {\r\n    /** Content type containing app templates (views) */\r\n    template: '2SexyContent-Template',\r\n    /** Content type containing permissions */\r\n    permissions: 'PermissionConfiguration',\r\n    /** Content type containing queries */\r\n    query: 'DataPipeline',\r\n    /** Content type containing content type metadata (app administration > data > metadata) */\r\n    contentType: 'ContentType',\r\n    /** Content type containing app settings */\r\n    settings: 'App-Settings',\r\n    /** Content type containing app resources */\r\n    resources: 'App-Resources',\r\n  },\r\n\r\n  pipelineDesigner: {\r\n    outDataSource: {\r\n      className: 'SexyContentTemplate',\r\n      in: ['ListContent', 'Default'],\r\n      name: '2sxc Target (View or API)',\r\n      description: 'The template/script which will show this data',\r\n      visualDesignerData: { Top: 20, Left: 200, Width: 700 }\r\n    },\r\n    defaultPipeline: {\r\n      dataSources: [\r\n        {\r\n          entityGuid: 'unsaved1',\r\n          partAssemblyAndType: 'ToSic.Eav.DataSources.Caches.ICache, ToSic.Eav.DataSources',\r\n          visualDesignerData: { Top: 440, Left: 440 }\r\n        }, {\r\n          entityGuid: 'unsaved2',\r\n          partAssemblyAndType: 'ToSic.Eav.DataSources.PublishingFilter, ToSic.Eav.DataSources',\r\n          visualDesignerData: { Top: 300, Left: 440 }\r\n        }, {\r\n          entityGuid: 'unsaved3',\r\n          partAssemblyAndType: 'ToSic.SexyContent.DataSources.ModuleDataSource, ToSic.SexyContent',\r\n          visualDesignerData: { Top: 170, Left: 440 }\r\n        }\r\n      ],\r\n      streamWiring: [\r\n        { From: 'unsaved1', Out: 'Default', To: 'unsaved2', In: 'Default' },\r\n        { From: 'unsaved1', Out: 'Drafts', To: 'unsaved2', In: 'Drafts' },\r\n        { From: 'unsaved1', Out: 'Published', To: 'unsaved2', In: 'Published' },\r\n        { From: 'unsaved2', Out: 'Default', To: 'unsaved3', In: 'Default' },\r\n        { From: 'unsaved3', Out: 'ListContent', To: 'Out', In: 'ListContent' },\r\n        { From: 'unsaved3', Out: 'Default', To: 'Out', In: 'Default' }\r\n      ]\r\n    },\r\n    testParameters: '[Demo:Demo]=true',\r\n  },\r\n};\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-title',\r\n  templateUrl: './content-type-fields-title.component.html',\r\n  styleUrls: ['./content-type-fields-title.component.scss']\r\n})\r\nexport class ContentTypeFieldsTitleComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    const value: boolean = params.value;\r\n    this.icon = value ? 'star' : 'star_border';\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Use as title field\">\r\n    <mat-icon>{{ icon }}</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-input-type',\r\n  templateUrl: './content-type-fields-input-type.component.html',\r\n  styleUrls: ['./content-type-fields-input-type.component.scss']\r\n})\r\nexport class ContentTypeFieldsInputTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div matRipple class=\"input-component highlight\">\r\n  <div class=\"text\">{{ value }}</div>\r\n  <div class=\"like-button\">\r\n    <mat-icon>arrow_drop_down</mat-icon>\r\n  </div>\r\n</div>\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Rename\" (click)=\"rename()\">\r\n    <mat-icon>settings</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Delete\" *ngIf=\"!field.IsTitle\" (click)=\"delete()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"field.IsTitle\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Permissions\" *ngIf=\"showPermissions\"\r\n    (click)=\"openPermissions()\">\r\n    <mat-icon>person</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { ContentTypeFieldsActionsParams } from './content-type-fields-actions.models';\r\nimport { Field } from '../../models/field.model';\r\nimport { InputTypeConstants } from '../../constants/input-type.constants';\r\nimport { DataTypeConstants } from '../../constants/data-type.constants';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-actions',\r\n  templateUrl: './content-type-fields-actions.component.html',\r\n  styleUrls: ['./content-type-fields-actions.component.scss']\r\n})\r\nexport class ContentTypeFieldsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ContentTypeFieldsActionsParams;\r\n  field: Field;\r\n  showPermissions: boolean;\r\n\r\n  agInit(params: ContentTypeFieldsActionsParams) {\r\n    this.params = params;\r\n    this.field = params.data;\r\n    this.showPermissions = this.field.InputType === InputTypeConstants.StringWysiwyg || this.field.Type === DataTypeConstants.Hyperlink;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  rename() {\r\n    this.params.onRename(this.field);\r\n  }\r\n\r\n  delete() {\r\n    this.params.onDelete(this.field);\r\n  }\r\n\r\n  openPermissions() {\r\n    this.params.onOpenPermissions(this.field);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\nimport { calculateTypeIcon } from '../../content-type-fields.helpers';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields-type',\r\n  templateUrl: './content-type-fields-type.component.html',\r\n  styleUrls: ['./content-type-fields-type.component.scss']\r\n})\r\nexport class ContentTypeFieldsTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  icon: string;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.icon = calculateTypeIcon(this.value);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\" [matTooltip]=\"value\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n// tslint:disable-next-line:max-line-length\r\nimport { GridReadyEvent, AllCommunityModules, ColDef, RowDragEvent, GridApi, CellClickedEvent, SortChangedEvent, FilterChangedEvent, ValueGetterParams, GridOptions } from '@ag-grid-community/all-modules';\r\n\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentTypesFieldsService } from './services/content-types-fields.service';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { Field } from './models/field.model';\r\nimport { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm, AddItem, EditItem } from '../shared/models/edit-form.model';\r\nimport { contentTypeNamePattern, contentTypeNameError } from '../app-administration/constants/content-type.patterns';\r\nimport { ContentTypeFieldsTitleComponent } from './ag-grid-components/content-type-fields-title/content-type-fields-title.component';\r\nimport { ContentTypeFieldsInputTypeComponent } from './ag-grid-components/content-type-fields-input-type/content-type-fields-input-type.component';\r\nimport { ContentTypeFieldsActionsComponent } from './ag-grid-components/content-type-fields-actions/content-type-fields-actions.component';\r\nimport { ContentTypeFieldsActionsParams } from './ag-grid-components/content-type-fields-actions/content-type-fields-actions.models';\r\nimport { ContentTypeFieldsTypeComponent } from './ag-grid-components/content-type-fields-type/content-type-fields-type.component';\r\nimport { InputTypeConstants } from './constants/input-type.constants';\r\n\r\n@Component({\r\n  selector: 'app-content-type-fields',\r\n  templateUrl: './content-type-fields.component.html',\r\n  styleUrls: ['./content-type-fields.component.scss']\r\n})\r\nexport class ContentTypeFieldsComponent implements OnInit, OnDestroy {\r\n  fields: Field[];\r\n  enableTextSelection = true;\r\n\r\n  private gridApi: GridApi;\r\n  columnDefs: ColDef[] = [\r\n    { rowDrag: true, width: 18, cellClass: 'no-padding' },\r\n    {\r\n      headerName: 'Title', field: 'IsTitle', width: 42, cellClass: 'secondary-action no-padding no-outline',\r\n      cellRenderer: 'contentTypeFieldsTitleComponent', onCellClicked: this.setTitle.bind(this),\r\n    },\r\n    {\r\n      headerName: 'Name', field: 'StaticName', flex: 2, minWidth: 250, cellClass: 'primary-action highlight',\r\n      sortable: true, filter: 'agTextColumnFilter', onCellClicked: this.editFieldMetadata.bind(this),\r\n    },\r\n    {\r\n      headerName: 'Type', field: 'Type', width: 70, headerClass: 'dense', cellClass: 'no-outline', sortable: true,\r\n      filter: 'agTextColumnFilter', cellRenderer: 'contentTypeFieldsTypeComponent',\r\n    },\r\n    {\r\n      headerName: 'Input', field: 'InputType', width: 160, cellClass: 'secondary-action no-padding',\r\n      sortable: true, filter: 'agTextColumnFilter', cellRenderer: 'contentTypeFieldsInputTypeComponent',\r\n      onCellClicked: this.changeInputType.bind(this), valueGetter: this.inputTypeValueGetter,\r\n    },\r\n    {\r\n      width: 120, cellClass: 'secondary-action no-padding', cellRenderer: 'contentTypeFieldsActionsComponent',\r\n      cellRendererParams: {\r\n        onRename: this.rename.bind(this),\r\n        onDelete: this.delete.bind(this),\r\n        onOpenPermissions: this.openPermissions.bind(this),\r\n      } as ContentTypeFieldsActionsParams,\r\n    },\r\n    {\r\n      headerName: 'Label', field: 'Metadata.All.Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Notes', field: 'Metadata.All.Notes', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    contentTypeFieldsTitleComponent: ContentTypeFieldsTitleComponent,\r\n    contentTypeFieldsTypeComponent: ContentTypeFieldsTypeComponent,\r\n    contentTypeFieldsInputTypeComponent: ContentTypeFieldsInputTypeComponent,\r\n    contentTypeFieldsActionsComponent: ContentTypeFieldsActionsComponent,\r\n  };\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    getRowClass(params: any) {\r\n      const field: Field = params.data;\r\n      return field.InputType === InputTypeConstants.EmptyDefault ? 'group-row' : '';\r\n    }\r\n  };\r\n\r\n  private sortApplied = false;\r\n  private filterApplied = false;\r\n  private rowDragSuppressed = false;\r\n  private contentTypeStaticName: string;\r\n  private contentType: ContentType;\r\n  private subscription = new Subscription();\r\n  private hasChild: boolean;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ContentTypeFieldsComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private contentTypesService: ContentTypesService,\r\n    private contentTypesFieldsService: ContentTypesFieldsService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.hasChild = !!this.route.snapshot.firstChild;\r\n    this.contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.contentType = await this.contentTypesService.retrieveContentType(this.contentTypeStaticName).toPromise();\r\n    await this.fetchFields();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  onGridReady(params: GridReadyEvent) {\r\n    this.gridApi = params.api;\r\n  }\r\n\r\n  onRowDragEnter(event: RowDragEvent) {\r\n    this.enableTextSelection = false;\r\n  }\r\n\r\n  onRowDragEnd(event: RowDragEvent) {\r\n    this.enableTextSelection = true;\r\n    const idArray = this.fields.map(field => field.Id);\r\n    this.contentTypesFieldsService.reOrder(idArray, this.contentType).subscribe(res => {\r\n      this.fetchFields();\r\n    });\r\n  }\r\n\r\n  onRowDragMove(event: RowDragEvent) {\r\n    const movingNode = event.node;\r\n    const overNode = event.overNode;\r\n    const rowNeedsToMove = movingNode !== overNode;\r\n    if (rowNeedsToMove) {\r\n      const movingData: Field = movingNode.data;\r\n      const overData: Field = overNode.data;\r\n      const fromIndex = this.fields.indexOf(movingData);\r\n      const toIndex = this.fields.indexOf(overData);\r\n      const newStore = this.fields.slice();\r\n      this.moveInArray(newStore, fromIndex, toIndex);\r\n      this.fields = newStore;\r\n      this.gridApi.setRowData(newStore);\r\n      this.gridApi.clearFocusedCell();\r\n    }\r\n  }\r\n\r\n  private moveInArray(arr: Field[], fromIndex: number, toIndex: number) {\r\n    const element = arr[fromIndex];\r\n    arr.splice(fromIndex, 1);\r\n    arr.splice(toIndex, 0, element);\r\n  }\r\n\r\n  onSortChanged(params: SortChangedEvent) {\r\n    const sortModel = this.gridApi.getSortModel();\r\n    this.sortApplied = sortModel.length > 0;\r\n    this.suppressRowDrag();\r\n  }\r\n\r\n  onFilterChanged(params: FilterChangedEvent) {\r\n    const filterModel = this.gridApi.getFilterModel();\r\n    const fieldsFiltered = Object.keys(filterModel);\r\n    this.filterApplied = fieldsFiltered.length > 0;\r\n    this.suppressRowDrag();\r\n  }\r\n\r\n  private suppressRowDrag() {\r\n    const shouldSuppress = this.sortApplied || this.filterApplied;\r\n    if (shouldSuppress && !this.rowDragSuppressed) {\r\n      this.rowDragSuppressed = true;\r\n      this.gridApi.setSuppressRowDrag(true);\r\n    } else if (!shouldSuppress && this.rowDragSuppressed) {\r\n      this.rowDragSuppressed = false;\r\n      this.gridApi.setSuppressRowDrag(false);\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  add() {\r\n    this.router.navigate([`add/${this.contentTypeStaticName}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private inputTypeValueGetter(params: ValueGetterParams) {\r\n    const field: Field = params.data;\r\n    const inputType = field.InputType.substring(field.InputType.indexOf('-') + 1);\r\n    return inputType;\r\n  }\r\n\r\n  private async fetchFields() {\r\n    this.fields = await this.contentTypesFieldsService.getFields(this.contentType).toPromise();\r\n  }\r\n\r\n  private editFieldMetadata(params: CellClickedEvent) {\r\n    const field: Field = params.data;\r\n    const form: EditForm = {\r\n      items: [\r\n        this.createItemDefinition(field, 'All'),\r\n        this.createItemDefinition(field, field.Type),\r\n        this.createItemDefinition(field, field.InputType)\r\n      ],\r\n    };\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private createItemDefinition(field: Field, metadataType: string): AddItem | EditItem {\r\n    return field.Metadata[metadataType] !== undefined\r\n      ? { EntityId: field.Metadata[metadataType].Id } // if defined, return the entity-number to edit\r\n      : {\r\n        ContentTypeName: '@' + metadataType, // otherwise the content type for new-assignment\r\n        For: {\r\n          Target: eavConstants.metadata.attribute.target,\r\n          Number: field.Id\r\n        },\r\n        Prefill: { Name: field.StaticName },\r\n      };\r\n  }\r\n\r\n  private setTitle(params: CellClickedEvent) {\r\n    const field: Field = params.data;\r\n    this.snackBar.open('Setting title...');\r\n    this.contentTypesFieldsService.setTitle(field, this.contentType).subscribe(() => {\r\n      this.snackBar.open('Title set', null, { duration: 2000 });\r\n      this.fetchFields();\r\n    });\r\n  }\r\n\r\n  private changeInputType(params: CellClickedEvent) {\r\n    const field: Field = params.data;\r\n    this.router.navigate([`update/${this.contentTypeStaticName}/${field.Id}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private rename(field: Field) {\r\n    let newName = prompt(`What new name would you like for '${field.StaticName}' (${field.Id})?`, field.StaticName);\r\n    if (newName === null) { return; }\r\n    newName = newName.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs\r\n    if (newName === field.StaticName) { return; }\r\n    while (!newName.match(contentTypeNamePattern)) {\r\n      newName = prompt(`What new name would you like for '${field.StaticName}' (${field.Id})?\\n${contentTypeNameError}`, newName);\r\n      if (newName === null) { return; }\r\n      newName = newName.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs\r\n      if (newName === field.StaticName) { return; }\r\n    }\r\n    this.snackBar.open('Saving...');\r\n    this.contentTypesFieldsService.rename(field, this.contentType, newName).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.fetchFields();\r\n    });\r\n  }\r\n\r\n  private delete(field: Field) {\r\n    if (!confirm(`Are you sure you want to delete '${field.StaticName}' (${field.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.contentTypesFieldsService.delete(field, this.contentType).subscribe(res => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchFields();\r\n    });\r\n  }\r\n\r\n  private openPermissions(field: Field) {\r\n    this.router.navigate(\r\n      [`permissions/${eavConstants.metadata.attribute.type}/${eavConstants.keyTypes.number}/${field.Id}`],\r\n      { relativeTo: this.route }\r\n    );\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        const hadChild = this.hasChild;\r\n        this.hasChild = !!this.route.snapshot.firstChild;\r\n        if (!this.hasChild && hadChild) {\r\n          this.fetchFields();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">\r\n    <div>Content Type Fields</div>\r\n    <button mat-icon-button matTooltip=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<div class=\"grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"fields\" [columnDefs]=\"columnDefs\" [modules]=\"modules\"\r\n    [frameworkComponents]=\"frameworkComponents\" [enableCellTextSelection]=\"enableTextSelection\"\r\n    [suppressScrollOnNewData]=\"true\" [animateRows]=\"true\" [animateRows]=\"true\" [accentedSort]=\"true\" [valueCache]=\"true\"\r\n    [gridOptions]=\"gridOptions\" [headerHeight]=\"32\" (rowDragEnter)=\"onRowDragEnter($event)\"\r\n    (rowDragEnd)=\"onRowDragEnd($event)\" (rowDragMove)=\"onRowDragMove($event)\" (gridReady)=\"onGridReady($event)\"\r\n    (sortChanged)=\"onSortChanged($event)\" (filterChanged)=\"onFilterChanged($event)\">\r\n  </ag-grid-angular>\r\n\r\n  <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Add fields\" (click)=\"add()\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}