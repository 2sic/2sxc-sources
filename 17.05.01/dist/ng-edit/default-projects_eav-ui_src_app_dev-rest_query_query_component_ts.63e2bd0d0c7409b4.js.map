{"version":3,"file":"default-projects_eav-ui_src_app_dev-rest_query_query_component_ts.63e2bd0d0c7409b4.js","mappings":"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","names":["i0","DevRestUrlsAndCodeComponent_For_2_Conditional_22_Conditional_3_Conditional_3_Template","apiCall_r1","browseUrl","ctx_r8","data","scenario","useVirtual","_r13","$implicit","ctx_r11","callApiGet","url","DevRestUrlsAndCodeComponent_For_2_Conditional_22_Conditional_3_Template","hint_r21","type","message","code_r15","_r27","ctx_r26","copyCode","code","DevRestUrlsAndCodeComponent_For_2_For_24_For_11_Template","title","description","hints","DevRestUrlsAndCodeComponent_For_2_Conditional_22_Template","DevRestUrlsAndCodeComponent_For_2_For_24_Template","verb","teaser","instructions","ctx_r0","enableButton","DevRestUrlsAndCodeComponent","constructor","snackBar","http","this","get","subscribe","res","console","log","openSnackBar","text","copyToClipboard","action","open","duration","static","t","i1","i2","_angular_core__WEBPACK_IMPORTED_MODULE_2__","In1","selectors","inputs","standalone","features","decls","vars","consts","template","rf","ctx","DevRestUrlsAndCodeComponent_For_2_Template","apiCalls","MatExpansionModule","i3","MatButtonModule","i4","TippyStandaloneDirective","MatIconModule","i5","InfoBoxComponent","styles","getIcon","infoBoxIconMap","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ngContentSelectors","_c0","InfoBoxComponent_Conditional_3_Template","generateQueryCalls","$2sxc","context","root","id","streamNames","urlParams","virtual","startsWith","length","contextParams","tabId","moduleId","directUrl","apiUrl","pathWithParams","pathWithStream","ApiCall","snippetsGet","path","list","pathWithContext","inSameContext","push","CodeSample","hint$2sxc","in2sxc","endPointGetter","endPointGetWithParams","inSameSite","warningExternal","DevRestQueryIntroductionComponent","scenarios","AllScenarios","ngOnInit","core","_r8","ctx_r7","closeDialog","vm_r1","DevRestQueryComponent_Conditional_0_div_29_Conditional_5_Template","permissions","DevRestQueryComponent_Conditional_0_Conditional_6_Template","$event","ctx_r12","changeScenario","DevRestQueryComponent_Conditional_0_div_12_Template","DevRestQueryComponent_Conditional_0_div_16_Template","ctx_r14","updateStreams","ctx_r15","updateParams","DevRestQueryComponent_Conditional_0_div_29_Template","DevRestQueryComponent_Conditional_0_div_32_Template","name","isSideNavContent","key","streamNames$","value","urlParams$","DevRestQueryComponent","DevRestBase","appDialogConfigService","dialogRef","router","route","pipelinesService","permissionsService","dnnContext","super","hostClass","BehaviorSubject","includes","GoToDevRest","routeQuery","query$","combineLatest","paramMap","pipe","map","pm","paramQuery","getAll","eavConstants","contentTypes","query","share","queryGuid","all","find","q","Guid","permissions$","buildPermissionStream","root$","scenario$","dialogSettings$","dialogSettings","resolved","replace","Name","encodeURI","Context","App","Folder","rootBasedOnScenario","viewModel$","diag","buildBaseViewModel","event","next","target","i6","hostVars","hostBindings","PermissionsService","EntitiesService","AppDialogConfigService","PipelinesService","DevRestQueryComponent_Conditional_0_Template","DevRestQueryComponent_contFlowTmp","i7","i8","RouterOutlet","SelectorWithHelpComponent","MatTabsModule","i9","DevRestTabIntroductionComponent","DevRestTabExamplesComponent","MatFormFieldModule","i10","MatInputModule","i11","DevRestTabPermissionsComponent","DevRestHttpHeadersComponent","AsyncPipe","ctx_r3","itemId","DevRestTabExamplesComponent_Conditional_0_Template","DevRestTabExamplesComponent_Conditional_1_Template","DevRestTabExamplesComponent_Conditional_2_Template","DevRestTabExamplesComponent_Conditional_14_Template","needsAnonymous","permissionsHasAnonymous","folder","encapsulation","scenario_r1","notes","DevRestTabIntroductionComponent_For_31_Conditional_4_Template","DevRestTabIntroductionComponent_For_31_Template","gridOptions","buildGridOptions","openPermissions","navigate","GoToPermissions","getUrlContentType","permissionTarget","relativeTo","defaultGridOptions","columnDefs","headerName","field","width","headerClass","cellClass","split","valueGetter","params","Id","flex","minWidth","Title","Identity","Condition","Grant","DevRestTabPermissionsComponent_Conditional_8_Template","DevRestTabPermissionsComponent_Conditional_9_Template","DevRestTabPermissionsComponent_Conditional_10_Template","MatBadgeModule","AgGridModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/dev-rest/dev-rest-urls-and-code/dev-rest-urls-and-code.component.html","./projects/eav-ui/src/app/dev-rest/dev-rest-urls-and-code/dev-rest-urls-and-code.component.ts","./projects/eav-ui/src/app/dev-rest/info-box/info-box.component.html","./projects/eav-ui/src/app/dev-rest/info-box/info-box.component.ts","./projects/eav-ui/src/app/dev-rest/query/query-samples.ts","./projects/eav-ui/src/app/dev-rest/query/introduction/introduction.component.ts","./projects/eav-ui/src/app/dev-rest/query/introduction/introduction.component.html","./projects/eav-ui/src/app/dev-rest/query/query.component.html","./projects/eav-ui/src/app/dev-rest/query/query.component.ts","./projects/eav-ui/src/app/dev-rest/tab-examples/tab-examples.component.html","./projects/eav-ui/src/app/dev-rest/tab-examples/tab-examples.component.ts","./projects/eav-ui/src/app/dev-rest/tab-headers/tab-headers.component.ts","./projects/eav-ui/src/app/dev-rest/tab-headers/tab-headers.component.html","./projects/eav-ui/src/app/dev-rest/tab-introduction/tab-introduction.component.html","./projects/eav-ui/src/app/dev-rest/tab-introduction/tab-introduction.component.ts","./projects/eav-ui/src/app/dev-rest/tab-permissions/tab-permissions.component.html","./projects/eav-ui/src/app/dev-rest/tab-permissions/tab-permissions.component.ts"],"sourcesContent":["<mat-accordion multi class=\"rest-urls-accordion\">\r\n  @for (apiCall of data.apiCalls; track apiCall) {\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <div class=\"rest-urls-title\">\r\n            <code>{{ apiCall.verb }}</code>: <code>{{ apiCall.url }}</code>\r\n            <span>&nbsp;to {{ apiCall.teaser }}</span>\r\n          </div>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <mat-panel-description style=\"display: block;\">\r\n        <h4>{{ apiCall.instructions }}</h4>\r\n        <p>\r\n          HTTP Verb: <code>{{ apiCall.verb }}</code> <br>\r\n          {{ data.scenario.useVirtual ? 'Virtual' : 'Absolute' }} Url: <code>{{ apiCall.url }}</code>\r\n        </p>\r\n        @if (apiCall.enableButton) {\r\n          <p>\r\n            <button mat-raised-button (click)=\"callApiGet(apiCall.url)\">Call and Output to Console</button>\r\n            @if (apiCall.browseUrl) {\r\n              &nbsp;\r\n              <a [href]=\"apiCall.browseUrl\" target=\"_blank\">Open in Browser</a>\r\n              @if (data.scenario.useVirtual) {\r\n                <span>\r\n                  (for the demo to work it will add context parameters)\r\n                </span>\r\n              }\r\n            }\r\n          </p>\r\n        }\r\n        <!-- show the code examples -->\r\n        @for (code of apiCall.code; track code) {\r\n          <h4>{{ code.title }}</h4>\r\n          <p>{{ code.description }}</p>\r\n          <div class=\"code-example\">\r\n            <pre class=\"code-example__text\">{{ code.code }}</pre>\r\n            <button mat-icon-button class=\"code-example__copy\" tippy=\"Copy to clipboard\" (click)=\"copyCode(code.code)\">\r\n              <mat-icon>copy</mat-icon>\r\n            </button>\r\n          </div>\r\n          <!-- show hints / warnings -->\r\n          @for (hint of code.hints; track hint) {\r\n            <app-info-box [type]=\"hint.type\">\r\n              <span [innerHtml]=\"hint.message\"></span>\r\n            </app-info-box>\r\n          }\r\n        }\r\n      </mat-panel-description>\r\n    </mat-expansion-panel>\r\n  }\r\n</mat-accordion>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DevRestBaseViewModel, DevRestDataViewModel } from '..';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { InfoBoxComponent } from '../info-box/info-box.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { TippyStandaloneDirective } from '../../shared/directives/tippy-Standalone.directive';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-urls-and-code',\r\n    templateUrl: './dev-rest-urls-and-code.component.html',\r\n    styleUrls: ['./dev-rest-urls-and-code.component.scss'],\r\n    standalone: true,\r\n    imports: [MatExpansionModule, MatButtonModule, TippyStandaloneDirective, MatIconModule, InfoBoxComponent]\r\n})\r\nexport class DevRestUrlsAndCodeComponent {\r\n  @Input() data: DevRestBaseViewModel;\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  callApiGet(url: string) {\r\n    this.http.get<any>(url).subscribe(res => {\r\n      console.log(`Called ${url} and got this:`, res);\r\n      this.openSnackBar(`Called ${url}. You can see the full result in the F12 console`, 'API call returned');\r\n    });\r\n    this.openSnackBar(`Calling ${url}. You can see the full result in the F12 console`, 'API call sent');\r\n  }\r\n\r\n  copyCode(text: string) {\r\n    copyToClipboard(text);\r\n    this.openSnackBar('Copied to clipboard');\r\n  }\r\n\r\n  private openSnackBar(message: string, action?: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","<p class=\"icon-box {{ type }}\">\r\n  <mat-icon>{{ getIcon() }}</mat-icon>\r\n  @if (title) {\r\n    <strong [innerHTML]=\"title\"></strong>\r\n    <br>\r\n  }\r\n  <ng-content></ng-content>\r\n</p>\r\n","import { Component, Input } from '@angular/core';\r\nimport { infoBoxIconMap, InfoBoxType } from './hint';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-info-box',\r\n    templateUrl: './info-box.component.html',\r\n    styleUrls: ['./info-box.component.scss'],\r\n    standalone: true,\r\n    imports: [MatIconModule]\r\n})\r\nexport class InfoBoxComponent {\r\n  @Input() type: InfoBoxType;\r\n  @Input() title: string;\r\n  constructor() { }\r\n\r\n  getIcon() {\r\n    return infoBoxIconMap[this.type];\r\n  }\r\n}\r\n","import { SxcGlobal } from '@2sic.com/2sxc-typings';\r\nimport { ApiCall, CodeSample, hint$2sxc, Scenario, warningExternal } from '..';\r\nimport { Context } from '../../shared/services/context';\r\n// tslint:disable: curly\r\n\r\nexport function generateQueryCalls($2sxc: SxcGlobal, scenario: Scenario, context: Context, root: string, id: number,\r\n  streamNames: string, urlParams: string) {\r\n  const virtual = root[0] !== '/' && !root.startsWith('http');\r\n\r\n  // if urlParams exist and it doesn't starts with a ?, add that\r\n  if (urlParams && urlParams.length && urlParams[0] !== '?')\r\n    urlParams = '?' + urlParams;\r\n\r\n  const contextParams = virtual\r\n    ? `${urlParams}${urlParams ? '&' : '?'}PageId=${context.tabId}&ModuleId=${context.moduleId}`\r\n    : '';\r\n  const directUrl = $2sxc.http.apiUrl(root) + contextParams;\r\n  // const directWId = $2sxc.http.apiUrl(withId) + contextParams;\r\n  const pathWithParams = root + urlParams;\r\n  const pathWithStream = `${root}/${streamNames ?? 'Default'}${urlParams}`;\r\n\r\n  return [\r\n    new ApiCall(virtual, 'GET', pathWithParams, 'read all query streams', 'Read list of all items', true,\r\n      snippetsGet(scenario, pathWithParams, context), directUrl),\r\n\r\n    new ApiCall(virtual, 'GET', pathWithStream, 'read only Stream Default', 'Read list of all items', true,\r\n      snippetsGet(scenario, pathWithStream, context), directUrl),\r\n\r\n    // #todoquery 2dm\r\n    // 1. later sample with IDs\r\n    // 1. later maybe sample with guids, but not certain because it's kind of an unexpected opening\r\n  ];\r\n}\r\n\r\nfunction snippetsGet(scenario: Scenario, path: string, context: Context, streamNames?: string): CodeSample[] {\r\n  const moduleId = context.moduleId;\r\n  const virtual = path[0] !== '/';\r\n  const list: CodeSample[] = [];\r\n  const pathWithContext = `${path}?PageId=${context.tabId}&ModuleId=${moduleId}`;\r\n\r\n  if (scenario.inSameContext)\r\n    list.push(new CodeSample('Example with global $2sxc and event-context',\r\n      'This example finds the context information from the HTML where an action started.',\r\n      `\r\n<button onclick=\"$2sxc(this).webApi.get('${path}').then(data => console.log(data))\">\r\n  get it\r\n</button>`, false, [hint$2sxc]));\r\n\r\n  if (scenario.in2sxc)\r\n    list.push(new CodeSample(`Example with global $2sxc and a Module-Id ${moduleId}`,\r\n      `This is how you get the context when your code doesn't start with a DOM context, so you need the moduleId.`,\r\n      `\r\n// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n// now get the data in the promise\r\nsxc.webApi.get('${path}')\r\n  .then(data => {\r\n    console.log(data)\r\n  });`,\r\n      false, [hint$2sxc]),\r\n      new CodeSample(`Same example as one-liner`,\r\n        'This is the same as above, but as a one-liner so you can run it directly in the F12 console right now.',\r\n        `$2sxc(${moduleId}).webApi.get('${path}').then(data => console.log('just got:', data));`, true));\r\n\r\n  if (scenario.in2sxc && scenario.inSameContext)\r\n    list.push(new CodeSample('Example where you get the Module-Id from Razor',\r\n      `This example doesn't use a fixed moduleId but let's the Razor add the current moduleId when the page is rendered.`,\r\n      `\r\n// this will be replaced on the server with the ID\r\nvar moduleId = @Dnn.Module.ModuleID;\r\nvar sxc = $2sxc(moduleId);\r\nvar promise = sxc.webApi.get('${path}');`, false, [hint$2sxc]));\r\n\r\n  // jquery examples, they differ based on the scenario\r\n  const endPointGetter = virtual ? `$2sxc.http.apiUrl('${path}')` : `'${path}'`;\r\n  const endPointGetWithParams = virtual ? `$2sxc.http.apiUrl('${pathWithContext}')` : `'${pathWithContext}'`;\r\n  if (scenario.inSameSite) {\r\n    // jQuery using setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery inside DNN',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      It shows you how to resolve the virtual path for use in other ways.`,\r\n      `\r\nvar endpoint = ${endPointGetter};\r\n$.ajax({\r\n  url:endpoint,\r\n  beforeSend: $.dnnSF(${moduleId}).setModuleHeaders\r\n}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner\r\n    list.push(new CodeSample('Using jQuery as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will only work if you're on a DNN page with this module.`,\r\n      `$.ajax({url: ${endPointGetter}, beforeSend: $.dnnSF(${moduleId}).setModuleHeaders }).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n    // jQuery without setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery and add Context in URL',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      But instead of using the DNN Services Framework it adds relevant headers to the url.`,\r\n      `\r\n$.ajax(${endPointGetWithParams}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner without SetModuleHeaders\r\n    list.push(new CodeSample('Using jQuery with url-context as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will work on a DNN page which has jQuery activated. `,\r\n      `$.ajax(${endPointGetWithParams}).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n  } else {\r\n    // jQuery External\r\n    list.push(new CodeSample('Using jQuery in another Site or External',\r\n      `This example uses jQuery and doesn't use $2sxc or the DNN ServicesFramework,\r\n      because they would be either missing, or give wrong context-headers.`,\r\n      `\r\n$.ajax('${path}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n\r\n    // jQuery External with Context\r\n    list.push(new CodeSample('Using jQuery with Context in URL',\r\n      `This example uses jQuery and includes a module-context. This is unusual for external access, but may be needed sometime.`,\r\n      `\r\n$.ajax('${pathWithContext}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n  }\r\n  // return generated snippets\r\n  return list;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AllScenarios, DevRestQueryViewModel } from '../..';\r\n\r\n@Component({\r\n    selector: 'app-dev-query-introduction',\r\n    templateUrl: './introduction.component.html',\r\n    standalone: true,\r\n})\r\nexport class DevRestQueryIntroductionComponent implements OnInit {\r\n\r\n  @Input() data: DevRestQueryViewModel;\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>\r\n  To learn more about queries you may want to read these <a href=\"https://docs.2sxc.org/index.html\" target=\"_blank\">docs</a>:\r\n</p>\r\n<ul>\r\n  <li><a href=\"https://docs.2sxc.org/basics/query/index.html\" target=\"_blank\">Queries in 2sxc</a></li>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/query-rest-web-api.html\" target=\"_blank\">Query REST API</a></li>\r\n</ul>\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Using REST with Query:&nbsp; <code>{{ vm.name }}</code></div>\r\n    @if (!isSideNavContent){\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n    }\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <router-outlet></router-outlet>\r\n    <!-- Template below this line -->\r\n    <app-selector-with-help label=\"Choose Scenario\" [items]=\"scenarios\" [value]=\"vm.scenario.key\"\r\n      (valueChange)=\"changeScenario($event)\">\r\n    </app-selector-with-help>\r\n    <mat-tab-group dynamicHeight color=\"accent\"\r\n      class=\"mat-tab-group-fit-height mat-tab-group-fancy-scrollbar default-fonts\">\r\n      <!-- Introduction -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Introduction\">\r\n          <mat-icon>emoji_objects</mat-icon>\r\n          <span>Introduction</span>\r\n        </div>\r\n        <app-dev-query-introduction [data]=\"vm\"></app-dev-query-introduction>\r\n        <app-dev-rest-tab-introduction [data]=\"vm\"></app-dev-rest-tab-introduction>\r\n      </mat-tab>\r\n      <!-- Absolute / Virtual URLs -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\"\r\n          [tippy]=\"(vm.scenario.useVirtual ? 'Virtual ' : 'Absolute ') + 'REST URLs'\">\r\n          <mat-icon>code_curly</mat-icon>\r\n          <span>Call {{ vm.scenario.useVirtual ? 'Virtual' : 'Absolute' }} REST URLs</span>\r\n        </div>\r\n        <app-dev-rest-tab-examples-intro [data]=\"vm\"></app-dev-rest-tab-examples-intro>\r\n        <!-- Custom Parameters for calling -->\r\n        <div class=\"params-form\">\r\n          <mat-form-field color=\"accent\">\r\n            <mat-label>Stream Name(s) to Limit, comma-separated</mat-label>\r\n            <input matInput placeholder=\"Default\" [value]=\"streamNames$.value\" (input)=\"updateStreams($event)\">\r\n          </mat-form-field>\r\n          <mat-form-field color=\"accent\">\r\n            <mat-label>Additional Url Parameters</mat-label>\r\n            <input matInput placeholder=\"?id=27\" [value]=\"urlParams$.value\" (input)=\"updateParams($event)\">\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- REST Tab showing the urls and code snippets -->\r\n        <app-dev-rest-urls-and-code [data]=\"vm\"></app-dev-rest-urls-and-code>\r\n      </mat-tab>\r\n      <!-- Permissions explained -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Permissions\">\r\n          <mat-icon>person</mat-icon>\r\n          <span>Permissions ({{ vm.permissions.length }})</span>\r\n          @if (!vm.permissions.length) {\r\n          <mat-icon>warning</mat-icon>\r\n          }\r\n        </div>\r\n        <app-dev-rest-tab-permissions [data]=\"vm\"></app-dev-rest-tab-permissions>\r\n      </mat-tab>\r\n      <!-- HTTP Headers Explained -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"HTTP headers and auto\">\r\n          <mat-icon>perm_device_information</mat-icon>\r\n          <span>HTTP headers & &nbsp;<code>/auto/</code></span>\r\n        </div>\r\n        <app-dev-rest-tab-headers [data]=\"vm\"></app-dev-rest-tab-headers>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { Component, HostBinding, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, share } from 'rxjs';\r\nimport { GoToDevRest } from '..';\r\nimport { AppDialogConfigService, PipelinesService } from '../../app-administration/services';\r\nimport { PermissionsService } from '../../permissions';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DevRestBase } from '../dev-rest-base.component';\r\nimport { generateQueryCalls } from './query-samples';\r\nimport { DevRestQueryViewModel } from './query-template-vars';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { DevRestHttpHeadersComponent } from '../tab-headers/tab-headers.component';\r\nimport { DevRestTabPermissionsComponent } from '../tab-permissions/tab-permissions.component';\r\nimport { DevRestUrlsAndCodeComponent } from '../dev-rest-urls-and-code/dev-rest-urls-and-code.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { DevRestTabExamplesComponent } from '../tab-examples/tab-examples.component';\r\nimport { DevRestTabIntroductionComponent } from '../tab-introduction/tab-introduction.component';\r\nimport { DevRestQueryIntroductionComponent } from './introduction/introduction.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { SelectorWithHelpComponent } from '../selector-with-help/selector-with-help.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { TippyStandaloneDirective } from '../../shared/directives/tippy-Standalone.directive';\r\nimport { QueryService } from '../../edit/shared/services/query.service';\r\n\r\nconst pathToQuery = 'app/{appname}/query/{queryname}';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-query',\r\n    templateUrl: './query.component.html',\r\n    styleUrls: [/*'./query.component.scss',*/ '../dev-rest-all.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        MatButtonModule,\r\n        TippyStandaloneDirective,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        SelectorWithHelpComponent,\r\n        MatTabsModule,\r\n        DevRestQueryIntroductionComponent,\r\n        DevRestTabIntroductionComponent,\r\n        DevRestTabExamplesComponent,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        DevRestUrlsAndCodeComponent,\r\n        DevRestTabPermissionsComponent,\r\n        DevRestHttpHeadersComponent,\r\n        AsyncPipe,\r\n    ],\r\n    providers: [\r\n      PermissionsService,\r\n      EntitiesService,\r\n      AppDialogConfigService,\r\n      PipelinesService,\r\n    ],\r\n})\r\nexport class DevRestQueryComponent extends DevRestBase<DevRestQueryViewModel> implements OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  /** Test values for url params */\r\n  urlParams$ = new BehaviorSubject<string>('');\r\n\r\n  /** Test values for stream names */\r\n  streamNames$ = new BehaviorSubject<string>('Default');\r\n\r\n  /** This is necessary, because the Query-Rest can still be opened from the Visual-Query as a dialog */\r\n  isSideNavContent: boolean;\r\n\r\n  constructor(\r\n    appDialogConfigService: AppDialogConfigService,\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    context: Context,\r\n    dialogRef: MatDialogRef<DevRestQueryComponent>,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    pipelinesService: PipelinesService,\r\n    permissionsService: PermissionsService,\r\n    dnnContext: DnnContext,\r\n  ) {\r\n    super(appDialogConfigService, context, dialogRef, dnnContext, router, route, permissionsService);\r\n\r\n    this.isSideNavContent = this.router.url.includes(GoToDevRest.routeQuery);\r\n\r\n    // build Query Stream\r\n    const query$ = combineLatest([\r\n      route.paramMap.pipe(map(pm => pm.get(GoToDevRest.paramQuery))),\r\n      pipelinesService.getAll(eavConstants.contentTypes.query).pipe(share()),\r\n    ]).pipe(\r\n      map(([queryGuid, all]) => all.find(q => q.Guid === queryGuid)),\r\n      share()\r\n    );\r\n\r\n    this.permissions$ = this.buildPermissionStream(GoToDevRest.paramQuery);\r\n\r\n    // Build Root Stream (for the root folder)\r\n    const root$ = combineLatest([query$, this.scenario$, this.dialogSettings$]).pipe(\r\n      map(([query, scenario, dialogSettings]) => {\r\n        const resolved = pathToQuery\r\n          .replace('{queryname}', query.Name)\r\n          .replace('{appname}', scenario.inSameContext ? 'auto' : encodeURI(dialogSettings.Context.App.Folder));\r\n        return this.rootBasedOnScenario(resolved, scenario);\r\n      }),\r\n    );\r\n\r\n    // build variables for template\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([query$, this.scenario$, this.permissions$]),\r\n      combineLatest([root$, /* itemOfThisType$, */ this.dialogSettings$]),\r\n      combineLatest([this.streamNames$, this.urlParams$])\r\n    ]).pipe(\r\n      map(([[query, scenario, permissions], [root, diag], [streamNames, urlParams]]) => ({\r\n        ...this.buildBaseViewModel(query.Name, query.Guid, diag, permissions, root, scenario),\r\n        query,\r\n        apiCalls: generateQueryCalls(dnnContext.$2sxc, scenario, context, root, 0 /* #todoquery */, streamNames, urlParams),\r\n      })),\r\n    );\r\n  }\r\n\r\n  updateStreams(event: Event) {\r\n    this.streamNames$.next((event.target as HTMLInputElement).value);\r\n  }\r\n  updateParams(event: Event) {\r\n    this.urlParams$.next((event.target as HTMLInputElement).value);\r\n  }\r\n\r\n}\r\n","@if (data.scenario.useVirtual) {\r\n  <app-info-box type=\"info\">\r\n    Virtual REST URLs are short. They will be resolved internally\r\n    to the full length (based on the dnn-version, current portal, etc.)\r\n    thanks to $2sxc JS API. This happens when you use the\r\n    <a href=\"https://docs.2sxc.org/specs/js/sxcewebapi.html\" target=\"_blank\">\r\n      $2sxc(<em>id-or-htmlnode</em>).webApi.get(...)\r\n    </a>\r\n    or if you use\r\n    <a href=\"https://go.2sxc.org/js-angular\" target=\"_blank\">\r\n      sxc-angular (npm package)\r\n    </a>\r\n    (which also passes url-resolving through $2sxc).\r\n  </app-info-box>\r\n}\r\n\r\n@if (data.scenario.needsAnonymous && !data.permissionsHasAnonymous) {\r\n  <app-info-box type=\"warning\">\r\n    To use the REST API from external, you usually will want to set some permissions for <code>Anonymous</code>.\r\n    As of now, no such permissions are configured.\r\n  </app-info-box>\r\n}\r\n\r\n@if (data.scenario.needsAnonymous && data.permissionsHasAnonymous) {\r\n  <app-info-box type=\"alert\">\r\n    It seems that you have some permissions configured for <code>Anonymous</code>.\r\n    This is correct if you plan on using the REST endpoints from externaly.\r\n    Please make sure that they are the ones you need, and that you don't accidentally open up too much.\r\n  </app-info-box>\r\n}\r\n\r\n<p>\r\n  The examples below use real values to make it easier to get started.\r\n  The values used are the current content-type <code>{{ data.name }}</code>,\r\n  the current Module ID <code>{{ data.moduleId }}</code>\r\n  and the folder of the current App folder <code>{{ data.folder }}</code> (where needed).\r\n  @if (data.itemId) {\r\n    The code also looked up an item of this type and will use it's ID <code>{{ data.itemId }}</code> in the\r\n    examples.\r\n  }\r\n</p>","import { Component, Input } from '@angular/core';\r\nimport { DevRestBaseViewModel } from '..';\r\nimport { InfoBoxComponent } from '../info-box/info-box.component';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-tab-examples-intro',\r\n    templateUrl: './tab-examples.component.html',\r\n    styleUrls: ['./tab-examples.component.scss'],\r\n    standalone: true,\r\n    imports: [InfoBoxComponent]\r\n})\r\nexport class DevRestTabExamplesComponent {\r\n  @Input() data: DevRestBaseViewModel;\r\n  constructor() { }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DevRestBaseViewModel } from '..';\r\nimport { InfoBoxComponent } from '../info-box/info-box.component';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-tab-headers',\r\n    templateUrl: './tab-headers.component.html',\r\n    standalone: true,\r\n    imports: [InfoBoxComponent],\r\n})\r\nexport class DevRestHttpHeadersComponent implements OnInit {\r\n\r\n  @Input() data: DevRestBaseViewModel;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>HTTP Headers, Security and Context</h2>\r\n<!-- Background about Context -->\r\n<p>\r\n  HTTP headers and url-parameters are used for <strong>Security</strong> and <strong>Context</strong>.\r\n  We'll explain the <em>Security</em> part further below, and start with <em>Context</em>.\r\n  When you work with WebApi endpoints, there are two distinct scenarios:\r\n</p>\r\n<h3>Using WebApi with Context</h3>\r\n<p>\r\n    In this case the endpoint knows what <strong>Page</strong> and what <strong>module</strong> the request is for.\r\n    This <strong>Context</strong> is then used to <em>auto-detect</em> the app (so you can use <code>/auto/</code> in the url).\r\n    <br>\r\n    It can also be used for for security checks - so you can set <strong>Permissions</strong>\r\n    like <code>Allow READ If the user may see the module</code>.\r\n</p>\r\n<app-info-box type=\"tip\">\r\n  TIP: In the case of <strong>Queries</strong> the <strong>Context</strong> can also provide parameters which were configured in the module.\r\n</app-info-box>\r\n\r\n<h3>Using WebApi without Context</h3>\r\n<p>\r\n  If the <strong>Context</strong> is not known, the endpoint cannot <em>auto-detect</em> the the app, so instead of <code>/auto/</code>\r\n  you must supply the correct app-name in the url, in this case <code>{{ data.folder }}</code>.\r\n  <br>\r\n  You also must specify more specific <strong>Permissions</strong> like <code>Allow READ if user is in group Members</code> or\r\n  <code>Allow READ for all ANONYMOUS users</code>.\r\n</p>\r\n\r\n<app-info-box type=\"info\" title=\"Site & Language are <em>not</em> part of the Context.\">\r\n  Technically the context needs more information than we just talked about, like what <strong>Site</strong> are we on and what\r\n  <strong>Language</strong> is being used. This information is already in the URL. So the root (before any <code>/api/</code>)\r\n  paths already contains that information.\r\n</app-info-box>\r\n\r\n<!-- Defining the Context -->\r\n<h2>How to get the Context</h2>\r\n<h3>How the Context is Defined</h3>\r\n<p>\r\n  The context always requires a <code>PageId</code> (in DNN it is hisorically called the <code>TabId</code>) and the <code>ModuleId</code>.\r\n  This lets the system look up the configuration for this module and figure out everything else.\r\n</p>\r\n\r\n<h3>Supplying Context in HTTP Headers (default)</h3>\r\n<p>\r\n  The standard behavior is to include the Context information in hidden <strong>HTTP headers</strong>.\r\n  This requires a bit more JavaScript code to attach the headers, but most of the APIs like the <code>$2sxc</code>\r\n  will do this automatically when used from within a 2sxc-App.\r\n  These are the context headers provided by $2sxc:\r\n</p>\r\n<ul>\r\n  <li>\r\n    <code>PageId</code> - this is the page we're on (number). <em>this header is new in v11.11</em>\r\n  </li>\r\n  <li>\r\n    <s><code>TabId</code></s> - <em>obsolete</em> this is also the page id (number). <em>just but for backward compatibility</em>\r\n  </li>\r\n  <li>\r\n    <code>ModuleId</code> - this is the module id (number)\r\n  </li>\r\n  <li>\r\n    <code>ContentBlockId</code> - this in an internal ID for working in inner-content (number). You will usually not care about this.\r\n  </li>\r\n</ul>\r\n\r\n<h3>Supplying Context as URL Parameters <code>?PageId=...</code></h3>\r\n<p>\r\n  The headers above (<code>PageId</code>, <code>ModuleId</code>) can also be added to the URL and will have the same effect.\r\n</p>\r\n\r\n<!-- Security -->\r\n<h2>Security Headers</h2>\r\n<p>\r\n  In addition to context headers, a request can also include <strong>Security</strong> headers:\r\n</p>\r\n<ol>\r\n  <li>\r\n    <code>RequestVerificationToken</code> - this is a crypto key to prove that the request originated from the\r\n    same site. It's only included in POST/PUT/DELETE but not GET requests.\r\n  </li>\r\n</ol>\r\n<p>\r\n  These are only used on <code>PUT</code>, <code>POST</code>, <code>DELETE</code> etc. but not on <code>GET</code> requests.\r\n</p>\r\n<app-info-box type=\"tip\">\r\n  This header is only usefull to verify that the request came from a real DNN page.\r\n  The 2sxc-api <code>$2sxc</code> will add this automatically for you, so you don't need to do anything if you use that.\r\n</app-info-box>\r\n","<p>\r\n  All data can be used in JavaScript, SPAs or anywhere with the REST API\r\n  (see <a href=\"https://docs.2sxc.org/web-api/index.html\" target=\"_blank\">docs</a>).\r\n  Use this for things like:\r\n</p>\r\n<ul>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/index.html\" target=\"_blank\">WebAPI in 2sxc</a></li>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/headless/index.html\" target=\"_blank\">Using DNN/2sxc as a headless CMS</a></li>\r\n  <li>Create SPAs in DNN/2sxc</li>\r\n  <li>Get data for mobile apps</li>\r\n  <li>Share data to other platforms</li>\r\n</ul>\r\n<p>\r\n  Just set off HTTP <code>GET</code> requests or similar\r\n  to the endpoint like <code>{{ data.root }}</code>. You can find the full list with example code\r\n  in the next tabs.\r\n  Make sure you also read about permissions and HTTP headers.\r\n</p>\r\n<h3>Scenarios Explained (dropdown on top)</h3>\r\n<p>\r\n  The examples / code / permission infos will change based on the scenario you choose.\r\n</p>\r\n@for (scenario of scenarios; track scenario) {\r\n  <h4>Scenario: {{ scenario.name }}</h4>\r\n  <p>\r\n    {{ scenario.description }}\r\n  </p>\r\n  @if (scenario.notes) {\r\n    <p>\r\n      <em>\r\n        {{ scenario.notes }}\r\n      </em>\r\n    </p>\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AllScenarios, DevRestDataViewModel } from '..';\r\nimport { DevRestBaseViewModel } from '../base-template-vars';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-tab-introduction',\r\n    templateUrl: './tab-introduction.component.html',\r\n    standalone: true,\r\n})\r\nexport class DevRestTabIntroductionComponent implements OnInit {\r\n\r\n  @Input() data: DevRestBaseViewModel;\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h3>Permissions ({{ data.permissions.length }})</h3>\r\n<p>\r\n  This target <code>{{ data.name }}</code> has {{ data.permissions.length }} permissions\r\n  configured.\r\n  <button mat-icon-button tippy=\"Open permissions\" (click)=\"openPermissions()\">\r\n    @if (data.permissions.length) {\r\n      <mat-icon [matBadge]=\"data.permissions.length\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n        matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n        person\r\n      </mat-icon>\r\n    }\r\n    @if (!data.permissions.length) {\r\n      <mat-icon>person</mat-icon>\r\n    }\r\n  </button>\r\n</p>\r\n@if (!data.permissions.length) {\r\n  <p class=\"warning info-box\">\r\n    <mat-icon>warning</mat-icon>\r\n    Warning: you don't have any permissions configured. So only Super-Users (Host) will be able to use the API\r\n    endpoints.\r\n  </p>\r\n}\r\n\r\n<ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data.permissions\" [gridOptions]=\"gridOptions\"\r\n  [style.height]=\"(33 + data.permissions.length * 48) + 'px'\">\r\n</ag-grid-angular>\r\n\r\n<h4>Super-Users (Host) can use all Endpoints</h4>\r\n<p>\r\n  As a super-user you can always access these REST endpoints, so this will make development easy.\r\n  Just remember to change the content-type permissions when you publish your work to public pages.\r\n</p>\r\n\r\n<h4>Set permissions for visitors to use this</h4>\r\n<p>\r\n  To let JavaScript access the REST endpoints for normal users, you must set the permissions of the\r\n  content-type.\r\n  Usually you will just want to set it like <em>if user has view-permissions, let him read this\r\n    content-type</em>.\r\n  In rare cases (eg. JS based forms) you may also want to give it some write permissions. Just be careful.\r\n  If you give write permissions, you will usually <em>only</em> want to give create, but not edit.\r\n</p>\r\n\r\n<h4>Setting permissions for use outside of DNN</h4>\r\n<p>\r\n  When calling API endpoints from a DNN page you will usually use the <code>$2sxc</code> or the DNN\r\n  Services-Framework.\r\n  These automatically add some HTTP-Headers (see tab about HTTP Headers) which let DNN determine that the\r\n  API-Call\r\n  was made on a specific page/module - and DNN uses this to check the permissions.\r\n</p>\r\n<p>\r\n  IF you are calling the endpoint from outside of DNN then these headers will be missing.\r\n  Because of this, permissions saying \"If has VIEW permissions, allow read\" will fail - because DNN cannot\r\n  determine\r\n  if the user has view permissions.\r\n</p>\r\n<p>\r\n  So to enable use from external, the condition must be \"If has ANONYMOUS permissions, allow ...\".\r\n  Because the ANONYMOUS check passes even if DNN doesn't know what page the module is on.\r\n</p>","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DevRestBaseViewModel } from '..';\r\nimport { Permission } from '../../permissions';\r\nimport { GoToPermissions } from '../../permissions/go-to-permissions';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { TippyStandaloneDirective } from '../../shared/directives/tippy-Standalone.directive';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-tab-permissions',\r\n    templateUrl: './tab-permissions.component.html',\r\n    standalone: true,\r\n    imports: [\r\n        MatButtonModule,\r\n        TippyStandaloneDirective,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n        AgGridModule,\r\n    ],\r\n})\r\nexport class DevRestTabPermissionsComponent {\r\n  @Input() data: DevRestBaseViewModel;\r\n\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) { }\r\n\r\n  openPermissions() {\r\n    this.router.navigate([GoToPermissions.getUrlContentType(this.data.permissionTarget)], { relativeTo: this.route });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-padding no-outline'.split(' '),\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Id;\r\n          },\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Title;\r\n          },\r\n        },\r\n        {\r\n          field: 'Identity',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Identity;\r\n          },\r\n        },\r\n        {\r\n          field: 'Condition',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Condition;\r\n          },\r\n        },\r\n        {\r\n          field: 'Grant',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Grant;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}