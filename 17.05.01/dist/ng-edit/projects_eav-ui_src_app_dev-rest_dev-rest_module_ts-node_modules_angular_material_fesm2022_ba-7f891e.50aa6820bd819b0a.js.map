{"version":3,"file":"projects_eav-ui_src_app_dev-rest_dev-rest_module_ts-node_modules_angular_material_fesm2022_ba-7f891e.50aa6820bd819b0a.js","mappings":"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","names":["appFilesAsset","SourceService","constructor","http","context","dnnContext","this","get","viewKey","global","urlItems","$2sxc","apiUrl","params","appId","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","save","post","getAll","mask","Files","forEach","file","Shared","getWebApis","files","splitIndex","Path","lastIndexOf","fileExtIndex","folder","substring","name","path","isShared","getWebApiDetails","apiPath","zoneId","getPredefinedTemplates","purpose","type","getPreview","templateKey","create","test","find","i","EntityId","toString","IsShared","templateId","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","wxM","factory","ɵfac","generateWebApiCalls","scenario","root","urlParams","verbs","virtual","startsWith","length","contextParams","tabId","moduleId","directUrl","pathWithParams","result","Array","includes","push","ApiCall","snippetsGet","list","pathWithContext","inSameContext","CodeSample","hint$2sxc","in2sxc","endPointGetter","endPointGetWithParams","inSameSite","warningExternal","snippetsPost","warningSimpleSampleOnly","TrueFalseComponent","trueIcon","falseIcon","agInit","value","reverse","icon","refresh","core","In1","selectors","standalone","features","decls","vars","consts","template","rf","ctx","MatIconModule","encapsulation","DevRestApiPermissionsComponent","ngOnInit","gridOptions","buildGridOptions","ngOnChanges","changes","data","buildGridItems","gridItems","requirement","class","details","security","ignoreSecurity","method","selected","effective","mergedSecurity","comments","allowAnonymous","requireVerificationToken","edit","admin","superUser","requireContext","gridHeight","booleanColumnDef","headerClass","width","cellClass","cellRenderer","cellRendererParams","defaultGridOptions","columnDefs","field","flex","minWidth","valueGetter","inputs","AgGridModule","ctx_r1","parameters","DevRestApiActionParamsComponent","split","isOptional","headerName","defaultValue","DevRestApiActionParamsComponent_Conditional_4_Template","DevRestApiActionParamsComponent_Conditional_5_Template","DevRestApiIntroductionComponent","scenarios","AllScenarios","action_r7","join","vm_r1","useVirtual","_r14","ctx_r13","closeDialog","$event","ctx_r15","changeScenario","ctx_r16","updateAction","DevRestApiComponent_Conditional_0_For_18_Template","DevRestApiComponent_Conditional_0_div_21_Template","DevRestApiComponent_Conditional_0_div_25_Template","ctx_r17","updateParams","ctx_r18","DevRestApiComponent_Conditional_0_div_47_Template","DevRestApiComponent_Conditional_0_div_50_Template","webApi","ctx_r0","key","actions","urlParams$","DevRestApiComponent","DevRestBase","appDialogConfigService","dialogRef","router","route","sourceService","super","hostClass","selectedActionName$","BehaviorSubject","webApi$","combineLatest","paramMap","pm","GoToDevRest","paramApiPath","webApis","decodeURIComponent","w","apiDetails$","switchMap","share","take","filter","x","subscribe","next","selectedAction$","a","root$","scenario$","dialogSettings$","action","dialogSettings","console","log","resolved","replace","encodeURI","Context","App","Folder","controller","rootBasedOnScenario","viewModel$","diag","buildBaseViewModel","permissionsHasAnonymous","apiCalls","event","target","i4","i5","i6","hostVars","hostBindings","AppDialogConfigService","DevRestApiComponent_Conditional_0_Template","DevRestApiComponent_contFlowTmp","MatButtonModule","i7","TippyStandaloneDirective","i8","RouterOutlet","SelectorWithHelpComponent","MatFormFieldModule","i9","MatSelectModule","i10","i11","MatOptionModule","MatTabsModule","i12","DevRestTabIntroductionComponent","DevRestTabExamplesComponent","MatExpansionModule","i13","MatInputModule","i14","DevRestUrlsAndCodeComponent","DevRestHttpHeadersComponent","AsyncPipe","styles","devRestDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","DevRestEntryComponent","__webpack_require__","e","then","bind","routes","component","DialogEntryComponent","dialog","title","children","paramQuery","DevRestQueryComponent","GoToPermissions","DevRestRoutingModule","a4G","s3X","RouterModule","forChild","DevRestModule","nextId","BADGE_CONTENT_CLASS","MatBadge","color","_color","_setColor","content","_content","newContent","_updateRenderedContent","description","_description","newDescription","_updateDescription","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","overlap","position","size","_id","_isInitialized","_interactivityChecker","inject","InteractivityChecker","_document","DOCUMENT","isAbove","indexOf","isAfter","getBadgeElement","_badgeElement","_clearExistingBadges","_createBadgeElement","ngOnDestroy","destroyNode","_inlineBadgeDescription","remove","removeDescription","nativeElement","_isHostInteractive","isFocusable","ignoreVisibility","badgeElement","createElement","activeClass","setAttribute","classList","add","appendChild","requestAnimationFrame","runOutsideAngular","newContentNormalized","trim","textContent","_removeInlineDescription","describe","_updateInlineDescription","undefined","colorPalette","badges","querySelectorAll","from","ANIMATION_MODULE_TYPE","ɵdir","hostAttrs","hidden","disabled","booleanAttribute","MatBadgeModule","ɵmod","ɵinj","imports","A11yModule","MatCommonModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/code-editor/services/source.service.ts","./projects/eav-ui/src/app/dev-rest/api/api-samples.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/dev-rest/api/permissions/permissions.component.ts","./projects/eav-ui/src/app/dev-rest/api/permissions/permissions.component.html","./projects/eav-ui/src/app/dev-rest/api/action-params/action-params.component.html","./projects/eav-ui/src/app/dev-rest/api/action-params/action-params.component.ts","./projects/eav-ui/src/app/dev-rest/api/introduction/introduction.component.ts","./projects/eav-ui/src/app/dev-rest/api/introduction/introduction.component.html","./projects/eav-ui/src/app/dev-rest/api/api.component.html","./projects/eav-ui/src/app/dev-rest/api/api.component.ts","./projects/eav-ui/src/app/dev-rest/dev-rest-dialog.config.ts","./projects/eav-ui/src/app/dev-rest/dev-rest-routing.module.ts","./projects/eav-ui/src/app/dev-rest/dev-rest.module.ts","./node_modules/@angular/material/fesm2022/badge.mjs"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { WebApi, WebApiDetails } from '../../app-administration/models';\r\nimport { ViewOrFileIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nconst appFilesAll = 'admin/AppFiles/AppFiles';\r\nconst appFilesAsset = 'admin/AppFiles/asset';\r\nconst appFilesCreate = 'admin/AppFiles/create';\r\nconst apiExplorerInspect = 'admin/ApiExplorer/inspect';\r\nconst appFilesPredefinedTemplates = 'admin/AppFiles/GetTemplates';\r\nconst appFilesPreview = 'admin/AppFiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, global: boolean, view: SourceView, urlItems: ViewOrFileIdentifier[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesAsset), view, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        ...this.templateIdOrPath(viewKey, global, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(mask?: string): Observable<FileAsset[]> {\r\n    return this.http.get<{ Files: FileAsset[] }>(this.dnnContext.$2sxc.http.apiUrl(appFilesAll), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        ...(mask && { mask }),\r\n      },\r\n    }).pipe(\r\n      map(({ Files }) => {\r\n        Files.forEach(file => {\r\n          file.Shared ??= false;\r\n        });\r\n        return Files;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApis(): Observable<WebApi[]> {\r\n    return this.getAll('*Controller.cs').pipe(\r\n      map(files => {\r\n        const webApis: WebApi[] = files.map(file => {\r\n          const splitIndex = file.Path.lastIndexOf('/');\r\n          const fileExtIndex = file.Path.lastIndexOf('.');\r\n          const folder = file.Path.substring(0, splitIndex);\r\n          const name = file.Path.substring(splitIndex + 1, fileExtIndex);\r\n          const webApi: WebApi = { path: file.Path, folder, name, isShared: file.Shared };\r\n          return webApi;\r\n        });\r\n        return webApis;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getWebApiDetails(apiPath: string): Observable<WebApiDetails> {\r\n    return this.http.get<WebApiDetails>(this.dnnContext.$2sxc.http.apiUrl(apiExplorerInspect), {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId, path: apiPath },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.dnnContext.$2sxc.http.apiUrl(appFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, global: boolean, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.dnnContext.$2sxc.http.apiUrl(appFilesPreview), {\r\n      params: {\r\n        appId: this.context.appId,\r\n        path,\r\n        templateKey,\r\n        global,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(path: string, global: boolean, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(appFilesCreate), {}, {\r\n      params: {\r\n        appId: this.context.appId,\r\n        global,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, global: boolean, urlItems: ViewOrFileIdentifier[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey && i.IsShared === global)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","import { SxcGlobal } from '@2sic.com/2sxc-typings';\r\nimport { ApiCall, CodeSample, hint$2sxc, Scenario, warningExternal, warningSimpleSampleOnly } from '..';\r\nimport { Context } from '../../shared/services/context';\r\n// tslint:disable: curly\r\n\r\nexport function generateWebApiCalls($2sxc: SxcGlobal, scenario: Scenario, context: Context, root: string,\r\n  urlParams: string, verbs: string[]) {\r\n  const virtual = root[0] !== '/' && !root.startsWith('http');\r\n\r\n  // if urlParams exist and it doesn't starts with a ?, add that\r\n  if (urlParams && urlParams.length && urlParams[0] !== '?')\r\n    urlParams = '?' + urlParams;\r\n\r\n  const contextParams = virtual\r\n    ? `${urlParams}${urlParams ? '&' : '?'}PageId=${context.tabId}&ModuleId=${context.moduleId}`\r\n    : '';\r\n  const directUrl = $2sxc.http.apiUrl(root) + contextParams;\r\n  const pathWithParams = root + urlParams;\r\n\r\n  const result = new Array<ApiCall>();\r\n  if (verbs.includes('GET'))\r\n    result.push(new ApiCall(virtual, 'GET', pathWithParams, 'call the WebAPI endpoint', 'call GET on this endpoint', true,\r\n      snippetsGet(scenario, pathWithParams, context), directUrl));\r\n\r\n  if (verbs.includes('POST'))\r\n    result.push(new ApiCall(virtual, 'POST', pathWithParams, 'call the WebAPI endpoint', 'call POST on this endpoint', false,\r\n      snippetsPost(scenario, pathWithParams, context.moduleId), directUrl));\r\n\r\n  return result;\r\n}\r\n\r\nfunction snippetsGet(scenario: Scenario, path: string, context: Context): CodeSample[] {\r\n  const moduleId = context.moduleId;\r\n  const virtual = path[0] !== '/';\r\n  const list: CodeSample[] = [];\r\n  const pathWithContext = `${path}?PageId=${context.tabId}&ModuleId=${moduleId}`;\r\n\r\n  if (scenario.inSameContext)\r\n    list.push(new CodeSample('Example with global $2sxc and event-context',\r\n      'This example finds the context information from the HTML where an action started.',\r\n      `\r\n<button onclick=\"$2sxc(this).webApi.get('${path}').then(data => console.log(data))\">\r\n  get it\r\n</button>`, false, [hint$2sxc]));\r\n\r\n  if (scenario.in2sxc)\r\n    list.push(new CodeSample(`Example with global $2sxc and a Module-Id ${moduleId}`,\r\n      `This is how you get the context when your code doesn't start with a DOM context, so you need the moduleId.`,\r\n      `\r\n// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n// now get the data in the promise\r\nsxc.webApi.get('${path}')\r\n  .then(data => {\r\n    console.log(data)\r\n  });`,\r\n      false, [hint$2sxc]),\r\n      new CodeSample(`Same example as one-liner`,\r\n        'This is the same as above, but as a one-liner so you can run it directly in the F12 console right now.',\r\n        `$2sxc(${moduleId}).webApi.get('${path}').then(data => console.log('just got:', data));`, true));\r\n\r\n  if (scenario.in2sxc && scenario.inSameContext)\r\n    list.push(new CodeSample('Example where you get the Module-Id from Razor',\r\n      `This example doesn't use a fixed moduleId but let's the Razor add the current moduleId when the page is rendered.`,\r\n      `\r\n// this will be replaced on the server with the ID\r\nvar moduleId = @Dnn.Module.ModuleID;\r\nvar sxc = $2sxc(moduleId);\r\nvar promise = sxc.webApi.get('${path}');`, false, [hint$2sxc]));\r\n\r\n  // jquery examples, they differ based on the scenario\r\n  const endPointGetter = virtual ? `$2sxc.http.apiUrl('${path}')` : `'${path}'`;\r\n  const endPointGetWithParams = virtual ? `$2sxc.http.apiUrl('${pathWithContext}')` : `'${pathWithContext}'`;\r\n  if (scenario.inSameSite) {\r\n    // jQuery using setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery inside DNN',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      It shows you how to resolve the virtual path for use in other ways.`,\r\n      `\r\nvar endpoint = ${endPointGetter};\r\n$.ajax({\r\n  url:endpoint,\r\n  beforeSend: $.dnnSF(${moduleId}).setModuleHeaders\r\n}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner\r\n    list.push(new CodeSample('Using jQuery as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will only work if you're on a DNN page with this module.`,\r\n      `$.ajax({url: ${endPointGetter}, beforeSend: $.dnnSF(${moduleId}).setModuleHeaders }).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n    // jQuery without setModuleHeaders\r\n    list.push(new CodeSample('Using jQuery and add Context in URL',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      But instead of using the DNN Services Framework it adds relevant headers to the url.`,\r\n      `\r\n$.ajax(${endPointGetWithParams}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, []));\r\n\r\n    // jQuery Single-Liner without SetModuleHeaders\r\n    list.push(new CodeSample('Using jQuery with url-context as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will work on a DNN page which has jQuery activated. `,\r\n      `$.ajax(${endPointGetWithParams}).then(data => console.log(data))`,\r\n      false, []));\r\n\r\n  } else {\r\n    // jQuery External\r\n    list.push(new CodeSample('Using jQuery in another Site or External',\r\n      `This example uses jQuery and doesn't use $2sxc or the DNN ServicesFramework,\r\n      because they would be either missing, or give wrong context-headers.`,\r\n      `\r\n$.ajax('${path}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n\r\n    // jQuery External with Context\r\n    list.push(new CodeSample('Using jQuery with Context in URL',\r\n      `This example uses jQuery and includes a module-context. This is unusual for external access, but may be needed sometime.`,\r\n      `\r\n$.ajax('${pathWithContext}').then(data => {\r\n  console.log('Got this data:', data);\r\n})`, false, [warningExternal]));\r\n  }\r\n  // return generated snippets\r\n  return list;\r\n}\r\n\r\n/** Snippets for basic Post */\r\nfunction snippetsPost(scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const showWarning = !scenario.inSameContext;\r\n  return [\r\n    new CodeSample('Basic Example',\r\n      `This example uses the ModuleId to get the context information.\r\nTo see other ways to get the context and headers, check out the GET examples.\r\nNote that this snippet doesn't use real names of properties to add.`,\r\n      `// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n\r\n// The object we'll send to get created. It's just a simple object with properties\r\nvar urlParams = {\r\n  id: 47,\r\n};\r\nvar postParams = {\r\n  // related items like tags can be assigned with IDs\r\n  // which you would usually get from somewhere first\r\n  list: [17, 4203, 5030],\r\n  message: 'Some Text',\r\n};\r\n\r\n// now create it and get the id back\r\nsxc.webApi.post('${path}', urlParams, postParams)\r\n  .then(data => {\r\n    console.log('Got this ID information: ', data)\r\n  });`,\r\n      false,\r\n      showWarning ? [warningSimpleSampleOnly] : []),\r\n  ];\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-rest-api-true-false',\r\n    templateUrl: './true-false.component.html',\r\n    standalone: true,\r\n    imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { ColDef, GridOptions } from '@ag-grid-community/core';\r\nimport { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { DevRestApiViewModel } from '../api-template-vars';\r\nimport { TrueFalseComponent } from '../true-false/true-false.component';\r\nimport { TrueFalseParams } from '../true-false/true-false.models';\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n    selector: 'app-dev-api-permissions',\r\n    templateUrl: './permissions.component.html',\r\n    standalone: true,\r\n    imports: [AgGridModule],\r\n})\r\nexport class DevRestApiPermissionsComponent implements OnInit, OnChanges {\r\n  @Input() data: DevRestApiViewModel;\r\n\r\n  gridOptions: GridOptions;\r\n  gridItems: ApiPermissionsGridItem[];\r\n  gridHeight: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.gridOptions = this.buildGridOptions();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.data) {\r\n      this.buildGridItems();\r\n    }\r\n  }\r\n\r\n  private buildGridItems() {\r\n    this.gridItems = [\r\n      {\r\n        requirement: 'Ignore All Security Checks <code>[AllowAnonymous]</code>',\r\n        class: this.data.details.security.ignoreSecurity,\r\n        method: this.data.selected.security.ignoreSecurity,\r\n        effective: this.data.selected.mergedSecurity.ignoreSecurity,\r\n        comments: 'If this is set all other security checks are skipped',\r\n      },\r\n      {\r\n        requirement: 'Allow Anonymous Use',\r\n        class: this.data.details.security.allowAnonymous,\r\n        method: this.data.selected.security.allowAnonymous,\r\n        effective: this.data.selected.mergedSecurity.allowAnonymous,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Require Verification Token',\r\n        class: this.data.details.security.requireVerificationToken,\r\n        method: this.data.selected.security.requireVerificationToken,\r\n        effective: this.data.selected.mergedSecurity.requireVerificationToken,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>view</strong> permissions',\r\n        class: this.data.details.security.view,\r\n        method: this.data.selected.security.view,\r\n        effective: this.data.selected.mergedSecurity.view,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>edit</strong> permissions',\r\n        class: this.data.details.security.edit,\r\n        method: this.data.selected.security.edit,\r\n        effective: this.data.selected.mergedSecurity.edit,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>admin</strong> permissions',\r\n        class: this.data.details.security.admin,\r\n        method: this.data.selected.security.admin,\r\n        effective: this.data.selected.mergedSecurity.admin,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Allow users with <strong>super-user</strong> permissions',\r\n        class: this.data.details.security.superUser,\r\n        method: this.data.selected.security.superUser,\r\n        effective: this.data.selected.mergedSecurity.superUser,\r\n        comments: '',\r\n      },\r\n      {\r\n        requirement: 'Require Context',\r\n        class: this.data.details.security.requireContext,\r\n        method: this.data.selected.security.requireContext,\r\n        effective: this.data.selected.mergedSecurity.requireContext,\r\n        comments: 'If required, the context must be included - see also headers',\r\n      },\r\n    ];\r\n    this.gridHeight = `${33 + this.gridItems.length * 48}px`;\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const booleanColumnDef: ColDef = {\r\n      headerClass: 'dense',\r\n      width: 80,\r\n      cellClass: 'no-outline',\r\n      cellRenderer: TrueFalseComponent,\r\n      cellRendererParams: (() => {\r\n        const params: TrueFalseParams = {\r\n          reverse: false,\r\n        };\r\n        return params;\r\n      })(),\r\n    };\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: 'Requirement',\r\n          flex: 2,\r\n          minWidth: 200,\r\n          cellClass: 'no-outline',\r\n          valueGetter: (params) => {\r\n            const item: ApiPermissionsGridItem = params.data;\r\n            return item.requirement;\r\n          },\r\n        },\r\n        {\r\n          ...booleanColumnDef,\r\n          field: 'Class',\r\n          valueGetter: (params) => {\r\n            const item: ApiPermissionsGridItem = params.data;\r\n            return item.class;\r\n          },\r\n        },\r\n        {\r\n          ...booleanColumnDef,\r\n          field: 'Method',\r\n          valueGetter: (params) => {\r\n            const item: ApiPermissionsGridItem = params.data;\r\n            return item.method;\r\n          },\r\n        },\r\n        {\r\n          ...booleanColumnDef,\r\n          field: 'Effective',\r\n          valueGetter: (params) => {\r\n            const item: ApiPermissionsGridItem = params.data;\r\n            return item.effective;\r\n          },\r\n        },\r\n        {\r\n          field: 'Comments',\r\n          flex: 3,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          valueGetter: (params) => {\r\n            const item: ApiPermissionsGridItem = params.data;\r\n            return item.comments;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\nexport interface ApiPermissionsGridItem {\r\n  requirement: string;\r\n  class: boolean;\r\n  method: boolean;\r\n  effective: boolean;\r\n  comments: string;\r\n}\r\n","<h3>Permissions in WebAPIs</h3>\r\n\r\n<p>\r\n  Permissions must be specified in the code, using Attributes such as <code>[AllowAnonymous]</code>.\r\n  Read more about it in the <a href=\"https://docs.2sxc.org/web-api/custom/custom-web-api-security.html\" target=\"_blank\">\r\n    Docs for custom WebAPI Security</a>.\r\n</p>\r\n\r\n<ag-grid-angular class=\"ag-theme-material\" [rowData]=\"gridItems\" [gridOptions]=\"gridOptions\"\r\n  [style.height]=\"gridHeight\">\r\n</ag-grid-angular>\r\n","<h3><code>{{data.name}}</code> Parameters</h3>\r\n\r\n@if (!data.parameters.length) {\r\n  <p class=\"warning info-box\">\r\n    <mat-icon>info</mat-icon>\r\n    This endpoint doesn't seem to use any parameters.\r\n  </p>\r\n}\r\n\r\n@if (data.parameters.length) {\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data.parameters\"\r\n    [gridOptions]=\"gridOptions\" [style.height]=\"(33 + data.parameters.length * 48) + 'px'\">\r\n  </ag-grid-angular>\r\n}","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, Input } from '@angular/core';\r\nimport { WebApiAction, WebApiActionParameters } from '../../../app-administration/models/web-api-details';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { TrueFalseComponent } from '../true-false/true-false.component';\r\nimport { TrueFalseParams } from '../true-false/true-false.models';\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-api-action-params',\r\n    templateUrl: './action-params.component.html',\r\n    standalone: true,\r\n    imports: [MatIconModule, AgGridModule],\r\n})\r\nexport class DevRestApiActionParamsComponent {\r\n  @Input() data: WebApiAction;\r\n\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  constructor() { }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: 'Required',\r\n          headerClass: 'dense',\r\n          width: 80,\r\n          cellClass: 'no-padding no-outline'.split(' '),\r\n          valueGetter: (params) => {\r\n            const action: WebApiActionParameters = params.data;\r\n            return action.isOptional;\r\n          },\r\n          cellRenderer: TrueFalseComponent,\r\n          cellRendererParams: (() => {\r\n            const params: TrueFalseParams = {\r\n              reverse: false,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 200,\r\n          cellClass: 'no-outline',\r\n          valueGetter: (params) => {\r\n            const action: WebApiActionParameters = params.data;\r\n            return action.name;\r\n          },\r\n        },\r\n        {\r\n          field: 'Type',\r\n          flex: 2,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          valueGetter: (params) => {\r\n            const action: WebApiActionParameters = params.data;\r\n            return action.type;\r\n          },\r\n        },\r\n        {\r\n          headerName: 'Default Value',\r\n          field: 'DefaultValue',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          valueGetter: (params) => {\r\n            const action: WebApiActionParameters = params.data;\r\n            return action.defaultValue;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AllScenarios } from '../..';\r\nimport { DevRestApiViewModel } from '../api-template-vars';\r\n\r\n@Component({\r\n    selector: 'app-dev-api-introduction',\r\n    templateUrl: './introduction.component.html',\r\n    standalone: true,\r\n})\r\nexport class DevRestApiIntroductionComponent implements OnInit {\r\n\r\n  @Input() data: DevRestApiViewModel;\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>\r\n  To learn more about WebAPIs you may want to read these <a href=\"https://docs.2sxc.org/index.html\" target=\"_blank\">docs</a>:\r\n</p>\r\n<ul>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/index.html\" target=\"_blank\">WebAPIs in 2sxc</a></li>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/query-rest-web-api.html\" target=\"_blank\">Query REST API</a></li>\r\n</ul>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog eav-no-scrollbar\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Using REST with API <code>{{ vm.webApi?.name }}</code></div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <router-outlet></router-outlet>\r\n      <!-- Template below this line -->\r\n      <div style=\"display: flex; flex-wrap: wrap;\">\r\n        <app-selector-with-help style=\"display: block; max-width: 100%;\" label=\"Choose Scenario\" [items]=\"scenarios\"\r\n          [value]=\"vm.scenario.key\" (valueChange)=\"changeScenario($event)\">\r\n        </app-selector-with-help>\r\n        <mat-form-field color=\"accent\" style=\"width: 360px; max-width: calc(100% - 40px);\">\r\n          <mat-label>Select an Action on the Controller</mat-label>\r\n          <mat-select [value]=\"vm.selected?.name\" (selectionChange)=\"updateAction($event.value)\">\r\n            @for (action of vm.details.actions; track action) {\r\n              <mat-option [value]=\"action.name\">\r\n                {{ action.name }} ({{ action.verbs.join(', ') }})\r\n              </mat-option>\r\n            }\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <!-- now the tabs -->\r\n      <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n        <!-- Introduction -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Introduction\">\r\n            <mat-icon>emoji_objects</mat-icon>\r\n            <span>Introduction</span>\r\n          </div>\r\n          <app-dev-api-introduction [data]=\"vm\"></app-dev-api-introduction>\r\n          <app-dev-rest-tab-introduction [data]=\"vm\"></app-dev-rest-tab-introduction>\r\n        </mat-tab>\r\n        <!-- Absolute / Virtual URLs -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\"\r\n            [tippy]=\"(vm.scenario.useVirtual ? 'Virtual ' : 'Absolute ') + 'REST URLs'\">\r\n            <!-- <mat-icon>code</mat-icon> -->\r\n            <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n            <span>Call {{ vm.scenario.useVirtual ? 'Virtual' : 'Absolute' }} REST URLs</span>\r\n          </div>\r\n          <app-dev-rest-tab-examples-intro [data]=\"vm\"></app-dev-rest-tab-examples-intro>\r\n          <!-- Show Params of this Action -->\r\n          <app-dev-rest-api-action-params [data]=\"vm.selected\"></app-dev-rest-api-action-params>\r\n          <mat-accordion multi class=\"rest-urls-accordion\">\r\n            <mat-expansion-panel>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  <div>Specify Additional Test Parameters (Url / POST)</div>\r\n                </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description style=\"display: block;\">\r\n                <div class=\"form-with-textarea\">\r\n                  <mat-form-field color=\"accent\">\r\n                    <mat-label>Additional Url Parameters</mat-label>\r\n                    <input matInput placeholder=\"?id=27\" [value]=\"urlParams$.value\" (input)=\"updateParams($event)\">\r\n                  </mat-form-field>\r\n                  <mat-form-field color=\"accent\">\r\n                    <mat-label>Post body</mat-label>\r\n                    <textarea matInput [rows]=\"10\" placeholder=\"Placeholder\" [value]=\"urlParams$.value\"\r\n                      (input)=\"updateParams($event)\">\r\n                    </textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n          <!-- REST Tab showing the urls and code snippets -->\r\n          <app-dev-rest-urls-and-code [data]=\"vm\"></app-dev-rest-urls-and-code>\r\n        </mat-tab>\r\n        <!-- Permissions explained -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Permissions\">\r\n            <mat-icon>person</mat-icon>\r\n            <span>Permissions </span>\r\n          </div>\r\n          <app-dev-api-permissions [data]=\"vm\"></app-dev-api-permissions>\r\n        </mat-tab>\r\n        <!-- HTTP Headers Explained -->\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"HTTP headers and auto\">\r\n            <mat-icon>perm_device_information</mat-icon>\r\n            <span>HTTP headers & &nbsp;<code>/auto/</code></span>\r\n          </div>\r\n          <app-dev-rest-tab-headers [data]=\"vm\"></app-dev-rest-tab-headers>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { Component, HostBinding, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, filter, map, share, switchMap, take } from 'rxjs';\r\nimport { DevRestBase } from '..';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { SourceService } from '../../code-editor/services/source.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { GoToDevRest } from '../go-to-dev-rest';\r\nimport { generateWebApiCalls } from './api-samples';\r\nimport { DevRestApiViewModel } from './api-template-vars';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { DevRestHttpHeadersComponent } from '../tab-headers/tab-headers.component';\r\nimport { DevRestApiPermissionsComponent } from './permissions/permissions.component';\r\nimport { DevRestUrlsAndCodeComponent } from '../dev-rest-urls-and-code/dev-rest-urls-and-code.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { DevRestApiActionParamsComponent } from './action-params/action-params.component';\r\nimport { DevRestTabExamplesComponent } from '../tab-examples/tab-examples.component';\r\nimport { DevRestTabIntroductionComponent } from '../tab-introduction/tab-introduction.component';\r\nimport { DevRestApiIntroductionComponent } from './introduction/introduction.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { SelectorWithHelpComponent } from '../selector-with-help/selector-with-help.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { TippyStandaloneDirective } from '../../shared/directives/tippy-Standalone.directive';\r\n\r\nconst pathToApi = 'app/{appname}/api/{controller}/{action}';\r\n\r\n@Component({\r\n    selector: 'app-dev-rest-api',\r\n    templateUrl: './api.component.html',\r\n    styleUrls: ['../dev-rest-all.scss', '../header-selector.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        MatButtonModule,\r\n        TippyStandaloneDirective,\r\n        MatIconModule,\r\n        RouterOutlet,\r\n        SelectorWithHelpComponent,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatTabsModule,\r\n        DevRestApiIntroductionComponent,\r\n        DevRestTabIntroductionComponent,\r\n        DevRestTabExamplesComponent,\r\n        DevRestApiActionParamsComponent,\r\n        MatExpansionModule,\r\n        MatInputModule,\r\n        DevRestUrlsAndCodeComponent,\r\n        DevRestApiPermissionsComponent,\r\n        DevRestHttpHeadersComponent,\r\n        AsyncPipe,\r\n    ],\r\n    providers: [\r\n      SourceService,\r\n      AppDialogConfigService,\r\n    ],\r\n})\r\nexport class DevRestApiComponent extends DevRestBase<DevRestApiViewModel> implements OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  /** action name to check for */\r\n  selectedActionName$ = new BehaviorSubject<string>(null);\r\n\r\n  /** Test values for url params */\r\n  urlParams$ = new BehaviorSubject<string>('');\r\n\r\n  constructor(\r\n    appDialogConfigService: AppDialogConfigService,\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    context: Context,\r\n    dnnContext: DnnContext,\r\n    dialogRef: MatDialogRef<DevRestApiComponent>,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    private sourceService: SourceService,\r\n  ) {\r\n    super(appDialogConfigService, context, dialogRef, dnnContext, router, route, null);\r\n\r\n    const webApi$ = combineLatest([\r\n      this.route.paramMap.pipe(map(pm => pm.get(GoToDevRest.paramApiPath))),\r\n      this.sourceService.getWebApis(),\r\n    ]).pipe(map(([name, webApis]) => {\r\n      name = decodeURIComponent(name);\r\n      return webApis.find(w => w.path === name);\r\n    }));\r\n\r\n    const apiDetails$ = webApi$.pipe(\r\n      switchMap(webApi => this.sourceService.getWebApiDetails(webApi.path)),\r\n      share());\r\n    apiDetails$.pipe(take(1), filter(x => !!x?.actions?.length)).subscribe(x => this.selectedActionName$.next(x?.actions[0]?.name));\r\n    // apiDetails$.subscribe(x => console.log('details', x));\r\n\r\n    const selectedAction$ = combineLatest([apiDetails$, this.selectedActionName$])\r\n      .pipe(map(([details, name]) => details?.actions?.find(a => a.name === name)));\r\n\r\n    // Build Root Stream for the root folder\r\n    const root$ = combineLatest([webApi$, apiDetails$, selectedAction$, this.scenario$, this.dialogSettings$]).pipe(\r\n      map(([webApi, details, action, scenario, dialogSettings]) => {\r\n        console.log('webApi object', webApi);\r\n        const resolved = pathToApi\r\n          .replace('{appname}', scenario.inSameContext ? 'auto' : encodeURI(dialogSettings.Context.App.Folder))\r\n          .replace('/api/', `/${webApi.folder}/`)\r\n          .replace('{controller}', details.controller.replace(/controller/i, ''))\r\n          .replace('{action}', action.name);\r\n        return this.rootBasedOnScenario(resolved, scenario);\r\n      }),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([webApi$, apiDetails$, selectedAction$, this.urlParams$, this.scenario$]),\r\n      combineLatest([root$, this.dialogSettings$]),\r\n    ])\r\n      .pipe(\r\n        map(([[webApi, details, selected, urlParams, scenario], [root, /* item, */ diag]]) => ({\r\n          ...this.buildBaseViewModel(webApi.name, webApi.path, diag, null, root, scenario),\r\n          webApi,\r\n          details,\r\n          selected,\r\n          permissionsHasAnonymous: true, // dummy value to prevent error being shown\r\n          apiCalls: generateWebApiCalls(dnnContext.$2sxc, scenario, context, root, urlParams, selected.verbs),\r\n        })),\r\n      );\r\n  }\r\n\r\n  updateParams(event: Event) {\r\n    this.urlParams$.next((event.target as HTMLInputElement).value);\r\n  }\r\n\r\n  updateAction(value: string) {\r\n    this.selectedActionName$.next(value);\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const devRestDialog: DialogConfig = {\r\n  name: 'DEV_REST_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { DevRestEntryComponent } = await import('./entry/entry.component');\r\n    return DevRestEntryComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { DevRestApiComponent } from './api/api.component';\r\nimport { devRestDialog } from './dev-rest-dialog.config';\r\nimport { GoToDevRest } from './go-to-dev-rest';\r\nimport { DevRestQueryComponent } from './query/query.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: devRestDialog, title: 'REST API' }, children: [\r\n      // 2dm 2024-03-19 should not be used any more, as now a primary route in /app\r\n      // {\r\n      //   path: `data/:${GoToDevRest.paramTypeName}`, component: DevRestDataComponent, children: [\r\n      //     GoToPermissions.route,\r\n      //   ]\r\n      // },\r\n      /* This route is used in Visual Query to open REST as Dialog */\r\n      {\r\n        path: `query/:${GoToDevRest.paramQuery}`, component: DevRestQueryComponent, children: [\r\n          GoToPermissions.route,\r\n        ]\r\n      },\r\n      { path: `custom/:${GoToDevRest.paramApiPath}`, component: DevRestApiComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DevRestRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { MAT_SELECT_CONFIG } from '@angular/material/select';\r\nimport { DevRestRoutingModule } from './dev-rest-routing.module';\r\n@NgModule({\r\n    imports: [\r\n      // TODO:: Remove routing module from imports (Standalone)\r\n      DevRestRoutingModule\r\n    ],\r\n    providers: [\r\n      // @2dg, no impact of style since angular 16+\r\n        // { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n\r\n        // @2dg, dev-rest not use Icon in a select\r\n        // { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } }\r\n    ],\r\n})\r\nexport class DevRestModule { }\r\n","import * as i0 from '@angular/core';\nimport { inject, booleanAttribute, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { InteractivityChecker, A11yModule } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\nlet nextId = 0;\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/** Directive to display a text badge. */\nclass MatBadge {\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateDescription(newDescription);\n    }\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        this._color = 'primary';\n        /** Whether the badge should overlap its contents or not */\n        this.overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        /** Whether the OnInit lifecycle hook has run yet */\n        this._isInitialized = false;\n        /** InteractivityChecker to determine if the badge host is focusable. */\n        this._interactivityChecker = inject(InteractivityChecker);\n        this._document = inject(DOCUMENT);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n            const matIconTagName = 'mat-icon';\n            // Heads-up for developers to avoid putting matBadge on <mat-icon>\n            // as it is aria-hidden by default docs mention this at:\n            // https://material.angular.io/components/badge/overview#accessibility\n            if (nativeElement.tagName.toLowerCase() === matIconTagName &&\n                nativeElement.getAttribute('aria-hidden') === 'true') {\n                console.warn(`Detected a matBadge on an \"aria-hidden\" \"<mat-icon>\". ` +\n                    `Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.` +\n                    `\\n${nativeElement.outerHTML}`);\n            }\n        }\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n            this._inlineBadgeDescription?.remove();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Gets whether the badge's host element is interactive. */\n    _isHostInteractive() {\n        // Ignore visibility since it requires an expensive style caluclation.\n        return this._interactivityChecker.isFocusable(this._elementRef.nativeElement, {\n            ignoreVisibility: true,\n        });\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent ?? ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateDescription(newDescription) {\n        // Always start by removing the aria-describedby; we will add a new one if necessary.\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        // NOTE: We only check whether the host is interactive here, which happens during\n        // when then badge content changes. It is possible that the host changes\n        // interactivity status separate from one of these. However, watching the interactivity\n        // status of the host would require a `MutationObserver`, which is likely more code + overhead\n        // than it's worth; from usages inside Google, we see that the vats majority of badges either\n        // never change interactivity, or also set `matBadgeHidden` based on the same condition.\n        if (!newDescription || this._isHostInteractive()) {\n            this._removeInlineDescription();\n        }\n        this._description = newDescription;\n        // We don't add `aria-describedby` for non-interactive hosts elements because we\n        // instead insert the description inline.\n        if (this._isHostInteractive()) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        else {\n            this._updateInlineDescription();\n        }\n    }\n    _updateInlineDescription() {\n        // Create the inline description element if it doesn't exist\n        if (!this._inlineBadgeDescription) {\n            this._inlineBadgeDescription = this._document.createElement('span');\n            this._inlineBadgeDescription.classList.add('cdk-visually-hidden');\n        }\n        this._inlineBadgeDescription.textContent = this.description;\n        this._badgeElement?.appendChild(this._inlineBadgeDescription);\n    }\n    _removeInlineDescription() {\n        this._inlineBadgeDescription?.remove();\n        this._inlineBadgeDescription = undefined;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadge, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.AriaDescriber }, { token: i0.Renderer2 }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: MatBadge, selector: \"[matBadge]\", inputs: { color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\", booleanAttribute], disabled: [\"matBadgeDisabled\", \"disabled\", booleanAttribute], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\", booleanAttribute] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.AriaDescriber }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: [{ alias: 'matBadgeOverlap', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matBadgeDisabled', transform: booleanAttribute }]\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: [{ alias: 'matBadgeHidden', transform: booleanAttribute }]\n            }] } });\n\nclass MatBadgeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, declarations: [MatBadge], imports: [A11yModule, MatCommonModule], exports: [MatBadge, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, MatCommonModule],\n                    exports: [MatBadge, MatCommonModule],\n                    declarations: [MatBadge],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n"],"x_google_ignoreList":[15]}