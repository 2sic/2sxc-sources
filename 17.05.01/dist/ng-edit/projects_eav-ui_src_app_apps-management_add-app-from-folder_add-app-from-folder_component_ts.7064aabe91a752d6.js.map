{"version":3,"file":"projects_eav-ui_src_app_apps-management_add-app-from-folder_add-app-from-folder_component_ts.7064aabe91a752d6.js","mappings":"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","names":["AppNameShowComponent","agInit","params","this","name","value","tooltip","tooltipGetter","data","refresh","static","t","core","In1","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","MatIconModule","i1","SharedComponentsModule","i2","styles","CheckboxCellComponent","onChange","event","currentTarget","checked","$event","isDisabled","vm_r1","pendingApps","ctx_r3","gridOptions","AddAppFromFolderComponent_Conditional_0_Conditional_8_Template","AddAppFromFolderComponent_Conditional_0_Conditional_9_Template","_r6","ctx_r5","closeDialog","ctx_r7","install","length","ctx_r0","installing","AddAppFromFolderComponent","BaseSubsinkComponent","constructor","dialogRef","appsListService","snackBar","featuresService","super","hostClass","buildGridOptions","refreshApps$","Subject","isAddFromFolderEnabled$","BehaviorSubject","ngOnInit","subscription","add","isEnabled$","FeatureNames","AppSyncWithSiteFiles","pipe","distinctUntilChanged","subscribe","viewModel$","combineLatest","startWith","undefined","switchMap","getPendingApps","catchError","of","share","map","ngOnDestroy","complete","close","app","enabled","push","splice","indexOf","open","duration","installPendingApps","error","next","defaultGridOptions","columnDefs","field","width","cellClass","sortable","cellRenderer","cellRendererParams","flex","sort","filter","pendingApp","ServerFolder","Folder","Version","Description","i3","i4","hostVars","hostBindings","AppsListService","FeaturesService","AddAppFromFolderComponent_Conditional_0_Template","AddAppFromFolderComponent_contFlowTmp","FeaturesModule","i5","AgGridModule","i6","MatDialogActions","MatButtonModule","i7","AsyncPipe"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/app-name-show/app-name-show.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.ts","./projects/eav-ui/src/app/apps-management/add-app-from-folder/checkbox-cell/checkbox-cell.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.html","./projects/eav-ui/src/app/apps-management/add-app-from-folder/add-app-from-folder.component.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\nimport { SharedComponentsModule } from '../../../shared/shared-components.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n    selector: 'app-app-name-show',\r\n    templateUrl: './app-name-show.component.html',\r\n    styleUrls: ['./app-name-show.component.scss'],\r\n    standalone: true,\r\n    imports: [MatIconModule, SharedComponentsModule],\r\n})\r\nexport class AppNameShowComponent implements ICellRendererAngularComp {\r\n  name: string;\r\n  tooltip: string;\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.name = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"name-box\">\r\n  <span>{{ name }}</span>\r\n  <mat-icon class=\"info-icon\" [tippy]=\"tooltip\">info</mat-icon>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { CheckboxCellParams } from './checkbox-cell.model';\r\n\r\n@Component({\r\n    selector: 'app-checkbox-cell',\r\n    templateUrl: './checkbox-cell.component.html',\r\n    styleUrls: ['./checkbox-cell.component.scss'],\r\n    standalone: true,\r\n\r\n})\r\nexport class CheckboxCellComponent implements ICellRendererAngularComp {\r\n  params: ICellRendererParams & CheckboxCellParams;\r\n\r\n  agInit(params: ICellRendererParams & CheckboxCellParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  public onChange(event: any) {\r\n    this.params.onChange(this.params.data, event.currentTarget.checked);\r\n  }\r\n}\r\n","<div class=\"checkbox-box\">\r\n  <input class=\"checkbox-input\" type=\"checkbox\" [disabled]=\"params.isDisabled\" [checked]=\"params.value\" (change)=\"onChange($event)\">\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Add App from Folder</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n      <p>\r\n        Select an app from the apps-folder which has been copied there (or git-cloned) but not installed yet.\r\n      </p>\r\n      @if (vm.pendingApps?.length == 0) {\r\n        <p>\r\n          Nothing to show. All apps in the 2sxc folder are already installed.\r\n        </p>\r\n      }\r\n      @if (vm.pendingApps?.length > 0) {\r\n        <div>\r\n          <ag-grid-angular class=\"ag-theme-material eav-grid\" [rowData]=\"vm.pendingApps\"\r\n            [gridOptions]=\"gridOptions\">\r\n          </ag-grid-angular>\r\n        </div>\r\n      }\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button type=\"button\" mat-raised-button (click)=\"closeDialog()\">\r\n        Cancel\r\n      </button>\r\n      <button type=\"button\" mat-raised-button color=\"accent\" [disabled]=\"pendingApps.length === 0 || installing\"\r\n        (click)=\"install()\">\r\n        Install\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, HostBinding, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MatDialogActions } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, catchError, combineLatest, distinctUntilChanged, map, Observable, of, share, startWith, Subject, Subscription, switchMap } from \"rxjs\";\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BaseSubsinkComponent } from '../../shared/components/base-subsink-component/base-subsink.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from \"../../shared/constants/default-grid-options.constants\";\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { PendingApp } from \"../models/app.model\";\r\nimport { AppsListService } from \"../services/apps-list.service\";\r\nimport { AppNameShowComponent } from './app-name-show/app-name-show.component';\r\nimport { CheckboxCellComponent } from './checkbox-cell/checkbox-cell.component';\r\nimport { CheckboxCellParams } from './checkbox-cell/checkbox-cell.model';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\nimport { FeaturesModule } from '../../features/features.module';\r\n\r\n@Component({\r\n    selector: 'app-add-app-from-folder',\r\n    templateUrl: './add-app-from-folder.component.html',\r\n    styleUrls: ['./add-app-from-folder.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        FeaturesModule,\r\n        AgGridModule,\r\n        MatDialogActions,\r\n        MatButtonModule,\r\n        AsyncPipe,\r\n    ],\r\n    providers: [\r\n        AppsListService,\r\n        FeaturesService,\r\n    ]\r\n})\r\nexport class AddAppFromFolderComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  gridOptions = this.buildGridOptions();\r\n  pendingApps: PendingApp[] = [];\r\n  installing: boolean = false;\r\n\r\n  private refreshApps$ = new Subject<void>();\r\n  private isAddFromFolderEnabled$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<AddAppFromFolderViewModel>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AddAppFromFolderComponent>,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n    private featuresService: FeaturesService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(this.featuresService.isEnabled$(FeatureNames.AppSyncWithSiteFiles)\r\n      .pipe(distinctUntilChanged())\r\n      .subscribe(this.isAddFromFolderEnabled$)\r\n    );\r\n    this.viewModel$ = combineLatest([\r\n      this.refreshApps$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.appsListService.getPendingApps().pipe(catchError(() => of(undefined)))),\r\n        share()\r\n      )\r\n    ]).pipe(\r\n      map(([pendingApps]) => ({ pendingApps })),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.refreshApps$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onChange(app: PendingApp, enabled: boolean) {\r\n    if (enabled)\r\n      this.pendingApps.push(app);\r\n    else\r\n      this.pendingApps.splice(this.pendingApps.indexOf(app), 1);\r\n  }\r\n\r\n  install(): void {\r\n    this.installing = true;\r\n    this.snackBar.open('Installing', undefined, { duration: 2000 });\r\n    this.appsListService.installPendingApps(this.pendingApps).subscribe({\r\n      error: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Failed to install app. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.installing = false;\r\n        this.snackBar.open('Installed app', undefined, { duration: 2000 });\r\n        this.closeDialog();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          field: '',\r\n          width: 40,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          cellRenderer: CheckboxCellComponent,\r\n          cellRendererParams: (() => {\r\n            const params: CheckboxCellParams = {\r\n              isDisabled: !this.isAddFromFolderEnabled$.value,\r\n              onChange: (app, enabled) => this.onChange(app, enabled),\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 1,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          cellRenderer: AppNameShowComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<PendingApp> = {\r\n              tooltipGetter: (pendingApp) => `Server folder: ${pendingApp.ServerFolder}\\nFolder: ${pendingApp.Folder}\\nVersion: ${pendingApp.Version}\\nDescription: ${pendingApp.Description}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ]\r\n    }\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface AddAppFromFolderViewModel {\r\n  pendingApps: PendingApp[];\r\n}\r\n"],"x_google_ignoreList":[]}