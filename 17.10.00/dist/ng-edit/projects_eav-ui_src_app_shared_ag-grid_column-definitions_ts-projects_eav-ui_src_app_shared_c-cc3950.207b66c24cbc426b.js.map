{"version":3,"file":"projects_eav-ui_src_app_shared_ag-grid_column-definitions_ts-projects_eav-ui_src_app_shared_c-cc3950.207b66c24cbc426b.js","mappings":"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","names":["AppDialogConfigService","ServiceBase","constructor","http","context","globalConfigService","featuresService","super","EavLogger","this","dialogSettings$","log","add","svcId","loadFromService","ngOnDestroy","destroy","getCurrent$","appId","getShared$","getSitePrimaryApp$","pipe","map","dc","Context","Site","PrimaryApp","getGlobalPrimaryApp$","System","getDialogSettings","shareReplay","refCount","reqBy","get","params","toString","dlgSettings","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","static","t","i0","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_8__","wxM","factory","ɵfac","ExportAppPartsService","dnnContext","getContentInfo","scope","$2sxc","apiUrl","webApiAppPartsRoot","appid","zoneId","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ExportAppService","getAppInfo","webApiAppRoot","exportApp","includeContentGroups","resetAppGuid","exportForVersionControl","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","file","formData","FormData","append","post","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","delete","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","AgBoolCellIconsDefault","states","true","tooltip","icon","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","data","_r3","_c0","ctx_r1","clickable","ctx_r2","AgBoolIconRenderer","agInit","value","allSettings","settings","d","getUrl","refresh","core","In1","selectors","decls","vars","consts","template","rf","ctx","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","ColumnDefinitions","ActionsPinnedRight1","width","cellClass","split","pinned","ActionsPinnedRight3","ActionsPinnedRight4","ActionsPinnedRight5","IconShow","headerName","headerClass","sortable","BooleanFilterComponent","valueGetter","IsHidden","cellRenderer","Character","field","Number","TextWide","flex","minWidth","TextNarrow","BaseComponent","BaseSubsinkComponent","router","route","refreshOnChildClosedShallow","events","event","NavigationEnd","startWith","snapshot","firstChild","pairwise","hadChild","hasChild","_angular_core__WEBPACK_IMPORTED_MODULE_7__","Sc5","features","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","node","getValue","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","_angular_core__WEBPACK_IMPORTED_MODULE_0__","$event","IdFieldComponent","snackBar","align","tooltipGetter","copy","copyToClipboard","duration","defaultGridOptions","accentedSort","animateRows","enableCellTextSelection","headerHeight","suppressScrollOnNewData","valueCache","defaultColDef","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","TippyStandaloneDirective","elementRef","ngOnChanges","changes","tippy","nativeElement","animation","arrow","tippyArrow","placement","theme","allowHTML","tippyAllowHtml","setContent","tippyDisabled","disable","enable","tippyPlacement","setProps","tippyShowDelay","showDelay","parseInt","delay","inputs","standalone","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","readAsText","QueryDefinitionService","fetchPipeline","pipelineEntityId","dataSources","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","push","Description","EntityGuid","EntityId","undefined","Name","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","Icon","In","Out","PrimaryType","TypeNameForUi","UiHint","typeNameFilter","input","format","globalParts","classFullNameParts","savePipeline","pipeline","newPipelineModel","runPipeline","top","debugStream","source","sourceOut","out","name","sourceName","ctx_r3","option_r10","_r19","$implicit","ctx_r18","show","QueryResultComponent_For_18_Conditional_2_Template","QueryResultComponent_For_18_Conditional_3_Template","param_r22","QueryResultComponent_Conditional_22_div_1_Template","QueryResultComponent_Conditional_22_For_5_Template","ctx_r5","parameters","source_r27","Definition","config_r35","key","QueryResultComponent_For_37_Conditional_2_Template","QueryResultComponent_For_37_For_10_Template","Guid","Type","Configuration","Error","stream_r40","Source","SourceOut","Target","TargetIn","Count","QueryResultComponent","dialogData","dialogRef","visualQueryService","ngOnInit","pipelineModel$","Params","testParams","TestParameters","concat","timeUsed","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_15_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_For_18_Template","QueryResultComponent_Conditional_22_Template","QueryResultComponent_div_24_Template","QueryResultComponent_For_37_Template","QueryResultComponent_div_40_Template","QueryResultComponent_For_53_Template","StreamErrorResultComponent","errorData","openInsights","VisualQueryService","queryDefinitionService","titleService","dialog","viewContainerRef","zone","metadataService","contentTypesService","changeDetectorRef","BehaviorSubject","dataSources$","putEntityCountOnConnections$","Subject","dataSourceConfigs$","pipelineId","paramMap","refreshPipeline","refreshDataSourceConfigs","complete","init","attachKeyboardSave","subscription","subscribe","editPipelineEntity","formUrl","convertFormToUrl","items","navigate","relativeTo","saveAndRun","save","run","showDataSourceDetails","showDetails","cloneDeep","visualDesignerData","GeneralHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","next","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","calculateDataSourceConfigs","dataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","Title","editDataSource","contentTypeName","getMetadata","metadata","entity","targetType","keyType","Items","retrieveContentType","ContentTypeName","For","target","TargetType","callback","pipelineResult","showQueryResult","console","warn","setTimeout","stream","showStreamErrorResult","streamResult","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","panelClass","markForCheck","ErrorData","runOutsideAngular","fromEvent","navigator","platform","match","metaKey","ctrlKey","keyCode","preventDefault","i5","i6","i7","guiTypes","App","Label","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Unknown","Debug","calculateTypeInfos","typeInfos","typeInfo","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","isSource","pipelineResultExists","controls","label","touched","errors","required","scopeOption_r10","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r16","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","ctx_r6","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","_r22","ctx_r21","toggleGuidedLabel","ctx_r23","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_r25","ctx_r24","toggleAdvancedMode","RenameStreamComponent","hostClass","buildForm","checked","rename","formValue","form","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scopes","valueChanges","distinctUntilChanged","values","Scope","patchValue","getScopes","filtered","s","o","hostVars","hostBindings","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","dataSrcIdPrefix","Plumber","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","lineCount","linePaintDefault","stroke","strokeWidth","outlineStroke","outlineWidth","lineColors","maxCols","uuidColorMap","bulkDelete","instance","jsPlumb","getInstance","getInstanceDefaults","batch","initDomDataSources","initWirings","bindEvents","repaintEverything","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","each","endpoint","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","cssClass","click","overlay","AllowEdit","nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","domDataSource","querySelector","draggable","grid","stop","finalPos","addEndpoint","targetEndpointUnlimited","buildTargetEndpoint","maxConnections","makeTarget","makeSource","buildSourceEndpoint","wire","pipeDataSource","connect","uuids","paintStyle","message","to","endpointName","isIn","isDynamic","getEndpointInfo","endpointInfo","enabled","fill","radius","anchor","faces","overlays","getEndpointOverlays","endpointOrOverlay","onChangeLabel","isTarget","dropOptions","hoverClass","activeClass","location","afterClosed","newLabel","bind","info","targetEndpoint","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","trimmed","trim","endsWith","substring","dataSource_r5","ctx_r17","configureDataSource","vm_r1","ctx_r20","openHelp","_r26","remove","config_r28","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","_r37","ctx_r35","allowEdit","editName","ctx_r38","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","ctx_r4","_c2","Width","_c3","isOutDataSource","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","PlumbEditorComponent","scriptLoaded$","loadScripts","test","src","plumber","pipelineDesignerData$","objectsEqual","viewModel$","combineLatest","pipelineDesignerData","detectChanges","ngAfterViewInit","domDataSourcesLoaded$","domDataSourcesRef","scriptLoaded","domDataSourcesLoaded","domRootRef","partAssemblyAndType","confirm","newName","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","PlumbEditorComponent_contFlowTmp","param_r8","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","pipelineModel_r1","param_r15","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","_r23","ctx_r22","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_For_8_Template","warnings_r24","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_Template","_r35","ctx_r34","saveAndRunQuery","ctx_r36","ctx_r37","editPipeline","ctx_r39","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","RunExplorerComponent_Conditional_0_Conditional_29_Template","ctx_r40","openRestApi","RunExplorerComponent_Conditional_0_contFlowTmp","visualDesignerData$","warnings$","RunExplorerComponent","asObservable","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","RunExplorerComponent_contFlowTmp","dataSource_r10","_r16","ctx_r15","ctx_r9","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_2_0","toggledItems","_r21","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","difficulties","difficulty$","difficulty","filterAndSortDataSources","maxDifficulty","sort","a","b","toLocaleLowerCase","localeCompare","type","advanced","item","toggleInArray","index","AddExplorerComponent_Conditional_0_Template","AddExplorerComponent_contFlowTmp","routes","path","component","VisualQueryComponent","explorer","activeExplorer","toggleExplorer","children","matcher","edit","loadChildren","all","__webpack_require__","e","then","m","EditModule","history","VisualQueryRoutingModule","a4G","s3X","RouterModule","forChild","VisualQueryModule","MetadataService","ContentTypesService","provide","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","MAT_SELECT_CONFIG","hideSingleSelectionIndicator","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","hideIcon","imports","CommonModule","SharedComponentsModule","MatIconModule","MatButtonModule","MatSlideToggleModule","MatSnackBarModule","MatDialogModule","MatTabsModule","MatFormFieldModule","ReactiveFormsModule","MatSelectModule","MatInputModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/directives/tippy-Standalone.directive.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query-routing.module.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html","./projects/eav-ui/src/app/visual-query/visual-query.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\n\r\nconst logThis = false;\r\n\r\nconst webApiSettings = 'admin/dialog/settings';\r\n\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService extends ServiceBase implements OnDestroy {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    // private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    super(new EavLogger('AppDialogConfigService', logThis));\r\n    this.log.add('using context #', this.context.log.svcId);\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.destroy();\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions in dialogSettings$ are killed\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getCurrent$(): Observable<DialogSettings> {\r\n    const appId = this.context.appId;\r\n    this.log.add('getCurrent$', 'appId', appId);\r\n    return this.getShared$(appId);\r\n  }\r\n\r\n    // new 2dg\r\n    getSitePrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.Site.PrimaryApp));\r\n    }\r\n  \r\n    getGlobalPrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.System.PrimaryApp));\r\n    }\r\n  \r\n\r\n  getShared$(appId: number): Observable<DialogSettings> {\r\n    this.log.add('getShared$', 'appId', appId);\r\n    // if (!this.dialogSettings$[appIdToUse])\r\n    this.dialogSettings$[appId] ??= this.getDialogSettings(appId, 'getShared$').pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n  }\r\n\r\n  getDialogSettings(appId?: number, reqBy?: string): Observable<DialogSettings> {\r\n    this.log.add('getDialogSettings', 'appId', appId, 'reqBy', reqBy);\r\n    return this.http.get<DialogSettings>(webApiSettings, {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dlgSettings => {\r\n        dlgSettings.Context.Language.List = dlgSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dlgSettings;\r\n      }),\r\n      tap(dlgSettings => {\r\n        this.globalConfigService.allowDebug(dlgSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  exportApp(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Export')\r\n      + '?appId=' + this.context.appId\r\n      + '&zoneId=' + this.context.zoneId\r\n      + '&includeContentGroups=' + includeContentGroups\r\n      + '&resetAppGuid=' + resetAppGuid;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityList } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = { \r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nexport class ColumnDefinitions\r\n{\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n}","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\nimport { EavLogger } from '../../logging/eav-logger';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    public log?: EavLogger\r\n  ) {\r\n    super();\r\n    this.log ??= new EavLogger('BaseComponent', false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  // TODO @2dg not longer in use after refactoring SideNav with Routing\r\n  // protected refreshOnChildClosedDeep() {\r\n  //   return this.router.events.pipe(\r\n  //     filter(event => event instanceof NavigationEnd),\r\n  //     startWith(!!this.route.snapshot.firstChild.firstChild),\r\n  //     map(() => !!this.route.snapshot.firstChild.firstChild),\r\n  //     pairwise(),\r\n  //     filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n  //   )\r\n  // }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport tippy, { Instance, Placement, Props } from 'tippy.js';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n    selector: '[tippy]',\r\n    standalone: true\r\n})\r\nexport class TippyStandaloneDirective implements OnChanges, OnDestroy {\r\n  /** Message to show in Tippy */\r\n  @Input() tippy: string | null | undefined;\r\n\r\n  /** disable Tippy */\r\n  @Input() tippyDisabled: string | boolean | null | undefined;\r\n\r\n  /**\r\n   * 'top' | 'top-start' | 'top-end' |\r\n   * 'right' | 'right-start' | 'right-end' |\r\n   * 'bottom' | 'bottom-start' | 'bottom-end' |\r\n   * 'left' | 'left-start' | 'left-end' |\r\n   * 'auto' | 'auto-start' | 'auto-end'\r\n   */\r\n  @Input() tippyPlacement: string | null | undefined;\r\n\r\n  /** delay showing Tippy in ms */\r\n  @Input() tippyShowDelay: string | number | null | undefined;\r\n\r\n  /** enable html in Tippy */\r\n  @Input() tippyAllowHtml: boolean | null | undefined;\r\n\r\n  /** show arrow in Tippy - only respected on setup, changes ATM not handled */\r\n  @Input() tippyArrow: boolean | null | undefined;\r\n\r\n  private tooltip: Instance<Props>;\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // Init Tooltip on first round\r\n    if (this.tooltip == null)\r\n      this.tooltip = tippy(this.elementRef.nativeElement, {\r\n        animation: 'scale-subtle',\r\n        arrow: !!this.tippyArrow,\r\n        duration: [100, 50],\r\n        placement: 'bottom',\r\n        theme: '2sxc',\r\n        allowHTML: !!this.tippyAllowHtml,\r\n      });\r\n\r\n    if (changes['tippy'] != null)\r\n      this.tooltip.setContent(this.tippy);\r\n\r\n    if (changes['tippyDisabled'] != null)\r\n      this.tippyDisabled ? this.tooltip.disable() : this.tooltip.enable();\r\n\r\n    if (changes['tippyPlacement'] != null)\r\n      this.tooltip.setProps({ placement: this.tippyPlacement as Placement });\r\n\r\n    if (changes['tippyShowDelay'] != null) {\r\n      const showDelay = typeof this.tippyShowDelay === 'number' ? this.tippyShowDelay : parseInt(this.tippyShowDelay, 10);\r\n      this.tooltip.setProps({ delay: [showDelay, null] });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tooltip?.destroy();\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.http.get<PipelineModel>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryGet), {\r\n      params: { appId: this.context.appId.toString(), id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.http.get<DataSource[]>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDataSources), {\r\n      params: {\r\n        appid: this.context.appId,\r\n        zoneId: this.context.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiQuerySave),\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.context.appId.toString(), Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.http.get<PipelineResult>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryRun), {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.http.get<PipelineResult>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDebugStream), {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos.\r\n      Executed in {{ timeUsed }}ms ({{ ticksUsed }} ticks)\r\n    </p>\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n\r\n        <p class=\"eav-tab-description\">\r\n          @if (top === 0) {\r\n            Showing All results\r\n          }\r\n          @if (top !== 0) {\r\n            Showing top {{ top }} results\r\n          }\r\n          @for (option of optionsForTop; track option) {\r\n            <button mat-button (click)=\"show(option)\">\r\n              Show\r\n              @if (option === 0) {\r\n                All\r\n              }\r\n              @if (option !== 0) {\r\n                {{ option }}\r\n              }\r\n            </button>\r\n          }\r\n        </p>\r\n        <pre>{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n          <br />\r\n          <ul>\r\n            @for (param of parameters; track param) {\r\n              <li>{{ param }}</li>\r\n            }\r\n          </ul>\r\n        </mat-tab>\r\n      }\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Name and Guid</th>\r\n            <th>Type</th>\r\n            <th>Configuration</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (source of sources | keyvalue; track source) {\r\n            <tr>\r\n              <td>\r\n                @if (source.value.Definition?.Name) {\r\n                  <div>{{ source.value.Definition?.Name }}</div>\r\n                }\r\n                <pre>{{ source.value.Guid }}</pre>\r\n              </td>\r\n              <td>{{ source.value.Type }}</td>\r\n              <td>\r\n                <ol>\r\n                  @for (config of source.value.Configuration | keyvalue; track config) {\r\n                    <li>\r\n                      <b>{{ config.key }}</b>=<em>{{ config.value }}</em>\r\n                    </li>\r\n                  }\r\n                </ol>\r\n              </td>\r\n              <td>{{ source.value.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Source</th>\r\n            <th>Target</th>\r\n            <th>Items</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (stream of streams; track stream) {\r\n            <tr>\r\n              <td>\r\n                <pre>{{ stream.Source + \":\" + stream.SourceOut }}</pre>\r\n              </td>\r\n              <td>\r\n                <pre>{{ stream.Target + \":\" + stream.TargetIn }}</pre>\r\n              </td>\r\n              <td>{{ stream.Count }}</td>\r\n              <td>{{ stream.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\n\r\n@Component({\r\n  selector: 'app-query-result',\r\n  templateUrl: './query-result.component.html',\r\n  styleUrls: ['./query-result.component.scss'],\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialogRef: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel$.value.Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) { return; }\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-stream-error-result',\r\n  templateUrl: './stream-error-result.component.html',\r\n  styleUrls: ['./stream-error-result.component.scss'],\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialogRef: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { BehaviorSubject, filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\n// tslint:disable-next-line:max-line-length\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\n\r\n@Injectable()\r\nexport class VisualQueryService extends BaseComponent implements OnDestroy {\r\n  pipelineModel$ = new BehaviorSubject<PipelineModel>(null);\r\n  dataSources$ = new BehaviorSubject<DataSource[]>(null);\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n  dataSourceConfigs$ = new BehaviorSubject<DataSourceConfigs>({});\r\n  pipelineResult?: PipelineResult;\r\n\r\n  private pipelineId = parseInt(this.route.snapshot.paramMap.get('pipelineId'), 10);\r\n  private refreshPipeline = false;\r\n  private refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private titleService: Title,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private metadataService: MetadataService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { \r\n    super(router, route);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pipelineModel$.complete();\r\n    this.dataSources$.complete();\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.fetchDataSources(() => this.fetchPipeline(true, true, false));\r\n    this.attachKeyboardSave();\r\n    this.subscription.add(this.refreshOnChildClosedShallow().subscribe(() => { \r\n      if (this.refreshPipeline || this.refreshDataSourceConfigs) {\r\n        this.fetchPipeline(this.refreshPipeline, this.refreshDataSourceConfigs, this.refreshPipeline);\r\n      }\r\n      this.refreshPipeline = false;\r\n      this.refreshDataSourceConfigs = false;\r\n     }));\r\n  }\r\n\r\n  editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [{ EntityId: this.pipelineModel$.value.Pipeline.EntityId }],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n      this.refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  saveAndRun(save: boolean, run: boolean) {\r\n    if (save && run) {\r\n      this.savePipeline(() => { this.runPipeline(); });\r\n    } else if (save) {\r\n      this.savePipeline();\r\n    } else if (run) {\r\n      this.runPipeline();\r\n    }\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const visualDesignerData: Record<string, any> = GeneralHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {};\r\n    visualDesignerData.ShowDataSourceDetails = showDetails;\r\n    pipelineModel.Pipeline.VisualDesignerData = JSON.stringify(visualDesignerData);\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const newPipelineDataSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (pipelineModel.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    pipelineModel.DataSources.push(newPipelineDataSource);\r\n    this.pipelineModel$.next(pipelineModel);\r\n    this.savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.DataSources = pipelineModel.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Name = name;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Description = description;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!pipelineDataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    pipelineDataSource.VisualDesignerData = { ...pipelineDataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  private calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) { return; }\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') { return; }\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) { return; }\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title != null && attributeValue[0]?.Id != null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs$.next(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources$.value.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const targetType = eavConstants.metadata.entity.targetType;\r\n    const keyType = eavConstants.metadata.entity.keyType;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.metadataService.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [{ EntityId: metadata.Items[0].Id }],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n        this.refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.contentTypesService.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [{\r\n              ContentTypeName: contentTypeName,\r\n              For: {\r\n                Target: eavConstants.metadata.entity.target,\r\n                TargetType: eavConstants.metadata.entity.targetType,\r\n                Guid: key,\r\n              },\r\n            }],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n          this.refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.queryDefinitionService.savePipeline(this.pipelineModel$.value).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel$.next(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.queryDefinitionService.runPipeline(this.pipelineModel$.value.Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.pipelineResult = pipelineResult;\r\n        this.showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel$.next(cloneDeep(this.pipelineModel$.value));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25) {\r\n    if (stream.Error) {\r\n      this.showStreamErrorResult(stream);\r\n      return;\r\n    }\r\n\r\n    if (stream.Count === 0) { return; }\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel$.value.Pipeline.EntityId;\r\n    this.queryDefinitionService.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel$.value.DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar) {\r\n      this.snackBar.open('Reloading query, please wait...');\r\n    }\r\n    this.queryDefinitionService.fetchPipeline(this.pipelineId, this.dataSources$.value).subscribe(pipelineModel => {\r\n      if (showSnackBar) {\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n      }\r\n      this.titleService.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline) {\r\n        this.pipelineModel$.next(pipelineModel);\r\n      }\r\n      if (refreshDataSourceConfigs) {\r\n        this.calculateDataSourceConfigs(pipelineModel.DataSources);\r\n      }\r\n    });\r\n  }\r\n\r\n  private showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.dialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.dialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private fetchDataSources(callback?: () => void) {\r\n    this.queryDefinitionService.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources$.next(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  private attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.route.snapshot.firstChild),\r\n          filter(event => {\r\n            const CTRL_S = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.keyCode === 83;\r\n            return CTRL_S;\r\n          }),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (dataSource) {\r\n      typeInfo = { ...(dataSource.PrimaryType ? guiTypes[dataSource.PrimaryType] : guiTypes.Unknown) };\r\n      if (dataSource.Icon != null) { typeInfo.Icon = dataSource.Icon; }\r\n      if (dataSource.DynamicIn != null) { typeInfo.DynamicIn = dataSource.DynamicIn; }\r\n      if (dataSource.DynamicOut != null) { typeInfo.DynamicOut = dataSource.DynamicOut; }\r\n      if (dataSource.HelpLink != null) { typeInfo.HelpLink = dataSource.HelpLink; }\r\n      if (dataSource.EnableConfig != null) { typeInfo.EnableConfig = dataSource.EnableConfig; }\r\n      if (dataSource.UiHint != null) { typeInfo.UiHint = dataSource.UiHint; }\r\n    }\r\n    if (!typeInfo) { typeInfo = { ...guiTypes.Unknown }; }\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>","import { ChangeDetectorRef, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith, Subscription } from 'rxjs';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseSubsinkComponent } from '../../../shared/components/base-subsink-component/base-subsink.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { VisualQueryService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\n\r\n@Component({\r\n  selector: 'app-rename-stream',\r\n  templateUrl: './rename-stream.component.html',\r\n  styleUrls: ['./rename-stream.component.scss']\r\n})\r\nexport class RenameStreamComponent extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.pipelineResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialogRef: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialogRef.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists) { return; }\r\n\r\n    this.subscription.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null) {\r\n          this.controls.label.patchValue(null);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nexport class Plumber {\r\n  private instance: PlumbType;\r\n  private lineCount = 0;\r\n  private linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  private lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  private maxCols = this.lineColors.length - 1;\r\n  private uuidColorMap: Record<string, any> = {};\r\n  private bulkDelete = false;\r\n  private dialogRef: MatDialogRef<RenameStreamComponent>;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.instance = window.jsPlumb.getInstance(this.getInstanceDefaults(this.jsPlumbRoot));\r\n    this.instance.batch(() => {\r\n      this.initDomDataSources();\r\n      this.initWirings();\r\n      this.bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.dialogRef?.close();\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) { return; }\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  private nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.uuidColorMap[uuid] ||\r\n      (this.uuidColorMap[uuid] = Object.assign({}, this.linePaintDefault, { stroke: this.lineColors[this.lineCount++ % this.maxCols] }))\r\n    );\r\n  }\r\n\r\n  private getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  private initDomDataSources() {\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) { continue; }\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) { continue; }\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      dataSource.Out?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, false, pipelineDataSource);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      dataSource.In?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, true, pipelineDataSource);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut) {\r\n        this.instance.makeSource(domDataSource, this.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Create wires */\r\n  private initWirings() {\r\n    this.pipelineModel.Pipeline.StreamWiring?.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) { return; }\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const pipelineDataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.Out, false, pipelineDataSource);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) { return; }\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const pipelineDataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.In, true, pipelineDataSource);\r\n      }\r\n\r\n      try {\r\n        this.instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n  }\r\n\r\n  private addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const isDynamic = isIn\r\n      ? !dataSource.In?.some(name => this.getEndpointInfo(name, false))\r\n      : !dataSource.Out?.some(name => this.getEndpointInfo(name, false));\r\n    const endpointInfo = this.getEndpointInfo(endpointName, isDynamic);\r\n\r\n    let style: string;\r\n    if (isDynamic) {\r\n      style = 'dynamic';\r\n    } else if (!endpointInfo.required) {\r\n      style = '';\r\n    } else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const model = isIn\r\n      ? this.buildTargetEndpoint(pipelineDataSource.EntityGuid, style)\r\n      : this.buildSourceEndpoint(pipelineDataSource.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || pipelineDataSource.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.instance.addEndpoint(domDataSource, model, params);\r\n    endpoint.getOverlay('endpointLabel').setLabel(endpointInfo.name);\r\n  }\r\n\r\n  private buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + style ?? '',\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return sourceEndpoint;\r\n  }\r\n\r\n  private buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + style ?? '',\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return targetEndpoint;\r\n  }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    return [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n  }\r\n\r\n  private onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit) { return; }\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.dialogRef = this.dialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.dialogRef.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) { return; }\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private bindEvents() {\r\n    this.instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.bulkDelete) { return; }\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic) {\r\n        this.instance.deleteEndpoint(info.targetEndpoint);\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      } else {\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      }\r\n    });\r\n\r\n    this.instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => { this.onConnectionsChanged(); });\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel) {\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      }\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n  private getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    if (isDynamic) {\r\n      name = endpointName;\r\n      required = false;\r\n    } else {\r\n      const trimmed = endpointName.trim();\r\n      required = trimmed.endsWith('*');\r\n      name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n    }\r\n\r\n    const endpointInfo: EndpointInfo = {\r\n      name,\r\n      required,\r\n    };\r\n    return endpointInfo;\r\n  }\r\n}\r\n","@if ((viewModel$ | async); as vm) {\r\n<div #domRoot id=\"pipeline-root\">\r\n  <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n  @if (!hardReset) {\r\n  @for (dataSource of vm.pipelineDataSources; track dataSource) {\r\n  <div #domDataSource [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\" class=\"dataSource\" [ngStyle]=\"{\r\n          'top': dataSource.VisualDesignerData.Top + 'px',\r\n          'left': dataSource.VisualDesignerData.Left + 'px',\r\n          'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null\r\n          }\" [ngClass]=\"{\r\n          'show-details': vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\r\n          }\">\r\n    <div class=\"actions left\">\r\n      <mat-icon class=\"type-info\" [title]=\"vm.typeInfos[dataSource.EntityGuid].UiHint\">\r\n        {{ vm.typeInfos[dataSource.EntityGuid].Icon }}\r\n      </mat-icon>\r\n      @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].EnableConfig) {\r\n      <mat-icon class=\"configure\" title=\"Configure data source\" appMousedownStopPropagation\r\n        (click)=\"configureDataSource(dataSource)\">\r\n        settings\r\n      </mat-icon>\r\n      }\r\n      @if (vm.typeInfos[dataSource.EntityGuid].HelpLink) {\r\n      <mat-icon class=\"help\" title=\"Help for this data source\" appMousedownStopPropagation\r\n        (click)=\"openHelp(vm.typeInfos[dataSource.EntityGuid].HelpLink)\">\r\n        help_outline\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"actions right\">\r\n      @if (vm.allowEdit && !isOutDataSource(dataSource)) {\r\n      <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\">\r\n        delete\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"name\" title=\"Click to edit name\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editName(dataSource)\">\r\n      <span>{{ dataSource.Name || '(no name)' }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    <div class=\"description\" title=\"Click to edit description\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editDescription(dataSource)\">\r\n      <span>{{ dataSource.Description }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    @if (vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length) {\r\n    <hr style=\"margin: 0\">\r\n    <table class=\"configs\">\r\n      @for (config of vm.dataSourceConfigs[dataSource.EntityId]; track config) {\r\n      <tr class=\"config\">\r\n        <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n        <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n      </tr>\r\n      }\r\n    </table>\r\n    }\r\n    <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">\r\n      Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}\r\n    </div>\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicOut) {\r\n    <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\">\r\n    </div>\r\n    }\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicIn) {\r\n    <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\">\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n  }\r\n</div>\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable, Subscription } from 'rxjs';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { BaseSubsinkComponent } from '../../shared/components/base-subsink-component/base-subsink.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { PlumbEditorViewModel } from './plumb-editor.models';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n  selector: 'app-plumb-editor',\r\n  templateUrl: './plumb-editor.component.html',\r\n  styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n  styleUrls: ['./plumb-editor.component.scss'],\r\n})\r\nexport class PlumbEditorComponent extends BaseSubsinkComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  private plumber: Plumber;\r\n  private scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n  viewModel$: Observable<PlumbEditorViewModel>;\r\n\r\n  constructor(\r\n    private visualQueryService: VisualQueryService,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscription.add(\r\n      this.visualQueryService.putEntityCountOnConnections$.subscribe(result => {\r\n        this.plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    const pipelineDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => GeneralHelpers.tryParse(pipelineModel?.Pipeline.VisualDesignerData) ?? {}),\r\n      distinctUntilChanged(GeneralHelpers.objectsEqual),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.visualQueryService.pipelineModel$,\r\n      this.visualQueryService.dataSources$,\r\n      pipelineDesignerData$,\r\n      this.visualQueryService.dataSourceConfigs$,\r\n    ]).pipe(\r\n      map(([pipelineModel, dataSources, pipelineDesignerData, dataSourceConfigs]) => {\r\n        if (pipelineModel == null || dataSources == null) { return; }\r\n\r\n        // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n        // This wipes dom entirely and gives us new elements\r\n        this.hardReset = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.hardReset = false;\r\n        const viewModel: PlumbEditorViewModel = {\r\n          pipelineDataSources: pipelineModel.DataSources,\r\n          typeInfos: calculateTypeInfos(pipelineModel.DataSources, dataSources),\r\n          allowEdit: pipelineModel.Pipeline.AllowEdit,\r\n          showDataSourceDetails: pipelineDesignerData.ShowDataSourceDetails ?? false,\r\n          dataSourceConfigs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscription.add(\r\n      combineLatest([this.scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded) { return; }\r\n\r\n        this.plumber?.destroy();\r\n        this.plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visualQueryService.pipelineModel$.value,\r\n          this.visualQueryService.dataSources$.value,\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.dialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.plumber?.destroy();\r\n    this.scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visualQueryService.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visualQueryService.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource) {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved')) {\r\n      this.visualQueryService.saveAndRun(true, false);\r\n    } else {\r\n      this.visualQueryService.editDataSource(dataSource);\r\n    }\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.visualQueryService.dataSources$.value.find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.queryDefinitionService.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) { return; }\r\n\r\n    this.plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') { return; }\r\n\r\n    this.visualQueryService.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) { return; }\r\n\r\n    this.visualQueryService.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if ((pipelineModel$ | async); as pipelineModel) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">\r\n          Save and run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">\r\n          Run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">\r\n          Save\r\n        </button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (pipelineModel.Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (pipelineModel.Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerData$ | async; as visualDesignerData) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle color=\"primary\" [checked]=\"visualDesignerData.ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"/>\r\n          </div>\r\n        }\r\n      @if ((warnings$ | async); as warnings) {\r\n        @if (warnings.length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warnings; track warning) {\r\n                <li [innerHTML]=\"warning\">\r\n                </li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (pipelineModel.Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ pipelineModel.Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\n\r\n@Component({\r\n  selector: 'app-run-explorer',\r\n  templateUrl: './run-explorer.component.html',\r\n  styleUrls: ['./run-explorer.component.scss'],\r\n})\r\nexport class RunExplorerComponent implements OnInit {\r\n  pipelineModel$: Observable<PipelineModel>;\r\n  warnings$: Observable<string[]>;\r\n  visualDesignerData$: Observable<Record<string, any>>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pipelineModel$ = this.visualQueryService.pipelineModel$.asObservable();\r\n    this.warnings$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => calculateWarnings(pipelineModel, this.context)),\r\n    );\r\n    this.visualDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => GeneralHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n  }\r\n\r\n  editPipeline() {\r\n    this.visualQueryService.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.visualQueryService.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.visualQueryService.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.visualQueryService.pipelineModel$.value.Pipeline.EntityGuid;\r\n    this.router.navigate([GoToDevRest.getUrlQueryDialog(queryGuid)], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of vm.sorted | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { GeneralHelpers } from '../../edit/shared/helpers';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\n\r\n@Component({\r\n  selector: 'app-add-explorer',\r\n  templateUrl: './add-explorer.component.html',\r\n  styleUrls: ['./add-explorer.component.scss'],\r\n})\r\nexport class AddExplorerComponent implements OnInit, OnDestroy {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  private difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n  private difficulty$ = new BehaviorSubject(this.difficulties.default);\r\n\r\n  viewModel$: Observable<AddExplorerViewModel>;\r\n\r\n  constructor(private visualQueryService: VisualQueryService) { }\r\n\r\n  ngOnInit() {\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.visualQueryService.dataSources$, this.difficulty$]).pipe(\r\n        map(([dataSources, difficulty]) => filterAndSortDataSources(dataSources, difficulty)),\r\n      )\r\n    ]).pipe(map(([sorted]) => ({ sorted })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.difficulty$.complete();\r\n  }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.difficulties.advanced : this.difficulties.default;\r\n    this.difficulty$.next(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    GeneralHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n\r\ninterface AddExplorerViewModel {\r\n  sorted: SortedDataSources;\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) { return; }\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { edit } from '../edit/edit.matcher';\r\nimport { VisualQueryComponent } from './visual-query.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: VisualQueryComponent, children: [\r\n      GoToDevRest.route,\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n        data: { history: false },\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class VisualQueryRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { VisualQueryService } from './services/visual-query.service';\r\n\r\n@Component({\r\n  selector: 'app-visual-query',\r\n  templateUrl: './visual-query.component.html',\r\n  styleUrls: ['./visual-query.component.scss'],\r\n  providers: [VisualQueryService],\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(private context: Context, private route: ActivatedRoute, private visualQueryService: VisualQueryService) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../permissions/services/metadata.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { RenameStreamComponent } from './plumb-editor/rename-stream/rename-stream.component';\r\nimport { QueryResultComponent } from './query-result/query-result.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { QueryDefinitionService } from './services/query-definition.service';\r\nimport { StreamErrorResultComponent } from './stream-error-result/stream-error-result.component';\r\nimport { VisualQueryRoutingModule } from './visual-query-routing.module';\r\nimport { VisualQueryComponent } from './visual-query.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    VisualQueryComponent,\r\n    RunExplorerComponent,\r\n    AddExplorerComponent,\r\n    PlumbEditorComponent,\r\n    QueryResultComponent,\r\n    StreamErrorResultComponent,\r\n    RenameStreamComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    VisualQueryRoutingModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    QueryDefinitionService,\r\n    MetadataService,\r\n    ContentTypesService,\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } },\r\n    { provide: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, useValue: { hideIcon: true } }\r\n  ],\r\n})\r\nexport class VisualQueryModule { }\r\n"],"x_google_ignoreList":[]}