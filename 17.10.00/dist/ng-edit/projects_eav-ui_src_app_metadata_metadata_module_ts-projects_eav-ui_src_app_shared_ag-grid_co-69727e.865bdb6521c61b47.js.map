{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_module_ts-projects_eav-ui_src_app_shared_ag-grid_co-69727e.865bdb6521c61b47.js","mappings":"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","names":["metadataDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","MetadataComponent","Promise","all","__webpack_require__","e","then","bind","routes","path","component","DialogEntryComponent","data","dialog","children","matcher","edit","loadChildren","m","EditModule","refreshEdit","RefreshEditModule","MetadataRoutingModule","static","this","t","fesm2022_core","a4G","s3X","RouterModule","forChild","MetadataModule","Context","MetadataService","EntitiesService","provide","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","MAT_SELECT_CONFIG","hideSingleSelectionIndicator","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","hideIcon","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","SxcGridModule","MatRippleModule","MatSnackBarModule","ReactiveFormsModule","MatFormFieldModule","MatSelectModule","MatInputModule","MatSlideToggleModule","EcoFabSpeedDialModule","MatBadgeModule","MatCardModule","AgBoolCellIconsDefault","states","true","tooltip","icon","false","i0","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","url","_r3","_c0","ctx_r1","clickable","ctx_r2","AgBoolIconRenderer","agInit","params","value","allSettings","settings","d","getUrl","refresh","core","In1","selectors","decls","vars","consts","template","rf","ctx","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","ColumnDefinitions","ActionsPinnedRight1","width","cellClass","split","pinned","ActionsPinnedRight3","ActionsPinnedRight4","ActionsPinnedRight5","IconShow","headerName","headerClass","sortable","filter","BooleanFilterComponent","valueGetter","IsHidden","cellRenderer","Character","Id","field","Number","TextWide","flex","minWidth","TextNarrow","BaseComponent","BaseSubsinkComponent","constructor","router","route","log","super","EavLogger","ngOnDestroy","refreshOnChildClosedShallow","events","pipe","event","NavigationEnd","startWith","snapshot","firstChild","map","pairwise","hadChild","hasChild","i1","i2","_angular_core__WEBPACK_IMPORTED_MODULE_7__","Sc5","features","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","context","node","getValue","toString","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","_angular_core__WEBPACK_IMPORTED_MODULE_0__","$event","IdFieldComponent","snackBar","id","align","tooltipGetter","copy","copyToClipboard","open","duration","_angular_core__WEBPACK_IMPORTED_MODULE_1__","defaultGridOptions","accentedSort","animateRows","enableCellTextSelection","headerHeight","suppressScrollOnNewData","valueCache","defaultColDef","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/metadata/metadata-dialog.config.ts","./projects/eav-ui/src/app/metadata/metadata-routing.module.ts","./projects/eav-ui/src/app/metadata/metadata.module.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const metadataDialog: DialogConfig = {\r\n  name: 'METADATA_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { MetadataComponent } = await import('./metadata.component');\r\n    return MetadataComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { metadataDialog } from './metadata-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: metadataDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MetadataRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MAT_SELECT_CONFIG, MatSelectModule } from '@angular/material/select';\r\nimport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { MetadataService } from '../permissions';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataRoutingModule } from './metadata-routing.module';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataComponent } from './metadata.component';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MetadataComponent,\r\n    MetadataActionsComponent,\r\n    MetadataSaveDialogComponent,\r\n    MetadataContentTypeComponent,\r\n    ConfirmDeleteDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MetadataRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    SxcGridModule,\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatSlideToggleModule,\r\n    EcoFabSpeedDialModule,\r\n    MatBadgeModule,\r\n    MatCardModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    MetadataService,\r\n    EntitiesService,\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } },\r\n    { provide: MAT_SELECT_CONFIG, useValue: { hideSingleSelectionIndicator: true } },\r\n    { provide: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, useValue: { hideIcon: true } }\r\n  ],\r\n})\r\nexport class MetadataModule { }\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = { \r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nexport class ColumnDefinitions\r\n{\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n}","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\nimport { EavLogger } from '../../logging/eav-logger';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    public log?: EavLogger\r\n  ) {\r\n    super();\r\n    this.log ??= new EavLogger('BaseComponent', false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  // TODO @2dg not longer in use after refactoring SideNav with Routing\r\n  // protected refreshOnChildClosedDeep() {\r\n  //   return this.router.events.pipe(\r\n  //     filter(event => event instanceof NavigationEnd),\r\n  //     startWith(!!this.route.snapshot.firstChild.firstChild),\r\n  //     map(() => !!this.route.snapshot.firstChild.firstChild),\r\n  //     pairwise(),\r\n  //     filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n  //   )\r\n  // }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}