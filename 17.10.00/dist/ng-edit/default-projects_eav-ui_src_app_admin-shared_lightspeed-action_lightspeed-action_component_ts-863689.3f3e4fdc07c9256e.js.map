{"version":3,"file":"default-projects_eav-ui_src_app_admin-shared_lightspeed-action_lightspeed-action_component_ts-863689.3f3e4fdc07c9256e.js","mappings":"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","names":["i0","_r3","ctx_r2","openLightspeedFeatureInfo","_r7","ctx_r6","openLightspeed","LightSpeedActionsComponent_Conditional_1_Conditional_1_Template","LightSpeedActionsComponent_Conditional_1_Conditional_2_Template","ctx_r1","appHasLightSpeed","lightSpeed","Title","appLightSpeedEnabled","LightSpeedActionsComponent","constructor","featuresService","this","isEnabled$","FeatureNames","LightSpeed","pipe","take","subscribe","enabled","lightSpeedEnabled","Id","IsEnabled","params","onOpenLightspeed","lightSpeedOwner","static","t","i1","_angular_core__WEBPACK_IMPORTED_MODULE_2__","In1","selectors","inputs","standalone","features","decls","vars","consts","template","rf","ctx","LightSpeedActionsComponent_Conditional_0_Template","LightSpeedActionsComponent_Conditional_1_Template","TippyStandaloneDirective","MatIconModule","i2","MatBadgeModule","i3","MatRippleModule","i4","encapsulation","AppAdminHelpers","getLightSpeedEditParams","appId","items","ContentTypeName","eavConstants","appMetadata","For","Target","metadata","app","target","TargetType","targetType","Number","Singleton","AppDialogConfigService","ServiceBase","http","context","globalConfigService","super","EavLogger","dialogSettings$","log","add","svcId","loadFromService","ngOnDestroy","destroy","getCurrent$","getShared$","getSitePrimaryApp$","map","dc","Context","Site","PrimaryApp","getGlobalPrimaryApp$","System","getDialogSettings","shareReplay","refCount","reqBy","get","toString","dlgSettings","Language","List","filter","language","tap","allowDebug","Enable","DebugMode","_angular_core__WEBPACK_IMPORTED_MODULE_8__","wxM","factory","ɵfac","ExportAppPartsService","dnnContext","getContentInfo","scope","$2sxc","apiUrl","webApiAppPartsRoot","appid","zoneId","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","ExportAppService","getAppInfo","webApiAppRoot","exportApp","includeContentGroups","resetAppGuid","exportForVersionControl","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","file","formData","FormData","append","post","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","delete","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","webApiZoneRoot","ZoneService","getLanguages","toggleLanguage","code","enable","cultureCode","getSystemInfo","getLanguagesPermissions","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","ContentSecurityPolicy","PermissionsByLanguage","FieldShareConfigManagement","openDialog","vm_r4","feature","icon","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","show","FeatureTextInfoComponent","FeatureComponentBase","asInfo","value","asInfo$","next","dialog","viewContainerRef","changeDetectorRef","BehaviorSubject","viewModel$","combineLatest","feature$","show$","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","FeatureTextInfoComponent_contFlowTmp","FeaturesModule","_angular_core__WEBPACK_IMPORTED_MODULE_0__","a4G","s3X","FeatureDetailService","imports","CommonModule","MatButtonModule","MatCardModule","SharedComponentsModule","TranslateModule","forChild","buildTranslateConfiguration","translateLoaderFactory","getFeatureDetails","featureNameId","webApiRoot","nameId","id_r4","_r6","ctx_r5","copyToClipboard","link_r7","_r9","ctx_r8","findOutMore","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Conditional_17_Template","_r11","ctx_r10","closeDialog","Name","Description","FeatureInfoDialogComponent_Conditional_0_contFlowTmp","NameId","Link","FeatureInfoDialogComponent","dialogData","dialogRef","snackBar","featureDetailService","ngOnInit","text","duration","link","close","MAT_DIALOG_DATA","core","FeatureInfoDialogComponent_Conditional_0_Template","FeatureInfoDialogComponent_contFlowTmp","featureNameId$","showIf","showIf$","featName","get$","feat","featureId","autoFocus","data","width","markForCheck","Sc5","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","AgBoolCellIconsDefault","states","true","tooltip","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","_c0","clickable","AgBoolIconRenderer","agInit","allSettings","settings","d","getUrl","refresh","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","ColumnDefinitions","ActionsPinnedRight1","cellClass","split","pinned","ActionsPinnedRight3","ActionsPinnedRight4","ActionsPinnedRight5","IconShow","headerName","headerClass","sortable","BooleanFilterComponent","valueGetter","IsHidden","cellRenderer","Character","field","TextWide","flex","minWidth","TextNarrow","BaseComponent","BaseSubsinkComponent","router","route","refreshOnChildClosedShallow","events","event","NavigationEnd","startWith","snapshot","firstChild","pairwise","hadChild","hasChild","_angular_core__WEBPACK_IMPORTED_MODULE_7__","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","node","getValue","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","FieldHintComponent_Case_1_ng_container_1_Template","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","ngContentSelectors","_c1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","FieldHintComponent_contFlowTmp","IdFieldComponent","align","tooltipGetter","copy","defaultGridOptions","accentedSort","animateRows","enableCellTextSelection","headerHeight","suppressScrollOnNewData","valueCache","defaultColDef","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","elementRef","ngOnChanges","changes","tippy","nativeElement","animation","arrow","tippyArrow","placement","theme","allowHTML","tippyAllowHtml","setContent","tippyDisabled","disable","tippyPlacement","setProps","tippyShowDelay","showDelay","parseInt","delay","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","readAsText","DialogService","openCodeFile","path","isShared","templateId","form","Path","EntityId","hashParams","buildHashParam","keyDialog","DialogTypeConstants","Develop","keyIsShared","keyItems","JSON","stringify","buildFullUrl","openQueryDesigner","queryId","PipelineDesigner","keyPipelineId","openAppsManagement","tab","extras","keyZoneId","Zone","Object","keys","length","keyExtras","openAppAdministration","keyAppId","App","buildSharedHashParams","keyModuleId","moduleId","keyContentBlockId","contentBlockId","keyPartOfPage","sessionStorage","getItem","keyDebug","key","rawKey","replace","prefix","valueTemp","r","encodeURIComponent","oldHref","keyUrl","oldUrl","URL","newHref","origin","pathname","search","allHashParams","entries","reduce","acc","_angular_core__WEBPACK_IMPORTED_MODULE_3__","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","TranslateLoaderWithErrorHandling","sxcVersion","suffix","getTranslation","lang","catchError","console","warn","nextId","BADGE_CONTENT_CLASS","MatBadge","color","_color","_setColor","content","_content","newContent","_updateRenderedContent","description","_description","newDescription","_updateDescription","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","overlap","size","_id","_isInitialized","_interactivityChecker","inject","InteractivityChecker","_document","DOCUMENT","isAbove","indexOf","isAfter","getBadgeElement","_badgeElement","_clearExistingBadges","_createBadgeElement","destroyNode","_inlineBadgeDescription","remove","removeDescription","_isHostInteractive","isFocusable","ignoreVisibility","badgeElement","activeClass","classList","requestAnimationFrame","runOutsideAngular","newContentNormalized","trim","textContent","_removeInlineDescription","describe","_updateInlineDescription","undefined","colorPalette","badges","querySelectorAll","Array","ANIMATION_MODULE_TYPE","ɵdir","type","hostAttrs","hostVars","hostBindings","hidden","disabled","booleanAttribute","ɵmod","ɵinj","A11yModule","MatCommonModule"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.html","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.ts","./projects/eav-ui/src/app/app-administration/app-admin-helpers.ts","./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/apps-management/services/zone.service.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/features/features.module.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/directives/tippy-Standalone.directive.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/services/dialog.service.ts","./projects/eav-ui/src/app/shared/translation/translate-configuration.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-factory.ts","./projects/eav-ui/src/app/shared/translation/translate-loader-with-error-handling.ts","./node_modules/@angular/material/fesm2022/badge.mjs"],"sourcesContent":["@if (!lightSpeedEnabled) {\r\n  <div class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\"\r\n    (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n      bolt\r\n    </mat-icon>\r\n  </div>\r\n}\r\n@else {\r\n  <div class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled'}}\" matRipple\r\n    [tippy]=\"appHasLightSpeed ? lightSpeed.Title : 'Not yet configured for LightSpeed'\"\r\n    (click)=\"openLightspeed()\">\r\n    @if (appLightSpeedEnabled) {\r\n      <mat-icon matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\"\r\n        aria-hidden=\"false\">\r\n        bolt\r\n      </mat-icon>\r\n    }\r\n    @else {\r\n      <mat-icon matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\"\r\n        aria-hidden=\"false\">\r\n        bolt\r\n      </mat-icon>\r\n    }\r\n  </div>\r\n}","import { Component, Input } from '@angular/core';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { LightSpeedInfo } from '../../apps-management/models/LightSpeedInfo';\r\nimport { LightSpeedActionsParams } from './lightspeed-actions.models';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyStandaloneDirective } from '../../shared/directives/tippy-Standalone.directive';\r\nimport { View } from '../../app-administration/models';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { take } from 'rxjs';\r\n\r\n/**\r\n * LightSpeedActionsComponent\r\n * \r\n * Specially meant to be used inside an AGGrid action, and receive the parameters from it.\r\n *\r\n */\r\n@Component({\r\n  selector: 'app-lightspeed-action',\r\n  templateUrl: './lightspeed-action.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyStandaloneDirective,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class LightSpeedActionsComponent {\r\n  /** App needed for lightspeed checks */\r\n  @Input({ required: true }) lightSpeedOwner: unknown;\r\n\r\n  @Input({ required: true }) params: LightSpeedActionsParams;\r\n\r\n  @Input({ required: true }) lightSpeed: LightSpeedInfo | null;\r\n\r\n  public lightSpeedEnabled: boolean;\r\n\r\n  constructor(private featuresService: FeaturesService) {\r\n    this.featuresService.isEnabled$(FeatureNames.LightSpeed)\r\n      .pipe(take(1))\r\n      .subscribe((enabled) => { this.lightSpeedEnabled = enabled; });\r\n  }\r\n\r\n  public get appHasLightSpeed(): boolean {\r\n    return this.lightSpeed?.Id != null;\r\n  }\r\n\r\n  public get appLightSpeedEnabled(): boolean {\r\n    return this.lightSpeed?.IsEnabled == true;\r\n  }\r\n\r\n  openLightspeed(): void {\r\n    this.params.onOpenLightspeed(this.lightSpeedOwner);\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params.openLightspeedFeatureInfo();\r\n  }\r\n}\r\n","import { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\n\r\nexport class AppAdminHelpers {\r\n  public static getLightSpeedEditParams(appId: number) {\r\n    const form: EditForm = {\r\n      items: [\r\n        {\r\n          ContentTypeName: eavConstants.appMetadata.LightSpeed.ContentTypeName,\r\n          For: {\r\n            Target: eavConstants.metadata.app.target,\r\n            TargetType: eavConstants.metadata.app.targetType,\r\n            Number: appId,\r\n            Singleton: true,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return form;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\n\r\nconst logThis = false;\r\n\r\nconst webApiSettings = 'admin/dialog/settings';\r\n\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService extends ServiceBase implements OnDestroy {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    // private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    super(new EavLogger('AppDialogConfigService', logThis));\r\n    this.log.add('using context #', this.context.log.svcId);\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.destroy();\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions in dialogSettings$ are killed\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getCurrent$(): Observable<DialogSettings> {\r\n    const appId = this.context.appId;\r\n    this.log.add('getCurrent$', 'appId', appId);\r\n    return this.getShared$(appId);\r\n  }\r\n\r\n    // new 2dg\r\n    getSitePrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.Site.PrimaryApp));\r\n    }\r\n  \r\n    getGlobalPrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.System.PrimaryApp));\r\n    }\r\n  \r\n\r\n  getShared$(appId: number): Observable<DialogSettings> {\r\n    this.log.add('getShared$', 'appId', appId);\r\n    // if (!this.dialogSettings$[appIdToUse])\r\n    this.dialogSettings$[appId] ??= this.getDialogSettings(appId, 'getShared$').pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n  }\r\n\r\n  getDialogSettings(appId?: number, reqBy?: string): Observable<DialogSettings> {\r\n    this.log.add('getDialogSettings', 'appId', appId, 'reqBy', reqBy);\r\n    return this.http.get<DialogSettings>(webApiSettings, {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dlgSettings => {\r\n        dlgSettings.Context.Language.List = dlgSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dlgSettings;\r\n      }),\r\n      tap(dlgSettings => {\r\n        this.globalConfigService.allowDebug(dlgSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  exportApp(includeContentGroups: boolean, resetAppGuid: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Export')\r\n      + '?appId=' + this.context.appId\r\n      + '&zoneId=' + this.context.zoneId\r\n      + '&includeContentGroups=' + includeContentGroups\r\n      + '&resetAppGuid=' + resetAppGuid;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityList } from '../../edit/shared/services';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { SiteLanguage, SiteLanguagePermissions } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\n\r\nconst webApiZoneRoot = 'admin/zone/';\r\n\r\n@Injectable()\r\nexport class ZoneService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getLanguages() {\r\n    return this.http.get<SiteLanguage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'GetLanguages'));\r\n  }\r\n\r\n  toggleLanguage(code: string, enable: boolean) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'SwitchLanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  getSystemInfo() {\r\n    return this.http.get<SystemInfoSet>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'GetSystemInfo'));\r\n  }\r\n\r\n  getLanguagesPermissions() {\r\n    return this.http.get<SiteLanguagePermissions[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'languages'), {\r\n      params: { appId: this.context.appId },\r\n    });\r\n  }\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n};\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>","import { ChangeDetectorRef, Component, Input, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest, switchMap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss']\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor(\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    featuresService: FeaturesService,\r\n    changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(dialog, viewContainerRef, changeDetectorRef , featuresService);\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(map(([feature, asInfo, show]) => \r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      })));\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FeatureIconTextComponent } from './feature-icon-text/feature-icon-text.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { buildTranslateConfiguration } from '../shared/translation';\r\nimport { translateLoaderFactory } from '../shared/translation/translate-loader-factory';\r\nimport { FeatureInfoDialogComponent } from './feature-info-dialog/feature-info-dialog.component';\r\nimport { FeatureIconComponent } from './feature-icon/feature-icon.component';\r\nimport { FeatureTextInfoComponent } from './feature-text-info/feature-text-info.component';\r\nimport { FeatureIconIndicatorComponent } from './feature-icon-indicator/feature-icon-indicator.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeatureDetailService } from './services/feature-detail.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    SharedComponentsModule,\r\n    TranslateModule.forChild(buildTranslateConfiguration(translateLoaderFactory)),\r\n  ],\r\n  exports: [\r\n    FeatureIconComponent,\r\n    FeatureIconTextComponent,\r\n    FeatureInfoDialogComponent,\r\n    FeatureTextInfoComponent,\r\n    FeatureIconIndicatorComponent,\r\n  ],\r\n  providers: [\r\n    FeatureDetailService\r\n  ]\r\n})\r\nexport class FeaturesModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ vm.feature.Name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"vm.feature.Description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (vm.feature.IsEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (vm.feature.NameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      @if (vm.feature.Link; as link) {\r\n        <button mat-raised-button color=\"accent\"\r\n          class=\"eav-card-action-button\" (click)=\"findOutMore(link)\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          {{ \"Features.FindOutMore\" | translate }}\r\n        </button>\r\n      }\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, combineLatest, map } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss']\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<FeatureInfoViewModel>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = combineLatest([\r\n      this.featureDetailService.getFeatureDetails(this.dialogData)\r\n    ]).pipe(map(([feature]) => ({ feature })));\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void { \r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\ninterface FeatureInfoViewModel {\r\n  feature: Feature;\r\n}","import { ChangeDetectorRef, Directive, Input, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    protected featuresService: FeaturesService\r\n  ) {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.IsEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    FeatureComponentBase.openDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  /** Public/Static so it can be called from elsewhere */\r\n  public static openDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n    dialog.open(FeatureInfoDialogComponent, {\r\n      autoFocus: false,\r\n      data: featureId,\r\n      viewContainerRef: viewContainerRef,\r\n      width: '400px',\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = { \r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nexport class ColumnDefinitions\r\n{\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n}","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\nimport { EavLogger } from '../../logging/eav-logger';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    public log?: EavLogger\r\n  ) {\r\n    super();\r\n    this.log ??= new EavLogger('BaseComponent', false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  // TODO @2dg not longer in use after refactoring SideNav with Routing\r\n  // protected refreshOnChildClosedDeep() {\r\n  //   return this.router.events.pipe(\r\n  //     filter(event => event instanceof NavigationEnd),\r\n  //     startWith(!!this.route.snapshot.firstChild.firstChild),\r\n  //     map(() => !!this.route.snapshot.firstChild.firstChild),\r\n  //     pairwise(),\r\n  //     filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n  //   )\r\n  // }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport tippy, { Instance, Placement, Props } from 'tippy.js';\r\n\r\n// tslint:disable-next-line:directive-selector\r\n@Directive({\r\n    selector: '[tippy]',\r\n    standalone: true\r\n})\r\nexport class TippyStandaloneDirective implements OnChanges, OnDestroy {\r\n  /** Message to show in Tippy */\r\n  @Input() tippy: string | null | undefined;\r\n\r\n  /** disable Tippy */\r\n  @Input() tippyDisabled: string | boolean | null | undefined;\r\n\r\n  /**\r\n   * 'top' | 'top-start' | 'top-end' |\r\n   * 'right' | 'right-start' | 'right-end' |\r\n   * 'bottom' | 'bottom-start' | 'bottom-end' |\r\n   * 'left' | 'left-start' | 'left-end' |\r\n   * 'auto' | 'auto-start' | 'auto-end'\r\n   */\r\n  @Input() tippyPlacement: string | null | undefined;\r\n\r\n  /** delay showing Tippy in ms */\r\n  @Input() tippyShowDelay: string | number | null | undefined;\r\n\r\n  /** enable html in Tippy */\r\n  @Input() tippyAllowHtml: boolean | null | undefined;\r\n\r\n  /** show arrow in Tippy - only respected on setup, changes ATM not handled */\r\n  @Input() tippyArrow: boolean | null | undefined;\r\n\r\n  private tooltip: Instance<Props>;\r\n\r\n  constructor(private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // Init Tooltip on first round\r\n    if (this.tooltip == null)\r\n      this.tooltip = tippy(this.elementRef.nativeElement, {\r\n        animation: 'scale-subtle',\r\n        arrow: !!this.tippyArrow,\r\n        duration: [100, 50],\r\n        placement: 'bottom',\r\n        theme: '2sxc',\r\n        allowHTML: !!this.tippyAllowHtml,\r\n      });\r\n\r\n    if (changes['tippy'] != null)\r\n      this.tooltip.setContent(this.tippy);\r\n\r\n    if (changes['tippyDisabled'] != null)\r\n      this.tippyDisabled ? this.tooltip.disable() : this.tooltip.enable();\r\n\r\n    if (changes['tippyPlacement'] != null)\r\n      this.tooltip.setProps({ placement: this.tippyPlacement as Placement });\r\n\r\n    if (changes['tippyShowDelay'] != null) {\r\n      const showDelay = typeof this.tippyShowDelay === 'number' ? this.tippyShowDelay : parseInt(this.tippyShowDelay, 10);\r\n      this.tooltip.setProps({ delay: [showDelay, null] });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tooltip?.destroy();\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyExtras, keyIsShared, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { DialogHashParams, ExtrasParam } from '../models/dialog-url-params.model';\r\nimport { EditForm, ViewOrFileIdentifier } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCodeFile(path: string, isShared: boolean, templateId?: number) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form = {\r\n      items: [{\r\n        Path: path,\r\n        ...(templateId != null && { EntityId: templateId }),\r\n      }] as ViewOrFileIdentifier[]\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyIsShared, isShared.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: queryId }],\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyPipelineId, queryId.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppsManagement(zoneId: number, tab?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.Zone),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppAdministration(zoneId: number, appId: number, tab?: string, scope?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n      ...(scope && { scope }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, appId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.App),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  private buildSharedHashParams() {\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, this.context.zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, this.context.appId.toString()),\r\n      ...this.buildHashParam(keyModuleId, this.context.moduleId?.toString()),\r\n      ...this.buildHashParam(keyContentBlockId, this.context.contentBlockId?.toString()),\r\n      ...this.buildHashParam(keyPartOfPage),\r\n      ...(sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : {}),\r\n    };\r\n    return hashParams;\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam: DialogHashParams = { [rawKey]: rawValue };\r\n    return hashParam;\r\n  }\r\n\r\n  private buildFullUrl(hashParams: DialogHashParams) {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    const allHashParams: DialogHashParams = {\r\n      ...this.buildSharedHashParams(),\r\n      ...hashParams,\r\n    };\r\n    const hashUrl = Object.entries(allHashParams).reduce((acc, [key, value]) => `${acc}&${key}=${value}`, '').replace('&', '#');\r\n    return newHref + hashUrl;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\r\n\r\nexport function buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateLoader } from \"@ngx-translate/core\";\r\nimport { EavWindow } from \"../models/eav-window.model\";\r\nimport { TranslateLoaderWithErrorHandling } from \"./translate-loader-with-error-handling\";\r\n\r\ndeclare const window: EavWindow;\r\n\r\n// AoT requires an exported function for factories\r\n// at least according to https://github.com/ngx-translate/http-loader\r\nexport function translateLoaderFactory(http: HttpClient): TranslateLoader {\r\n    return new TranslateLoaderWithErrorHandling(http, './i18n/', `.js?${window.sxcVersion}`);\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { catchError, Observable, of } from 'rxjs';\r\n\r\n/**\r\n * This loader should catch a 404 if the file doesn't exist and not result in errors.\r\n * https://stackoverflow.com/questions/47391613/how-to-set-a-fallback-assets-i18n-en-json-when-url-is-not-available-ngx-trans\r\n */\r\nexport class TranslateLoaderWithErrorHandling implements TranslateLoader {\r\n  constructor(private http: HttpClient, private prefix: string, private suffix: string) { }\r\n\r\n  getTranslation(lang: string): Observable<Record<string, any>> {\r\n    return this.http.get<Record<string, any>>(`${this.prefix}${lang}${this.suffix}`).pipe(\r\n      catchError(error => {\r\n        console.warn(`Translation: Failed to get language '${lang}' from ${this.prefix}`, error);\r\n        return of({});\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { inject, booleanAttribute, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { InteractivityChecker, A11yModule } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\nlet nextId = 0;\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/** Directive to display a text badge. */\nclass MatBadge {\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateDescription(newDescription);\n    }\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        this._color = 'primary';\n        /** Whether the badge should overlap its contents or not */\n        this.overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        /** Whether the OnInit lifecycle hook has run yet */\n        this._isInitialized = false;\n        /** InteractivityChecker to determine if the badge host is focusable. */\n        this._interactivityChecker = inject(InteractivityChecker);\n        this._document = inject(DOCUMENT);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n            const matIconTagName = 'mat-icon';\n            // Heads-up for developers to avoid putting matBadge on <mat-icon>\n            // as it is aria-hidden by default docs mention this at:\n            // https://material.angular.io/components/badge/overview#accessibility\n            if (nativeElement.tagName.toLowerCase() === matIconTagName &&\n                nativeElement.getAttribute('aria-hidden') === 'true') {\n                console.warn(`Detected a matBadge on an \"aria-hidden\" \"<mat-icon>\". ` +\n                    `Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.` +\n                    `\\n${nativeElement.outerHTML}`);\n            }\n        }\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n            this._inlineBadgeDescription?.remove();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Gets whether the badge's host element is interactive. */\n    _isHostInteractive() {\n        // Ignore visibility since it requires an expensive style caluclation.\n        return this._interactivityChecker.isFocusable(this._elementRef.nativeElement, {\n            ignoreVisibility: true,\n        });\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent ?? ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateDescription(newDescription) {\n        // Always start by removing the aria-describedby; we will add a new one if necessary.\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        // NOTE: We only check whether the host is interactive here, which happens during\n        // when then badge content changes. It is possible that the host changes\n        // interactivity status separate from one of these. However, watching the interactivity\n        // status of the host would require a `MutationObserver`, which is likely more code + overhead\n        // than it's worth; from usages inside Google, we see that the vats majority of badges either\n        // never change interactivity, or also set `matBadgeHidden` based on the same condition.\n        if (!newDescription || this._isHostInteractive()) {\n            this._removeInlineDescription();\n        }\n        this._description = newDescription;\n        // We don't add `aria-describedby` for non-interactive hosts elements because we\n        // instead insert the description inline.\n        if (this._isHostInteractive()) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        else {\n            this._updateInlineDescription();\n        }\n    }\n    _updateInlineDescription() {\n        // Create the inline description element if it doesn't exist\n        if (!this._inlineBadgeDescription) {\n            this._inlineBadgeDescription = this._document.createElement('span');\n            this._inlineBadgeDescription.classList.add('cdk-visually-hidden');\n        }\n        this._inlineBadgeDescription.textContent = this.description;\n        this._badgeElement?.appendChild(this._inlineBadgeDescription);\n    }\n    _removeInlineDescription() {\n        this._inlineBadgeDescription?.remove();\n        this._inlineBadgeDescription = undefined;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadge, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.AriaDescriber }, { token: i0.Renderer2 }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: MatBadge, selector: \"[matBadge]\", inputs: { color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\", booleanAttribute], disabled: [\"matBadgeDisabled\", \"disabled\", booleanAttribute], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\", booleanAttribute] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.AriaDescriber }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: [{ alias: 'matBadgeOverlap', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matBadgeDisabled', transform: booleanAttribute }]\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: [{ alias: 'matBadgeHidden', transform: booleanAttribute }]\n            }] } });\n\nclass MatBadgeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, declarations: [MatBadge], imports: [A11yModule, MatCommonModule], exports: [MatBadge, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, MatCommonModule],\n                    exports: [MatBadge, MatCommonModule],\n                    declarations: [MatBadge],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n"],"x_google_ignoreList":[38]}