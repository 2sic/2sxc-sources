{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/loc-i18next/index.js","webpack:///./node_modules/loc-i18next/dist/commonjs/main.js","webpack:///./src/dnn/dnn-workarounds/dnn-08.00.04.ts","webpack:///./node_modules/shake.js/shake.js","webpack:///./src/commands/command-names.ts","webpack:///../core/logging/log-entry-options.ts","webpack:///./src/commands/command.ts","webpack:///../core/constants/index.ts","webpack:///../core/logging/has-log.ts","webpack:///../core/logging/Log.ts","webpack:///../core/logging/log-call.ts","webpack:///../core/plumbing/obj.ts","webpack:///../core/plumbing/url.ts","webpack:///../core/plumbing/no-jquery.ts","webpack:///./src/constants/dialog-paths.ts","webpack:///../core/logging/entry.ts","webpack:///../core/logging/insights.ts","webpack:///./src/commands/commands.ts","webpack:///./src/constants/content-block.ts","webpack:///./src/constants/ids.ts","webpack:///../$2sxc/src/data/target-types.ts","webpack:///./src/constants/index.ts","webpack:///./src/constants/toolbar.ts","webpack:///./src/constants/debug.ts","webpack:///../$2sxc/src/tools/url-params.ts","webpack:///../$2sxc/src/constants/index.ts","webpack:///../$2sxc/src/tools/total-popup.ts","webpack:///../$2sxc/src/environment/env-loader-dnn-sf.ts","webpack:///../$2sxc/src/environment/env-loader-dynamic.ts","webpack:///../$2sxc/src/environment/env-loader-meta.ts","webpack:///../$2sxc/src/sxc-instance/web-api/ajax-promise.ts","webpack:///../$2sxc/src/environment/root-environment.ts","webpack:///../$2sxc/src/sxc-instance/web-api/sxc-web-api.ts","webpack:///../$2sxc/src/sxc-instance/sxc-part.ts","webpack:///../$2sxc/src/sxc-instance/data/sxc-data-service-base.ts","webpack:///../$2sxc/src/sxc-instance/data/sxc-data.ts","webpack:///../$2sxc/src/sxc-instance/data/sxc-query.ts","webpack:///../$2sxc/src/sxc-instance/sxc-cms.ts","webpack:///../$2sxc/src/sxc-instance/sxc.ts","webpack:///../$2sxc/src/sxc-root/context-identifier.ts","webpack:///../$2sxc/src/sxc-root/debug.ts","webpack:///../$2sxc/src/sxc-root/http-global.ts","webpack:///./src/commands/engine/run-params.ts","webpack:///./src/context/parts/context-app.ts","webpack:///./src/quick-edit/quick-e-overlays.ts","webpack:///./src/quick-edit/quick-e-configuration.ts","webpack:///./src/context/parts/context-content-block.ts","webpack:///./src/context/parts/context-instance.ts","webpack:///./src/context/parts/context-item.ts","webpack:///./src/interfaces/window-in-page.ts","webpack:///./src/interfaces/sxc-controller-in-page.ts","webpack:///./src/context/parts/context-page.ts","webpack:///./src/context/parts/context-system.ts","webpack:///./src/context/parts/context-tenant.ts","webpack:///./src/context/parts/context-ui.ts","webpack:///./src/context/html-attribute/parts/content-block.ts","webpack:///./src/context/html-attribute/parts/user.ts","webpack:///./src/context/parts/context-user.ts","webpack:///./src/context/bundles/context-bundle-instance.ts","webpack:///./src/context/bundles/context-bundle-content.ts","webpack:///./src/context/bundles/context-bundle-toolbar.ts","webpack:///./src/context/bundles/context-bundle-button.ts","webpack:///./src/cms/Cms.ts","webpack:///./src/interfaces/sxc-instance-editable.ts","webpack:///./src/html/dom-tools.ts","webpack:///./src/quick-edit/selection.ts","webpack:///./src/quick-edit/modifier-base.ts","webpack:///./src/quick-edit/context-for-lists.ts","webpack:///./src/workflow/workflow-helper.ts","webpack:///./src/toolbar/config/toolbar-settings.ts","webpack:///./src/workflow/workflow-manager.ts","webpack:///./src/workflow/workflow-arguments.ts","webpack:///./src/workflow/workflow-phases.ts","webpack:///./src/workflow/workflow.ts","webpack:///./src/toolbar/toolbar-lifecycle.ts","webpack:///./src/toolbar/tag-toolbars/tag-toolbar.ts","webpack:///./src/toolbar/tag-toolbars/tag-toolbar-manager.ts","webpack:///./src/toolbar/config/button-command.ts","webpack:///./src/toolbar/config/button.ts","webpack:///./src/toolbar/config/button-safe.ts","webpack:///./src/plumbing/TypeTbD.ts","webpack:///./src/toolbar/config/button-group.ts","webpack:///./src/toolbar/config/toolbar.ts","webpack:///./src/toolbar/render/render-part-base.ts","webpack:///./src/toolbar/render/render-button.ts","webpack:///./src/toolbar/render/render-groups.ts","webpack:///./src/toolbar/render/toolbar-renderer.ts","webpack:///./src/toolbar/initialize/toolbar-init-config.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/i18next/dist/esm/i18next.js","webpack:///./node_modules/i18next-xhr-backend/dist/esm/i18nextXHRBackend.js","webpack:///./src/i18n/2sxc.translate.ts","webpack:///./src/i18n/index.ts","webpack:///./src/i18n/translator.ts","webpack:///./src/toolbar/initialize/toolbar-finder-and-initializer.ts","webpack:///./src/toolbar/config-loaders/config-formats/in-page-button.ts","webpack:///./src/toolbar/config-loaders/config-formats/in-page-command.ts","webpack:///./src/toolbar/config-loaders/button-config-loader.ts","webpack:///./src/toolbar/rules/operators.ts","webpack:///./src/toolbar/rules/build-steps.ts","webpack:///./src/toolbar/config-loaders/command-config-loader.ts","webpack:///./src/toolbar/templates/constants.ts","webpack:///./src/toolbar/config-loaders/group-config-loader.ts","webpack:///./src/toolbar/templates/template-empty.ts","webpack:///./src/toolbar/templates/template-default.ts","webpack:///./src/toolbar/templates/template-sublist.ts","webpack:///./src/toolbar/templates/toolbar-template-manager.ts","webpack:///./src/toolbar/templates/toolbar-template.ts","webpack:///./src/toolbar/templates/toolbar-template-group.ts","webpack:///./src/toolbar/templates/template-editor.ts","webpack:///./src/toolbar/config-loaders/toolbar-config-loader-v09.ts","webpack:///./src/toolbar/rules/rule-constants.ts","webpack:///./src/toolbar/rules/rule-params-helper.ts","webpack:///./src/toolbar/rules/rule.ts","webpack:///./src/toolbar/rules/rule-manager.ts","webpack:///./src/toolbar/config-loaders/toolbar-config-loader-v10.ts","webpack:///./src/toolbar/config-loaders/toolbar-config-loader.ts","webpack:///./src/toolbar/toolbar-manager.ts","webpack:///./src/quick-edit/modifier-content-block-internal.ts","webpack:///./src/quick-edit/modifier-content-block.ts","webpack:///./src/quick-edit/position-coordinates.ts","webpack:///./src/quick-edit/modifier-dnn-module.ts","webpack:///./src/quick-edit/modifier-dnn-module-internal.ts","webpack:///./src/quick-edit/positioning.ts","webpack:///./src/quick-edit/quick-e-clipboard.ts","webpack:///./src/quick-edit/selectors-instance.ts","webpack:///./src/quick-edit/index.ts","webpack:///./src/quick-edit/quick-e.ts","webpack:///./src/contentBlock/content-block-editor.ts","webpack:///./src/contentBlock/render.ts","webpack:///./src/commands/command/content-list-actions.ts","webpack:///./src/commands/command/shared-logic.ts","webpack:///./src/commands/command/add.ts","webpack:///./src/commands/command/add-existing.ts","webpack:///./src/commands/command/app-import.ts","webpack:///./src/commands/command/edit.ts","webpack:///./src/commands/command/app-resources.ts","webpack:///./src/commands/command/app-settings.ts","webpack:///./src/commands/command/app.ts","webpack:///./src/commands/command/apps.ts","webpack:///./src/commands/command/content-items.ts","webpack:///./src/commands/command/content-type.ts","webpack:///./src/commands/command/custom.ts","webpack:///./src/entity-manipulation/item-commands.ts","webpack:///./src/commands/command/delete.ts","webpack:///./src/commands/command/insights-server.ts","webpack:///./src/commands/command/instance-list.ts","webpack:///./src/commands/command/new.ts","webpack:///./src/commands/command/metadata.ts","webpack:///./src/commands/command/more.ts","webpack:///./src/commands/command/movedown.ts","webpack:///./src/commands/command/moveup.ts","webpack:///./src/commands/command/publish.ts","webpack:///./src/commands/command/remove.ts","webpack:///./src/commands/command/replace.ts","webpack:///./src/commands/command/template-develop.ts","webpack:///./src/commands/command/template-query.ts","webpack:///./src/commands/command/template-settings.ts","webpack:///./src/commands/command/zone.ts","webpack:///./src/commands/command/special-commands.ts","webpack:///./src/quick-dialog/quick-dialog-config.ts","webpack:///./src/quick-dialog/iframe-bridge.ts","webpack:///./src/manage/session-state-handler.ts","webpack:///./src/quick-dialog/state.ts","webpack:///./src/quick-dialog/index.ts","webpack:///./src/quick-dialog/quick-dialog-container.ts","webpack:///./src/quick-dialog/quick-dialog.ts","webpack:///./src/manage/ng-dialog-params.ts","webpack:///./src/commands/command-link-generator.ts","webpack:///./src/commands/engine/run-parameters.ts","webpack:///./src/commands/engine/cms-engine.ts","webpack:///./src/commands/engine/sxc-instance-engine.ts","webpack:///./src/commands/command/layout.ts","webpack:///./src/bootstrap/bootstrap.ts","webpack:///./src/dnn/dnn-menu-helper/dnn-inpage-edit.ts","webpack:///./src/dnn/index.ts","webpack:///./src/manage/edit-manager.ts","webpack:///./src/manage/manage.ts","webpack:///./src/system/2sxc.system.ts","webpack:///./src/toolbar/toolbar-global-enable-shake.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default","_extends","assign","target","arguments","length","source","defaults","selectorAttr","targetAttr","optionsAttr","useOptionsAttr","parseDefaultValueFromContent","document","init","i18next","options","undefined","extendDefault","val","defaultValue","parse","elem","opts","attr","indexOf","parts","split","substr","innerHTML","textContent","startIdx","endIdx","substring","slice","join","_startIdx","_endIdx","dataAttr","translated","getAttribute","setAttribute","relaxedJsonParse","badJSON","JSON","replace","match","p1","_loc","targetSelector","querySelector","keys","ix","l_ix","clone","lng","stringify","handle","selector","elems","querySelectorAll","childs","j","window","$","fn","apply","this","search","global","Shake","hasDeviceMotion","threshold","timeout","lastTime","Date","lastX","lastY","lastZ","CustomEvent","event","bubbles","cancelable","createEvent","initEvent","reset","start","addEventListener","stop","removeEventListener","devicemotion","e","deltaX","deltaY","deltaZ","current","accelerationIncludingGravity","x","y","z","Math","abs","getTime","dispatchEvent","handleEvent","type","factory","CommandNames","LogEntryOptions","merge","icon","translateKey","uiOnly","partOfPage","more","buttonDefaults","_","title","uiActionOnly","build","commandDefinition","Command","HeaderNames","ApiUrlRoots","logName","parentLog","initialMessage","initLog","initLogInternal","log","rename","linkLog","add","keepData","location","parent","entries","Array","depth","callDepths","maxEntries","liveDump","_parentHasLiveDump","_parentHasKeepData","fullIdentifier","identifier","scope","id","idCache","randomString","startTime","dot","min","rest","message","data","_prepareMessage","_addEntry","_prepareEntry","entry","addData","logData","msg","time","Function","toString","callParams","_callDepthAdd","push","_callDepthRemove","last","pop","console","warn","dump","one","separator","dumpOne","dumpList","index","forEach","result","line","repeat","stringLength","chars","randomstring","rnum","floor","random","initialEntry","behavior","lastMessage","processExtraBehavior","onlyAddIfNew","done","return","error","throw","TypeSafeAssign","args","reduce","DeepClone","original","ignoreCircular","str","getCircularReplacer","seen","WeakSet","has","urlClean","DialogPaths","ready","callback","readyState","once","param","obj","map","k","v","encodeURIComponent","domFromString","string","dummyParent","createElement","insertAdjacentHTML","from","brokenScript","workingScript","attributes","attribute","nodeName","nodeValue","NoJQ","replaceWith","elements","children","element","removeChild","offset","clientRect","getBoundingClientRect","top","scrollY","left","scrollX","width","computedStyle","getComputedStyle","offsetWidth","parseInt","getPropertyValue","height","offsetHeight","outerWidth","empty","childNodes","toBeReplaced","newElement","runScripts","parentElement","scripts","restores","script","replaceChild","restore","AssetsLoader","append","newElements","tagName","toLocaleLowerCase","restoreType","appendChild","others","copy","src","listener","onload","onerror","head","setTimeout","_data","Obj","history","setName","InsightsLogSet","logs","show","partName","part","logSet","autoLimit","logNames","Insights","$2sxc","_insights","InsightsSingleton","commandList","list","singleton","_singleton","Commands","addCommand","command","cmd","addDef","def","cViewWithoutContent","UseExistingTemplate","TargetTypes","IDs","cls","scMenu","toolbar","toolbarData","settings","settingsData","publishAllowed","sel","tagScMenu","Attributes","InstanceId","Context","ContentBlockId","C","ContentBlock","AttrNames","ClsNames","UnInitialized","UnAvailable","Toolbar","attrToMarkInitalized","full","hover","disable","classes","oldHover","selectors","ofOldHover","eventNames","onInit","Cb","ofName","Debug","cms","autoDump","run","Sel","SxcDivs","strResult","results","RegExp","exec","hash","matches","pathname","reverse","decodeURIComponent","require","found","alert","isDebug","DnnUiRoot","frame","open","url","wrapper","body","ifrm","className","close","frm","parentNode","closeThis","totalPopup","helpAutoDetect","env","dnnSfFallback","cl","dnnSfLoadWhenDocumentReady","sf","ServicesFramework","dnnSf","apiRoot","getServiceRoot","sfJsInfo","page","getTabId","root","api","appApi","rvtHeader","rvt","getAntiForgeryValue","uiRoot","platform","load","mainLoader","startMetaTagObserver","observer","MutationObserver","mutationsList","mut","attributeName","updateEnv","getMetaContent","observe","getJsApiMetaTag","childList","subtree","startInputRvtObserver","inputRvtObserver","loadRvtFromHiddenInput","hiddenField","input","updateRvt","retries","dynamicPageHelper","loadMetaFromHeader","forceFallback","meta","newJsInfo","ourMeta","metaLoader","_jsApi","addSlash","endsWith","header","replacedRvt","newRvt","ensureReadyOrThrow","partRequested","sxc","makePromise","headers","Error","promise","ajax","async","dataType","contentType","method","getActionUrl","beforeSend","xhr","setRequestHeader","preventAutoFail","fail","showDetailedHttpError","controller","action","http","apiUrl","endpoint","params","settingsOrUrl","request","post","delete","put","controllerAction","controllerName","actionName","fetchRaw","ctxParams","ctx","urlLower","_ignoreHeaders","includes","appId","zoneId","fetch","fetchJson","then","response","json","cbid","toLocaleUpperCase","urlAndParams","urlParts","filter","nameInError","webApi","SxcPart","SxcData","getAll","getInternal","getOne","getMany","criteria","fields","path","ContentApiRoot","values","metadataFor","Target","Entity","Guid","For","update","idOrGuid","SxcDataServiceBase","urlParams","getStream","stream","getStreams","streams","runParams","cacheKey","_isSxcInstance","manage","SxcCms","_manage","initInstance","on","warning","_translateInit","context","app","currentLanguage","is","thing","query","SxcQuery","resolveServiceUrl","virtualPath","toLowerCase","status","config","infoText","srvResp","responseText","Message","msgDet","MessageDetail","ExceptionMessage","isEditMode","_isEditMode","recreate","resetCache","_controllers","origAsContextId","ensureCompleteOrThrow","UrlParams","fHeaders","pageId","endpointName","appApiRoot","baseUrl","startsWith","isRunParamsInstance","maybeRunParams","typed","errPrefix","ensureRunParamsInstanceOrError","QuickEditOverlay","QuickEditConfig","editCtx","isContent","settingsId","resourcesId","supportsAjax","contentBlock","AppId","IsContent","AppResourcesId","AppSettingsId","appPath","AppUrl","hasContent","HasContent","SupportsAjax","ZoneId","Language","Current","primaryLanguage","Primary","allLanguages","All","cb","isCreated","IsCreated","isList","IsList","queryId","QueryId","templateId","TemplateId","templatePath","TemplatePath","TemplateIsShared","edition","Edition","contentTypeId","ContentTypeName","contentGroupId","isEditable","allowPublish","sxcVersion","parameters","sxcRootUrl","Environment","IsEditable","SxcVersion","SxcRootUrl","contentBlockReference","publishingMode","windowInPage","$2sxcInPage","PageId","Ui","autoToolbar","AutoToolbar","Form","form","parentGuid","parentField","parentIndex","User","CanDevelop","CanAdmin","fromContext","user","ContextOfUser","AttrJsonUser","_isContext","ContextOfApp","instance","system","ContextOfSystem","tenant","ContextOfTenant","ui","ContextOfUi","maybeButton","item","ContextOfItem","ContextOfContentBlock","forButton","button","findContext","tagOrSxc","containerTag","getContainerTag","contextOfButton","ContextComplete","getContextInstance","contextCopy","htmlElementOrId","copyOfContext","htmlElement","getEditContext","ContextBundleToolbar","resetLog","nameOrSettings","eventOrSettings","innerCall","cmsEngine","tag","ContextIdentifier","contextGiver","detectParamsAndRun","do","editContextTag","SxcEdit","getTag","getEditContextOfTag","htmlTag","closest","sxci","isDisabled","getFirstAttribute","name1","name2","HtmlTools","tryGetAttrText","item1","getNamedItem","addClasses","classessArray","classList","setButtonActivationClasses","buttons","linkTags","remove","DefaultButtons","btn","i18N","invisible","unavailable","selectedOverlay","toggleOverlay","coords","yh","positionAndAlign","style","display","addApp","addContent","select","paste","move","getNewDefaultConfig","enable","innerBlocks","dummyWorkflowManager","getFromDom","QeSelectors","blocks","appList","apps","trim","autoAddMore","follow","class","color","dropEmptyProperties","toolbarSettings","partialSettings","getDefaults","ToolbarSettings","getForEmpty","ToolbarWhenNoToolbarProvided","getWorkflow","node","WorkflowHelper","getDummyManager","parentCount","cmdWf","commandWorkflow","isCancelled","currentArgs","cancel","_isCancelled","isDummy","steps","isArray","addOne","step","initDefaults","phase","errorMsg","wfArgs","emptyWorkflow","stepsForCommand","SpecialCommands","all","WorkflowPhases","code","sort","priority","Promise","resolve","reject","promiseChain","stepCount","nextStep","resultingArgs","runNextPromiseIfNotCancelled","finalArgs","catch","attach","prevArgs","nextFactory","before","raiseToolbarInitEvent","toolbarElement","anchoredElement","detail","workflow","hoverTag","translator","initialized","alwaysShow","watcherActive","updateFn","updatePosition","addMouseEvents","showPermanently","initializeIfNecessary","relatedTarget","contains","hide","nextFreeId","getNextToolbarId","toolbarId","generate","TagToolbarForAttr","TagToolbarAttr","toolbarStyle","position","transition","autoTranslateMenus","initial","right","viewportOffset","bodyOffset","getBodyScrollOffset","tagScrollOffset","tagOffset","tagWidth","mousePos","mousePosition","win","documentElement","clientWidth","padding","tagToolbarPadding","toolbarHeight","tagToolbarPaddingRight","disableScrollWatcher","activateScrollWatcher","TagToolbarManager","lastMenuId","posNoJq","CleanupOrphanedToolbars","clientX","clientY","mergeAdditionalParams","additionalParams","inlineWindow","Button","splitName","isPropGen","dialog","getVal","disabled","dynamicClasses","fullScreen","newWindow","addParamsToLink","showCondition","propOrGen","fallback","groups","debug","createIdentifier","render","groupIndex","btnSafe","ButtonSafe","rule","_rules","find","group","groupName","btnLink","generateRunJs","setTitle","divTag","iconTag","processColorRules","callLog","uiTitle","i18nTitle","backgroundColor","correctColorCodes","modifyContext","complete","base64","decoded","atob","symbol","RenderPart","tags","btnGroups","concat","generateGroup","groupNumber","btns","h","btnContext","RenderButtonGroups","outerHTML","tlbTag","sortOrder","g","loadFromTag","newConfigFormat","at","err","_typeof","iterator","constructor","_defineProperty","configurable","writable","_objectSpread","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_classCallCheck","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_inherits","subClass","superClass","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","test","_toConsumableArray","iter","_slicedToArray","_arr","_n","_d","_e","_s","_i","next","consoleLogger","output","_console","baseLogger","Logger","concreteLogger","prefix","logger","bool","_len","_key","forward","_len2","_key2","_len3","_key3","_len4","_key4","lvl","debugOnly","moduleName","EventEmitter","observers","events","_this","cloned","_cloned","defer","res","rej","makeString","a","getLastOfPath","Empty","cleanKey","canNotTraverseDeeper","stack","shift","setPath","newValue","_getLastOfPath","getPath","_getLastOfPath3","getPathWithDefaults","defaultData","deepExtend","overwrite","prop","String","regexEscape","_entityMap","_EventEmitter","ResourceStore","defaultNS","keySeparator","splice","silent","addNamespaces","emit","resources","addResource","deep","pack","hasResourceBundle","removeNamespaces","getResource","compatibilityAPI","postProcessor","processors","addPostProcessor","processor","process","checkedLoadedFor","Translator","services","language","interpolation","resolved","nsSeparator","namespaces","_this2","overloadTranslationOptionHandler","_this$extractFromKey","extractFromKey","namespace","appendNamespaceToCIMode","resUsedKey","usedKey","resExactUsedKey","exactUsedKey","resType","noObject","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","returnObjects","returnedObjectHandler","resTypeIsArray","copy$$1","newKeyToUse","deepKey","translate","extendTranslation","usedDefault","isValidLookup","count","suffix","pluralResolver","getSuffix","updateMissing","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","missingKeyHandler","backendConnector","saveMissing","needsPluralHandling","saveMissingPlurals","getPluralFormsOfKey","appendNamespaceToMissingKey","parseMissingKeyHandler","_this3","usedLng","usedNS","skipInterpolation","interpolator","defaultVariables","interpolate","nest","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","_this4","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","pluralSuffix","possibleKey","finalKey","finalKeys","addLookupKeys","contextSeparator","returnNull","returnEmptyString","resourceStore","capitalize","charAt","toUpperCase","LanguageUtil","whitelist","formatLanguageCode","specialCases","lowerCaseLng","cleanCode","nonExplicitWhitelist","getLanguagePartFromCode","fallbacks","getScriptPartFromCode","fallbackCode","fallbackCodes","addCode","isWhitelisted","fc","sets","nr","_rulesPluralsTypes","1","Number","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","createRules","rules","set","numbers","plurals","PluralResolver","getRule","ret","idx","noAbs","simplifyPluralSuffix","returnSuffix","prepend","compatibilityJSON","Interpolator","format","escapeValue","iOpts","escape","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapePrefix","unescapeSuffix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","regexpStr","regexp","regexpUnescapeStr","regexpUnescape","nestingRegexpStr","nestingRegexp","replaces","regexSafe","handleFormat","f","missingInterpolationHandler","temp","lastIndex","_temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","Connector","backend","store","state","queue","languages","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","errors","_name$split2","addResourceBundle","q","_getLastOfPath2","what","fcName","tried","wait","read","queueLoad","loadOne","prepareLoading","_this5","_name$split3","_name$split4","fallbackValue","isUpdate","initImmediate","preload","pluralSeparator","partialBundledLanguages","tDescription","_format","transformOptions","noop","I18n","external","isInitialized","isClone","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","storeApi","_this2$store","deferred","changeLanguage","usedCallback","isLanguageChangingTo","setLng","cacheUserLanguage","loadResources","detect","fixedT","_this$translator","_this$translator2","exists","_this6","lastLng","loadNotPending","loadState","_this7","preloaded","newLngs","_this8","mergedOptions","membersToCopy","each","addQueryString","queryString","paramName","cache","queryStringParams","XMLHttpRequest","ActiveXObject","crossDomain","withCredentials","overrideMimeType","customHeaders","onreadystatechange","loadPath","addPath","allowMultiLoading","parsePayload","Backend","loadUrl","payload","localize","translations","locReady","i18n","initManager","_context","tryToFindAContext","realRootPath","use","initLoc","editContext","menus","quickEButtons","tlbManager","buildDnnModule","parentTag","toolbars","findChildTagsWithConfig","contentTag","addDefaultToolbarConfigToTag","loadConfigAndInitialize","onlyDirectDescendents","convertConfigToToolbars","err2","loadConfig","tagToolbar","addHoverAttributeToTag","hoverParent","hasAttribute","InPageButtonJson","toButton","oldFormat","evalPropOrFun","propOrFunction","hasActions","hasModify","modify","noAction","normalize","asBtnConfig","_expanded","btnConfigStructure","InPageCommandJson","removeDisableButtons","wrapLog","removeUnfitButtons","CmdMore","addDefaultBtnSettings","groupDefaults","tlbDefaults","actions","btnProperties","fallbackBtnSetting","removals","toolbarV10","overrideShow","toolbarDefaults","propName","Operations","BuildSteps","updateToV9","actDef","entity","_2sxcEditInformation","editInfo","useModuleList","EntityId","entityId","TemplateConstants","expandButtonGroups","fullToolbar","expandButtonList","buttonConfigs","b","convertToButton","dropMoreIfOnlyOneGroup","sharedParams","sharedDefaults","btnCommand","realParams","newButtonConfig","buttonsWip","newButtons","actionNames","expandButtonAndAddToList","addMoreButton","names","commandPart","addMore","moreButton","unshift","findIndex","ToolbarTemplateEmpty","_isToolbarTemplate","ToolbarTemplateDefault","ToolbarTemplateSublist","configTemplateList","ToolbarTemplateManager","findOrShowError","template","hasGroups","ensureGroups","findGroup","addButton","pos","fromStart","findGroupOrDefault","addGroup","buttonId","posStartEnd","correctPosStartEnd","posInsert","findInsertPosition","_insertCursor","alreadyExists","newGroup","removeGroup","loadV9","draftToolbar","getTemplateIfNoButtonsSpecified","buildFullDefinition","raw","ToolbarTemplate","defToolbarname","templates","toolbarContext","unstructuredConfig","configWip","ensureDefinitionTree","buildTreeAndModifyAccordingToRules","newToolbar","findGroups","probablyTemplate","RuleConstants","None","processParams","prefill","RuleParamsHelper","extractSubKeys","filters","metadata","for","processMetadata","mdFor","targetType","isNaN","keyType","prefixLen","convertGuidListToArrayOrKeepOriginal","probablyArray","guidCount","ruleString","operator","loadHeader","processed","loadParamsAndPrefill","splitParamsArray","knownOperatorFound","knowStepFound","loadHeaderParts","dicToArray","parms","splitParamsDic","keyValues","ruleManagerId","getSettings","getSystemRule","getToolbar","getParams","getAdd","br","getRemoveGroups","rawList","loadV10","settingRule","settingsUiRule","toolbarRule","toolbarTemplateName","rg","templateEditor","_owner","setLoggingAndCreateHelpers","debugLog","toolbarV09","CommandConfigLoader","tlbConfig","toolbarFinder","ToolbarManager","buildModule","getLoader","instanceName","loader","sxcInstance","parentId","fieldName","appName","container","newGuid","cblockList","field","guid","newTag","after","indexFrom","indexTo","toIndex","confirm","getInstanceModifier","clip","findClipListIndex","listIndex","appOrContent","oldClip","newClip","to","isRealMove","findListIndex","onCbButtonClick","blockTag","main","activeContentBlock","findClosestList","listItems","actionConfig","domIndex","cbAction","modCb","ModifierBase","modInternal","modId","getModuleId","pane","getPaneName","showSendToPane","quickE","mod","activeModule","pl","selected","getMoveButtons","onModuleButtonClick","dnnMod","modManage","modDnn","dnnSF","tabId","sendDnnAjax","success","paneName","desktopModules","moduleToFind","ModuleName","postData","Module","Page","Pane","Position","Sort","Visibility","AddExistingModule","CopyModule","createMod","ModuleID","order","dataVar","TabId","ModuleId","ModuleOrder","pns","cachedPanes","targets","pName","clipboard","newPane","req","dnnHeaders","fakeXhr","setModuleHeaders","URLSearchParams","text","statusText","resText","resData","lastCall","w","eitherCbOrMod","getBodyPosition","bodyPos","PositionCoordinates","refresh","newDate","lists","findAllLists","singleItem","contentBlocks","panes","refreshDomObjects","currentCoords","nearestCb","findNearest","nearestMod","modActions","toggle","cbActions","oldParent","_parentNode","alignTo","parentPane","parentCbList","parentContainer","listSettings","showContent","showApps","provideCorrectAddButtons","nearestItem","nearestDistance","posX","posY","distance","Selection","mods","initializeSecondaryButtons","QuickEClipboard","qem","createSpecs","mark","clearUi","newData","removeSelectionMarker","selectedItem","previousElementSibling","setSecondaryActionsState","btnConfig","currentItem","contextInfo","contentBlockAndModuleSelectors","el","QuickE","loadPageConfig","initWatchMouse","logConfig","confJ","configs","finalConfig","confO","defConfig","detectWhichMenusToActivate","conf","innerCBs","hasInnerCBs","prepareToolbarInDom","initPanes","refreshTimeout","requestAnimationFrame","ContentBlockEditor","prepareToAddContent","updateTemplate","updateTemplateFromDia","wasShowingPreview","renderer","reloadAndReInitialize","getPreviewWithTemplate","lang","originalparameters","forceCreate","saveTemplate","forceCreateContentGroup","newTemplateChooserState","showMessage","newContent","forceAjax","preview","WorkflowArguments","ajaxLoad","dnn_tabVersioningEnabled","dnn","ContentEditorManager","triggerChangeOnPageContentEvent","alternateTemplateId","justPreview","replaceContentBlock","newContentObj","newHeadHtml","Resources","resource","Type","Url","newHead","newDom","Html","asset","Actions","addItem","doAndReload","removeFromList","changeOrder","publish","publishId","verb","isPartOfBlockList","isBlockReference","isFieldList","isReferencedItem","SharedLogic","addExisting","configureLinkGenerator","linkGenerator","items","Group","Part","Index","Add","topItem","appImport","edit","enc","btoa","errNoCode","actPar","customCode","contentItems","itemId","itemGuid","itemTitle","msgJs","entityGuid","entityTitle","openDialog","MetadataCommand","itm","Metadata","ImageMetadataCommand","fullMenu2","oldState2","newState2","preventDefault","scElement","opacity","screenX","screenY","max","isPublished","Path","isshared","pipelineId","linkGen","QuickDialogConfig","isInnerContent","changed","uncachedSxc","instanceSxc","getContext","getAdditionalDashboardConfig","setVisible","scrollToTarget","tagModule","reloadAndReInit","setTemplate","templateName","final","setup","dialogName","sxcCacheKey","isConfiguredFor","instanceId","sessionStorage","setItem","removeItem","getItem","getItemValue","cancelled","quickDialog","isFullscreen","resizeWatcher","getOrCreate","buildContainerAndIFrame","extendedIFrame","iFrame","iFrameExtended","bridge","convertIFrameToQuickDialog","watchForResize","getIFrame","setSize","minHeight","setInterval","contentDocument","previousHeight","QuickDialog","isVisible","cont","rememberDialogState","showOrToggleFromToolbar","togglePromise","dialogUrl","setUrlToQuickDialog","contentWindow","reboot","promiseRestart","resolvePromise","iframe","cbId","ng8","changePathToLocalhostForDev","devMode","localStorage","ctxAny","tid","mid","blockId","publishing","approot","fa","rvth","rootUrl","getDialogUrl","debugUrlParam","buildItemsList","addContentGroupItems","addItemInList","getLink","urlItems","Prefill","ngDialogParams","ct","attributeSetName","withPresentation","isAdd","groupId","findPartName","addContentGroupItem","Field","Parent","content","getParamsFromNameOrParams","nameIsString","expandParamsWithDefaults","runParamsHelper","nameOrParams","eventOrParams","cmdParams","thirdParamIsEvent","altKey","wipParamsWithWorkflow","origEvent","wf","workflows","finalPromise","wrapperPromise","commandPromise","CmsEngine","promiseWithAfterEffects","link","completePromise","isChanged","shiftKey","cntx","attrSel","listSpecs","specs","initializedInstances","openedTemplatePickerOnce","diagCancelStateOnStart","initialize","initAllInstances","watchDomChanges","isFirstRun","noModuleToolbars","modToolbars","tryShowTemplatePicker","stats","addedNodes","openDialogId","uninitializedModules","wasEmpty","showGlassesButtonIfUninitialized","cg","_editContext","changeLayoutOrContent","adminApp","adminZone","develop","userInfo","cmdEngine","_reloadWithAjax","_commands","_user","getButton","tbConfig","moreSettings","toolbarConfig","_updateContentGroupGuid","_toolbarManager","myContext","editManager","finishUpgrade","domElement","$quickE","$2sxcActionMenuMapper"],"mappings":"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","file":"inpage.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require('./dist/commonjs/main.js').default;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar defaults = {\n    selectorAttr: 'data-i18n',\n    targetAttr: 'i18n-target',\n    optionsAttr: 'i18n-options',\n    useOptionsAttr: false,\n    parseDefaultValueFromContent: true,\n    document: document\n};\n\nfunction init(i18next) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    options = _extends({}, defaults, options);\n    var extendDefault = function extendDefault(o, val) {\n        return options.parseDefaultValueFromContent ? _extends({}, o, { defaultValue: val }) : o;\n    };\n    function parse(elem, key, opts) {\n        var attr = 'text';\n\n        if (key.indexOf('[') == 0) {\n            var parts = key.split(']');\n            key = parts[1];\n            attr = parts[0].substr(1, parts[0].length - 1);\n        }\n\n        key = key.indexOf(';') == key.length - 1 ? key.substr(0, key.length - 2) : key;\n\n        if (attr === 'html') {\n            elem.innerHTML = i18next.t(key, extendDefault(opts, elem.innerHTML));\n        } else if (attr === 'text') {\n            elem.textContent = i18next.t(key, extendDefault(opts, elem.textContent));\n        } else if (attr === 'prepend') {\n            var startIdx = elem.innerHTML.indexOf('<loc-i18n>');\n            var endIdx = elem.innerHTML.indexOf('</loc-i18n>') + 11;\n            if (startIdx > -1 && endIdx > 6) {\n                elem.innerHTML = [elem.innerHTML.substring(0, startIdx), elem.innerHTML.slice(endIdx)].join('');\n            }\n            elem.innerHTML = ['<loc-i18n>', i18next.t(key, extendDefault(opts, elem.innerHTML)), '</loc-i18n>', elem.innerHTML].join('');\n        } else if (attr === 'append') {\n            var _startIdx = elem.innerHTML.indexOf('<loc-i18n>');\n            var _endIdx = elem.innerHTML.indexOf('</loc-i18n>') + 11;\n            if (_startIdx > -1 && _endIdx > 6) {\n                elem.innerHTML = [elem.innerHTML.substring(0, _startIdx), elem.innerHTML.slice(_endIdx)].join('');\n            }\n            elem.innerHTML = [elem.innerHTML, '<loc-i18n>', i18next.t(key, extendDefault(opts, elem.innerHTML), '</loc-i18n>')].join('');\n        } else if (attr.indexOf('data-') === 0) {\n            var dataAttr = attr.substr('data-'.length);\n            var translated = i18next.t(key, extendDefault(opts, elem.getAttribute(dataAttr)));\n            // we change into the data cache\n            elem.setAttribute(dataAttr, translated);\n            // we change into the dom\n            elem.setAttribute(attr, translated);\n        } else {\n            elem.setAttribute(attr, i18next.t(key, extendDefault(opts, elem.getAttribute(attr))));\n        }\n    };\n\n    function relaxedJsonParse(badJSON) {\n        return JSON.parse(badJSON.replace(/:\\s*\"([^\"]*)\"/g, function (match, p1) {\n            return ': \"' + p1.replace(/:/g, '@colon@') + '\"';\n        }).replace(/:\\s*'([^']*)'/g, function (match, p1) {\n            return ': \"' + p1.replace(/:/g, '@colon@') + '\"';\n        }).replace(/(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g, '\"$2\": ').replace(/@colon@/g, ':'));\n    }\n\n    function _loc(elem, opts) {\n        var key = elem.getAttribute(options.selectorAttr);\n        //        if (!key && typeof key !== 'undefined' && key !== false)\n        //            key = elem.textContent || elem.innerHTML;\n        if (!key) return;\n\n        var target = elem,\n            targetSelector = elem.getAttribute(options.targetAttr);\n\n        if (targetSelector != null) target = elem.querySelector(targetSelector) || elem;\n\n        if (!opts && options.useOptionsAttr === true) opts = relaxedJsonParse(elem.getAttribute(options.optionsAttr) || '{}');\n\n        opts = opts || {};\n\n        if (key.indexOf(';') >= 0) {\n            var keys = key.split(';');\n            for (var ix = 0, l_ix = keys.length; ix < l_ix; ix++) {\n                if (keys[ix] != '') parse(target, keys[ix], opts);\n            }\n        } else {\n            parse(target, key, opts);\n        }\n\n        if (options.useOptionsAttr === true) {\n            var clone = {};\n            clone = _extends({ clone: clone }, opts);\n            delete clone.lng;\n            elem.setAttribute(options.optionsAttr, JSON.stringify(clone));\n        }\n    }\n\n    function handle(selector, opts) {\n        var elems = options.document.querySelectorAll(selector);\n        for (var i = 0; i < elems.length; i++) {\n            var elem = elems[i];\n            var childs = elem.querySelectorAll('[' + options.selectorAttr + ']');\n            for (var j = childs.length - 1; j > -1; j--) {\n                _loc(childs[j], opts);\n            }\n            _loc(elem, opts);\n        }\n    };\n    return handle;\n}\n\nexports.default = {\n    init: init\n};","// The following script fixes a bug in DNN 08.00.04\r\n// the bug tries to detect a module-ID based on classes in a tag,\r\n// but uses a bad regex and captures the number 2 on all 2sxc-modules\r\n// instead of the real id\r\n// this patch changes the order of the className of 2sxc modules when\r\n// they are accessed through '$.fn.attr'\r\n// 'DnnModule-2sxc DnnModule-xxx' -> DNN thinks the mod id is 2 (false)\r\n// 'DnnModule-xxx DnnModule-2sxc' -> DNN thinks the mod id is xxx (correct)\r\n// documented here https://github.com/2sic/2sxc/issues/986\r\n\r\n/**\r\n * Fix drag-drop functionality in dnn 08.00.04 - it has an incorrect regex\r\n * @internal\r\n */\r\n'use strict';\r\n\r\n(() => {\r\n  if (window.$ == null) return;\r\n\r\n  const fn = $.fn.attr;\r\n  $.fn.attr = function() {\r\n    const val = fn.apply(this, arguments);\r\n    if (arguments[0] !== 'class' || typeof val !== 'string' || val.search('DnnModule-2sxc ') === -1) return val;\r\n    return val.replace('DnnModule-2sxc ', '') + ' DnnModule-2sxc';\r\n  };\r\n})();\r\n","/*\n * Author: Alex Gibson\n * https://github.com/alexgibson/shake.js\n * License: MIT license\n */\n\n(function(global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return factory(global, global.document);\n        });\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory(global, global.document);\n    } else {\n        global.Shake = factory(global, global.document);\n    }\n} (typeof window !== 'undefined' ? window : this, function (window, document) {\n\n    'use strict';\n\n    function Shake(options) {\n        //feature detect\n        this.hasDeviceMotion = 'ondevicemotion' in window;\n\n        this.options = {\n            threshold: 15, //default velocity threshold for shake to register\n            timeout: 1000 //default interval between events\n        };\n\n        if (typeof options === 'object') {\n            for (var i in options) {\n                if (options.hasOwnProperty(i)) {\n                    this.options[i] = options[i];\n                }\n            }\n        }\n\n        //use date to prevent multiple shakes firing\n        this.lastTime = new Date();\n\n        //accelerometer values\n        this.lastX = null;\n        this.lastY = null;\n        this.lastZ = null;\n\n        //create custom event\n        if (typeof document.CustomEvent === 'function') {\n            this.event = new document.CustomEvent('shake', {\n                bubbles: true,\n                cancelable: true\n            });\n        } else if (typeof document.createEvent === 'function') {\n            this.event = document.createEvent('Event');\n            this.event.initEvent('shake', true, true);\n        } else {\n            return false;\n        }\n    }\n\n    //reset timer values\n    Shake.prototype.reset = function () {\n        this.lastTime = new Date();\n        this.lastX = null;\n        this.lastY = null;\n        this.lastZ = null;\n    };\n\n    //start listening for devicemotion\n    Shake.prototype.start = function () {\n        this.reset();\n        if (this.hasDeviceMotion) {\n            window.addEventListener('devicemotion', this, false);\n        }\n    };\n\n    //stop listening for devicemotion\n    Shake.prototype.stop = function () {\n        if (this.hasDeviceMotion) {\n            window.removeEventListener('devicemotion', this, false);\n        }\n        this.reset();\n    };\n\n    //calculates if shake did occur\n    Shake.prototype.devicemotion = function (e) {\n        var current = e.accelerationIncludingGravity;\n        var currentTime;\n        var timeDifference;\n        var deltaX = 0;\n        var deltaY = 0;\n        var deltaZ = 0;\n\n        if ((this.lastX === null) && (this.lastY === null) && (this.lastZ === null)) {\n            this.lastX = current.x;\n            this.lastY = current.y;\n            this.lastZ = current.z;\n            return;\n        }\n\n        deltaX = Math.abs(this.lastX - current.x);\n        deltaY = Math.abs(this.lastY - current.y);\n        deltaZ = Math.abs(this.lastZ - current.z);\n\n        if (((deltaX > this.options.threshold) && (deltaY > this.options.threshold)) || ((deltaX > this.options.threshold) && (deltaZ > this.options.threshold)) || ((deltaY > this.options.threshold) && (deltaZ > this.options.threshold))) {\n            //calculate time in milliseconds since last shake registered\n            currentTime = new Date();\n            timeDifference = currentTime.getTime() - this.lastTime.getTime();\n\n            if (timeDifference > this.options.timeout) {\n                window.dispatchEvent(this.event);\n                this.lastTime = new Date();\n            }\n        }\n\n        this.lastX = current.x;\n        this.lastY = current.y;\n        this.lastZ = current.z;\n\n    };\n\n    //event handler\n    Shake.prototype.handleEvent = function (e) {\n        if (typeof (this[e.type]) === 'function') {\n            return this[e.type](e);\n        }\n    };\n\n    return Shake;\n}));\n","\r\n/**\r\n * Names of commands known to 2sxc CMS - for use in toolbars and calling commands directly from code\r\n */\r\nexport enum CommandNames {\r\n    /**\r\n     * `add` command open a `new` dialog to add a new item to a list of items\r\n     * Note that this is similar to `new` but still not the same\r\n     */\r\n    add = 'add',\r\n\r\n    /**\r\n     * `add-existing` command to open a dialog allowing the user to select something to add to a list of items\r\n     */\r\n    addExisting = 'add-existing',\r\n\r\n    /**\r\n     * `app-import` command will open the dialog to import an App\r\n     */\r\n    appImport = 'app-import',\r\n\r\n    /**\r\n     * `edit` command will open the edit-dialog for the current item.\r\n     * In scenarios where we have a list of items and it's currently showing the demo, this will have the same effect as `add`\r\n     */\r\n    edit = 'edit',\r\n\r\n    // TODO: @2mh / 2dar - Move all the verbs here\r\n    // 1. Create the variable using camelCase\r\n    // 2. Use it in the command - but only for the command, not the icon\r\n    // 3. Test where the old variable is still used - replace that\r\n    // 4. remove the old variable\r\n    // 5. change the export * in the index.ts to be an import with the @internal prefix\r\n    // 5. Add minimal documentation what the command does to this document\r\n    // 6. build to verify nothing breaks (best keep the watcher on)\r\n}\r\n","/** @internal */\r\nexport enum LogEntryOptions {\r\n    log = 'log',\r\n    warn = 'warn',\r\n    error = 'error',\r\n    throw = 'throw',\r\n}\r\n","import { Button } from '../toolbar/config/button';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class Command {\r\n    constructor(public name: string) {\r\n    }\r\n\r\n    /** the defaults are important for new buttons that just know this command */\r\n    buttonDefaults: Partial<Button>;\r\n\r\n    protected merge(icon: string, translateKey: string, uiOnly: boolean, partOfPage: boolean, more: Partial<Button>): void {\r\n        this.buttonDefaults = {\r\n            icon: (_) => `icon-sxc-${icon}`,\r\n            title: (_) => `Toolbar.${translateKey}`,\r\n            uiActionOnly: (_) => uiOnly,\r\n            partOfPage: (_) => partOfPage,\r\n            ...more,\r\n        };\r\n    }\r\n\r\n    static build(name: string,\r\n                 translateKey: string,\r\n                 icon: string,\r\n                 uiOnly: boolean,\r\n                 partOfPage: boolean,\r\n                 more: Partial<Button>,\r\n                 ): Command {\r\n\r\n        if (typeof (partOfPage) !== 'boolean')\r\n            throw 'partOfPage in commands not provided, order will be wrong!';\r\n\r\n        const commandDefinition = new Command(name);\r\n\r\n        // Toolbar API v2\r\n        commandDefinition.merge(icon, translateKey, uiOnly, partOfPage, more);\r\n\r\n        return commandDefinition;\r\n    }\r\n}\r\n","/**\r\n * Special version which is filled in during compile by the definePlugin\r\n * The real version comes from the main package.json file in this repo\r\n * The sub-projects also use this version\r\n */\r\ndeclare const ROOTVERSION: string;\r\n\r\n/** @internal */\r\nexport const ToSxcName = \"2sxc\";\r\n\r\n/** @internal */\r\nexport const SxcVersion = ROOTVERSION;\r\n\r\n/** @internal */\r\nexport const SxcApiUrlRoot = 'desktopmodules/2sxc/api/';\r\n\r\n/** @internal */\r\nexport const HeaderNames = {\r\n    // 2sxc specific header\r\n    ContentBlockId: \"ContentBlockId\",\r\n\r\n    // headers as defined by DNN\r\n    ModuleId: \"ModuleId\",\r\n    TabId: \"TabId\",\r\n\r\n    // Header which should replace \"TabId\" in the long run\r\n    PageId: \"PageId\",\r\n};\r\n\r\n/** @internal */\r\nexport const ApiUrlRoots = ['app', 'app-sys', 'app-api', 'app-query', 'app-content', 'eav', 'view', 'dnn'];\r\n/** @internal */\r\nexport const AppApiMarker = 'app';\r\n\r\n// TODO: this should later lead to remapping of old url calls, but it's not in use yet\r\n// note that these were always 'auto' so `app-content` would need to be come `app/auto/content`\r\n/** @internal */\r\nexport const AppApiMap = {\r\n    'app-api': 'app/[name]/api',\r\n    'app-query': 'app/[name]/query',\r\n    'app-content': 'app/[name]/content'\r\n};\r\n\r\n// These are Not-Defined-IDs.\r\n// Because\r\n\r\n/**\r\n * This is a marker for an ID which is not defined\r\n * This is for situations where a 0 or even a negative number\r\n * could be real numbers, so this number is so big, it should never be a real ID\r\n * @internal\r\n */\r\nexport const NumberNotDefinedHuge = 274200000000;\r\n","import { Log } from '.';\r\n\r\n/**\r\n * Any object that has an own log object\r\n * @export\r\n * @interface HasLog\r\n */\r\nexport abstract class HasLog {\r\n  /**\r\n   * The logger for this object\r\n   * @type {Log}\r\n   * @memberof HasLog\r\n   */\r\n  log: Log;\r\n\r\n  /**\r\n   * initialize the logger\r\n   * ideally it has a parent-logger to attach to\r\n   * @param logName name to show in the logger\r\n   * @param parentLog parent-logger to attach to\r\n   * @param initialMessage optional start-message to log\r\n   * @internal\r\n   */\r\n  constructor(\r\n    logName: string,\r\n    /** @internal */\r\n    private parentLog?: Log,\r\n    initialMessage?: string,\r\n  ) {\r\n    this.initLogInternal(logName, parentLog, initialMessage);\r\n  }\r\n\r\n  /** @internal */\r\n  public initLog = (name: string, parentLog?: Log, initialMessage?: string)\r\n    : void => this.initLogInternal(name, parentLog, initialMessage)\r\n\r\n  /** @internal */\r\n  private initLogInternal(name: string, parentLog?: Log, initialMessage?: string): void {\r\n    if (this.log == null)\r\n        // standard & most common case: just create log\r\n        this.log = new Log(name, parentLog, initialMessage);\r\n    else {\r\n    // late-init case, where the log was already created - just reconfig keeping what was in it\r\n      this.log.rename(name);\r\n      this.log.linkLog(parentLog);\r\n      if (initialMessage != null)\r\n        this.log.add(initialMessage);\r\n    }\r\n  }\r\n\r\n}\r\n","import { LogEntry, LogCall } from '.';\r\n\r\nconst keepData = location.search.indexOf(\"debug=true\") !== -1;\r\n\r\nconst maxScopeLen = 3;\r\nconst maxNameLen = 6;\r\nconst liveDump = false;\r\nconst maxEntriesReached = 'Maximum amount of entries added to log, will stop adding more';\r\n\r\n/**\r\n * A log object which will collect log entries for another ojbect\r\n * @export\r\n * @interface Log\r\n */\r\nexport class Log {\r\n\r\n    /**\r\n     * List of all entries added to this log\r\n     */\r\n    entries = new Array<LogEntry>();\r\n    /** @internal */\r\n    private depth = 0;\r\n    /** @internal */\r\n    private callDepths: string[] = [];\r\n    /** @internal */\r\n    startTime: number;\r\n\r\n    /**\r\n     * Maximum amount of entries to add - to prevent memory hoging\r\n     */\r\n    maxEntries = 1000;\r\n\r\n    /**\r\n     * Create a logger and optionally attach it to a parent logger\r\n     * @param string name this logger should use\r\n     * @param Log optional parrent logger to attach to\r\n     * @param string optional initial message to log\r\n     * @internal\r\n     */\r\n    constructor(name: string, parent?: Log, initialMessage?: string) {\r\n        this.rename(name);\r\n        this.linkLog(parent);\r\n        this.startTime = new Date().getTime();\r\n        if (initialMessage != null) this.add(initialMessage);\r\n    }\r\n\r\n    /* if we should live-dump, can be selectively activated */\r\n    /** @internal */\r\n    liveDump: boolean = liveDump;\r\n    /** @internal */\r\n    _parentHasLiveDump: boolean = false;\r\n    /** @internal */\r\n    keepData: boolean = keepData;\r\n    /** @internal */\r\n    _parentHasKeepData: boolean = false;\r\n\r\n    /**\r\n     * Full identifier of this log-object, with full hierarchy\r\n     * @internal\r\n     */\r\n    fullIdentifier = (): string =>\r\n        `${(this.parent ? this.parent.fullIdentifier() : '')}${this.identifier()}`\r\n\r\n    /**\r\n     * give this logger a new name\r\n     * usually happens in constructor, but in rare cases\r\n     * it's called manually\r\n     * @param name\r\n     * @internal\r\n     */\r\n    rename(name: string): void {\r\n        try {\r\n            const dot = name.indexOf('.');\r\n            this.scope = dot > 0 ? name.substr(0, Math.min(dot, maxScopeLen)) + '.' : '';\r\n            const rest = dot > 0 ? name.substr(dot + 1) : name;\r\n            this.name = rest.substr(0, Math.min(rest.length, maxNameLen));\r\n            this.name = this.name.substr(0, Math.min(this.name.length, maxNameLen));\r\n        } catch (e) {\r\n            /* ignore */\r\n        }\r\n    }\r\n\r\n    /**\r\n     * link this log to a parent\r\n     * usually happens in constructor, but in rare cases\r\n     * this must be called manually\r\n     * @internal\r\n     */\r\n    linkLog = (parent: Log): void => {\r\n        this.parent = parent || this.parent; // if new parent isn't defined, don't replace\r\n        if (this.parent) {\r\n            this._parentHasLiveDump = this.parent.liveDump || this.parent._parentHasLiveDump;\r\n            this._parentHasKeepData = this.parent.keepData || this.parent._parentHasKeepData;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a simple message to the log\r\n     * @param {string} message\r\n     * @memberof Log\r\n     *\r\n     * preferred usage is with string parameter:\r\n     * log.add(`description ${ parameter }`);\r\n     *\r\n     * in case that we experience error with normal string parameter, we can use arrow function to enclose parameter like this () => parameter\r\n     * but use it very rarely, because there is certainly a performance implication!\r\n     * log.add(`description ${() => parameter}`);\r\n     */\r\n    add(message: (() => string) | string, data?: unknown): string {\r\n        // check if the log is already too big\r\n        if(this.entries.length > this.maxEntries) \r\n            return this._prepareMessage(message);\r\n\r\n        // if we just reached the max, add special message\r\n        if(this.entries.length === this.maxEntries) \r\n            this._addEntry(this._prepareEntry(maxEntriesReached));\r\n\r\n        const entry = this._prepareEntry(message, data);\r\n        this._addEntry(entry);\r\n        return entry.message;\r\n    }\r\n\r\n    /** @internal */\r\n    addData(message: (() => string) | string, data: unknown): void {\r\n        if (this.logData()) this.add(message, data);\r\n    }\r\n\r\n    /** @internal */\r\n    logData(): boolean {\r\n        return this.keepData || this._parentHasKeepData;\r\n    }\r\n\r\n    /** @internal */\r\n    _prepareEntry(message: (() => string) | string, data?: unknown): LogEntry {\r\n        const msg = this._prepareMessage(message);\r\n        const time = new Date().getTime() - this.startTime;\r\n        const entry = new LogEntry(this, msg, this.depth, time, data);\r\n        return entry;\r\n    }\r\n\r\n    /** @internal */\r\n    private _prepareMessage(message: (() => string) | string): string {\r\n        if (message instanceof Function) {\r\n            try {\r\n                return ((message as () => string)());\r\n            } catch (e) {\r\n                return 'err: message undefined';\r\n            }\r\n        }\r\n        return message.toString();\r\n    }\r\n\r\n    /** @internal */\r\n    call(name: string, callParams?: string, message?: string, data?: {[key:string]: unknown }): LogCall {\r\n        return new LogCall(this, name, callParams, message, data);\r\n    }\r\n\r\n    /** @internal */\r\n    _callDepthAdd(name: string): void {\r\n        this.depth++;\r\n        this.callDepths.push(name);\r\n    }\r\n\r\n    /** @internal */\r\n    _callDepthRemove(name: string): void {\r\n        this.depth--;\r\n        const last = this.callDepths.pop();\r\n        if (last !== name) {\r\n            console.warn(`log: call depth reduced by '${name}' but last was '${last}'`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * helper to create a text-output of the log info\r\n     * @param separator\r\n     * @param start\r\n     * @param end\r\n     * @internal\r\n     */\r\n    dump(one: LogEntry = null, separator = ' - '): void {\r\n        if (one) this.dumpOne(0, one, separator);\r\n        else this.dumpList();\r\n    }\r\n\r\n    /** @internal */\r\n    dumpList(start: number = 0, length?: number) {\r\n        let index = start;\r\n        this.entries\r\n            .slice(start, length ? start + length : undefined           )\r\n            .forEach((e) => this.dumpOne(index++, e));\r\n    }\r\n\r\n    /** @internal */\r\n    private dumpOne(index: number, e: LogEntry, separator = ' - '): void {\r\n        const result = (e.result) ? ' =' + e.result : '';\r\n        const line = ('0000' + index).slice(-4) + ' ' + e.source() + separator + '..'.repeat(e.depth) + e.message + result;\r\n        if (e.data) console.log(line, e.data);\r\n        else console.log(line);\r\n    }\r\n\r\n\r\n    /**\r\n     * add an entry-object to this logger\r\n     * this is often called by sub-loggers to add to parent\r\n     * @param entry\r\n     * @internal\r\n     */\r\n    _addEntry(entry: LogEntry): void {\r\n        if (this.liveDump) this.dump(entry);\r\n        this.entries.push(entry);\r\n        if (this.parent) this.parent._addEntry(entry);\r\n    }\r\n\r\n    /**\r\n     * helper to generate a random 2-char ID\r\n     * @param stringLength\r\n     * @internal\r\n     */\r\n    private randomString(stringLength: number): string {\r\n        const chars = '0123456789abcdefghiklmnopqrstuvwxyz';\r\n        let randomstring = '';\r\n        for (let i = 0; i < stringLength; i++) {\r\n            const rnum = Math.floor(Math.random() * chars.length);\r\n            randomstring += chars.substring(rnum, rnum + 1);\r\n        }\r\n        return randomstring;\r\n    }\r\n\r\n    /**\r\n     * parent logger - important if loggers are chained\r\n     * @internal\r\n     */\r\n    private parent: Log;\r\n\r\n    /**\r\n     * scope of this logger - to easily see which ones\r\n     * are about the same topic\r\n     * @internal\r\n     */\r\n    private scope = 'tdo';\r\n\r\n    /**\r\n     * The name of this log, for scenarios where multiple loggers are mixed\r\n     */\r\n    public name = 'unknwn';\r\n\r\n\r\n    /**\r\n     * Unique 2-character ID of this specific log object\r\n     * @internal\r\n     */\r\n    private id = (): string => this.idCache || (this.idCache = this.randomString(2));\r\n    /** @internal */\r\n    private idCache: string;\r\n\r\n    /**\r\n     * Unique identifier of this log object, with name and ID\r\n     * @internal\r\n     */\r\n    private identifier = (): string => `${this.scope}${this.name}(${this.id()})`;\r\n\r\n}\r\n","import { LogEntry, Log, LogEntryOptions as LEO } from '.';\r\n\r\n/** @internal */\r\nexport class LogCall {\r\n    /** The initial entry created - important for later attaching the final result of the call */\r\n    public initialEntry: LogEntry;\r\n\r\n    constructor(public log: Log, public name: string, callParams?: string, message?: string, data?: {[key:string]: unknown }) {\r\n        this.initialEntry = this.log._prepareEntry(name + '(' + (callParams || '') + ')');\r\n        this.log._callDepthAdd(name);\r\n        this.log._addEntry(this.initialEntry);\r\n        if (typeof message === 'string') this.add(message);\r\n        if (data) for (let key in data) this.data('initial:' + key, data[key]);\r\n    }\r\n\r\n    private lastMessage: string;\r\n\r\n    add(message: string, data?: unknown, behavior?: LEO) {\r\n        this.lastMessage = message;\r\n        this.log.add(message, data);\r\n        if (behavior) this.processExtraBehavior(behavior, message, data);\r\n    }\r\n\r\n    onlyAddIfNew(message: string, behavior?: LEO) {\r\n        if (this.lastMessage !== message)\r\n        this.add(message);\r\n        if (behavior) this.processExtraBehavior(behavior, message, undefined);\r\n    }\r\n\r\n    /** Add data - but only if data logging is enabled */\r\n    data(message: string, data: unknown) {\r\n        this.log.addData(message, data);\r\n    }\r\n\r\n    done(message?: string, behavior?: LEO): void {\r\n        this.return(null, message || '👍', behavior);\r\n    }\r\n\r\n    return<T>(result: T, message?: string, behavior?: LEO) {\r\n        message = message || '👍';\r\n        this.initialEntry.result = message;\r\n        this.log._callDepthRemove(this.name);\r\n\r\n        // if we're in keep-data / debug mode, keep that\r\n        this.initialEntry.data = result;\r\n\r\n        // if we're in live-dump mode, then the entry was already dumped, show again\r\n        if (this.log.liveDump || this.log._parentHasLiveDump)\r\n            this.add(this.name + ' = ' + message, result);\r\n\r\n        if (behavior) this.processExtraBehavior<T>(behavior, message, result);\r\n        return result;\r\n    }\r\n\r\n    /* \r\n     * treat all extra output or errors\r\n     * to allow setting a debug stop point when needed\r\n     * then you can trace the stack-call to see where the error originated\r\n     */\r\n    private processExtraBehavior<T>(behavior: LEO, message: string, data: T) {\r\n        if (behavior === LEO.log) console.log(message, data);\r\n        if (behavior === LEO.warn) console.warn(message, data);\r\n        if (behavior === LEO.error || behavior === LEO.throw) console.error(message, data);\r\n        if (behavior === LEO.throw) throw message;\r\n    }\r\n}\r\n","\r\n/**\r\n * Object manipulator helpers\r\n * @internal\r\n */\r\nexport class Obj {\r\n    /**\r\n     * This is the same as Object.assign, but type-safe.\r\n     * Use it as a replacetment for Object.Assign(this, ... ) in constructors\r\n     */\r\n    static TypeSafeAssign <T, K extends keyof T>(...args: T[]) {\r\n        args.reduce( (result, current) =>\r\n            (Object.keys(current) as K[]).reduce((target, key) => {\r\n                target[key] = current[key];\r\n                return target;\r\n            }, result)\r\n        , args[0]);\r\n    }\r\n\r\n    static DeepClone<T>(original: T, ignoreCircular = false): T {\r\n        if(original === undefined || original === null)\r\n            return original;\r\n        const str = ignoreCircular ? JSON.stringify(original, getCircularReplacer) : JSON.stringify(original);\r\n        if(str === undefined || str === null)\r\n            return original;\r\n        return JSON.parse(str) as T;\r\n    }\r\n}\r\n\r\n\r\nconst getCircularReplacer = () => {\r\n    const seen = new WeakSet();\r\n    return (_:any, value: any) => {\r\n      if (typeof value === \"object\" && value !== null) {\r\n        if (seen.has(value)) {\r\n          return;\r\n        }\r\n        seen.add(value);\r\n      }\r\n      return value;\r\n    };\r\n  };\r\n","\r\n/** @internal */\r\nexport function urlClean(original: string): string {\r\n  return original.replace(/(\\/+)/g, '/');\r\n}\r\n","/** @internal */\r\nexport class NoJQ {\r\n\r\n    /** https://api.jquery.com/ready/ */\r\n    static ready(callback: () => void): void {\r\n        if (document.readyState === 'complete') {\r\n            callback();\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', () => callback(), { once: true });\r\n        }\r\n    }\r\n\r\n    /** https://api.jquery.com/jquery.param/ */\r\n    static param(obj: any): string {\r\n        const param = Object.entries(obj)\r\n            .map(([k, v]) => `${encodeURIComponent(k)}=${v == null ? '' : typeof v === 'string' ? encodeURIComponent(v) : encodeURIComponent(JSON.stringify(v))}`)\r\n            .join('&');\r\n        return param;\r\n    }\r\n\r\n    /** Build DOM elements from string */\r\n    static domFromString(string: string): HTMLElement[] {\r\n        // build elements from string into dummy parent\r\n        const dummyParent = document.createElement('div');\r\n        dummyParent.insertAdjacentHTML('afterbegin', string);\r\n\r\n        // scripts created from string are not executable and have to recreated manually to be executable\r\n        Array.from(dummyParent.querySelectorAll('script')).forEach((brokenScript) => {\r\n            const workingScript = document.createElement('script');\r\n            // copy attributes\r\n            Array.from(brokenScript.attributes).forEach((attribute) => {\r\n                workingScript.setAttribute(attribute.nodeName, attribute.nodeValue);\r\n            });\r\n            // copy inline part\r\n            workingScript.textContent = brokenScript.textContent;\r\n            // replace a non executable script with executable one\r\n            NoJQ.replaceWith(brokenScript, workingScript, false);\r\n        });\r\n\r\n        // remove created elements from dummy parent so it can be garbage collected\r\n        const elements = Array.from(dummyParent.children) as HTMLElement[];\r\n        elements.forEach((element) => {\r\n            dummyParent.removeChild(element);\r\n        });\r\n        return elements;\r\n    }\r\n\r\n    /** https://api.jquery.com/offset/ */\r\n    static offset(element: HTMLElement): { left: number; top: number; } {\r\n        const clientRect = element.getBoundingClientRect();\r\n        const offset: { left: number; top: number; } = {\r\n            top: clientRect.top + window.scrollY,\r\n            left: clientRect.left + window.scrollX,\r\n        };\r\n        return offset;\r\n    }\r\n\r\n    /** https://api.jquery.com/width/ */\r\n    static width(element: HTMLElement): number {\r\n        // jquery width === offsetWidth - borders - padding\r\n        const computedStyle = getComputedStyle(element);\r\n        const width = element.offsetWidth === 0\r\n            ? 0\r\n            : element.offsetWidth\r\n            - (parseInt(computedStyle.getPropertyValue('border-left-width'), 10) + parseInt(computedStyle.getPropertyValue('border-right-width'), 10))\r\n            - (parseInt(computedStyle.getPropertyValue('padding-left'), 10) + parseInt(computedStyle.getPropertyValue('padding-right'), 10));\r\n        return width;\r\n    }\r\n\r\n    /** https://api.jquery.com/height/ */\r\n    static height(element: HTMLElement): number {\r\n        // jquery height === offsetHeight - borders - padding\r\n        const computedStyle = getComputedStyle(element);\r\n        const height = element.offsetHeight === 0\r\n            ? 0\r\n            : element.offsetHeight\r\n            - (parseInt(computedStyle.getPropertyValue('border-top-width'), 10) + parseInt(computedStyle.getPropertyValue('border-bottom-width'), 10))\r\n            - (parseInt(computedStyle.getPropertyValue('padding-top'), 10) + parseInt(computedStyle.getPropertyValue('padding-bottom'), 10));\r\n        return height;\r\n    }\r\n\r\n    /** https://api.jquery.com/outerWidth/ */\r\n    static outerWidth(element: HTMLElement): number {\r\n        const outerWidth = element.offsetWidth;\r\n        return outerWidth;\r\n    }\r\n\r\n    /** https://api.jquery.com/empty/ */\r\n    static empty(element: HTMLElement): void {\r\n        Array.from(element.childNodes).forEach((n) => {\r\n            element.removeChild(n);\r\n        });\r\n    }\r\n\r\n    /** https://api.jquery.com/replacewith/ */\r\n    static replaceWith(toBeReplaced: HTMLElement, newElement: HTMLElement, runScripts: boolean): void {\r\n        const parent = toBeReplaced.parentElement;\r\n\r\n        // disable scripts before replacing dom\r\n        const scripts = Array.from(newElement.querySelectorAll('script'));\r\n        const restores: ScriptTypeRestore[] = [];\r\n        scripts.forEach((script) => {\r\n            restores.push({ script, type: script.type });\r\n            script.type = null;\r\n        });\r\n\r\n        // replace dom\r\n        parent.replaceChild(newElement, toBeReplaced);\r\n\r\n        // enable scripts\r\n        restores.forEach((restore) => {\r\n            restore.script.type = restore.type;\r\n        });\r\n\r\n        if (runScripts) {\r\n            // run scripts manually to ensure proper timing\r\n            AssetsLoader.runScripts(scripts, undefined);\r\n        }\r\n    }\r\n\r\n    /** https://api.jquery.com/append/ */\r\n    static append(parent: HTMLElement, newElements: HTMLElement[], runScripts: boolean): void {\r\n        const scripts: HTMLScriptElement[] = [];\r\n\r\n        newElements.forEach((element) => {\r\n            if (element.tagName.toLocaleLowerCase() === 'script') {\r\n                const script = element as HTMLScriptElement;\r\n                // disable script before inserting to the dom\r\n                const restoreType = script.type;\r\n                script.type = null;\r\n                // insert to dom\r\n                parent.appendChild(script);\r\n                // enable script\r\n                script.type = restoreType;\r\n                scripts.push(script);\r\n            } else {\r\n                parent.appendChild(element);\r\n            }\r\n        });\r\n\r\n        if (runScripts && scripts.length > 0) {\r\n            // run scripts manually to ensure proper timing\r\n            AssetsLoader.runScripts(scripts, undefined);\r\n        }\r\n    }\r\n}\r\n\r\n/** @internal */\r\nexport class AssetsLoader {\r\n\r\n    /** Asynchronously runs external and inline scripts in series */\r\n    static runScripts(scripts: HTMLScriptElement[], callback: () => void): void {\r\n        const script = scripts[0];\r\n        const others = scripts.slice(1);\r\n        if (script == null) {\r\n            callback?.();\r\n            return;\r\n        }\r\n\r\n        // create copy\r\n        const copy = document.createElement('script');\r\n        // attributes\r\n        Array.from(script.attributes).forEach((attribute) => {\r\n            copy.setAttribute(attribute.nodeName, attribute.nodeValue);\r\n        });\r\n        // inline part\r\n        copy.textContent = script.textContent;\r\n\r\n        // if src then insert in head, wait for onload or onerror, remove from head and move to next one\r\n        if (copy.type && copy.src) {\r\n            const listener = () => {\r\n                copy.onload = null;\r\n                copy.onerror = null;\r\n                document.head.removeChild(copy);\r\n                this.runScripts(others, callback);\r\n            };\r\n            copy.onload = listener;\r\n            copy.onerror = listener;\r\n            document.head.appendChild(copy);\r\n            return;\r\n        }\r\n\r\n        // if no src then inline, insert to head and remove instantly and move to next one\r\n        setTimeout(() => {\r\n            document.head.appendChild(copy);\r\n            document.head.removeChild(copy);\r\n            this.runScripts(others, callback);\r\n        });\r\n    }\r\n}\r\n\r\ninterface ScriptTypeRestore {\r\n    script: HTMLScriptElement;\r\n    type: string;\r\n}\r\n","/**\r\n * @internal\r\n */\r\nexport enum DialogPaths {\r\n    quickDialog = 'dist/ng/', // quick-dialog\r\n    ng8 = 'dist/ng-edit/', // Angular\r\n}\r\n","import { Obj } from '../plumbing';\r\nimport { Log } from '.';\r\n\r\n/**\r\n * A log entry item\r\n * @export\r\n * @interface LogEntry\r\n */\r\nexport class LogEntry {\r\n\r\n    /**\r\n     * The result of an operation - treated differently in the output\r\n     * @internal\r\n     */\r\n    public result: string;\r\n\r\n\r\n    /**\r\n     * Data which is logged - if data-logging is enabled\r\n     * @internal\r\n     */\r\n    get data(): unknown {\r\n        return this._data;\r\n    }\r\n    /** @internal */\r\n    set data(data: unknown) {\r\n        if (data === undefined) return;\r\n        if (this.log.logData())\r\n            this._data = Obj.DeepClone(data, true);\r\n    }\r\n    /** @internal */\r\n    private _data?: unknown;\r\n\r\n    /** @internal */\r\n    public source = (): string => this.log.fullIdentifier();\r\n\r\n    /** @internal */\r\n    constructor(\r\n        /** @internal */\r\n        private log: Log,\r\n        public message: string,\r\n        /** @internal */\r\n        public depth: number,\r\n        /** A timestamp for this entry to better see sequences of things happening */\r\n        public time: number,\r\n        data?: unknown,\r\n        ) {\r\n            if (data) {\r\n                // #2492 - jQuery isn't used any more in 2sxc\r\n                // if (data instanceof jQuery) {\r\n                //     const jq = data as JQuery;\r\n                //     this.data = {\r\n                //         isJQuery: true,\r\n                //         original: jq,\r\n                //         html: jq.length && jq[0].outerHTML,\r\n                //     };\r\n                // } \r\n                // else\r\n                    this.data = data;\r\n            }\r\n    }\r\n\r\n}\r\n","import { HasLog, Log } from '.';\r\n\r\ndeclare const window: Window;\r\n\r\ntype LogList = Array<{ key: string, log: Log}>;\r\n\r\nconst msgIntro = 'This is the $2sxc JS Insights - see https://r.2sxc.org/insights \\n'\r\n    + 'Add ?debug=true to the url to log more data. \\n'\r\n    + 'Copy/paste code lines below to see details. \\n'\r\n    + '----------------------------------------------------------------------\\n';\r\n\r\nclass InsightsSingleton extends HasLog {\r\n\r\n    constructor() {\r\n        super('Sys.Insght');\r\n        this.add('system', 'insights', this.log);\r\n        this.log.add(`this log is usually empty, as it's just a helper tool`)\r\n    }\r\n\r\n    history: { [key: string]: InsightsLogSet } = {};\r\n\r\n    add(setName: string, logName: string, log: Log ) {\r\n        if (!(setName in this.history))\r\n            this.history[setName] = new InsightsLogSet(setName);\r\n        this.history[setName].logs.push({key: logName, log: log});\r\n    }\r\n\r\n    show(partName: string, index?: number, start?: number, length?: number): void {\r\n        // if nothing specified, list what to do to see inner parts\r\n        if (!partName) {\r\n            const keys = Object.keys(this.history);\r\n            console.log(`${msgIntro}${keys.length} insights-sections found: \\n` + keys.map((p) => `$2sxc.insights('${p}');`).join('\\n'));\r\n            return;\r\n        }\r\n\r\n        // partName found, check if it exists\r\n        const part = this.history[partName];\r\n        if (!part) {\r\n            console.error(`part '${partName}' not found`);\r\n            return;\r\n        }\r\n\r\n        // We have a partName, but no index - show list and how to get details\r\n        if (index === undefined) {\r\n            let count = 0;\r\n            const logNames = part.logs\r\n                .map((s) => `$2sxc.insights('${partName}', ${count++}); - will show for '${s.key}'`)\r\n                .join('\\n');\r\n            console.log(`'${partName}' contains ${part.logs.length} entries. Copy/paste the code to to see the logs: \\n` + logNames);\r\n            return;\r\n        }\r\n\r\n        // verify the entry exists\r\n        const logSet = part.logs.length >= index && part.logs[index];\r\n        if (!logSet) {\r\n            console.error(`index ${index} not found in part '${partName}'`);\r\n            return;\r\n        }\r\n\r\n        if (!logSet.log) {\r\n            console.error(`found index ${index} on part '${partName}' but it has no logs`);\r\n            return;\r\n        }\r\n\r\n        console.log(`Will dump the log for ${partName}[${index}] '${logSet.key}'`);\r\n        let autoLimit = false;\r\n        if (start === undefined) {\r\n            autoLimit = true;\r\n            start = 0;\r\n            length = 25;\r\n        }\r\n        logSet.log.dumpList(start || 0, length);\r\n        if (autoLimit && logSet.log.entries.length > length)\r\n            console.warn(`Only showing ${length} of ${logSet.log.entries.length} logs. To show all, add start param '..., 0)' or start/length '..., 0, 100)'`)\r\n}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nclass InsightsLogSet {\r\n    logs: LogList = [];\r\n    constructor(public name: string) {}\r\n}\r\n\r\n// ensure it's only created once\r\n// this is important, because the inpage code also uses this class\r\n// and would otherwise create the object separately\r\nconst singleton: InsightsSingleton = \r\n    window.$2sxc && window.$2sxc._insights   // try to load existing\r\n    || new InsightsSingleton();             // otherwise create new\r\n\r\n/** @internal */\r\nexport const Insights = singleton;\r\n","import { HasLog, Insights } from '../logging';\r\nimport { Button } from '../toolbar/config';\r\nimport { Command } from './command';\r\n\r\n/**\r\n * Singleton Catalog of all commands\r\n * @internal\r\n */\r\nexport class Commands extends HasLog {\r\n\r\n  /** Singleton */\r\n  public static singleton(): Commands {\r\n    return this._singleton ?? (this._singleton = new Commands());\r\n  }\r\n  private static _singleton: Commands;\r\n\r\n  public static add(name: string, translateKey: string, icon: string, uiOnly: boolean, partOfPage: boolean, more: Partial<Button>): Command {\r\n    return this.singleton().add(name, translateKey, icon, uiOnly, partOfPage, more);\r\n  }\r\n\r\n  public static addCommand(command: Command): void {\r\n    return this.singleton().addCommand(command);\r\n  }\r\n\r\n  private commandList: Command[] = [];\r\n  list: HashTable<Command> = {}; // hash - table of action definitions, to be used a list()[\"action - name\"]\r\n\r\n  private constructor() {\r\n      super('Cmd.Catlog');\r\n      Insights.add('system', 'command-catalog', this.log);\r\n  }\r\n\r\n  get = (name: string) => this.list[name]; // a specific action definition\r\n\r\n  add(name: string, translateKey: string, icon: string, uiOnly: boolean, partOfPage: boolean,\r\n      more: Partial<Button>): Command {\r\n      const cmd = this.addDef(Command.build(name, translateKey, icon, uiOnly, partOfPage, more));\r\n      this.log.add(`add command '${name}'`, cmd);\r\n      return cmd;\r\n  }\r\n\r\n  addCommand(command: Command): void {\r\n    const cmd = this.addDef(command);\r\n    this.log.add(`add command '${cmd.name}'`, cmd);\r\n  }\r\n\r\n\r\n  private addDef(def: Command): Command {\r\n    if (!this.list[def.name]) {\r\n      // add\r\n      this.commandList.push(def);\r\n      this.list[def.name] = def;\r\n    } else if (this.list[def.name] !== def) {\r\n      // update\r\n      this.list[def.name] = def;\r\n    }\r\n    return def;\r\n  }\r\n\r\n}\r\n","/**\r\n * This just holds some constants, but it looks like _LayoutElement is unused - but I think it should be!\r\n * @internal\r\n */\r\nexport class ContentBlock {\r\n// constants\r\nstatic cViewWithoutContent: string = '_LayoutElement'; // needed to differentiate the \"select item\" from the \"empty-is-selected\" which are both empty\r\nstatic UseExistingTemplate = -1;\r\n}\r\n\r\n\r\n/**\r\n * ContentBlock constants\r\n * @internal\r\n */\r\nexport const ContentBlockIds = {\r\n    classes: {\r\n    name: 'sc-content-block',\r\n    },\r\n    selectors: {\r\n    ofName: '.sc-content-block',\r\n    },\r\n};\r\n","/**\r\n * @internal\r\n */\r\nexport const IDs = {\r\n  // classes\r\n  cls: {\r\n    scMenu: 'sc-menu',\r\n  },\r\n  attr: {\r\n    toolbar: 'toolbar',\r\n    toolbarData: 'data-toolbar',\r\n    settings: 'settings',\r\n    settingsData: 'data-settings',\r\n  },\r\n  publishAllowed: 'DraftOptional',\r\n  sel: {\r\n    scMenu: '.sc-menu',\r\n    tagScMenu: 'ul.sc-menu',\r\n  },\r\n};\r\n","/**\r\n * Metadata Target Types\r\n * \r\n * These are constants to determine what something is assigned to (e.g. it describes an Entity, a file, etc.)\r\n * \r\n * Use it for the @see MetadataFor objects\r\n */\r\nexport enum TargetTypes {\r\n  /** \r\n   * Undefined Type (0) - included for completeness.\r\n   * Not usually used, actually None (1) is the default\r\n   */\r\n  Undefined = 0,\r\n\r\n  /** \r\n   * Things that are not used as Metadata (1). This is the default for most Entities.\r\n   */\r\n  None = 1,\r\n\r\n  /** \r\n   * Metadata of attributes / fields (2). This is used to store configuration like the field label, amount-of-rows, etc.\r\n   * Remarks = \r\n   * The key is always a number (int) pointing to the Attribute ID in the DB.\r\n   */\r\n  Attribute = 2,\r\n\r\n  /** \r\n   * App metadata (3). Used to give Apps additional properties. \r\n   * Remarks = \r\n   * The key should always be an int ID of the App.\r\n   */\r\n  App = 3,\r\n\r\n  /** \r\n   * Metadata of entities / data-items (4). \r\n   * This lets us enhance entities with additional information. \r\n   * Remarks = \r\n   * The Key should always be a GUID\r\n   */\r\n  Entity = 4,\r\n\r\n  /** \r\n   * Metadata of a content-type / data-schema (5). Used to give it a description etc. \r\n  */\r\n  ContentType = 5,\r\n\r\n  /** \r\n   * Zone metadata (6) - used to give a Zone additional information. \r\n   * Only used in very special cases, best not use.\r\n   */\r\n  Zone = 6,\r\n\r\n  /** \r\n   * Item / Object of the Platform, like a File or Folder etc. (10)\r\n   * Remarks = \r\n   * * The key is usually a string to further specify what it's describing, like \"file:72\"\r\n   * * The text equivalent is CmsObject\r\n   */\r\n  CmsItem = 10,\r\n\r\n  /** \r\n   * The entire system / platform - so Metadata for the current Dnn/Oqtane installation (11).\r\n   * Remarks = \r\n   * This is not in use as of now, just added for completeness sakes.\r\n   * New in v13\r\n   */\r\n  System = 11,\r\n\r\n  /** \r\n   * A Site - like the current site (12)\r\n   * Remarks = New in v13</remarks>\r\n   */\r\n  Site = 12,\r\n\r\n  /** \r\n   * A Site - like the current site (13)\r\n   * Remarks = New in v13 / beta</remarks>\r\n   */\r\n  // [PrivateApi]\r\n  SiteVariant = 13,\r\n\r\n  /** \r\n   * A Page - like the current page (14)\r\n   * Remarks = New in v13</remarks>\r\n   */\r\n  Page = 14,\r\n\r\n  /** \r\n   * A Page - like the current page (15) \r\n   * Remarks = New in v13 / beta</remarks>\r\n   */\r\n  // [PrivateApi]\r\n  PageVariant = 15,\r\n\r\n  /** \r\n   * A Module - like a module containing some content (16) \r\n   * Remarks = New in v13</remarks>\r\n   */\r\n  Module = 16,\r\n\r\n  /** \r\n   * A Module - like a module containing some content (17)\r\n   * Remarks = New in v13 / beta</remarks>\r\n   */\r\n  // [PrivateApi]\r\n  ModuleVariant = 17,\r\n\r\n  /** \r\n   * A User - like the admin-user (18)\r\n   * Remarks = New in v13</remarks>\r\n   */\r\n  User = 18,\r\n\r\n  /** Custom target (90). This is what you should use for basic apps which have a custom target that's none of the other defaults. */\r\n  Custom = 90,\r\n\r\n  /** Custom target (91). Use this for basic apps which need multiple different custom targets (advanced, rare use case) */\r\n  Custom1 = 91,\r\n  /** Custom target (92). Use this for basic apps which need multiple different custom targets (advanced, rare use case) */\r\n  Custom2 = 92,\r\n  /** Custom target (93). Use this for basic apps which need multiple different custom targets (advanced, rare use case) */\r\n  Custom3 = 93,\r\n  /** Custom target (94). Use this for basic apps which need multiple different custom targets (advanced, rare use case) */\r\n  Custom4 = 94,\r\n  /** Custom target (95). Use this for basic apps which need multiple different custom targets (advanced, rare use case) */\r\n  Custom5 = 95,\r\n  /** Custom target (96). Use this for basic apps which need multiple different custom targets (advanced, rare use case) */\r\n  Custom6 = 96,\r\n  /** Custom target (97). Use this for basic apps which need multiple different custom targets (advanced, rare use case) */\r\n  Custom7 = 97,\r\n  /** Custom target (98). Use this for basic apps which need multiple different custom targets (advanced, rare use case) */\r\n  Custom8 = 98,\r\n  /** Custom target (99). Use this for basic apps which need multiple different custom targets (advanced, rare use case) */\r\n  Custom9 = 99,\r\n}\r\n","import { ContentBlock, ContentBlockIds } from './content-block';\r\nimport { Debug } from './debug';\r\nimport { DialogPaths } from './dialog-paths';\r\nimport { IDs } from './ids';\r\nimport { ToolbarConstants } from './toolbar';\r\n\r\n/**\r\n * Attribute Names used in the HTML\r\n */\r\nconst Attributes = {\r\n  InstanceId: 'data-cb-instance',\r\n  Context: 'data-edit-context',\r\n  ContentBlockId: 'data-cb-id',\r\n};\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const C = {\r\n  ContentBlock: ContentBlock,\r\n  DialogPaths: DialogPaths,\r\n  IDs: IDs,\r\n  AttrNames: Attributes,\r\n  ClsNames: {\r\n    UnInitialized: 'sc-uninitialized',\r\n    UnAvailable: 'sc-unavailable',\r\n  },\r\n  Toolbar: ToolbarConstants,\r\n  Cb: ContentBlockIds,\r\n  Debug: Debug,\r\n  Sel: {\r\n    SxcDivs: `div[${Attributes.Context}]`,\r\n  },\r\n};\r\n","\r\n// The parts themselves must also be constants\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const ToolbarConstants = {\r\n  attrToMarkInitalized: '2sxc-tagtoolbar',\r\n  attr: {\r\n    full: 'sxc-toolbar',\r\n    hover: 'sxc-toolbar-hover',\r\n    disable: 'data-disable-toolbar',\r\n  },\r\n  classes: {\r\n    oldHover: 'sc-element',\r\n  },\r\n  selectors: {\r\n    ofOldHover: '.sc-element',\r\n  },\r\n  eventNames: {\r\n    onInit: 'toolbar-init',\r\n  },\r\n};\r\n","/**\r\n * @internal\r\n */\r\nexport const Debug = {\r\n    cms: {\r\n        autoDump: false,\r\n        run: true,\r\n    },\r\n};\r\n","/**\r\n * Helper object to read url params. \r\n * Available on `$2sxc.urlParams`\r\n */\r\nexport class UrlParams {\r\n    /**\r\n     * Get a param from the url, no matter if it's behind ? or #\r\n     * If not found, will return an empty string `''`\r\n     * @param {string} name\r\n     * @memberof QueryParams\r\n     */\r\n    get(name: string) {\r\n        // warning: this method is duplicated in 2 places - keep them in sync.\r\n        // locations are eav and 2sxc4ng\r\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n        const searchRx = new RegExp('[\\\\?&]' + name + '=([^&#]*)', 'i');\r\n        let results = searchRx.exec(location.search);\r\n        let strResult: string;\r\n\r\n        if (results === null) {\r\n            const hashRx = new RegExp('[#&]' + name + '=([^&#]*)', 'i');\r\n            results = hashRx.exec(location.hash);\r\n        }\r\n\r\n        // if nothing found, try normal URL because DNN places parameters in /key/value notation\r\n        if (results === null) {\r\n            // Otherwise try parts of the URL\r\n            const matches = window.location.pathname.match(new RegExp('/' + name + '/([^/]+)', 'i'));\r\n\r\n            // Check if we found anything, if we do find it, we must reverse the\r\n            // results so we get the \"last\" one in case there are multiple hits\r\n            if (matches && matches.length > 1)\r\n                strResult = matches.reverse()[0];\r\n        } else\r\n            strResult = results[1];\r\n\r\n        return strResult === null || strResult === undefined\r\n            ? ''\r\n            : decodeURIComponent(strResult.replace(/\\+/g, ' '));\r\n    }\r\n\r\n    /**\r\n     * Get a required param from the url, no matter if it's behind ? or #\r\n     * Will throw an error if not found\r\n     * @param {string} name\r\n     * @memberof QueryParams\r\n     */\r\n    require(name: string) {\r\n        const found = this.get(name);\r\n        if (found === '') {\r\n            const message = `Required parameter (${name}) missing from url - cannot continue`;\r\n            alert(message);\r\n            throw message;\r\n        }\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * Checks if debug is enabled in the URL\r\n     * @returns \r\n     */\r\n    isDebug(): boolean {\r\n        return this.get('debug')?.toLocaleLowerCase() === 'true'\r\n    }\r\n}\r\n","\r\n/**\r\n * This is a placeholder in the settings, which must be replaced with \"2sxc\" or another term for other dnn extensions\r\n * @internal\r\n */\r\nexport const ApiExtensionPlaceholder = 'e.x.t';\r\n\r\n/**\r\n * The special header meta tag containing settings for 2sxc\r\n * @internal\r\n */\r\nexport const MetaHeaderJsApi = '_jsApi';\r\n\r\n/**\r\n * The fallback path to the UI\r\n * @internal\r\n */\r\nexport const DnnUiRoot = '/desktopmodules/tosic_sexycontent/';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const PlatformOqtane = 'oqtane';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const PlatformDnn = 'dnn';\r\n\r\n/**\r\n * The fallback AntiForgery token header name (as in Dnn)\r\n * @internal\r\n */\r\nexport const AntiForgeryTokenHeaderNameDnn = 'RequestVerificationToken';\r\n","/** @internal */\r\nexport class TotalPopup {\r\n    frame: any = undefined;\r\n    callback: any = undefined;\r\n\r\n    open(url: string, callback: () => void): void {\r\n        // count parents to see how high the z-index needs to be\r\n        let z = 10000010; // Needs at least 10000000 to be on top of the DNN9 bar\r\n        let p = window as Window;\r\n        while (p !== window.top && z < 10000100) {\r\n            z++;\r\n            p = p.parent;\r\n        }\r\n\r\n        const wrapper = document.createElement('div');\r\n        wrapper.setAttribute('style', ' top: 0;left: 0;width: 100%;height: 100%; position:fixed; z-index:' + z);\r\n        document.body.appendChild(wrapper);\r\n\r\n        const ifrm = document.createElement('iframe');\r\n        ifrm.setAttribute('allowtransparency', 'true');\r\n        ifrm.setAttribute('style', 'top: 0;left: 0;width: 100%;height: 100%;');\r\n        ifrm.setAttribute('src', url);\r\n        wrapper.appendChild(ifrm);\r\n        document.body.className += ' sxc-popup-open';\r\n        this.frame = ifrm;\r\n        this.callback = callback;\r\n    }\r\n\r\n    close(): void {\r\n        if (this.frame) {\r\n            document.body.className = document.body.className.replace('sxc-popup-open', '');\r\n            const frm = this.frame;\r\n            frm.parentNode.parentNode.removeChild(frm.parentNode);\r\n            this.callback();\r\n        }\r\n    }\r\n\r\n    closeThis(): void {\r\n        (window.parent as any).$2sxc.totalPopup.close();\r\n    }\r\n\r\n}\r\n","import { Environment } from '.';\r\nimport { HasLog, NoJQ } from '../../../core';\r\nimport { EnvironmentSpecs } from '..';\r\nimport { AntiForgeryTokenHeaderNameDnn, DnnUiRoot, PlatformDnn } from '../constants';\r\n\r\nconst helpAutoDetect = 'You must either include jQuery on the page or inject the jsApi parameters to prevent auto-detection.';\r\ndeclare const window: Window;\r\n\r\n/**\r\n * This helps load environment information from DNN ServicesFramework - it's a fallback in case the other mechanisms fail\r\n * @internal\r\n */\r\nexport class EnvironmentDnnSfLoader extends HasLog {\r\n    constructor(public env: Environment) {\r\n        super('Env.DnnLdr', env.log);\r\n    }\r\n\r\n\r\n    /**\r\n     * This will assume the new parameter injection failed and it will attempt to fallback\r\n     * it's for backward compatibility, in case something is using $2sxc and doesn't provide the new\r\n     * implementation\r\n     */\r\n    dnnSfFallback(): void {\r\n        const cl = this.log.call('dnnSfFallback');\r\n        // await page-ready to then initialize the stuff\r\n        NoJQ.ready(() => this.dnnSfLoadWhenDocumentReady());\r\n        cl.done('started dom-ready watcher')\r\n    }\r\n\r\n    private dnnSfLoadWhenDocumentReady(): void {\r\n        const cl = this.log.call('dnnSfLoadWhenDocumentReady');\r\n        if (typeof window.$ === 'undefined') {\r\n            cl.done('error');\r\n            throw `Can't load pageid, moduleid, etc. and $ is not available. \\n ${helpAutoDetect}`;\r\n        }\r\n\r\n        const sf = window.$.ServicesFramework;\r\n        if (typeof sf === 'undefined') {\r\n            cl.done('error');\r\n            throw `Can't load pageid, moduleid etc. and DNN SF is not available. \\n ${helpAutoDetect}`;\r\n        }\r\n        const dnnSf = sf(0);\r\n        var apiRoot = dnnSf.getServiceRoot('2sxc');\r\n        var sfJsInfo: EnvironmentSpecs = {\r\n            page: dnnSf.getTabId(),\r\n            root: 'unknown',\r\n            api: apiRoot,\r\n            appApi: apiRoot,\r\n            rvtHeader: AntiForgeryTokenHeaderNameDnn,\r\n            rvt: dnnSf.getAntiForgeryValue(),\r\n            uiRoot: DnnUiRoot,\r\n            platform: PlatformDnn,\r\n        };\r\n        this.env.load(sfJsInfo, 'dnn SF');\r\n        cl.done();\r\n    }\r\n}\r\n","import { EnvironmentSpecs } from '..';\r\nimport { Log } from '../../../core';\r\nimport { EnvironmentMetaLoader } from './env-loader-meta';\r\n\r\nconst InputValue = 'value';\r\n\r\nconst SelectorInputRvt = `input[name=__RequestVerificationToken]`;\r\n\r\n/**\r\n * Special loader for dynamic pages like Oqtane, where content can change at runtime\r\n * @internal\r\n */\r\nexport class EnvironmentLoaderDynamic {\r\n\r\n  public log: Log;\r\n\r\n  constructor(\r\n      private mainLoader: EnvironmentMetaLoader\r\n  ) {\r\n    this.log = new Log('ldr.dynmic', mainLoader.log);\r\n  }\r\n\r\n  /**\r\n   * Watch for changes in our special meta header, to update the variables.\r\n   * Important for Oqtane, which changes the page on the fly without reloading.\r\n   */\r\n  public startMetaTagObserver(attribute: string): void {\r\n    if (!!this.observer) return;\r\n    this.observer = new MutationObserver((mutationsList: MutationRecord[]) => {\r\n      for(const mut of mutationsList)\r\n        if (mut.type === 'attributes' && mut.attributeName === attribute)\r\n          this.mainLoader.updateEnv(JSON.parse(this.mainLoader.getMetaContent()) as EnvironmentSpecs)\r\n    });\r\n    this.log.add('start observing meta tag');\r\n    this.observer.observe(this.mainLoader.getJsApiMetaTag(), { attributes: true, childList: false, subtree: false });\r\n  }\r\n  private observer: MutationObserver;\r\n\r\n  /**\r\n   * Load RequestVerificationToken from the hidden form-field in Oqtane\r\n   */\r\n  public startInputRvtObserver(): void {\r\n    if (!!this.inputRvtObserver) return;\r\n    this.inputRvtObserver = new MutationObserver((mutationsList: MutationRecord[]) => {\r\n      for(const mut of mutationsList)\r\n        if (mut.type === 'attributes' && mut.attributeName === InputValue)\r\n          this.loadRvtFromHiddenInput(mut.target as HTMLInputElement);\r\n    });\r\n    this.log.add('start observing Rvt Input');\r\n    const hiddenField = document.querySelector(SelectorInputRvt);\r\n    this.loadRvtFromHiddenInput(hiddenField as HTMLInputElement);\r\n    this.inputRvtObserver.observe(hiddenField, { attributes: true, childList: false, subtree: false });\r\n  }\r\n  private inputRvtObserver: MutationObserver;\r\n\r\n  private loadRvtFromHiddenInput(input: HTMLInputElement){\r\n    this.log.add('Input Rvt updated');\r\n    if(input && input.value)\r\n      this.mainLoader.env.updateRvt(input.value);\r\n  }\r\n}\r\n","import { EnvironmentSpecs } from '..';\r\nimport { Environment } from '.';\r\nimport { EnvironmentDnnSfLoader } from './env-loader-dnn-sf';\r\nimport { MetaHeaderJsApi, PlatformOqtane } from '../constants';\r\nimport { HasLog, Log } from '../../../core';\r\nimport { EnvironmentLoaderDynamic } from './env-loader-dynamic';\r\n\r\n// temp: usually 10, but because Oqtane has some delays, we'll temporarily increase to 100 till we're safe\r\nconst maxRetries = 100;\r\nconst retryMs = 10;\r\n\r\nconst MetaSourceId = 'meta header';\r\n\r\nconst MetaProperty = 'content';\r\n\r\n\r\nfunction logTest(): boolean\r\n{\r\n    console.log('test');\r\n    return true;\r\n}\r\n/**\r\n * This loads environment information from the meta-header tag.\r\n * Because of timing issues, it will try multiple times\r\n * @internal\r\n */\r\nexport class EnvironmentMetaLoader extends HasLog {\r\n    public retries = 0;\r\n\r\n    public log: Log;\r\n\r\n    private dynamicPageHelper: EnvironmentLoaderDynamic;\r\n\r\n    constructor(public env: Environment) {\r\n        super('Env.MetaLd', logTest ? env.log : env.log);\r\n        this.dynamicPageHelper = new EnvironmentLoaderDynamic(this);\r\n    }\r\n\r\n    public loadMetaFromHeader(forceFallback = false): void {\r\n        const cl = this.log.call('loadMetaFromHeader', `${forceFallback}`);\r\n        // avoid duplicate execution\r\n        if(this.env.ready) return cl.done('loadMeta - ready');\r\n\r\n        this.log.add('loadMetaFromHeader: start, retry:' + this.retries + ', force fallback: ' + forceFallback);\r\n        const meta = this.getMetaContent();\r\n        if(!meta) {\r\n            this.retries++;\r\n            if(forceFallback || this.retries >= maxRetries) {\r\n                new EnvironmentDnnSfLoader(this.env).dnnSfFallback();\r\n                return cl.done()\r\n            }\r\n            setTimeout(() => { this.loadMetaFromHeader(); }, retryMs);\r\n            return cl.done('will retry');\r\n        }\r\n        // Load the settings\r\n        this.updateEnv(JSON.parse(meta) as EnvironmentSpecs);\r\n\r\n        // monitor setting changes - important for Oqtane\r\n        this.dynamicPageHelper.startMetaTagObserver(MetaProperty);\r\n        cl.done();\r\n    }\r\n\r\n    public updateEnv(newJsInfo: EnvironmentSpecs) {\r\n        this.log.add('meta env info updated');\r\n        this.env.load(newJsInfo, MetaSourceId);\r\n        if(newJsInfo.platform === PlatformOqtane)\r\n            this.dynamicPageHelper.startInputRvtObserver();\r\n    }\r\n\r\n    public getMetaContent(): string {\r\n        const ourMeta = this.getJsApiMetaTag();\r\n        if (!ourMeta) return null;\r\n        return ourMeta.getAttribute(MetaProperty)\r\n    }\r\n\r\n    public getJsApiMetaTag() {\r\n        return document.querySelector(`meta[name=${MetaHeaderJsApi}]`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Watch for changes in our special meta header, to update the variables.\r\n     * Important for Oqtane, which changes the page on the fly without reloading.\r\n     */\r\n    public startMetaTagObserver(): void {\r\n      if (!!this.observer) return;\r\n      this.observer = new MutationObserver((mutationsList: MutationRecord[]) => {\r\n        for(const mut of mutationsList)\r\n          if (mut.type === 'attributes' && mut.attributeName === MetaProperty)\r\n            this.updateEnv(JSON.parse(this.getMetaContent()) as EnvironmentSpecs)\r\n      });\r\n      this.log.add('start observing meta tag');\r\n      this.observer.observe(this.getJsApiMetaTag(), { attributes: true, childList: false, subtree: false });\r\n    }\r\n    private observer: MutationObserver;\r\n\r\n}\r\n","import { Sxc, SxcWebApi } from '..';\r\nimport { NoJQ } from '../../../../core';\r\nimport { AjaxSettings } from './ajax-settings';\r\n\r\ndeclare const window: Window;\r\n\r\n/** @internal */\r\nexport class AjaxPromise {\r\n  constructor(private api: SxcWebApi, private sxc: Sxc) {\r\n  }\r\n\r\n  /**\r\n   * Make a jQuery style promise request\r\n   * @param {AjaxSettings} settings\r\n   * @returns {JQueryPromise<any>}\r\n   * @memberof AjaxPromise\r\n   */\r\n  public makePromise(settings: AjaxSettings): JQueryPromise<any> {\r\n    var headers = this.api.headers();\r\n    // debugger;\r\n    if (window.$ == null) {\r\n      throw new Error('JQuery is now removed from 2sxc installation. Please use newer api like fetch or include JQuery in your project');\r\n    }\r\n    const promise = window.$.ajax({\r\n      async: true,\r\n      dataType: settings.dataType || 'json', // default is json if not specified\r\n      data: JSON.stringify(settings.data),\r\n      contentType: 'application/json',\r\n      type: settings.method,\r\n      url: this.getActionUrl(settings),\r\n      beforeSend(xhr: JQueryXHR) {\r\n        for (var key in headers)\r\n          if (headers.hasOwnProperty(key))\r\n            xhr.setRequestHeader(key, headers[key]);\r\n      },\r\n    }) as JQueryPromise<any>;\r\n\r\n    if (!settings.preventAutoFail)\r\n      promise.fail(this.sxc.showDetailedHttpError);\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  /**\r\n   * Generate the correct WebApi url\r\n   * @param settings the settings as they would be in jQuery\r\n   */\r\n  private getActionUrl(settings: AjaxSettings): string {\r\n    var url = settings.url || 'app/auto/api/' + settings.controller + '/' + settings.action;\r\n    // 2020-03-13 stop adding 2sxc endpoint-name, it's already happening in apiUrl so with this it happens 2x\r\n    // var endpoint = settings.endpoint || ToSxcName;\r\n    var base = this.sxc.root.http.apiUrl(url, settings.endpoint);\r\n    // let base = (settings.url)\r\n    //   ? this.sxc.root.http.apiUrl(settings.url) // this.sxc.resolveServiceUrl(settings.url)  // use url -> TODO: change this to use the new root.http.apiUrl\r\n    //   : env.apiRoot('2sxc')               // use controller/action\r\n    //     + 'app/auto/api/' + settings.controller + '/' + settings.action;\r\n\r\n    // if(settings.endpoint)\r\n    //     base = base.replace(env.apiRoot('2sxc'), \r\n    //         env.apiRoot(settings.endpoint));\r\n\r\n    return base + (!settings.params ? '' : ('?' + NoJQ.param(settings.params)));\r\n  }\r\n}\r\n","import { EnvironmentSpecs } from '..';\r\nimport { EnvironmentMetaLoader } from './env-loader-meta';\r\nimport { HasLog, Insights, SxcApiUrlRoot } from '../../../core';\r\nimport { AntiForgeryTokenHeaderNameDnn, DnnUiRoot, PlatformDnn } from '../constants';\r\n\r\ndeclare const _jsApi: EnvironmentSpecs;\r\n\r\n/**\r\n * Provides environment information to $2sxc - usually page-id, api-root and stuff like that\r\n */\r\nexport class Environment extends HasLog {\r\n    /** @internal */\r\n    private header: EnvironmentSpecs;\r\n    public ready = false;\r\n    public source = '';\r\n\r\n    /** @internal */\r\n    public metaLoader: EnvironmentMetaLoader;\r\n\r\n    /** @internal */\r\n    constructor() {\r\n        super('Environment', null, 'starting');\r\n        this.log.keepData = true;   // always keep here for clarity\r\n        Insights.add('system', 'environment', this.log);\r\n        this.metaLoader = new EnvironmentMetaLoader(this);\r\n\r\n        // check if a global variable was already set which we should use\r\n        if(typeof _jsApi !== typeof undefined) {\r\n            this.log.add('found _jsApi, will use');\r\n            this.load(_jsApi, 'global variable _jsApi');\r\n        } else {\r\n            this.log.add('will start initializing');\r\n            this.metaLoader.loadMetaFromHeader();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load a new jsInfo - must be public, as it's used in iframes where jquery is missing\r\n     * @param newJsInfo new info to load\r\n     */\r\n    public load(newJsInfo: EnvironmentSpecs, source?: string) {\r\n        const cl = this.log.call('load');\r\n        if(newJsInfo.root && !newJsInfo.api) {\r\n            cl.add('root provided, api missing, will auto-complete');\r\n            const addSlash = (newJsInfo.root.endsWith('/') ? '' : '/');\r\n            newJsInfo.api = `${newJsInfo.root}${addSlash}${SxcApiUrlRoot}`;\r\n        }\r\n        this.header = newJsInfo;\r\n\r\n        // in some cases the UpdateRvt may already have been called before\r\n        // in which case it's probably more relevant\r\n        // so we should set it again\r\n        if(this.replacedRvt) this.header.rvt = this.replacedRvt;\r\n\r\n        this.ready = true;\r\n        this.source = source || 'external/unknown' + (this.replacedRvt ? '+rvt': '');\r\n        cl.return(newJsInfo, 'loaded from ' + this.source);\r\n    }\r\n\r\n    /** @internal */\r\n    private replacedRvt: string;\r\n\r\n    /** @internal */\r\n    public updateRvt(newRvt: string) {\r\n        if(!newRvt) return;\r\n        this.replacedRvt = newRvt;\r\n        this.header.rvt = newRvt;\r\n    }\r\n\r\n    /**\r\n     * The API endpoint url from the environment\r\n     */\r\n    public api(): string {\r\n        this.ensureReadyOrThrow('api');\r\n        return this.header.api;\r\n    }\r\n\r\n    // WIP - may return undefined\r\n    /** @internal */\r\n    public appApi(): string {\r\n        // WIP - must get it to work without 'appApi' but only 'api' to ensure ...\r\n        this.ensureReadyOrThrow('appApi');\r\n        return this.header.appApi;\r\n    }\r\n\r\n    /**\r\n     * The current page ID\r\n     */\r\n    public page(): number {\r\n        this.ensureReadyOrThrow('page');\r\n        return this.header.page;\r\n    }\r\n\r\n    /**\r\n     * The request verification token header name\r\n     */\r\n    public rvtHeader(): string {\r\n        this.ensureReadyOrThrow('rvtHeader');\r\n        return this.header.rvtHeader || AntiForgeryTokenHeaderNameDnn;\r\n    }\r\n\r\n    /**\r\n     * The request verification token value\r\n     */\r\n    public rvt(): string {\r\n        this.ensureReadyOrThrow('rvt');\r\n        return this.header.rvt;\r\n    }\r\n\r\n    /**\r\n     * The uiRoot path\r\n     * @internal\r\n     */\r\n    public uiRoot(): string {\r\n        this.ensureReadyOrThrow('uiRoot');\r\n        return this.header.uiRoot || DnnUiRoot;\r\n    }\r\n\r\n    /**\r\n     * The platform code like 'oqt' or 'dnn' in case the JS needs to know the difference\r\n     */\r\n    public platform(): string {\r\n        this.ensureReadyOrThrow('platform');\r\n        return this.header.platform || PlatformDnn;\r\n    }\r\n\r\n    /** @internal */\r\n    private ensureReadyOrThrow(partRequested: string): void {\r\n        if(this.ready) return;\r\n\r\n        // try one last time - usually it should really be ready by now\r\n        this.log.add('ensureReady - force last attempt to load MetaHeader for ' + partRequested)\r\n        this.metaLoader.loadMetaFromHeader(true);\r\n\r\n        // if still not ready, throw exception to console log\r\n        if(this.ready) return;\r\n        throw `Can't find ${partRequested} - something went wrong, pls contact 2sxc.org`;\r\n    }\r\n\r\n}\r\n\r\n","import { Sxc } from '../sxc';\r\nimport { AjaxPromise } from './ajax-promise';\r\nimport { Environment } from '../../environment';\r\nimport { AjaxSettings } from './ajax-settings';\r\nimport { NoJQ } from '../../../../core';\r\n\r\n/**\r\n * helper API to run ajax / REST calls to the server\r\n * it will ensure that the headers etc. are set correctly\r\n * and that urls are rewritten\r\n */\r\nexport class SxcWebApi {\r\n    /**\r\n     * @type {Environment}\r\n     * @memberof SxcWebApi\r\n     * @internal\r\n     */\r\n    public readonly env: Environment;\r\n\r\n    /**\r\n     * \r\n     * @param sxc \r\n     * @internal\r\n     */\r\n    constructor(private readonly sxc: Sxc) {\r\n        this.env = sxc.root.env;\r\n    }\r\n\r\n    /**\r\n     * **Deprecated** \r\n     * Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson) \r\n     * or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.\r\n     * \r\n     * Returns an http-get promise using jQuery\r\n     * @param settingsOrUrl the url to get\r\n     * @param params jQuery style ajax parameters\r\n     * @param data jQuery style data for post/put requests\r\n     * @param preventAutoFail\r\n     * @returns jQuery ajax promise object\r\n     * @deprecated use fetchJson instead\r\n     */\r\n    get(settingsOrUrl: string | AjaxSettings, params?: any, data?: any, preventAutoFail?: boolean): JQueryPromise<any> {\r\n        return this.request(settingsOrUrl, params, data, preventAutoFail, 'GET');\r\n    }\r\n\r\n    /**\r\n     * **Deprecated** \r\n     * Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson) \r\n     * or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.\r\n     * \r\n     * Returns an http-post promise using jQuery\r\n     * @param settingsOrUrl the url to get\r\n     * @param params jQuery style ajax parameters\r\n     * @param data jQuery style data for post/put requests\r\n     * @param preventAutoFail\r\n     * @returns jQuery ajax promise object\r\n     * @deprecated use fetchJson instead\r\n     */\r\n    post(settingsOrUrl: string | AjaxSettings, params?: any, data?: any, preventAutoFail?: boolean): JQueryPromise<any> {\r\n        return this.request(settingsOrUrl, params, data, preventAutoFail, 'POST');\r\n    }\r\n\r\n    /**\r\n     * **Deprecated** \r\n     * Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson) \r\n     * or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.\r\n     * \r\n     * Returns an http-delete promise using jQuery\r\n     * @param settingsOrUrl the url to talk to\r\n     * @param params jQuery style ajax parameters\r\n     * @param data jQuery style data for post/put requests\r\n     * @param preventAutoFail\r\n     * @returns jQuery ajax promise object\r\n     * @deprecated use fetchJson instead\r\n     */\r\n    delete(settingsOrUrl: string | AjaxSettings, params?: any, data?: any, preventAutoFail?: boolean): JQueryPromise<any> {\r\n        return this.request(settingsOrUrl, params, data, preventAutoFail, 'DELETE');\r\n    }\r\n\r\n    /**\r\n     * **Deprecated** \r\n     * Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson) \r\n     * or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.\r\n     * \r\n     * Returns an http-put promise using jQuery\r\n     * @param settingsOrUrl the url to put\r\n     * @param params jQuery style ajax parameters\r\n     * @param data jQuery style data for post/put requests\r\n     * @param preventAutoFail\r\n     * @returns jQuery ajax promise object\r\n     * @deprecated use fetchJson instead\r\n     */\r\n    put(settingsOrUrl: string | AjaxSettings, params?: any, data?: any, preventAutoFail?: boolean): JQueryPromise<any> {\r\n        return this.request(settingsOrUrl, params, data, preventAutoFail, 'PUT');\r\n    }\r\n\r\n    /**\r\n     * **Deprecated** \r\n     * Please use [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchJson) \r\n     * or [fetchJson()](xref:Api.Js.InPage.SxcWebApi.fetchRaw) instead.\r\n     * \r\n     * Generic http request using jQuery\r\n     * @param settingsOrUrl the url to get\r\n     * @param params jQuery style ajax parameters\r\n     * @param data jQuery style data for post/put requests\r\n     * @param preventAutoFail\r\n     * @param method the http verb name\r\n     * @returns jQuery ajax promise object\r\n     * @deprecated use fetchJson instead\r\n     */\r\n    request(settings: string | AjaxSettings, params: any, data: any, preventAutoFail: boolean, method: string): JQueryPromise<any> {\r\n\r\n        // url parameter: auto convert a single value (instead of object of values) to an id=... parameter\r\n        // tslint:disable-next-line:curly\r\n        if (typeof params !== 'object' && typeof params !== 'undefined')\r\n            params = { id: params };\r\n\r\n        // if the first parameter is a string, resolve settings\r\n        if (typeof settings === 'string') {\r\n            const controllerAction = settings.split('/');\r\n            const controllerName = controllerAction[0];\r\n            const actionName = controllerAction[1];\r\n\r\n            if (controllerName === '' || actionName === '')\r\n                console.warn('Error: controller or action not defined. Will continue with likely errors.');\r\n\r\n            settings = {\r\n                controller: controllerName,\r\n                action: actionName,\r\n                params,\r\n                data,\r\n                url: controllerAction.length > 2 ? settings : null,\r\n                preventAutoFail,\r\n            };\r\n        }\r\n\r\n        const defaults = {\r\n            method: method === null ? 'POST' : method,\r\n            params: null as any,\r\n            preventAutoFail: false,\r\n        };\r\n        // new 10.25\r\n        var http = new AjaxPromise(this, this.sxc);\r\n\r\n        settings = Object.assign({}, defaults, settings);\r\n\r\n        const promise = http.makePromise(settings as AjaxSettings);\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Will retrieve data from the backend using a standard fetch. \r\n     * @param url a full url or short-hand like `controller/method?params` `app/auto/api/controller/method?params`. Note that params would also be specified on the url. \r\n     * @param data optional POST data\r\n     * @param method optional method, defaults to `GET` unless it has data, in which case it defaults to `POST`\r\n     * @returns a Promise containing a Response object, just like a normal fetch would. \r\n     * example: webApi.fetchRaw('Rss/Feed');\r\n     * example: webApi.fetchRaw(webApi.url('Rss/Feed', { id: 47 })); // url params\r\n     * example: webApi.fetchRaw('Rss/Feed', { id: 47 }); // post params\r\n     * example: webApi.fetchRaw(webApi.url('Rss/Feed', { id: 47 }), { something: 'this is a test' }); // url & post params\r\n     * maybe: webApi.fetchRaw({url: 'Rss/Feed', params: { id: 47 }})\r\n     * maybe: webApi.fetchRaw({url: ..., params: { ...}, body: { ...}, method: 'GET' })\r\n     */\r\n    fetchRaw(url: string, data?: string | Record<string, any>, method?: string): Promise<Response> {\r\n        const ctxParams = {} as { appId?: number; zoneId?: number; };\r\n        const ctx = this.sxc.ctx;\r\n        const urlLower = url.toLocaleLowerCase();\r\n        if (ctx?._ignoreHeaders && urlLower.includes('app/auto/')) {\r\n            if (ctx?.appId && !urlLower.includes('appid=')) ctxParams.appId = ctx.appId;\r\n            if (ctx?.zoneId && !urlLower.includes('zoneId=')) ctxParams.zoneId = ctx.zoneId;\r\n        }\r\n        url = this.url(url, ctxParams);\r\n        method = method || (data ? 'POST' : 'GET');\r\n        const headers = this.headers(method);\r\n\r\n        if (data) {\r\n            // test if data is a json. If it's not, convert it to json\r\n            try {\r\n                JSON.parse(data as string);\r\n            } catch {\r\n                data = JSON.stringify(data);\r\n            }\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            method,\r\n            ...(data && { body: data as string }),\r\n        });\r\n    }\r\n\r\n    // Note: fetch was documented in v12.10 (December 2021) but will probably never be used externally\r\n    // So we rename it to fetchRaw and later will make fetch just be the json implementation.\r\n    // Renamed and added this warning in 13.04 (2022-03-14), will drop in v14 and probably make it do fetchJson by default\r\n    // Changed functionality in 13.10 (2022-05-04) to make it do fetchJson by default\r\n    // Changed functionality back in 13.11 (2022-05-10) because it seems that Mobius was published using fetch\r\n    // Important: Do not document in the docs, as it shouldn't be used\r\n    /** @internal */\r\n    fetch(url: string, data?: string | Record<string, any>, method?: string): Promise<Response> {\r\n        console.warn(`You are calling 'fetch' on the sxc.webApi. This is deprecated will stop in 2sxc v15, please use fetchRaw(...) or fetchJson(...) instead.`)\r\n        return this.fetchJson(url, data, method);\r\n    }\r\n\r\n    /**\r\n     * Will retrieve data from the backend using a standard fetch and give you an object. \r\n     * @param url a full url or short-hand like `controller/method?params` `app/auto/api/controller/method?params`. Note that params would also be specified on the url. \r\n     * @param data optional POST data\r\n     * @param method optional method, defaults to `GET` unless it has data, in which case it defaults to `POST`\r\n     * @returns a Promise containing any object.\r\n     */\r\n    fetchJson<T = any>(url: string, data?: string | Record<string, any>, method?: string): Promise<T> {\r\n        return this.fetchRaw(url, data, method).then(response => response.json());\r\n    }\r\n\r\n    /**\r\n     * All the headers which are needed in an ajax call for this to work reliably.\r\n     * Use this if you need to get a list of headers in another system\r\n     */\r\n    headers(method?: string): Record<string, string> {\r\n        const headers = this.sxc.root.http.headers(this.sxc.id, this.sxc.cbid, this.sxc.ctx);\r\n        if (!method) {\r\n            return headers;\r\n        }\r\n\r\n        switch (method.toLocaleUpperCase()) {\r\n            case 'GET':\r\n                headers['Accept'] = 'application/json';\r\n                break;\r\n            default:\r\n                headers['Accept'] = 'application/json';\r\n                headers['Content-Type'] = 'application/json';\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param url A short, medium or long url. \r\n     * Short like `controller/method`, \r\n     * medium like `app/auto/api/controller/method`\r\n     * long like `https://xyz.\r\n     * In all cases it can also have ?params etc.\r\n     * @param params Optional parameters as string or object, will be added to url-params. \r\n     * @returns In the cases of a short/medium url, \r\n     * it will auto-expand to have the full url as needed for an API call. \r\n     */\r\n    url(url: string, params?: string | Record<string, any>): string {\r\n        if (url == null) return url;\r\n\r\n        const urlAndParams = url.split('#')[0].split('?');\r\n\r\n        // url fixes\r\n        url = urlAndParams[0];\r\n        const urlParts = url.split('/');\r\n        if (urlParts.length === 2 && urlParts[0] && urlParts[1]) {\r\n            const controller = urlParts[0];\r\n            const action = urlParts[1];\r\n            url = `app/auto/api/${controller}/${action}`;\r\n        }\r\n        url = this.sxc.root.http.apiUrl(url);\r\n\r\n        // params fixes\r\n        params = `${urlAndParams[1] || ''}&${params ? typeof params === 'string' ? params : NoJQ.param(params) : ''}`\r\n            .split('&')\r\n            .filter(p => !!p)\r\n            .join('&');\r\n\r\n        // result\r\n        url = [url, params].filter(p => !!p).join('?');\r\n        return url;\r\n    }\r\n}\r\n","import { Sxc } from '..';\r\n\r\n/**\r\n* Base class for anything attached to an sxc-instance\r\n* @internal\r\n*/\r\nexport class SxcPart {\r\n  /**\r\n  * Creates an instance of SxcData.\r\n  * @param {Sxc} sxc\r\n  * @param {string} partName name of the part\r\n  * @memberof SxcData\r\n  */\r\n  constructor(public sxc: Sxc, public partName: string) {\r\n      \r\n  }\r\n\r\n}\r\n  ","import { Sxc } from '..';\r\nimport { SxcPart } from '../sxc-part';\r\nimport { SxcWebApi } from '../web-api/sxc-web-api';\r\n\r\n/**\r\n* Base class doing common checks\r\n* @internal\r\n*/\r\nexport class SxcDataServiceBase extends SxcPart {\r\n  protected readonly webApi: SxcWebApi;\r\n  /**\r\n  * Creates an instance of SxcData.\r\n  * @param {Sxc} sxc\r\n  * @param {string} name the content-type name\r\n  * @memberof SxcData\r\n  */\r\n  constructor(\r\n    sxc: Sxc,\r\n    readonly name: string,\r\n    nameInError: string\r\n  ) {\r\n    super(sxc, 'data');\r\n    this.webApi = sxc.webApi;\r\n    \r\n    // Fail early if something is wrong\r\n    nameInError += ' name ';\r\n    if (name == null) throw nameInError + 'is empty';\r\n    if (name.indexOf(\"/\") != -1 || name.indexOf(\"\\\\\") != -1) throw nameInError + 'has slashes - not allowed';\r\n    if (name.indexOf(\"?\") != -1) throw nameInError + 'has \"?\" - not allowed';\r\n  }\r\n\r\n}\r\n  ","import { Sxc } from '..';\r\nimport { TargetTypes } from '../../data';\r\nimport { MetadataFor } from '../../data/metadata-for';\r\nimport { SxcDataServiceBase } from './sxc-data-service-base';\r\n\r\nconst ContentApiRoot = 'app/auto/data';\r\n\r\n/**\r\n* Data Service for an App / Sxc-Instance to get/create data of a specific Content-Type\r\n*/\r\nexport class SxcData<T = unknown> extends SxcDataServiceBase {\r\n  /**\r\n  * Creates an instance of SxcData.\r\n  * @param {Sxc} sxc\r\n  * @param {string} name the content-type name\r\n  * @memberof SxcData\r\n  * @internal\r\n  */\r\n  constructor(sxc: Sxc, readonly name: string) {\r\n    super(sxc, name, 'ContentType');\r\n  }\r\n\r\n  /**\r\n   * Get all items of this type.\r\n   */\r\n  getAll(): Promise<T[]> {\r\n    return this.getInternal<T[]>();\r\n  }\r\n\r\n  /**\r\n   * Get the specific item with the ID. It will return null if not found\r\n   */\r\n  getOne(id: number): Promise<T> | null {\r\n    return this.getInternal<T>(id);\r\n  };\r\n\r\n  /** Future\r\n   *  @internal \r\n   */\r\n  private getMany(criteria: Record<string, unknown>, fields: Array<string>): Promise<T[]> {\r\n    throw 'not implemented - probably v13.5 or something';\r\n  }\r\n\r\n\r\n  /**\r\n   * Get all or one data entity from the backend\r\n   * @param id optional id as number or string - if not provided, will get all\r\n   * @param params optional parameters - ATM not usefuly but we plan to support more filters etc. \r\n   * @returns an array with 1 or n entities in the simple JSON format\r\n   * @internal\r\n   */\r\n  private getInternal<TCall>(id?: string | number, params?: string | Record<string, unknown>): Promise<TCall> {\r\n    let path = `${ContentApiRoot}/${this.name}`;\r\n    if (id && (typeof id === 'string' || typeof id === 'number')) path += \"/\" + id;\r\n    return this.webApi.fetchJson(this.webApi.url(path, params));\r\n  }\r\n\r\n  /**\r\n   * Create a new entity with the values supplied\r\n   * @param values a simple object containing the values to create\r\n   */\r\n  create(values: Record<string, unknown>): Promise<Record<string, unknown>>;\r\n\r\n  /**\r\n   * Create a new entity with the values supplied and also a metadata-for reference\r\n   * @param values a simple object containing the values to create\r\n   */\r\n  create(values: Record<string, unknown>, metadataFor: MetadataFor | string): Promise<Record<string, unknown>>;\r\n\r\n  /** @internal */\r\n  create(values: Record<string, unknown>, metadataFor?: MetadataFor | string): Promise<Record<string, unknown>> {\r\n    const path = `${ContentApiRoot}/${this.name}`;\r\n    if (metadataFor != null) {\r\n      if (typeof(metadataFor) === 'string')\r\n        metadataFor = { Target: TargetTypes.Entity, Guid: metadataFor } as MetadataFor;\r\n      try {\r\n        values.For = metadataFor;\r\n      } catch { }\r\n    }\r\n    return this.webApi.fetchJson(this.webApi.url(path), values, 'POST');\r\n  }\r\n\r\n  /**\r\n   * Update an existing entity with the values supplied\r\n   */\r\n  update(id: number, values: Record<string, unknown>): Promise<Record<string, unknown>> {\r\n    const path = `${ContentApiRoot}/${this.name}/${id}`;\r\n    return this.webApi.fetchJson(this.webApi.url(path), values, 'POST');\r\n  }\r\n\r\n  /**\r\n   * Delete an entity\r\n   * @param id id of the item to delete\r\n   */\r\n  delete(id: number): Promise<null>;\r\n\r\n  /**\r\n   * Delete an entity\r\n   * @param guid GUID of the item to delete\r\n   */\r\n  delete(guid: string): Promise<null>;\r\n\r\n  /** @internal */\r\n  delete(idOrGuid: number | string): Promise<null> {\r\n    const path = `${ContentApiRoot}/${this.name}/${idOrGuid}`;\r\n    return this.webApi.fetchRaw(this.webApi.url(path), undefined, 'DELETE').then(response => null);\r\n  }\r\n}\r\n\r\n","import { Sxc } from '..';\r\nimport { SxcDataServiceBase } from './sxc-data-service-base';\r\n\r\n/**\r\n * Instance Query Service\r\n */\r\nexport class SxcQuery extends SxcDataServiceBase {\r\n\r\n  /**\r\n   * Creates an instance of SxcQuery.\r\n   * @param {Sxc} sxc\r\n   * @param {string} name\r\n   * @memberof SxcQuery\r\n   * @internal\r\n   */\r\n  constructor(sxc: Sxc, readonly name: string) {\r\n    super(sxc, name, 'Query');\r\n  }\r\n\r\n  getAll<T = unknown>(): Promise<T>;\r\n  getAll<T = unknown>(urlParams: string | Record<string, unknown>): Promise<T>;\r\n  getAll<T = unknown>(urlParams: string | Record<string, unknown>, data: string | Record<string, unknown>): Promise<T>;\r\n  /**\r\n   * Retrieve the entire query with all streams\r\n   *\r\n   * @template T\r\n   * @returns {Promise<T>} containing a object with stream-names and items in the streams.\r\n   * @memberof SxcQuery\r\n   */\r\n  getAll<T = unknown>(urlParams?: string | Record<string, unknown>, data?: string | Record<string, unknown>): Promise<T> {\r\n    return this.getInternal<T>(undefined, urlParams, data);\r\n  }\r\n\r\n  /**\r\n   * Get just one stream, returning an array of items in that stream\r\n   *\r\n   * @template T\r\n   * @param {string} stream\r\n   * @returns {Promise<T[]>} containing an array of items - or empty if stream not found or nothing returned\r\n   * @memberof SxcQuery\r\n   */\r\n  getStream<T = unknown>(stream: string): Promise<T[]>;\r\n  getStream<T = unknown>(stream: string, urlParams: string | Record<string, unknown>): Promise<T[]>;\r\n  getStream<T = unknown>(stream: string, urlParams: string | Record<string, unknown>, data: string | Record<string, unknown>): Promise<T[]>;\r\n  \r\n  getStream<T = unknown>(stream: string, urlParams?: string | Record<string, unknown>, data?: string | Record<string, unknown>): Promise<T[]> {\r\n    if (stream.indexOf(',') !== -1) throw \"parameter 'stream' can only contain one stream name for 'getStream'\";\r\n    return this.getInternal<unknown>(stream, urlParams, data).then((data) => {\r\n      if (data == null || !data.hasOwnProperty(stream)) return [];\r\n      return (data as any)[stream] as T[];\r\n    })\r\n  }\r\n\r\n  getStreams<T = unknown>(streams: string): Promise<T>;\r\n  getStreams<T = unknown>(streams: string, urlParams: string | Record<string, unknown>): Promise<T>;\r\n  getStreams<T = unknown>(streams: string, urlParams: string | Record<string, unknown>, data: string | Record<string, unknown>): Promise<T>;\r\n  /**\r\n   * Get a query but only the selected streams.\r\n   *\r\n   * @template T\r\n   * @param {string} streams\r\n   * @returns {Promise<T>} containing a object with stream-names and items in the streams.\r\n   * @memberof SxcQuery\r\n   */\r\n  getStreams<T = unknown>(streams: string, urlParams?: string | Record<string, unknown>, data?: string | Record<string, unknown>): Promise<T> {\r\n    return this.getInternal<T>(streams, urlParams, data);\r\n  }\r\n\r\n  /**\r\n   * Get all or one data entity from the backend\r\n   * @param id optional id as number or string - if not provided, will get all\r\n   * @param params optional parameters - ATM not usefuly but we plan to support more filters etc. \r\n   * @returns an array with 1 or n entities in the simple JSON format\r\n   * @internal\r\n   */\r\n  private getInternal<T = unknown>(streams?: string, params?: string | Record<string, any>, data?: string | Record<string, unknown>): Promise<T> {\r\n    let path = \"app/auto/query/\" + this.name;\r\n    if (streams && (typeof streams === 'string')) path += \"?stream=\" + streams;\r\n    return this.webApi.fetchJson(this.webApi.url(path, params), data);\r\n  }\r\n}\r\n","import { SxcPart } from './sxc-part';\r\n\r\n/**\r\n * This is in charge of sxc.cms on the instance level.\r\n * ATM it just has the run command.\r\n * In future, it may also have dedicated command like `layout` etc.\r\n * @internal\r\n */\r\nexport class SxcCms extends SxcPart {\r\n  /**\r\n   * Run a command on this sxc-instance. \r\n   * Requires the Cms parts to be loaded. \r\n   * @param runParams - real type is actually RunParams\r\n   */\r\n  run<T>(runParams: unknown): Promise<void | T> { \r\n    throw 'sxc instance cms.run() requires cms features \"2sxc.JsCms\" to be enabled to work';\r\n  }\r\n}\r\n","import { ContextIdentifier } from '../sxc-root/context-identifier';\r\nimport { SxcWebApi } from './web-api/sxc-web-api';\r\nimport { ApiUrlRoots, HasLog, ToSxcName } from '../../../core';\r\nimport { SxcManage } from './sxc-manage';\r\nimport { SxcData } from './data/sxc-data';\r\nimport { SxcQuery } from './data/sxc-query';\r\nimport { SxcCms } from './sxc-cms';\r\nimport { SxcGlobal } from '..';\r\n\r\n// const serviceScopes = ['app', 'app-sys', 'app-api', 'app-query', 'app-content', 'eav', 'view', 'dnn'];\r\n\r\n/**\r\n* The typical sxc-instance object for a specific DNN module or content-block\r\n*/\r\nexport class Sxc extends HasLog {\r\n  /** @internal */\r\n  private _isSxcInstance = true;\r\n\r\n\r\n  webApi: SxcWebApi;\r\n\r\n  /**\r\n   * manage object which provides access to additional content-management features\r\n   * it only exists if 2sxc is in edit mode (otherwise the JS are not included for these features)\r\n   * @memberof SxcInstance\r\n   * @internal\r\n   */\r\n  manage: SxcManage = null; // initialize correctly later on\r\n\r\n  /**\r\n   * CMS operations on this sxc-instance.\r\n   */\r\n  cms = new SxcCms(this, 'cms');\r\n  \r\n  /** @internal */\r\n  constructor(\r\n    /** the sxc-instance ID, which is usually the DNN Module Id */\r\n    public id: number,\r\n    /**\r\n     * content-block ID, which is either the module ID, or the content-block definition entity ID\r\n     * this is an advanced concept you usually don't care about, otherwise you should research it\r\n     */\r\n    public cbid: number,\r\n    /** \r\n     * the id/key of this instance in the cache for reset\r\n     * @internal\r\n     */\r\n    public cacheKey: string,\r\n    /** \r\n     * The environment information, important for http-calls \r\n     * @internal\r\n     */\r\n    public readonly root: SxcGlobal,\r\n    /** \r\n     * Custom context information provided by the constructor - will replace auto-context detection\r\n     * @internal\r\n     */\r\n    public ctx?: ContextIdentifier,\r\n  ) {\r\n    super('SxcInstance', null, 'Generating for ' + id + ':' + cbid);\r\n    this.webApi = new SxcWebApi(this);\r\n    \r\n    // add manage property, but not within initializer, because inside the manage-initializer it may reference 2sxc again\r\n    try { // sometimes the manage can't be built, like before installing\r\n      if (root._manage) root._manage.initInstance(this);\r\n    } catch (e) {\r\n      console.error('error in 2sxc - will only log but not throw', e);\r\n    }\r\n\r\n    // ensure that data-APIs used incorrectly shows good warnings\r\n    patchDataWithWarnings(this.data);\r\n    \r\n    // this only works when manage exists (not installing) and translator exists too\r\n    if (root._translateInit && this.manage)\r\n    // ensure that we really have a manage context, otherwise we can't initialize i18n and it doesn't make sense\r\n    if (this.manage.context && this.manage.context.app && this.manage.context.app.currentLanguage)\r\n    root._translateInit(this.manage);    // init translate, not really nice, but ok for now\r\n  }\r\n\r\n  /**\r\n   * TypeGuard for TypeScript to verify this is a SxcInstance\r\n   * @param thing \r\n   * @returns \r\n   */\r\n  public static is(thing: unknown): thing is Sxc {\r\n    const maybe = thing as Sxc;\r\n    return maybe._isSxcInstance;\r\n  }\r\n\r\n  /**\r\n   * Get a data service for a specific content-type.\r\n   *\r\n   * @param {string} contentType name of the content type which this service will get\r\n   * @returns SxcData<T>\r\n   * @memberof SxcInstance\r\n   */\r\n  data<T = unknown>(contentType: string) : SxcData<T> {\r\n    return new SxcData<T>(this, contentType);\r\n  }\r\n  \r\n  /**\r\n   * \r\n   * @param query \r\n   * @returns SxcQuery\r\n   * @memberof SxcInstance\r\n   */\r\n  query(query: string) : SxcQuery {\r\n    return new SxcQuery(this, query);\r\n  }\r\n    \r\n    \r\n  /**\r\n  * converts a short api-call path like \"/app/Blog/query/xyz\" to the DNN full path\r\n  * which varies from installation to installation like \"/desktopmodules/api/2sxc/app/...\"\r\n  * @deprecated use http.apiUrl instead\r\n  * @param virtualPath\r\n  * @returns mapped path\r\n  * @internal\r\n  */\r\n  resolveServiceUrl(virtualPath: string) {\r\n    const scope = virtualPath.split('/')[0].toLowerCase();\r\n    \r\n    // stop if it's not one of our special paths\r\n    if (ApiUrlRoots.indexOf(scope) === -1)\r\n    return virtualPath;\r\n    \r\n    return this.root.http.apiRoot(ToSxcName) + scope + '/' + virtualPath.substring(virtualPath.indexOf('/') + 1);\r\n  }\r\n    \r\n    \r\n  /**\r\n   * Show a nice error with more infos around 2sxc\r\n   * @param result \r\n   * @returns \r\n   * @internal\r\n   */\r\n  showDetailedHttpError(result: any): any {\r\n    if (window.console)\r\n    console.log(result);\r\n    \r\n    // check if the error was just because a language file couldn't be loaded - then don't show a message\r\n    if (result.status === 404 &&\r\n      result.config &&\r\n      result.config.url &&\r\n      result.config.url.indexOf('/dist/i18n/') > -1) {\r\n        if (window.console)\r\n        console.log('just fyi: failed to load language resource; will have to use default');\r\n        return result;\r\n    }\r\n      \r\n    // if it's an unspecified 0-error, it's probably not an error but a cancelled request,\r\n    // (happens when closing popups containing angularJS)\r\n    if (result.status === 0 || result.status === -1)\r\n    return result;\r\n    \r\n    // let's try to show good messages in most cases\r\n    let infoText = 'Had an error talking to the server (status ' + result.status + ').';\r\n    const srvResp = result.responseText\r\n    ? JSON.parse(result.responseText) // for jquery ajax errors\r\n    : result.data; // for angular $http\r\n    if (srvResp) {\r\n      const msg = srvResp.Message;\r\n      if (msg) infoText += '\\nMessage: ' + msg;\r\n      const msgDet = srvResp.MessageDetail || srvResp.ExceptionMessage;\r\n      if (msgDet) infoText += '\\nDetail: ' + msgDet;\r\n      \r\n      \r\n      if (msgDet && msgDet.indexOf('No action was found') === 0)\r\n      if (msgDet.indexOf('that matches the name') > 0)\r\n      infoText += '\\n\\nTip from 2sxc: you probably got the action-name wrong in your JS.';\r\n      else if (msgDet.indexOf('that matches the request.') > 0)\r\n      infoText += '\\n\\nTip from 2sxc: Seems like the parameters are the wrong amount or type.';\r\n      \r\n      if (msg && msg.indexOf('Controller') === 0 && msg.indexOf('not found') > 0)\r\n      infoText +=\r\n      // tslint:disable-next-line:max-line-length\r\n      \"\\n\\nTip from 2sxc: you probably spelled the controller name wrong or forgot to remove the word 'controller' from the call in JS. To call a controller called 'DemoController' only use 'Demo'.\";\r\n      \r\n    }\r\n    // tslint:disable-next-line:max-line-length\r\n    infoText += '\\n\\nif you are an advanced user you can learn more about what went wrong - discover how on 2sxc.org/help?tag=debug';\r\n    alert(infoText);\r\n    \r\n    return result;\r\n  }\r\n    \r\n  /**\r\n   * Test if the current code is in edit-mode and additional javascripts have been loaded to make it work\r\n   * @returns true if we are in edit-mode\r\n   */\r\n  isEditMode(): boolean {\r\n    return this.manage?._isEditMode() === true;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param resetCache \r\n   * @returns \r\n   * @internal\r\n   */\r\n  recreate(resetCache: boolean): Sxc {\r\n    if (resetCache) delete this.root._controllers[this.cacheKey]; // clear cache\r\n    return this.root(this.id, this.cbid) as any as Sxc; // generate new\r\n  }\r\n}\r\n\r\n// Help cach error on call of old code\r\n// Background: From v3 to v12 data had a unusualy system for retrieving data belonging to the module\r\n// We believe it's almost never used, but the TimelineJs App always used it, and we believe\r\n// 2-3 other examples may have as well. \r\n// Now in v13 sxc.data is used to get any kind of data,\r\n// and we want to make sure that old code will show a warning helping people fix this\r\n// All the old code would have started with sxc.data.on('load', ...) so this is where we give them the error\r\n// We only do this if it hasn't been done already\r\nfunction patchDataWithWarnings(data: any) {\r\n  if (!(data as any).on) {\r\n    (data as any).on = () => { throw warning };\r\n    Object.defineProperty(data, 'sourceUrl', {\r\n        get: function() { throw warning }\r\n    });\r\n  }\r\n}\r\n\r\nconst warning = 'Warning Obsolete Feature on 2sxc JS: the .data has been obsolete for a long time and is repurposed. \\n'\r\n+ 'If you are calling \".data.on(...)\" or \".data.sourceUrl\" you are running very old code. \\n' \r\n+ 'Guidance to fix this: https://r.2sxc.org/brc-13-id.';","/**\r\n * ContextIdentifier is used to initialize a Sxc object outside of the default context.\r\n */\r\nexport class ContextIdentifier {\r\n  /**\r\n   * ZoneId of this Context\r\n   * @requires zoneId\r\n   */\r\n  zoneId: number;\r\n\r\n  /**\r\n   * AppId of this Context\r\n   * @requires appId\r\n   */\r\n  appId: number;\r\n\r\n  /** \r\n   * PageId of this Context (optional)\r\n   * @optional\r\n   */\r\n  pageId?: number;\r\n\r\n  /**\r\n   * ModuleId of this Context (optional)\r\n   * @optional\r\n   */\r\n  moduleId?: number;\r\n\r\n  /**\r\n   * Exclude pageId and moduleId headers in web requests\r\n   * @internal\r\n   */\r\n  _ignoreHeaders?: boolean;\r\n\r\n  /**\r\n   * Marks the context as complete, so it won't merge in anything else \r\n   * WIP #CustomContext ATM for the updated edit-ui\r\n   * @internal\r\n   */\r\n  complete?: boolean;\r\n\r\n  /**\r\n   * WIP #CustomContext not really used yet\r\n   * @internal\r\n   */\r\n  blockId?: number;\r\n\r\n  /**\r\n   * Type Guard to determine if an object is a ContextIdentifier\r\n   * @param original \r\n   * @returns \r\n   * @internal\r\n   */\r\n  static is(original: unknown): original is ContextIdentifier {\r\n    const origAsContextId = original as ContextIdentifier;\r\n    return origAsContextId.zoneId !== undefined && origAsContextId.appId !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Internal\r\n   * @param ctx \r\n   * @internal\r\n   */\r\n  static ensureCompleteOrThrow(ctx: ContextIdentifier): ContextIdentifier {\r\n    // if it's fulfills the minimum requirements\r\n    if (ctx.zoneId && ctx.appId) return ctx; \r\n  \r\n    const msg = `It looks like the id given is a ContextIdentifier, but it's missing either zoneId or appId.`;\r\n    console.error(msg, ctx);\r\n    throw msg;\r\n  }\r\n  \r\n}\r\n","import { UrlParams } from '..';\r\n\r\nconst urlManager = new UrlParams();\r\nconst urlDebugState = urlManager.isDebug() === true;\r\n\r\n/** @internal */\r\nexport class Debug {\r\n    /**\r\n     * The load-debug state (provided by the url with debug=true)\r\n     */\r\n    load: boolean;\r\n\r\n    /**\r\n     * Cache breaker string, contans the version number of 2sxc if one is provided with sxcver=...\r\n     */\r\n    uncache: string;\r\n\r\n    constructor() {\r\n        this.load = urlDebugState;\r\n        this.uncache = urlManager.get('sxcver');\r\n    }\r\n}\r\n","import { ApiExtensionPlaceholder } from '../constants';\r\nimport { AppApiMarker, Dictionary, HasLog, HeaderNames, ToSxcName } from '../../../core';\r\nimport { ContextIdentifier, Environment } from '..';\r\n\r\n/**\r\n * Global HTTP Service for information and helpers.\r\n * Provided on on `$2sxc.http`\r\n */\r\nexport class HttpGlobal extends HasLog {\r\n    /** @internal */\r\n    constructor(private env: Environment) {\r\n        super('Sxc.Http');\r\n    }\r\n\r\n    /**\r\n     * All the headers which are needed in an ajax call for this to work reliably.\r\n     * Use this if you need to get a list of headers in another system\r\n     */\r\n    headers(id?: number, cbid?: number, ctx?: ContextIdentifier): Dictionary<string> {\r\n        const cl = this.log.call('headers', `${id}, ${cbid}`);\r\n        const fHeaders: Dictionary<string> = {};\r\n        const pageId = this.env.page().toString();\r\n        if (!ctx?._ignoreHeaders) {\r\n            if (id) fHeaders[HeaderNames.ModuleId] = id.toString();\r\n            if (cbid) fHeaders[HeaderNames.ContentBlockId] = cbid.toString();\r\n            fHeaders[HeaderNames.TabId] = pageId;\r\n            fHeaders[HeaderNames.PageId] = pageId;\r\n        }\r\n        fHeaders[this.env.rvtHeader()] = this.env.rvt();\r\n        return cl.return(fHeaders, `headers(id:${id}, cbid:${cbid})`);\r\n    }\r\n\r\n    /**\r\n     * Get the API-Root path for a specific extension/endpoint\r\n     * @param {string} endpointName\r\n     * @returns {string}\r\n     * @memberof Http\r\n     */\r\n    apiRoot(endpointName: string): string {\r\n        const cl = this.log.call('apiRoot');\r\n        var result = this.env.api().replace(ApiExtensionPlaceholder, endpointName);\r\n        return cl.return(result, `apiRoot('${endpointName}')`);\r\n    }\r\n\r\n    /**\r\n     * Get the API-Root path for Apps\r\n     * new in v12\r\n     * @param {string} endpointName\r\n     * @returns {string}\r\n     * @memberof SxcHttp\r\n     * @internal\r\n     */\r\n     appApiRoot(): string {\r\n        const cl = this.log.call('appApiRoot');\r\n        // try to get it, or fall back to the previous / old convention\r\n        var result = this.env.appApi() ?? this.apiRoot(ToSxcName);\r\n        return cl.return(result, `appApiRoot()`);\r\n    }\r\n\r\n    /**\r\n     * Get the URL for a specific web API endpoint\r\n     * Will ignore urls which clearly already are the full url.\r\n     * @param {string} url\r\n     * @param {string} [endpointName]\r\n     * @returns\r\n     * @memberof Http\r\n     */\r\n    apiUrl(url: string, endpointName?: string)\r\n    {\r\n        const cl = this.log.call('apiUrl');\r\n        this.log.add(`apiUrl(url:'${url}', endpointName:'${endpointName}')`);\r\n\r\n        // null/undefined check\r\n        if(url == null) return url;\r\n\r\n        // if starts with http: or https: then ignore\r\n        if(!url || url.indexOf('http:') == 0 || url.indexOf('https:') == 0 || url.indexOf('//') == 0)\r\n            return cl.return(url);\r\n\r\n        // if no endpoint specified, then also skip absolute and relative urls\r\n        if(!endpointName && (url.indexOf('/') == 0 || url.indexOf('.') == 0))\r\n            return cl.return(url);\r\n\r\n        var baseUrl = url.toLocaleLowerCase().startsWith(AppApiMarker)\r\n            ? this.appApiRoot()\r\n            : this.apiRoot(endpointName || ToSxcName);\r\n\r\n\r\n        // ensure base ends with slash\r\n        if(baseUrl[baseUrl.length-1] != '/') baseUrl += '/';\r\n        // ensure url doesn't start with slash\r\n        if(url[0] == '/') url = url.slice(1);\r\n        return cl.return(baseUrl + url);\r\n    }\r\n}\r\n","import { ContextIdentifier, Sxc } from '../../../../$2sxc/src';\r\nimport { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { WorkflowStep } from '../../workflow/workflow';\r\nimport { CommandParams } from '../command-params';\r\n\r\n/**\r\n * Parameters for the Instance cms.run(...) command.\r\n * New in 13.03\r\n * @internal\r\n */\r\nexport interface RunParams {\r\n  /**\r\n   * The action to perform.\r\n   * Required if you don't have params which themselves have the action\r\n   */\r\n  action?: string;\r\n\r\n  /**\r\n   * The command params, like contentType, entityId etc.\r\n   * Optional for many actions, but can themselves also contain the property `action`, in which case action can be ommited.\r\n   */\r\n  params?: CommandParams;\r\n\r\n  /**\r\n   * The event which triggered this command - sometimes useful internally further use.\r\n   * Optional in most cases, but in some cases it will improve the behavior of the code.\r\n   */\r\n  event?: MouseEvent;\r\n\r\n  /**\r\n   * Workflows work the same way as with a toolbar, except that they are added here and not registered on init\r\n   */\r\n  workflows?: WorkflowStep | WorkflowStep[];\r\n}\r\n\r\n/**\r\n * Parameters for the Global cms.run(...) command in Addition to the RunParams\r\n * New in 12.10\r\n * @internal\r\n */\r\nexport interface RunParamsWithContext extends RunParams {\r\n  /**\r\n   * The tag on which the run was triggered - it's used to give the command a context to start from\r\n   * We always need the tag OR the context, but never both\r\n   */\r\n  tag?: HTMLElement;\r\n\r\n  /**\r\n   * The context to run in, basically containing module id, etc.\r\n   * We always need the tag OR the context, but never both\r\n   */\r\n  context?: Sxc | SxcEdit | ContextIdentifier;\r\n}\r\n\r\n/**\r\n * Checks if the run params are complete, as would be used in the $2sxc.cms.run\r\n * @internal\r\n */\r\nexport function is$sxcRunParams(o: unknown): o is RunParamsWithContext {\r\n  const t = o as RunParamsWithContext;\r\n  return (t.tag != null || (t.context != null && (ContextIdentifier.is(t.context) || SxcEdit.is(t.context)))) &&\r\n    isRunParamsInstance(t);\r\n}\r\n\r\n/**\r\n * Checks if it's at least an instance run param - having at least `action` or `params`\r\n * @internal\r\n */\r\nexport function isRunParamsInstance(maybeRunParams: unknown): maybeRunParams is RunParams {\r\n  const typed = maybeRunParams as RunParams;\r\n  return (typed.action != null || typed.params != null);\r\n}\r\n\r\nconst runContextInstanceMinimalRequirements = \"'action' and/or 'params'\";\r\nconst errPrefix = 'sxc instance run() expects runParams';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function ensureRunParamsInstanceOrError(runParams: RunParamsWithContext) {\r\n  if (!isRunParamsInstance(runParams))\r\n    throw `${errPrefix} with at least ${runContextInstanceMinimalRequirements}`;\r\n  if (runParams.context)\r\n    throw `${errPrefix} without 'context' since it already provides the context`;\r\n}\r\n","import { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { AttrJsonEditContext } from '../html-attribute';\r\n\r\n/**\r\n * this will be about the current app, settings of the app, app - paths, etc.\r\n * @internal\r\n */\r\nexport class ContextOfApp {\r\n    // ContentGroup\r\n    /**\r\n     * IsContent is used for 2 things\r\n     * 1. Determine if certain buttons should be enabled in the toolbar\r\n     * 2. To forward to the quick-dialog, which changes behavior based on this\r\n     * Should default to true, because that's the more basic/restricted mode\r\n     */\r\n    isContent: boolean = true;\r\n    settingsId: number = null;\r\n    resourcesId: number = null;\r\n    appPath: string;\r\n    hasContent: boolean;\r\n    supportsAjax: boolean = false;\r\n    zoneId: number;\r\n    id: number; // appId\r\n    // languages\r\n    currentLanguage: string;\r\n    primaryLanguage: string;\r\n    allLanguages: string[] | null;\r\n\r\n    constructor(editCtx: AttrJsonEditContext, sxc: SxcEdit) {\r\n        // Initialize Content-Group App information\r\n        if (editCtx.contentBlock) {\r\n            this.id = editCtx.contentBlock.AppId;\r\n            this.isContent = editCtx.contentBlock.IsContent ?? true;\r\n            this.resourcesId = editCtx.contentBlock.AppResourcesId ?? null;\r\n            this.settingsId = editCtx.contentBlock.AppSettingsId ?? null;\r\n            this.appPath = editCtx.contentBlock.AppUrl; // this is the only value which doesn't have a slash by default. note that the app-root doesn't exist when opening \"manage-app\"\r\n            this.hasContent = editCtx.contentBlock.HasContent;\r\n            this.supportsAjax = editCtx.contentBlock.SupportsAjax ?? false;\r\n            this.zoneId = editCtx.contentBlock.ZoneId;\r\n        }\r\n\r\n        // if we have more context information, use this to provide possibly missing data\r\n        if (sxc && sxc.ctx) {\r\n            this.id = this.id ?? sxc.ctx.appId;\r\n            this.zoneId = this.id ?? sxc.ctx.zoneId;\r\n        }\r\n\r\n        // Initialize language information\r\n        if (editCtx.Language) {\r\n            this.currentLanguage = editCtx.Language.Current;\r\n            this.primaryLanguage = editCtx.Language.Primary;\r\n            this.allLanguages = editCtx.Language.All;\r\n        }\r\n    }\r\n}\r\n","import { Positioning, QuickEditConfig } from '.';\r\nimport { C } from '../constants';\r\nimport { NoJQ } from '../plumbing';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport namespace QuickEditOverlay {\r\n  export interface Selection extends HTMLElement {\r\n    toggleOverlay(target: boolean | HTMLElement, buttons?: QuickEditConfig.Buttons): void;\r\n    target: HTMLElement;\r\n  }\r\n\r\n  export interface Main extends HTMLElement {\r\n    activeContentBlock: HTMLElement;\r\n    activeModule: HTMLElement;\r\n    _parentNode: HTMLElement;\r\n  }\r\n\r\n  export function setButtonActivationClasses(buttons: QuickEditConfig.Buttons, linkTags: HTMLElement[]) {\r\n    // remove any previously set classes for these\r\n    for (const [k, v] of Object.entries(QuickEditConfig.DefaultButtons))\r\n      linkTags.forEach((l) => {\r\n        l.classList.remove(`enable-${k}`, `disable-${k}`);\r\n      });\r\n\r\n    // set classes from config\r\n    for (const [k, v] of Object.entries(buttons))\r\n      linkTags.forEach((l) => {\r\n        l.classList.add(`${(v ? 'enable' : 'disable')}-${k}`);\r\n      });\r\n  }\r\n\r\n  export function btn(action: string, icon: string, i18N: string, invisible?: boolean, unavailable?: boolean, classes?: string): string {\r\n    return `<a class='sc-content-block-menu-btn sc-cb-action icon-sxc-${icon} ${invisible ? ' sc-invisible ' : ''}${unavailable ? ` ${C.ClsNames.UnAvailable} ` : ''}${classes}' data-action='${action}' data-i18n='[title]QuickInsertMenu.${i18N}'></a>`;\r\n  }\r\n\r\n  export const selectedOverlay = NoJQ.domFromString('<div class=\"sc-content-block-menu sc-content-block-selected-menu sc-i18n\"></div>').map((o) => {\r\n    o.append(\r\n      NoJQ.domFromString(QuickEditOverlay.btn('delete', 'trash-empty', 'Delete'))[0],\r\n      NoJQ.domFromString(QuickEditOverlay.btn('sendToPane', 'move', 'Move', null, null, 'sc-cb-mod-only'))[0],\r\n      NoJQ.domFromString('<div id=\"paneList\"></div>')[0],\r\n    );\r\n    return o;\r\n  })[0] as QuickEditOverlay.Selection;\r\n}\r\n\r\n\r\n/** Expand the selectedOverlay with the necessary toggle function */\r\nQuickEditOverlay.selectedOverlay.toggleOverlay = (target: boolean | HTMLElement, buttons?: QuickEditConfig.Buttons) => {\r\n  if (!target) {\r\n    QuickEditOverlay.selectedOverlay.style.display = 'none';\r\n  } else {\r\n    // 1. set overlay at the right coordinates\r\n    const coords = Positioning.get(target as HTMLElement);\r\n    coords.yh = coords.y + 20;\r\n    Positioning.positionAndAlign(QuickEditOverlay.selectedOverlay, coords);\r\n    QuickEditOverlay.selectedOverlay.target = target as HTMLElement;\r\n\r\n    // 2. Activate / deactivate correct buttons\r\n    QuickEditOverlay.setButtonActivationClasses(buttons, Array.from(QuickEditOverlay.selectedOverlay.querySelectorAll<HTMLElement>('a')));\r\n  }\r\n};\r\n","/**\r\n * Configuration of QuickE\r\n * see also https://docs.2sxc.org/specs/js/quicke.html\r\n * @internal\r\n */\r\nexport namespace QuickEditConfig {\r\n\r\n  /** Buttons on a quick-edit toolbar */\r\n  export interface Buttons {\r\n    addContent: boolean;\r\n    addApp: boolean;\r\n    select: boolean;\r\n    paste: boolean;\r\n    delete: boolean;\r\n    move: boolean;\r\n  }\r\n\r\n  export const DefaultButtons: Buttons = {\r\n    addApp: true,\r\n    addContent: true,\r\n    select: true,\r\n    paste: true,\r\n    delete: true,\r\n    move: true,\r\n  };\r\n\r\n  export function getNewDefaultConfig() {\r\n    return {\r\n      enable: true,\r\n      buttons: QuickEditConfig.DefaultButtons,\r\n      innerBlocks: {\r\n        enable: null, // default: auto-detect\r\n      },\r\n      modules: {\r\n        enable: null, // default: auto-detect\r\n      },\r\n    } as QuickEditConfig.FullConfig;\r\n  }\r\n  \r\n\r\n  /** Configuration set used in the root and in each sub-node (innerblocks/modules) */\r\n  interface ConfigSet {\r\n    enable: boolean | string | null;\r\n    buttons?: Buttons;\r\n  }\r\n\r\n  /** Full configuration set */\r\n  export interface FullConfig extends ConfigSet {\r\n    innerBlocks: ConfigSet;\r\n    modules: ConfigSet;\r\n  }\r\n}\r\n","import { AttrJsonEditContext } from '../html-attribute';\r\n\r\n/**\r\n * information related to the current contentBlock, incl\r\n * @internal\r\n */\r\nexport class ContextOfContentBlock {\r\n  // ContentGroup\r\n  isCreated: boolean;\r\n  isList: boolean;\r\n  queryId: number;\r\n  templateId: number;\r\n  contentTypeId: string;\r\n  contentGroupId: string;\r\n\r\n  // TemplateEdition for better editing\r\n  // New in 12.11\r\n  templatePath?: string;\r\n\r\n  // New in 13, upper case to later have the same type as this as we want to reduce the amount of classes\r\n  TemplateIsShared: boolean;\r\n\r\n  // New in 12.11\r\n  edition?: string;\r\n\r\n  constructor(editCtx: AttrJsonEditContext) {\r\n    // Initialize Content-Group Values\r\n    const cb = editCtx.contentBlock;\r\n    if (!cb) return;\r\n    this.isCreated = cb.IsCreated;\r\n    this.isList = cb.IsList;\r\n    this.queryId = cb.QueryId;\r\n    this.templateId = cb.TemplateId;\r\n    this.templatePath = cb.TemplatePath;\r\n    this.TemplateIsShared = cb.TemplateIsShared;\r\n    this.edition = cb.Edition;\r\n    this.contentTypeId = cb.ContentTypeName;\r\n    this.contentGroupId = cb.Guid;\r\n  }\r\n}\r\n","import { SxcVersion } from '../../../../core';\r\nimport { C } from '../../constants';\r\nimport { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { AttrJsonEditContext } from '../html-attribute';\r\nimport { AttrJsonEntity } from '../html-attribute/parts/parameters-entity';\r\n\r\n/**\r\n * information related to the current DNN module, incl.instanceId,\r\n * @internal\r\n */\r\nexport class ContextOfInstance {\r\n    id: number; // instance id (aka moduleId)\r\n    isEditable: boolean = false;\r\n    allowPublish: boolean = true;\r\n    // sxc\r\n    sxcVersion: string = SxcVersion;\r\n    parameters: AttrJsonEntity[] | null = null;\r\n    sxcRootUrl: string = '';\r\n\r\n    constructor(editCtx: AttrJsonEditContext, sxc: SxcEdit) {\r\n        if (editCtx.Environment) {\r\n            this.id = editCtx.Environment.InstanceId;\r\n            this.isEditable = editCtx.Environment.IsEditable ?? false;\r\n            // sxc\r\n            this.sxcVersion = editCtx.Environment.SxcVersion ?? SxcVersion;\r\n            this.parameters = editCtx.Environment.parameters;\r\n            this.sxcRootUrl = editCtx.Environment.SxcRootUrl ?? '';\r\n        }\r\n\r\n        if (!this.id)\r\n            // if the module isn't known, check the additional context.\r\n            // Otherwise give it a real number but an obvious fallback\r\n            // This is for integration into other systems which don't need a module-id\r\n            this.id = sxc?.ctx?.moduleId ?? -2742;\r\n\r\n        if (editCtx.contentBlockReference)\r\n            this.allowPublish = editCtx.contentBlockReference.publishingMode === C.IDs.publishAllowed;\r\n    }\r\n}\r\n","import { AttrJsonEditContext } from '../html-attribute';\r\n\r\n/**\r\n * information about the current item\r\n * ATM empty, not sure if it serves a purpose...\r\n * @internal\r\n */\r\nexport class ContextOfItem {\r\n    // tslint:disable-next-line: no-empty\r\n    constructor(editCtx: AttrJsonEditContext) {}\r\n}\r\n","// import { Window as sxcWindow } from '../../../$2sxc/src/index';\r\nimport { DnnActionMenu } from '../dnn/dnn-menu-helper/dnn-inpage-edit';\r\nimport { TypeWeDontCare } from '../plumbing';\r\nimport { QuickE } from '../quick-edit/quick-e';\r\nimport { SxcRoot } from './sxc-controller-in-page';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface WindowInPage extends Window {\r\n  $2sxc: SxcRoot;\r\n  // event: Event;\r\n  dnn_tabVersioningEnabled: boolean;\r\n  dnn: TypeWeDontCare;\r\n  $quickE: QuickE ;\r\n  $2sxcActionMenuMapper: (moduleId: number) => DnnActionMenu;\r\n}\r\n// ReSharper restore InconsistentNaming\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const windowInPage: WindowInPage = window as unknown as WindowInPage;\r\n","import { ContextIdentifier, Sxc, SxcGlobal } from '../../../$2sxc/src/index';\r\nimport { Cms } from '../cms/Cms';\r\nimport { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { Manage } from '../manage/manage';\r\nimport { SystemUpgrader } from '../system/2sxc.system';\r\nimport { SxcEdit } from './sxc-instance-editable';\r\nimport { windowInPage as window } from './window-in-page';\r\n\r\n\r\n/**\r\n * $2sxc interface declaration merging for in-page\r\n * @internal\r\n */\r\n// ReSharper disable InconsistentNaming\r\nexport interface SxcRoot extends SxcGlobal {\r\n  /**\r\n   * Get's an Sxc\r\n   * @param id number | HTMLElement\r\n   * @param cbid number\r\n   * @returns Sxc\r\n   */\r\n  // 2021-09-17 spm assume this function doesn't use jquery\r\n  (id: number | ContextIdentifier | HTMLElement | Sxc , cbid?: number): SxcEdit;\r\n  // insights: typeof Insights;\r\n  _manage: Manage;\r\n  system: SystemUpgrader;\r\n  translate(key: string): string;\r\n  context: typeof ContextComplete.findContext;\r\n  cms: Cms;\r\n}\r\n// ReSharper restore InconsistentNaming\r\n\r\n/**\r\n * TODO: PROBABLY not used any more\r\n * @internal\r\n */\r\nexport const $2sxcInPage: SxcRoot = window.$2sxc;\r\n","import { $2sxcInPage } from '../../interfaces/sxc-controller-in-page';\r\nimport { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { AttrJsonEditContext } from '../html-attribute';\r\n\r\n/**\r\n * this will be information related to the current page\r\n * @internal\r\n */\r\nexport class ContextOfPage {\r\n    id: number;\r\n    // 2020-11-28 #cleanup11.11 2dm - not used, disabled - keep till Jan 2021, then remove from backend-json and drop these comments\r\n    // url: string;\r\n\r\n    constructor(editCtx: AttrJsonEditContext, sxc: SxcEdit) {\r\n        if (editCtx.Environment) {\r\n            this.id = editCtx.Environment.PageId;\r\n            // 2020-11-28 #cleanup11.11 2dm - not used, disabled - keep till Jan 2021, then remove from backend-json and drop these comments\r\n            // this.url = editCtx.Environment.PageUrl;\r\n        }\r\n\r\n        // catch cases where it wasn't provided\r\n        this.id = this.id ?? sxc?.ctx?.pageId ?? $2sxcInPage.env.page() ?? -2742;\r\n    }\r\n}\r\n","import { AttrJsonEditContext } from '../html-attribute';\r\n\r\n/**\r\n * this will be everything about the current system, like system / api -paths etc.\r\n * @internal\r\n */\r\nexport class ContextOfSystem {\r\n    error: string;\r\n\r\n    constructor(editCtx: AttrJsonEditContext) {\r\n        if (editCtx.error) {\r\n            this.error = editCtx.error.type;\r\n        }\r\n    }\r\n}\r\n","import { AttrJsonEditContext } from '../html-attribute';\r\n\r\n/**\r\n * this will be something about the current tenant(the dnn portal)\r\n * @internal\r\n */\r\nexport class ContextOfTenant {\r\n    // 2020-11-28 #cleanup11.11 2dm - not used, disabled - keep till Jan 2021, then remove from backend-json and drop these comments\r\n    // id: number;\r\n    // url: string;\r\n\r\n    constructor(editCtx: AttrJsonEditContext) {\r\n        if (editCtx.Environment) {\r\n            // 2020-11-28 #cleanup11.11 2dm - not used, disabled - keep till Jan 2021, then remove from backend-json and drop these comments\r\n            // this.id = editCtx.Environment.WebsiteId;\r\n            // this.url = editCtx.Environment.WebsiteUrl;\r\n        }\r\n    }\r\n}\r\n","import { AttrJsonEditContext } from '../html-attribute';\r\n\r\n/**\r\n * ensure that the UI will load the correct assets to enable editing\r\n * @internal\r\n */\r\nexport class ContextOfUi {\r\n    autoToolbar?: boolean; // toolbar auto-show\r\n    form: string; // decide which dialog opens, eg ng10\r\n\r\n    constructor(editCtx: AttrJsonEditContext) {\r\n        if (editCtx.Ui) {\r\n            this.autoToolbar = editCtx.Ui.AutoToolbar; // toolbar auto-show\r\n            if (editCtx.Ui.Form) this.form = editCtx.Ui.Form; // decide which dialog opens, eg ng8\r\n        }\r\n    }\r\n}\r\n","import { NumberNotDefinedHuge } from '../../../../../core';\r\nimport { IDs } from '../../../constants/ids';\r\n\r\n/**\r\n * This contains a pointer to a content-block. The data is always provided by the server,\r\n * so this class is never really instantiated.\r\n * @internal\r\n */\r\nexport class ContentBlockReference {\r\n  /** How changes are published - draft required/optional */\r\n  public publishingMode: string = IDs.publishAllowed;\r\n\r\n  /** ID of the reference item - very rarely used */\r\n  public id: number = NumberNotDefinedHuge;\r\n\r\n  /** GUID of the parent item referencing this Content Block */\r\n  public parentGuid: string = null;\r\n\r\n  /** Field in which this content block is references */\r\n  public parentField: string = null;\r\n\r\n  /** Index of the reference - what position it's in in the list of that field */\r\n  public parentIndex: number = 0;\r\n\r\n  /** If this content is part of the page */\r\n  public partOfPage: boolean = false;\r\n\r\n  constructor(original: Partial<ContentBlockReference>) {\r\n      Object.assign(this, original);\r\n  }\r\n}\r\n","/**\r\n * @internal\r\n */\r\nexport class AttrJsonUser {\r\n  CanDevelop: boolean;\r\n\r\n  // new v13\r\n  CanAdmin: boolean;\r\n}\r\n","import { ContextComplete } from '..';\r\nimport { AttrJsonEditContext, AttrJsonUser } from '../html-attribute';\r\n\r\n/**\r\n * things about the user\r\n * ~~note that the properties are also used in url-params and ajax calls, so don't rename~~\r\n * 2022-02-23 2dm - renamed to upper case now, assume it shouldn't have a side effect because\r\n * it shouldn't be used in ajax calls, since the dialogs get the settings from the backend\r\n * @internal\r\n */\r\nexport class ContextOfUser extends AttrJsonUser {\r\n\r\n    constructor(editCtx?: AttrJsonEditContext) {\r\n        super();\r\n        if (!editCtx || !editCtx.User) return;\r\n        this.CanDevelop = editCtx.User.CanDevelop;\r\n        this.CanAdmin = editCtx.User.CanAdmin;\r\n    }\r\n\r\n    static fromContext(context: ContextComplete): ContextOfUser {\r\n        const user = new ContextOfUser();\r\n        user.CanDevelop = context.user.CanDevelop;\r\n        user.CanAdmin = context.user.CanAdmin;\r\n        return user;\r\n    }\r\n}\r\n","import { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { TypeTbD } from '../../plumbing';\r\nimport { AttrJsonEditContext } from '../html-attribute';\r\nimport { ContextOfInstance, ContextOfPage, ContextOfSystem, ContextOfTenant, ContextOfUser } from '../parts';\r\nimport { ContextOfApp } from '../parts/context-app';\r\nimport { ContextOfUi } from '../parts/context-ui';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ContextBundleInstance {\r\n    sxc: SxcEdit; // instance of sxc object\r\n    instance: ContextOfInstance; // information related to the current DNN module, incl.instanceId, etc.\r\n    app: ContextOfApp; // this will be about the current app, settings of the app, app - paths, etc.\r\n    ui: ContextOfUi; // ensure that the UI will load the correct assets to enable editing\r\n    page: ContextOfPage; // this will be information related to the current page\r\n    system: ContextOfSystem; // this will be everything about the current system, like system / api -paths etc.\r\n    tenant: ContextOfTenant; // this will be something about the current tenant(the dnn portal)\r\n    user: ContextOfUser; // things about the user\r\n\r\n    _isContext = true;\r\n\r\n    constructor(editCtx: AttrJsonEditContext, sxc: SxcEdit) {\r\n        // this will be about the current app, settings of the app, app - paths, etc.\r\n        this.app = new ContextOfApp(editCtx, sxc);\r\n\r\n        // information related to the current DNN module, incl.instanceId, etc.\r\n        this.instance = new ContextOfInstance(editCtx, sxc);\r\n\r\n        // things about the user\r\n        this.user = new ContextOfUser(editCtx);\r\n\r\n        // this will be information related to the current page\r\n        this.page = new ContextOfPage(editCtx, sxc);\r\n\r\n        // this will be everything about the current system, like system / api -paths etc.\r\n        this.system = new ContextOfSystem(editCtx);\r\n\r\n        // this will be something about the current tenant(the dnn portal)\r\n        this.tenant = new ContextOfTenant(editCtx);\r\n\r\n        // ensure that the UI will load the correct assets to enable editing\r\n        this.ui = new ContextOfUi(editCtx);\r\n\r\n    }\r\n\r\n    static is(thing: TypeTbD): thing is ContextBundleInstance {\r\n        const maybeButton = thing as ContextBundleInstance;\r\n        return maybeButton.sxc !== undefined && maybeButton.instance !== undefined;\r\n    }\r\n}\r\n","import { ContextBundleInstance, ContextOfContentBlock, ContextOfItem } from '..';\r\nimport { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { AttrJsonEditContext } from '../html-attribute';\r\nimport { ContentBlockReference } from '../html-attribute/parts/content-block';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ContextBundleContent extends ContextBundleInstance {\r\n  /** information about the current item */\r\n  item: ContextOfItem;\r\n\r\n  /** Reference to a Content-Block */\r\n  contentBlockReference: ContentBlockReference;\r\n\r\n  /** The content-block itself with specs like is-app, etc. */\r\n  contentBlock: ContextOfContentBlock;\r\n\r\n  constructor(editCtx: AttrJsonEditContext, sxc: SxcEdit) {\r\n    super(editCtx, sxc);\r\n\r\n    // information about the current item\r\n    this.item = new ContextOfItem(editCtx);\r\n\r\n    this.contentBlockReference = new ContentBlockReference(editCtx.contentBlockReference);\r\n\r\n    // information related to the current contentBlock\r\n    this.contentBlock = new ContextOfContentBlock(editCtx);\r\n  }\r\n}\r\n","import { ContextBundleContent, ContextComplete } from '.';\r\nimport { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { Button } from '../../toolbar/config/button';\r\nimport { Toolbar } from '../../toolbar/config/toolbar';\r\nimport { AttrJsonEditContext } from '../html-attribute';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ContextBundleToolbar extends ContextBundleContent {\r\n    toolbar: Toolbar;\r\n\r\n    constructor(editCtx: AttrJsonEditContext, sxc: SxcEdit) {\r\n        super(editCtx, sxc);\r\n        // note that the toolbar will not be filled here, as it will be filled somewhere else\r\n    }\r\n\r\n    forButton(button: Button): ContextComplete {\r\n        // the ContextBundleButton is the same as toolbar, just with .button\r\n        const clone = {...this} as unknown as ContextComplete;\r\n        clone.button = button;\r\n        return clone;\r\n    }\r\n}\r\n","import { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { Obj } from '../../plumbing';\r\nimport { Button } from '../../toolbar/config/button';\r\nimport { WorkflowManager } from '../../workflow';\r\nimport { AttrJsonEditContext } from '../html-attribute';\r\nimport { ContextBundleToolbar } from './context-bundle-toolbar';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ContextComplete extends ContextBundleToolbar {\r\n    button?: Button;\r\n\r\n    commandWorkflow?: WorkflowManager;\r\n\r\n    constructor(editCtx: AttrJsonEditContext, sxc?: SxcEdit) {\r\n        super(editCtx, sxc);\r\n        // note that the button will not be filled here, as it will be filled somewhere else\r\n    }\r\n\r\n    /**\r\n     * Primary API to get the context (context is cached)\r\n     * @param htmlElement or Id (moduleId)\r\n     * @param cbid\r\n     */\r\n    static findContext(tagOrSxc: SxcEdit | HTMLElement | number, cbid?: number): ContextComplete {\r\n        // 2021-09-17 spm assume this function doesn't use jquery\r\n        let sxc: SxcEdit;\r\n        let containerTag: HTMLElement = null;\r\n\r\n        if (SxcEdit.is(tagOrSxc)) { // it is SxcInstance\r\n            sxc = tagOrSxc;\r\n        } else if (typeof tagOrSxc === 'number') { // it is number\r\n            sxc = SxcEdit.get(tagOrSxc, cbid);\r\n        } else { // it is HTMLElement\r\n            sxc = SxcEdit.get(tagOrSxc);\r\n            containerTag = SxcEdit.getContainerTag(tagOrSxc);\r\n        }\r\n\r\n        const contextOfButton = ContextComplete.getContextInstance(sxc, containerTag);\r\n        contextOfButton.sxc = sxc;\r\n        return contextOfButton;\r\n    }\r\n\r\n    /**\r\n     * Create copy of context, so it can be modified before use\r\n     * @param htmlElement or Id (moduleId)\r\n     * @param cbid\r\n     */\r\n    static contextCopy(htmlElementOrId: HTMLElement | number, cbid?: number): ContextComplete {\r\n        const contextOfButton = ContextComplete.findContext(htmlElementOrId, cbid);\r\n        // set sxc to null because of cyclic reference, so we can serialize it\r\n        contextOfButton.sxc = null;\r\n        // make a copy\r\n        const copyOfContext = Obj.DeepClone(contextOfButton); // JSON.parse(JSON.stringify(contextOfButton));\r\n        // bring sxc back to context\r\n        contextOfButton.sxc = SxcEdit.get(htmlElementOrId) as SxcEdit;\r\n        return copyOfContext;\r\n    }\r\n\r\n    /**\r\n     * Create new context\r\n     * @param sxc\r\n     * @param htmlElement\r\n     */\r\n    static getContextInstance(sxc: SxcEdit, htmlElement?: HTMLElement): ContextComplete {\r\n        const editContext = SxcEdit.getEditContext(sxc, htmlElement);\r\n        return new ContextComplete(editContext, sxc);\r\n    }\r\n\r\n}\r\n","import { ContextIdentifier, Sxc } from '../../../$2sxc/src';\r\nimport { CmsEngine } from '../commands/';\r\nimport { CommandParams } from '../commands/command-params';\r\nimport { is$sxcRunParams, RunParamsWithContext } from '../commands/engine/run-params';\r\nimport { C } from '../constants';\r\nimport { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { ContextBundleInstance } from '../context/bundles/context-bundle-instance';\r\nimport { $2sxcInPage } from '../interfaces/sxc-controller-in-page';\r\nimport { HasLog, Insights, Log } from '../logging';\r\n\r\nconst logId = 'Cms.Api';\r\n/**\r\n * @internal\r\n */\r\nexport class Cms extends HasLog {\r\n    /**\r\n     * if true (default) will reset the log everytime something is done\r\n     * if false, will preserve the log over multiple calls\r\n     */\r\n    // autoReset = true;\r\n    autoDump = C.Debug.cms.autoDump;\r\n\r\n    constructor() {\r\n        super(logId, null);\r\n    }\r\n\r\n    /**\r\n     * reset / clear the log\r\n     */\r\n    resetLog() {\r\n        this.log = new Log(logId, null, 'log was reset');\r\n        Insights.add('cms', 'run', this.log);\r\n    }\r\n\r\n    run<T>(\r\n        context: ContextBundleInstance | HTMLElement | RunParamsWithContext,\r\n        nameOrSettings?: string | CommandParams,\r\n        eventOrSettings?: CommandParams | MouseEvent,\r\n        event?: MouseEvent,\r\n    ): Promise<void | T> {\r\n        const cl = this.log.call('run<T>');\r\n\r\n        const cmsEngine = new CmsEngine(this.log);\r\n\r\n        // Figure out inner-call based on if context is new RunParams or not (in that case it should be a tag or a full context)\r\n        let innerCall: () => Promise<void>;\r\n        if (is$sxcRunParams(context)) {\r\n            // V1 with Context\r\n            const contextGiver = (ContextIdentifier.is(context.context) || Sxc.is(context.context))\r\n                ? $2sxcInPage(context.context)\r\n                : context.tag;\r\n            const realCtx = ContextComplete.findContext(contextGiver);\r\n            context.params = { action: context.action, ...context.params };\r\n            innerCall = () => cmsEngine.run(realCtx, context.params, context.event, context);\r\n        } else {\r\n            const realCtx = ContextBundleInstance.is(context)\r\n                ? context\r\n                : ContextComplete.findContext(context);\r\n\r\n            innerCall = () => cmsEngine.detectParamsAndRun(realCtx, nameOrSettings, eventOrSettings, event);\r\n        }\r\n\r\n        const result: Promise<void | T> = this.do(innerCall);\r\n        return cl.return(result, 'ok');\r\n    }\r\n\r\n    /**\r\n     * reset/clear the log if alwaysResetLog is true\r\n     */\r\n    private do<T>(innerCall: () => Promise<T>): Promise<T> {\r\n        const cl = this.log.call('do');\r\n        this.resetLog();\r\n        const result = innerCall();\r\n        if (this.autoDump) this.log.dump();\r\n        return cl.return(result);\r\n    }\r\n}\r\n","import { Sxc } from '../../../$2sxc/src';\r\nimport { Cms } from '../cms/Cms';\r\nimport { ensureRunParamsInstanceOrError, RunParams } from '../commands/engine/run-params';\r\nimport { C } from '../constants';\r\nimport { AttrJsonEditContext } from '../context/html-attribute';\r\nimport { EditManager } from '../manage/edit-manager';\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class SxcEdit extends Sxc {\r\n    manage: EditManager;\r\n\r\n    /// TODO: CONTINUE HERE, TRY TO GET THE RUN TO USE THE CURRENT 2SXC\r\n    run<T>(runParams: RunParams): Promise<void | T> {\r\n        ensureRunParamsInstanceOrError(runParams);\r\n        return new Cms().run({ ...runParams, context: this });\r\n    }\r\n\r\n    static is(thing: unknown): thing is SxcEdit {\r\n        return (thing as SxcEdit).showDetailedHttpError !== undefined;\r\n    }\r\n\r\n    static get(module: number | HTMLElement, cbid?: number): SxcEdit {\r\n        // 2021-09-17 spm assume this function doesn't use jquery\r\n        const sxc = window.$2sxc(module, cbid) as unknown as SxcEdit;\r\n        return sxc;\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * get edit-context info of html element or sxc-object\r\n     * @param {SxcEdit} sxc\r\n     * @param {HTMLElement} htmlElement\r\n     * @return {AttrJsonEditContext} edit context info\r\n     */\r\n    static getEditContext(sxc: SxcEdit, htmlElement?: HTMLElement): AttrJsonEditContext {\r\n        let editContextTag: HTMLElement;\r\n        if (htmlElement) {\r\n            editContextTag = SxcEdit.getContainerTag(htmlElement);\r\n        } else {\r\n            editContextTag = SxcEdit.getTag(sxc);\r\n        }\r\n        return SxcEdit.getEditContextOfTag(editContextTag);\r\n    }\r\n\r\n    /**\r\n     * get the edit-context object (a json object) of the current tag/sxc-instance\r\n     * @return {AttrJsonEditContext} edit-context object\r\n     */\r\n    static getEditContextOfTag(htmlTag: HTMLElement | undefined): AttrJsonEditContext {\r\n        const attr = htmlTag?.getAttribute(C.AttrNames.Context);\r\n        return JSON.parse(attr || '{ }') as AttrJsonEditContext;\r\n    }\r\n\r\n\r\n    /**\r\n     * get nearest html tag of the sxc instance with data-edit-context\r\n     * @param htmlTag\r\n     */\r\n    static getContainerTag(htmlTag: HTMLElement): HTMLElement {\r\n        return htmlTag.closest<HTMLElement>(C.Sel.SxcDivs);\r\n    }\r\n\r\n    /**\r\n     * get a html tag of the sxc instance\r\n     * @param {SxcEdit} sxci\r\n     * @return {HTMLElement} - resulting html\r\n     */\r\n    static getTag(sxci: SxcEdit): HTMLElement {\r\n        return document.querySelector<HTMLElement>(`div[${C.AttrNames.ContentBlockId}='${sxci.cbid}']`);\r\n    }\r\n\r\n}\r\n","import { C } from '../constants';\r\nimport { SxcEdit } from '../interfaces/sxc-instance-editable';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class HtmlTools {\r\n\r\n    static disable(tag: HTMLElement): void {\r\n        tag.setAttribute(C.Toolbar.attr.disable, 'true');\r\n    }\r\n\r\n    static isDisabled(sxc: SxcEdit): boolean {\r\n        const tag = SxcEdit.getTag(sxc);\r\n        return !!tag.getAttribute(C.Toolbar.attr.disable);\r\n    }\r\n\r\n    /**\r\n     * Find the text of one or more attributes in fallback order, till we found one\r\n     */\r\n    static getFirstAttribute(toolbar: HTMLElement, name1: string, name2: string): string {\r\n        return HtmlTools.tryGetAttrText(toolbar, name1) || HtmlTools.tryGetAttrText(toolbar, name2) || '{}';\r\n    }\r\n\r\n    /**\r\n     * Get text-content of an attribute (or return null)\r\n     */\r\n    static tryGetAttrText(tag: HTMLElement, name: string): string {\r\n        const item1 = tag.attributes.getNamedItem(name);\r\n        return item1 && item1.textContent;\r\n    }\r\n\r\n    /**\r\n     * Add html classes to a DOM element\r\n     */\r\n    static addClasses(element: HTMLElement, classes: string) {\r\n        if (!classes) return;\r\n        if (classes.indexOf(','))\r\n            classes = classes.replace(',', ' ');\r\n        const classessArray = classes.split(' ');\r\n        for (let c = 0; c < classessArray.length; c++)\r\n            if (classessArray[c])\r\n                element.classList.add(classessArray[c]);\r\n    }\r\n}\r\n","/**\r\n * @internal\r\n */\r\nexport class Selection {\r\n    /** The parent is either \"dnn\" or a module information */\r\n    parent: string | number;\r\n\r\n    // new in 11.06 - inner content now always uses guid\r\n    parentGuid: string;\r\n\r\n    /** The field inside the parent used for this content */\r\n    field: string;\r\n\r\n    list: HTMLElement;\r\n    item: HTMLElement;\r\n    index: number;\r\n    type: 'mod' | 'cb';\r\n}\r\n","import { Selection } from '.';\r\nimport { HasLog } from '../logging';\r\n\r\n/**\r\n * Base class for module / content-block editors\r\n * @internal\r\n */\r\nexport abstract class ModifierBase extends HasLog {\r\n    constructor(name: string) {\r\n        super(name);\r\n    }\r\n\r\n    abstract delete(clip: Selection): Promise<void>;\r\n\r\n    abstract isRealMove(oldClip: Selection, newClip: Selection): boolean;\r\n\r\n    abstract move(oldClip: Selection, newClip: Selection): void;\r\n}\r\n","import { QeSelectors } from '.';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ContextForLists {\r\n    parent: string | number;\r\n\r\n    // new in 11.06 - all list-operations now use the parentGuid for inner-content\r\n    parentGuid: string;\r\n\r\n    field: string;\r\n    type?: string;\r\n    guid?: string;\r\n    apps?: string;\r\n    max?: number;\r\n\r\n    appList?: string[];\r\n\r\n    static getFromDom(tag: HTMLElement): ContextForLists {\r\n        const result: ContextForLists = JSON.parse(tag.getAttribute(QeSelectors.blocks.cb.context) || null) || {};\r\n        result.appList = []; // empty by default\r\n        if (result != null && typeof (result.apps) === 'string' && result.apps.length > 1)\r\n            result.appList = result.apps\r\n                .split(',')\r\n                .map((s) => s.trim())   // trim\r\n                .filter((s) => !!s);    // drop empty ones\r\n        return result;\r\n    }\r\n}\r\n","import { ToolbarWithWorkflow, WorkflowArguments, WorkflowManager } from '.';\r\n\r\nlet dummyWorkflowManager: WorkflowManager;\r\nconst debug = false;\r\n\r\n/**\r\n * Various helpers to get a workflow or determine result state\r\n *\r\n * @export\r\n * @class WorkflowHelper\r\n * @internal\r\n */\r\nexport class WorkflowHelper {\r\n\r\n    /**\r\n     * Find the command workflow on a toolbar (or return null).\r\n     * Will go upwards in the DOM to find the toolbar node which has the configuration stored\r\n     */\r\n    static getWorkflow(node: HTMLElement): WorkflowManager {\r\n        if (!node) return WorkflowHelper.getDummyManager();\r\n\r\n        if (debug) console.log('try to find command workflow on ', node);\r\n        const maxParents = 100;\r\n        let parentCount = 0;\r\n        let current = node;\r\n        while (current && parentCount++ < maxParents) {\r\n            const cmdWf = (current as ToolbarWithWorkflow).commandWorkflow;\r\n            if (cmdWf) return cmdWf;\r\n            current = current.parentElement;\r\n        }\r\n        if (debug) console.log('not found, will return dummy');\r\n        return WorkflowHelper.getDummyManager();\r\n    }\r\n\r\n    /**\r\n     * Get a dummy workflow manager\r\n     *\r\n     * @static\r\n     * @returns {WorkflowManager}\r\n     * @memberof WorkflowHelper\r\n     */\r\n    static getDummyManager(): WorkflowManager {\r\n        if (!dummyWorkflowManager) dummyWorkflowManager = new WorkflowManager(null, true);\r\n        return dummyWorkflowManager;\r\n    }\r\n\r\n    /**\r\n     * Determine if a workflow has been cancelled\r\n     *\r\n     * @static\r\n     * @param {(WorkflowArguments | boolean)} currentArgs\r\n     * @returns {boolean}\r\n     * @memberof WorkflowHelper\r\n     */\r\n    static isCancelled(currentArgs: WorkflowArguments | boolean): boolean {\r\n        const cancel = this._isCancelled(currentArgs);\r\n        if (debug) console.log('is cancelled: ' + cancel, currentArgs);\r\n        return cancel;\r\n    }\r\n\r\n    private static _isCancelled(currentArgs: WorkflowArguments | boolean): boolean {\r\n        // promise forgot to return anything, no cancel\r\n        if (currentArgs == null) return false;\r\n\r\n        // promise returned simple false, cancel\r\n        if (currentArgs === false) return true;\r\n\r\n        // determine cancel based on either a boolean result or a real WorkflowArguments with cancel.\r\n        return (currentArgs as WorkflowArguments).cancel === true;\r\n    }\r\n\r\n}\r\n","import { ToolbarInitConfig } from '../initialize/toolbar-init-config';\r\nimport { RuleManager } from '../rules/rule-manager';\r\nimport { ToolbarTemplate } from '../templates';\r\n\r\nconst autoAddMoreDefault = 'end';\r\ntype TypeAutoAddMore = null | 'start' | 'end' | true; //  [true: used to be right/start]\r\nconst hoverDefault = 'right';\r\ntype TypeHover = 'left' | 'right' | 'none';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const TOOLBAR_SHOW_ALWAYS = 'always';\r\n/**\r\n * @internal\r\n */\r\nexport const TOOLBAR_SHOW_HOVER = 'hover';\r\ntype TypeShow = typeof TOOLBAR_SHOW_ALWAYS | typeof TOOLBAR_SHOW_HOVER;\r\n\r\nconst followDefault = 'default';\r\n/**\r\n * @internal\r\n */\r\nexport const TOOLBAR_FOLLOW_INITIAL = 'initial';\r\n/**\r\n * @internal\r\n */\r\nexport const TOOLBAR_FOLLOW_ALWAYS = 'always';\r\n/**\r\n * @internal\r\n */\r\nexport const TOOLBAR_FOLLOW_SCROLL = 'scroll';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type TypeFollow = 'default' | 'none' | typeof TOOLBAR_FOLLOW_INITIAL | typeof TOOLBAR_FOLLOW_ALWAYS | typeof TOOLBAR_FOLLOW_SCROLL;\r\n\r\n\r\n\r\n/**\r\n * Toolbar behavior settings like float, etc.\r\n * @internal\r\n */\r\nexport class ToolbarSettings {\r\n    /** Automatically add the '...' more button to the toolbar */\r\n    autoAddMore: TypeAutoAddMore = autoAddMoreDefault;\r\n\r\n    /** Hover placement of the toolbar */\r\n    hover: TypeHover = hoverDefault;\r\n\r\n    /** Show behavior (always, hover, ...) */\r\n    show: TypeShow = TOOLBAR_SHOW_HOVER;\r\n\r\n    /** Follow behavior - if the toolbar should scroll with the page or remain where it was hovered */\r\n    follow: TypeFollow = followDefault;\r\n\r\n    /**\r\n     * Old term, keep for compatibility. Please use `.class` instead\r\n     * @obsolete\r\n     */\r\n    classes: string = '';\r\n\r\n    /**\r\n     * Term for the class for simplicity and consistency with button styling\r\n     * New 10.27\r\n     */\r\n    class: string = '';\r\n\r\n    /**\r\n     * color configuration which applies to all buttons\r\n     * use \"colorname\", \"#xxyyzz\" or \"color1,color2\" to specify the colors\r\n     * New in 10.27\r\n     */\r\n    color?: string = '';\r\n\r\n    /**\r\n     * modifiers for the buttons\r\n     * Should never be set from the page, but the toolbar initializer will set this\r\n     * New in 10.27\r\n     */\r\n    _rules?: RuleManager;\r\n\r\n    constructor(defaults: Partial<ToolbarSettings>) { // } { autoAddMore?: TypeAutoAddMore, hover?: TypeHover, show?: TypeShow, follow?: TypeFollow }) {\r\n        if (defaults != null) {\r\n            if (defaults.autoAddMore) this.autoAddMore = defaults.autoAddMore;\r\n            if (defaults.hover) this.hover = defaults.hover;\r\n            if (defaults.show)  this.show = defaults.show;\r\n            if (defaults.follow) this.follow = defaults.follow;\r\n        }\r\n        // Swap the real follow-default to be \"none\"\r\n        if (this.follow === followDefault) this.follow = 'none';\r\n    }\r\n\r\n\r\n    /**\r\n     * removes autoAddMore and classes if are null or empty, to keep same behaviour like in v1\r\n     *\r\n     * Note 2dm: not sure why we're doing this, but it seems like we only need this to merge\r\n     * various objects, so we probably want to make sure the in-html-toolbar doesn't accidentally\r\n     * contain null-items we don't want passed on\r\n     * @param toolbarSettings\r\n     */\r\n    static dropEmptyProperties(toolbarSettings: ToolbarSettings): Partial<ToolbarSettings> {\r\n        const partialSettings = {...toolbarSettings};\r\n        if (!partialSettings.autoAddMore) delete partialSettings.autoAddMore;\r\n        if (!partialSettings.classes) delete partialSettings.classes;\r\n        return partialSettings;\r\n    }\r\n\r\n    static getDefaults = () => new ToolbarSettings({ autoAddMore: 'end', hover: 'right', show: 'hover', follow: 'default' });\r\n\r\n    /** Setup for situations where an empty toolbar is needed, without any data or configuration */\r\n    static getForEmpty = () => new ToolbarSettings({ autoAddMore: 'start', hover: 'left', show: 'hover', follow: 'default' });\r\n}\r\n\r\n\r\n// TODO: this is in the wrong place, shouldn't be in settings\r\n/**\r\n * @internal\r\n */\r\nexport const ToolbarWhenNoToolbarProvided = {\r\n  toolbar: {} as ToolbarTemplate,\r\n  settings: ToolbarSettings.getForEmpty(),\r\n} as ToolbarInitConfig;\r\n","import { WorkflowStep, WorkflowPhases, WorkflowArguments, WorkflowStepHelper } from '.';\r\nimport { SpecialCommands } from '../commands';\r\nimport { ContextComplete } from '../context';\r\nimport { HasLog, Insights, Log } from '../logging';\r\nimport { ToolbarWithWorkflow } from './toolbar-with-workflow';\r\nimport { WorkflowCode } from './workflow';\r\nimport { WorkflowHelper } from './workflow-helper';\r\n\r\n/**\r\n * A workflow manager which will run stuff before / after commands.\r\n * As of now, it must be attached to a toolbar to take effect.\r\n * Normally the toolbar with raise a `toolbar-init` event where you can then add steps\r\n * @internal\r\n */\r\nexport class WorkflowManager extends HasLog {\r\n\r\n    /** The workflow steps registered here */\r\n    steps: WorkflowStep[] = [];\r\n\r\n    constructor(parentLog: Log, private isDummy = false) {\r\n        super('Cmd.Wrkflw', parentLog, 'constructor');\r\n    }\r\n\r\n    /**\r\n     * Add one or many steps to the workflow\r\n     */\r\n    // @publicApi(\"Used publicly on the Workflow-object in toolbar-init\")\r\n    add(steps: WorkflowStep | WorkflowStep[]) {\r\n        if (!steps) return;\r\n        if (Array.isArray(steps)) {\r\n            steps.forEach((s) => this.addOne(s));\r\n        } else\r\n            this.addOne(steps);\r\n    }\r\n\r\n    /**\r\n     * Add a single workflow step to this manager\r\n     */\r\n    private addOne(step: WorkflowStep) {\r\n        step = WorkflowStepHelper.initDefaults(step);\r\n        const cl = this.log.call('add', `'${step.name}' for '${step.command}'-'${step.phase}'`);\r\n        if (!step) {\r\n            const errorMsg = \"Trying to add workflow step but didn't get anything\";\r\n            cl.add(errorMsg);\r\n            throw errorMsg;\r\n        }\r\n        this.steps.push(step);\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * Run a workflow.\r\n     * @returns {Promise<WorkflowArguments>} This will let you chain what happens. The arguments contain a status if it should be cancelled.\r\n     */\r\n    run(wfArgs: WorkflowArguments): Promise<WorkflowArguments> {\r\n        const cl = this.log.call('run', `'${wfArgs.command}' for '${wfArgs.phase}'`);\r\n\r\n        // if this is just a temporary / dummy workflow manager, just return a success-promise\r\n        if (this.isDummy) {\r\n            cl.done('Dummy workflow, nothing to run, will return a resolved promise');\r\n            return emptyWorkflow(wfArgs);\r\n        }\r\n\r\n        // Find all steps to run\r\n        const stepsForCommand = this.steps\r\n            // only those of this command or all\r\n            .filter((s) => s.command === wfArgs.command || s.command === SpecialCommands.all)\r\n            .filter((s) => s.phase === wfArgs.phase || s.phase === WorkflowPhases.all)\r\n            // only those having real code\r\n            .filter((s) => s.code)\r\n            .sort((s) => s.priority);\r\n\r\n        if (stepsForCommand.length === 0) {\r\n            cl.done('no steps found for this command / phase, will return a resolved promise');\r\n            return emptyWorkflow(wfArgs);\r\n        }\r\n\r\n        // run in sequence but cancel at any time if necessary\r\n        const promise = new Promise<WorkflowArguments>((resolve, reject) => {\r\n            let promiseChain = Promise.resolve(wfArgs);\r\n            // let previousArgs = wfArgs;\r\n            // let interruptChain = false;\r\n            for (let stepCount = 0; stepCount < stepsForCommand.length; stepCount++) {\r\n                const nextStep = stepsForCommand[stepCount];\r\n                promiseChain = promiseChain.then((resultingArgs) => {\r\n                    return this.runNextPromiseIfNotCancelled(resultingArgs, wfArgs, nextStep.code);\r\n                });\r\n            }\r\n\r\n            promiseChain.then((finalArgs) => { resolve(finalArgs); });\r\n            promiseChain.catch(reject);\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    /** Attach a workflow to a toolbar */\r\n    attach(node: HTMLElement, context: ContextComplete) {\r\n        const cl = this.log.call('attach');\r\n        if (!node) return;\r\n        (node as ToolbarWithWorkflow).commandWorkflow = this;\r\n        Insights.add('workflow', context.toolbar?.identifier, this.log);\r\n        cl.done();\r\n    }\r\n\r\n    private runNextPromiseIfNotCancelled(currentArgs: WorkflowArguments | boolean, prevArgs: WorkflowArguments, nextFactory: WorkflowCode) {\r\n        // determine cancel based on either a boolean result or a real WorkflowArguments with cancel.\r\n        const cancel = WorkflowHelper.isCancelled(currentArgs);\r\n        // make sure we have real arguments no matter what came in - assuming we have prevArgs\r\n        currentArgs = (currentArgs && typeof(currentArgs) !== 'boolean') ? currentArgs : { ...prevArgs };\r\n        // in case the cancel came as boolean, we must now set it on the currentArgs\r\n        currentArgs.cancel = cancel;\r\n        return cancel ? emptyWorkflow(currentArgs) : nextFactory(currentArgs);\r\n    }\r\n\r\n}\r\n\r\nfunction emptyWorkflow(wfArgs: WorkflowArguments) {\r\n    return Promise.resolve<WorkflowArguments>(wfArgs);\r\n}\r\n","import { WorkflowPhases } from '.';\r\nimport { ContextComplete } from '../context';\r\n\r\n\r\n/**\r\n * Arguments for a workflow. Used when starting it and to determine result / cancelled.\r\n *\r\n * @export\r\n * @class WorkflowArguments\r\n * @internal\r\n */\r\nexport class WorkflowArguments {\r\n    constructor(\r\n        /** Name this workflow is running for */\r\n        public command: string,\r\n\r\n        /** The phase it's in (before, after, etc.) */\r\n        public phase: WorkflowPhases,\r\n\r\n        /** Context of the current command / step being run */\r\n        public context: ContextComplete,\r\n\r\n        /**\r\n         * Result in after-phases of the workflow\r\n         * BETA - never really tested this\r\n         */\r\n        public result: unknown = null,\r\n        ) {\r\n\r\n    }\r\n\r\n    /** If the workflow should be cancelled. Can be set by any workflow step. */\r\n    cancel: boolean = false;\r\n}\r\n","/**\r\n * Phases / events of a specific workflow.\r\n * @export\r\n * @enum {number}\r\n * @internal\r\n */\r\nexport enum WorkflowPhases {\r\n    all = 'all',\r\n    before = 'before',\r\n    after = 'after',\r\n}\r\n","import { WorkflowArguments, WorkflowPhases } from '.';\r\nimport { SpecialCommands } from '../commands';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type PromiseFactory<T> = (args: T) => Promise<T>;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type WorkflowPromiseFactory = PromiseFactory<WorkflowArguments>;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type WorkflowCode = (args: WorkflowArguments) => WorkflowArguments;\r\n\r\n/**\r\n * A workflow step (code-sequence) to run before/after specific events.\r\n * @internal\r\n */\r\nexport interface WorkflowStep {\r\n  /**\r\n   * The name of this step, in case it needs to be replaced or somehow controlled\r\n   * Will be empty by default\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * The action this step is for, can be 'any', 'edit', etc.\r\n   * Will be 'all' by default\r\n   */\r\n  command: string;\r\n\r\n  /**\r\n   * Action-phase being run, like 'all', 'before', 'after'\r\n   * will be 'before' by default\r\n   */\r\n  phase?: WorkflowPhases;\r\n\r\n  /**\r\n   * Execution priority, higher comes first\r\n   * Will be 1 by default.\r\n   */\r\n  priority?: number;\r\n\r\n  /**\r\n   * The code which is run, must be a promise-factory.\r\n   * So it's a function that will return a promise.\r\n   * Required.\r\n   */\r\n  code: WorkflowCode;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class WorkflowStepHelper {\r\n  static initDefaults(step: WorkflowStep) {\r\n    step.name = step.name ?? '';\r\n    step.command = step.command ?? SpecialCommands.all;\r\n    step.phase = step.phase ?? WorkflowPhases.before;\r\n    step.priority = step.priority ?? 1;\r\n    if (!step.code || typeof(step.code) !== 'function')\r\n      throw \"Tried preparing a workflow step, but the promise either doesn't exist or is not a promise factory\";\r\n    return step;\r\n  }\r\n}\r\n","import { ToolbarEventArguments } from '.';\r\nimport { C } from '../constants';\r\nimport { ContextComplete } from '../context';\r\nimport { WorkflowManager } from '../workflow';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ToolbarLifecycle {\r\n\r\n    /**\r\n     * This will be triggered when a hover toolbar has been built,\r\n     * so that on-page JS can register workflows for this toolbar.\r\n     * @static\r\n     * @param {HTMLElement} toolbarElement The toolbar HTML DOM passed into the event\r\n     * @param {HTMLElement} anchoredElement The DOM element which had the @Edit.TagToolbar(...) - on which the event will be raised\r\n     * @param {ContextComplete} context The toolbar context\r\n     * @memberof ToolbarLifecycle\r\n     */\r\n    static raiseToolbarInitEvent(toolbarElement: HTMLElement, anchoredElement: HTMLElement, context: ContextComplete) {\r\n        const commandWorkflow = new WorkflowManager(null);\r\n        commandWorkflow.attach(toolbarElement, context);\r\n\r\n        const event = new CustomEvent(C.Toolbar.eventNames.onInit, {\r\n            bubbles: true,  // Important so it can be handled by a parent tag\r\n            detail: {\r\n                // type: ToolbarTypes.tag,\r\n                element: toolbarElement,\r\n                identifier: context.toolbar?.identifier,\r\n                workflow: commandWorkflow,\r\n            } as ToolbarEventArguments,\r\n        });\r\n        anchoredElement?.dispatchEvent(event);\r\n    }\r\n}\r\n","import { TagToolbarManager, ToolbarRenderer } from '..';\r\nimport { ContextComplete } from '../../context/bundles/context-bundle-button';\r\nimport { Translator } from '../../i18n';\r\nimport { NoJQ } from '../../plumbing';\r\nimport { TOOLBAR_FOLLOW_ALWAYS, TOOLBAR_FOLLOW_INITIAL, TOOLBAR_FOLLOW_SCROLL, TOOLBAR_SHOW_ALWAYS, TypeFollow } from '../config/toolbar-settings';\r\nimport { ToolbarLifecycle } from '../toolbar-lifecycle';\r\n\r\n/**\r\n * This is the modern toolbar which is attached to a tag from whic it hovers.\r\n * Internally the toolbar Dom-Elements are hidden at the bottom of the page.\r\n * This object is responsible for creating them,\r\n * and making sure that hover-events etc. cause the right toolbar to show up.\r\n * @internal\r\n */\r\nexport class TagToolbar {\r\n    private toolbarElement = null as HTMLElement;\r\n    private initialized = false;\r\n    private follow: TypeFollow;\r\n    private alwaysShow = false;\r\n\r\n    /**\r\n     * A Tag-Toolbar which is outside of the module DOM and floating freely\r\n     * @param {HTMLElement} hoverTag\r\n     * @param {ContextComplete} context\r\n     * @param {typeof Translator} [translator] special translator, only included because otherwise WebPack causes circular references\r\n     * @memberof TagToolbar\r\n     */\r\n    constructor(private readonly hoverTag: HTMLElement, private readonly context: ContextComplete, private translator?: typeof Translator) {\r\n        this.follow = context.toolbar.settings.follow;\r\n        this.alwaysShow = context.toolbar.settings.show === TOOLBAR_SHOW_ALWAYS;\r\n        // Ensure toolbar gets visible when hovering\r\n        this.addMouseEvents(hoverTag);\r\n        if (this.alwaysShow) this.showPermanently();\r\n    }\r\n\r\n    /**\r\n     * Attach Mouse-Enter and Mouse-Leave events to ensure show/hide of the toolbar\r\n     */\r\n    private addMouseEvents(hoverTag: HTMLElement) {\r\n        hoverTag.addEventListener('mouseenter', () => { this.show(); });\r\n        if (!this.alwaysShow)\r\n            hoverTag.addEventListener('mouseleave', (e) => {\r\n                this.initializeIfNecessary();\r\n                // if we hover the menu itself now, don't hide it\r\n                const relatedTarget = e.relatedTarget as HTMLElement;\r\n                if (!this.toolbarElement.contains(relatedTarget) && this.toolbarElement !== relatedTarget)\r\n                    this.hide();\r\n            });\r\n    }\r\n\r\n\r\n    private initializeIfNecessary() {\r\n        if (this.initialized) return;\r\n\r\n        const nextFreeId = TagToolbarManager.getNextToolbarId();\r\n        const toolbarId = `${this.context.instance.id}-${this.context.contentBlockReference.id}-${nextFreeId}`;\r\n\r\n        // render toolbar and append tag to body\r\n        this.toolbarElement = new ToolbarRenderer(this.context).generate();\r\n\r\n        // 2021-11-15 2dm disabled this, seems like a duplicate to the attach-mouse-enter which always runs\r\n        if (!this.alwaysShow)\r\n            this.toolbarElement.addEventListener('mouseleave', (e) => {\r\n                // if we do not hover the tag now, hide it\r\n                const relatedTarget = e.relatedTarget as HTMLElement;\r\n                if (!this.hoverTag.contains(relatedTarget) && this.hoverTag !== relatedTarget)\r\n                    this.hide();\r\n            });\r\n\r\n        document.body.append(this.toolbarElement);\r\n\r\n        this.toolbarElement.setAttribute(TagToolbarManager.TagToolbarForAttr, toolbarId);\r\n        this.hoverTag.setAttribute(TagToolbarManager.TagToolbarAttr, toolbarId);\r\n\r\n        const toolbarStyle = this.toolbarElement.style;\r\n        toolbarStyle.position = 'absolute';\r\n        // Do the following things on toolbars which are invisible (show != always)\r\n        if (!this.alwaysShow) {\r\n            toolbarStyle.display = 'none';\r\n            toolbarStyle.transition = 'top 0.5s ease-out';\r\n        }\r\n\r\n        // ensure it's translated\r\n        this.translator?.autoTranslateMenus();\r\n        this.initialized = true;\r\n\r\n        // new in v11.12 - toolbar Workflow\r\n        ToolbarLifecycle.raiseToolbarInitEvent(this.toolbarElement, this.hoverTag, this.context);\r\n    }\r\n\r\n    private updatePosition(initial: boolean) {\r\n        const position = {\r\n            top: 'auto' as 'auto' | number,\r\n            left: 'auto' as 'auto' | number,\r\n            right: 'auto' as 'auto' | number,\r\n            viewportOffset: this.hoverTag.getBoundingClientRect().top,\r\n            bodyOffset: TagToolbarManager.getBodyScrollOffset(),\r\n            tagScrollOffset: 0,\r\n            tagOffset: NoJQ.offset(this.hoverTag),\r\n            tagWidth: NoJQ.outerWidth(this.hoverTag),\r\n            mousePos: TagToolbarManager.mousePosition,\r\n            win: {\r\n                scrollY: window.scrollY,\r\n                width: document.documentElement.clientWidth,\r\n            },\r\n            padding: tagToolbarPadding,\r\n        };\r\n\r\n        // If we scrolled down, the toolbar might not be visible - calculate offset\r\n        position.tagScrollOffset = Math.min(position.viewportOffset - position.bodyOffset.top, 0);\r\n\r\n        // Update top coordinates\r\n        // new: only do this on initial=true && follow != 'none' or not-initial\r\n        // start by setting default-top\r\n        position.top = position.tagOffset.top + tagToolbarPadding - position.bodyOffset.top;\r\n        const trackMouse = (this.follow === TOOLBAR_FOLLOW_ALWAYS)\r\n            || (this.follow === TOOLBAR_FOLLOW_INITIAL && initial)\r\n            || (this.follow === TOOLBAR_FOLLOW_SCROLL && position.tagScrollOffset !== 0);\r\n        if (trackMouse)\r\n            position.top = position.mousePos.y + position.win.scrollY - position.bodyOffset.top - toolbarHeight / 2;\r\n\r\n        // Update left / right coordinates\r\n        if (this.toolbarElement.classList.contains('sc-tb-hover-right'))\r\n            position.right = position.win.width - position.tagOffset.left - position.tagWidth + tagToolbarPaddingRight - position.bodyOffset.left;\r\n        else\r\n            position.left = position.tagOffset.left + tagToolbarPadding + position.bodyOffset.left;\r\n\r\n        this.toolbarElement.style.top = typeof position.top === 'number' ? `${position.top}px` : position.top;\r\n        this.toolbarElement.style.left = typeof position.left === 'number' ? `${position.left}px` : position.left;\r\n        this.toolbarElement.style.right = typeof position.right === 'number' ? `${position.right}px` : position.right;\r\n    }\r\n\r\n\r\n    /**\r\n     * Hide the toolbar and detach scrolling-watcher\r\n     */\r\n    private hide() {\r\n        if (this.alwaysShow) return;\r\n        this.toolbarElement.style.display = 'none';\r\n        this.disableScrollWatcher();\r\n    }\r\n\r\n\r\n    /**\r\n     * Show the toolbar\r\n     */\r\n    private show() {\r\n        // console.log('show');\r\n        this.initializeIfNecessary();\r\n        this.toolbarElement.style.display = 'block';\r\n        this.updatePosition(true);\r\n        this.activateScrollWatcher();\r\n    }\r\n\r\n    /**\r\n     * Always show the toolbar.\r\n     */\r\n    private showPermanently() {\r\n        // console.log('show permanently');\r\n        this.show();\r\n        // after a moment, adjust position because often initial position is a bit off\r\n        window.addEventListener('load', this.updateFn);\r\n        document.addEventListener('readystatechange', this.updateFn);\r\n        // Also watch resizing, as the position would be wrong otherwise\r\n        window.addEventListener('resize', this.updateFn);\r\n    }\r\n\r\n    /** Remember if scrollwatcher has been enabled */\r\n    private watcherActive = false;\r\n    /** The update function as a prebuild function, so it can be reused in on/off */\r\n    private updateFn = () => this.updatePosition(false);\r\n    /** Enable scroll watcher & remember */\r\n    private activateScrollWatcher() {\r\n        if (this.watcherActive) return;\r\n        const trackOngoing = this.follow === TOOLBAR_FOLLOW_SCROLL || this.follow === TOOLBAR_FOLLOW_ALWAYS;\r\n        if (!trackOngoing) return;\r\n        window.addEventListener('scroll', this.updateFn);\r\n        if (this.follow === TOOLBAR_FOLLOW_ALWAYS) window.addEventListener('mousemove', this.updateFn);\r\n        this.watcherActive = true;\r\n    }\r\n\r\n    /** Disable scroll watcher - if it is active */\r\n    private disableScrollWatcher() {\r\n        if (!this.watcherActive) return;\r\n        window.removeEventListener('scroll', this.updateFn);\r\n        window.removeEventListener('mousemove', this.updateFn);\r\n        this.watcherActive = false;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst tagToolbarPadding = 4;\r\nconst tagToolbarPaddingRight = 0;\r\nconst toolbarHeight = 20;\r\n","import { NoJQ } from '../../plumbing';\r\n\r\n/**\r\n * The global Tag Toolbar Manager is responsible for the new TagToolbars\r\n * These have certain shared aspects, like:\r\n * - a numbering scheme to keep them apart\r\n * - a mouse tracker to keep track of the position as the toolbar follows the scroll\r\n * @internal\r\n */\r\nexport class TagToolbarManager {\r\n    /** Mark Dom-Notes with the ID which Tag-Toolbar they want on mouse-over */\r\n    static TagToolbarAttr = 'data-tagtoolbar';\r\n\r\n    /** Mark TagToolbar Html-Nodes with the ID of the Dom-Tag they belong to */\r\n    static TagToolbarForAttr = 'data-tagtoolbar-for';\r\n\r\n    /** The current mouseposition, always updated when the mouse changes */\r\n    static mousePosition = {\r\n        x: 0,\r\n        y: 0,\r\n    };\r\n\r\n    /** The next free ID to mark a TagToolbar */\r\n    static getNextToolbarId() {\r\n        return TagToolbarManager.lastMenuId++;\r\n    }\r\n    private static lastMenuId = 0;\r\n\r\n    /**\r\n     * Returns the body offset if positioning is relative or absolute\r\n     */\r\n    static getBodyScrollOffset() {\r\n        const posNoJq = document.body.style.position;\r\n        const body = document.body;\r\n        const bodyPos = posNoJq; // body.css('position');\r\n        if (bodyPos === 'relative' || bodyPos === 'absolute') {\r\n            const offset = NoJQ.offset(body);\r\n            return {\r\n                top: offset.top,\r\n                left: offset.left,\r\n            };\r\n        }\r\n        return {\r\n            top: 0,\r\n            left: 0,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Remove orphan tag-toolbars from DOM\r\n     * This can be necessary if the module was replaced by ajax,\r\n     * leaving behind un-attached TagToolbars.\r\n     */\r\n    static CleanupOrphanedToolbars() {\r\n        const tagToolbars = document.querySelectorAll<HTMLElement>(`[${TagToolbarManager.TagToolbarForAttr}]`);\r\n        tagToolbars.forEach((e) => {\r\n            const id = e.getAttribute(TagToolbarManager.TagToolbarForAttr);\r\n            if (!document.querySelectorAll<HTMLElement>(`[${TagToolbarManager.TagToolbarAttr}=\"${id}\"]`).length) {\r\n                e.remove();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Keep the mouse-position update for future use\r\n */\r\nwindow.addEventListener('mousemove', (e) => {\r\n    TagToolbarManager.mousePosition.x = e.clientX;\r\n    TagToolbarManager.mousePosition.y = e.clientY;\r\n});\r\n","import { Command } from '../../commands/command';\r\nimport { CommandParams } from '../../commands/command-params';\r\nimport { Commands } from '../../commands/commands';\r\nimport { DictionaryValue } from '../../plumbing';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ButtonCommand {\r\n    readonly command: Command; // reference to action to be run\r\n\r\n    // customCode: string;\r\n\r\n    constructor(public name: string, contentType?: string, public params?: CommandParams) {\r\n        if (!params) this.params = {};\r\n        if (contentType) this.params.contentType = contentType;\r\n        this.command = Commands.singleton().get(name); // activate command for this\r\n    }\r\n\r\n    /** make static, as many ButtonCommand signatures are actually not objects */\r\n    static mergeAdditionalParams(command: ButtonCommand, additionalParams: DictionaryValue): CommandParams {\r\n        let params: CommandParams = {};\r\n        if (command) {\r\n            if (command.name) params.action = command.name;\r\n            if (command.params) params = {...params, ...command.params, ...additionalParams};\r\n        }\r\n        command.params = params;\r\n        return params;\r\n    }\r\n}\r\n","import { ButtonCommand } from '.';\r\nimport { CommandCode } from '../../commands/command-code';\r\nimport { CommandLinkGenerator } from '../../commands/command-link-generator';\r\nimport { CommandParams } from '../../commands/command-params';\r\nimport { ContextComplete } from '../../context/bundles/context-bundle-button';\r\nimport { Obj, TypeTbD } from '../../plumbing';\r\nimport { BuildRule } from '../rules';\r\n\r\n/**\r\n * This is the most common call signature on most ButtonConfig properties\r\n * @internal\r\n */\r\nexport type ButtonPropGen<T> = (context: ContextComplete) => T;\r\n\r\ntype ButtonGenOrProp<T> = ButtonPropGen<T> | T;\r\n\r\n/**\r\n * The real button configuration as it's used at runtime\r\n * @internal\r\n */\r\nexport class Button {\r\n    /** The ID is important for tracking this button and applying modifiers */\r\n    id: string;\r\n\r\n    /** The underlying command which will be run */\r\n    command: ButtonCommand;\r\n\r\n    /** classes which will be applied to this button */\r\n    classes: string = '';\r\n\r\n    constructor(command: ButtonCommand, name: string) {\r\n        this.command = command;\r\n        // if the name is an identifier, split it\r\n        const parts = Button.splitName(name);\r\n        this.id = parts.id;\r\n        // this.name = parts.name;\r\n        // get defaults from action commandDefinition\r\n        if (command?.command?.buttonDefaults)\r\n            Obj.TypeSafeAssign(this, command.command.buttonDefaults);\r\n    }\r\n\r\n    static splitName(identifier: string): { id: string, name: string} {\r\n        const parts = identifier.split('=');\r\n        return { id: parts[0], name: parts[1] || identifier};\r\n    }\r\n\r\n    /** Configure the link generator before it creates the link */\r\n    configureLinkGenerator: (context: ContextComplete, linkGenerator: CommandLinkGenerator) => void;\r\n\r\n    /** The dialog name */\r\n    dialog?: ButtonGenOrProp<string>;\r\n\r\n    /** Check if full-screen, always a function */\r\n    fullScreen?: ButtonPropGen<boolean>;\r\n\r\n    /** Determines if the button should be disabled */\r\n    disabled?: ButtonGenOrProp<boolean>;\r\n\r\n    /** Dynamicaly determine classes - must always be a function */\r\n    dynamicClasses: ButtonPropGen<string>;\r\n\r\n    /** The icon to show in the button */\r\n    icon?: ButtonGenOrProp<string>;\r\n\r\n    /** Determine if it should use the inline window, always a function */\r\n    inlineWindow?: ButtonPropGen<boolean> = () => false;\r\n\r\n    /** Check if we should open a new window, always an FN */\r\n    newWindow?: ButtonPropGen<boolean>;\r\n\r\n    /** Method which determines if it should be shown or not */\r\n    showCondition?: ButtonPropGen<boolean>;\r\n\r\n    /** The title of this button which will usually be i18n keys */\r\n    title?: ButtonPropGen<string>;\r\n\r\n    /** Determines if this button runs in the page - affecting publishing */\r\n    partOfPage?: ButtonPropGen<boolean>;\r\n\r\n    /** The code to run for this button - if empty, will default to open a dialog */\r\n    code?: CommandCode;\r\n\r\n    /**\r\n     * Additional parameters which are used to RUN the command.\r\n     * So it's not used when preparing a toolbar button, but only when executing\r\n     */\r\n    addParamsToLink?: ButtonPropGen<CommandParams>;\r\n\r\n    /** this is just a UI interaction, won't create data so won't need pre-flight */\r\n    uiActionOnly: ButtonPropGen<boolean>;\r\n\r\n\r\n\r\n    /** Detect if this is a Button */\r\n    static is(thing: TypeTbD): thing is Button {\r\n        return (thing as Button).command !== undefined;\r\n    }\r\n\r\n    static isArray(thing: TypeTbD): thing is Button[] {\r\n        return thing.length && Button.is(thing[0]);\r\n    }\r\n\r\n    static isPropGen<T>(thing: ButtonGenOrProp<T>): thing is ButtonPropGen<T> {\r\n        return typeof thing === 'function';\r\n    }\r\n}\r\n\r\n","import { Button, ButtonPropGen } from '.';\r\nimport { ContextComplete } from '../../context/bundles/context-bundle-button';\r\nimport { isNothing } from '../../plumbing';\r\n\r\n/**\r\n * Special helper to read a button configuration\r\n * and make sure that all properties have the correct fallback values\r\n * @internal\r\n */\r\nexport class ButtonSafe {\r\n    constructor(private button: Button, private context: ContextComplete) {\r\n    }\r\n\r\n    action = () => this.button.command;\r\n\r\n    classes = () => this.button.classes || '';\r\n\r\n    /** The dialog name - should default to the name */\r\n    dialog = () => getVal (this.button.dialog, this.context, this.button.command.name);\r\n\r\n    /** Determines if the button should be disabled */\r\n    disabled = () => getVal (this.button.disabled, this.context, false);\r\n\r\n    /** Dynamicaly determine classes - must always be a function */\r\n    dynamicClasses = () => getVal (this.button.dynamicClasses, this.context, '');\r\n\r\n    /** Check if full-screen, always a function */\r\n    fullScreen = () => getVal (this.button.fullScreen, this.context, false);\r\n\r\n    /** The icon to show in the button */\r\n    icon = () => getVal (this.button.icon, this.context, '');\r\n\r\n    /** Determine if it should use the inline window, always a function */\r\n    inlineWindow = () => getVal (this.button.inlineWindow, this.context, false);\r\n\r\n    /** Check if we should open a new window, always an FN */\r\n    newWindow = () => getVal (this.button.newWindow, this.context, false);\r\n\r\n    /** The parameters which are used to run the command */\r\n    addParamsToLink = () => getVal (this.button.addParamsToLink, this.context, {});\r\n\r\n\r\n    /** Determines if this button runs in the page - affecting publishing */\r\n    partOfPage = () => getVal (this.button.partOfPage, this.context, false);\r\n\r\n\r\n    /** Method which determines if it should be shown or not */\r\n    showCondition = () => getVal (this.button.showCondition, this.context, true);\r\n\r\n\r\n    /** The title of this button which will usually be i18n keys */\r\n    title = () => getVal (this.button.title, this.context, 'unknown-title');\r\n\r\n    /** this is just a UI interaction, won't create data so won't need pre-flight */\r\n    uiActionOnly = () => getVal (this.button.uiActionOnly, this.context, true);\r\n\r\n}\r\n\r\n\r\n/** Evaluate a property or generator and return the property */\r\nfunction getVal<T>(propOrGen: ButtonPropGen<T> | T, ctx: ContextComplete, fallback: T): T {\r\n    if (isNothing(propOrGen)) return fallback;\r\n    const result = (Button.isPropGen(propOrGen) ? propOrGen(ctx) : propOrGen);\r\n    return result === undefined ? fallback : result;\r\n}\r\n","// These types here are alias-types used for conversions and casting\r\n// We created aliases, so we can specifically see where/why we are doing this\r\n\r\n/**\r\n * TypeTbd is a replacement for the any-type, in places where we explicitly want to check the type\r\n * @internal\r\n */\r\nexport type TypeTbD = any;\r\n\r\n/**\r\n * TypeUnsafe is used in code where we explicitly want to cast to any and then to something else\r\n * @internal\r\n */\r\nexport type TypeUnsafe = any;\r\n\r\n/**\r\n * TypeWeDontCare is used in places where we really want to cast something to any\r\n * @internal\r\n */\r\nexport type TypeWeDontCare = any;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function isNothing(thing: unknown) {\r\n    return thing === undefined || thing === null;\r\n}\r\n","import { Button } from '.';\r\nimport { DictionaryValue, TypeTbD } from '../../plumbing';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ButtonGroup {\r\n    /**\r\n     * Group name - for identification\r\n     * It's automatically set if using toolbar templates, otherwise it'll probably be undefined\r\n     */\r\n    name?: string;\r\n\r\n    defaults: DictionaryValue = {};\r\n\r\n    constructor(public buttons: Button[]) {\r\n        // adds these to the items\r\n        this.buttons = buttons || [];\r\n    }\r\n\r\n    /** Detect if this is a ButtonGroup */\r\n    static is(thing: TypeTbD): thing is ButtonGroup {\r\n        return (thing as ButtonGroup).buttons !== undefined;\r\n    }\r\n\r\n    /** Detect if this is a ButtonGroup */\r\n    static isArray(thing: TypeTbD[]): thing is ButtonGroup[] {\r\n        return thing.length && (thing[0] as ButtonGroup).buttons !== undefined;\r\n    }\r\n}\r\n","import { ButtonGroup, ToolbarSettings } from '.';\r\nimport { DictionaryValue } from '../../plumbing';\r\n\r\n/**\r\n * Runtime configuration of the toolbar.\r\n * contains a toolbar config + settings + mny groups\r\n * @internal\r\n */\r\nexport class Toolbar {\r\n    /** Toolbar ID to better identify which toolbar we're looking at - has special long name to never confuse with other IDs */\r\n    identifier: string;\r\n\r\n    /** The groups of buttons in this toolbar */\r\n    groups: ButtonGroup[] = [];\r\n\r\n    /** Setttings like floating of toolbar, etc. */\r\n    settings: ToolbarSettings;\r\n\r\n    /** Params for the commands, like EntityId, Content - Type - Name */\r\n    params: DictionaryValue;\r\n\r\n    /** show more debug info */\r\n    debug?: boolean = false;\r\n\r\n    /**  the button defaults like icon, etc. */\r\n    defaults: DictionaryValue;\r\n\r\n    constructor() {\r\n        this.identifier = Toolbar.createIdentifier();\r\n    }\r\n\r\n    static createIdentifier() {\r\n        return 'Toolbar' + Math.floor(Math.random() * 99999);\r\n    }\r\n}\r\n","import { HasLog } from '../../logging';\r\nimport { ToolbarRenderer } from './toolbar-renderer';\r\n\r\n/**\r\n * Base class for inner part renderers.\r\n * The goal is that we have the code in own objects, but that these can only be used\r\n * from the primary parent object of the type ToolbarRenderer\r\n *\r\n * @export\r\n * @class RenderPart\r\n * @internal\r\n */\r\nexport class RenderPart extends HasLog {\r\n    constructor(protected parent: ToolbarRenderer, logName: string) {\r\n        super(logName, parent.log);\r\n    }\r\n\r\n}\r\n","import { CommandParams } from '../../commands';\r\nimport { ContextComplete } from '../../context/bundles/context-bundle-button';\r\nimport { HtmlTools } from '../../html/dom-tools';\r\nimport { ButtonCommand, ButtonSafe } from '../config';\r\nimport { BuildRule } from '../rules/rule';\r\nimport { RenderPart } from './render-part-base';\r\nimport { ToolbarRenderer } from './toolbar-renderer';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RenderButton extends RenderPart {\r\n    constructor(parent: ToolbarRenderer) {\r\n        super(parent, 'Rnd.Button');\r\n    }\r\n\r\n    render(ctx: ContextComplete, groupIndex: number): HTMLElement {\r\n        const cl = this.log.call('render', `contex: obj, group: ${groupIndex}, btn: ${ctx.button.id}/${ctx.button.command?.name}`);\r\n        const btnSafe = new ButtonSafe(ctx.button, ctx);\r\n\r\n        // check if we have rules and merge params into the button\r\n        const rule = ctx.toolbar?.settings?._rules?.find(ctx.button.id);\r\n        if (rule) cl.data('rule found, will try to merge params', rule);\r\n        const params = ButtonCommand.mergeAdditionalParams(btnSafe.action(), rule?.params);\r\n\r\n\r\n        const group = ctx.toolbar?.groups?.[groupIndex];\r\n        const groupName = group?.name;\r\n\r\n        const btnLink = document.createElement('a');\r\n\r\n        const disabled = btnSafe.disabled();\r\n\r\n        // put call as plain JavaScript to preserve even if DOM is serialized\r\n        if (!disabled) btnLink.setAttribute('onclick', this.generateRunJs(rule, ctx , params));\r\n\r\n        // Add various classes\r\n        const classes = (disabled ? ' disabled' : '')\r\n            + (btnSafe.action() ? ` sc-${btnSafe.action().name}` : '')\r\n            + ` in-group-${groupIndex}`\r\n            + (groupName ? ` in-group-${groupName}` : '')\r\n            + ' ' + rule?.ui.class\r\n            + ' ' + btnSafe.classes()\r\n            + ' ' + btnSafe.dynamicClasses();\r\n        cl.add('classes: ' + classes);\r\n        HtmlTools.addClasses(btnLink, classes);\r\n\r\n        // set title for button, optionally with i18n\r\n        this.setTitle(rule, btnLink, btnSafe);\r\n\r\n        const divTag = document.createElement('div');\r\n        divTag.appendChild(this.iconTag(btnSafe, rule));\r\n        btnLink.appendChild(divTag);\r\n\r\n        // set color - new in 10.27\r\n        this.processColorRules(rule, ctx, divTag);\r\n\r\n        return cl.return(btnLink);\r\n    }\r\n\r\n\r\n\r\n    private setTitle(rule: BuildRule, btnLink: HTMLAnchorElement, btn: ButtonSafe) {\r\n        const callLog = this.log.call('setTitles');\r\n        const uiTitle = rule?.ui?.title;\r\n        if (uiTitle) {\r\n            callLog.add(`uiTitle: ${uiTitle}`);\r\n            btnLink.setAttribute('title', uiTitle);\r\n        } else {\r\n            const i18nTitle = btn.title();\r\n            callLog.add(`i18nTitle: ${i18nTitle}`);\r\n            if (i18nTitle) btnLink.setAttribute('data-i18n', `[title]${i18nTitle}`);\r\n        }\r\n        callLog.done();\r\n    }\r\n\r\n    private processColorRules(rule: BuildRule, ctx: ContextComplete, divTag: HTMLDivElement) {\r\n        const callLog = this.log.call('processColorRules');\r\n        let color = rule?.ui?.color || ctx.toolbar.settings.color;\r\n\r\n        // catch edge case where the color is something like 808080 - which is treated as a number\r\n        if (color && typeof color === 'number') color = (color as number).toString();\r\n        if (color && typeof color === 'string') {\r\n            const parts = color.split(',');\r\n            if (parts[0]) divTag.style.backgroundColor = correctColorCodes(parts[0]);\r\n            if (parts[1]) divTag.style.color = correctColorCodes(parts[1]);\r\n        }\r\n\r\n        return callLog.done(color ?? 'no color');\r\n    }\r\n\r\n    private generateRunJs(rule: BuildRule, ctx: ContextComplete, params: CommandParams) {\r\n        // 2022-05-18 2dm: #CustomContext New we can override the context\r\n        let modifyContext = rule?.context;\r\n        if (!modifyContext || Object.keys(modifyContext).length === 0)\r\n            modifyContext = undefined;\r\n        else\r\n            modifyContext = { ...modifyContext, complete: true };\r\n        const targetContext = modifyContext ? JSON.stringify(modifyContext) : `${ctx.instance.id}, ${ctx.contentBlockReference.id}`;\r\n        return `$2sxc(${targetContext}).manage.run(${JSON.stringify(params)}, event);`;\r\n    }\r\n\r\n    private iconTag(btn: ButtonSafe, rule: BuildRule) {\r\n        const callLog = this.log.call('iconTag');\r\n        const icon = rule?.ui?.icon || btn.icon();\r\n        if (icon.startsWith('svg:')) {\r\n            const base64 = icon.split('svg:')[1];\r\n            const decoded = atob(base64);\r\n            const symbol = document.createElement('span');\r\n            HtmlTools.addClasses(symbol, 'svg-wrapper');\r\n            symbol.innerHTML = decoded;\r\n            symbol.setAttribute('aria-hidden', 'true');\r\n            return callLog.return(symbol, icon);\r\n        } else {\r\n            const symbol = document.createElement('i');\r\n            HtmlTools.addClasses(symbol, icon);\r\n            symbol.setAttribute('aria-hidden', 'true');\r\n            return callLog.return(symbol, icon);\r\n        }\r\n    }\r\n}\r\n\r\n// detect Hex-colors 6-digits or 8 in case transparent\r\nconst colorDetect = '^([A-Fa-f0-9]{6,8})$';\r\n\r\nfunction correctColorCodes(color: string) {\r\n    if (color && color.match(colorDetect)) return '#' + color;\r\n    return color;\r\n}\r\n","import { ContextBundleToolbar } from '../../context/bundles/context-bundle-toolbar';\r\nimport { ButtonGroup } from '../config';\r\nimport { RenderPart } from './render-part-base';\r\nimport { ToolbarRenderer } from './toolbar-renderer';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RenderButtonGroups extends RenderPart {\r\n    constructor(parent: ToolbarRenderer) {\r\n        super(parent, 'Rnd.Groups');\r\n    }\r\n\r\n    generate(context: ContextBundleToolbar): HTMLElement[] {\r\n        const cl = this.log.call('generate');\r\n        let tags: HTMLElement[] = []; // temporary storage for detached HTML DOM objects\r\n        const btnGroups = context.toolbar.groups;\r\n\r\n        for (let i = 0; i < btnGroups.length; i++)\r\n            tags = tags.concat(this.generateGroup(btnGroups[i], context, i));\r\n\r\n        return cl.return(tags, `total tags: ${tags.length}`);\r\n    }\r\n\r\n    private generateGroup(group: ButtonGroup, context: ContextBundleToolbar, groupNumber: number): HTMLElement[] {\r\n        const cl = this.log.call('generateGroup', `group #${groupNumber}`);\r\n        const tags: HTMLElement[] = []; // temporary storage for detached HTML DOM objects\r\n        const btns = group.buttons;\r\n        for (let h = 0; h < btns.length; h++) {\r\n            const btnContext = context.forButton(btns[h]);\r\n            const tag = this.parent.button.render(btnContext, groupNumber);\r\n            // add button to group of buttons\r\n            const item = document.createElement('li');\r\n            item.appendChild(tag);\r\n            tags.push(item);\r\n        }\r\n        return cl.return(tags, `tags: ${tags.length}`);\r\n    }\r\n}\r\n","import { C } from '../../constants';\r\nimport { ContextBundleToolbar } from '../../context/bundles/context-bundle-toolbar';\r\nimport { HtmlTools } from '../../html/dom-tools';\r\nimport { HasLog, Insights } from '../../logging';\r\nimport { RenderButton } from './render-button';\r\nimport { RenderButtonGroups } from './render-groups';\r\nimport { IDs } from '../../constants/ids';\r\n\r\nconst attrIdentifier = 'toolbar-identifier';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ToolbarRenderer extends HasLog {\r\n    private readonly groups: RenderButtonGroups;\r\n    public readonly button: RenderButton;\r\n\r\n    constructor(private context: ContextBundleToolbar) {\r\n        super('Rnd.Toolbr');\r\n        Insights.add('toolbar-render', context.toolbar?.identifier || '', this.log);\r\n        this.groups = new RenderButtonGroups(this);\r\n        this.button = new RenderButton(this);\r\n    }\r\n\r\n    /**\r\n     * Convert a generated Toolbar into an HTML-string.\r\n     * AFAIK it's only used in external scripts through older APIs, and never called directly.\r\n     */\r\n    render(): string {\r\n        const cl = this.log.call('generate');\r\n        return cl.return(this.generate().outerHTML);\r\n    }\r\n\r\n    /**\r\n     * Generate an HTML toolbar tag for adding to the page\r\n     */\r\n    generate(): HTMLUListElement {\r\n        const cl = this.log.call('generate');\r\n        // render groups of buttons\r\n        const context = this.context;\r\n        cl.data('toolbar config', context.toolbar);\r\n        const groups = this.groups.generate(context);\r\n\r\n        // render toolbar\r\n        const tlbTag = document.createElement('ul');\r\n        tlbTag.setAttribute(attrIdentifier, context.toolbar?.identifier);\r\n        tlbTag.classList.add(IDs.cls.scMenu);\r\n        tlbTag.classList.add('group-0'); // IE11 fix, add each class separately\r\n\r\n        // add behaviour classes\r\n        const settings = context.toolbar.settings;\r\n        tlbTag.classList.add(`sc-tb-hover-${settings.hover}`);\r\n        tlbTag.classList.add(`sc-tb-show-${settings.show}`);\r\n        if (context.toolbar.params.sortOrder === -1)\r\n            tlbTag.classList.add('listContent');\r\n        if (context.toolbar.params.fields)\r\n            tlbTag.classList.add('sc-sublist');\r\n\r\n        HtmlTools.addClasses(tlbTag, settings.class || settings.classes);\r\n\r\n        // add button groups to toolbar\r\n        tlbTag.setAttribute('group-count', context.toolbar.groups.length.toString());\r\n        for (let g = 0; g < groups.length; g++)\r\n            tlbTag.appendChild(groups[g]);\r\n\r\n        return cl.return(tlbTag, 'done');\r\n    }\r\n}\r\n","import { C } from '../../constants';\r\nimport { HtmlTools } from '../../html/dom-tools';\r\nimport { InPageButtonJson, InPageCommandJson, ToolbarWip } from '../config-loaders';\r\nimport * as Toolbarsettings from '../config/toolbar-settings';\r\nimport ToolbarSettings = Toolbarsettings.ToolbarSettings;\r\nimport { ToolbarTemplate } from '../templates';\r\n\r\n/**\r\n * take various common input format and convert it to a full toolbar-structure definition\r\n * can handle the following input formats (the param unstructuredConfig):\r\n * complete tree (detected by \"groups): { groups: [ {}, {}], name: ..., defaults: {...} }\r\n * group of buttons (detected by \"buttons): { buttons: \"...\" | [], name: ..., ... }\r\n * list of buttons (detected by IsArray with action): [ { action: \"...\" | []}, { action: \"\"|[]} ]\r\n * button (detected by \"command\"): { command: \"\"|[], icon: \"..\", ... }\r\n * just a command (detected by \"action\"): { entityId: 17, action: \"edit\" }\r\n * array of commands: [{entityId: 17, action: \"edit\"}, {contentType: \"blog\", action: \"new\"}]\r\n * @internal\r\n */\r\nexport type InPageToolbarConfigVariations =\r\n    ToolbarWip\r\n    | InPageButtonJson\r\n    | InPageCommandJson\r\n    | ToolbarTemplate;\r\n\r\n/**\r\n * The configuration / settings of a toolbar as loaded from the DOM\r\n * @internal\r\n */\r\nexport class ToolbarInitConfig {\r\n    toolbar: InPageToolbarConfigVariations | string[];\r\n    settings: ToolbarSettings;\r\n\r\n    /**\r\n     * Load the toolbar configuration from the sxc-toolbar attribute OR the old schema\r\n     * @param tag\r\n     * @return a configuration object or null in case of an error\r\n     */\r\n    static loadFromTag(tag: HTMLElement): ToolbarInitConfig {\r\n        try {\r\n            const newConfigFormat = HtmlTools.tryGetAttrText(tag, C.Toolbar.attr.full);\r\n            if (newConfigFormat) {\r\n                const result = JSON.parse(newConfigFormat);\r\n                // check for new V10.27 format, which is just an array!\r\n                if (Array.isArray(result))\r\n                    return { toolbar: result } as ToolbarInitConfig;\r\n                return result as ToolbarInitConfig;\r\n            } else {\r\n                const at = C.IDs.attr;\r\n                const data = HtmlTools.getFirstAttribute(tag, at.toolbar, at.toolbarData);\r\n                const settings = HtmlTools.getFirstAttribute(tag, at.settings, at.settingsData);\r\n                return {\r\n                    toolbar: JSON.parse(data),\r\n                    settings: JSON.parse(settings) as ToolbarSettings,\r\n                } as ToolbarInitConfig;\r\n            }\r\n        } catch (err) {\r\n        console.error(\r\n            'error in settings JSON - probably invalid - make sure you quote properties like \"name\": ...', tag, err);\r\n        return null;\r\n        }\r\n    }\r\n}\r\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from '@babel/runtime/helpers/esm/typeof';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\n\nvar consoleLogger = {\n  type: 'logger',\n  log: function log(args) {\n    this.output('log', args);\n  },\n  warn: function warn(args) {\n    this.output('warn', args);\n  },\n  error: function error(args) {\n    this.output('error', args);\n  },\n  output: function output(type, args) {\n    var _console;\n\n    /* eslint no-console: 0 */\n    if (console && console[type]) (_console = console)[type].apply(_console, _toConsumableArray(args));\n  }\n};\n\nvar Logger =\n/*#__PURE__*/\nfunction () {\n  function Logger(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Logger);\n\n    this.init(concreteLogger, options);\n  }\n\n  _createClass(Logger, [{\n    key: \"init\",\n    value: function init(concreteLogger) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n  }, {\n    key: \"setDebug\",\n    value: function setDebug(bool) {\n      this.debug = bool;\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.forward(args, 'log', '', true);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.forward(args, 'warn', '', true);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.forward(args, 'error', '');\n    }\n  }, {\n    key: \"deprecate\",\n    value: function deprecate() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (typeof args[0] === 'string') args[0] = \"\".concat(prefix).concat(this.prefix, \" \").concat(args[0]);\n      return this.logger[lvl](args);\n    }\n  }, {\n    key: \"create\",\n    value: function create(moduleName) {\n      return new Logger(this.logger, _objectSpread({}, {\n        prefix: \"\".concat(this.prefix, \":\").concat(moduleName, \":\")\n      }, this.options));\n    }\n  }]);\n\n  return Logger;\n}();\n\nvar baseLogger = new Logger();\n\nvar EventEmitter =\n/*#__PURE__*/\nfunction () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.observers = {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      if (!this.observers[event]) return;\n\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n\n      this.observers[event] = this.observers[event].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\n// http://lea.verou.me/2016/12/resolve-promises-externally-with-this-one-weird-trick/\nfunction defer() {\n  var res;\n  var rej;\n  var promise = new Promise(function (resolve, reject) {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  /* eslint prefer-template: 0 */\n\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(function (m) {\n    if (s[m]) t[m] = s[m];\n  });\n}\n\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n\n  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n    var key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n    object = object[key];\n  }\n\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\n\nfunction setPath(object, path, newValue) {\n  var _getLastOfPath = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath.obj,\n      k = _getLastOfPath.k;\n\n  obj[k] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  var _getLastOfPath2 = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath2.obj,\n      k = _getLastOfPath2.k;\n\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  var _getLastOfPath3 = getLastOfPath(object, path),\n      obj = _getLastOfPath3.obj,\n      k = _getLastOfPath3.k;\n\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  var value = getPath(data, key);\n\n  if (value !== undefined) {\n    return value;\n  } // Fallback to default values\n\n\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  /* eslint no-restricted-syntax: 0 */\n  for (var prop in source) {\n    if (prop in target) {\n      // If we reached a leaf string in target or source then replace with source or skip depending on the 'overwrite' switch\n      if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n        if (overwrite) target[prop] = source[prop];\n      } else {\n        deepExtend(target[prop], source[prop], overwrite);\n      }\n    } else {\n      target[prop] = source[prop];\n    }\n  }\n\n  return target;\n}\nfunction regexEscape(str) {\n  /* eslint no-useless-escape: 0 */\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\n/* eslint-disable */\n\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\n/* eslint-enable */\n\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, function (s) {\n      return _entityMap[s];\n    });\n  }\n\n  return data;\n}\n\nvar ResourceStore =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(ResourceStore, _EventEmitter);\n\n  function ResourceStore(data) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n\n    _classCallCheck(this, ResourceStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResourceStore).call(this));\n    EventEmitter.call(_assertThisInitialized(_this)); // <=IE10 fix (unable to call parent constructor)\n\n    _this.data = data || {};\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    return _this;\n  }\n\n  _createClass(ResourceStore, [{\n    key: \"addNamespaces\",\n    value: function addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n  }, {\n    key: \"removeNamespaces\",\n    value: function removeNamespaces(ns) {\n      var index = this.options.ns.indexOf(ns);\n\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(lng, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var path = [lng, ns];\n      if (key && typeof key !== 'string') path = path.concat(key);\n      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      }\n\n      return getPath(this.data, path);\n    }\n  }, {\n    key: \"addResource\",\n    value: function addResource(lng, ns, key, value) {\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        silent: false\n      };\n      var keySeparator = this.options.keySeparator;\n      if (keySeparator === undefined) keySeparator = '.';\n      var path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n  }, {\n    key: \"addResources\",\n    value: function addResources(lng, ns, resources) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        silent: false\n      };\n\n      /* eslint no-restricted-syntax: 0 */\n      for (var m in resources) {\n        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"addResourceBundle\",\n    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        silent: false\n      };\n      var path = [lng, ns];\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      var pack = getPath(this.data, path) || {};\n\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = _objectSpread({}, pack, resources);\n      }\n\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"removeResourceBundle\",\n    value: function removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n  }, {\n    key: \"hasResourceBundle\",\n    value: function hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n  }, {\n    key: \"getResourceBundle\",\n    value: function getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS; // COMPATIBILITY: remove extend in v2.1.0\n\n      if (this.options.compatibilityAPI === 'v1') return _objectSpread({}, {}, this.getResource(lng, ns));\n      return this.getResource(lng, ns);\n    }\n  }, {\n    key: \"getDataByLanguage\",\n    value: function getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.data;\n    }\n  }]);\n\n  return ResourceStore;\n}(EventEmitter);\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor: function addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle: function handle(processors, value, key, options, translator) {\n    var _this = this;\n\n    processors.forEach(function (processor) {\n      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nvar checkedLoadedFor = {};\n\nvar Translator =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Translator, _EventEmitter);\n\n  function Translator(services) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Translator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Translator).call(this));\n    EventEmitter.call(_assertThisInitialized(_this)); // <=IE10 fix (unable to call parent constructor)\n\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized(_this));\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    _this.logger = baseLogger.create('translator');\n    return _this;\n  }\n\n  _createClass(Translator, [{\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      var resolved = this.resolve(key, options);\n      return resolved && resolved.res !== undefined;\n    }\n  }, {\n    key: \"extractFromKey\",\n    value: function extractFromKey(key, options) {\n      var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var namespaces = options.ns || this.options.defaultNS;\n\n      if (nsSeparator && key.indexOf(nsSeparator) > -1) {\n        var parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      return {\n        key: key,\n        namespaces: namespaces\n      };\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(keys, options) {\n      var _this2 = this;\n\n      if (_typeof(options) !== 'object' && this.options.overloadTranslationOptionHandler) {\n        /* eslint prefer-rest-params: 0 */\n        options = this.options.overloadTranslationOptionHandler(arguments);\n      }\n\n      if (!options) options = {}; // non valid keys handling\n\n      if (keys === undefined || keys === null\n      /* || keys === ''*/\n      ) return '';\n      if (!Array.isArray(keys)) keys = [String(keys)]; // separators\n\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator; // get namespace(s)\n\n      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),\n          key = _this$extractFromKey.key,\n          namespaces = _this$extractFromKey.namespaces;\n\n      var namespace = namespaces[namespaces.length - 1]; // return key on CIMode\n\n      var lng = options.lng || this.language;\n      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n\n      if (lng && lng.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n          return namespace + nsSeparator + key;\n        }\n\n        return key;\n      } // resolve from store\n\n\n      var resolved = this.resolve(keys, options);\n      var res = resolved && resolved.res;\n      var resUsedKey = resolved && resolved.usedKey || key;\n      var resExactUsedKey = resolved && resolved.exactUsedKey || key;\n      var resType = Object.prototype.toString.apply(res);\n      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays; // object\n\n      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n\n      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n        if (!options.returnObjects && !this.options.returnObjects) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          return this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, options) : \"key '\".concat(key, \" (\").concat(this.language, \")' returned an object instead of string.\");\n        } // if we got a separator we loop over children - else we just return object as is\n        // as having it set to false means no hierarchy so no lookup for nested values\n\n\n        if (keySeparator) {\n          var resTypeIsArray = resType === '[object Array]';\n          var copy$$1 = resTypeIsArray ? [] : {}; // apply child translation on a copy\n\n          /* eslint no-restricted-syntax: 0 */\n\n          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n\n          for (var m in res) {\n            if (Object.prototype.hasOwnProperty.call(res, m)) {\n              var deepKey = \"\".concat(newKeyToUse).concat(keySeparator).concat(m);\n              copy$$1[m] = this.translate(deepKey, _objectSpread({}, options, {\n                joinArrays: false,\n                ns: namespaces\n              }));\n              if (copy$$1[m] === deepKey) copy$$1[m] = res[m]; // if nothing found use orginal value as fallback\n            }\n          }\n\n          res = copy$$1;\n        }\n      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n        // array special treatment\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, options);\n      } else {\n        // string, empty or null\n        var usedDefault = false;\n        var usedKey = false; // fallback value\n\n        if (!this.isValidLookup(res) && options.defaultValue !== undefined) {\n          usedDefault = true;\n\n          if (options.count !== undefined) {\n            var suffix = this.pluralResolver.getSuffix(lng, options.count);\n            res = options[\"defaultValue\".concat(suffix)];\n          }\n\n          if (!res) res = options.defaultValue;\n        }\n\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        } // save missing\n\n\n        var updateMissing = options.defaultValue && options.defaultValue !== res && this.options.updateMissing;\n\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? options.defaultValue : res);\n          var lngs = [];\n          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (var i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n          } else {\n            lngs.push(options.lng || this.language);\n          }\n\n          var send = function send(l, k) {\n            if (_this2.options.missingKeyHandler) {\n              _this2.options.missingKeyHandler(l, namespace, k, updateMissing ? options.defaultValue : res, updateMissing, options);\n            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {\n              _this2.backendConnector.saveMissing(l, namespace, k, updateMissing ? options.defaultValue : res, updateMissing, options);\n            }\n\n            _this2.emit('missingKey', l, namespace, k, res);\n          };\n\n          if (this.options.saveMissing) {\n            var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(function (l) {\n                var plurals = _this2.pluralResolver.getPluralFormsOfKey(l, key);\n\n                plurals.forEach(function (p) {\n                  return send([l], p);\n                });\n              });\n            } else {\n              send(lngs, key);\n            }\n          }\n        } // extend\n\n\n        res = this.extendTranslation(res, keys, options, resolved); // append namespace if still key\n\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = \"\".concat(namespace, \":\").concat(key); // parseMissingKeyHandler\n\n        if (usedKey && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(res);\n      } // return\n\n\n      return res;\n    }\n  }, {\n    key: \"extendTranslation\",\n    value: function extendTranslation(res, key, options, resolved) {\n      var _this3 = this;\n\n      if (this.i18nFormat && this.i18nFormat.parse) {\n        res = this.i18nFormat.parse(res, options, resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved: resolved\n        });\n      } else if (!options.skipInterpolation) {\n        // i18next.parsing\n        if (options.interpolation) this.interpolator.init(_objectSpread({}, options, {\n          interpolation: _objectSpread({}, this.options.interpolation, options.interpolation)\n        })); // interpolate\n\n        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n        if (this.options.interpolation.defaultVariables) data = _objectSpread({}, this.options.interpolation.defaultVariables, data);\n        res = this.interpolator.interpolate(res, data, options.lng || this.language, options); // nesting\n\n        if (options.nest !== false) res = this.interpolator.nest(res, function () {\n          return _this3.translate.apply(_this3, arguments);\n        }, options);\n        if (options.interpolation) this.interpolator.reset();\n      } // post process\n\n\n      var postProcess = options.postProcess || this.options.postProcess;\n      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n\n      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread({\n          i18nResolved: resolved\n        }, options) : options, this);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(keys) {\n      var _this4 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var found;\n      var usedKey; // plain key\n\n      var exactUsedKey; // key with context / plural\n\n      var usedLng;\n      var usedNS;\n      if (typeof keys === 'string') keys = [keys]; // forEach possible key\n\n      keys.forEach(function (k) {\n        if (_this4.isValidLookup(found)) return;\n\n        var extracted = _this4.extractFromKey(k, options);\n\n        var key = extracted.key;\n        usedKey = key;\n        var namespaces = extracted.namespaces;\n        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var needsContextHandling = options.context !== undefined && typeof options.context === 'string' && options.context !== '';\n        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);\n        namespaces.forEach(function (ns) {\n          if (_this4.isValidLookup(found)) return;\n          usedNS = ns;\n\n          if (!checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] = true;\n\n            _this4.logger.warn(\"key \\\"\".concat(usedKey, \"\\\" for namespace \\\"\").concat(usedNS, \"\\\" for languages \\\"\").concat(codes.join(', '), \"\\\" won't get resolved as namespace was not yet loaded\"), 'This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n\n          codes.forEach(function (code) {\n            if (_this4.isValidLookup(found)) return;\n            usedLng = code;\n            var finalKey = key;\n            var finalKeys = [finalKey];\n\n            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {\n              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n            } else {\n              var pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count); // fallback for plural if context not found\n\n              if (needsPluralHandling && needsContextHandling) finalKeys.push(finalKey + pluralSuffix); // get key for context if needed\n\n              if (needsContextHandling) finalKeys.push(finalKey += \"\".concat(_this4.options.contextSeparator).concat(options.context)); // get key for plural if needed\n\n              if (needsPluralHandling) finalKeys.push(finalKey += pluralSuffix);\n            } // iterate over finalKeys starting with most specific pluralkey (-> contextkey only) -> singularkey only\n\n\n            var possibleKey;\n            /* eslint no-cond-assign: 0 */\n\n            while (possibleKey = finalKeys.pop()) {\n              if (!_this4.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = _this4.getResource(code, ns, possibleKey, options);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey: usedKey,\n        exactUsedKey: exactUsedKey,\n        usedLng: usedLng,\n        usedNS: usedNS\n      };\n    }\n  }, {\n    key: \"isValidLookup\",\n    value: function isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(code, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n  }]);\n\n  return Translator;\n}(EventEmitter);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil =\n/*#__PURE__*/\nfunction () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n    this.whitelist = this.options.whitelist || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase(); // if lenght 2 guess it's a country\n\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n\n        return p.join('-');\n      }\n\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {\n        code = this.getLanguagePartFromCode(code);\n      }\n\n      return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks[\"default\"] || []; // asume we have an object defining fallbacks\n\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[\"default\"];\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this = this;\n\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n\n      var addCode = function addCode(c) {\n        if (!c) return;\n\n        if (_this.isWhitelisted(c)) {\n          codes.push(c);\n        } else {\n          _this.logger.warn(\"rejecting non-whitelisted language code: \".concat(c));\n        }\n      };\n\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n\n  return LanguageUtil;\n}();\n\n/* eslint-disable */\n\nvar sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'id', 'ja', 'jbo', 'ka', 'kk', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nvar _rulesPluralsTypes = {\n  1: function _(n) {\n    return Number(n > 1);\n  },\n  2: function _(n) {\n    return Number(n != 1);\n  },\n  3: function _(n) {\n    return 0;\n  },\n  4: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function _(n) {\n    return Number(n === 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function _(n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function _(n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function _(n) {\n    return Number(n >= 2);\n  },\n  10: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function _(n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function _(n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function _(n) {\n    return Number(n !== 0);\n  },\n  14: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function _(n) {\n    return Number(n == 1 || n % 10 == 1 ? 0 : 1);\n  },\n  18: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function _(n) {\n    return Number(n == 1 ? 0 : n === 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function _(n) {\n    return Number(n == 1 ? 0 : n === 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function _(n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function _(n) {\n    return Number(n === 1 ? 0 : n === 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\n/* eslint-enable */\n\nfunction createRules() {\n  var rules = {};\n  sets.forEach(function (set) {\n    set.lngs.forEach(function (l) {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\n\nvar PluralResolver =\n/*#__PURE__*/\nfunction () {\n  function PluralResolver(languageUtils) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, PluralResolver);\n\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.rules = createRules();\n  }\n\n  _createClass(PluralResolver, [{\n    key: \"addRule\",\n    value: function addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n  }, {\n    key: \"getRule\",\n    value: function getRule(code) {\n      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n    }\n  }, {\n    key: \"needsPlural\",\n    value: function needsPlural(code) {\n      var rule = this.getRule(code);\n      return rule && rule.numbers.length > 1;\n    }\n  }, {\n    key: \"getPluralFormsOfKey\",\n    value: function getPluralFormsOfKey(code, key) {\n      var _this = this;\n\n      var ret = [];\n      var rule = this.getRule(code);\n      if (!rule) return ret;\n      rule.numbers.forEach(function (n) {\n        var suffix = _this.getSuffix(code, n);\n\n        ret.push(\"\".concat(key).concat(suffix));\n      });\n      return ret;\n    }\n  }, {\n    key: \"getSuffix\",\n    value: function getSuffix(code, count) {\n      var _this2 = this;\n\n      var rule = this.getRule(code);\n\n      if (rule) {\n        // if (rule.numbers.length === 1) return ''; // only singular\n        var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n        var suffix = rule.numbers[idx]; // special treatment for lngs only having singular and plural\n\n        if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          if (suffix === 2) {\n            suffix = 'plural';\n          } else if (suffix === 1) {\n            suffix = '';\n          }\n        }\n\n        var returnSuffix = function returnSuffix() {\n          return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();\n        }; // COMPATIBILITY JSON\n        // v1\n\n\n        if (this.options.compatibilityJSON === 'v1') {\n          if (suffix === 1) return '';\n          if (typeof suffix === 'number') return \"_plural_\".concat(suffix.toString());\n          return returnSuffix();\n        } else if (\n        /* v2 */\n        this.options.compatibilityJSON === 'v2') {\n          return returnSuffix();\n        } else if (\n        /* v3 - gettext index */\n        this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          return returnSuffix();\n        }\n\n        return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n      }\n\n      this.logger.warn(\"no plural rule found for: \".concat(code));\n      return '';\n    }\n  }]);\n\n  return PluralResolver;\n}();\n\nvar Interpolator =\n/*#__PURE__*/\nfunction () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Interpolator);\n\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n\n    this.format = options.interpolation && options.interpolation.format || function (value) {\n      return value;\n    };\n\n    this.init(options);\n  }\n  /* eslint no-param-reassign: 0 */\n\n\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false; // the regexp\n\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      // the regexp\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n\n      var match;\n      var value;\n      var replaces;\n      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) {\n          var path = getPathWithDefaults(data, defaultData, key);\n          return _this.alwaysFormat ? _this.format(path, undefined, lng) : path;\n        }\n\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, options);\n      };\n\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      replaces = 0; // unescape if has unescapePrefix/Suffix\n\n      /* eslint no-cond-assign: 0 */\n\n      while (match = this.regexpUnescape.exec(str)) {\n        value = handleFormat(match[1].trim());\n\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            var temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else {\n            this.logger.warn(\"missed to pass in variable \".concat(match[1], \" for interpolating \").concat(str));\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n\n        str = str.replace(match[0], regexSafe(value));\n        this.regexpUnescape.lastIndex = 0;\n        replaces++;\n\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n\n      replaces = 0; // regular escape on demand\n\n      while (match = this.regexp.exec(str)) {\n        value = handleFormat(match[1].trim());\n\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            var _temp = missingInterpolationHandler(str, match, options);\n\n            value = typeof _temp === 'string' ? _temp : '';\n          } else {\n            this.logger.warn(\"missed to pass in variable \".concat(match[1], \" for interpolating \").concat(str));\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n\n        value = this.escapeValue ? regexSafe(this.escape(value)) : regexSafe(value);\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n        replaces++;\n\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n\n      var clonedOptions = _objectSpread({}, options);\n\n      clonedOptions.applyPostProcessor = false; // avoid post processing on nested lookup\n\n      delete clonedOptions.defaultValue; // assert we do not get a endless loop on interpolating defaultValue again and again\n      // if value is something like \"myKey\": \"lorem $(anotherKey, { \"count\": {{aValueInOptions}} })\"\n\n      function handleHasOptions(key, inheritedOptions) {\n        var sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        var c = key.split(new RegExp(\"\".concat(sep, \"[ ]*{\")));\n        var optionsString = \"{\".concat(c[1]);\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        optionsString = optionsString.replace(/'/g, '\"');\n\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread({}, inheritedOptions, clonedOptions);\n        } catch (e) {\n          this.logger.warn(\"failed parsing options string in nesting for key \".concat(key), e);\n          return \"\".concat(key).concat(sep).concat(optionsString);\n        } // assert we do not get a endless loop on interpolating defaultValue again and again\n\n\n        delete clonedOptions.defaultValue;\n        return key;\n      } // regular escape on demand\n\n\n      while (match = this.nestingRegexp.exec(str)) {\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions); // is only the nesting key (key1 = '$(key2)') return the value without stringify\n\n        if (value && match[0] === str && typeof value !== 'string') return value; // no string to include or empty\n\n        if (typeof value !== 'string') value = makeString(value);\n\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        } // Nested keys should not be escaped by default #854\n        // value = this.escapeValue ? regexSafe(utils.escape(value)) : regexSafe(value);\n\n\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n\n      return str;\n    }\n  }]);\n\n  return Interpolator;\n}();\n\nfunction remove(arr, what) {\n  var found = arr.indexOf(what);\n\n  while (found !== -1) {\n    arr.splice(found, 1);\n    found = arr.indexOf(what);\n  }\n}\n\nvar Connector =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Connector, _EventEmitter);\n\n  function Connector(backend, store, services) {\n    var _this;\n\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, Connector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this));\n    EventEmitter.call(_assertThisInitialized(_this)); // <=IE10 fix (unable to call parent constructor)\n\n    _this.backend = backend;\n    _this.store = store;\n    _this.services = services;\n    _this.languageUtils = services.languageUtils;\n    _this.options = options;\n    _this.logger = baseLogger.create('backendConnector');\n    _this.state = {};\n    _this.queue = [];\n\n    if (_this.backend && _this.backend.init) {\n      _this.backend.init(services, options.backend, options);\n    }\n\n    return _this;\n  }\n\n  _createClass(Connector, [{\n    key: \"queueLoad\",\n    value: function queueLoad(languages, namespaces, options, callback) {\n      var _this2 = this;\n\n      // find what needs to be loaded\n      var toLoad = [];\n      var pending = [];\n      var toLoadLanguages = [];\n      var toLoadNamespaces = [];\n      languages.forEach(function (lng) {\n        var hasAllNamespaces = true;\n        namespaces.forEach(function (ns) {\n          var name = \"\".concat(lng, \"|\").concat(ns);\n\n          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {\n            _this2.state[name] = 2; // loaded\n          } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {\n            if (pending.indexOf(name) < 0) pending.push(name);\n          } else {\n            _this2.state[name] = 1; // pending\n\n            hasAllNamespaces = false;\n            if (pending.indexOf(name) < 0) pending.push(name);\n            if (toLoad.indexOf(name) < 0) toLoad.push(name);\n            if (toLoadNamespaces.indexOf(ns) < 0) toLoadNamespaces.push(ns);\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages.push(lng);\n      });\n\n      if (toLoad.length || pending.length) {\n        this.queue.push({\n          pending: pending,\n          loaded: {},\n          errors: [],\n          callback: callback\n        });\n      }\n\n      return {\n        toLoad: toLoad,\n        pending: pending,\n        toLoadLanguages: toLoadLanguages,\n        toLoadNamespaces: toLoadNamespaces\n      };\n    }\n  }, {\n    key: \"loaded\",\n    value: function loaded(name, err, data) {\n      var _name$split = name.split('|'),\n          _name$split2 = _slicedToArray(_name$split, 2),\n          lng = _name$split2[0],\n          ns = _name$split2[1];\n\n      if (err) this.emit('failedLoading', lng, ns, err);\n\n      if (data) {\n        this.store.addResourceBundle(lng, ns, data);\n      } // set loaded\n\n\n      this.state[name] = err ? -1 : 2; // consolidated loading done in this run - only emit once for a loaded namespace\n\n      var loaded = {}; // callback if ready\n\n      this.queue.forEach(function (q) {\n        pushPath(q.loaded, [lng], ns);\n        remove(q.pending, name);\n        if (err) q.errors.push(err);\n\n        if (q.pending.length === 0 && !q.done) {\n          // only do once per loaded -> this.emit('loaded', q.loaded);\n          Object.keys(q.loaded).forEach(function (l) {\n            if (!loaded[l]) loaded[l] = [];\n\n            if (q.loaded[l].length) {\n              q.loaded[l].forEach(function (ns) {\n                if (loaded[l].indexOf(ns) < 0) loaded[l].push(ns);\n              });\n            }\n          });\n          /* eslint no-param-reassign: 0 */\n\n          q.done = true;\n\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      }); // emit consolidated loaded event\n\n      this.emit('loaded', loaded); // remove done load requests\n\n      this.queue = this.queue.filter(function (q) {\n        return !q.done;\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(lng, ns, fcName) {\n      var _this3 = this;\n\n      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 350;\n      var callback = arguments.length > 5 ? arguments[5] : undefined;\n      if (!lng.length) return callback(null, {}); // noting to load\n\n      return this.backend[fcName](lng, ns, function (err, data) {\n        if (err && data\n        /* = retryFlag */\n        && tried < 5) {\n          setTimeout(function () {\n            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n\n        callback(err, data);\n      });\n    }\n    /* eslint consistent-return: 0 */\n\n  }, {\n    key: \"prepareLoading\",\n    value: function prepareLoading(languages, namespaces) {\n      var _this4 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n\n      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      var toLoad = this.queueLoad(languages, namespaces, options, callback);\n\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback(); // nothing to load and no pendings...callback now\n\n        return null; // pendings will trigger callback\n      }\n\n      toLoad.toLoad.forEach(function (name) {\n        _this4.loadOne(name);\n      });\n    }\n  }, {\n    key: \"load\",\n    value: function load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n  }, {\n    key: \"loadOne\",\n    value: function loadOne(name) {\n      var _this5 = this;\n\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      var _name$split3 = name.split('|'),\n          _name$split4 = _slicedToArray(_name$split3, 2),\n          lng = _name$split4[0],\n          ns = _name$split4[1];\n\n      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {\n        if (err) _this5.logger.warn(\"\".concat(prefix, \"loading namespace \").concat(ns, \" for language \").concat(lng, \" failed\"), err);\n        if (!err && data) _this5.logger.log(\"\".concat(prefix, \"loaded namespace \").concat(ns, \" for language \").concat(lng), data);\n\n        _this5.loaded(name, err, data);\n      });\n    }\n  }, {\n    key: \"saveMissing\",\n    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n        this.logger.warn(\"did not save key \\\"\".concat(key, \"\\\" for namespace \\\"\").concat(namespace, \"\\\" as the namespace was not yet loaded\"), 'This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      } // ignore non valid keys\n\n\n      if (key === undefined || key === null || key === '') return;\n\n      if (this.backend && this.backend.create) {\n        this.backend.create(languages, namespace, key, fallbackValue, null\n        /* unused callback */\n        , _objectSpread({}, options, {\n          isUpdate: isUpdate\n        }));\n      } // write to store to avoid resending\n\n\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }]);\n\n  return Connector;\n}(EventEmitter);\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    // string or array of namespaces\n    whitelist: false,\n    // array with whitelisted languages\n    nonExplicitWhitelist: false,\n    load: 'all',\n    // | currentOnly | languageOnly\n    preload: false,\n    // array with preload languages\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    // allow bundling certain languages that are not remotely fetched\n    saveMissing: false,\n    // enable to send missing values\n    updateMissing: false,\n    // enable to update default values if different from translated value (only useful on initial development, or when keeping code as source of truth)\n    saveMissingTo: 'fallback',\n    // 'current' || 'all'\n    saveMissingPlurals: true,\n    // will save all forms not only singular key\n    missingKeyHandler: false,\n    // function(lng, ns, key, fallbackValue) -> override if prefer on handling\n    missingInterpolationHandler: false,\n    // function(str, match)\n    postProcess: false,\n    // string or array of postProcessor names\n    postProcessPassResolved: false,\n    // pass resolved object into 'options.i18nResolved' for postprocessor\n    returnNull: true,\n    // allows null value as valid translation\n    returnEmptyString: true,\n    // allows empty string value as valid translation\n    returnObjects: false,\n    joinArrays: false,\n    // or string to join array\n    returnedObjectHandler: false,\n    // function(key, value, options) triggered if key returns object but returnObjects is set to false\n    parseMissingKeyHandler: false,\n    // function(key) parsed a key that was not found in t() before returning\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng, options) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      // prefixEscaped: '{{',\n      // suffixEscaped: '}}',\n      // unescapeSuffix: '',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      // nestingPrefixEscaped: '$t(',\n      // nestingSuffixEscaped: ')',\n      // defaultVariables: undefined // object that can have values to interpolate on - extends passed in interpolation data\n      maxReplaces: 1000 // max replaces to prevent endless loop\n\n    }\n  };\n}\n/* eslint no-param-reassign: 0 */\n\nfunction transformOptions(options) {\n  // create namespace object if namespace is passed in as string\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS]; // extend whitelist with cimode\n\n  if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {\n    options.whitelist = options.whitelist.concat(['cimode']);\n  }\n\n  return options;\n}\n\nfunction noop() {}\n\nvar I18n =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(I18n, _EventEmitter);\n\n  function I18n() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, I18n);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(I18n).call(this));\n    EventEmitter.call(_assertThisInitialized(_this)); // <=IE10 fix (unable to call parent constructor)\n\n    _this.options = transformOptions(options);\n    _this.services = {};\n    _this.logger = baseLogger;\n    _this.modules = {\n      external: []\n    };\n\n    if (callback && !_this.isInitialized && !options.isClone) {\n      // https://github.com/i18next/i18next/issues/879\n      if (!_this.options.initImmediate) {\n        _this.init(options, callback);\n\n        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n      }\n\n      setTimeout(function () {\n        _this.init(options, callback);\n      }, 0);\n    }\n\n    return _this;\n  }\n\n  _createClass(I18n, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      this.options = _objectSpread({}, get(), this.options, transformOptions(options));\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n\n      function createClassOnDemand(ClassOrObject) {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      } // init services\n\n\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n\n        var lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        var s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          compatibilityJSON: this.options.compatibilityJSON,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options); // pipe events from backendConnector\n\n        s.backendConnector.on('*', function (event) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          s.languageDetector.init(s, this.options.detection, this.options);\n        }\n\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n\n        this.translator = new Translator(this.services, this.options); // pipe events from translator\n\n        this.translator.on('*', function (event) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        this.modules.external.forEach(function (m) {\n          if (m.init) m.init(_this2);\n        });\n      }\n\n      if (!this.modules.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      } // append api\n\n\n      var storeApi = ['getResource', 'addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store;\n\n          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);\n        };\n      });\n      var deferred = defer();\n\n      var load = function load() {\n        _this2.changeLanguage(_this2.options.lng, function (err, t) {\n          _this2.isInitialized = true;\n\n          _this2.logger.log('initialized', _this2.options);\n\n          _this2.emit('initialized', _this2.options);\n\n          deferred.resolve(t); // not rejecting on err (as err is only a loading translation failed warning)\n\n          callback(err, t);\n        });\n      };\n\n      if (this.options.resources || !this.options.initImmediate) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n\n      return deferred;\n    }\n    /* eslint consistent-return: 0 */\n\n  }, {\n    key: \"loadResources\",\n    value: function loadResources(language) {\n      var _this3 = this;\n\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var usedCallback = callback;\n      var usedLng = typeof language === 'string' ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback(); // avoid loading resources for cimode\n\n        var toLoad = [];\n\n        var append = function append(lng) {\n          if (!lng) return;\n\n          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);\n\n          lngs.forEach(function (l) {\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n\n        if (!usedLng) {\n          // at least load fallbacks in this case\n          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(function (l) {\n            return append(l);\n          });\n        } else {\n          append(usedLng);\n        }\n\n        if (this.options.preload) {\n          this.options.preload.forEach(function (l) {\n            return append(l);\n          });\n        }\n\n        this.services.backendConnector.load(toLoad, this.options.ns, usedCallback);\n      } else {\n        usedCallback(null);\n      }\n    }\n  }, {\n    key: \"reloadResources\",\n    value: function reloadResources(lngs, ns, callback) {\n      var deferred = defer();\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, function (err) {\n        deferred.resolve(); // not rejecting on err (as err is only a loading translation failed warning)\n\n        callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"use\",\n    value: function use(module) {\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng, callback) {\n      var _this4 = this;\n\n      this.isLanguageChangingTo = lng;\n      var deferred = defer();\n      this.emit('languageChanging', lng);\n\n      var done = function done(err, l) {\n        if (l) {\n          _this4.language = l;\n          _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n\n          _this4.translator.changeLanguage(l);\n\n          _this4.isLanguageChangingTo = undefined;\n\n          _this4.emit('languageChanged', l);\n\n          _this4.logger.log('languageChanged', l);\n        } else {\n          _this4.isLanguageChangingTo = undefined;\n        }\n\n        deferred.resolve(function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n        if (callback) callback(err, function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n      };\n\n      var setLng = function setLng(l) {\n        if (l) {\n          if (!_this4.language) {\n            _this4.language = l;\n            _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n          }\n\n          if (!_this4.translator.language) _this4.translator.changeLanguage(l);\n          if (_this4.services.languageDetector) _this4.services.languageDetector.cacheUserLanguage(l);\n        }\n\n        _this4.loadResources(l, function (err) {\n          done(err, l);\n        });\n      };\n\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        this.services.languageDetector.detect(setLng);\n      } else {\n        setLng(lng);\n      }\n\n      return deferred;\n    }\n  }, {\n    key: \"getFixedT\",\n    value: function getFixedT(lng, ns) {\n      var _this5 = this;\n\n      var fixedT = function fixedT(key, opts) {\n        var options;\n\n        if (_typeof(opts) !== 'object') {\n          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n            rest[_key3 - 2] = arguments[_key3];\n          }\n\n          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          options = _objectSpread({}, opts);\n        }\n\n        options.lng = options.lng || fixedT.lng;\n        options.lngs = options.lngs || fixedT.lngs;\n        options.ns = options.ns || fixedT.ns;\n        return _this5.t(key, options);\n      };\n\n      if (typeof lng === 'string') {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n\n      fixedT.ns = ns;\n      return fixedT;\n    }\n  }, {\n    key: \"t\",\n    value: function t() {\n      var _this$translator;\n\n      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var _this$translator2;\n\n      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);\n    }\n  }, {\n    key: \"setDefaultNamespace\",\n    value: function setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n  }, {\n    key: \"hasLoadedNamespace\",\n    value: function hasLoadedNamespace(ns) {\n      var _this6 = this;\n\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n\n      var lng = this.languages[0];\n      var fallbackLng = this.options ? this.options.fallbackLng : false;\n      var lastLng = this.languages[this.languages.length - 1]; // we're in cimode so this shall pass\n\n      if (lng.toLowerCase() === 'cimode') return true;\n\n      var loadNotPending = function loadNotPending(l, n) {\n        var loadState = _this6.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n\n        return loadState === -1 || loadState === 2;\n      }; // loaded -> SUCCESS\n\n\n      if (this.hasResourceBundle(lng, ns)) return true; // were not loading at all -> SEMI SUCCESS\n\n      if (!this.services.backendConnector.backend) return true; // failed loading ns - but at least fallback is not pending -> SEMI SUCCESS\n\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n  }, {\n    key: \"loadNamespaces\",\n    value: function loadNamespaces(ns, callback) {\n      var _this7 = this;\n\n      var deferred = defer();\n\n      if (!this.options.ns) {\n        callback && callback();\n        return Promise.resolve();\n      }\n\n      if (typeof ns === 'string') ns = [ns];\n      ns.forEach(function (n) {\n        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);\n      });\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"loadLanguages\",\n    value: function loadLanguages(lngs, callback) {\n      var deferred = defer();\n      if (typeof lngs === 'string') lngs = [lngs];\n      var preloaded = this.options.preload || [];\n      var newLngs = lngs.filter(function (lng) {\n        return preloaded.indexOf(lng) < 0;\n      }); // Exit early if all given languages are already preloaded\n\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"dir\",\n    value: function dir(lng) {\n      if (!lng) lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language;\n      if (!lng) return 'rtl';\n      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam'];\n      return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';\n    }\n    /* eslint class-methods-use-this: 0 */\n\n  }, {\n    key: \"createInstance\",\n    value: function createInstance() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      return new I18n(options, callback);\n    }\n  }, {\n    key: \"cloneInstance\",\n    value: function cloneInstance() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n      var mergedOptions = _objectSpread({}, this.options, options, {\n        isClone: true\n      });\n\n      var clone = new I18n(mergedOptions);\n      var membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(function (m) {\n        clone[m] = _this8[m];\n      });\n      clone.services = _objectSpread({}, this.services);\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      clone.translator = new Translator(clone.services, clone.options);\n      clone.translator.on('*', function (event) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n\n        clone.emit.apply(clone, [event].concat(args));\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = clone.options; // sync options\n\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n  }]);\n\n  return I18n;\n}(EventEmitter);\n\nvar i18next = new I18n();\n\nexport default i18next;\n","import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _typeof from '@babel/runtime/helpers/esm/typeof';\n\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\nfunction defaults(obj) {\n  each.call(slice.call(arguments, 1), function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\n\nfunction addQueryString(url, params) {\n  if (params && _typeof(params) === 'object') {\n    var queryString = '',\n        e = encodeURIComponent; // Must encode data\n\n    for (var paramName in params) {\n      queryString += '&' + e(paramName) + '=' + e(params[paramName]);\n    }\n\n    if (!queryString) {\n      return url;\n    }\n\n    url = url + (url.indexOf('?') !== -1 ? '&' : '?') + queryString.slice(1);\n  }\n\n  return url;\n} // https://gist.github.com/Xeoncross/7663273\n\n\nfunction ajax(url, options, callback, data, cache) {\n  if (data && _typeof(data) === 'object') {\n    if (!cache) {\n      data['_t'] = new Date();\n    } // URL encoded form data must be in querystring format\n\n\n    data = addQueryString('', data).slice(1);\n  }\n\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams);\n  }\n\n  try {\n    var x;\n\n    if (XMLHttpRequest) {\n      x = new XMLHttpRequest();\n    } else {\n      x = new ActiveXObject('MSXML2.XMLHTTP.3.0');\n    }\n\n    x.open(data ? 'POST' : 'GET', url, 1);\n\n    if (!options.crossDomain) {\n      x.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    }\n\n    x.withCredentials = !!options.withCredentials;\n\n    if (data) {\n      x.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    }\n\n    if (x.overrideMimeType) {\n      x.overrideMimeType(\"application/json\");\n    }\n\n    var h = options.customHeaders;\n    h = typeof h === 'function' ? h() : h;\n\n    if (h) {\n      for (var i in h) {\n        x.setRequestHeader(i, h[i]);\n      }\n    }\n\n    x.onreadystatechange = function () {\n      x.readyState > 3 && callback && callback(x.responseText, x);\n    };\n\n    x.send(data);\n  } catch (e) {\n    console && console.log(e);\n  }\n}\n\nfunction getDefaults() {\n  return {\n    loadPath: '/locales/{{lng}}/{{ns}}.json',\n    addPath: '/locales/add/{{lng}}/{{ns}}',\n    allowMultiLoading: false,\n    parse: JSON.parse,\n    parsePayload: function parsePayload(namespace, key, fallbackValue) {\n      return _defineProperty({}, key, fallbackValue || '');\n    },\n    crossDomain: false,\n    ajax: ajax\n  };\n}\n\nvar Backend =\n/*#__PURE__*/\nfunction () {\n  function Backend(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Backend);\n\n    this.init(services, options);\n    this.type = 'backend';\n  }\n\n  _createClass(Backend, [{\n    key: \"init\",\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.services = services;\n      this.options = defaults(options, this.options || {}, getDefaults());\n    }\n  }, {\n    key: \"readMulti\",\n    value: function readMulti(languages, namespaces, callback) {\n      var loadPath = this.options.loadPath;\n\n      if (typeof this.options.loadPath === 'function') {\n        loadPath = this.options.loadPath(languages, namespaces);\n      }\n\n      var url = this.services.interpolator.interpolate(loadPath, {\n        lng: languages.join('+'),\n        ns: namespaces.join('+')\n      });\n      this.loadUrl(url, callback);\n    }\n  }, {\n    key: \"read\",\n    value: function read(language, namespace, callback) {\n      var loadPath = this.options.loadPath;\n\n      if (typeof this.options.loadPath === 'function') {\n        loadPath = this.options.loadPath([language], [namespace]);\n      }\n\n      var url = this.services.interpolator.interpolate(loadPath, {\n        lng: language,\n        ns: namespace\n      });\n      this.loadUrl(url, callback);\n    }\n  }, {\n    key: \"loadUrl\",\n    value: function loadUrl(url, callback) {\n      var _this = this;\n\n      this.options.ajax(url, this.options, function (data, xhr) {\n        if (xhr.status >= 500 && xhr.status < 600) return callback('failed loading ' + url, true\n        /* retry */\n        );\n        if (xhr.status >= 400 && xhr.status < 500) return callback('failed loading ' + url, false\n        /* no retry */\n        );\n        var ret, err;\n\n        try {\n          ret = _this.options.parse(data, url);\n        } catch (e) {\n          err = 'failed parsing ' + url + ' to json';\n        }\n\n        if (err) return callback(err, false);\n        callback(null, ret);\n      });\n    }\n  }, {\n    key: \"create\",\n    value: function create(languages, namespace, key, fallbackValue) {\n      var _this2 = this;\n\n      if (typeof languages === 'string') languages = [languages];\n      var payload = this.options.parsePayload(namespace, key, fallbackValue);\n      languages.forEach(function (lng) {\n        var url = _this2.services.interpolator.interpolate(_this2.options.addPath, {\n          lng: lng,\n          ns: namespace\n        });\n\n        _this2.options.ajax(url, _this2.options, function (data, xhr) {//const statusCode = xhr.status.toString();\n          // TODO: if statusCode === 4xx do log\n        }, payload);\n      });\n    }\n  }]);\n\n  return Backend;\n}();\n\nBackend.type = 'backend';\n\nexport default Backend;\n","import { Translator } from '.';\r\n\r\n/**\r\n * provide an official translate API for 2sxc\r\n * @param key\r\n * @internal\r\n */\r\nexport function translate(key: string): string { return Translator.translate(key); }\r\n","/**\r\n * @internal\r\n */\r\nexport const primaryLanguage = 'en';\r\n/**\r\n * @internal\r\n */\r\nexport const translations = ['en', 'de', 'fr', 'it', 'uk', 'nl'];\r\n/**\r\n * @internal\r\n */\r\nexport const translationsPath = 'dist/inpage/i18n/{{lng}}.js';\r\n\r\nexport * from './translator';\r\nexport * from './2sxc.translate';\r\n","import i18next, { i18n } from 'i18next';\r\nimport XHR from 'i18next-xhr-backend';\r\n// @ts-ignore\r\nimport locI18next from 'loc-i18next';\r\nimport { primaryLanguage, translations, translationsPath } from '.';\r\nimport { IDs } from '../constants/ids';\r\nimport { ContextComplete } from '../context/bundles';\r\nimport { $2sxcInPage } from '../interfaces/sxc-controller-in-page';\r\nimport { SxcEdit } from '../interfaces/sxc-instance-editable';\r\nimport { HasLog, Insights, urlClean } from '../logging';\r\nimport { EditManager } from '../manage/edit-manager';\r\n\r\nlet localize: any;\r\n// let initialized: boolean = false;\r\n\r\nclass TranslatorGlobal extends HasLog {\r\n    i18n: i18n;\r\n\r\n    private locReady = false;\r\n    private initialized = false;\r\n\r\n    constructor() {\r\n        super('Sys.Trnslt');\r\n        Insights.add('system', 'translator', this.log);\r\n        this.i18n = i18next;\r\n    }\r\n\r\n    translate(key: string): string {\r\n        if (!this.initialized) return key;\r\n        if (!this.i18n.isInitialized) return key;\r\n        return this.i18n.t(key) || key;\r\n    }\r\n\r\n    /**\r\n     * Initialize a manager-object on a 2sxc-instance\r\n     */\r\n    initManager(manage: EditManager): void {\r\n        const cl = this.log.call('initManager');\r\n        if (this.initialized) return cl.done('already initialized');\r\n\r\n        const context = manage._context || this.tryToFindAContext();\r\n\r\n        cl.add('will initialize');\r\n        const realRootPath = $2sxcInPage.env.uiRoot();\r\n        this.i18n\r\n            .use(XHR)\r\n            .init({\r\n                lng: context.app.currentLanguage.substr(0, 2),\r\n                fallbackLng: primaryLanguage,\r\n                whitelist: translations,\r\n                preload: [primaryLanguage],\r\n                backend: {\r\n                    loadPath: urlClean(realRootPath + translationsPath),\r\n                },\r\n            }, () => this.initLoc());\r\n        this.initialized = true;\r\n        cl.done();\r\n    }\r\n\r\n    tryToFindAContext(): ContextComplete {\r\n        const cl = this.log.call('tryToFindAContext');\r\n        cl.add('no context found, will seek');\r\n        // trying to get context...\r\n        const htmlElementOrId = document.querySelector<HTMLElement>('div[data-cb-id]');\r\n        this.initialized = true; // the next SxcEdit.get will call _translate so we must set true to prevent loops\r\n        const sxc = SxcEdit.get(htmlElementOrId);\r\n        this.initialized = false; // for real, it is not initialized...\r\n        const editContext = SxcEdit.getEditContext(sxc);\r\n        const context = new ContextComplete(editContext, sxc);\r\n        context.sxc = sxc;\r\n        return cl.return(context);\r\n    }\r\n\r\n    /**\r\n     * Initialize loc and auto-translate menu nodes in the DOM\r\n     * This is called when the initialize-promise resolves\r\n     */\r\n    initLoc() {\r\n        const cl = this.log.call('initLoc');\r\n        // for options see https://github.com/mthh/loc-i18next#initialize-the-plugin\r\n        localize = locI18next.init(i18next);\r\n        this.locReady = true;\r\n        this.autoTranslateMenus();\r\n        cl.done();\r\n    }\r\n\r\n    /**\r\n     * Tell loc to translate all the translatable menu nodes\r\n     * Do this on initial load, and every time dynamic content gets re-created\r\n     */\r\n    autoTranslateMenus() {\r\n        const cl = this.log.call('autoTranslateMenus');\r\n        if (!this.locReady) return cl.done('loc not ready');\r\n        // start localizing, details: https://github.com/mthh/loc-i18next#usage-of-selector-function\r\n        const menus = document.querySelectorAll<HTMLElement>(IDs.sel.tagScMenu);\r\n        localize(IDs.sel.tagScMenu); // inline toolbars\r\n        const quickEButtons = document.querySelectorAll<HTMLElement>('.sc-i18n');\r\n        localize('.sc-i18n'); // quick-insert menus\r\n        cl.add(`found ${menus.length} menus and ${quickEButtons.length} buttons`);\r\n        cl.done();\r\n    }\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const Translator = new TranslatorGlobal();\r\n","import { C } from '../../constants/index';\r\nimport { ContextComplete } from '../../context/bundles/context-bundle-button';\r\nimport { Translator } from '../../i18n/translator';\r\nimport { HasLog } from '../../logging';\r\nimport { ToolbarWhenNoToolbarProvided } from '../config';\r\nimport { ToolbarRenderer } from '../render/toolbar-renderer';\r\nimport { TagToolbar } from '../tag-toolbars/tag-toolbar';\r\nimport { ToolbarLifecycle } from '../toolbar-lifecycle';\r\nimport { ToolbarManager } from '../toolbar-manager';\r\nimport { ToolbarInitConfig } from './toolbar-init-config';\r\n\r\n// quick debug - set to false if not needed for production\r\nconst dbg = false;\r\n/**\r\n * @internal\r\n */\r\nexport const toolbarSelector = `.sc-menu[toolbar],.sc-menu[data-toolbar],[${C.Toolbar.attr.full}]`;\r\n\r\n/**\r\n * This class is responsible for finding toolbar configurations in the doom\r\n * and then initializing them.\r\n * @internal\r\n */\r\nexport class ToolbarConfigFinderAndInitializer extends HasLog {\r\n\r\n    /**\r\n     * Special constructor which only allows this builder to be instatiated from the TagManager\r\n     * This is to simplify program control flow\r\n     */\r\n    constructor(private tlbManager: ToolbarManager) {\r\n        super('Tlb.Buildr', tlbManager.log);\r\n    }\r\n\r\n    /**\r\n     * Generate toolbars inside a MODULE tag (usually a div with class sc-edit-context)\r\n     * @param parentTag\r\n     * @param optionalId\r\n     */\r\n    buildDnnModule(parentTag: HTMLElement/*, optionalId?: number*/): void {\r\n        const cl = this.log.call('buildDnnModule');\r\n        // 2021-09-17 optionalId is probably never used\r\n        // parentTag = parentTag ?? document.querySelector<HTMLElement>('.DnnModule-' + optionalId);\r\n\r\n        // if something says the toolbars are disabled, then skip\r\n        if (parentTag.getAttribute(C.Toolbar.attr.disable)) return cl.done('disabled');\r\n\r\n        let toolbars = this.findChildTagsWithConfig(parentTag);\r\n\r\n        // no toolbars found, must help a bit because otherwise editing is hard\r\n        if (toolbars.length === 0) {\r\n            toolbars = addDefaultToolbarConfigToTag(parentTag);\r\n            if (toolbars == null) return cl.done('toolbars=null');\r\n        }\r\n\r\n        toolbars.forEach((e) => this.loadConfigAndInitialize(e));\r\n\r\n        // ensure translations are rebuilt\r\n        Translator.autoTranslateMenus();\r\n        cl.done();\r\n    }\r\n\r\n    /**\r\n     * Build toolbar, but allow an html node as target\r\n     * Will automatically find a wrapping sc-edit-context and all containing toolbars\r\n     * @param node\r\n     */\r\n    build(node: HTMLElement): void {\r\n        // for toolbars that are not inside 2sxc modules (e.g. in skin)\r\n        if (node.matches(toolbarSelector) && !node.closest(C.Sel.SxcDivs)) {\r\n            this.loadConfigAndInitialize(node);\r\n            return;\r\n        }\r\n\r\n        // go up the DOM to find the parent which has context-information\r\n        // if we have no contextNode (a parent content block), we can\r\n        // assume the node is outside of a 2sxc module so not interesting\r\n        const contextNode = node.closest<HTMLElement>(C.Cb.selectors.ofName);\r\n        if (contextNode == null) return;\r\n\r\n        // check if the current node needs a toolbar\r\n        if (node.matches(toolbarSelector)) this.loadConfigAndInitialize(node);\r\n\r\n        // activate all child-nodes with toolbars\r\n        const toolbars = node.querySelectorAll<HTMLElement>(toolbarSelector);\r\n        toolbars.forEach((e) => this.loadConfigAndInitialize(e));\r\n    }\r\n\r\n\r\n    //////////////////////////////// Private Functions ////////////////////////////////////\r\n\r\n    /**\r\n     * find current toolbars inside this wrapper-tag\r\n     */\r\n    private findChildTagsWithConfig(parentTag: HTMLElement): HTMLElement[] {\r\n        const allInner = Array.from(parentTag.querySelectorAll<HTMLElement>(toolbarSelector));\r\n\r\n        // return only those, which don't belong to a sub-item\r\n        const onlyDirectDescendents = allInner.filter((e) => e.closest(C.Cb.selectors.ofName) === parentTag);\r\n        if (dbg)\r\n            console.log('found toolbars for parent', parentTag, onlyDirectDescendents);\r\n        return onlyDirectDescendents;\r\n    }\r\n\r\n\r\n    /**\r\n     * Setup a toolbar for a specific tag/node by loading its self-contained configuration\r\n     * and replacing / preparing the toolbar as needed.\r\n     * @param node\r\n     */\r\n    private loadConfigAndInitialize(tag: HTMLElement): void {\r\n        const cl = this.log.call('loadConfigAndInitialize');\r\n\r\n        // Do not process tag if a toolbar has already been attached\r\n        if (tag.getAttribute(`data-${C.Toolbar.attrToMarkInitalized}`))\r\n            return cl.done('already initialized');\r\n\r\n        const config = ToolbarInitConfig.loadFromTag(tag);\r\n\r\n        if (config != null) {  // is null if load failed\r\n            // catch errors, as this is very common - make sure the others are still rendered\r\n            try {\r\n                this.convertConfigToToolbars(tag, config);\r\n            } catch (err2) {\r\n                console.error('error creating toolbar - will skip this one', err2);\r\n            }\r\n        }\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * Take a configuration and convert into a toolbar-menu; also attach the hover-attribute\r\n     * @param tag\r\n     * @param config\r\n     */\r\n    private convertConfigToToolbars(tag: HTMLElement, config: ToolbarInitConfig): void {\r\n        const cl = this.log.call('convertConfigToToolbars');\r\n        cl.data('tag', tag);\r\n        cl.data('config', config);\r\n        const context = ContextComplete.findContext(tag);\r\n        context.toolbar = this.tlbManager.loadConfig(context, config);\r\n\r\n        // V2 where the full toolbar is included in one setting\r\n        if (tag.getAttribute(C.Toolbar.attr.full)) {\r\n            cl.add('V2 TagToolbar detected');\r\n            const tagToolbar = new TagToolbar(tag, context, Translator);\r\n            tag.setAttribute(`data-${C.Toolbar.attrToMarkInitalized}`, `${tagToolbar != null}`);\r\n            this.addHoverAttributeToTag(tag);\r\n            return cl.done();\r\n        }\r\n\r\n        // default case, tag is the old <ul> tag, so find the sc-element parent before replacing\r\n        const toolbar = new ToolbarRenderer(context).generate();\r\n        const hoverParent = tag.closest<HTMLElement>(C.Toolbar.selectors.ofOldHover);\r\n        cl.data('parentTag', hoverParent);\r\n        tag.replaceWith(toolbar);\r\n\r\n        if (hoverParent) {\r\n            cl.add('V1 hover-toolbar and parents found - will add attribute');\r\n            this.addHoverAttributeToTag(hoverParent);\r\n        }\r\n\r\n        // Also run toolbar-init on the new toolbar.\r\n        // Must use var 'toolbar' and not 'tag', as that is kind of reset/not existing at this\r\n        // So the event would get lost\r\n        // Added in 12.10\r\n        ToolbarLifecycle.raiseToolbarInitEvent(toolbar, toolbar, context);\r\n\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * add hover-attribute to tag which is responsible for the menu to appear/disappear\r\n     */\r\n    private addHoverAttributeToTag(tag: HTMLElement): void {\r\n        const cl = this.log.call('addHoverAttributeToTag');\r\n        if (!tag) return cl.done('no tag found'); // skip in case nothing was given\r\n        if (!tag.hasAttribute(C.Toolbar.attr.hover)) {\r\n            cl.add('will add attribute ' + C.Toolbar.attr.hover);\r\n            tag.setAttribute(C.Toolbar.attr.hover, '');\r\n        }\r\n        cl.done();\r\n    }\r\n}\r\n\r\n\r\n//////////////////////////////// Private Functions ////////////////////////////////////\r\n\r\n\r\n\r\n\r\n/**\r\n * Create a default/fallback toolbar and return it\r\n */\r\nfunction addDefaultToolbarConfigToTag(parentTag: HTMLElement): HTMLElement[] {\r\n    if (dbg) console.log(\"didn't find toolbar, so will auto-create\", parentTag);\r\n\r\n    const outsideCb = !parentTag.classList.contains(C.Cb.classes.name);\r\n    const contentTag = outsideCb ? parentTag.querySelector<HTMLElement>(`div${C.Cb.selectors.ofName}`) : parentTag;\r\n\r\n    // auto toolbar\r\n    const ctx = ContextComplete.findContext(contentTag);\r\n    if (ctx.ui.autoToolbar === false)\r\n        return null;\r\n\r\n    contentTag.setAttribute(C.Toolbar.attr.full, JSON.stringify(ToolbarWhenNoToolbarProvided));\r\n\r\n    return [contentTag];\r\n}\r\n","import { InPageCommandJson } from '..';\r\nimport { CommandParams } from '../../../commands/command-params';\r\nimport { TypeTbD, TypeUnsafe } from '../../../plumbing';\r\nimport { Button } from '../../config';\r\n\r\n/**\r\n * Button Definition v1. from old API\r\n * it is publicly used out of inpage, so take a care to preserve its signature\r\n * @internal\r\n */\r\nexport class InPageButtonJson {\r\n\r\n    /** the internal command which will be called, should contain both the name and the parameters like { action: \"new\", contentType: \"BlogPost\"} */\r\n    command?: InPageCommandJson;\r\n\r\n    /** text which is shown on mouse-over. Note that 2sxc will try to run it through the translator, so you can also use placeholders like Toolbar.Metadata */\r\n    title?: string;\r\n\r\n    /** a css class giving the button the icon. It can be one of the icons 2sxc provides, or it can be your own - just be sure to include a CSS & font which resolves the icon */\r\n    icon?: string;\r\n\r\n    // classes comma separated list of class-names like makeRed,glowHover\r\n    classes?: string;\r\n\r\n    /** disabled would disable the click on the button */\r\n    disabled?: boolean;\r\n\r\n    /**\r\n     * partOfPage (new in 2sxc 9.5)\r\n     * determines if resulting changes should effect the Evoq/DNN Page Publishing\r\n     * note that it only effects the page-lifecyle, if the resulting dialogs and APIs respect this setting\r\n     */\r\n    partOfPage?: boolean;\r\n\r\n    /** if this is just something visual; otherwise a webservice will ensure that a content-group exists (for editing etc.) */\r\n    uiActionOnly?: boolean;\r\n\r\n    /** the code executed on click, if it's not the default action */\r\n    code?<T>(settings: CommandParams): Promise<void | T>;\r\n\r\n    dialog?: string;\r\n    newWindow?: boolean;\r\n    inlineWindow?: boolean;\r\n    fullScreen?: boolean;\r\n\r\n    _expanded?: boolean; // marker to determine that the configuration has already been initialized\r\n\r\n    // check two common signatures - command and action\r\n    static is(thing: TypeTbD): thing is InPageButtonJson {\r\n        return thing.command !== undefined || thing.action !== undefined;\r\n    }\r\n\r\n    static isArray(thing: TypeTbD[]): thing is InPageButtonJson[] {\r\n        return thing.length > 0 && InPageButtonJson.is(thing[0]);\r\n    }\r\n\r\n    static toButton(oldFormat: InPageButtonJson): Partial<Button> {\r\n        const config: Partial<Button> = {};\r\n\r\n        // simple value properties\r\n        if (oldFormat.classes) config.classes = oldFormat.classes;\r\n        if (oldFormat.dialog) config.dialog = oldFormat.dialog;\r\n        if (oldFormat.disabled) config.disabled = oldFormat.disabled;\r\n        if (oldFormat.icon) config.icon = oldFormat.icon;\r\n\r\n        // Method Properties\r\n        if (oldFormat.fullScreen) config.fullScreen = evalPropOrFun(oldFormat.fullScreen);\r\n        if (oldFormat.icon) config.icon = evalPropOrFun(oldFormat.icon);\r\n        if (oldFormat.inlineWindow) config.inlineWindow = evalPropOrFun(oldFormat.inlineWindow);\r\n        if (oldFormat.newWindow) config.newWindow = evalPropOrFun(oldFormat.newWindow);\r\n        if (oldFormat.partOfPage) config.partOfPage = evalPropOrFun(oldFormat.partOfPage);\r\n        if (oldFormat.title) config.title = evalPropOrFun(oldFormat.title);\r\n        // if (oldFormat.dynamicClasses) config.dynamicClasses = evalPropOrFun(oldFormat.dynamicClasses);\r\n        // if (oldFormat.showCondition) config.showCondition = evalPropOrFun(oldFormat.showCondition);\r\n\r\n        return config;\r\n    }\r\n\r\n    //#region these are properties 2dm found but think they are never used. Keeping them till ca. May 2020\r\n\r\n    // dynamicClasses(settings) can be used to dynamically build classes depending on the situation\r\n    // 2020-03-27 2dm disabled this - doesn't make much sense in the in-page configuration\r\n    // dynamicClasses?(settings: CommandParams): string;\r\n\r\n    // showCondition - used to dynamically choose if this button should be shown or not\r\n    // 2020-03-27 2dm disabled this - doesn't make much sense in the in-page configuration\r\n    // showCondition?(settings: CommandParams): boolean;\r\n\r\n    // 2020-03-27 2dm disabled, seems very unused\r\n    // name?: string;\r\n\r\n    // entity support (vertical compatibility for pre 2sxc v9.x)\r\n    // entity?: number;\r\n    // useModuleList?: boolean;\r\n    // entityId?: number;\r\n    // sortOrder?: number;\r\n\r\n    // params?: CommandParams;\r\n    //#endregion\r\n}\r\n\r\n\r\nfunction evalPropOrFun(propOrFunction: TypeTbD): TypeUnsafe {\r\n    if (propOrFunction === undefined || propOrFunction === null) return false;\r\n    if (typeof (propOrFunction) === 'function') return propOrFunction;\r\n    return () => propOrFunction;\r\n}\r\n","import { TypeTbD } from '../../../plumbing/TypeTbD';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface InPageCommandJsonWithTooMuchInfo extends InPageCommandJson {\r\n    entity?: {\r\n        EntityId: number,\r\n        _2sxcEditInformation: {\r\n            sortOrder?: number,\r\n        },\r\n    };\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class InPageCommandJson  {\r\n    /** List of buttons to show */\r\n    action?: string;\r\n\r\n    /** The entity id to edit */\r\n    entityId?: number;\r\n\r\n    /** the content-type for new items */\r\n    contentType?: string;\r\n\r\n    /** determines that we should use a module list */\r\n    useModuleList?: boolean;\r\n\r\n    /** index in the list */\r\n    sortOrder?: number;\r\n\r\n    /** Experimental in 10.27 */\r\n    modify?: string;\r\n\r\n    /** Experimental for 10.30 */\r\n    parent?: string;\r\n    /** Experimental for 10.30 */\r\n    fields?: string;\r\n\r\n    static hasActions(thing: TypeTbD): thing is InPageCommandJson {\r\n        // check two common signatures - command and action\r\n        return typeof(thing as InPageCommandJson).action === 'string';\r\n    }\r\n\r\n    static hasModify(thing: TypeTbD): thing is InPageCommandJson {\r\n        // check two common signatures - command and action\r\n        return !!(thing as InPageCommandJson).modify;\r\n    }\r\n\r\n    /** Important for object merging - because otherwise action will be preserved */\r\n    static noAction(thing: InPageCommandJson) {\r\n        // some clean-up\r\n        delete thing.action; // remove the action property\r\n        return thing;\r\n    }\r\n\r\n\r\n}\r\n","import { InPageCommandJson } from '.';\r\nimport { InPageButtonJson } from '.';\r\nimport { ToolbarConfigLoader } from '.';\r\nimport { CmdMore, Commands } from '../../commands';\r\nimport { ContextComplete } from '../../context/bundles';\r\nimport { HasLog } from '../../logging';\r\nimport { DictionaryValue } from '../../plumbing';\r\nimport { Button, Toolbar } from '../config';\r\nimport { ButtonSafe } from '../config/button-safe';\r\n\r\n/**\r\n * This is a system to build button configurations\r\n * @internal\r\n */\r\nexport class ButtonConfigLoader extends HasLog {\r\n\r\n    constructor(private toolbar: ToolbarConfigLoader) {\r\n        super('Tlb.BtCfBl', toolbar.log);\r\n    }\r\n\r\n    /**\r\n     * takes an object like \"actionname\" or { action: \"actionname\", ... }\r\n     * and changes it to a { command: { action: \"actionname\" }, ... }\r\n     */\r\n    normalize(original: InPageButtonJson | InPageCommandJson | string): InPageButtonJson {\r\n        const cl = this.log.call('normalize');\r\n        cl.data('initial', original);\r\n\r\n        // prevent multiple inits\r\n        const asBtnConfig = original as InPageButtonJson;\r\n        if (asBtnConfig._expanded || asBtnConfig.command)\r\n            return cl.return(asBtnConfig, \"already expanded, won't modify\");\r\n\r\n        // if just a name, turn into a command\r\n        // use the deep version with command.action, because of more clean-up later on\r\n        if (typeof original === 'string')\r\n            return cl.return(this.btnConfigStructure(original, {}), 'found name, use that');\r\n\r\n        // if it's a command w/action, wrap into command + trim\r\n        if (InPageCommandJson.hasActions(original)) {\r\n            cl.add('action found, will move down to .command', original);\r\n            if (original.action) original.action = original.action.trim();\r\n            return cl.return({\r\n                command: original,\r\n                _expanded: true,\r\n            }, 'had actions, convert to commands');\r\n        }\r\n\r\n        throw 'can\\'t expand InPageButtonConfiguration - unexpected type signature encountered';\r\n    }\r\n\r\n    btnConfigStructure(name: string, params: {}): InPageButtonJson {\r\n        const wrapLog = this.log.call('getFromName', name);\r\n        return wrapLog.return({\r\n            command: {\r\n                action: name.trim(),\r\n                params: params,\r\n            },\r\n            _expanded: true,\r\n        }, `name \"${name}\" found, will re-map to .command.action`);\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * remove buttons which are not valid based on add condition\r\n     * @param {ContextComplete} context\r\n     * @param {Toolbar} full\r\n     * @param {InstanceConfig} config\r\n     * @memberof ButtonConfigurationBuilder\r\n     */\r\n    removeDisableButtons(context: ContextComplete, full: Toolbar,\r\n        // #CodeChange#2020-03-22#InstanceConfig - believe this is completely unused; remove in June\r\n        // config: InstanceConfig\r\n    ): void {\r\n        const wrapLog = this.log.call('removeDisableButtons', `length of groups: ${full.groups.length}`);\r\n        const btnGroups = full.groups;\r\n        for (let g = 0; g < btnGroups.length; g++) {\r\n            const btns = btnGroups[g].buttons;\r\n            // #CodeChange#2020-03-22#InstanceConfig - believe this is completely unused; remove in June\r\n            // const config = InstanceConfig.fromContext(context);\r\n            this.removeUnfitButtons(context, /* full,*/ btns /* config, */);\r\n\r\n            wrapLog.add('will disable appropriate buttons');\r\n            // #CodeChange#2020-03-22#InstanceConfig - believe this is completely unused; remove in June\r\n            // disableButtons(context, btns/*, config */);\r\n\r\n            // remove the group, if no buttons left, or only \"more\"\r\n            if (btns.length === 0 || (btns.length === 1 && btns[0].command.name === CmdMore)) {\r\n                wrapLog.add('found no more buttons except for the \"more\" - will remove that group');\r\n                btnGroups.splice(g--, 1); // remove, and decrement counter\r\n            }\r\n        }\r\n        wrapLog.return(null);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * enhance button-object with default icons, etc.\r\n     * @param btn\r\n     * @param group\r\n     * @param fullToolbarConfig\r\n     * @param actions\r\n     */\r\n    addDefaultBtnSettings(btn: Button,\r\n                          groupDefaults: DictionaryValue | null,\r\n                          tlbDefaults: DictionaryValue | null | undefined,\r\n                          actions: Commands) {\r\n        const cl = this.log.call('addDefaultBtnSettings', '', `for ${() => btn.command.name}`);\r\n        for (let d = 0; d < btnProperties.length; d++)\r\n            fallbackBtnSetting(btn, groupDefaults, tlbDefaults, actions, btnProperties[d]);\r\n        cl.return(null);\r\n    }\r\n\r\n\r\n\r\n    private removeUnfitButtons(context: ContextComplete, btns: Button[]): void {\r\n        // #CodeChange#2020-03-22#InstanceConfig - believe this is completely unused; remove in June\r\n        // config: InstanceConfig,\r\n        const cl = this.log.call('removeUnfitButtons');\r\n        let removals = '';\r\n        for (let i = 0; i < btns.length; i++) {\r\n            const btn = btns[i];\r\n            if (btn.command) {\r\n                context.button = btn; // add to context for calls\r\n                const rule = this.toolbar.toolbarV10.rules.find(btn.id || btn.command.name);\r\n                let show: boolean = rule?.overrideShow();\r\n                if (show === undefined) {\r\n                    show = new ButtonSafe(btn, context).showCondition();\r\n                }\r\n                if (show === false) {\r\n                    removals += `#${i} \"${btn.command.name}\"; `;\r\n                    btns.splice(i--, 1);\r\n                }\r\n                cl.add(`btn '${btn.command.name}' show ${show}`);\r\n            }\r\n        }\r\n        if (removals)\r\n            cl.add(`removed buttons: ${removals}`);\r\n        cl.return(null);\r\n    }\r\n\r\n}\r\n\r\nconst btnProperties = [\r\n  'classes',\r\n  'icon',\r\n  'title',\r\n  'dynamicClasses',\r\n  'showCondition',\r\n  'disabled',\r\n];\r\n\r\n\r\n/**\r\n * configure missing button properties with various fallback options\r\n * @param btn\r\n * @param group\r\n * @param fullToolbarConfig\r\n * @param actions\r\n * @param propName\r\n */\r\nfunction fallbackBtnSetting(btn: Button,\r\n                            groupDefaults: DictionaryValue | null,\r\n                            toolbarDefaults: DictionaryValue | null | undefined,\r\n                            actions: Commands,\r\n                            propName: string) {\r\n    const target = btn as unknown as DictionaryValue;\r\n\r\n    // skip it property is already set\r\n    if (target[propName])\r\n        return;\r\n\r\n    if (groupDefaults && groupDefaults[propName])\r\n        return target[propName] = groupDefaults[propName];\r\n\r\n    // if the toolbar has defaults, try use that property\r\n    if (toolbarDefaults && toolbarDefaults[propName])\r\n        return target[propName] = toolbarDefaults[propName];\r\n\r\n    // if there is an action, try to use that property name\r\n    if (btn.command && btn.command.name) {\r\n        const a = actions.get(btn.command.name);\r\n        if (a && a.buttonDefaults) {\r\n            const c = a.buttonDefaults as DictionaryValue;\r\n            if (c[propName])\r\n                return target[propName] = c[propName];\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @internal\r\n */\r\nexport enum Operations {\r\n    add = '+',\r\n    remove = '-',\r\n    system = '$', // for $params, $settings?\r\n    modify = '%',\r\n    comment = '/',\r\n}\r\n","/**\r\n * @internal\r\n */\r\nexport enum BuildSteps {\r\n    toolbar = 'toolbar',\r\n    group = 'group',\r\n    button = 'button',\r\n    params = 'params',\r\n    settings = 'settings',\r\n}\r\n","import { ToolbarConfigLoader } from '.';\r\nimport { InPageCommandJson, InPageCommandJsonWithTooMuchInfo } from '.';\r\nimport { HasLog } from '../../logging';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class CommandConfigLoader extends HasLog {\r\n\r\n    constructor(private toolbar: ToolbarConfigLoader) {\r\n        super('Tlb.CmdLdr', toolbar.log);\r\n    }\r\n    /**\r\n     * entity support (compatibility for pre 2sxc v9.x)\r\n     * does some clean-up work on a button-definition object\r\n     * because the target item could be specified directly, or in a complex internal object called entity\r\n     * @param actDef\r\n     */\r\n    updateToV9(actDef: InPageCommandJsonWithTooMuchInfo): InPageCommandJson {\r\n\r\n        // doesn't have the pre-V9 properties, so we're fine\r\n        if (!actDef.entity || !actDef.entity._2sxcEditInformation)\r\n            return actDef as InPageCommandJson;\r\n\r\n        const editInfo = actDef.entity._2sxcEditInformation;\r\n\r\n        // move up sortOrder property and set useModuleList\r\n        actDef.useModuleList = (editInfo.sortOrder !== undefined); // has sort-order, so use list\r\n        if (editInfo.sortOrder !== undefined)  actDef.sortOrder = editInfo.sortOrder;\r\n\r\n        // move up entityId and clean-up the old 'entity' property\r\n        if (actDef.entity.EntityId !== undefined) actDef.entityId = actDef.entity.EntityId;\r\n        delete actDef.entity;\r\n\r\n        return actDef;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * @internal\r\n */\r\nexport const TemplateConstants = {\r\n    NameDefault: 'default',\r\n    NameEmpty: 'empty',\r\n    GroupDefault: 'default',\r\n    GroupList: 'list',\r\n    GroupEditAdvanced: 'edit-advanced',\r\n    GroupView: 'view',\r\n    GroupApp: 'app',\r\n    GroupUnknown: 'unknown',\r\n    ButtonSeparator: ',',\r\n};\r\n","import { ToolbarWip } from '.';\r\nimport { InPageButtonJson, InPageCommandJson } from '.';\r\nimport { ButtonGroupWip } from '.';\r\nimport { CmdMore, CommandParams, Commands } from '../../commands';\r\nimport { HasLog } from '../../logging';\r\nimport { DictionaryValue } from '../../plumbing';\r\nimport { Button, ButtonCommand, Toolbar, ToolbarSettings } from '../config';\r\nimport { ButtonGroup } from '../config';\r\nimport { TemplateConstants as TC } from '../templates/constants';\r\nimport { ToolbarConfigLoader } from './toolbar-config-loader';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ButtonGroupConfigLoader extends HasLog {\r\n\r\n    constructor(private toolbar: ToolbarConfigLoader) {\r\n        super('Tlb.GrpCnf', toolbar.log);\r\n    }\r\n\r\n    /**\r\n     * this will traverse a groups-tree and expand each group\r\n     * so if groups were just strings like \"edit,new\" or compact buttons, they will be expanded afterwards\r\n     * @param fullToolbar\r\n     */\r\n    expandButtonGroups(fullToolbar: ToolbarWip): Toolbar {\r\n        const cl = this.log.call('expandButtonGroups');\r\n\r\n        // by now we should have a structure, let's check/fix the buttons\r\n        cl.add(`will expand groups - found ${fullToolbar.groups.length} items`);\r\n        for (let g = 0; g < fullToolbar.groups.length; g++) {\r\n            // expand a verb-list like \"edit,new\" into objects like [{ action: \"edit\" }, {action: \"new\"}]\r\n            const group = fullToolbar.groups[g];\r\n            const groupDefaults = (group as ButtonGroup).defaults;\r\n            const btns = this.expandButtonList(group, fullToolbar.settings);\r\n            const buttonConfigs: Button[] = [];\r\n\r\n            if (Array.isArray(btns)) {\r\n                cl.add(`will process ${btns.length} buttons`);\r\n                for (let b = 0; b < btns.length; b++)\r\n                    buttonConfigs.push(this.convertToButton(btns[b], fullToolbar.params, fullToolbar.defaults, groupDefaults));\r\n            } else\r\n                cl.add(\"no button array found, won't do a.nything\");\r\n\r\n            // Toolbar API v2 overwrite V1\r\n            group.buttons = buttonConfigs;\r\n        }\r\n        const toolbar = fullToolbar as Toolbar;\r\n        this.dropMoreIfOnlyOneGroup(toolbar);\r\n        return cl.return(toolbar);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Converts the InPageButtonJson to a Button\r\n     * WARNING: Note that this does the same task as convertToButton in the ButtonConfigLoader - but very differently\r\n     *          I'm not sure why though.\r\n     */\r\n    convertToButton(btn: InPageButtonJson,\r\n                    sharedParams: CommandParams | DictionaryValue,\r\n                    sharedDefaults: DictionaryValue,\r\n                    // fullToolbar: ToolbarWip,\r\n                    // group: ButtonGroupWip\r\n                    groupDefaults: DictionaryValue,\r\n                    ): Button {\r\n        let btnCommand = (btn as unknown as { command: CommandParams; }).command;\r\n        const identifier = btnCommand.action;\r\n        const name = Button.splitName(identifier).name;\r\n\r\n        if (!(Commands.singleton().get(name))) {\r\ndebugger;\r\n            this.log.add(`couldn't find action ${name} - show warning`);\r\n            console.warn('warning: toolbar-button with unknown action-name:', name);\r\n        }\r\n\r\n        // first check if we already got params in the object - then we will use those, otherwise the main object\r\n        const realParams = (btnCommand as ButtonCommand).params\r\n            || InPageCommandJson.noAction(btnCommand);\r\n\r\n        const contentType = realParams.contentType;\r\n\r\n        // if the button belongs to a content-item, move the specs up to the item into the settings-object\r\n        btnCommand = this.toolbar.command.updateToV9(btnCommand);\r\n\r\n        // parameters adapter from v1 to v2\r\n        const params = { ...realParams, ...sharedParams };\r\n        // Toolbar API v2\r\n        const command = new ButtonCommand(name, contentType, params);\r\n        let newButtonConfig = new Button(command, identifier);\r\n\r\n        // settings adapter from v1 to v2\r\n        newButtonConfig = { ...newButtonConfig, ...InPageButtonJson.toButton(btn) };\r\n\r\n        // ensure all buttons have either own settings, or the fallback\r\n        this.toolbar.button.addDefaultBtnSettings(newButtonConfig, groupDefaults, sharedDefaults, Commands.singleton());\r\n        return newButtonConfig;\r\n    }\r\n\r\n    /**\r\n     * take a list of buttons (objects OR strings)\r\n     * and convert to proper array of buttons with actions\r\n     * on the in is a object with buttons, which are either:\r\n     * - a string like \"edit\" or multi-value \"layout,more\"\r\n     * - an array of such strings incl. optional complex objects which are\r\n     */\r\n    private expandButtonList(root: ButtonGroupWip, settings: ToolbarSettings): InPageButtonJson[] {\r\n        const wrapLog = this.log.call('expandButtonList'); // new Log('Tlb.ExpBts', this.log, 'start');\r\n        wrapLog.add('initial', root);\r\n        const buttonsWip = root.buttons;\r\n\r\n        let newButtons: InPageButtonJson[] = [];\r\n\r\n        // convert compact buttons (with multi-verb action objects) into own button-objects\r\n        // important because an older syntax allowed {action: \"new,edit\", entityId: 17}\r\n        if (Array.isArray(buttonsWip)) {\r\n            wrapLog.add(`detected array of btns (${buttonsWip.length}), will ensure it's an object`);\r\n            for (let b = 0; b < buttonsWip.length; b++) {\r\n                const btn = buttonsWip[b] as InPageButtonJson;\r\n                const actionNames = (btn as InPageCommandJson).action;\r\n                wrapLog.add(`will process actions: '${actionNames}' for `, btn);\r\n                if (typeof actionNames === 'string' && actionNames.indexOf(',') > -1) {\r\n                    wrapLog.add(`actionNames has mult values: '${actionNames}'`);\r\n                    this.expandButtonAndAddToList(newButtons, btn, actionNames);\r\n                } else {\r\n                    wrapLog.add('actionNames has 1 value', btn);\r\n                    newButtons.push(btn);\r\n                }\r\n            }\r\n        } else if (typeof buttonsWip === 'string') {\r\n            wrapLog.add(`detected that it is a string \"${buttonsWip}\", will split by \",\" and ...`);\r\n            this.expandButtonAndAddToList(newButtons, {}, buttonsWip);\r\n        } else {\r\n            wrapLog.add('no special case detected, will use the buttons-object as is');\r\n            newButtons = buttonsWip;\r\n        }\r\n        wrapLog.add(`after check, found ${newButtons.length} buttons`, newButtons);\r\n\r\n        // optionally add a more-button in each group\r\n        this.addMoreButton(settings, newButtons);\r\n\r\n        const result = newButtons.map((x) => this.toolbar.button.normalize(x)); // ensure the internal def is also an array now\r\n        return wrapLog.return(result, 'done');\r\n    }\r\n\r\n\r\n    private expandButtonAndAddToList(list: InPageButtonJson[], btn: InPageButtonJson, names: string): void {\r\n        const cl = this.log.call('expandButtonAndAddToList', `..., ..., '${names}'`, `button def \"${btn} is string of mult names, will expand into array with action-properties\"`);\r\n        const actions = names.length ? names.split(TC.ButtonSeparator) : [];\r\n        const params = {...btn} as InPageCommandJson;\r\n        delete params.action;\r\n        for (let a = 0; a < actions.length; a++) {\r\n            const commandPart = this.toolbar.button.btnConfigStructure(actions[a], params);\r\n            cl.data('commandPart', commandPart);\r\n            list.push(commandPart); // {...btn, ...commandPart });\r\n        }\r\n        cl.return(list);\r\n    }\r\n\r\n    /** Add the \"more\" button at the end or beginning */\r\n    private addMoreButton(settings: ToolbarSettings, list: InPageButtonJson[]): void {\r\n        const cl = this.log.call('addMoreButtons');\r\n        const addMore = settings.autoAddMore;\r\n        if (addMore) {\r\n            const moreButton = this.toolbar.button.btnConfigStructure(CmdMore, {});\r\n            if ((addMore === 'end') || (addMore.toString() === 'right')) { // fallback for older v1 setting\r\n                this.log.add('will add a more \"...\" button to end');\r\n                list.push(moreButton);\r\n            } else {\r\n                this.log.add('will add a more \"...\" button to start');\r\n                list.unshift(moreButton);\r\n            }\r\n        } else this.log.add('will not add more \"...\" button');\r\n        cl.return(list);\r\n    }\r\n\r\n    /**\r\n     * If there is only one group, then remove the More button.\r\n     * Note that this has to happen almost at the end, because groups will be removed if empty\r\n     */\r\n    private dropMoreIfOnlyOneGroup(toolbar: Toolbar): void {\r\n        const cl = this.log.call('dropMoreIfOnlyOneGroup');\r\n        if (toolbar.groups.length !== 1) return cl.done('not just 1 group');\r\n        cl.add('exactly one group found, will remove more');\r\n        const buttons = toolbar.groups[0].buttons;\r\n        const index = buttons.findIndex((b) => b.command?.name === CmdMore);\r\n        if (index === -1) return cl.done(\"no 'more' button found\");\r\n        buttons.splice(index, 1);\r\n        cl.done('more removed');\r\n    }\r\n\r\n}\r\n","import { TemplateConstants as TC, ToolbarTemplate } from '.';\r\n\r\n/**\r\n * @internal\r\n */\r\n// the default / initial buttons in a standard toolbar\r\nexport const ToolbarTemplateEmpty: ToolbarTemplate = {\r\n  name: TC.NameEmpty,\r\n  groups: [\r\n    {\r\n      name: TC.GroupDefault,\r\n      buttons: '',\r\n    },\r\n  ],\r\n  defaults: {},\r\n  params: {},\r\n  settings: {\r\n    autoAddMore: 'end',\r\n  },\r\n  _isToolbarTemplate: true,\r\n};\r\n","import { TemplateConstants as TC, ToolbarTemplate } from '.';\r\n\r\n/**\r\n * @internal\r\n */\r\n// the default / initial buttons in a standard toolbar\r\nexport const ToolbarTemplateDefault: ToolbarTemplate = {\r\n  name: TC.NameDefault,\r\n  groups: [\r\n    {\r\n      name: TC.GroupDefault,\r\n      buttons: 'edit,new,metadata,publish,layout',\r\n    }, {\r\n      name: TC.GroupList,\r\n      buttons: 'add,add-existing,replace,remove,moveup,movedown,instance-list',\r\n    }, {\r\n      name: TC.GroupEditAdvanced,\r\n      buttons: 'delete',\r\n    }, {\r\n      name: TC.GroupView,\r\n      buttons: 'template-develop,template-settings,contentitems,template-query,contenttype',\r\n      defaults: {\r\n        classes: 'group-pro',\r\n      },\r\n    }, {\r\n      name: TC.GroupApp,\r\n      buttons: 'app,app-settings,app-resources,zone,insights-server',\r\n      defaults: {\r\n        classes: 'group-pro',\r\n      },\r\n    },\r\n  ],\r\n  defaults: {},\r\n  params: {},\r\n  settings: {\r\n    autoAddMore: 'end',\r\n    // these are defaults, don't set again\r\n    // hover: \"right\",\r\n  },\r\n  _isToolbarTemplate: true,\r\n};\r\n","import { TemplateConstants as TC, ToolbarTemplate } from '.';\r\n\r\n/**\r\n * @internal\r\n */\r\n// the default / initial buttons in a standard toolbar\r\nexport const ToolbarTemplateSublist: ToolbarTemplate = {\r\n  name: 'sublist',\r\n  groups: [\r\n    {\r\n      name: TC.GroupDefault,\r\n      buttons: 'edit,new,publish',\r\n      defaults: {\r\n        classes: 'group-inlist',\r\n      },\r\n    }, {\r\n      name: TC.GroupList,\r\n      buttons: 'add-existing,replace,remove,moveup,movedown,instance-list',\r\n      defaults: {\r\n        classes: 'group-inlist',\r\n      },\r\n    }, {\r\n      name: TC.GroupEditAdvanced,\r\n      buttons: 'delete',\r\n      defaults: {\r\n        classes: 'group-inlist',\r\n      },\r\n    },\r\n  ],\r\n  defaults: {},\r\n  params: {},\r\n  settings: {\r\n    autoAddMore: 'end',\r\n  },\r\n  _isToolbarTemplate: true,\r\n};\r\n","import { ToolbarTemplate, ToolbarTemplateDefault, ToolbarTemplateEmpty, ToolbarTemplateSublist } from '.';\r\nimport { HasLog, Insights } from '../../logging';\r\nimport { Obj } from '../../plumbing';\r\n\r\n/**\r\n * The template manager provides toolbar templates to the entire system.\r\n * It basically keeps a list of predefined templates, and returns the ones needed\r\n * @internal\r\n */\r\nexport class ToolbarTemplateManager extends HasLog {\r\n    /** Singleton */\r\n    public static singleton(): ToolbarTemplateManager {\r\n        return this._singleton ?? (this._singleton = new ToolbarTemplateManager());\r\n    }\r\n    private static _singleton: ToolbarTemplateManager;\r\n\r\n    configTemplateList: ToolbarTemplate[] = [];\r\n\r\n    /** hash - table of templates, to be used a list()['template - name'] */\r\n    list: HashTable<ToolbarTemplate> = {};\r\n\r\n    constructor() {\r\n        super('Tlb.TmpMan', null, 'build');\r\n        Insights.add('system', 'toolbar-template-manager', this.log);\r\n        this.add(ToolbarTemplateEmpty);\r\n        this.add(ToolbarTemplateDefault);\r\n        // CodeChange #2020-03-20#TemplateToolbarLeftUnused - if no side-effects, delete in June\r\n        // this.add('left', ToolbarTemplateLeft);\r\n        this.add(ToolbarTemplateSublist);\r\n    }\r\n\r\n    /**\r\n     * Deep copy toolbar template, so it can be modified without changing the next use\r\n     */\r\n    copy(name: string): ToolbarTemplate {\r\n        return Obj.DeepClone(this.findOrShowError(name));\r\n    }\r\n    private findOrShowError(name: string): ToolbarTemplate {\r\n        const found = this.list[name];\r\n        if (found) return found;\r\n        throw `try to find toolbar template '${name}' but not found`;\r\n    }\r\n\r\n    /**\r\n     * adds a template to the list, if it doesn't exist\r\n     */\r\n    private add(template: ToolbarTemplate) {\r\n        this.list[template.name] = template;\r\n    }\r\n}\r\n","import { ListWithCursor, ToolbarTemplateGroup } from '.';\r\nimport { DictionaryValue, TypeTbD } from '../../plumbing';\r\nimport { ToolbarSettings } from '../config/toolbar-settings';\r\n\r\n/**\r\n * This describes a template configuration of a toolbar\r\n * It's meant to provide type-save templates for what buttons are used where\r\n * @internal\r\n */\r\nexport class ToolbarTemplate implements ListWithCursor {\r\n    name: string;\r\n    groups: ToolbarTemplateGroup[] = [];\r\n    defaults?: DictionaryValue = {};\r\n    params?: DictionaryValue = {};\r\n    settings?: Partial<ToolbarSettings> = {};\r\n    debug?: boolean;\r\n    _isToolbarTemplate: true;\r\n    _insertCursor?: 0;\r\n\r\n    static is(thing: TypeTbD): thing is ToolbarTemplate {\r\n        return (thing as ToolbarTemplate)._isToolbarTemplate;\r\n    }\r\n\r\n    static hasGroups(thing: TypeTbD): thing is ToolbarTemplate {\r\n        return Array.isArray((thing as ToolbarTemplate).groups);\r\n    }\r\n\r\n}\r\n","import { ListWithCursor, TemplateConstants } from '.';\r\nimport { TypeTbD } from '../../plumbing';\r\n\r\n/**\r\n * This describes a button group in a toolbar template.\r\n * It should only be used for that\r\n * @internal\r\n */\r\nexport class ToolbarTemplateGroup implements ListWithCursor {\r\n    name: string = TemplateConstants.GroupUnknown;\r\n    buttons: string = '';\r\n    defaults?: HashTable<string> = {};\r\n    _insertCursor?: 0;\r\n\r\n    static is(thing: TypeTbD): thing is ToolbarTemplateGroup {\r\n        return (thing as ToolbarTemplateGroup).buttons !== undefined;\r\n    }\r\n}\r\n","import { ListWithCursor, ToolbarTemplate, ToolbarTemplateGroup } from '.';\r\nimport { HasLog } from '../../logging';\r\nimport { ToolbarConfigLoader } from '../config-loaders';\r\nimport { TemplateConstants as TC } from './constants';\r\n\r\n/**\r\n * This object is used to change the structure of a toolbar template.\r\n * It's only purpose is to assist in the new V10 format for quickly making toolbars.\r\n * @internal\r\n */\r\nexport class TemplateEditor extends HasLog {\r\n    constructor(public toolbar: ToolbarConfigLoader) {\r\n        super('Tlb.TplEdt', toolbar.log);\r\n    }\r\n\r\n    addButton(template: ToolbarTemplate, groupName: string, id: string, name: string, pos: number): void {\r\n        // fromStart\r\n        const fromStart = !(Object.is(pos, -0) || pos < 0);\r\n        pos = Math.abs(pos);\r\n        // console.log('addbutton - pos', `${fromStart ? '+' : '-'}${pos}`);\r\n        const cl = this.log.call('addButton', `..., ${groupName}, ${id}, ${name}, ${fromStart ? '+' : '-'}${pos}, ${fromStart}`);\r\n        if (!template) return cl.done('no template');\r\n        let group = this.findGroupOrDefault(template, groupName);\r\n        if (!group) group = this.addGroup(template, groupName, 1000); // create group at end\r\n        const buttons = group.buttons?.split(TC.ButtonSeparator) ?? [];\r\n        const buttonId = id === name ? name : `${id}=${name}`;\r\n        const posStartEnd = this.correctPosStartEnd(buttons, pos, fromStart);\r\n        const posInsert = fromStart ? this.findInsertPosition(group, posStartEnd) : posStartEnd;\r\n        cl.add(`pos: ${pos}, startEnd: ${posStartEnd}, insert:${posInsert}`);\r\n        buttons.splice(posInsert, 0, buttonId);\r\n        group.buttons = buttons\r\n            .filter((b) => b.length) // drop empty items\r\n            .join(TC.ButtonSeparator);\r\n        cl.done();\r\n    }\r\n\r\n\r\n    private findInsertPosition(group: ListWithCursor, pos: number): number {\r\n        group._insertCursor = group._insertCursor || 0;\r\n        if (pos === 0) pos = group._insertCursor++;\r\n        return pos;\r\n    }\r\n\r\n    private correctPosStartEnd(target: Array<unknown>, pos: number, fromStart: boolean) {\r\n        if (fromStart) return pos;\r\n        pos = target.length - pos;\r\n        return pos >= 0 ? pos : target.length;\r\n    }\r\n\r\n    addGroup(template: ToolbarTemplate, groupName: string, pos: number): ToolbarTemplateGroup {\r\n        const fromStart = !(Object.is(pos, -0) || pos < 0);\r\n        pos = Math.abs(pos);\r\n        const cl = this.log.call('addGroup', `..., ${groupName}, ${fromStart ? '+' : '-'}${pos}`);\r\n        this.ensureGroups(template);\r\n        const alreadyExists = this.findGroup(template, groupName);\r\n        if (alreadyExists) return cl.return(alreadyExists, 'already exists');\r\n        const newGroup = new ToolbarTemplateGroup();\r\n        newGroup.name = groupName;\r\n        const posStartEnd = this.correctPosStartEnd(template.groups, pos, fromStart);\r\n        const posInsert = fromStart ? this.findInsertPosition(template, posStartEnd) : posStartEnd;\r\n        template.groups.splice(posInsert, 0, newGroup);\r\n        return cl.return(newGroup, 'created');\r\n    }\r\n\r\n    removeGroup(template: ToolbarTemplate, groupName: string): void {\r\n        const group = this.findGroup(template, groupName);\r\n        if (!group) return;\r\n        const index = template.groups.indexOf(group);\r\n        if (index < 0) return;\r\n        template.groups.splice(index, 1);\r\n    }\r\n\r\n    private ensureGroups = (template: ToolbarTemplate): void => { if (!template.groups) template.groups = []; };\r\n    private findGroup = (template: ToolbarTemplate, name: string): ToolbarTemplateGroup =>\r\n        template.groups.find((t) => t.name === name)\r\n\r\n    private findGroupOrDefault(template: ToolbarTemplate, name: string): ToolbarTemplateGroup {\r\n        const cl = this.log.call('findGroup', name);\r\n        this.ensureGroups(template);\r\n        if (template.groups.length === 0) return cl.return(null, 'no groups');\r\n        const found = this.findGroup(template, name);\r\n        if (found) return cl.return(found, 'found');\r\n        return cl.return(template.groups[0], 'not found, return first)');\r\n    }\r\n}\r\n","import { InPageButtonGroupJson, InPageButtonJson, InPageCommandJson, ToolbarConfigLoader, ToolbarWip } from '.';\r\nimport { InPageToolbarConfigVariations, ToolbarInitConfig } from '..';\r\nimport { ContextComplete } from '../../context';\r\nimport { HasLog } from '../../logging';\r\nimport { Button, Toolbar, ToolbarSettings } from '../config';\r\nimport { ToolbarTemplate, ToolbarTemplateDefault, ToolbarTemplateGroup, ToolbarTemplateSublist } from '../templates';\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ToolbarConfigLoaderV09 extends HasLog {\r\n\r\n    constructor(private toolbar: ToolbarConfigLoader) {\r\n        super('Tlb.TlbV09', toolbar.log);\r\n    }\r\n\r\n\r\n\r\n    public loadV9(context: ContextComplete, config: ToolbarInitConfig): Toolbar {\r\n        const cl = this.log.call('loadV9');\r\n        let toolbarSettings = config.settings;\r\n\r\n        // Default to empty toolbar settings if we don't have a toolbar or settings\r\n        // important: the checks look a bit strange, but there are cases where {} settings are handed in\r\n        // and we can't count the keys because that would result in other checks\r\n        if (Object.keys(config.toolbar).length > 0 && toolbarSettings === ({} as ToolbarSettings)) {\r\n            cl.add('no data or settings, will use default settings for empty');\r\n            toolbarSettings = ToolbarSettings.getForEmpty();\r\n        }\r\n\r\n        // if it has an action or is an array, keep that. Otherwise get standard buttons\r\n        const draftToolbar = this.getTemplateIfNoButtonsSpecified(config.toolbar as InPageToolbarConfigVariations);\r\n        cl.data('after template check', draftToolbar);\r\n\r\n        const toolbar = this.buildFullDefinition(context, draftToolbar, toolbarSettings);\r\n        return cl.return(toolbar, 'ok');\r\n    }\r\n\r\n\r\n    /**\r\n     * If the raw data has specs for what buttons, use that\r\n     * Otherwise load the button list from the template\r\n     */\r\n    public getTemplateIfNoButtonsSpecified(raw: InPageToolbarConfigVariations): InPageToolbarConfigVariations {\r\n        const cl = this.log.call('getTemplateIfNoButtonsSpecified');\r\n        cl.add('initial', raw);\r\n\r\n        if (InPageCommandJson.hasActions(raw)) return cl.return(raw, 'has actions, keep raw');\r\n        if (ToolbarTemplate.hasGroups(raw)) return cl.return(raw, 'has groups, keep raw');\r\n        if (ToolbarTemplateGroup.is(raw)) return cl.return(raw, 'is group, keep raw');\r\n        if (Array.isArray(raw)) return cl.return(raw, 'is array, keep raw');\r\n\r\n        // final: nothing defined, use template\r\n        cl.add('no toolbar structure specified, will use standard toolbar template');\r\n        // If it's a sub-list toolbar, use the special template for it\r\n        const defToolbarname = (raw as InPageCommandJson).fields ? ToolbarTemplateSublist.name : ToolbarTemplateDefault.name;\r\n        const template = this.toolbar.templates.copy(defToolbarname);\r\n        template.params = (Array.isArray(raw) && raw[0]) || raw; // attach parameters\r\n        return cl.return(template, 'use template');\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * take various common input format and convert it to a full toolbar-structure definition\r\n     * can handle the following input formats (the param unstructuredConfig):\r\n     * complete tree (detected by \"groups): { groups: [ {}, {}], name: ..., defaults: {...} }\r\n     * group of buttons (detected by \"buttons): { buttons: \"...\" | [], name: ..., ... }\r\n     * list of buttons (detected by IsArray with action): [ { action: \"...\" | []}, { action: \"\"|[]} ]\r\n     * button (detected by \"command\"): { command: \"\"|[], icon: \"..\", ... }\r\n     * just a command (detected by \"action\"): { entityId: 17, action: \"edit\" }\r\n     * array of commands: [{entityId: 17, action: \"edit\"}, {contentType: \"blog\", action: \"new\"}]\r\n     */\r\n    public buildFullDefinition(\r\n        toolbarContext: ContextComplete,\r\n        unstructuredConfig: InPageToolbarConfigVariations,\r\n        // #CodeChange#2020-03-22#InstanceConfig - believe this is completely unused; remove in June\r\n        // instanceConfig: InstanceConfig,\r\n        toolbarSettings: ToolbarSettings,\r\n    ): Toolbar {\r\n    const cl = this.log.call('buildFullDefinition');\r\n\r\n    const configWip = this.ensureDefinitionTree(unstructuredConfig, toolbarSettings); // as unknown as Toolbar;\r\n\r\n    if (ToolbarTemplate.is(unstructuredConfig) && unstructuredConfig.debug)\r\n        console.log('toolbar: detailed debug on; start build full Def');\r\n\r\n    const result = this.toolbar.buildTreeAndModifyAccordingToRules(toolbarContext, configWip);\r\n    return cl.return(result);\r\n}\r\n\r\n\r\n\r\n    //#region build initial toolbar object\r\n    /**\r\n     * this will take an input which could already be a tree, but it could also be a\r\n     * button-definition, or just a string, and make sure that afterwards it's a tree with groups\r\n     * the groups could still be in compact form, or already expanded, depending on the input\r\n     * output is object with:\r\n     * - groups containing buttons[], but buttons could still be very flat\r\n     * - defaults, already officially formatted\r\n     * - params, officially formatted\r\n     * @param unstructuredConfig\r\n     * @param toolbarSettings\r\n     */\r\n    private ensureDefinitionTree(unstructuredConfig: InPageToolbarConfigVariations, toolbarSettings: ToolbarSettings): ToolbarWip {\r\n        const wrapLog = this.log.call('ensureDefinitionTree');\r\n        // original is null/undefined, just return empty set\r\n        if (!unstructuredConfig) throw (`preparing toolbar, with nothing to work on: ${unstructuredConfig}`);\r\n\r\n        const newToolbar: ToolbarWip = new Toolbar();\r\n        newToolbar.groups = this.findGroups(unstructuredConfig);\r\n\r\n        const probablyTemplate = unstructuredConfig as ToolbarTemplate;\r\n        newToolbar.params = probablyTemplate.params || {}; // these are the default command parameters\r\n        newToolbar.settings = { ...ToolbarSettings.getDefaults(), ...probablyTemplate.settings, ...ToolbarSettings.dropEmptyProperties(toolbarSettings)};\r\n\r\n        newToolbar.debug = probablyTemplate.debug || false; // show more debug info\r\n        newToolbar.defaults = probablyTemplate.defaults || {}; // the button defaults like icon, etc.\r\n\r\n        return wrapLog.return(newToolbar);\r\n    }\r\n\r\n\r\n\r\n    private findGroups(unstructuredConfig: InPageToolbarConfigVariations): InPageButtonGroupJson[] { // ButtonGroupsWip {\r\n        const cl = this.log.call('findGroups');\r\n        cl.data('initial', unstructuredConfig);\r\n\r\n        // case 0: nothing in the config\r\n        if (!unstructuredConfig || unstructuredConfig === {})\r\n            return cl.return([], 'case 0: empty object, use []');\r\n\r\n        const arrGroups: InPageButtonGroupJson[] = []; // Array<InPageButtonJson | ButtonGroup>;\r\n\r\n        // ensure that the groups are all correct\r\n        cl.add('will detect what initial structure was given');\r\n\r\n        // Case 2: Array\r\n        if (Array.isArray(unstructuredConfig)) {\r\n            cl.add('Case 2: is array');\r\n            if (unstructuredConfig.length === 0)\r\n                return cl.return([], '2a: empty array');\r\n            if (Button.isArray(unstructuredConfig))\r\n                return cl.return([{ buttons: unstructuredConfig }], '2b: array of groups');\r\n            if (InPageButtonJson.is(unstructuredConfig[0]))\r\n                return cl.return([{ buttons: unstructuredConfig as InPageButtonJson[]}], // Array<InPageButtonJson | ButtonGroup>;\r\n                    '2b: is list of buttons, return 1 group');\r\n            console.warn('error detecting groups in this toolbar');\r\n            return cl.return([], \"2x: error, it's array but can't detect type, use []\");\r\n        }\r\n\r\n        // Case 3: not an array\r\n        cl.add('Case 3: not array');\r\n        if (InPageButtonJson.is(unstructuredConfig)) {\r\n            return cl.return([ { buttons: [unstructuredConfig] }], \r\n                'Case 3a: not array, but has action/buttons properties, will wrap config into array');\r\n        }\r\n\r\n        cl.add('Case 3: not array and no \"action\", will return it or blank');\r\n        // we either have groups already, or we'll return blank\r\n        if (ToolbarTemplate.hasGroups(unstructuredConfig))\r\n            return cl.return(unstructuredConfig.groups, '4: found groups');\r\n        // else\r\n        //     return cl.return([], 'no groups, return []');\r\n\r\n        // ensure that arrays of actions or buttons are re-mapped to the right structure node\r\n        // if (!arrGroups || !(arrGroups as any).length) {\r\n        //     return cl.return([], 'not array or has no items, return empty array');\r\n        // } else\r\n        //     cl.add('its an object or array, use that');\r\n\r\n        // if (ButtonGroup.isArray(arrGroups)) {\r\n        //     return cl.return(arrGroups, 'detected buttons on first item, assume button-group, moving into .groups');\r\n        // } else if (InPageButtonJson.isArray(arrGroups)) {\r\n        //     return cl.return([{ buttons:  arrGroups } as InPageButtonGroupJson],\r\n        //         'detected command or action on first item, assume buttons, move into .groups[buttons] ');\r\n        // }\r\n\r\n        cl.add('can\\'t detect what this is - show warning');\r\n        console.warn(\"toolbar tried to build toolbar but couldn't detect type of this:\", arrGroups);\r\n        return cl.return([], 'warning');\r\n    }\r\n}\r\n","/**\r\n * @internal\r\n */\r\nexport const RuleConstants = {\r\n    Keys: {\r\n        None: 'none',\r\n    },\r\n};\r\n","import { RuleParams } from '.';\r\nimport { MetadataFor } from '../../commands';\r\nimport { Log, LogEntryOptions as LEO } from '../../logging';\r\nimport { DictionaryValue } from '../../plumbing';\r\n\r\nconst prefillPrefix = 'prefill:';\r\nconst filterPrefix = 'filter:';\r\nconst contextPrefix = 'context:';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ProcessedParams { params: RuleParams; context: DictionaryValue; }\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RuleParamsHelper {\r\n\r\n    static processParams(params: RuleParams, log: Log): ProcessedParams {\r\n        const cl = log.call('processParams');\r\n        const prefill = RuleParamsHelper.extractSubKeys(params, prefillPrefix, log);\r\n        if (prefill) params.prefill = prefill;\r\n\r\n        const filters = RuleParamsHelper.extractSubKeys(params, filterPrefix, log);\r\n        if (filters) params.filters = filters;\r\n\r\n        const context = RuleParamsHelper.extractSubKeys(params, contextPrefix, log);\r\n\r\n        // catch a very common mistake in metadata\r\n        if (params.metadata) {\r\n            delete params.metadata;\r\n            cl.add(\"params had additional metadata - invalid, will remove. Use 'for' instead\", null, LEO.error);\r\n        }\r\n\r\n        // process metadata\r\n        if (params.for) params.metadata = RuleParamsHelper.processMetadata(params, log);\r\n        return cl.return({ params, context });\r\n    }\r\n\r\n    private static processMetadata(params: RuleParams, log: Log): MetadataFor {\r\n        const cl = log.call('processMetadata');\r\n\r\n        // get the for-target and if exists, delete from params\r\n        const mdFor = params.for;\r\n        if (!mdFor) return cl.return(undefined, 'no metadata');\r\n        delete params.for;\r\n\r\n        // just one part, use it as key\r\n        if (mdFor.indexOf(',') === -1) return cl.return({ key: mdFor }, 'only has key');\r\n        const parts = mdFor.split(',').map((p) => p.trim());\r\n        if (parts.length !== 3)\r\n            return cl.return(undefined, `error: metadata-for parts count expected 3: ${parts.length}`, LEO.error);\r\n\r\n        // part 1 must be a number\r\n        const targetType = +parts[0];\r\n        if (isNaN(targetType))\r\n            return cl.return(undefined, `error: first key part is not number - got ${targetType}`, LEO.error);\r\n\r\n        // part 2 must be a string with 'string', 'guid' or 'number'\r\n        const keyType = parts[1];\r\n        if (keyType !== 'string' && keyType !== 'guid' && keyType !== 'number')\r\n            return cl.return(undefined, `error: key is not known type, should be string, guid or number, but got ${keyType}`, LEO.error);\r\n\r\n        // part 3 is the key\r\n        const key = parts[2];\r\n        if (key === null || key === undefined || key === '')\r\n            return cl.return(undefined, `error: key strange value: '${key}'`, LEO.error);\r\n\r\n        // todo: warn if no metadata or id!\r\n        if (!params.contentType || params.entityId == null)\r\n            return cl.return(undefined, 'error: contentType and entityId missing', LEO.error);\r\n\r\n        return cl.return({\r\n            key: key,\r\n            targetType: targetType,\r\n            keyType: keyType,\r\n        });\r\n    }\r\n\r\n\r\n    /** Do special processing on all prefill:Field=Value rules */\r\n    private static extractSubKeys(params: RuleParams, prefix: string, log: Log): DictionaryValue {\r\n        const cl = log.call('processSubMultiKeys');\r\n\r\n        // only load special prefills if we don't already have a prefill\r\n        if (!params) return cl.return(undefined, 'no params');\r\n\r\n        const keys = Object.keys(params).filter((k) => k.indexOf(prefix) === 0);\r\n        if (!keys || keys.length === 0) return cl.return(undefined, `no speciall '${prefix}' keys`);\r\n\r\n        const prefixLen = prefix.length;\r\n        const list: DictionaryValue = {};\r\n        keys.forEach((k) => {\r\n            let value: any = params[k];\r\n            // 2020-04-02 prefill is a bit flaky - this should fix the common issues\r\n            // fix boolean true must be \"true\"\r\n            if (value === true || value === false) value = value.toString();\r\n            else {\r\n                // try to detect list of guids\r\n                if (prefix === prefillPrefix)\r\n                    value = RuleParamsHelper.convertGuidListToArrayOrKeepOriginal(value);\r\n            }\r\n            list[k.substring(prefixLen)] = value;\r\n            delete params[k];\r\n        });\r\n        return cl.return(list, 'got list of multi-keys');\r\n    }\r\n\r\n    private static convertGuidListToArrayOrKeepOriginal(value: string): string | string[] {\r\n        // must be string\r\n        if (!value || typeof value !== 'string') return value;\r\n        // must have a comma to become an array\r\n        if (value.indexOf(',') === -1) return value;\r\n        // shouldn't have any quotes\r\n        if (value.indexOf('\"') >= 0 || value.indexOf(\"'\") >= 0) return value;\r\n        const probablyArray = value.split(',').map((g) => g.trim());\r\n        // guid check regex from https://stackoverflow.com/questions/7905929/how-to-test-valid-uuid-guid\r\n        const guidCount = probablyArray\r\n            .filter((g) => g.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i) !== null);\r\n            // .filter((m) => m === true);\r\n        if (guidCount && guidCount.length === probablyArray.length) return probablyArray;\r\n        return value;\r\n    }\r\n}\r\n","import { Operations as Operators, RuleConstants as RC, RuleParams, RuleParamsHelper } from '.';\r\nimport { HasLog, Log } from '../../logging';\r\nimport { Dictionary, DictionaryValue, TypeValue } from '../../plumbing';\r\nimport { TemplateConstants } from '../templates';\r\nimport { BuildSteps } from './build-steps';\r\nimport { ProcessedParams } from './rule-params-helper';\r\n\r\n/**\r\n * Contains a rule how to add/modify a toolbar.\r\n * @internal\r\n */\r\nexport class BuildRule extends HasLog {\r\n    //#region Rule parts\r\n    /** The ID for this rule - often the same as the name */\r\n    id: string;\r\n\r\n    /** Name of the thing being added - often a command name or can be the group name */\r\n    name: string;\r\n\r\n\r\n    /** The build command to run */\r\n    step: BuildSteps | string;\r\n\r\n    /** what this rule should do */\r\n    operator: Operators;\r\n\r\n\r\n    /** Group name - when adding more buttons */\r\n    group: string = TemplateConstants.NameDefault;\r\n\r\n    /**\r\n     * position where something is added - the group or the button\r\n     * Note that JS preserves -0\r\n     */\r\n    pos: number = 0;\r\n\r\n    //#endregion\r\n\r\n    //#region command parts\r\n\r\n    params?: RuleParams = {};\r\n\r\n    /**\r\n     * Button Rules - determines what a button should do / not do\r\n     * Note: can also be Partial<ToolbarSettings>\r\n     */\r\n    ui: {\r\n        icon?: string,\r\n        class?: string,\r\n        color?: string,\r\n        show?: boolean,\r\n        code?: string,\r\n        title?: string,\r\n        [key: string]: TypeValue,\r\n    } = {};\r\n\r\n    /** ATM unused url-part after the hash - will probably be needed in future */\r\n    // private hash: Dictionary<string> = {};\r\n\r\n    //#endregion\r\n\r\n    //#region New #CustomContext\r\n\r\n    context: {\r\n      appId?: number,\r\n      zoneId?: number,\r\n      complete?: boolean,\r\n    } = {};\r\n    //#endregion\r\n\r\n    constructor(public ruleString: string, parentLog: Log) {\r\n        super('Tlb.BdRule', parentLog);\r\n        if (!ruleString) {\r\n            this.log.add('rule is empty');\r\n            return;\r\n        }\r\n        this.load();\r\n    }\r\n\r\n    /** Tells if this rule will override the show settings  */\r\n    overrideShow(): boolean | undefined {\r\n        if (this.operator === Operators.remove) return false;\r\n        if (this.operator === Operators.add) return true;\r\n        if (this.operator === Operators.modify && this?.ui?.show !== undefined)\r\n            return this.ui.show;\r\n        return undefined;\r\n    }\r\n\r\n\r\n    private load() {\r\n        const cl = this.log.call('load', this.ruleString);\r\n        const parts = splitUrlSections(this.ruleString);\r\n        if (!parts.key) return cl.done(\"no key, won't load\");\r\n\r\n        this.loadHeader(parts.key);\r\n        if (parts.params) {\r\n            const processed = this.loadParamsAndPrefill(parts.params);\r\n            this.params = processed.params;\r\n            this.context = processed.context;\r\n        }\r\n        // ATM seems unused...? hash is already processed before in loadHeader\r\n        // if (parts.ui) this.hash = this.loadDictionary(parts.ui);\r\n        return cl.done();\r\n    }\r\n\r\n\r\n\r\n    private loadHeader(rule: string): void {\r\n        const cl = this.log.call('loadHeader', rule);\r\n        const parts = this.splitParamsArray(rule);\r\n        let key = parts?.[0]?.[0] || RC.Keys.None;\r\n\r\n        // Pick up the operation from header, but if it's not a known operator, auto-detect\r\n        let operator = key[0];\r\n        const knownOperatorFound = Object.values(Operators).includes(operator as Operators);\r\n        if (!knownOperatorFound)\r\n            operator = (key === BuildSteps.params || key === BuildSteps.settings || key === BuildSteps.toolbar)\r\n                ? Operators.system\r\n                : Operators.add;\r\n        this.operator = operator as Operators;\r\n        cl.add(`name part '${key}', firstChar '${operator}'`);\r\n        // remember the primary keyword because this determines what we're doing\r\n        // but truncate the first char if it had an operator\r\n        key = knownOperatorFound ? key.substring(1) : key;\r\n\r\n        const knowStepFound = Object.values(BuildSteps).includes(key as BuildSteps);\r\n        this.step = knowStepFound ? key : BuildSteps.button;\r\n\r\n        // for system and %-change operations the id should be the name of the standard button\r\n        // ...but if it's an add-operation, we must keep the IDs appart because various\r\n        // properties are set at a much later time\r\n        this.id = (this.operator === Operators.add)\r\n            ? 'rndId' + Math.floor(Math.random() * 99999)\r\n            : key;\r\n\r\n        // command name defaults to name, can be reset by load-headers\r\n        // assumes key is something like \"group=myGroup\" or just \"edit\"\r\n        this.name = parts?.[0]?.[1] || key;\r\n        if (parts.length > 1) this.loadHeaderParts(parts.slice(1));\r\n\r\n        return cl.done();\r\n    }\r\n\r\n    private loadHeaderParts(rest: string[][]) {\r\n        const cl = this.log.call('loadHeaderParts');\r\n        if (!rest.length) return cl.done('nothing to load');\r\n        const parts = this.dicToArray(rest);\r\n        // #1 pick up id & name\r\n        if (parts.id) this.id = parts.id as string;\r\n        if (parts.name) this.name = parts.name as string;\r\n        // #2 pick up group\r\n        if (typeof parts.group === 'string') {\r\n            this.group = parts.group;\r\n            delete parts.group;\r\n        }\r\n        // #3 position can be number or -number to indicate from other side\r\n        // Note that JS preserves -0, which is kind of unique\r\n        if (parts.pos != null) this.pos = Number(parts.pos);\r\n\r\n        // #4 icon is automatically kept\r\n        // #5 show override\r\n        if (typeof parts.show === 'string')\r\n            (parts as DictionaryValue).show = parts.show === 'true';\r\n        this.ui = parts;\r\n        return cl.return(this.ui, 'button rules');\r\n    }\r\n\r\n    private loadParamsAndPrefill(rule: string): ProcessedParams {\r\n        const cl = this.log.call('loadParams', rule);\r\n        const parms = this.splitParamsDic(rule);\r\n        cl.data('params', parms);\r\n        const split = RuleParamsHelper.processParams(parms, this.log);\r\n        return cl.return(split);\r\n    }\r\n\r\n    // private loadDictionary(original: string): Dictionary<string> {\r\n    //     const cl = this.log.call('loadHash', original);\r\n    //     const parts = this.splitParamsDic(original);\r\n    //     cl.data('button', parts);\r\n    //     return cl.return(parts);\r\n    // }\r\n\r\n    //#region string manipulation helpers\r\n\r\n    private dicToArray(original: string[][]): Dictionary<string> {\r\n        return original.reduce((map, obj) => {\r\n            map[obj[0]] = obj[1];\r\n            return map;\r\n        }, {} as Dictionary<string>);\r\n    }\r\n\r\n    private splitParamsDic(original: string): Dictionary<string> {\r\n        return this.dicToArray(this.splitParamsArray(original));\r\n    }\r\n\r\n    private splitParamsArray(original: string): string[][] {\r\n        if (!original) return [];\r\n        const split1 = original.split('&');\r\n        const split2 = split1.map((p) => {\r\n            const keyValues = p.split('=');\r\n            const key = keyValues[0];\r\n            let val: any = keyValues[1];\r\n            // disabled, don't see a use case for this\r\n            // check if the value had '=' - then re-join\r\n            // if (keyValues.length > 1)\r\n            //     val = keyValues.slice(1).join('=');\r\n\r\n            // fix url encoding\r\n            if (val?.indexOf('%') > -1) val = decodeURIComponent(val);\r\n            // fix C# typed true/false or string representations\r\n            if (val === 'True' || val === 'true') return [key, true]; // val = true;\r\n            if (val === 'False' || val === 'false') return [key, false]; // val = false;\r\n\r\n            // cast numbers to numbers\r\n            val = isNaN(+val) ? val : Number(val);\r\n            return [key, val];\r\n        });\r\n        return split2;\r\n    }\r\n\r\n\r\n    //#endregion\r\n}\r\n\r\n\r\n\r\n\r\nfunction splitUrlSections(str: string): { key: string, params: string, button: string } | undefined {\r\n  // dev link: https://regex101.com/r/vK4rV7/519\r\n  // inpsired by https://stackoverflow.com/questions/27745/getting-parts-of-a-url-regex\r\n\r\n  const regex = /^([^\\/?#]*)?([^?#]*)(\\?([^#]*))?(#(.*))?/i;\r\n  // const str = `+edit&something=other&els=ok?aoeuaoeu=5&aoeuaou=aoeu#but=thi&aouoaeu`;\r\n  const m = regex.exec(str);\r\n\r\n  if (m && m !== null)\r\n    return { key: m[1], params: m[4], button: m[6] };\r\n  return undefined;\r\n}\r\n\r\n// #CustomContext\r\n// /**\r\n//  * Will take a UI definition and extract the context if available\r\n//  * @param ui original value before split\r\n//  * @returns \r\n//  */\r\n// function splitUiParts(ui: string): [string, string] {\r\n//   if (!ui) return [null, null];\r\n\r\n//   // If it starts with ## then the original value only had the context\r\n//   // In this case the first # of the three ### was already removed\r\n//   if (ui.startsWith('##')) return [null, ui.substring(2)];\r\n\r\n//   const parts = ui.split('###');\r\n//   return [parts[0], parts.length > 1 ? parts[1] : null];\r\n// }\r\n","import { Operations as OP } from '.';\r\nimport { BuildRule } from '.';\r\nimport { HasLog } from '../../logging';\r\nimport { ToolbarConfigLoader } from '../config-loaders';\r\nimport { BuildSteps } from './build-steps';\r\n\r\nconst throwOnError = true;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RuleManager extends HasLog {\r\n    /** List of rules which were picked up and will be applied */\r\n    rules: BuildRule[] = [];\r\n\r\n    ruleManagerId = Math.floor(Math.random() * 99999);\r\n\r\n    /** Basic constructor, must be called from a ToolbarConfigLoader */\r\n    constructor(parent: ToolbarConfigLoader) {\r\n        super('Tlb.RlMngr', parent.log, 'constructor');\r\n        this.log.add('tempId:' + this.ruleManagerId);\r\n    }\r\n\r\n    /** Load/initialize the rules which were found */\r\n    load(rawList: string[]): BuildRule[] {\r\n        const cl = this.log.call('load', `${() => rawList.length}`);\r\n        if (!Array.isArray(rawList))\r\n            return cl.return([], 'raw is empty');\r\n\r\n        rawList.forEach((raw) => {\r\n            if (typeof raw === 'string') {\r\n                try {\r\n                    this.rules.push(new BuildRule(raw, this.log));\r\n                } catch (e) {\r\n                    if (throwOnError) throw e;\r\n                    cl.add(`error adding string-rule '${raw}'`, e);\r\n                }\r\n            } else {\r\n                console.error('tried to parse a toolbar rule and expected a string, but got something else');\r\n            }\r\n        });\r\n\r\n\r\n\r\n        return cl.return(this.rules, 'final rules');\r\n    }\r\n\r\n    /** Find a single rule matching an ID */\r\n    find(id: string): BuildRule | undefined { return this.rules.find((r) => r.id === id); }\r\n\r\n    /** find all rules matching a criteria */\r\n    filter(criteria: (x: BuildRule) => boolean): BuildRule[] { return this.rules.filter(criteria); }\r\n\r\n\r\n    /** the settings are usually retrieved on settings, but you can also put them behind the toolbar */\r\n    getSettings = () => this.getSystemRule(BuildSteps.settings) || this.getToolbar();\r\n\r\n    /** the params for the command - if not found, will use the toolbar params */\r\n    getParams = () => this.getSystemRule(BuildSteps.params) || this.getToolbar();\r\n\r\n    getToolbar = () => this.getSystemRule(BuildSteps.toolbar);\r\n    getAdd = () => this.filter((br) => br.operator === OP.add);\r\n    getRemoveGroups = () => this.filter((br) => br.operator === OP.remove && br.step === BuildSteps.group);\r\n\r\n    /** Find a system rule (marked with '$') */\r\n    private getSystemRule(name: BuildSteps): BuildRule | undefined {\r\n        return this.rules.find((r) => r.operator === OP.system && r.step === name);\r\n    }\r\n\r\n}\r\n","import { ToolbarConfigLoader, InPageCommandJson } from '.';\r\nimport { ToolbarInitConfig } from '..';\r\nimport { ContextComplete } from '../../context';\r\nimport { HasLog } from '../../logging';\r\nimport { Toolbar, ToolbarSettings } from '../config';\r\nimport { BuildSteps, RuleManager } from '../rules';\r\nimport { ToolbarTemplate, ToolbarTemplateDefault, ToolbarTemplateSublist } from '../templates';\r\nimport { ToolbarWip } from './config-formats/toolbar-wip';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ToolbarConfigLoaderV10 extends HasLog {\r\n\r\n    public rules: RuleManager;\r\n\r\n    constructor(private toolbar: ToolbarConfigLoader) {\r\n        super('Tlb.TlbV10', toolbar.log, 'constructor');\r\n        this.rules = new RuleManager(toolbar);\r\n    }\r\n\r\n\r\n    public loadV10(context: ContextComplete, config: ToolbarInitConfig, raw: string[]): Toolbar {\r\n        const cl = this.log.call('loadV10');\r\n\r\n        this.rules.load(raw);\r\n\r\n        let template: ToolbarTemplate;\r\n        // #1 prepare settings - get rules and mix with defaults\r\n        // We should use the `ui` parameter, as it's UI rules, but because previously\r\n        // it used the `params` - we must support both :(\r\n        const settingRule = this.rules.getSettings();\r\n        let settingsUiRule = settingRule?.ui as unknown as Partial<ToolbarSettings>;\r\n        if (Object.keys(settingsUiRule || {}).length === 0)\r\n            settingsUiRule = settingRule?.params as Partial<ToolbarSettings>;\r\n        // settingsUiRule = { ...settingRule?.params, ...settingRule?.ui } as unknown as Partial<ToolbarSettings>;\r\n        const settings = new ToolbarSettings(settingsUiRule);\r\n\r\n        // #2 load either the default toolbar or the one specified\r\n        const toolbarRule = this.rules.getToolbar();\r\n\r\n        // #3 find params\r\n        const params = this.rules.getParams();\r\n\r\n        // If it's a sub-list toolbar, use the special template for it\r\n        const isSublist = (config.toolbar as InPageCommandJson).fields || params?.params?.fields;\r\n        const defToolbarname = isSublist ? ToolbarTemplateSublist.name : ToolbarTemplateDefault.name;\r\n        const toolbarTemplateName = toolbarRule\r\n            ? toolbarRule.name\r\n            : defToolbarname;\r\n        template = this.toolbar.templates.copy(toolbarTemplateName);\r\n        template.settings = settings;\r\n        if (params) template.params = params.params;\r\n\r\n        // #4 Remove unwanted groups\r\n        const removeGroups = this.rules.getRemoveGroups();\r\n        removeGroups.forEach((rg) => this.toolbar.templateEditor.removeGroup(template, rg.name));\r\n\r\n        // Add additional buttons\r\n        const add = this.rules.getAdd();\r\n        add.forEach((a) => {\r\n            if (a.step === BuildSteps.group) this.toolbar.templateEditor.addGroup(template, a.name, a.pos);\r\n            else this.toolbar.templateEditor.addButton(template, a.group, a.id, a.name, a.pos);\r\n        });\r\n\r\n        const toolbar = this.toolbar.buildTreeAndModifyAccordingToRules(context, template as ToolbarWip);\r\n        if (!toolbar.identifier) toolbar.identifier = Toolbar.createIdentifier();\r\n        toolbar.settings._rules = this.rules;\r\n        // process the rules one by one\r\n        return cl.return(toolbar, 'ok');\r\n    }\r\n}\r\n","import { ButtonConfigLoader, ButtonGroupConfigLoader, CommandConfigLoader, ToolbarConfigLoaderV09, ToolbarConfigLoaderV10, ToolbarWip } from '.';\r\nimport { ToolbarManager } from '..';\r\nimport { ContextComplete } from '../../context/bundles/context-bundle-button';\r\nimport { HasLog, LogEntry } from '../../logging';\r\nimport { Toolbar } from '../config';\r\nimport { InPageToolbarConfigVariations, ToolbarInitConfig } from '../initialize/toolbar-init-config';\r\nimport { TemplateEditor, ToolbarTemplate, ToolbarTemplateManager } from '../templates';\r\n\r\n// Enable when debugging toolbar creation - will dump all logs to the console\r\nconst liveDumpThis = false;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ToolbarConfigLoader extends HasLog {\r\n\r\n    public toolbarV09: ToolbarConfigLoaderV09;\r\n    public toolbarV10: ToolbarConfigLoaderV10;\r\n    public groups: ButtonGroupConfigLoader;\r\n    public button: ButtonConfigLoader;\r\n    public command: CommandConfigLoader;\r\n    public templates = ToolbarTemplateManager.singleton();\r\n    public templateEditor: TemplateEditor;\r\n\r\n    public logs: Array<{ key: string, entries: LogEntry[]}>;\r\n\r\n    /** Special constructor that can only be called from the ToolbarManager */\r\n    constructor(_owner: ToolbarManager) {\r\n        // important: always create a new log as it will be stored in insights\r\n        super('Tlb.TlbCnf');\r\n    }\r\n\r\n    private setLoggingAndCreateHelpers(toolbarData: InPageToolbarConfigVariations): void {\r\n        // note: could be true, false or 'live'\r\n        let debugLog = toolbarData && (toolbarData as ToolbarTemplate).debug;\r\n        if (debugLog === undefined && Array.isArray(toolbarData) && toolbarData.length)\r\n            debugLog = (toolbarData[0] as ToolbarTemplate).debug;\r\n\r\n        debugLog = debugLog || false;\r\n\r\n        if (liveDumpThis || debugLog) {\r\n            this.log.keepData = true;\r\n            if (liveDumpThis || debugLog.toString() === 'live')\r\n                this.log.liveDump = true;\r\n            this.log.add(`found debug=${debugLog}, will enable intense logging`);\r\n        }\r\n        this.toolbarV09 = new ToolbarConfigLoaderV09(this);\r\n        this.toolbarV10 = new ToolbarConfigLoaderV10(this);\r\n        this.groups = new ButtonGroupConfigLoader(this);\r\n        this.button = new ButtonConfigLoader(this);\r\n        this.command = new CommandConfigLoader(this);\r\n        this.templateEditor = new TemplateEditor(this);\r\n    }\r\n\r\n\r\n\r\n    load(context: ContextComplete, config: ToolbarInitConfig): Toolbar {\r\n        const cl = this.log.call('load', '', 'expand start', { context: context, config: config });\r\n        // cl.data('initial context', context);\r\n        // cl.data('initial config', config);\r\n        // if null/undefined, use empty object\r\n        const raw = config.toolbar = config.toolbar || {};\r\n        this.setLoggingAndCreateHelpers(raw as InPageToolbarConfigVariations);\r\n\r\n        // check if it's a V10 tolbar\r\n        if (Array.isArray(raw) && raw.length >= 0 && typeof raw[0] === 'string')\r\n            return cl.return(this.toolbarV10.loadV10(context, config, raw), 'v10 done');\r\n\r\n        // do standard V3 procedures\r\n        return cl.return(this.toolbarV09.loadV9(context, config), 'V9 done');\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    public buildTreeAndModifyAccordingToRules(toolbarContext: ContextComplete, configWip: ToolbarWip) {\r\n        const wrapLog = this.log.call('buildFullDefinition');\r\n        const tlbConfig = this.groups.expandButtonGroups(configWip);\r\n        // #CodeChange#2020-03-22#InstanceConfig - believe this is completely unused; remove in June\r\n        this.button.removeDisableButtons(toolbarContext, tlbConfig /*, instanceConfig */);\r\n        return wrapLog.return(tlbConfig);\r\n    }\r\n\r\n\r\n  //#endregion initial toolbar object\r\n\r\n}\r\n","import { ToolbarConfigFinderAndInitializer } from '.';\r\nimport { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { HasLog, Insights } from '../logging';\r\nimport { ToolbarConfigLoader } from './config-loaders/toolbar-config-loader';\r\nimport { Toolbar } from './config/toolbar';\r\nimport { ToolbarInitConfig } from './initialize/toolbar-init-config';\r\n\r\n/**\r\n * Toolbar manager for the whole page - basically a set of APIs\r\n * the toolbar manager is an internal helper taking care of toolbars, buttons etc.\r\n * @internal\r\n */\r\nexport class ToolbarManager extends HasLog {\r\n\r\n    /** Singleton */\r\n    public static singleton(): ToolbarManager {\r\n        return this._singleton ?? (this._singleton = new ToolbarManager());\r\n    }\r\n    private static _singleton: ToolbarManager;\r\n\r\n    private readonly toolbarFinder: ToolbarConfigFinderAndInitializer;\r\n\r\n    private constructor() {\r\n        super('Tlb.Mngr', null, 'init');\r\n        Insights.add('system', 'toolbar-manager', this.log);\r\n        this.toolbarFinder = new ToolbarConfigFinderAndInitializer(this);\r\n    }\r\n\r\n    buildModule(parentTag: HTMLElement) {\r\n        this.toolbarFinder.buildDnnModule(parentTag);\r\n    }\r\n\r\n    build(node: HTMLElement) {\r\n        this.toolbarFinder.build(node);\r\n    }\r\n\r\n    loadConfig(context: ContextComplete, config: ToolbarInitConfig): Toolbar {\r\n        const loader = this.getLoader(JSON.stringify(config.toolbar || ''));\r\n        return loader.load(context, config);\r\n    }\r\n\r\n    /** Generate a single-use loader. It must be single use so the logs work */\r\n    getLoader(instanceName: string) {\r\n        const loader = new ToolbarConfigLoader(this);\r\n        Insights.add('toolbar', instanceName, loader.log);\r\n        return loader;\r\n    }\r\n}\r\n\r\n// export const ToolbarManager = new ToolbarManagerGlobal();\r\n","import { ModifierContentBlock } from '.';\r\nimport { ContentListActionParams } from '../commands';\r\nimport { SxcEdit } from '../interfaces/sxc-instance-editable';\r\nimport { HasLog, NoJQ } from '../logging';\r\nimport { ToolbarManager } from '../toolbar/toolbar-manager';\r\n// note: this import must be at the end of the list, for reasons unknown\r\n// otherwise you get an error at runtime, something about constructors\r\n// Object prototype may only be an Object or null: undefined\r\n// not sure why though\r\n// tslint:disable-next-line: ordered-imports\r\nimport { translate } from '../i18n';\r\n\r\n//#region WebApi Endpoints used: 2sxc\r\nconst webApiNew = 'cms/block/block';\r\nconst webApiMove = 'cms/list/move';\r\nconst webApiRemove = 'cms/list/Delete';\r\n//#endregion\r\n\r\n/**\r\n * contains commands to create/move/delete a content-block in an inner-content\r\n * @internal\r\n */\r\nexport class ModifierContentBlockInstance extends HasLog {\r\n\r\n    constructor(parent: ModifierContentBlock, private sxcInstance: SxcEdit) {\r\n        super('QE.MdCbIn', parent.log);\r\n    }\r\n\r\n    /**\r\n     * create content block\r\n     * @param parentId\r\n     * @param fieldName\r\n     * @param index\r\n     * @param appName\r\n     * @param container\r\n     * @param newGuid\r\n     */\r\n    create(\r\n        parentId: number,\r\n        fieldName: string,\r\n        index: number,\r\n        appName: string,\r\n        container: HTMLElement,\r\n        newGuid: string,\r\n    ): Promise<void> {\r\n        // the wrapper, into which this will be placed and the list of pre-existing blocks\r\n        if (!container) {\r\n            alert('can\\'t add content-block as we couldn\\'t find the list');\r\n            return Promise.resolve();\r\n        }\r\n        const cblockList = container.querySelectorAll<HTMLElement>('div.sc-content-block');\r\n        if (index > cblockList.length) index = cblockList.length; // make sure index is never greater than the amount of items\r\n\r\n        const params = {\r\n            parentId: parentId,\r\n            field: fieldName,\r\n            sortOrder: index,\r\n            app: appName,\r\n            guid: newGuid,\r\n        };\r\n\r\n        const promise = this.sxcInstance.webApi\r\n            .fetchJson(this.sxcInstance.webApi.url(webApiNew, params), undefined, 'POST')\r\n            .then((result) => {\r\n                const newTag = NoJQ.domFromString(result)[0]; // prepare tag for inserting\r\n\r\n                // should I add it to a specific position...\r\n                if (cblockList.length > 0 && index > 0)\r\n                    cblockList[cblockList.length > index - 1 ? index - 1 : cblockList.length - 1].after(newTag);\r\n                else // ...or just at the beginning?\r\n                    container.prepend(newTag);\r\n\r\n                // ReSharper disable once UnusedLocals\r\n                const sxcNew = SxcEdit.get(newTag);\r\n                ToolbarManager.singleton().buildModule(newTag);\r\n            });\r\n        return Promise.resolve(promise);\r\n    }\r\n\r\n    /**\r\n     * move content block\r\n     * @param parentId\r\n     * @param field\r\n     * @param indexFrom\r\n     * @param indexTo\r\n     */\r\n    move(parent: string, field: string, indexFrom: number, indexTo: number): Promise<void> {\r\n\r\n        const params: ContentListActionParams = {\r\n            parent: parent,\r\n            fields: field,\r\n            index: indexFrom,\r\n            toIndex: indexTo,\r\n        };\r\n\r\n        const promise = this.sxcInstance.webApi\r\n            .fetchRaw(this.sxcInstance.webApi.url(webApiMove, params), undefined, 'POST')\r\n            .then(() => {\r\n                console.log('done moving!');\r\n                window.location.reload();\r\n            });\r\n        return Promise.resolve(promise);\r\n    }\r\n\r\n\r\n    /**\r\n     * delete a content-block inside a list of content-blocks\r\n     * @param parent\r\n     * @param field\r\n     * @param index\r\n     */\r\n    delete(parent: string, field: string, index: number): Promise<void> {\r\n\r\n        if (!confirm(translate('QuickInsertMenu.ConfirmDelete'))) return null;\r\n        const params: ContentListActionParams = {\r\n            parent: parent,\r\n            fields: field,\r\n            index: index,\r\n        };\r\n\r\n        const promise = this.sxcInstance.webApi\r\n            .fetchRaw(this.sxcInstance.webApi.url(webApiRemove, params), undefined, 'DELETE')\r\n            .then(() => {\r\n                console.log('done deleting!');\r\n                window.location.reload();\r\n            });\r\n        return Promise.resolve(promise);\r\n    }\r\n}\r\n","import { ModifierBase, QeSelectors, QuickE, QuickEClipboard, Selection } from '.';\r\nimport { SxcEdit } from '../interfaces/sxc-instance-editable';\r\nimport { ContextForLists } from './context-for-lists';\r\nimport { ModifierContentBlockInstance } from './modifier-content-block-internal';\r\n\r\n/**\r\n * extend the quick edit with the core commands\r\n * @internal\r\n */\r\nexport class ModifierContentBlock extends ModifierBase {\r\n\r\n    constructor() {\r\n        super('QE.CntBlk');\r\n    }\r\n\r\n    getInstanceModifier(tag: HTMLElement) {\r\n        const sxc = SxcEdit.get(tag);\r\n        return new ModifierContentBlockInstance(this, sxc);\r\n    }\r\n\r\n    delete(clip: Selection): Promise<void> {\r\n        return this.getInstanceModifier(clip.list).delete(clip.parentGuid, clip.field, this.findClipListIndex(clip));\r\n    }\r\n\r\n    create(parent: number, field: string, listIndex: number, appOrContent: string, list: HTMLElement, newGuid: string): Promise<void> {\r\n        return this.getInstanceModifier(list).create(parent, field, listIndex, appOrContent, list, newGuid);\r\n    }\r\n\r\n    move(oldClip: Selection, newClip: Selection) {\r\n        const from = this.findClipListIndex(oldClip);\r\n        const to = this.findClipListIndex(newClip);\r\n        this.getInstanceModifier(oldClip.list).move(newClip.parentGuid, newClip.field, from, to);\r\n    }\r\n\r\n    // cb-numbering is a bit different, because the selector is at the bottom\r\n    // only there we should also skip on +1;\r\n    isRealMove(oldClip: Selection, newClip: Selection): boolean {\r\n        return this.findClipListIndex(oldClip) + 1 !== this.findClipListIndex(newClip);\r\n    }\r\n\r\n    /**\r\n     * find the real index of this block in the list - may not match the DOM index\r\n     */\r\n    findClipListIndex(clip: Selection): number {\r\n        return this.findListIndex(clip.item, clip.index);\r\n    }\r\n\r\n    /**\r\n     * find the real index of a block tag as it may not match the DOM index\r\n     */\r\n    findListIndex(tag: HTMLElement, fallback: number): number {\r\n        const editContext = SxcEdit.getEditContextOfTag(tag);\r\n        const listIndex = editContext?.contentBlockReference?.parentIndex ?? fallback;\r\n        return listIndex;\r\n    }\r\n\r\n    /**\r\n     * The button click handler. Must be static, as it will be attached to the buttons\r\n     * So the 'this' is not a ContentBlockModifier, but the html-tag which was clicked\r\n     */\r\n    static onCbButtonClick() {\r\n        const blockTag = QuickE.singleton().main.activeContentBlock;\r\n        const button = this as unknown as HTMLElement;\r\n        const list = QeSelectors.blocks.cb.findClosestList(blockTag);\r\n        const listItems = list.querySelectorAll<HTMLElement>(QeSelectors.blocks.cb.selector);\r\n        const actionConfig = ContextForLists.getFromDom(list);\r\n        const newGuid: string | null = actionConfig.guid || null;\r\n\r\n        // if the target is a content-block, then the list already has items\r\n        // so the domIndex must be based on that. Otherwise use 0\r\n        const domIndex = blockTag.classList.contains(QeSelectors.blocks.cb.class)\r\n            ? Array.from(listItems).indexOf(blockTag) + 1\r\n            : 0;\r\n\r\n        // Check if it's a cut/paste action\r\n        const cbAction = button.getAttribute('data-action');\r\n        if (cbAction)\r\n            return QuickEClipboard.singleton().do(cbAction, list, domIndex, QeSelectors.blocks.cb.id);\r\n\r\n        // this is a create-additional block action\r\n        // in this case the clipboard doesn't exist\r\n        // so we'll have to find the dom object and get the list index\r\n        const listIndex = QuickEClipboard.singleton().modCb.findListIndex(blockTag, domIndex - 1) + 1;\r\n\r\n        const appOrContent = button.getAttribute('data-type');\r\n        return QuickEClipboard.singleton().modCb.create(actionConfig.parent as number, actionConfig.field, listIndex, appOrContent, list, newGuid);\r\n    }\r\n\r\n}\r\n","\r\n/**\r\n * @internal\r\n */\r\nexport class PositionCoordinates {\r\n    public w?: number;\r\n    public yh?: number;\r\n    public element?: HTMLElement;\r\n\r\n    constructor(public x: number, public y: number) { }\r\n\r\n}\r\n","import { ModifierBase, ModifierDnnModuleInternal, QeSelectors, QuickE, QuickEClipboard, Selection } from '.';\r\nimport { NoJQ } from '../plumbing';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ModifierDnnModule extends ModifierBase {\r\n\r\n    private modInternal: ModifierDnnModuleInternal;\r\n\r\n    constructor() {\r\n        super('QE.DnnMod');\r\n        this.modInternal = new ModifierDnnModuleInternal(this);\r\n    }\r\n\r\n    delete(clip: Selection): Promise<void> {\r\n        if (!confirm('are you sure?')) return;\r\n        const modId = this.modInternal.getModuleId(clip.item.className);\r\n        this.modInternal.delete(modId);\r\n    }\r\n\r\n    // todo: unsure if this is a good place for this bit of code...\r\n    move(oldClip: Selection, newClip: Selection /*, from: number, to: number*/): void {\r\n        const from = oldClip.index;\r\n        const to = newClip.index;\r\n        const modId = this.modInternal.getModuleId(oldClip.item.className);\r\n        const pane: string = this.modInternal.getPaneName(newClip.list);\r\n        this.modInternal.move(modId, pane, to);\r\n    }\r\n\r\n    isRealMove(oldClip: Selection, newClip: Selection): boolean {\r\n        const oldPane = this.modInternal.getPaneName(oldClip.list);\r\n        const newPane = this.modInternal.getPaneName(newClip.list);\r\n        return oldPane !== newPane || oldClip.index !== newClip.index;\r\n    }\r\n\r\n\r\n    showSendToPane(): void {\r\n        // debugger; // there is a bug where pane options are not updated when user clicks send to pane once, until that button is clicked again\r\n        // to reproduce: select module in header pane, click sendToPane. Now select module in content pane and notice panes list is showing panes for previous module\r\n        const quickE = QuickE.singleton();\r\n        const pane = QeSelectors.blocks.mod.findClosestList(quickE.main.activeModule);\r\n        // debugger; // breaks in inner content buttons, like Accordion App. Check if I can hide this button in inner content\r\n        if (!pane) return;\r\n\r\n        // show the pane-options\r\n        const pl = quickE.selected.querySelector<HTMLElement>('#paneList');\r\n        if (!pl.matches(':empty')) NoJQ.empty(pl);\r\n        pl.append(this.modInternal.getMoveButtons(this.modInternal.getPaneName(pane)));\r\n    }\r\n\r\n    static onModuleButtonClick() {\r\n        const _this = this as unknown as HTMLElement;\r\n        const type = _this.getAttribute('data-type');\r\n        const dnnMod = QuickE.singleton().main.activeModule;\r\n        const pane = QeSelectors.blocks.mod.findClosestList(dnnMod);\r\n        let index = 0;\r\n\r\n        if (dnnMod.classList.contains('DnnModule'))\r\n            index = Array.from(pane.querySelectorAll<HTMLElement>('.DnnModule')).indexOf(dnnMod) + 1;\r\n\r\n        const cbAction = _this.getAttribute('data-action');\r\n        if (cbAction)\r\n            return QuickEClipboard.singleton().do(cbAction, pane, index, QeSelectors.blocks.mod.id); // copy/paste\r\n        const modManage = QuickEClipboard.singleton().modDnn.modInternal;\r\n        return modManage.create(modManage.getPaneName(pane), index, type);\r\n    }\r\n}\r\n","import { ModifierDnnModule, QuickE, QuickEClipboard } from '.';\r\nimport { HasLog, NoJQ } from '../logging';\r\n\r\n// Important - for DNN it still uses #jquery\r\nconst dnnSF = (id?: number) => $.dnnSF(id);\r\n\r\n/**\r\n * module specific stuff\r\n * @internal\r\n */\r\nexport class ModifierDnnModuleInternal extends HasLog {\r\n\r\n    constructor(parent: ModifierDnnModule) {\r\n        super('QE.ModMng', parent.log);\r\n    }\r\n\r\n    /**\r\n     * Delete a module\r\n     */\r\n    delete(modId: number): Promise<any> {\r\n        const service = dnnSF(modId);\r\n        const tabId: number = service.getTabId();\r\n        return sendDnnAjax({\r\n            modId,\r\n            url: dnnSF().getServiceRoot('2sxc') + 'dnn/module/delete',\r\n            method: 'GET',\r\n            data: {\r\n                tabId: tabId,\r\n                modId: modId,\r\n            },\r\n            // ReSharper disable once UnusedParameter\r\n            success: () => window.location.reload(),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a new module\r\n     */\r\n    create(paneName: string, index: number, type: string): Promise<any> {\r\n        return sendDnnAjax({\r\n            modId: null,\r\n            url: dnnSF().getServiceRoot('internalservices') + 'controlbar/GetPortalDesktopModules',\r\n            method: 'GET',\r\n            data: 'category=All&loadingStartIndex=0&loadingPageSize=100&searchTerm=',\r\n            success: (desktopModules: ModuleInfo[]) => {\r\n                const moduleToFind: string = type === 'Default' ? ' Content' : ' App';\r\n                let module: ModuleInfo = null;\r\n\r\n                // ReSharper disable once UnusedParameter\r\n                desktopModules.forEach((e, i: number) => {\r\n                    if (e.ModuleName === moduleToFind)\r\n                        module = e;\r\n                });\r\n\r\n                return (!module)\r\n                    ? alert(moduleToFind + ' module not found.')\r\n                    : createMod(paneName, index, module.ModuleID);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Move a DNN Module\r\n     */\r\n    move(modId: number, pane: string, order: number): void {\r\n        const service = dnnSF(modId);\r\n        const tabId = service.getTabId();\r\n        const dataVar = {\r\n            TabId: tabId,\r\n            ModuleId: modId,\r\n            Pane: pane,\r\n            ModuleOrder: (2 * order + 0),\r\n            // strange formula, copied from DNN https://github.com/dnnsoftware/Dnn.Platform/blob/fd225b8de07042837f7473cd49fba13de42a3cc0/Website/admin/Menus/ModuleActions/ModuleActions.js#L70\r\n            // stv: changed formula from: (2 * order + 4)\r\n            // ...to: (2 * order + 0)\r\n        };\r\n\r\n        sendDnnAjax({\r\n            modId,\r\n            url: dnnSF(modId).getServiceRoot('internalservices') + 'ModuleService/MoveModule',\r\n            method: 'POST',\r\n            data: dataVar,\r\n            success: () => window.location.reload(),\r\n        });\r\n    }\r\n\r\n    getPaneName(pane: HTMLElement): string {\r\n        return pane.getAttribute('id').replace('dnn_', '');\r\n    }\r\n\r\n    /**\r\n     * find the correct module id from a list of classes - used on the module-wrapper\r\n     */\r\n    getModuleId(classes: string): number | null {\r\n        const result = classes.match(/DnnModule-([0-9]+)(?:\\W|$)/);\r\n        return (result && result.length === 2) ? Number(result[1]) : null;\r\n    }\r\n\r\n    getMoveButtons(current: string): HTMLElement {\r\n        const pns = QuickE.singleton().cachedPanes;\r\n        // generate list of panes as links\r\n        const targets = NoJQ.domFromString('<div></div>')[0];\r\n        for (let p = 0; p < pns.length; p++) {\r\n            const pName: string = this.getPaneName(pns[p]);\r\n            const selected: string = (current === pName) ? ' selected ' : '';\r\n            if (selected === '') {\r\n                const target = NoJQ.domFromString(`<a data='${pName}'>${pName}</a>`)[0];\r\n                targets.append(target);\r\n            }\r\n        }\r\n\r\n        // attach click event...\r\n        const _this = this;\r\n        targets.querySelectorAll<HTMLElement>('a').forEach((e) => {\r\n            e.addEventListener('click', function () {\r\n                const link = this;\r\n                const clip = QuickEClipboard.singleton().clipboard;\r\n                const modId = _this.getModuleId(clip.item.className);\r\n                const newPane = link.getAttribute('data');\r\n                _this.move(modId, newPane, 0);\r\n            });\r\n        });\r\n\r\n        return targets;\r\n    }\r\n}\r\n\r\n// call an api on dnn\r\nfunction sendDnnAjax(req: DnnHttpRequest): Promise<any> {\r\n    // set DNN headers\r\n    const dnnHeaders: Record<string, string> = {};\r\n    const fakeXhr = {\r\n        setRequestHeader(name: string, value: string) {\r\n            dnnHeaders[name] = value;\r\n        },\r\n    } as JQueryXHR;\r\n    dnnSF(req.modId).setModuleHeaders(fakeXhr);\r\n\r\n    const settings: RequestInit = {\r\n        headers: {\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n            ...dnnHeaders,\r\n        },\r\n        method: req.method,\r\n    };\r\n    let url = req.url;\r\n    if (req.data) {\r\n        switch (req.method) {\r\n            case 'GET':\r\n                url += typeof req.data === 'string' ? `?${req.data}` : `?${NoJQ.param(req.data)}`;\r\n                break;\r\n            case 'POST':\r\n                settings.body = new URLSearchParams(NoJQ.param(req.data));\r\n                (settings.headers as Record<string, string>)['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\r\n                break;\r\n        }\r\n    }\r\n\r\n    const success = req.success;\r\n    return fetch(url, settings)\r\n        .then((response) => {\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.text();\r\n            }\r\n            throw new Error(response.statusText);\r\n        })\r\n        .then((resText) => {\r\n            let resData: any;\r\n            try {\r\n                resData = JSON.parse(resText);\r\n            } catch {\r\n                resData = resText;\r\n            }\r\n            success?.(resData);\r\n            return resData;\r\n        })\r\n        .catch((err: Error) => {\r\n            alert(`Error while talking to server: ${err.message}`);\r\n            return undefined;\r\n        });\r\n}\r\n\r\n// create / insert a new module\r\nfunction createMod(paneName: string, position: number, modId: number): Promise<any> {\r\n    const postData = {\r\n        Module: modId,\r\n        Page: '',\r\n        Pane: paneName,\r\n        Position: -1,\r\n        Sort: position,\r\n        Visibility: 0,\r\n        AddExistingModule: false,\r\n        CopyModule: false,\r\n    };\r\n    return sendDnnAjax({\r\n        modId: null,\r\n        url: dnnSF().getServiceRoot('internalservices') + 'controlbar/AddModule',\r\n        method: 'POST',\r\n        data: postData,\r\n        success: () => window.location.reload(),\r\n    });\r\n}\r\n\r\ninterface ModuleInfo {\r\n    ModuleName: string;\r\n    ModuleID: number;\r\n}\r\n\r\ninterface DnnHttpRequest {\r\n    modId: number;\r\n    url: string;\r\n    method: 'GET' | 'POST';\r\n    data?: Record<string, any> | string;\r\n    success?: (data: any) => void;\r\n}\r\n","import { PositionCoordinates, QeSelectors, QuickE } from '.';\r\nimport { NoJQ } from '../plumbing';\r\nimport { ContextForLists } from './context-for-lists';\r\n\r\n/**\r\n * Module with everything related to positioning the quick-edit in-page editing\r\n * @internal\r\n */\r\nexport class Positioning {\r\n    static positionAndAlign = positionAndAlign;\r\n    static refresh = refresh;\r\n\r\n    /**\r\n     * Find the position of an element\r\n     */\r\n    static get(element: HTMLElement): PositionCoordinates {\r\n        const coords: PositionCoordinates = {\r\n            element: element,\r\n            x: NoJQ.offset(element).left,\r\n            w: NoJQ.width(element),\r\n            y: NoJQ.offset(element).top,\r\n            // For content-block ITEMS, the menu must be visible at the end\r\n            // For content-block-LISTS, the menu must be at top\r\n            yh: NoJQ.offset(element).top + (element.matches(QeSelectors.eitherCbOrMod) ? NoJQ.height(element) : 0),\r\n        };\r\n\r\n        return coords;\r\n    }\r\n\r\n    /**\r\n     * Prepare offset calculation based on body positioning\r\n     */\r\n    static getBodyPosition(): PositionCoordinates {\r\n        const posNoJq = document.body.style.position;\r\n        const bodyPos = posNoJq; // QuickE.body.css('position');\r\n        const quickE = QuickE.singleton();\r\n        return bodyPos === 'relative' || bodyPos === 'absolute'\r\n            ? new PositionCoordinates(NoJQ.offset(quickE.body).left, NoJQ.offset(quickE.body).top)\r\n            : new PositionCoordinates(0, 0);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Refresh content block and modules elements\r\n */\r\nfunction refreshDomObjects(): void {\r\n    // must update this, as sometimes after finishing page load the position changes, like when dnn adds the toolbar\r\n    const quickE = QuickE.singleton();\r\n    quickE.bodyOffset = Positioning.getBodyPosition();\r\n\r\n    if (quickE.config.innerBlocks.enable) {\r\n        // get all content-block lists which are empty, or which allow multiple child-items\r\n        const lists = QeSelectors.blocks.cb.findAllLists().filter((e) => e.matches(`:not(.${QeSelectors.blocks.cb.singleItem}), :empty`));\r\n        const children: HTMLElement[] = [];\r\n        lists.forEach((l) => {\r\n            children.push(...Array.from(l.querySelectorAll<HTMLElement>(QeSelectors.blocks.cb.selector)));\r\n        });\r\n        quickE.contentBlocks = [...lists, ...children];\r\n    }\r\n\r\n    if (quickE.config.modules.enable) {\r\n        const panes = quickE.cachedPanes;\r\n        const children: HTMLElement[] = [];\r\n        panes.forEach((p) => {\r\n            children.push(...Array.from(p.querySelectorAll<HTMLElement>(QeSelectors.blocks.mod.selector)));\r\n        });\r\n        quickE.modules = [...panes, ...children];\r\n    }\r\n}\r\n\r\n/**\r\n * Last time when contentblock and modules are refreshed.\r\n * Helps to skip unnecessary calls to refresh(e).\r\n */\r\nlet lastCall: Date;\r\n\r\n/**\r\n * position, align and show a menu linked to another item\r\n */\r\nfunction positionAndAlign(element: HTMLElement, coords: PositionCoordinates) {\r\n    const quickE = QuickE.singleton();\r\n    element.style.left = `${coords.x - quickE.bodyOffset.x}px`;\r\n    element.style.top = `${coords.yh - quickE.bodyOffset.y}px`;\r\n    element.style.width = `${NoJQ.width(coords.element)}px`;\r\n    element.style.display = 'block';\r\n    return element;\r\n}\r\n\r\n/**\r\n * Refresh positioning / visibility of the quick-insert bar\r\n * @param e\r\n */\r\nfunction refresh(e: MouseEvent) {\r\n    const highlightClass: string = 'sc-cb-highlight-for-insert';\r\n    const newDate = new Date();\r\n    if ((!lastCall) || (newDate.getTime() - lastCall.getTime() > 1000)) {\r\n        // console.log('refreshed contentblock and modules');\r\n        lastCall = newDate;\r\n        refreshDomObjects();\r\n    }\r\n\r\n    // find the closest content-blocks and modules\r\n    const currentCoords = new PositionCoordinates(e.clientX, e.clientY);\r\n    const quickE = QuickE.singleton();\r\n    if (quickE.config.innerBlocks.enable && quickE.contentBlocks)\r\n        quickE.nearestCb = findNearest(quickE.contentBlocks, currentCoords);\r\n    if (quickE.config.modules.enable && quickE.modules)\r\n        quickE.nearestMod = findNearest(quickE.modules, currentCoords);\r\n\r\n    // hide the buttons for content-block or module, if they are not affected\r\n    quickE.modActions.forEach((a) => {\r\n        a.classList.toggle('sc-invisible', quickE.nearestMod === null);\r\n    });\r\n    quickE.cbActions.forEach((a) => {\r\n        a.classList.toggle('sc-invisible', quickE.nearestCb === null);\r\n    });\r\n\r\n    const oldParent = quickE.main._parentNode;\r\n\r\n    if (quickE.nearestCb !== null || quickE.nearestMod !== null) {\r\n        const alignTo = quickE.nearestCb || quickE.nearestMod;\r\n\r\n        // find parent pane to highlight\r\n        const parentPane = QeSelectors.blocks.mod.findClosestList(alignTo.element);\r\n        const parentCbList = QeSelectors.blocks.cb.findClosestList(alignTo.element);\r\n        const parentContainer = parentCbList ?? parentPane;\r\n        provideCorrectAddButtons(parentContainer);\r\n        // put part of the pane-name into the button-labels\r\n        if (parentPane) {\r\n            let paneName: string = parentPane.getAttribute('id') || '';\r\n            if (paneName.length > 4) paneName = paneName.substr(4);\r\n            quickE.modActions.filter((a) => a.matches('[titleTemplate]')).forEach((a) => {\r\n                a.setAttribute('title', a.getAttribute('titleTemplate').replace('{0}', paneName));\r\n            });\r\n        }\r\n\r\n        positionAndAlign(quickE.main, alignTo);\r\n\r\n        // Keep current block as current on menu\r\n        quickE.main.activeContentBlock = quickE.nearestCb ? quickE.nearestCb.element : null;\r\n        quickE.main.activeModule = quickE.nearestMod ? quickE.nearestMod.element : null;\r\n        quickE.main._parentNode = parentContainer;\r\n        parentContainer.classList.add(highlightClass);\r\n    } else {\r\n        quickE.main._parentNode = null;\r\n        quickE.main.style.display = 'none';\r\n    }\r\n\r\n    // if previously a parent-pane was highlighted, un-highlight it now\r\n    if (oldParent && oldParent !== quickE.main._parentNode)\r\n        oldParent.classList.remove(highlightClass);\r\n}\r\n\r\nfunction provideCorrectAddButtons(tag: HTMLElement) {\r\n    const listSettings = ContextForLists.getFromDom(tag);\r\n    let showContent = true;\r\n    let showApps = true;\r\n    if (listSettings.appList.length > 0) {\r\n        showContent = listSettings.appList.indexOf('Content') > -1;\r\n        // only show apps if the list is longer than 'Content' if it contains that\r\n        showApps = listSettings.appList.length - (showContent ? 1 : 0) > 0;\r\n    }\r\n    QuickE.singleton().cbActions.forEach((a) => {\r\n        a.classList.toggle('hide-content', !showContent);\r\n        a.classList.toggle('hide-app', !showApps);\r\n    });\r\n}\r\n\r\n/**\r\n * Return the nearest element to the mouse cursor from elements\r\n * @param elements\r\n * @param position\r\n */\r\nfunction findNearest(elements: HTMLElement[], position: PositionCoordinates): PositionCoordinates {\r\n    const maxDistance: number = 30; // Defines the maximal distance of the cursor when the menu is displayed\r\n\r\n    let nearestItem: PositionCoordinates = null;\r\n    let nearestDistance = maxDistance;\r\n\r\n    const posX: number = position.x + window.scrollX;\r\n    const posY: number = position.y + window.scrollY;\r\n\r\n    // Find nearest element\r\n    elements.forEach((element) => {\r\n        const e = Positioning.get(element);\r\n\r\n        // First check x coordinates - must be within container\r\n        if (posX < e.x || posX > e.x + e.w)\r\n            return;\r\n\r\n        // Check if y coordinates are within boundaries\r\n        const distance = Math.abs(posY - e.yh);\r\n\r\n        if (distance < maxDistance && distance < nearestDistance) {\r\n            nearestItem = e;\r\n            nearestDistance = distance;\r\n        }\r\n    });\r\n\r\n    return nearestItem;\r\n}\r\n","import { ModifierBase, ModifierDnnModule, QeSelectors, QuickE, Selection } from '.';\r\nimport { C } from '../constants';\r\nimport { HasLog, Insights, NoJQ } from '../logging';\r\nimport { ContextForLists } from './context-for-lists';\r\nimport { ModifierContentBlock } from './modifier-content-block';\r\n\r\n/**\r\n * add a clipboard to the quick edit\r\n * @internal\r\n */\r\nexport class QuickEClipboard extends HasLog {\r\n\r\n    /** Singleton */\r\n    public static singleton(): QuickEClipboard {\r\n        return this._singleton ?? (this._singleton = new QuickEClipboard());\r\n    }\r\n    private static _singleton: QuickEClipboard;\r\n\r\n    /**\r\n     * clipboard object - remembers what module (or content-block) was previously copied / needs to be pasted\r\n     */\r\n    clipboard = new Selection();\r\n\r\n    mods: { [key: string]: ModifierBase } = {};\r\n    modDnn: ModifierDnnModule;\r\n    modCb: ModifierContentBlock;\r\n\r\n    private constructor() {\r\n        super('Q-E.Clpbrd');\r\n        Insights.add('Q-E', 'clipboard', this.log);\r\n        this.mods.cb = this.modCb = new ModifierContentBlock();\r\n        this.mods.mod = this.modDnn = new ModifierDnnModule();\r\n\r\n        // initialize once the DOM is ready\r\n        NoJQ.ready(() => this.initializeSecondaryButtons());\r\n    }\r\n\r\n    /**\r\n     * bind clipboard actions to DOM buttons\r\n     */\r\n    initializeSecondaryButtons() {\r\n        const cl = this.log.call('initializeSecondaryButtons');\r\n        const qem = this;\r\n        QuickE.singleton().selected.querySelectorAll<HTMLElement>('a').forEach((e) => {\r\n            e.addEventListener('click', function () {\r\n                const action = this.getAttribute('data-action');\r\n                switch (action) {\r\n                    case 'delete': return qem.mods[qem.clipboard.type].delete(qem.clipboard);\r\n                    case 'sendToPane': return qem.modDnn.showSendToPane();\r\n                    default: throw new Error(`unexpected action: ${action}`);\r\n                }\r\n            });\r\n        });\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * perform copy and paste commands - needs the clipboard\r\n     * @param cbAction\r\n     * @param list\r\n     * @param domIndex\r\n     * @param type\r\n     */\r\n    do(cbAction: string, list: HTMLElement, domIndex: number, type: string): void {\r\n        const cl = this.log.call('do', `${cbAction}, ..., ${domIndex}`);\r\n        const newClip = this.createSpecs(type, list, domIndex);\r\n\r\n        // action!\r\n        switch (cbAction) {\r\n            case 'select':\r\n                this.mark(newClip);\r\n                break;\r\n\r\n            case 'paste':\r\n                const from = this.clipboard.index;\r\n                const to = newClip.index;\r\n                // check that we only move block-to-block or module to module\r\n                if (this.clipboard.type !== newClip.type)\r\n                    return alert(\"can't move module-to-block; move only works from module-to-module or block-to-block\");\r\n\r\n                if (isNaN(from) || isNaN(to)) return this.clearUi(); // skip, nothing real\r\n\r\n                const operator = newClip.type === QeSelectors.blocks.cb.id ? this.modCb : this.modDnn;\r\n\r\n                if (!operator.isRealMove(this.clipboard, newClip)) return this.clearUi(); // skip, no change\r\n                operator.move(this.clipboard, newClip);\r\n\r\n                this.clearUi();\r\n                break;\r\n            default:\r\n        }\r\n        return cl.return(null);\r\n    }\r\n\r\n\r\n    private mark(newData: Selection): void {\r\n        const cl = this.log.call('mark');\r\n        cl.data('specs', newData);\r\n\r\n        if (newData) {\r\n            // if it was already selected with the same thing, then release it\r\n            if (this.clipboard && this.clipboard.item === newData.item)\r\n                return cl.return(this.clearUi());\r\n            this.clipboard = newData;\r\n        }\r\n\r\n        this.removeSelectionMarker(); // clear previous markings\r\n\r\n        // sometimes missing data.item\r\n        if (!this.clipboard.item) return cl.done();\r\n\r\n        const selectedItem = this.clipboard.item;\r\n        selectedItem.classList.add(QeSelectors.selected);\r\n        if (selectedItem.previousElementSibling?.matches('iframe'))\r\n            selectedItem.previousElementSibling.classList.add(QeSelectors.selected);\r\n        this.setSecondaryActionsState(true);\r\n        const quickE = QuickE.singleton();\r\n        const btnConfig = this.clipboard?.type === QeSelectors.blocks.cb.id\r\n            ? quickE.config.innerBlocks.buttons\r\n            : quickE.config.modules.buttons;\r\n        quickE.selected.toggleOverlay(selectedItem, btnConfig);\r\n        cl.done();\r\n    }\r\n\r\n    /** Clear the UI so nothing is selected any more */\r\n    private clearUi(): void {\r\n        const cl = this.log.call('clearUi');\r\n        this.removeSelectionMarker();\r\n        this.clipboard = null;\r\n        this.setSecondaryActionsState(false);\r\n        QuickE.singleton().selected.toggleOverlay(false);\r\n        cl.done();\r\n    }\r\n\r\n\r\n    private removeSelectionMarker() {\r\n        document.querySelectorAll<HTMLElement>(`.${QeSelectors.selected}`).forEach((s) => s.classList.remove(QeSelectors.selected));\r\n    }\r\n\r\n    private setSecondaryActionsState(state: boolean): void {\r\n        const cl = this.log.call('setSecondaryActionsState');\r\n        let btns = Array.from(document.querySelectorAll<HTMLElement>('a.sc-content-block-menu-btn'));\r\n        btns = btns.filter((btn) => btn.classList.contains('icon-sxc-paste'));\r\n        btns.forEach((btn) => btn.classList.toggle(C.ClsNames.UnAvailable, !state));\r\n        cl.done();\r\n    }\r\n\r\n\r\n    private createSpecs(type: string, list: HTMLElement, domIndex: number): Selection {\r\n        const cl = this.log.call('createSpecs', `${type}, ..., ${domIndex}`);\r\n        const listItems = list.querySelectorAll<HTMLElement>(QeSelectors.blocks[type].selector);\r\n        // when paste module below the last module in pane\r\n        // index is 1 larger than the length, then select last\r\n        const currentItem: HTMLElement = (domIndex >= listItems.length)\r\n            ? listItems[listItems.length - 1]\r\n            : listItems[domIndex];\r\n\r\n        // get info what item/block is being edited\r\n        const contextInfo = ContextForLists.getFromDom(list) || {\r\n            parent: 'dnn',\r\n            field: list.id,\r\n            parentGuid: null as string,\r\n        };\r\n        return cl.return({\r\n            parent: contextInfo.parent,\r\n            parentGuid: contextInfo.parentGuid,\r\n            field: contextInfo.field,\r\n            list: list,\r\n            item: currentItem,\r\n            index: domIndex,\r\n            type: type,\r\n        } as Selection);\r\n    }\r\n\r\n}\r\n","/**\r\n * selectors used all over the in-page-editing, centralized to ensure consistency\r\n * @internal\r\n */\r\nconst contentBlockAndModuleSelectors: { [key: string]: CbOrMod } = {\r\n    cb: {\r\n        id: 'cb',\r\n        class: 'sc-content-block',\r\n        selector: '.sc-content-block',\r\n        findAllLists: () => Array.from(document.querySelectorAll<HTMLElement>('.sc-content-block-list')),\r\n        findClosestList: (element: HTMLElement) => element.closest<HTMLElement>('.sc-content-block-list'),\r\n        context: 'data-list-context',\r\n        singleItem: 'single-item',\r\n    },\r\n    mod: {\r\n        id: 'mod',\r\n        class: 'DnnModule',\r\n        selector: '.DnnModule',\r\n        // Found no better way to get all panes - the hidden variable does not exist when not in edit page mode\r\n        findAllLists: () => {\r\n            // jquery :has selector (https://api.jquery.com/has-selector/) is not a compatible with css selector\r\n            // and doesn't work without jquery (https://developer.mozilla.org/en-US/docs/Web/CSS/:has)\r\n            // and has absolutely terrible performance (380-560 ms)\r\n            // $('.DNNEmptyPane, .dnnDropEmptyPanes, :has(>.DnnModule)')\r\n\r\n            // compact javascript solution is still very slow (10-15 ms)\r\n            // Array.from(document.querySelectorAll('*')).filter((e) => e.matches('.DNNEmptyPane, .dnnDropEmptyPanes') || Array.from(e.children).some((c) => c.matches('.DnnModule')))\r\n\r\n            // as fast as can be (3-5 ms)\r\n            const found: HTMLElement[] = [];\r\n            const all = document.querySelectorAll<HTMLElement>('*');\r\n            for (let i = 0; i < all.length; i++) {\r\n                const el = all[i];\r\n                if (el.matches('.DNNEmptyPane, .dnnDropEmptyPanes')) {\r\n                    found.push(el);\r\n                    continue;\r\n                }\r\n                const children = el.children;\r\n                for (let j = 0; j < children.length; j++) {\r\n                    const child = children[j];\r\n                    if (child.matches('.DnnModule')) {\r\n                        found.push(el);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return found;\r\n        },\r\n        findClosestList: (element: HTMLElement) => {\r\n            if (!element) return null;\r\n            if (element.matches('.DNNEmptyPane, .dnnDropEmptyPanes')) {\r\n                return element;\r\n            }\r\n            for (let i = 0; i < element.children.length; i++) {\r\n                const child = element.children[i];\r\n                if (child.matches('.DnnModule')) {\r\n                    return element;\r\n                }\r\n            }\r\n            return contentBlockAndModuleSelectors.mod.findClosestList(element.parentElement);\r\n        },\r\n        context: null,\r\n    },\r\n};\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const QeSelectors = {\r\n    blocks: contentBlockAndModuleSelectors,\r\n    eitherCbOrMod: '.DnnModule, .sc-content-block',\r\n    selected: 'sc-cb-is-selected',\r\n};\r\n\r\n\r\n/**\r\n * Structure for constants in the selectors, to guarantee we got everything\r\n */\r\ninterface CbOrMod {\r\n    id: string;\r\n    class: string;\r\n    selector: string;\r\n    findAllLists: () => HTMLElement[];\r\n    findClosestList: (element: HTMLElement) => HTMLElement;\r\n    context: string;\r\n    singleItem?: string;\r\n}\r\n","// must come first because we're still relying on build order\r\nexport * from './selection';\r\nexport * from './modifier-base';\r\n\r\nexport * from './quick-e-overlays';\r\nexport * from './quick-e-configuration';\r\n\r\nexport * from './modifier-content-block';\r\nexport * from './position-coordinates';\r\nexport * from './modifier-dnn-module';\r\nexport * from './modifier-dnn-module-internal';\r\nexport * from './positioning';\r\nexport * from './quick-e';\r\nexport * from './quick-e-clipboard';\r\nexport * from './selectors-instance';\r\n\r\nconst css = require('./quickE.css');","import { ModifierContentBlock, ModifierDnnModule, PositionCoordinates, Positioning, QeSelectors, QuickEditConfig, QuickEditOverlay } from '.';\r\nimport { HasLog, Insights, NoJQ } from '../logging';\r\n\r\nconst configAttr: string = 'quick-edit-config';\r\nconst classForAddContent = 'sc-content-block-menu-addcontent';\r\nconst classForAddApp = 'sc-content-block-menu-addapp';\r\n\r\n/**\r\n * the quick-edit object\r\n * the quick-insert object\r\n * @internal\r\n */\r\nexport class QuickE extends HasLog {\r\n\r\n    /** Singleton */\r\n    public static singleton(): QuickE {\r\n        return this._singleton ?? (this._singleton = new QuickE());\r\n    }\r\n    private static _singleton: QuickE;\r\n\r\n\r\n    body = document.body;\r\n    main = NoJQ.domFromString('<div class=\"sc-content-block-menu sc-content-block-quick-insert sc-i18n\"></div>')[0] as QuickEditOverlay.Main;\r\n    template =\r\n        `<a class='${classForAddContent} sc-invisible' data-type='Default' data-i18n='[titleTemplate]QuickInsertMenu.AddBlockContent'>&nbsp;</a>`\r\n        + `<a class='${classForAddApp} sc-invisible' data-type='' data-i18n='[titleTemplate]QuickInsertMenu.AddBlockApp'>&nbsp;</a>`\r\n        + `${QuickEditOverlay.btn('select', 'ok', 'Select', true)}${QuickEditOverlay.btn('paste', 'paste', 'Paste', true, true)}`;\r\n    selected = QuickEditOverlay.selectedOverlay;\r\n    // will be populated later in the module section\r\n    contentBlocks: HTMLElement[] = null;\r\n    cachedPanes: HTMLElement[] = null;\r\n    modules: HTMLElement[] = null;\r\n    nearestCb: PositionCoordinates = null;\r\n    nearestMod: PositionCoordinates = null;\r\n    // add stuff which depends on other values to create\r\n    cbActions = NoJQ.domFromString(this.template);\r\n    modActions = NoJQ.domFromString(this.template.replace(/QuickInsertMenu.AddBlock/g, 'QuickInsertMenu.AddModule')).map((a) => {\r\n        a.setAttribute('data-context', 'module');\r\n        a.classList.add('sc-content-block-menu-module');\r\n        return a;\r\n    });\r\n\r\n    //\r\n    config = QuickEditConfig.getNewDefaultConfig();\r\n\r\n    bodyOffset: PositionCoordinates;\r\n\r\n    private constructor() {\r\n        super('Q-E.Main');\r\n        Insights.add('Q-E', 'manager', this.log);\r\n        this.modActions.forEach((a) => {\r\n            a.addEventListener('click', ModifierDnnModule.onModuleButtonClick);\r\n        });\r\n        this.cbActions.forEach((a) => {\r\n            a.addEventListener('click', ModifierContentBlock.onCbButtonClick);\r\n        });\r\n    }\r\n\r\n    start(): void {\r\n        try {\r\n            this.loadPageConfig();\r\n            if (this.config.enable) {\r\n                // initialize first body-offset\r\n                this.bodyOffset = Positioning.getBodyPosition();\r\n                this.enable();\r\n                this.initWatchMouse();\r\n            }\r\n        } catch (e) {\r\n            console.error(\"couldn't start quick-edit\", e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * reset the quick-edit\r\n     * for example after ajax-loading a content-block, which may cause changed configurations\r\n     */\r\n    reset(): void {\r\n        const cl = this.log.call('reset');\r\n        this.loadPageConfig();\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * This checks if the page has any alternate configuration\r\n     * Note that it's also used after ajax refreshes, which can change the config\r\n     * So if it does reconfigure itself, it will start with the default config again\r\n     */\r\n    loadPageConfig() {\r\n        const cl = this.log.call('loadPageConfig', null, null, { config: this.config });\r\n        this.logConfig();\r\n        const configs = document.querySelectorAll<HTMLElement>(`[${configAttr}]`);\r\n        let confJ: string;\r\n\r\n        if (configs.length > 0) {\r\n            cl.add('found configs', configs);\r\n            // go through reverse list, as the last is the most important...\r\n            let finalConfig = {} as QuickEditConfig.FullConfig;\r\n            for (let c = configs.length; c >= 0; c--) {\r\n                // 2021-09-17 spm either the loop is wrong and we should only get configs[0] or we should be gettings configs[c]\r\n                confJ = configs[0].getAttribute(configAttr);\r\n                try {\r\n                    const confO = JSON.parse(confJ) as Partial<QuickEditConfig.FullConfig>;\r\n                    cl.data('additional config', confO);\r\n                    finalConfig = { ...finalConfig, ...confO };\r\n                    cl.data('merged config', finalConfig);\r\n                } catch (e) {\r\n                    cl.add('had trouble with json');\r\n                    console.warn('had trouble with json', e);\r\n                }\r\n            }\r\n            const defConfig = QuickEditConfig.getNewDefaultConfig();\r\n            this.config = { ...defConfig, ...finalConfig, buttons: { ...defConfig.buttons, ...finalConfig.buttons } };\r\n        } else\r\n            cl.add('no configs found, will use exiting');\r\n\r\n        // expand/merge configs on the sub-nodes module/block\r\n        this.config.innerBlocks.buttons = { ...this.config?.buttons, ...this.config?.innerBlocks?.buttons };\r\n        this.config.modules.buttons = { ...this.config?.buttons, ...this.config?.modules?.buttons };\r\n\r\n        this.logConfig();\r\n\r\n        this.detectWhichMenusToActivate();\r\n\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * existing inner blocks found? Will affect if modules can be quick-inserted...\r\n     */\r\n    private detectWhichMenusToActivate() {\r\n        const conf = this.config;\r\n        const cl = this.log.call('detectWhichMenusToActivate');\r\n        const innerCBs = QeSelectors.blocks.cb.findAllLists();\r\n        const hasInnerCBs = (innerCBs.length > 0);\r\n        cl.add(`has Content Blocks: ${hasInnerCBs}`, innerCBs);\r\n        // if it has inner-content, then it's probably a details page, where quickly adding modules would be a problem, so for now, disable modules in this case\r\n        if (conf.modules.enable === null || conf.modules.enable === 'auto')\r\n            conf.modules.enable = !hasInnerCBs;\r\n        // for now, ContentBlocks are only enabled if they exist on the page\r\n        if (conf.innerBlocks.enable === null || conf.innerBlocks.enable === 'auto')\r\n            conf.innerBlocks.enable = hasInnerCBs;\r\n        cl.add(`module.enable: ${conf.modules.enable}`);\r\n        cl.add(`innerBlocks.enable: ${conf.innerBlocks.enable}`);\r\n        cl.done();\r\n    }\r\n\r\n    private enable(): void {\r\n        const cl = this.log.call('enable');\r\n        // build all toolbar html-elements\r\n        this.prepareToolbarInDom();\r\n\r\n        // Cache the panes (because panes can't change dynamically)\r\n        this.initPanes();\r\n        cl.done();\r\n    }\r\n\r\n    prepareToolbarInDom(): void {\r\n        const cl = this.log.call('prepareToolbarInDom');\r\n        this.body.append(this.main);\r\n        this.body.append(this.selected);\r\n        this.cbActions.forEach((a) => this.main.append(a));\r\n        this.modActions.forEach((a) => this.main.append(a));\r\n\r\n        // use config to enable/disable some buttons\r\n        QuickEditOverlay.setButtonActivationClasses(this.config.innerBlocks.buttons, this.cbActions);\r\n        QuickEditOverlay.setButtonActivationClasses(this.config.modules.buttons, this.modActions);\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * cache the panes which can contain modules\r\n     */\r\n    private initPanes(): void {\r\n        const cl = this.log.call('initPanes');\r\n        this.cachedPanes = QeSelectors.blocks.mod.findAllLists();\r\n        this.cachedPanes.forEach((pane) => {\r\n            pane.classList.add('sc-cb-pane-glow');\r\n        });\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * start watching for mouse-move\r\n     */\r\n    private initWatchMouse() {\r\n        const cl = this.log.call('initWatchMouse');\r\n        let refreshTimeout: number = null;\r\n        document.body.addEventListener('mousemove', (e) => {\r\n            if (refreshTimeout === null)\r\n                refreshTimeout = window.setTimeout(() => {\r\n                    requestAnimationFrame(() => {\r\n                        Positioning.refresh(e);\r\n                        refreshTimeout = null;\r\n                    });\r\n                },\r\n                    20);\r\n        });\r\n        cl.done();\r\n    }\r\n\r\n    private logConfig() {\r\n        this.log.add(`config enabled: ${this.config.enable}, mod: ${this.config.modules.enable}, cb: ${this.config.innerBlocks.enable}. ${JSON.stringify(this.config)})`);\r\n    }\r\n\r\n}\r\n","import { C } from '../constants/index';\r\nimport { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { HtmlTools } from '../html/dom-tools';\r\nimport { HasLog, Insights } from '../logging';\r\nimport { renderer } from './render';\r\n\r\n//#region WebApi Endpoints used: 2sxc\r\nconst webApiRender = 'cms/block/render';\r\nconst webApiSave = 'cms/block/template';\r\n//#endregion\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ContentBlockEditor extends HasLog {\r\n\r\n    /** Singleton */\r\n    public static singleton(): ContentBlockEditor {\r\n        return this._singleton ?? (this._singleton = new ContentBlockEditor());\r\n    }\r\n    private static _singleton: ContentBlockEditor;\r\n\r\n\r\n    private constructor() {\r\n        super('Sys.CbEdit');\r\n        Insights.add('system', 'cb-editor-api', this.log);\r\n    }\r\n\r\n\r\n    /**\r\n     * prepare the instance so content can be added\r\n     * this ensure the content-group has been created, which is required to add content\r\n     * @param {ContextComplete} context\r\n     */\r\n    prepareToAddContent(context: ContextComplete, useModuleList: boolean): Promise<string | void> {\r\n        const cl = this.log.call('prepareToAddContent');\r\n        const isCreated: boolean = context.contentBlock.isCreated;\r\n        if (isCreated || !useModuleList)\r\n            return cl.return(Promise.resolve());\r\n\r\n        // persist the template\r\n        const promise = this.updateTemplate(context, context.contentBlock.templateId, true);\r\n        return cl.return(promise, 'ok');\r\n    }\r\n\r\n\r\n    /**\r\n     * Update the template and adjust UI accordingly.\r\n     * @param {ContextComplete} context\r\n     * @param {number} templateId\r\n     * @param {boolean} forceCreate\r\n     */\r\n    updateTemplateFromDia(context: ContextComplete, templateId: number): Promise<void> {\r\n        const cl = this.log.call('updateTemplateFromDia', `..., ${templateId}`);\r\n        const wasShowingPreview = HtmlTools.isDisabled(context.sxc);\r\n        cl.add(`wasShowingPreview: ${wasShowingPreview}`);\r\n        const promise = this.updateTemplate(context, templateId, false)\r\n            .then(() => {\r\n                // only reload on ajax, not on app as that was already re-loaded on the preview\r\n                // necessary to show the original template again\r\n                if (wasShowingPreview) renderer.reloadAndReInitialize(context);\r\n            });\r\n        return cl.return(promise);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Retrieve the preview from the web-api\r\n     * @param {ContextComplete} context\r\n     * @param {number} templateId\r\n     * @returns {promise} promise with the html in the result\r\n     */\r\n    getPreviewWithTemplate(context: ContextComplete, templateId: number): Promise<string> {\r\n        const cl = this.log.call('getPreviewWithTemplate', `..., ${templateId}`);\r\n        templateId = templateId || C.ContentBlock.UseExistingTemplate; // fallback, meaning use saved ID\r\n        const params: WebApiParams = {\r\n            templateId: templateId,\r\n            lang: context.app.currentLanguage,\r\n            cbid: context.contentBlockReference.id,\r\n            originalparameters: JSON.stringify(context.instance.parameters),\r\n        };\r\n        cl.data('params', params);\r\n        const promise = context.sxc.webApi.fetchRaw(context.sxc.webApi.url(webApiRender, params))\r\n            .then((response) => response.text());\r\n        return cl.return(promise);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Update the template.\r\n     */\r\n    private updateTemplate(context: ContextComplete, templateId: number, forceCreate: boolean): Promise<string | void> {\r\n        const cl = this.log.call('updateTemplate');\r\n        const promise = this.saveTemplate(context, templateId, forceCreate)\r\n            .then((data) => {\r\n                if (!data) return null;\r\n\r\n                // fixes a special case where the guid is given with quotes (depends on version of angularjs) issue #532\r\n                const newGuid = data.replace(/[\\\",\\']/g, '');\r\n\r\n                if (console)\r\n                    console.log(`created content group {${newGuid}}`);\r\n\r\n                return context.contentBlock.contentGroupId = newGuid;\r\n            }).catch(() => {\r\n                // error handling\r\n                return alert('error - result not ok, was not able to create ContentGroup');\r\n            });\r\n        return cl.return(promise);\r\n    }\r\n\r\n\r\n    /**\r\n     * Save the template configuration for this instance\r\n     * @param {ContextComplete} context\r\n     * @param {number} templateId\r\n     * @param {boolean} [forceCreateContentGroup]\r\n     * @returns {promise}\r\n     */\r\n    private saveTemplate(context: ContextComplete, templateId: number, forceCreateContentGroup: boolean): Promise<string> {\r\n        const cl = this.log.call('saveTemplate');\r\n        const params: WebApiParams = {\r\n            templateId: templateId,\r\n            forceCreateContentGroup: forceCreateContentGroup,\r\n            newTemplateChooserState: false,\r\n        };\r\n        cl.data('params', params);\r\n        const promise = context.sxc.webApi.fetchJson(context.sxc.webApi.url(webApiSave, params), undefined, 'POST');\r\n        return cl.return(promise);\r\n    }\r\n\r\n}\r\n\r\n\r\ninterface WebApiParams {\r\n    templateId?: number;\r\n    lang?: string;\r\n    cbisentity?: boolean;\r\n    cbid?: number;\r\n    originalparameters?: string;\r\n    forceCreateContentGroup?: boolean;\r\n    newTemplateChooserState?: boolean;\r\n    zoneId?: number;\r\n    appId?: number;\r\n    v2?: boolean;\r\n}\r\n","import { SpecialCommands } from '../commands';\r\nimport { C } from '../constants';\r\nimport { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { HtmlTools } from '../html/dom-tools';\r\nimport { SxcEdit } from '../interfaces/sxc-instance-editable';\r\nimport { windowInPage as window } from '../interfaces/window-in-page';\r\nimport { AssetsLoader, HasLog, Insights, NoJQ } from '../logging';\r\nimport { QuickE } from '../quick-edit/quick-e';\r\nimport { WorkflowArguments, WorkflowHelper, WorkflowPhases } from '../workflow';\r\nimport { ContentBlockEditor } from './content-block-editor';\r\n\r\n/**\r\n * This is the rendering compontent, responsible to update the page when something changes.\r\n * Depending on the feature-set it will use ajax or not\r\n * @internal\r\n */\r\nclass RendererGlobal extends HasLog {\r\n\r\n    constructor() {\r\n        super('Rnd.Rndrer');\r\n        Insights.add('system', 'renderer', this.log);\r\n    }\r\n\r\n    /**\r\n     * Show a message where the content of a module should be - usually as placeholder till something else happens\r\n     * @param {ContextComplete} context\r\n     * @param {string} newContent\r\n     * @returns {} nothing\r\n     */\r\n    showMessage(context: ContextComplete, newContent: string): void {\r\n        SxcEdit.getTag(context.sxc).innerHTML = newContent;\r\n    }\r\n\r\n\r\n    /**\r\n     * this one assumes a replace / change has already happened, but now must be finalized...\r\n     * @param {ContextComplete} context\r\n     * @param {boolean} forceAjax\r\n     * @param {boolean} preview\r\n     */\r\n    reloadAndReInitialize(context: ContextComplete, forceAjax?: boolean, preview?: boolean): Promise<void> {\r\n        const cl = this.log.call('reloadAndReInitialize', `..., forceAjax: ${forceAjax}, preview: ${preview}`, null, { context: context });\r\n\r\n        // get workflow engine or a dummy engine\r\n        const wf = context.commandWorkflow ?? WorkflowHelper.getDummyManager();\r\n        const promiseChain = wf.run(new WorkflowArguments(SpecialCommands.refresh, WorkflowPhases.before, context));\r\n\r\n        // 2021-02-21 2dm New in 11.12 enable toolbar to not reload in a SPA scenario\r\n        const finalPromise = promiseChain.then((wfArgs) => {\r\n            if (WorkflowHelper.isCancelled(wfArgs)) {\r\n                cl.add('Workflow return false, will cancel and not refresh.');\r\n                return Promise.resolve();\r\n            }\r\n\r\n            // if ajax is not supported, we must reload the whole page\r\n            if (!forceAjax && !context.app.supportsAjax) {\r\n                cl.done('not ajax - reloading page');\r\n                window.location.reload();\r\n                return Promise.resolve();\r\n            }\r\n\r\n            cl.add('is ajax, calling ajaxReload');\r\n            return this.ajaxLoad(context, C.ContentBlock.UseExistingTemplate, preview)\r\n                .then((result) => {\r\n                    // If Evoq, tell Evoq that page has changed if it has changed (Ajax call)\r\n                    if (window.dnn_tabVersioningEnabled) { // this only exists in evoq or on new DNNs with tabVersioning\r\n                        cl.add('system is using tabVersioning - will inform DNN');\r\n                        try {\r\n                            window.dnn.ContentEditorManager.triggerChangeOnPageContentEvent();\r\n                        } catch (e) { /* ignore */ }\r\n                    }\r\n                    return cl.return(result);\r\n                })\r\n                .catch((error) => console.log('Error in reloadAndReInitialize', error));\r\n        });\r\n\r\n        return finalPromise;\r\n    }\r\n\r\n    /**\r\n     * ajax-call, then replace\r\n     * @param {ContextComplete} context\r\n     * @param {number} alternateTemplateId\r\n     * @param {boolean} justPreview\r\n     */\r\n    ajaxLoad(context: ContextComplete, alternateTemplateId: number, justPreview: boolean): Promise<void> {\r\n        const cl = this.log.call('ajaxLoad');\r\n        cl.add('starting promise chain');\r\n        return ContentBlockEditor.singleton().getPreviewWithTemplate(context, alternateTemplateId)\r\n            .then((result: string) => {\r\n                cl.add(\"get preview done, let's replace the content\");\r\n                this.replaceContentBlock(context, result, justPreview);\r\n            })\r\n            .then(() => {\r\n                cl.add('replace done, resetting quickE');\r\n                QuickE.singleton().reset(); // reset quick-edit, because the config could have changed\r\n                cl.done();\r\n            });\r\n    }\r\n\r\n\r\n    /**\r\n     * ajax update/replace the content of the content-block\r\n     * optionally also initialize the toolbar (if not just preview)\r\n     * @param {ContextComplete} context\r\n     * @param {string} newContent\r\n     * @param {boolean} justPreview\r\n     */\r\n    private replaceContentBlock(context: ContextComplete, newContent: string, justPreview: boolean): void {\r\n        const cl = this.log.call('replaceContentBlock');\r\n        try {\r\n            try {\r\n                const newContentObj = JSON.parse(newContent) as ContentBlockReplacement;\r\n                const newHeadHtml = newContentObj.Resources\r\n                    .map((resource) => {\r\n                        if (resource.Type === 'js') {\r\n                            return `<script type=\"text/javascript\" src=\"${resource.Url}\"></script>`;\r\n                        }\r\n                        if (resource.Type === 'css') {\r\n                            return `<link rel=\"stylesheet\" href=\"${resource.Url}\">`;\r\n                        }\r\n                    })\r\n                    .filter((resource) => resource != null)\r\n                    .join('\\n');\r\n                const newHead = NoJQ.domFromString(newHeadHtml);\r\n                const newDom = NoJQ.domFromString(newContentObj.Html)[0];\r\n\r\n                NoJQ.append(document.head, newHead, false);\r\n                // Must disable toolbar before we attach to DOM\r\n                if (justPreview) HtmlTools.disable(newDom);\r\n                NoJQ.replaceWith(SxcEdit.getTag(context.sxc), newDom, false);\r\n\r\n                // run scripts manually to ensure proper timing\r\n                const scripts = [\r\n                    ...newHead.filter((asset) => asset.tagName.toLocaleLowerCase() === 'script'),\r\n                    ...Array.from(newDom.querySelectorAll('script')),\r\n                ] as HTMLScriptElement[];\r\n                AssetsLoader.runScripts(scripts, undefined);\r\n            } catch {\r\n                const newDom = NoJQ.domFromString(newContent)[0];\r\n\r\n                // Must disable toolbar before we attach to DOM\r\n                if (justPreview) HtmlTools.disable(newDom);\r\n                NoJQ.replaceWith(SxcEdit.getTag(context.sxc), newDom, true);\r\n            }\r\n\r\n            // reset the cache, so the sxc-object is refreshed\r\n            context.sxc.recreate(true);\r\n        } catch (e) {\r\n            console.log('Error while rendering template:', e);\r\n        }\r\n        cl.done();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const renderer = new RendererGlobal();\r\n\r\ninterface ContentBlockReplacement {\r\n    Html: string;\r\n    Resources: ContentBlockResource[];\r\n}\r\n\r\ninterface ContentBlockResource {\r\n    Contents: null;\r\n    Id: null;\r\n    Type: 'js' | 'css';\r\n    Url: string;\r\n}\r\n","import { renderer } from '../../contentBlock/render';\r\nimport { ContextComplete } from '../../context/bundles/context-bundle-button';\r\nimport { TypeUnsafe } from '../../plumbing/TypeTbD';\r\nimport { ContentListActionParams } from './content-list-action-params';\r\n\r\n//#region WebApi Endpoints used: 2sxc\r\nconst webApiAdd = 'cms/block/item';\r\nconst webApiRemoveFromList = 'cms/list/delete';\r\nconst webApiReorder = 'cms/list/move';\r\nconst webApiItemPublish = 'cms/edit/publish';\r\nconst webApiBlockPublish = 'cms/block/publish';\r\n//#endregion\r\n\r\n/**\r\n * These actions make changes to a content-block - like adding, removing or publishing items in the block\r\n * @class ActionsCatalog\r\n * @internal\r\n */\r\nclass ContentListActions {\r\n    /**\r\n     * add an item to the list at this position\r\n     * @param {ContextComplete} context\r\n     * @param {number} index\r\n     */\r\n    addItem<T>(context: ContextComplete, index: number) {\r\n        return doAndReload<T>(context, webApiAdd, { index }, 'post');\r\n    }\r\n\r\n    /**\r\n     * remove an item from a list, then reload\r\n     * @param {ContextComplete} context\r\n     * @param {number} sortOrder\r\n     */\r\n    removeFromList(context: ContextComplete) {\r\n        const params = context.button.command.params;\r\n        return doAndReload<void>(context, webApiRemoveFromList, {\r\n            index: params.sortOrder,\r\n            parent: params.parent,\r\n            fields: params.fields,\r\n        }, 'delete');\r\n    }\r\n\r\n    /**\r\n     * change the order of an item in a list, then reload\r\n     * @param {ContextComplete} context\r\n     * @param {number} index\r\n     * @param {number} toIndex\r\n     */\r\n    changeOrder(context: ContextComplete, index: number, toIndex: number) {\r\n        const params = context.button.command.params;\r\n        return doAndReload<void>(context, webApiReorder, {\r\n            parent: params.parent,\r\n            fields: params.fields,\r\n            index,\r\n            toIndex,\r\n        }, 'post');\r\n    }\r\n\r\n    /**\r\n     * set a content-item in this block to published, then reload\r\n     * @param {ContextComplete} context\r\n     * @param {string} part\r\n     * @param {number} index\r\n     */\r\n    publish(context: ContextComplete, part: string, index: number) {\r\n        return doAndReload<void>(context, webApiBlockPublish, {\r\n            part,\r\n            index,\r\n        }, 'post');\r\n    }\r\n\r\n    /**\r\n     * publish an item using it's ID\r\n     * @param {ContextComplete} context\r\n     * @param {number} entityId\r\n     */\r\n    publishId(context: ContextComplete, entityId: number) {\r\n        return doAndReload<void>(context, webApiItemPublish,\r\n            { id: entityId },\r\n            'post');\r\n    }\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const Actions = new ContentListActions();\r\n\r\n/*\r\n * this is a content block in the browser\r\n *\r\n * A Content Block is a stand alone unit of content, with it's own definition of\r\n * 1. content items\r\n * 2. template\r\n * + some other stuff\r\n *\r\n * it should be able to render itself\r\n */\r\n\r\n/**\r\n * internal helper, to do something and reload the content block\r\n * @param {ContextComplete} context\r\n * @param {string} url\r\n * @param {ContentListActionParams} params\r\n * @returns {void | T}\r\n */\r\nfunction doAndReload<T>(\r\n    context: ContextComplete,\r\n    url: string,\r\n    params: ContentListActionParams,\r\n    verb: 'get' | 'post' | 'delete' = 'get',\r\n    postData: TypeUnsafe = {},\r\n): Promise<void | T> {\r\n    return (verb === 'post'\r\n        ? context.sxc.webApi.fetchRaw(context.sxc.webApi.url(url, params), postData, 'POST')\r\n        : verb === 'delete'\r\n            ? context.sxc.webApi.fetchRaw(context.sxc.webApi.url(url, params), undefined, 'DELETE')\r\n            : context.sxc.webApi.fetchJson(context.sxc.webApi.url(url, params)))\r\n        .then(() => {\r\n            renderer.reloadAndReInitialize(context);\r\n        });\r\n}\r\n","import { ContextComplete } from '../../context';\r\n\r\n/**\r\n * Shared logic like for deciding if we show list buttons\r\n * here\r\n * @internal\r\n */\r\nexport class SharedLogic {\r\n    static isPartOfBlockList(context: ContextComplete) {\r\n        return !!(context.contentBlock.isList &&\r\n            context.button.command.params.useModuleList &&\r\n            context.button.command.params.sortOrder !== -1);    // -1 is the header item\r\n    }\r\n\r\n    /**\r\n     * This will tell us, if the item is being referenced (like in a list)\r\n     * It's similar to isBlockList, but will return true even if it's\r\n     * a non-list (single item only)\r\n     */\r\n    static isBlockReference(context: ContextComplete) {\r\n        return !!context.button.command.params.useModuleList;    // -1 is the header item\r\n    }\r\n\r\n    static isFieldList(context: ContextComplete) {\r\n        const params = context.button?.command.params;\r\n        return !!(params?.fields && params?.parent);\r\n    }\r\n\r\n    static isList(context: ContextComplete) {\r\n        return this.isPartOfBlockList(context) || this.isFieldList(context);\r\n    }\r\n\r\n    static isReferencedItem(context: ContextComplete) {\r\n        return this.isBlockReference(context) || this.isFieldList(context);\r\n    }\r\n}\r\n","import { CommandNames, Commands } from '..';\r\nimport { Actions } from './content-list-actions';\r\nimport { SharedLogic } from './shared-logic';\r\n\r\n/**\r\n * add brings no dialog, just add an empty item\r\n *\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nCommands.add(\r\n    CommandNames.add,\r\n    'AddDemo',\r\n    'plus-circled',\r\n    false,\r\n    true,\r\n    {\r\n        showCondition: (context) => SharedLogic.isList(context),\r\n        code(context) {\r\n            return Actions.addItem(context, context.button.command.params.sortOrder + 1);\r\n        },\r\n    },\r\n);\r\n","import { CommandNames, Commands } from '..';\r\nimport { ItemIdentifierGroup } from '../../interfaces/item-identifiers';\r\nimport { SharedLogic } from './shared-logic';\r\n\r\n/**\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nCommands.add(CommandNames.addExisting, 'AddExisting', 'add-existing', false, true, {\r\n    dialog: (_) => 'replace',\r\n\r\n    showCondition(context) {\r\n        return SharedLogic.isList(context);\r\n    },\r\n\r\n    configureLinkGenerator: (context, linkGenerator) => {\r\n        if (SharedLogic.isFieldList(context)) {\r\n            const params = context.button.command.params;\r\n            linkGenerator.items = [{ Group: {\r\n                Guid: params.parent,\r\n                Part: params.fields,\r\n                Index: params.sortOrder + 1,\r\n                Add: true,\r\n            }}];\r\n        } else if (SharedLogic.isPartOfBlockList(context)) {\r\n            const topItem = linkGenerator.items[0] as ItemIdentifierGroup;\r\n            topItem.Group.Add = true;\r\n            topItem.Group.Index++;\r\n            linkGenerator.items = [topItem];\r\n        }\r\n    },\r\n});\r\n","import { CommandNames, Commands } from '..';\r\n\r\n/**\r\n * open the import dialog\r\n *\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nCommands.add(CommandNames.appImport, 'Dashboard', '', true, false, {});\r\n","import { CommandNames, Commands } from '..';\r\n\r\n/**\r\n * open an edit-item dialog\r\n *\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CommandNames.edit, 'Edit', 'pencil', false, true, {\r\n    addParamsToLink: (ctx) => ({ mode: CommandNames.edit }),\r\n    showCondition(ctx) {\r\n        // need ID or a \"slot\", otherwise edit won't work\r\n        const result =\r\n            !!ctx.button.command.params.entityId ||\r\n            !!ctx.button.command.params.useModuleList;\r\n        return result;\r\n    },\r\n});\r\n","import { CommandNames, Commands } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdAppResources = 'app-resources';\r\n/**\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nCommands.add(CmdAppResources, 'AppResources', 'translate', true, false, {\r\n    dialog: (_) => CommandNames.edit,\r\n\r\n    disabled: (context) => context.app.resourcesId === null,\r\n\r\n    title: (context) => `Toolbar.AppResources${context.app.resourcesId === null ? 'Disabled' : ''}`,\r\n\r\n    // only if resources exist or are 0 (to be created)...\r\n    showCondition: (context) => !!context.user.CanAdmin,\r\n\r\n    configureLinkGenerator: (context, linkGenerator) => {\r\n        linkGenerator.items = [{ EntityId: context.app.resourcesId }];\r\n    },\r\n\r\n    // if it doesn't have a query, make the button faded\r\n    dynamicClasses: (context) => context.app.resourcesId !== null ? '' : 'empty',\r\n});\r\n","import { CommandNames, Commands } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdAppSettings = 'app-settings';\r\n\r\n/**\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nCommands.add(CmdAppSettings, 'AppSettings', 'sliders', true, false, {\r\n\r\n    dialog: () => CommandNames.edit,\r\n\r\n    disabled: (context) => context.app.settingsId === null,\r\n\r\n    title: (context) =>\r\n        `Toolbar.AppSettings${\r\n            context.app.settingsId === null ? 'Disabled' : ''\r\n    }`,\r\n\r\n    // only if settings exist, or are 0 (to be created)\r\n    showCondition: (context) => context.user.CanAdmin,\r\n\r\n    configureLinkGenerator: (context, linkGenerator) => {\r\n        linkGenerator.items = [{ EntityId: context.app.settingsId }];\r\n    },\r\n\r\n    // if it doesn't have a settings, make it less strong\r\n    dynamicClasses: (context) => context.app.settingsId !== null ? '' : 'empty',\r\n});\r\n","import { Commands } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdApp = 'app';\r\n/**\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nCommands.add(CmdApp, 'App', 'settings', true, false, {\r\n    showCondition: (context) => {\r\n        return context.user.CanAdmin;\r\n    },\r\n});\r\n","import { Commands } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdApps = 'apps';\r\n/**\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nCommands.add(CmdApps, 'Zone', 'manage', true, false, {\r\n    showCondition: (context) => {\r\n        return !!context.user.CanAdmin;\r\n    },\r\n});\r\n","import { Commands } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdContentItems = 'contentitems';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdContentItems, 'ContentItems', 'table', true, false, {\r\n    addParamsToLink: (context) => {\r\n        const typeName = context.button.command.params.contentType\r\n            || context.contentBlock.contentTypeId;\r\n        return {\r\n            // old name for the previous UI\r\n            // 2021-11-29 2dm - believe this is obsolete, will turn off and see if everything works\r\n            // #cleanUp EOY 2021\r\n            // contentTypeName: typeName,\r\n\r\n            // new name for the new UI\r\n            contentType: typeName,\r\n        };\r\n    },\r\n\r\n    // only show to admin-users and in cases where we know the content-type\r\n    showCondition: (context) => {\r\n        return !!context.user.CanAdmin &&\r\n            (!!context.button.command.params.contentType ||\r\n                !!context.contentBlock.contentTypeId);\r\n    },\r\n\r\n    configureLinkGenerator: (context, linkGenerator) => {\r\n        if (context.button.command.params.filters) {\r\n            let enc = JSON.stringify(context.button.command.params.filters);\r\n\r\n            // special case - if it contains a \"+\" character, this won't survive\r\n            // encoding through the hash as it's always replaced with a space, even if it would be pre converted to %2b\r\n            // so we're base64 encoding it - see https://github.com/2sic/2sxc/issues/1061\r\n            if (enc.indexOf('+') > -1) enc = btoa(enc);\r\n            linkGenerator.urlParams.filters = enc;\r\n        }\r\n    },\r\n});\r\n","import { Commands } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdContentType = 'contenttype';\r\n/**\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nCommands.add(CmdContentType, 'ContentType', 'fields', true, false, {\r\n    addParamsToLink: (context) => ({\r\n        // added in 10.27 to help with the new edit ui\r\n        contentType: context.button.command.params.contentType\r\n            || context.contentBlock.contentTypeId,\r\n    }),\r\n\r\n    // only show to admin-users and in cases where we know the content-type\r\n    showCondition: (context) => {\r\n        return !!context.user.CanDevelop &&\r\n            (!!context.button.command.params.contentType ||\r\n                !!context.contentBlock.contentTypeId);\r\n    },\r\n});\r\n","import { Commands } from '../commands';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdCustom = 'custom';\r\nconst ctxName = 'context';\r\nconst evtName = 'event';\r\n\r\nconst errNoCode = \"Trying to run Custom-Code action, but no 'customCode' (v9) or 'call' (v10) found to run - see console for debug info.\";\r\n\r\n/**\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nCommands.add(CmdCustom, 'Custom', 'bomb', true, false, {\r\n    code(context, event) {\r\n        return new Promise((resolve, reject) => {\r\n            const actPar = context.button.command.params;\r\n            // the old V9 name\r\n            let code = actPar.customCode;\r\n            // also try the V10 edition\r\n            if (!code) {\r\n                code = actPar.call;\r\n                if (typeof code === 'string' && code.indexOf(' ') === -1 && code.indexOf('(') === -1)\r\n                    code += `(${ctxName}, ${evtName})`;\r\n            }\r\n            if (!code) {\r\n                console.warn(errNoCode, actPar);\r\n                alert(errNoCode);\r\n                resolve();\r\n            }\r\n            try {\r\n                const fn = new Function(ctxName, evtName, code);\r\n                resolve(fn(context, event));\r\n            } catch (err) {\r\n                console.error('error in custom button-code: ', actPar);\r\n                reject(err);\r\n            }\r\n        });\r\n    },\r\n});\r\n","import { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { translate } from '../i18n';\r\n\r\n/**\r\n * this enhances the $2sxc client controller with stuff only needed when logged in\r\n * @internal\r\n */\r\n\r\n// #region contentItem Commands\r\nexport let contentItems = {\r\n  // delete command - try to really delete a content-item\r\n  delete: (context: ContextComplete, itemId: number, itemGuid: string, itemTitle: string): Promise<void> => {\r\n    // first show main warning / get ok\r\n    const ok = confirm(translate('Delete.Confirm')\r\n      .replace('{id}', String(itemId))\r\n      .replace('{title}', itemTitle));\r\n\r\n    if (!ok) return Promise.resolve();\r\n\r\n    /**\r\n     * ZoneId and AppId are sent becase of rare, special case that is not default\r\n     * (default is that 2sxc is finding ZoneId and AppId on server side from ModuleId)\r\n     * when we need to delete entity from other app or zone, than current one.\r\n     * TODO: send this params, only when is necesary (value change detection for ZoneId, AppId)\r\n     */\r\n    const params = {\r\n      zoneId: context.app.zoneId,\r\n      appId: context.app.id,\r\n    };\r\n\r\n    return context.sxc.webApi.fetchRaw(context.sxc.webApi.url(`app/auto/content/any/${itemGuid}`, params), undefined, 'DELETE')\r\n      .then((response) => {\r\n        if (response.status >= 200 && response.status < 300) {\r\n          location.reload();\r\n        } else if (response.status >= 400 && response.status < 500) {\r\n          // check if it's a permission config problem\r\n          const msgJs = translate('Delete.ErrCheckConsole');\r\n          if (response.status === 401) alert(translate('Delete.ErrPermission') + msgJs);\r\n          if (response.status === 400) alert(translate('Delete.ErrInUse') + msgJs);\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  },\r\n};\r\n\r\n","import { Commands } from '..';\r\nimport { contentItems } from '../../entity-manipulation/item-commands';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdDelete = 'delete';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdDelete, 'Delete', 'cancel', true, false, {\r\n    // disabled: true,\r\n    showCondition(context) {\r\n        const p = context.button.command.params;\r\n        // can never be used for a modulelist item, as it is always in use somewhere\r\n        if (p.useModuleList) return false;\r\n\r\n        // check if all data exists required for deleting\r\n        // before 10.27, it was entityId, entityGuid and entityTitle\r\n        // since 10.27, there will always be a guid (if it has an ID)\r\n        // and enabling it requires an action-modifier \"+delete\",\r\n        // so the automatic detection only applies\r\n        // to the pre-10.27 custom toolbars case\r\n        return (!!p.entityId && !!p.entityGuid && !!p.entityTitle);\r\n    },\r\n\r\n\r\n    code(context) {\r\n        const p = context.button.command.params;\r\n        const title = p.title || p.entityTitle; // prefer new title, and fallback to old for pre 10.27 configs\r\n        return contentItems.delete(context, p.entityId, p.entityGuid, title);\r\n    },\r\n});\r\n","import { Commands } from '..';\r\nimport { $2sxcInPage } from '../../interfaces/sxc-controller-in-page';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdInsightsServer = 'insights-server';\r\n\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdInsightsServer, 'Insights', 'speed', true, false, {\r\n    showCondition: (context) => context.user.CanDevelop,\r\n    code(context, event) {\r\n        return new Promise((resolve, reject) => {\r\n            console.log('context', context);\r\n            const path = $2sxcInPage.http.apiUrl('sys/insights/logs');\r\n            window.open(path, '_blank');\r\n            return resolve();\r\n        });\r\n    },\r\n});\r\n","import { Commands, SharedLogic } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdInstanceList = 'instance-list';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdInstanceList, 'Sort', 'list-numbered', false, true, {\r\n    showCondition: (context) => SharedLogic.isList(context),\r\n\r\n    configureLinkGenerator: (context, linkGenerator) => {\r\n        if (!SharedLogic.isFieldList(context)) return;\r\n\r\n        const params = context.button.command.params;\r\n        linkGenerator.items = [{ Group: {\r\n            Guid: params.parent,\r\n            Part: params.fields,\r\n            Index: params.sortOrder,\r\n            Add: false,\r\n        }}];\r\n    },\r\n});\r\n","import { CmsEngine, CommandNames, Commands } from '..';\r\nimport { SharedLogic } from './shared-logic';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdNew = 'new';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdNewMode = 'new';\r\n\r\n/**\r\n * 'new' is a dialog to add something, and will not add if cancelled\r\n * new can also be used for mini-toolbars which just add an entity not attached to a module\r\n * in that case it's essential to add a contentType like\r\n * <ul class=\"sc-menu\" data-toolbar='{\"action\":\"new\", \"contentType\": \"Category\"}'></ul>\r\n *\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdNew, 'New', 'plus', false, true, {\r\n    addParamsToLink: (_) => ({ mode: CmdNewMode }),\r\n\r\n    dialog: (_) => CommandNames.edit, // don't use \"new\" (default) but use \"edit\"\r\n\r\n    showCondition(context) {\r\n        // don't provide new if type unknown or on the header-item\r\n        return  !!context.button.command.params.contentType || SharedLogic.isList(context);\r\n    },\r\n\r\n    code(context, event) {\r\n        const params = context.button.command.params;\r\n        // todo - should refactor this to be a toolbarManager.contentBlock command\r\n        params.sortOrder = params.sortOrder + 1;\r\n\r\n        // if we have an EntityId, this means that it picked up id/guid from the current item,\r\n        // so we must reset both EntityId and EntityGuid\r\n        // note that we don't reset this if entityId = 0, because that usually means the guid was preset on purpose\r\n        if (params.entityId && params.entityId !== 0) {\r\n            delete params.entityId;\r\n            delete params.entityGuid;\r\n        }\r\n\r\n        // if we have useModuleList AND contentType then something is inconsistent\r\n        // since useModuleList doesn't need to specify the contentType\r\n        // this means that it's a custom new button, and useModuleList is wrong.\r\n        if (params.useModuleList && params.contentType)\r\n            delete params.useModuleList;\r\n\r\n        // done\r\n        return CmsEngine.openDialog(context, event);\r\n    },\r\n});\r\n","import { Command, CommandNames, Commands } from '..';\r\nimport { ItemIdentifierSimple } from '../../interfaces/item-identifiers';\r\nimport { CmdNewMode } from './new';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdMetadata = 'metadata';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdImage = 'image';\r\nconst MetadataDefaultKeyType = 'string';\r\nconst MetadataDefaultTargetType = 10; // cms-item\r\n/**\r\n * create a metadata toolbar\r\n *\r\n * import this module to commands.ts\r\n * @internal\r\n */\r\nexport const MetadataCommand = Command.build(CmdMetadata, 'Metadata', 'tag', false, false, {\r\n\r\n    addParamsToLink: (_) => ({ mode: CmdNewMode }),\r\n\r\n    dialog: (_) => CommandNames.edit, // don't use \"new\" (default) but use \"edit\"\r\n\r\n    // if it doesn't have data yet, make it less strong\r\n    dynamicClasses: (ctx) => ctx.button.command.params.entityId ? '' : 'empty',\r\n\r\n    // only add a metadata-button if it has metadata-infos\r\n    showCondition: (ctx) => !!ctx.button.command.params.metadata,\r\n\r\n    configureLinkGenerator(_, linkGenerator) {\r\n        const itm: Partial<ItemIdentifierSimple> = {\r\n            Metadata: {\r\n                ...{ keyType: MetadataDefaultKeyType, targetType: MetadataDefaultTargetType },\r\n                ...linkGenerator.context.button.command.params.metadata },\r\n        };\r\n        linkGenerator.items[0] = {...linkGenerator.items[0], ...itm };\r\n    },\r\n});\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const ImageMetadataCommand = Command.build(CmdImage, 'Image', 'focus', false, false, {\r\n    addParamsToLink: MetadataCommand.buttonDefaults.addParamsToLink,\r\n    dialog: MetadataCommand.buttonDefaults.dialog,\r\n    classes: 'single-field',\r\n    dynamicClasses: MetadataCommand.buttonDefaults.dynamicClasses,\r\n    showCondition: MetadataCommand.buttonDefaults.showCondition,\r\n    configureLinkGenerator: MetadataCommand.buttonDefaults.configureLinkGenerator,\r\n});\r\n\r\nCommands.addCommand(MetadataCommand);\r\nCommands.addCommand(ImageMetadataCommand);\r\n","import { C } from '../../constants';\r\nimport { IDs } from '../../constants/ids';\r\nimport { Commands } from '../commands';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdMore = 'more';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdMore, 'MoreActions', 'options btn-mode', true, false, {\r\n    code(context, event) {\r\n        return new Promise((resolve, reject) => {\r\n            const btn2 = event.target as HTMLElement;\r\n            const fullMenu2 = btn2.closest(IDs.sel.tagScMenu) as HTMLElement;\r\n            const oldState2 = Number(fullMenu2.getAttribute('data-state') || 0);\r\n            const max2 = Number(fullMenu2.getAttribute('group-count'));\r\n            const newState2 = (oldState2 + 1) % max2;\r\n\r\n            fullMenu2.classList.remove(`group-${oldState2}`);\r\n            fullMenu2.classList.add(`group-${newState2}`);\r\n            fullMenu2.setAttribute('data-state', String(newState2));\r\n\r\n            event.preventDefault();\r\n\r\n            function mouseenterHandler(e: MouseEvent) {\r\n                fullMenu2.style.opacity = '1';\r\n            }\r\n\r\n            function mouseleaveHandler(e: MouseEvent) {\r\n                if (e.screenX !== 0 && e.screenY !== 0) {\r\n                    // hide toolbar on mouseleave\r\n                    fullMenu2.style.opacity = '0';\r\n                } else {\r\n                    // this is fix for Chrome issue\r\n                    // ensure to show toolbar because X=0 and Y=0\r\n                    fullMenu2.style.opacity = '1';\r\n                    console.warn(\r\n                        'workaround for toolbar hide onmouseleave issue',\r\n                        e.screenX,\r\n                        e.screenY,\r\n                        e.target,\r\n                    );\r\n                }\r\n            }\r\n\r\n            // because of issue in Chrome we need to override CSS rules in edit.css for toolbar toggle on mouse hover\r\n            const scElement = fullMenu2.closest(\r\n                '.' + C.Toolbar.classes.oldHover,\r\n            );\r\n            // add mouseenter and mouseleave events to parent sc-element if not already added\r\n            if (scElement && fullMenu2.getAttribute('listener') !== 'true') {\r\n                scElement.addEventListener('mouseenter', mouseenterHandler);\r\n                scElement.addEventListener('mouseleave', mouseleaveHandler);\r\n                fullMenu2.setAttribute('listener', 'true'); // flag that events are added\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    },\r\n});\r\n","import { Commands, SharedLogic } from '..';\r\nimport { Actions } from './content-list-actions';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdMoveDown = 'movedown';\r\n\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdMoveDown, 'MoveDown', 'move-down', false, true, {\r\n    // TODO: do not display if is last item in list\r\n    showCondition: (context) => SharedLogic.isList(context),\r\n    code(context) {\r\n        // TODO: make sure index is never greater than the amount of items\r\n        return Actions.changeOrder(\r\n            context,\r\n            context.button.command.params.sortOrder,\r\n            context.button.command.params.sortOrder + 1,\r\n        );\r\n    },\r\n});\r\n","import { Commands } from '../commands';\r\nimport { Actions } from './content-list-actions';\r\nimport { SharedLogic } from './shared-logic';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdMoveUp = 'moveup';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdMoveUp, 'MoveUp', 'move-up', false, true, {\r\n    showCondition(context) {\r\n        return !!(SharedLogic.isList(context) &&\r\n            context.button.command.params.sortOrder !== 0\r\n        );\r\n    },\r\n    code(context) {\r\n        return Actions.changeOrder(\r\n            context,\r\n            context.button.command.params.sortOrder,\r\n            Math.max(context.button.command.params.sortOrder - 1, 0),\r\n        );\r\n    },\r\n});\r\n","import { Commands } from '..';\r\nimport { translate } from '../../i18n';\r\nimport { Actions } from './content-list-actions';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdPublish = 'publish';\r\n\r\n/**\r\n * todo: shouldn't be available if changes are not allowed\r\n *\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdPublish, 'Unpublished', 'eye-off', false, false, {\r\n    showCondition(context) {\r\n        return context.button.command.params.isPublished === false;\r\n    },\r\n    disabled(context) {\r\n        return !context.instance.allowPublish;\r\n    },\r\n    code(context, event): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            if (context.button.command.params.isPublished) {\r\n                alert(translate('Toolbar.AlreadyPublished'));\r\n                return resolve();\r\n            }\r\n\r\n            // if we have an entity-id, publish based on that\r\n            if (context.button.command.params.entityId) {\r\n                return Actions.publishId(\r\n                    context,\r\n                    context.button.command.params.entityId,\r\n                );\r\n            }\r\n\r\n            const part: string =\r\n                context.button.command.params.sortOrder === -1\r\n                    ? 'listcontent'\r\n                    : 'content';\r\n            const index =\r\n                context.button.command.params.sortOrder === -1\r\n                    ? 0\r\n                    : context.button.command.params.sortOrder;\r\n            return Actions.publish(context, part, index);\r\n        });\r\n    },\r\n});\r\n","import { Commands, SharedLogic } from '..';\r\nimport { translate } from '../../i18n';\r\nimport { Actions } from './content-list-actions';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdRemove = 'remove';\r\n/**\r\n * remove an item from the placeholder (usually for lists)\r\n *\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdRemove, 'Remove', 'minus-circled', false, true, {\r\n    showCondition: (context) => SharedLogic.isList(context),\r\n    code(context) {\r\n        return new Promise((resolve, reject) => {\r\n            if (confirm(translate('Toolbar.ConfirmRemove')))\r\n                return Actions.removeFromList(context);\r\n            return resolve();\r\n        });\r\n    },\r\n});\r\n","import { Commands } from '..';\r\nimport { SharedLogic } from './shared-logic';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdReplace = 'replace';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdReplace, 'Replace', 'replace', false, true, {\r\n\r\n    showCondition(context) {\r\n        return SharedLogic.isReferencedItem(context);\r\n    },\r\n\r\n    configureLinkGenerator: (context, linkGenerator) => {\r\n        // default case is ContentBlock - in which case it doesn't need to redefine the items\r\n        if (!SharedLogic.isFieldList(context)) return;\r\n\r\n        // fieldList - redefine the items\r\n        const params = context.button.command.params;\r\n        linkGenerator.items = [{ Group: {\r\n            Guid: params.parent,\r\n            Part: params.fields,\r\n            Index: params.sortOrder,\r\n            Add: false,\r\n        }}];\r\n    },\r\n});\r\n","import { Commands } from '..';\r\nimport { TemplateIdentifier } from '../../interfaces/item-identifiers';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdTemplateDevelop = 'template-develop';\r\n\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdTemplateDevelop, 'Develop', 'code', true, false, {\r\n  newWindow: (_) => true,\r\n  dialog: (_) => 'develop',\r\n\r\n  showCondition: (context) => !!context.user.CanDevelop,\r\n\r\n  configureLinkGenerator: (context, linkGenerator) => {\r\n    const cb = context.contentBlock;\r\n    const identifier: TemplateIdentifier = { EntityId: cb.templateId };\r\n    if (cb.templatePath) identifier.Path = cb.templatePath;\r\n    if (cb.edition) identifier.Edition = cb.edition;\r\n    linkGenerator.items = [identifier];\r\n  },\r\n\r\n  addParamsToLink: (ctx) => ({ isshared: ctx.contentBlock.TemplateIsShared }),\r\n\r\n});\r\n","import { Commands } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdTemplateQuery = 'template-query';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdTemplateQuery, 'QueryEdit', 'filter', true, false, {\r\n    dialog: (_) => 'pipeline-designer',\r\n\r\n    addParamsToLink: (ctx) => ({ pipelineId: ctx.contentBlock.queryId }),\r\n\r\n    newWindow: (_) => true,\r\n\r\n    disabled: (ctx) => ctx.app.settingsId === null || !ctx.contentBlock.queryId,\r\n\r\n    title: (ctx) => `Toolbar.QueryEdit${ctx.contentBlock.queryId === null ? 'Disabled' : ''}`,\r\n\r\n    showCondition: (ctx) => !!ctx.user.CanDevelop && !ctx.app.isContent,\r\n\r\n    // if it doesn't have a query, make it less strong\r\n    dynamicClasses: (ctx) => ctx.contentBlock.queryId ? '' : 'empty',\r\n});\r\n","import { Commands } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdTemplateSettings = 'template-settings';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdTemplateSettings, 'TemplateSettings', 'sliders', true, false, {\r\n    dialog: (_) => 'edit',\r\n\r\n    showCondition: (ctx) => !!ctx.user.CanDevelop && !ctx.app.isContent,\r\n\r\n    configureLinkGenerator: (ctx, linkGen) => {\r\n        linkGen.items = [{ EntityId: ctx.contentBlock.templateId }];\r\n    },\r\n});\r\n","import { Commands } from '..';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdZone = 'zone';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdZone, 'Zone', 'manage', true, false, {\r\n    showCondition: (context) => {\r\n        return !!context.user.CanAdmin;\r\n    },\r\n});\r\n","/**\r\n * @internal\r\n */\r\nexport const SpecialCommands = {\r\n    /** Special command: 'all' is a catch-all for workflows that should run on every command */\r\n    all: 'all',\r\n\r\n    /** Special Command: 'refresh' is usually run inside other commands after execution */\r\n    refresh: 'refresh',\r\n\r\n};\r\n","import { IQuickDialogConfig } from '../../../connect-parts/inpage-quick-dialog';\r\nimport { ContextComplete } from '../context';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class QuickDialogConfig implements IQuickDialogConfig {\r\n    appId: number;\r\n    /**\r\n     * This will cause the quick-dialog to start in a different mode\r\n     * True means it starts with Content-Type picker and then view\r\n     * False means it starts with App-Picker and then View\r\n     */\r\n    isContent: boolean;\r\n    isInnerContent: boolean;\r\n    hasContent: boolean;\r\n    isList: boolean;\r\n    templateId: number;\r\n    contentTypeId: string;\r\n    // user: ContextOfUser;\r\n    supportsAjax: boolean;\r\n    debug: boolean;\r\n\r\n    static fromContext(context: ContextComplete): QuickDialogConfig {\r\n        const config = new QuickDialogConfig();\r\n        config.appId = context.app.id;\r\n        config.isContent = context.app.isContent;\r\n        config.isInnerContent = context.instance.id !== context.contentBlockReference.id; // if it differs, it's inner\r\n        config.hasContent = context.app.hasContent;\r\n        config.isList = context.contentBlock.isList;\r\n        config.templateId = context.contentBlock.templateId;\r\n        config.contentTypeId = context.contentBlock.contentTypeId;\r\n        // config.user = ContextOfUser.fromContext(context);\r\n        config.supportsAjax = context.app.supportsAjax;\r\n        config.debug = window.$2sxc.debug.load;\r\n        return config;\r\n    }\r\n}\r\n","import { QuickDialogContainer } from '.';\r\nimport { IIFrameBridge } from '../../../connect-parts/inpage-quick-dialog';\r\nimport { IQuickDialogConfig } from '../../../connect-parts/inpage-quick-dialog';\r\nimport { ContentBlockEditor } from '../contentBlock/content-block-editor';\r\nimport { renderer } from '../contentBlock/render';\r\nimport { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { SxcEdit } from '../interfaces/sxc-instance-editable';\r\nimport { HasLog, NoJQ } from '../logging';\r\nimport { TypeUnsafe } from '../plumbing/TypeTbD';\r\nimport { QuickDialog } from './quick-dialog';\r\nimport { QuickDialogConfig } from './quick-dialog-config';\r\n\r\nconst scrollTopOffset: number = 80;\r\nconst animationTime: number = 400;\r\n\r\n/**\r\n * @internal\r\n */\r\n// ReSharper disable once InconsistentNaming\r\nexport class IFrameBridge extends HasLog implements IIFrameBridge {\r\n\r\n    constructor(parent: QuickDialogContainer) {\r\n        super('QDl.IfBrig', parent.log);\r\n    }\r\n\r\n    private sxcCacheKey: string;\r\n    private dialogName: string;\r\n\r\n    /** internal object to keep track of the sxc-instance */\r\n    private instanceSxc: SxcEdit;\r\n\r\n    /** The html-tag of the current module */\r\n    private tagModule: HTMLElement;\r\n\r\n    /**\r\n     * get the sxc-object of this iframe\r\n     */\r\n    private uncachedSxc(): SxcEdit {\r\n        if (!this.instanceSxc) throw \"can't find sxc-instance of IFrame, probably it wasn't initialized yet\";\r\n        return this.instanceSxc.recreate(true) as TypeUnsafe as SxcEdit;\r\n    }\r\n\r\n    getContext(): ContextComplete {\r\n        const cl = this.log.call('getContext');\r\n        return cl.return(ContextComplete.findContext(this.uncachedSxc()));\r\n    }\r\n\r\n    getAdditionalDashboardConfig() {\r\n        const cl = this.log.call('getAdditionalDashboardConfig');\r\n        return cl.return(QuickDialogConfig.fromContext(this.getContext()));\r\n    }\r\n\r\n    hide(): void {\r\n        QuickDialog.singleton().setVisible(false);\r\n    }\r\n\r\n    run(verb: string) {\r\n        this.uncachedSxc().manage.run(verb);\r\n    }\r\n\r\n    cancel(): void { QuickDialog.singleton().cancel(this); }\r\n\r\n    showMessage(message: string) {\r\n        const cl = this.log.call('showMessage');\r\n        renderer.showMessage(this.getContext(), `<p class=\"no-live-preview-available\">${message}</p>`);\r\n        this.scrollToTarget(this.tagModule);\r\n        cl.done();\r\n    }\r\n\r\n    reloadAndReInit(): Promise<IQuickDialogConfig> {\r\n        this.changed = false;\r\n        return renderer.reloadAndReInitialize(this.getContext(), true, true)\r\n            .then(() => this.scrollToTarget(this.tagModule))\r\n            .then(() => Promise.resolve(this.getAdditionalDashboardConfig()));\r\n    }\r\n\r\n    setTemplate(templateId: number, templateName: string, final: boolean): Promise<boolean> {\r\n        const cl = this.log.call('setTemplate', `tid: ${templateId}, tname: ${templateName}, final: ${final}`);\r\n        this.changed = true;\r\n        const config = this.getAdditionalDashboardConfig();\r\n        const context = this.getContext();\r\n        const ajax = config.isContent || config.supportsAjax;\r\n\r\n        // add msg on full-reload, as it takes longer\r\n        // don't add this on ajax, as it will have side-effects because sometimes\r\n        // in ajax the content won't be replaced\r\n        if (!ajax)\r\n            this.showMessage(`refreshing <b>${templateName}</b>...`);\r\n\r\n        const reallySave = final || !ajax;\r\n        let promise = reallySave\r\n            ? ContentBlockEditor.singleton().updateTemplateFromDia(context, templateId)\r\n            : renderer.ajaxLoad(context, templateId, true);\r\n\r\n        if (final)\r\n            promise = promise.then(() => QuickDialog.singleton().setVisible(false));\r\n\r\n        promise = ajax\r\n            ? promise.then(() => this.scrollToTarget(this.tagModule))\r\n            : promise.then(() => window.parent.location.reload());\r\n\r\n        // return true if ajax, so upstream can update UIs\r\n        return cl.return(promise.then(() => ajax));\r\n    }\r\n\r\n    changed = false;\r\n\r\n    /**\r\n     * prepare the bridge with the info of the current instance\r\n     */\r\n    setup(sxc: SxcEdit, dialogName: string): void {\r\n        const cl = this.log.call('setup');\r\n        cl.data('rewire with sxc: ', sxc);\r\n\r\n        this.changed = false;\r\n        this.instanceSxc = sxc;\r\n        this.tagModule = SxcEdit.getTag(sxc).parentElement;\r\n        this.sxcCacheKey = sxc.cacheKey;\r\n        if (dialogName) this.dialogName = dialogName;\r\n        cl.done();\r\n    }\r\n\r\n    /**\r\n     * check if the dialog is showing for the current sxc-instance\r\n     * @param {string} dialogName - name of dialog\r\n     * @returns {boolean} true if it's currently showing for this sxc-instance\r\n     */\r\n    isConfiguredFor(instanceId: string, dialogName: string): boolean {\r\n        const cl = this.log.call('isConfiguredFor', `id:${instanceId}, dialog:${dialogName}`);\r\n        const result = this.sxcCacheKey === instanceId // the iframe is showing for the current sxc\r\n            && this.dialogName === dialogName; // the view is the same as previously\r\n        return cl.return(result);\r\n    }\r\n\r\n    private scrollToTarget(target: HTMLElement): void {\r\n        const cl = this.log.call('scrollToTarget');\r\n        const specs: ScrollToOptions = {\r\n            top: NoJQ.offset(target).top - scrollTopOffset,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        };\r\n        // debugger; // scrolls to wrong location. Target is wrong\r\n        // window.scrollTo(specs);\r\n        cl.done();\r\n    }\r\n}\r\n\r\n\r\n","import { HasLog, Insights } from '../logging';\r\n\r\n/**\r\n * This object helps persist / load / reset\r\n * a setting in the session-state\r\n * @internal\r\n */\r\n\r\n// General notes\r\n// - must always use try-catch because in certain environments like iFrame prohibit access to sessionStorage\r\nexport class SessionStateHandler<T> extends HasLog {\r\n  constructor(private readonly key: string) {\r\n    super('Ses.State');\r\n    Insights.add('system', 'session-state ' + key, this.log);\r\n  }\r\n\r\n  set(value: string): void {\r\n    this.log.add(`state '${this.key}' set(${value})`);\r\n    try {\r\n      sessionStorage.setItem(this.key, value);\r\n    } catch { /* ignore */ }\r\n  }\r\n\r\n  remove(): void {\r\n    this.log.add(`state '${this.key}' remove()`);\r\n    try {\r\n      sessionStorage.removeItem(this.key);\r\n    } catch { /* ignore */ }\r\n  }\r\n\r\n  get(): T {\r\n    const result = getItemValue<T>(this.key);\r\n    this.log.add(`state '${this.key}' get() = '${result}'`);\r\n    try {\r\n      return result;\r\n    } catch { /* ignore */ }\r\n  }\r\n}\r\n\r\n\r\nfunction getItemValue<T>(key: string): T {\r\n  try {\r\n    const value = sessionStorage.getItem(key);\r\n    return JSON.parse(value) as T;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n","import { SessionStateHandler } from '../manage/session-state-handler';\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nexport let cbId = new SessionStateHandler<number>('dia-cbid');\r\n\r\n/**\r\n * @internal\r\n */\r\nexport let cancelled = new SessionStateHandler<boolean>('cancelled-dialog');\r\n","\r\nexport * from '../../../connect-parts/inpage-quick-dialog';\r\nexport * from './iframe-bridge';\r\nexport * from './quick-dialog';\r\nexport * from './quick-dialog-config';\r\nexport * from './quick-dialog-container';\r\nexport * from './state';\r\n\r\nconst css = require('./quick-dialog.css');","import { IDialogFrameElement, IFrameBridge } from '.';\r\nimport { HasLog, NoJQ } from '../logging/';\r\nimport { QuickDialog } from './quick-dialog';\r\n\r\n/**\r\n * this is a dialog manager which is in charge of all quick-dialoges\r\n * it always has a reference to the latest dialog created by a.ny module instance\r\n * @internal\r\n */\r\n\r\nconst containerClass = 'inpage-frame-wrapper';\r\nconst iframeClass = 'inpage-frame';\r\nconst iframeTag = 'iframe';\r\nconst containerTemplate = `<div class=\"${containerClass}\"><div class=\"${iframeClass}\"></div></div>`;\r\nconst resizeInterval = 200;\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class QuickDialogContainer extends HasLog {\r\n\r\n    constructor(quickDialog: QuickDialog) {\r\n        super('QDl.Contnr', quickDialog.log);\r\n    }\r\n\r\n    private isFullscreen: boolean = false;\r\n    private resizeWatcher: number = null;\r\n    /**\r\n     * get the current container\r\n     * @returns {element} html element of the div\r\n     */\r\n    getOrCreate(): HTMLElement {\r\n        const container = document.querySelector<HTMLElement>(`.${containerClass}`);\r\n        return container ?? this.buildContainerAndIFrame();\r\n    }\r\n\r\n    /**\r\n     * build the container in the dom w/iframe for re-use\r\n     * @return {HTMLElement} dom-object\r\n     */\r\n    private buildContainerAndIFrame(): HTMLElement {\r\n        const callLog = this.log.call('buildContainerAndIFrame');\r\n        const container = NoJQ.domFromString(containerTemplate)[0];\r\n        if (document.querySelectorAll<HTMLElement>('#personaBar-iframe').length > 0)\r\n            container.classList.add('persona-bar-visible');\r\n        const newIFrame = document.createElement(iframeTag);\r\n        const extendedIFrame = convertIFrameToQuickDialog(newIFrame, this);\r\n        container.querySelector<HTMLElement>(`.${iframeClass}`).append(extendedIFrame);\r\n        document.body.append(container);\r\n        this.watchForResize(container);\r\n        return callLog.return(container, 'ok');\r\n    }\r\n\r\n    /**\r\n     * find the iframe which hosts the dialog\r\n     * @param {html} [container] - html-container\r\n     * @returns {html} iframe object\r\n     */\r\n    getIFrame(container?: HTMLElement): IDialogFrameElement {\r\n        if (!container) container = this.getOrCreate();\r\n        return container.querySelector<IDialogFrameElement>(iframeTag);\r\n    }\r\n\r\n    /**\r\n     * set container css for size\r\n     * @param {boolean} fullScreen\r\n     */\r\n    setSize(fullScreen: boolean): void {\r\n        const cl = this.log.call('setSize');\r\n        const container = this.getOrCreate();\r\n        // set container height\r\n        container.style.minHeight = fullScreen ? '100%' : '225px';\r\n        this.isFullscreen = fullScreen;\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * create watcher which monitors the iframe size and adjusts the container as needed\r\n     */\r\n    private watchForResize(container: HTMLElement): void {\r\n        // only add a timer if not already running\r\n        if (this.resizeWatcher) return;\r\n        const callLog = this.log.call('watchForResize');\r\n        // if (!resizeWatcher)\r\n        this.resizeWatcher = window.setInterval(() => {\r\n            try {\r\n                const frm = this.getIFrame(container);\r\n                if (!frm) {\r\n                    callLog.onlyAddIfNew('no iframe');\r\n                    return;\r\n                }\r\n\r\n                const height: number = frm.contentDocument.body.offsetHeight;\r\n                if (frm.previousHeight === height) {\r\n                    callLog.onlyAddIfNew('no height change');\r\n                    return;\r\n                }\r\n                frm.style.minHeight = container.style.minHeight;\r\n                frm.style.height = height + 'px';\r\n                frm.previousHeight = height;\r\n                if (this.isFullscreen) {\r\n                    frm.style.height = '100%';\r\n                    frm.style.position = 'absolute';\r\n                }\r\n                callLog.onlyAddIfNew('changed to ' + height);\r\n            } catch (e) {\r\n                callLog.add('error', e);\r\n            }\r\n        }, resizeInterval);\r\n        callLog.return(null, 'watcher added');\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction convertIFrameToQuickDialog(iFrame: HTMLIFrameElement, parent: QuickDialogContainer): IDialogFrameElement {\r\n    const callLog = parent.log.call('build');\r\n    callLog.data('prototype', IFrameBridge.prototype);\r\n    const iFrameExtended = iFrame as IDialogFrameElement;\r\n    iFrameExtended.bridge = new IFrameBridge(parent);\r\n    callLog.data('extensions', iFrameExtended.bridge);\r\n    return callLog.return(iFrameExtended);\r\n}\r\n","import { IDialogFrameElement, IIFrameBridge } from '.';\r\nimport { C } from '../constants';\r\nimport { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { $2sxcInPage } from '../interfaces/sxc-controller-in-page';\r\nimport { HasLog, Insights } from '../logging';\r\nimport { IFrameBridge } from './iframe-bridge';\r\nimport { QuickDialogContainer } from './quick-dialog-container';\r\nimport * as QuickEditState from './state';\r\n\r\nconst diagShowClass: string = 'dia-select';\r\n\r\n/** dialog manager - the currently active dialog object */\r\nlet current: IDialogFrameElement = null;\r\n\r\ninterface IFrameWindow extends Window {\r\n    reboot(): void;\r\n}\r\n\r\n/**\r\n * this is a dialog manager which is in charge of all quick-dialogues\r\n * it always has a reference to the latest dialog created by a.ny module instance\r\n * @internal\r\n */\r\nexport class QuickDialog extends HasLog {\r\n\r\n    /** Singleton */\r\n    public static singleton(): QuickDialog {\r\n        return this._singleton ?? (this._singleton = new QuickDialog());\r\n    }\r\n    private static _singleton: QuickDialog;\r\n\r\n\r\n    private container: QuickDialogContainer;\r\n    private constructor() {\r\n        super('Qdl.Managr');\r\n        Insights.add('quick-dialog', 'manager', this.log);\r\n        this.container = new QuickDialogContainer(this);\r\n    }\r\n\r\n    /**\r\n     * Determines if a.ny dialog is currently showing\r\n     */\r\n    isVisible() {\r\n        return current != null;\r\n    }\r\n\r\n    /**\r\n     * toggle visibility\r\n     * @param {boolean} [show] true/false optional\r\n     */\r\n    setVisible(show: boolean): void {\r\n        const cl = this.log.call('setVisible');\r\n        const cont = this.container.getOrCreate();\r\n        cont.classList.toggle(diagShowClass, show);\r\n        this.rememberDialogState(this.container.getIFrame(cont), show);\r\n        current = show ? this.container.getIFrame() : null;\r\n        cl.done();\r\n    }\r\n\r\n    /**\r\n     * show / reset the current iframe to use new url and callback\r\n     * @param {ContextComplete} context object\r\n     * @param {string} url - url to show\r\n     * @param {function()} closeCallback - callback event\r\n     * @param {boolean} isFullscreen - if it should open full screen\r\n     * @param {string} [dialogName] - optional name of dialog, to check if it's already open\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    showOrToggleFromToolbar(\r\n        context: ContextComplete,\r\n        url: string,\r\n        isFullscreen: boolean,\r\n        dialogName: string,\r\n    ): Promise<boolean> {\r\n        const cl = this.log.call('showOrToggleFromToolbar', `ctx, url: '${url}', isFullScreen:${isFullscreen}, name:'${dialogName}'`);\r\n        this.container.setSize(isFullscreen);\r\n        const iFrame = this.container.getIFrame();\r\n\r\n        // in case it's a toggle\r\n        if (this.isVisible()) {\r\n            cl.add('is already visible');\r\n            // check if we're just toggling the current, or will show a new one afterwards\r\n            const isForSame = dialogName && current\r\n                && (current.bridge as IFrameBridge).isConfiguredFor(context.sxc.cacheKey, dialogName);\r\n            const togglePromise = isForSame ? this.promise : null;\r\n            this.cancel(current.bridge);\r\n            // just a hide this, return the old promise\r\n            if (togglePromise) return cl.return(togglePromise, 'just toggle off');\r\n        }\r\n\r\n        const dialogUrl = this.setUrlToQuickDialog(url);\r\n        (iFrame.bridge as IFrameBridge).setup(context.sxc, dialogName);\r\n        iFrame.setAttribute('src', dialogUrl);\r\n        // if the window had already been loaded, re-init\r\n        if (iFrame.contentWindow && (iFrame.contentWindow as IFrameWindow).reboot)\r\n            (iFrame.contentWindow as IFrameWindow).reboot();\r\n\r\n        // make sure it's visible'\r\n        this.setVisible(true);\r\n        return cl.return(this.promiseRestart(), 'restart');\r\n    }\r\n\r\n    cancel(bridge: IIFrameBridge) {\r\n        const callLog = this.log.call('cancel');\r\n        this.setVisible(false);\r\n        QuickEditState.cancelled.set('true');\r\n        this.resolvePromise(bridge.changed);\r\n        callLog.done();\r\n    }\r\n\r\n    private rememberDialogState(\r\n        iframe: IDialogFrameElement,\r\n        state: boolean,\r\n    ): void {\r\n        const callLog = this.log.call('rememberDialogState');\r\n        callLog.add(`qDialog persistDia(..., ${state})`);\r\n        if (state) {\r\n            const cbId = (iframe.bridge as IFrameBridge)\r\n                .getContext()\r\n                .contentBlockReference.id.toString();\r\n            callLog.add(`contentBlockId: ${cbId})`);\r\n            return callLog.return(QuickEditState.cbId.set(cbId));\r\n        }\r\n        return callLog.return(QuickEditState.cbId.remove(), 'remove');\r\n    }\r\n\r\n    //#region promise handling\r\n    private promise: Promise<boolean>;\r\n    private resolvePromise: (value?: boolean) => void;\r\n    private promiseRestart(): Promise<boolean> {\r\n        this.promise = new Promise<boolean>(\r\n            (resolve) => (this.resolvePromise = resolve),\r\n        );\r\n        return this.promise;\r\n    }\r\n    //#endregion\r\n\r\n    /**\r\n     * rewrite the url to fit the quick-dialog situation\r\n     * optionally with a live-compiled version from ng-serve\r\n     * @param {string} url - original url pointing to the default dialog\r\n     * @returns {string} new url pointing to quick dialog\r\n     */\r\n    private setUrlToQuickDialog(url: string): string {\r\n        const cl = this.log.call('setUrlToQuickDialog', url);\r\n        // change default url-schema from the primary angular-app to the quick-dialog\r\n        url = url\r\n            .replace(C.DialogPaths.ng8, C.DialogPaths.quickDialog);\r\n        url = this.changePathToLocalhostForDev(url);\r\n        return cl.return(url);\r\n    }\r\n\r\n\r\n    /**\r\n     * special debug-code when running on local ng-serve\r\n     * this is only activated if the developer manually sets a value in the localStorage\r\n     * @param url\r\n     */\r\n    private changePathToLocalhostForDev(url: string): string {\r\n        const cl = this.log.call('changePathToLocalhostForDev', url);\r\n        try {\r\n            const devMode = localStorage.getItem('devMode');\r\n            if (devMode && !!devMode)\r\n                return url.replace($2sxcInPage.env.uiRoot() + 'dist/ng/ui.html', 'http://localhost:4200');\r\n        } catch (e) {\r\n            // ignore\r\n        }\r\n        return cl.return(url);\r\n    }\r\n}\r\n","import { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { $2sxcInPage as $2sxc } from '../interfaces/sxc-controller-in-page';\r\n/**\r\n * This is for building/serializing the main url params when opening a dialog.\r\n * It does not contain the \"params\" / \"items\" part\r\n * @export\r\n * @class NgUrlValuesWithoutParams\r\n * @internal\r\n */\r\nexport class NgUrlValuesWithoutParams {\r\n  readonly zoneId: number;\r\n  readonly appId: number;\r\n  readonly tid: number;\r\n  readonly mid: number;\r\n  readonly cbid: number;\r\n\r\n  // 2021-01-19\r\n  // readonly lang: string;\r\n  // readonly langpri: string;\r\n  // readonly langs: string;\r\n  // 2020-11-28 #cleanup11.11 2dm - not used, disabled - keep till Jan 2021, then remove from backend-json and drop these comments\r\n  // readonly portalroot: string;\r\n  // 2020-12-11 #cleanup11.11 2dm - doesn't seem used, disabled\r\n  // readonly websiteroot: string;\r\n  readonly partOfPage?: boolean;\r\n  readonly publishing?: string;\r\n  // 2021-01-19\r\n  // readonly user: ContextOfUser;\r\n  readonly approot: string | null;\r\n\r\n  /** The api root for all 2sxc API calls - will vary by platform */\r\n  readonly api: string;\r\n\r\n  /** The root path to the UIs (scripts, css etc.) */\r\n  // 2021-01-19\r\n  // readonly uiRoot: string;\r\n\r\n  /** new in 10.27 */\r\n  readonly apps?: string;\r\n\r\n  /** features of App - this is to tell the UI it can show advanced features of an app like permissions, API, REST etc. */\r\n  readonly fa: boolean;\r\n\r\n  /** request verification token header name */\r\n  readonly rvth: string;\r\n\r\n  /** request verification token value */\r\n  readonly rvt: string;\r\n\r\n  constructor(context: ContextComplete, partOfPage: boolean) {\r\n\r\n    // console.log('2dm - context', context);\r\n    // #CustomContext\r\n    const ctx = context.sxc?.ctx;\r\n    const ctxAny = ctx as any;\r\n    if (ctxAny?.complete === true) {\r\n        this.zoneId = ctx.zoneId;\r\n        this.appId = ctx.appId;\r\n        if (ctx.pageId != null) this.tid = ctx.pageId;\r\n        if (ctx.moduleId != null) this.mid = ctx.moduleId;\r\n        const cbid = ctxAny?.blockId ?? this.mid;\r\n        if (cbid != null && cbid !== '') this.cbid = cbid;\r\n    } else {\r\n        this.zoneId = ctx?.zoneId ?? context.app.zoneId;\r\n        this.appId = ctx?.appId ?? context.app.id;\r\n        this.tid = ctx?.pageId ?? context.page.id;\r\n        this.mid = ctx?.moduleId ?? context.instance.id;\r\n        this.cbid = ctxAny?.blockId ?? context.contentBlockReference.id;\r\n    }\r\n\r\n    this.api = $2sxc.env.api();\r\n\r\n    this.partOfPage = partOfPage;\r\n    if (partOfPage) this.publishing = context.contentBlockReference.publishingMode;\r\n    // todo= probably move the user into the dashboard info\r\n    // 2021-01-19 2dm - should now not be used any more\r\n    // this.user = ContextOfUser.fromContext(context);\r\n    // TODO: #paramCleanUp - approot is probably not used anymore. verify and remove\r\n    this.approot = context.app.appPath || null; // this is the only value which doesn't have a slash by default. note that the app-root doesn't exist when opening \"manage-app\"\r\n    if (context?.button?.command?.params?.apps)\r\n        this.apps = context.button.command.params.apps;\r\n    // TODO: #paramCleanUp - fa is probably not used anymore. verify and remove\r\n    this.fa = !context.app.isContent;\r\n    this.rvth = $2sxc.env.rvtHeader();\r\n    this.rvt = $2sxc.env.rvt();\r\n  }\r\n}\r\n","import { C } from '../constants';\r\nimport { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { ItemIdentifierGroup, ItemIdentifierSimple, ItemInField, TemplateIdentifier } from '../interfaces/item-identifiers';\r\nimport { $2sxcInPage } from '../interfaces/sxc-controller-in-page';\r\nimport { HasLog, Log } from '../logging';\r\nimport { NgUrlValuesWithoutParams } from '../manage/ng-dialog-params';\r\nimport { DictionaryValue, NoJQ, TypeUnsafe, urlClean } from '../plumbing';\r\nimport { ButtonSafe } from '../toolbar/config';\r\n\r\n/**\r\n * This is responsible for taking a context with command and everything\r\n * then building the link for opening the correct dialogs\r\n * @internal\r\n */\r\nexport class CommandLinkGenerator extends HasLog {\r\n    public items: Array<ItemIdentifierSimple | ItemIdentifierGroup | TemplateIdentifier>;\r\n    public readonly urlParams: UrlItemParams;\r\n    private readonly rootUrl: string;\r\n    private readonly debugUrlParam: string;\r\n\r\n    constructor(public readonly context: ContextComplete, parentLog: Log) {\r\n        super('Cmd.LnkGen', parentLog);\r\n        const cl = this.log.call('constructor');\r\n        const button = new ButtonSafe(context.button, context);\r\n        const command = button.action();\r\n        // Initialize Items - use predefined or create empty array\r\n        this.items = command.params.items || [];\r\n        cl.data('items', this.items);\r\n\r\n        // initialize params\r\n        this.urlParams = button.addParamsToLink() as unknown;\r\n        const dialog = button.dialog();\r\n        // note: this corrects how the variable to name the dialog changed in the history of 2sxc from action to dialog\r\n        this.urlParams = { ...{ dialog: dialog || command.name }, ...this.urlParams };\r\n        cl.data('urlParmas', this.urlParams);\r\n\r\n        // initialize root url to dialog\r\n        this.rootUrl = this.getDialogUrl();\r\n\r\n        // get isDebug url Parameter\r\n        this.debugUrlParam = window.$2sxc.urlParams.get('debug') ? '&debug=true' : '';\r\n\r\n        this.buildItemsList(button);\r\n\r\n        // if the command has own configuration stuff, do that now\r\n        if (context.button.configureLinkGenerator)\r\n            context.button.configureLinkGenerator(context, this);\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * Generate items for editing/changing or simple item depending on the scenario.\r\n     */\r\n    private buildItemsList(button: ButtonSafe) {\r\n        if (button.action().params.useModuleList)\r\n            this.addContentGroupItems(true);\r\n        else if (button.action().params.parent)\r\n            this.addItemInList();\r\n        else\r\n            this.addItem();\r\n    }\r\n\r\n    /**\r\n     * build the link, combining specific params with global ones and put all in the url\r\n     */\r\n    getLink() {\r\n        const context = this.context;\r\n        const button = new ButtonSafe(context.button, context);\r\n        const params = button.action().params;\r\n        const urlItems = this.urlParams as unknown as UrlItemParams;\r\n\r\n        // steps for all actions: prefill, serialize, open-dialog\r\n        // when doing new, there may be a prefill in the link to initialize the new item\r\n        if (params.prefill)\r\n            for (let i = 0; i < this.items.length; i++)\r\n                this.items[i].Prefill = params.prefill;\r\n\r\n        delete urlItems.prefill; // added 2020-03-11, seemed strange that it's not removed\r\n        urlItems.items = JSON.stringify(this.items); // Serialize/json-ify the complex items-list\r\n\r\n        // clone the params and adjust parts based on partOfPage settings...\r\n        const partOfPage = button.partOfPage();\r\n        const ngDialogParams = new NgUrlValuesWithoutParams(context, partOfPage);\r\n\r\n        return `${this.rootUrl}#${NoJQ.param(ngDialogParams).replace(/%2F/g, '/')}&${NoJQ.param(urlItems)}${this.debugUrlParam}`;\r\n    }\r\n\r\n    /**\r\n     * Determine the url to open a dialog, based on the settings which UI version to use\r\n     */\r\n    private getDialogUrl(): string {\r\n        const context = this.context;\r\n        return urlClean(`${$2sxcInPage.env.uiRoot()}${C.DialogPaths.ng8}`) + `?sxcver=${context.instance.sxcVersion}`;\r\n    }\r\n\r\n    private addItem() {\r\n        const item = {} as ItemIdentifierSimple;\r\n        const params = this.context.button.command.params;\r\n\r\n        // two ways to name the content-type-name this, v 7.2+ and older\r\n        const ct = params.contentType || (params as TypeUnsafe).attributeSetName;\r\n        if (params.entityId) item.EntityId = params.entityId;\r\n        if (ct) item.ContentTypeName = ct;\r\n\r\n        // v12.11 - also support cases where the template includes an edition\r\n        // 2022-05-18 2dm - disable this, seems like old incomplete code\r\n        // if (params )\r\n\r\n        // only add if there was stuff to add\r\n        if (item.EntityId || item.ContentTypeName) {\r\n            console.warn('used the simple item header - test if dialog still works!');\r\n            this.items.push(item);\r\n            // 2022-05-18 2dm - disable this, seems like old code, title shouldn't be used any more\r\n            // this.items.push({ ...item, Title: translate(this.findTranslationKey(this.findPartName(true))) });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * this will tell the command to edit a item from the sorted list in the group,\r\n     * optionally together with the presentation item\r\n     */\r\n    private addContentGroupItems(withPresentation: boolean) {\r\n        const cl = this.log.call('addContentGroupItems', `${withPresentation}`);\r\n        const params = this.context.button.command.params;\r\n        const isContentAndNotHeader = (params.sortOrder !== -1);\r\n        const index = isContentAndNotHeader ? params.sortOrder : 0;\r\n        const isAdd = this.context.button.command.name === 'new';\r\n        const groupId = this.context.contentBlock.contentGroupId;\r\n\r\n        const fields: string[] = [this.findPartName(true)];\r\n        if (withPresentation) fields.push(this.findPartName(false));\r\n        fields.map((f) => this.addContentGroupItem(groupId, index, f, isAdd));\r\n        cl.done();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * this adds an item of the content-group, based on the group GUID and the sequence number\r\n     */\r\n    private addContentGroupItem(guid: string, index: number, part: string, isAdd: boolean) {\r\n        const cl = this.log.call('addContentGroupItem', `${guid}, ${index}, ${part}, ${isAdd}`);\r\n        this.items.push({\r\n            Group: {\r\n                Guid: guid,\r\n                Index: index,\r\n                Part: part.toLocaleLowerCase(),\r\n                Add: isAdd,\r\n            }\r\n        });\r\n        cl.done();\r\n    }\r\n\r\n\r\n    /**\r\n     * EXPERIMENTAL in 10.27, if a parent is specified, use that\r\n     * this will tell the command to edit a item which also belongs to a list\r\n     * this is relevant when adding new items\r\n     */\r\n    private addItemInList() {\r\n        const params = this.context.button.command.params;\r\n        const index = params.sortOrder;\r\n        const isAdd = this.context.button.command.name === 'new';\r\n        const groupId = params.parent;\r\n\r\n\r\n        // New in 10.27 - if params has a field, use that\r\n        if (params.fields)\r\n            params.fields.split(',').map((f) => this.items.push({\r\n                EntityId: isAdd ? 0 : params.entityId,\r\n                Field: f,\r\n                Parent: groupId,\r\n                Add: isAdd,\r\n                Index: index,\r\n            } as ItemInField));\r\n    }\r\n\r\n    /**\r\n     * find the part name for both the API to give the right item (when using groups) and for i18n\r\n     */\r\n    private findPartName(content: boolean): string {\r\n        const isContentAndNotHeader = (this.context.button.command.params.sortOrder !== -1);\r\n        return (isContentAndNotHeader ? '' : 'List') + (content ? 'Content' : 'Presentation');\r\n    }\r\n\r\n    // 2022-05-18 2dm unused now\r\n    // /**\r\n    //  * find the correct i18n key for this part\r\n    //  */\r\n    // private findTranslationKey(partName: string): string {\r\n    //     return `EditFormTitle.${partName}`;\r\n    // }\r\n\r\n}\r\n\r\ninterface UrlItemParams {\r\n    prefill?: DictionaryValue;\r\n    items?: string;\r\n    contentTypeName?: string;\r\n    filters?: string;\r\n}\r\n","import { CommandParams, Commands } from '..';\r\nimport { HasLog, Log } from '../../logging';\r\n\r\n/**\r\n * Helper class to process parameters given to the Cms.Run statement\r\n * Important because certain params may sometimes be full objects, and sometimes just a name.\r\n * In addition, even if we have more than the name, we must ensure that defaults are also included\r\n *\r\n * @export\r\n * @class RunParameters\r\n * @internal\r\n */\r\nexport class RunParametersHelper extends HasLog {\r\n    constructor(parentLog?: Log) {\r\n        super('Cmd.RunPrm', parentLog, 'start');\r\n    }\r\n\r\n    /**\r\n     * name or settings adapter to settings\r\n     * @param nameOrSettings\r\n     * @returns settings\r\n     */\r\n    public getParamsFromNameOrParams(nameOrSettings: string | CommandParams): CommandParams {\r\n        const cl = this.log.call('getParamsFromNameOrParams', `${nameOrSettings}`);\r\n        // check if nameOrString is name (string) or object (settings)\r\n        const nameIsString = typeof nameOrSettings === 'string';\r\n        cl.add(`adapting settings; name string: ${nameIsString}; name = ${nameOrSettings}`);\r\n        const result = (nameIsString\r\n            ? { action: nameOrSettings }\r\n            : nameOrSettings) as CommandParams;\r\n        return cl.return(result);\r\n    }\r\n\r\n    /**\r\n     * Take a settings-name or partial settings object,\r\n     * and return a full settings object with all defaults from\r\n     * the command definition\r\n     * @param params\r\n     */\r\n    public expandParamsWithDefaults(params: CommandParams): CommandParams {\r\n        const cl = this.log.call('expandParamsWithDefaults');\r\n        const name = params.action;\r\n        cl.add(`will add defaults for ${name} from buttonConfig`);\r\n        const defaults = Commands.singleton().get(name).buttonDefaults;\r\n        cl.data('defaults to merge', defaults);\r\n        // TODO: 2dm - suspicious cast\r\n        // merge conf & settings, but...?\r\n        return cl.return({...defaults, ...params} as CommandParams);\r\n    }\r\n\r\n}\r\n","import { ContentBlockEditor } from '../../contentBlock/content-block-editor';\r\nimport { renderer } from '../../contentBlock/render';\r\nimport { ContextComplete } from '../../context/bundles/context-bundle-button';\r\nimport { ContextBundleInstance } from '../../context/bundles/context-bundle-instance';\r\nimport { $2sxcInPage as $2sxc } from '../../interfaces/sxc-controller-in-page';\r\nimport { HasLog, Insights, Log } from '../../logging';\r\nimport { QuickDialog } from '../../quick-dialog/quick-dialog';\r\nimport { Button, ButtonSafe } from '../../toolbar/config';\r\nimport { ButtonCommand } from '../../toolbar/config';\r\nimport { InPageButtonJson } from '../../toolbar/config-loaders/config-formats/in-page-button';\r\nimport { WorkflowArguments, WorkflowHelper, WorkflowPhases } from '../../workflow';\r\nimport { WorkflowManager } from '../../workflow/workflow-manager';\r\nimport { CommandLinkGenerator } from '../command-link-generator';\r\nimport { CommandParams } from '../command-params';\r\nimport { RunParametersHelper } from './run-parameters';\r\nimport { RunParams } from './run-params';\r\n\r\ntype CommandPromise<T> = Promise<T|void>;\r\n\r\n/**\r\n * The CMS engine is global, and needs the context to work.\r\n * @internal\r\n */\r\nexport class CmsEngine extends HasLog {\r\n\r\n    private runParamsHelper: RunParametersHelper;\r\n\r\n    constructor(parentLog?: Log) {\r\n        super('Cmd.Exec', parentLog, 'start');\r\n        this.runParamsHelper = new RunParametersHelper(this.log);\r\n    }\r\n\r\n    detectParamsAndRun<T>(\r\n        context: ContextBundleInstance,\r\n        nameOrParams: string | CommandParams,\r\n        eventOrParams: CommandParams | MouseEvent,\r\n        event?: MouseEvent,\r\n    ): Promise<void | T> {\r\n        const cl = this.log.call('detectParamsAndRun', `${arguments.length} params`);\r\n        let cmdParams: CommandParams;\r\n\r\n        const thirdParamIsEvent = !event && eventOrParams && typeof (eventOrParams as MouseEvent).altKey !== 'undefined';\r\n        cl.add(`might cycle parameters. third is event=${thirdParamIsEvent}`);\r\n\r\n        if (thirdParamIsEvent) {\r\n            // no event param, but settings contains the event-object\r\n            cl.add('cycling params; event missing & eventOrSettings seems to be an event; settings assumed empty');\r\n            event = eventOrParams as MouseEvent; // move it to the correct variable\r\n            cmdParams = this.runParamsHelper.getParamsFromNameOrParams(nameOrParams);\r\n        } else {\r\n            cmdParams = {\r\n                ...(eventOrParams || {}),\r\n                ...this.runParamsHelper.getParamsFromNameOrParams(nameOrParams),\r\n            };\r\n        }\r\n\r\n        // ensure we have the right event despite browser differences\r\n        event = event || (window.event as MouseEvent);\r\n\r\n        const result: CommandPromise<T> = this.run(context as ContextComplete, cmdParams, event);\r\n        return cl.return(result);\r\n    }\r\n\r\n    /**\r\n     * run a command\r\n     * this method expects a clear order of parameters\r\n     * @param context\r\n     * @param settings\r\n     * @param event\r\n     */\r\n    run<T>(context: ContextComplete, nameOrParams: string | CommandParams, event: MouseEvent, wipParamsWithWorkflow?: RunParams): CommandPromise<T> {\r\n        const cl = this.log.call('run<T>');\r\n        let cmdParams = this.runParamsHelper.getParamsFromNameOrParams(nameOrParams);\r\n        cmdParams = this.runParamsHelper.expandParamsWithDefaults(cmdParams);\r\n\r\n        const origEvent = event;\r\n        const name = cmdParams.action;\r\n        const contentType = cmdParams.contentType;\r\n        cl.add(`run command '${name}' for type ${contentType}`);\r\n\r\n        // Toolbar API v2\r\n        const command = new ButtonCommand(name, contentType, cmdParams);\r\n        const newButtonConfig = new Button(command, command.name);\r\n\r\n        // merge conf & settings, but settings has higher priority\r\n        const button: Button = {\r\n            ...newButtonConfig,\r\n            ...InPageButtonJson.toButton(cmdParams as unknown),\r\n        };\r\n\r\n        // attach to context for inner calls which might access it\r\n        context.button = button;\r\n        cl.data('button', context.button);\r\n\r\n        // New in 11.12 - find commandWorkflow of toolbar or use a dummy so the remaining code will always work\r\n        // note: in cases where the click comes from elsewhere (like from the quick-dialog) there is no event\r\n\r\n        // New in 12.10 - Workflow can be provided by run-call\r\n        let wf: WorkflowManager;\r\n        if (wipParamsWithWorkflow?.workflows) {\r\n            wf = new WorkflowManager(this.log);\r\n            wf.add(wipParamsWithWorkflow.workflows);\r\n        } else\r\n            wf = WorkflowHelper.getWorkflow(origEvent?.target as HTMLElement);\r\n\r\n        // Attach to context, so it's available after running the command\r\n        context.commandWorkflow = wf;\r\n        const wrapperPromise = wf.run(new WorkflowArguments(name, WorkflowPhases.before, context));\r\n\r\n        // In case we don't have special code, use generic code\r\n        let commandPromise = button.code;\r\n        if (!commandPromise) {\r\n            cl.add('button, no code - generating code to open standard dialog');\r\n            commandPromise = CmsEngine.openDialog;\r\n        }\r\n\r\n        // get button configuration to detect if it's only a UI action (like the more-button)\r\n        let finalPromise: CommandPromise<T>;\r\n        if (new ButtonSafe(button, context).uiActionOnly()) {\r\n            cl.add('UI command, no pre-flight to ensure content-block');\r\n            finalPromise = wrapperPromise.then((wfArgs) => WorkflowHelper.isCancelled(wfArgs)\r\n                ? Promise.resolve<T>(null)\r\n                : commandPromise(context, origEvent));\r\n        } else {\r\n            // if more than just a UI-action, then it needs to be sure the content-group is created first\r\n            cl.add('command might change data, wrap in pre-flight to ensure content-block');\r\n            finalPromise = wrapperPromise.then(\r\n                (wfArgs) => WorkflowHelper.isCancelled(wfArgs)\r\n                    ? Promise.resolve<T>(null)\r\n                    : ContentBlockEditor.singleton()\r\n                        .prepareToAddContent(context, cmdParams.useModuleList)\r\n                        .then(() => commandPromise(context, origEvent)));\r\n        }\r\n\r\n        // Attach post-command workflow\r\n        const promiseWithAfterEffects = finalPromise.then((result) => {\r\n            return wf.run(new WorkflowArguments(name, WorkflowPhases.after, null, result))\r\n                .then(() => result);\r\n        });\r\n\r\n        return cl.return(promiseWithAfterEffects);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Open a new dialog of the angular-ui\r\n     */\r\n    static openDialog<T>(context: ContextComplete, event: MouseEvent): CommandPromise<T> {\r\n        const log = new Log('Cms.OpnDlg');\r\n        Insights.add('cms', 'open-dialog', log);\r\n        // the link contains everything to open a full dialog (lots of params added)\r\n        const link = new CommandLinkGenerator(context, log).getLink();\r\n        const btn = new ButtonSafe(context.button, context);\r\n\r\n        const origEvent = event || (window.event as MouseEvent);\r\n\r\n        return new Promise<T>((resolve) => {\r\n            // prepare promise for callback when the dialog closes\r\n            // to reload the in-page view w/ajax or page reload\r\n            const completePromise = () => {\r\n                // call the normal promise-resolve so the `.then` will be continued\r\n                resolve(context as unknown as T);\r\n                // reload the UI as specified\r\n                renderer.reloadAndReInitialize(context);\r\n            };\r\n\r\n            // check if inline window (quick-dialog)\r\n            if (btn.inlineWindow()) {\r\n                // test if it should be full screen (value or resolve-function)\r\n                QuickDialog.singleton()\r\n                    .showOrToggleFromToolbar(context, link, btn.fullScreen(), btn.dialog())\r\n                    .then((isChanged) => { if (isChanged) completePromise(); });\r\n            } else {\r\n                // else it's a normal pop-up dialog\r\n                const isNewWindow = btn.newWindow();\r\n                // check if new-window\r\n                if (isNewWindow || (origEvent?.shiftKey)) {\r\n                    // resolve promise, as the window won't report when closed\r\n                    resolve(context as unknown as T);\r\n                    window.open(link);\r\n                } else {\r\n                    $2sxc.totalPopup.open(link, completePromise);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Cms } from '../../cms/Cms';\r\nimport { ContextComplete } from '../../context/bundles/context-bundle-button';\r\nimport { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { CommandParams } from '../command-params';\r\nimport { RunParamsWithContext } from './run-params';\r\n\r\n/**\r\n * This is an engine on the sxc object.\r\n * It provides a .run(...) for when the sxc is already known.\r\n * @internal\r\n */\r\nexport class SxcInstanceEngine {\r\n  constructor(private sxc: SxcEdit) {}\r\n\r\n  run<T>(\r\n    nameOrSettings: string | CommandParams,\r\n    eventOrSettings?: CommandParams | MouseEvent,\r\n    event?: MouseEvent,\r\n  ): Promise<void | T> {\r\n    // Capture cases where this is called using the new/modern params, which is a mistake\r\n    if ((nameOrSettings as RunParamsWithContext).context || (nameOrSettings as RunParamsWithContext).workflows)\r\n      throw \"You are calling '.manage.run(...)' with a parameter 'context'. You should probably be calling the new '.cms.run(...)' instead.\";\r\n    const cntx = ContextComplete.findContext(this.sxc);\r\n    return new Cms().run(cntx, nameOrSettings, eventOrSettings, event);\r\n  }\r\n}\r\n","import { CmsEngine } from '..';\r\nimport { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { QeSelectors } from '../../quick-edit';\r\nimport { ContextForLists } from '../../quick-edit/context-for-lists';\r\nimport { Commands } from '../commands';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const CmdLayout = 'layout';\r\n/**\r\n * import this module to commands.ts\r\n */\r\nCommands.add(CmdLayout, 'ChangeLayout', 'glasses', true, true, {\r\n\r\n    inlineWindow: (_) => true,\r\n\r\n    code(context, event) {\r\n        // console.log('layout');\r\n        // Try to find the closest tag based on the click\r\n        // if this fails, try to find it based on the sxc-instance\r\n        const attrSel = '[' + QeSelectors.blocks.cb.context + ']';\r\n        // note: sometimes when the page loads, this can be auto-triggered and not have an event\r\n        const listSpecs = SxcEdit.getTag(context.sxc).closest<HTMLElement>(attrSel);\r\n\r\n        // Now check if we have apps-parameters to pass on\r\n        if (listSpecs) {\r\n            const specs = ContextForLists.getFromDom(listSpecs);\r\n            context.button.command.params.apps = specs.apps;\r\n        }\r\n        return CmsEngine.openDialog(context, event);\r\n    },\r\n});\r\n","import { CmdLayout } from '../commands/command/layout';\r\nimport { C } from '../constants';\r\nimport { SxcEdit } from '../interfaces/sxc-instance-editable';\r\nimport { windowInPage as window } from '../interfaces/window-in-page';\r\nimport { HasLog, Insights, Log } from '../logging';\r\nimport { NoJQ } from '../plumbing';\r\nimport { QuickDialog } from '../quick-dialog';\r\nimport * as QuickEditState from '../quick-dialog/state';\r\nimport { toolbarSelector } from '../toolbar';\r\nimport { TagToolbarManager } from '../toolbar/tag-toolbars/tag-toolbar-manager';\r\nimport { ToolbarManager } from '../toolbar/toolbar-manager';\r\n\r\n/**\r\n * This contains everything necessary to bootstrap the edit mode.\r\n * It must be initialized and started at the end in the x-bootstrap code,\r\n * to ensure everything is already ready and loaded\r\n * @internal\r\n */\r\nexport class BootstrapInPage extends HasLog {\r\n    constructor() {\r\n        super('Sys.Bootst', null, 'Building Bootstrapper');\r\n        Insights.add('system', 'bootstrap', this.log);\r\n    }\r\n\r\n    private initializedInstances: HTMLElement[] = [];\r\n    private openedTemplatePickerOnce: boolean = false;\r\n    private diagCancelStateOnStart: boolean = QuickEditState.cancelled.get();\r\n\r\n    initialize() {\r\n        const callLog = this.log.call('initialize');\r\n        // reset cancelled state after one reload\r\n        if (this.diagCancelStateOnStart) QuickEditState.cancelled.remove();\r\n\r\n        // initialize all modules\r\n        this.initAllInstances(true);\r\n\r\n        // start observing the body for configured mutations\r\n        this.watchDomChanges();\r\n        callLog.return('done');\r\n    }\r\n\r\n\r\n    /**\r\n     * Scan all instances and initialize them\r\n     * @param isFirstRun should be true only on the very initial call\r\n     */\r\n    private initAllInstances(isFirstRun: boolean): void {\r\n        const callLog = this.log.call('initAllInstances');\r\n        // initialize toolbars that are not inside 2sxc modules (e.g. in skin)\r\n        const noModuleToolbars = Array.from(document.querySelectorAll<HTMLElement>(toolbarSelector))\r\n            .filter((e) => !e.closest(C.Sel.SxcDivs));\r\n\r\n        this.log.add(`Found ${noModuleToolbars.length} toolbars outside of 2sxc modules`);\r\n        noModuleToolbars.forEach((e) => {\r\n            ToolbarManager.singleton().build(e);\r\n        });\r\n        // initialize toolbars inside 2sxc modules\r\n        const modToolbars = document.querySelectorAll<HTMLElement>(C.Sel.SxcDivs);\r\n        this.log.add(`Found ${modToolbars.length} toolbars inside 2sxc modules`);\r\n        modToolbars.forEach((e) => {\r\n            this.initInstance(e, isFirstRun);\r\n        });\r\n        if (isFirstRun) this.tryShowTemplatePicker();\r\n        callLog.return('initAllInstances done');\r\n    }\r\n\r\n    /**\r\n     * create an observer instance and start observing\r\n     */\r\n    private watchDomChanges() {\r\n        const callLog = this.log.call('watchDomChanges');\r\n        const observer = new MutationObserver((m) => {\r\n            // Watch statistics how changes were processed\r\n            window.$2sxc.stats.watchDomChanges++;\r\n            let processed = 0;\r\n\r\n            // Loop through each changed item, check if it's something we want to initialize\r\n            m.forEach((v) => {\r\n                v.addedNodes.forEach((n) => {\r\n                    // remove #comment and text nodes\r\n                    if ((n as HTMLElement).matches == null) return;\r\n                    const node = n as HTMLElement;\r\n\r\n                    // Menus which appear also cause DOM changes, but we want to ignore these for performance reasons\r\n                    if (node.matches(C.IDs.cls.scMenu)) return;\r\n\r\n                    processed++;\r\n\r\n                    // If the added node is a [data-edit-context], it is either a module or a content block which was replaced\r\n                    // re-initialize the module\r\n                    if (node.matches(C.Sel.SxcDivs)) {\r\n                        this.initInstance(node, false);\r\n                        // in case it has inner content, try to open the picker-dialog\r\n                        if (!QuickDialog.singleton().isVisible()) this.tryShowTemplatePicker();\r\n                    }\r\n                    // If the added node contains [data-edit-context] nodes, it is likely the DNN module drag manager which added\r\n                    // the node. To prevent multiple initialization while dragging modules, we additionally check for the\r\n                    // .active-module class which seems to be applied while dragging the module.\r\n                    else if (node.matches(':not(.active-module)') && node.querySelectorAll<HTMLElement>(C.Sel.SxcDivs).length > 0) {\r\n                        node.querySelectorAll<HTMLElement>(C.Sel.SxcDivs).forEach((e) => {\r\n                            this.initInstance(e, false);\r\n                        });\r\n                    } else\r\n                        ToolbarManager.singleton().build(node);\r\n                });\r\n            });\r\n\r\n            // Clean up orphan tags if nodes have been added\r\n            if (processed) TagToolbarManager.CleanupOrphanedToolbars();\r\n        });\r\n\r\n        observer.observe(document.body, {\r\n            attributes: false,\r\n            childList: true,\r\n            subtree: true,\r\n        });\r\n        callLog.return('watchDomChanges done');\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Show the template picker if\r\n     * - template picker has not yet been opened\r\n     * - dialog has not been cancelled\r\n     * - only one uninitialized module on page\r\n     * @returns\r\n     */\r\n    private tryShowTemplatePicker(): boolean {\r\n        const cl = this.log.call('tryShowTemplatePicker');\r\n        let sxc: SxcEdit;\r\n        // first check if we should show one according to the state-settings\r\n        const openDialogId = QuickEditState.cbId.get();\r\n        if (openDialogId) {\r\n            // must check if it's on this page, as it could be from another page\r\n            const found = document.querySelectorAll<HTMLElement>(`[${C.AttrNames.ContentBlockId}=\"${openDialogId}\"]`);\r\n            if (found.length) {\r\n                // since the CB-ID could also be an inner content (marked as a negative \"-\" number)\r\n                // we must be sure that we use the right id a.nyhow\r\n                if (openDialogId < 0) {\r\n                    const instanceId = Number(found[0].attributes.getNamedItem(C.AttrNames.InstanceId).value);\r\n                    sxc = SxcEdit.get(instanceId, openDialogId);\r\n                } else sxc = SxcEdit.get(openDialogId);\r\n            }\r\n        }\r\n\r\n        if (!sxc) {\r\n            const uninitializedModules = document.querySelectorAll<HTMLElement>(`.${C.ClsNames.UnInitialized}`);\r\n\r\n            if (this.diagCancelStateOnStart || this.openedTemplatePickerOnce)\r\n                return cl.return(false, 'cancelled');\r\n\r\n            // already showing a dialog\r\n            if (QuickDialog.singleton().isVisible())\r\n                return cl.return(false, 'should be invisible');\r\n\r\n            // not exactly one uninitialized module\r\n            if (uninitializedModules.length !== 1)\r\n                return cl.return(false, 'has un-init modules');\r\n\r\n            // show the template picker of this module\r\n            const module = Array.from(uninitializedModules).find((e) => e.parentElement.matches(C.Sel.SxcDivs))?.parentElement;\r\n            sxc = SxcEdit.get(module);\r\n        }\r\n\r\n        if (sxc) {\r\n            sxc.manage.run(CmdLayout);\r\n            this.openedTemplatePickerOnce = true;\r\n        }\r\n        return cl.return(true, 'tryShowTemplatePicker() done');\r\n    }\r\n\r\n\r\n    private initInstance(module: HTMLElement, isFirstRun: boolean): void {\r\n        const cl = this.log.call('initInstance', `module: obj, isFirstRun: ${isFirstRun}) initialized: ${this.initializedInstances}`);\r\n\r\n        // if instance is already in the list of initialized modules, skip\r\n        // otherwise add for next time to prevent recursions\r\n        if (this.initializedInstances.find((m) => m === module)) return;\r\n        this.initializedInstances.push(module);\r\n\r\n        let sxc = SxcEdit.get(module);\r\n\r\n        // check if the sxc must be re-created. This is necessary when modules are dynamically changed\r\n        // because the configuration may change, and that is cached otherwise, resulting in toolbars with wrong config\r\n        if (!isFirstRun) sxc = sxc.recreate(true) as SxcEdit;\r\n\r\n        // check if we must show the glasses\r\n        // this must always run because it can be added ajax-style\r\n        const wasEmpty = this.showGlassesButtonIfUninitialized(sxc);\r\n\r\n        if (isFirstRun || !wasEmpty) {\r\n            // use a logger for each iteration\r\n            const log = new Log('Bts.Module');\r\n\r\n            ToolbarManager.singleton().buildModule(module);\r\n        }\r\n        cl.done();\r\n    }\r\n\r\n\r\n    private showGlassesButtonIfUninitialized(sxci: SxcEdit): boolean {\r\n        const callLog = this.log.call('showGlassesButtonIfUninitialized');\r\n        // already initialized\r\n        if (this.isInitialized(sxci))\r\n            return callLog.return(false, 'is initialized');\r\n\r\n        // already has a glasses button\r\n        const tag = SxcEdit.getTag(sxci);\r\n        if (tag.querySelectorAll<HTMLElement>(`.${C.ClsNames.UnInitialized}`).length !== 0)\r\n            return callLog.return(false, 'already has button');\r\n\r\n        // note: title is added on mouseover, as the translation isn't ready at page-load\r\n        const btn = NoJQ.domFromString(\r\n            `<div class=\"${C.ClsNames.UnInitialized}\" onmouseover=\"this.title = $2sxc.translate(this.title)\" title=\"InPage.NewElement\">` +\r\n            '<div class=\"icon-sxc-glasses\"></div>' +\r\n            '</div>',\r\n        )[0];\r\n\r\n        btn.addEventListener('click', () => sxci.manage.run(CmdLayout));\r\n\r\n        tag.append(btn);\r\n        return callLog.return(true, 'ok');\r\n    }\r\n\r\n\r\n    isInitialized(sxci: SxcEdit): boolean {\r\n        const cg =\r\n            sxci &&\r\n            sxci.manage &&\r\n            sxci.manage._editContext &&\r\n            sxci.manage._editContext.contentBlock;\r\n        return cg && cg.TemplateId !== 0;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { SxcInstanceEngine } from '../../commands';\r\nimport { CmdLayout } from '../../commands/command/layout';\r\nimport { SxcEdit } from '../../interfaces/sxc-instance-editable';\r\nimport { HasLog, Insights } from '../../logging';\r\n\r\n\r\n/**\r\n * Maps actions of the module menu to JS actions - needed because onclick event can't be set (actually, a bug in DNN)\r\n * @internal\r\n */\r\nexport class DnnActionMenu extends HasLog {\r\n    private run: typeof SxcInstanceEngine.prototype.run;\r\n    private sxc: SxcEdit;\r\n\r\n    constructor(moduleId: number) {\r\n        super('Dnn.Menu', null, `modId: ${moduleId}`);\r\n        Insights.add('dnn-menu', `mod: ${moduleId}`, this.log);\r\n        this.sxc = SxcEdit.get(moduleId);\r\n        this.run = this.sxc.manage.run;\r\n    }\r\n\r\n    changeLayoutOrContent = () => { this.run(CmdLayout); };\r\n\r\n    // 2020-04-21 2dm disabled this, as it doesn't make sense to have this in the DNN menu - since add can be used in each position\r\n    // addItem = () => { this.run('new', { useModuleList: true, sortOrder: 0 }); };\r\n\r\n    edit = () => { this.run('edit', { useModuleList: true, sortOrder: 0 }); };\r\n\r\n    adminApp = () => { this.run('app'); };\r\n\r\n    adminZone = () => { this.run('zone'); };\r\n\r\n    develop = () => { this.run('template-develop'); };\r\n}\r\n\r\n","export * from './dnn-menu-helper/dnn-inpage-edit';\r\n// tslint:disable-next-line: no-var-requires\r\nconst autorun = require('./dnn-workarounds/dnn-08.00.04');","import { Sxc, SxcManage } from '../../../$2sxc/src';\r\nimport { SxcInstanceEngine } from '../commands';\r\nimport { ContextComplete } from '../context/bundles/context-bundle-button';\r\nimport { AttrJsonEditContext } from '../context/html-attribute/edit-context-root';\r\nimport { ContextOfUser } from '../context/parts/context-user';\r\nimport { TypeUnsafe } from '../plumbing';\r\nimport { ToolbarManager } from '../toolbar';\r\nimport { ToolbarSettings } from '../toolbar/config';\r\nimport { InPageButtonJson } from '../toolbar/config-loaders';\r\nimport { ToolbarRenderer } from '../toolbar/render/toolbar-renderer';\r\n\r\n/**\r\n * Instance specific edit manager\r\n * @internal\r\n */\r\nexport class EditManager implements SxcManage {\r\n\r\n    constructor(\r\n        private sxc: Sxc,\r\n        private editContext: AttrJsonEditContext,\r\n        private userInfo: ContextOfUser,\r\n        private cmdEngine: SxcInstanceEngine,\r\n        public context: ContextComplete,\r\n    ) {\r\n    }\r\n\r\n    //#region Official, public properties and commands, which are stable for use from the outside\r\n\r\n    /**\r\n     * run a command - command used in toolbars and custom buttons\r\n     * it is publicly used out of inpage, so take a care to preserve function signature\r\n     */\r\n    run = this.cmdEngine.run;\r\n\r\n    /**\r\n     * Generate a button (an <a>-tag) for one specific toolbar-action.\r\n     * @param {InPageButtonJson} actDef - settings, an object containing the spec for the expected button\r\n     * @param {int} groupIndex - number what button-group it's in'\r\n     * @returns {string} html of a button\r\n     * it is publicly used out of inpage, so take a care to preserve function signature\r\n     */\r\n    getButton(actDef: InPageButtonJson, groupIndex: number): string {\r\n        this.context.button = ToolbarManager.singleton().getLoader('getButton')\r\n            .groups.convertToButton(actDef, {}, {}, {});\r\n        const button = new ToolbarRenderer(this.context).button.render(this.context, groupIndex);\r\n        return button.outerHTML;\r\n    }\r\n\r\n    /**\r\n     * Builds the toolbar and returns it as HTML\r\n     * @param {Object} tbConfig - general toolbar config\r\n     * @param {ToolbarSettings} moreSettings - additional / override settings\r\n     * @returns {string} html of the current toolbar\r\n     *\r\n     * it is publicly used in Razor scripts of inpage, so take a care to preserve function signature\r\n     */\r\n    getToolbar(tbConfig: TypeUnsafe, moreSettings: ToolbarSettings): string {\r\n        // if toolbar is an array, use as-is, otherwise assume properties are params\r\n        const toolbar = Array.isArray(tbConfig) ? tbConfig : { ...tbConfig };\r\n        tbConfig = { settings: { ...tbConfig.settings, ...moreSettings }, toolbar: toolbar };\r\n        const toolbarConfig = ToolbarManager.singleton().loadConfig(this.context, tbConfig);\r\n        this.context.toolbar = toolbarConfig;\r\n        return new ToolbarRenderer(this.context).render();\r\n    }\r\n\r\n    //#endregion official, public properties - everything below this can change\r\n\r\n    _context = this.context;\r\n\r\n    /**\r\n     * internal method to find out if it's in edit-mode\r\n     */\r\n    _isEditMode = () => this.editContext.Environment.IsEditable ?? false;\r\n\r\n    /**\r\n     * used for various dialogues\r\n     */\r\n    _reloadWithAjax = this.context.app.supportsAjax;\r\n\r\n    /** metadata necessary to know what/how to edit */\r\n    _editContext = this.editContext;\r\n\r\n    /** used to handle the commands for this content-block */\r\n    _commands = this.cmdEngine;\r\n\r\n    _user = this.userInfo;\r\n\r\n\r\n\r\n    /**\r\n     * change config by replacing the guid, and refreshing dependent sub-objects\r\n     */\r\n    _updateContentGroupGuid(context: ContextComplete, newGuid: string) {\r\n        context.contentBlock.contentGroupId = newGuid;\r\n        this.editContext.contentBlock.Guid = newGuid;\r\n    }\r\n\r\n}\r\n","import { Cms } from '../cms/Cms';\r\nimport { SxcInstanceEngine } from '../commands';\r\nimport { ensureRunParamsInstanceOrError, RunParams } from '../commands/engine/run-params';\r\nimport { ContextComplete } from '../context';\r\nimport { ContextOfUser } from '../context';\r\nimport { SxcEdit } from '../interfaces/sxc-instance-editable';\r\nimport { ToolbarManager } from '../toolbar';\r\nimport { EditManager } from './edit-manager';\r\n\r\n/**\r\n * A helper-controller in charge of opening edit-dialogues + creating the toolbars for it\r\n * all in-page toolbars etc.\r\n * if loaded, it's found under the $2sxc(module).manage\r\n * it has commands to\r\n * - getButton\r\n * - getToolbar\r\n * - run(...)\r\n * - isEditMode\r\n * @internal\r\n */\r\nexport class Manage {\r\n    /**\r\n     * Init the manager object\r\n     * we must keep signature of initInstance in sync with the 2sxc.api.js\r\n     * @param sxc\r\n     */\r\n    initInstance(sxc: SxcEdit) {\r\n        try {\r\n            const myContext = ContextComplete.findContext(sxc);\r\n            const editContext = SxcEdit.getEditContext(myContext.sxc);\r\n\r\n            const userInfo = ContextOfUser.fromContext(myContext);\r\n            const cmdEngine = new SxcInstanceEngine(myContext.sxc);\r\n\r\n            const editManager = new EditManager(myContext.sxc, editContext, userInfo, cmdEngine, myContext);\r\n            sxc.manage = editManager;\r\n            sxc.cms.run = <T>(runParams: RunParams): Promise<void | T> => {\r\n                ensureRunParamsInstanceOrError(runParams);\r\n                return new Cms().run({ ...runParams, context: sxc });\r\n            };\r\n\r\n            // Init to handle special errors\r\n            // 2022-05-02 2dm disabled, don't think we need it any more\r\n            // editManager.init();\r\n            return editManager;\r\n        } catch (e) {\r\n          console.error('error in 2sxc - will log but not throw', e);\r\n        }\r\n    }\r\n\r\n    /** Internal - ATM only used in dnn-sxc-angular to enable toolbar initialization */\r\n    _toolbarManager = ToolbarManager.singleton();\r\n}\r\n","import { SxcEdit } from '../interfaces/sxc-instance-editable';\r\n\r\n//#region WebApi Endpoints used: 2sxc\r\nconst webApiInstallComplete = 'sys/install/resume';\r\n//#endregion\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class SystemUpgrader {\r\n    // upgrade command - started when an error contains a link to start this\r\n    finishUpgrade(domElement: HTMLElement): void {\r\n        const mc = SxcEdit.get(domElement);\r\n        mc.webApi.fetchRaw(webApiInstallComplete)\r\n            .then(() => {\r\n                alert('Upgrade ok, restarting the CMS and reloading...');\r\n                location.reload();\r\n            });\r\n        alert('starting upgrade. This could take a few minutes. You\\'ll see an \\'ok\\' when it\\'s done. Please wait...');\r\n    }\r\n}\r\n","import { NoJQ } from '../plumbing';\r\n\r\n// tslint:disable-next-line: no-var-requires\r\nconst Shake = require('shake.js');\r\n// ReSharper disable once InconsistentNaming\r\n// enable shake detection on all toolbars\r\nNoJQ.ready(() => {\r\n  // this will add a css-class to auto-show all toolbars (or remove it again)\r\n  function toggleAllToolbars() {\r\n    document.body.classList.toggle('sc-tb-show-all');\r\n  }\r\n\r\n  // debugger; // shake is not working, neither on ios nor android. Might be because of http and might work with https\r\n  const shake = new Shake({ callback: toggleAllToolbars });\r\n  // start shake-event monitoring, which will then generate a window-event\r\n  shake.start();\r\n});\r\n","import { BootstrapInPage } from './bootstrap/bootstrap';\r\nimport { Cms } from './cms/Cms';\r\nimport { ContextComplete } from './context/bundles/context-bundle-button';\r\nimport { DnnActionMenu } from './dnn';\r\nimport { translate, Translator } from './i18n';\r\nimport { $2sxcInPage as $2sxc } from './interfaces/sxc-controller-in-page';\r\nimport { windowInPage as window } from './interfaces/window-in-page';\r\nimport { EditManager } from './manage/edit-manager';\r\nimport { Manage } from './manage/manage';\r\nimport { NoJQ } from './plumbing';\r\nimport { QuickE } from './quick-edit/quick-e';\r\nimport { SystemUpgrader } from './system';\r\n\r\n/**\r\n * @internal\r\n */\r\nimport './toolbar/toolbar-global-enable-shake';\r\n\r\n// #1 Note that $2sxc must always exist, the server ensures the load order\r\n\r\n// #2 Now attach initialization helpers and global objects, so that $2sxc always has these\r\n$2sxc.context = ContextComplete.findContext; // primary API to get the context\r\n$2sxc._translateInit = (manage: EditManager) => Translator.initManager(manage); // reference in ./2sxc-api/js/ToSic.Sxc.Instance.ts\r\n$2sxc.translate = translate;    // provide an official translate API for 2sxc\r\n$2sxc._manage = new Manage();   // used out of this project in ToSic.Sxc.Instance and 2sxc.api.js\r\nwindow.$quickE = QuickE.singleton();        // note: not sure if this is needed as a global object...\r\n$2sxc.cms = new Cms();\r\n\r\n// #3 Initialize all objects as needed\r\nfunction loadInpage() {\r\n    // check if already initialized - just in case these scripts were loaded multiple times\r\n    const bootstrapper = new BootstrapInPage();\r\n    bootstrapper.initialize();\r\n    QuickE.singleton().start();\r\n\r\n    /** this enhances the $2sxc client controller with stuff only needed when logged in */\r\n    if (!window.$2sxc.system) window.$2sxc.system = new SystemUpgrader();\r\n\r\n    /** Connect DNN action mapper to this module instance */\r\n    window.$2sxcActionMenuMapper = (moduleId: number) => {\r\n        return new DnnActionMenu(moduleId);\r\n    };\r\n}\r\n\r\nNoJQ.ready(loadInpage);\r\n\r\n// Tell Webpack to load CSS\r\nconst cssEdit = require('./inpage.css');\r\nconst cssIcons = require('../icons/inpage-icons-codes.css');\r\n\r\n"],"sourceRoot":""}