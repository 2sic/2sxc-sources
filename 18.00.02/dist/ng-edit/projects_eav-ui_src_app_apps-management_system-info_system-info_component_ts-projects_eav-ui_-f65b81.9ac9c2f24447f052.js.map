{"version":3,"file":"projects_eav-ui_src_app_apps-management_system-info_system-info_component_ts-projects_eav-ui_-f65b81.9ac9c2f24447f052.js","mappings":"iXAOO,IAAMA,EAAkB,MAAzB,MAAOA,EACXC,YAAoBC,EAA0BC,GAA1BC,KAAAF,OAA0BE,KAAAD,YAA0B,CAExEE,gBAAgBC,GACd,OAAOF,KAAKF,KAAKK,IAAYH,KAAKD,WAAWK,MAAMN,KAAKO,OAAOC,uBAAgC,CAC7FC,OAAQ,CAAEL,SAAUA,EAASM,aAEjC,CAACC,SAAAT,KAAA,mBAAAU,iBAPUd,GAAkBe,MAAAC,MAAAD,MAAAE,MAAA,EAAAJ,SAAAT,KAAA,WAAAc,EAAAC,IAAA,OAAlBnB,EAAkBoB,QAAlBpB,EAAkBqB,mBAAlBrB,CAAkB,mYCYfe,MAAA,UAAmDA,MAAA,mBAAAA,MAAAO,GAAA,MAAAC,EAAAR,QAAAS,UAAAC,EAAAV,MAAA,UAAAA,MAASU,EAAAC,gBAAAH,EAAAI,KAAAC,KAA8B,GACxFb,MAAA,GACFA,0CAF8BA,MAAA,aAAAA,MAAA,EAAAc,IAC5Bd,cAAA,IAAAQ,EAAAI,KAAAG,MAAA,8CANNf,MADF,UACEA,CADwB,YACSA,MAAA,GAAiBA,QAEhDA,MADF,WACEA,CAD+B,aAE7BA,MAAA,yBAAAQ,EAAAR,MAAAgB,GAAAP,UAAAC,EAAAV,MAAA,UAAAA,MAASU,EAAAO,gBAAAT,EAAAU,OAA2B,GAAElB,MAAA,GAAgBA,QACxDA,MAAA,EAAAmB,EAAA,YAMJnB,sCAVmCA,MAAA,GAAAA,MAAA,GAAAQ,EAAAO,MAAA,KAEmBf,MAAA,GAAAA,MAAA,QAAAQ,EAAAU,OACVlB,cAAAQ,EAAAU,OACxClB,cAAA,EAAAQ,EAAAI,KAAA,4BAgBNZ,MAAA,2CAwBUA,MAAA,UAAmDA,MAAA,mBAAAA,MAAAoB,GAAA,MAAAC,EAAArB,MAAA,GAAAS,UAAAC,EAAAV,MAAA,UAAAA,MAASU,EAAAC,gBAAAU,EAAAT,KAAAC,KAA8B,GAC1Fb,MAAA,GACAA,2CAFGA,MAAA,aAAAA,MAAA,EAAAc,IACHd,cAAA,IAAAqB,EAAAT,KAAAG,MAAA,+BAIAf,MAAA,UAAiFA,MAAA,GAAqBA,yCAAjDA,MAAvB,OAAAqB,EAAAT,KAAAC,IAAAb,MAAuBA,CAAD,SAAAqB,EAAAT,KAAAU,QAA6BtB,cAAAqB,EAAAT,KAAAG,iCADnFf,MALA,EAAAuB,EAAA,WAKAvB,CALsC,EAAAwB,EAAA,2CAAtCxB,MAAA,cAAAqB,EAAAT,KAAAU,OAAA,MAKAtB,cAAA,cAAAqB,EAAAT,KAAAU,OAAA,gDATJtB,MADF,UACEA,CADwB,YACSA,MAAA,GAAiBA,QAEhDA,MADF,WACEA,CAD+B,aACJA,MAAA,yBAAAqB,EAAArB,MAAAyB,GAAAhB,UAAAC,EAAAV,MAAA,UAAAA,MAASU,EAAAO,gBAAAI,EAAAH,OAA2B,GAAElB,MAAA,GAAgBA,QACjFA,MAAA,EAAA0B,GAAA,KAWJ1B,sCAdmCA,MAAA,GAAAA,MAAA,GAAAqB,EAAAN,MAAA,KAEzBf,MAAA,GAAAA,MAAA,QAAAqB,EAAAH,OAA2DlB,cAAAqB,EAAAH,OACjElB,cAAA,EAAAqB,EAAAT,KAAA,6BAsBNZ,MAAA,0BAmBEA,MAAA,SACEA,MAAA,yEAEFA,+BAKFA,MAAA,0BAeEA,MAAA,SACEA,MAAA,oFAEFA,+BAKFA,MAAA,yBAoBEA,MAAA,0BAqBIA,MAAA,uBACEA,MAAA,mCACFA,cAFgBA,MAAA,uCADlBA,MAAA,EAAA2B,GAAA,yDAAA3B,MAAA,EAAA4B,EAAAC,OAAAC,QAAA,iCAgCM9B,MAAA,UACEA,MAAA,GAAmBA,yCADSA,MAAA,aAAA+B,EAAAnB,KAAAC,KAC5Bb,cAAA,IAAA+B,EAAAnB,KAAAG,MAAA,+BAGFf,MAAA,UAAiFA,MAAA,GAAqBA,yCAAjDA,MAAvB,OAAA+B,EAAAnB,KAAAC,IAAAb,MAAuBA,CAAD,SAAA+B,EAAAnB,KAAAU,QAA6BtB,cAAA+B,EAAAnB,KAAAG,iCADnFf,MAJA,EAAAgC,GAAA,WAIAhC,CAJsC,EAAAiC,GAAA,2CAAtCjC,MAAA,cAAA+B,EAAAnB,KAAAU,OAAA,MAIAtB,cAAA,cAAA+B,EAAAnB,KAAAU,OAAA,gDARJtB,MADF,UACEA,CADwB,YACkBA,MAAA,GAAiBA,QAEzDA,MADF,WACEA,CAD+B,aACJA,MAAA,yBAAA+B,EAAA/B,MAAAkC,GAAAzB,UAAAC,EAAAV,MAAA,UAAAA,MAASU,EAAAO,gBAAAc,EAAAb,OAA2B,GAAElB,MAAA,GAAgBA,QACjFA,MAAA,EAAAmC,GAAA,KAUJnC,sCAb4CA,MAAA,GAAAA,MAAA,GAAA+B,EAAAhB,MAAA,KAElCf,MAAA,GAAAA,MAAA,QAAA+B,EAAAb,OAA2DlB,cAAA+B,EAAAb,OACjElB,cAAA,EAAA+B,EAAAnB,KAAA,gDAhMJZ,MALR,UAKQA,CALmB,eAKnBA,CAHqB,oBAGrBA,CAFa,UAEbA,CADmB,gBAC2BA,MAAA,2BAChDA,UACAA,MAAA,oBAAgBA,MAAA,cAAQA,QACxBA,MAAA,uBAAmBA,MAAA,0BACrBA,UACAA,MAAA,uBACEA,MAAA,GAAAoC,EAAA,YAAApC,OAcAA,MAAA,SAAIA,MAAA,sBAAeA,QACnBA,MAAA,QACEA,MAAA,0HAGJA,UACAA,MAAA,YACAA,MAAA,yBACEA,MAAA,GAAAqC,EAAA,uBACArC,MAAA,gBAAiDA,MAAA,mBAAAA,MAAAsC,GAAA,MAAA5B,EAAAV,QAAA,OAAAA,MAASU,EAAA6B,qBAAoB,GAC5EvC,MAAA,kBAA2BA,MAAA,kBAAWA,QACtCA,MAAA,WAAMA,MAAA,2BAGZA,cAKMA,MAHN,gBAGMA,CAHqB,qBAGrBA,CAFa,WAEbA,CADmB,iBAC2BA,MAAA,aAChDA,UACAA,MAAA,qBAAgBA,MAAA,gBAASA,QACzBA,MAAA,wBAAmBA,MAAA,iCACrBA,UACAA,MAAA,uBACEA,MAAA,GAAAwC,GAAA,YAAAxC,OAkBAA,MAAA,aACAA,MAAA,SAAIA,MAAA,oBAAaA,QACjBA,MAAA,QACEA,MAAA,2HAGJA,UACAA,MAAA,YACAA,MAAA,yBACEA,MAAA,GAAAyC,GAAA,uBACAzC,MAAA,gBAAiDA,MAAA,mBAAAA,MAAAsC,GAAA,MAAA5B,EAAAV,QAAA,OAAAA,MAASU,EAAAgC,mBAAkB,GAC1E1C,MAAA,kBAA2BA,MAAA,kBAAWA,QACtCA,MAAA,WAAMA,MAAA,yBAGZA,cAKMA,MAHN,gBAGMA,CAHqB,qBAGrBA,CAFa,WAEbA,CADmB,iBAC2BA,MAAA,WAChDA,UACAA,MAAA,qBAAgBA,MAAA,kBAAWA,QAC3BA,MAAA,wBAAmBA,MAAA,2CACrBA,UACAA,MAAA,uBACEA,MAAA,+BACAA,MAAA,GAAA2C,GAAA,WAMF3C,QACAA,MAAA,YACAA,MAAA,yBACEA,MAAA,GAAA4C,GAAA,uBAEJ5C,UAKMA,MAHN,gBAGMA,CAHqB,qBAGrBA,CAFa,WAEbA,CADmB,iBAC2BA,MAAA,mBAChDA,UACAA,MAAA,qBAAgBA,MAAA,eAAQA,QACxBA,MAAA,wBAAmBA,MAAA,+BACrBA,UACAA,MAAA,uBACEA,MAAA,+BACAA,MAAA,GAAA6C,GAAA,WAMF7C,QACAA,MAAA,YACAA,MAAA,yBACEA,MAAA,GAAA8C,GAAA,uBAEJ9C,UAKMA,MAHN,gBAGMA,CAHqB,qBAGrBA,CAFa,WAEbA,CADmB,iBAC2BA,MAAA,YAChDA,UACAA,MAAA,qBAAgBA,MAAA,oBAAaA,QAC7BA,MAAA,wBAAmBA,MAAA,0CACrBA,UAEEA,MADF,sBACEA,CADgB,SACZA,MAAA,oCAA6BA,QACjCA,MAAA,QACEA,MAAA,yIAEAA,MAAA,WAA4EA,MAAA,qBAAcA,QAAIA,MAAA,SAChGA,QACAA,MAAA,YACEA,MAAA,GAAA+C,GAAA,uBACA/C,MAAA,gBAAiDA,MAAA,mBAAAA,MAAAsC,GAAA,MAAA5B,EAAAV,QAAA,OAAAA,MAASU,EAAAsC,eAAc,GACtEhD,MAAA,mBAA2BA,MAAA,mBAAWA,QACtCA,MAAA,YAAMA,MAAA,0BAEVA,YACAA,MAAA,cACAA,MAAA,UAAIA,MAAA,mCAA2BA,QAC/BA,MAAA,iBAA0DA,MAAA,sBAAAA,MAAAsC,GAAA,MAAAW,EAAAjD,MAAA,KAAAU,EAAAV,QAAA,OAAAA,MAAYU,EAAApB,gBAAA2D,GAAgC,GACpGjD,MAAA,WACEA,MAAA,qFAA4EA,MAAA,YAAMA,MAAA,mBAAWA,QAAQA,MAAA,yEAGvGA,QAEEA,MADF,wBACEA,CADwD,iBAC7CA,MAAA,2BAAmBA,QAC9BA,MAAA,kBAA+EA,MAAA,yBAAAkD,GAAAlD,MAAAsC,GAAA,MAAA5B,EAAAV,qBAAAU,EAAAyC,gBAAAD,KAAAxC,EAAAyC,gBAAAD,GAAAlD,MAAAkD,EAAA,GAEjFlD,UACAA,MAAA,IAAAoD,GAAA,KAQJpD,UACAA,MAAA,aAEEA,MADF,0BACEA,CAD4B,iBAE1BA,MAAA,kBAGNA,YAKMA,MAHN,iBAGMA,CAHqB,sBAGrBA,CAFa,YAEbA,CADmB,kBAC2BA,MAAA,KAChDA,UACAA,MAAA,sBAAgBA,MAAA,gBAAQA,QACxBA,MAAA,yBAAmBA,MAAA,gCACrBA,UACAA,MAAA,wBACEA,MAAA,IAAAqD,GAAA,YAAArD,OAiBFA,QACAA,MAAA,aAEJA,2EAzMMA,MAAA,IAAAA,MAAAsD,EAAAC,aAsBevD,MAAA,GAA4BA,MAA5B,mBAAAwD,EAA4BxD,CAAA,0BAAAA,MAAA,GAAAyD,IAiB3CzD,MAAA,IAAAA,MAAAsD,EAAAI,WA2Be1D,MAAA,GAA4BA,MAA5B,mBAAAwD,EAA4BxD,CAAA,0BAAAA,MAAA,GAAAyD,IAiBpBzD,MAAA,IAA0CA,MAA1C,wCAA0CA,CAAD,aAChEA,cAAA,GAAAU,EAAAiD,YAAA,OASe3D,MAAA,GAA4BA,MAA5B,mBAAAwD,EAA4BxD,CAAA,0BAAAA,MAAA,GAAA4D,IAapB5D,MAAA,IAA0CA,MAA1C,wCAA0CA,CAAD,aAChEA,cAAA,GAAAU,EAAAmD,aAAA,OASe7D,MAAA,GAA4BA,MAA5B,mBAAAwD,EAA4BxD,CAAA,0BAAAA,MAAA,GAAA8D,IAoB1B9D,MAAA,IAA4BA,MAA5B,mBAAAwD,EAA4BxD,CAAA,0BAAAA,MAAA,GAAA+D,IAgBM/D,MAAA,IAAAA,MAAA,UAAAU,EAAAsD,qBAAgChE,MAAA,UAAAU,EAAAyC,iBACzCnD,MAAA,WAAAsD,EAAAW,SAExCjE,MAAA,GAAAA,MAAA,IAAA4B,EAAAsC,SAAAtC,EAAAC,OAAA,QAWqD7B,MAAA,GAAAA,MAAA,YAAAiD,EAAAkB,OAAAb,EAAAW,SASPjE,MAAA,GAAAA,MAAAsD,EAAAc,aAMhDpE,MAAA,GAAAA,MAAAsD,EAAAe,yCA0BJrE,MADF,SACEA,CAD2G,iBAChFA,MAAA,GAAyBA,QACpDA,MAAA,UAAMA,MAAA,GACRA,wDAH4CA,MAAA,cAAAA,OAAgCA,MAAA,gCAC/CA,MAAA,GAAAA,MAAA,QAAAsE,EAAAC,SAAAC,IAAAF,IAAA,aACrBtE,MAAA,GAAAA,MAAAyE,ICzKH,IAAMC,GAAmB,MAA1B,MAAOA,EAIXC,GACAC,GACAC,GACAC,GACAC,GAMAC,GACAC,GACAC,GAKAhG,YACUiG,GAAA9F,KAAA8F,WApBH9F,KAAA+F,YAA4BC,OAAOC,KAE1CjG,MAAAsF,KAAkBY,KAAUC,KAC5BnG,MAAAuF,KAAsBW,KAAUtG,GAChCI,MAAAwF,KAAWU,KAAUE,KACrBpG,MAAAyF,KAAaS,KAAUG,KACvBrG,MAAA0F,KAAgBQ,KAAUI,KAG1BtG,KAAA2E,oBAAsB,gBAOZ3E,KAAAsE,UAAYtE,KAAK+F,SAASQ,UAAUC,IAAaC,YACjDzG,KAAAwE,WAAaxE,KAAK+F,SAASQ,UAAUC,IAAaE,sBAK5D,CAEAC,WACE3G,MAAK2F,EAAkB,IAAIiB,SAA2CzB,GACtEnF,MAAK4F,EAAc,IAAIgB,SAA4CzB,GACnEnF,MAAK6F,EAAY,IAAIe,KAAyB,GAC9C5G,KAAK6G,iBACL7G,KAAK8G,gBACL9G,KAAK+G,eACL/G,MAAK0F,EAAcsB,iBAAiB,KAClChH,KAAK6G,iBACL7G,KAAK8G,gBACL9G,KAAK+G,cAAY,EAErB,CAEAE,cACEjH,MAAK2F,EAAgBuB,WACrBlH,MAAK4F,EAAYsB,WACjBlH,MAAK6F,EAAUqB,UACjB,CAEAtF,gBAAgBuF,IACdvF,OAAgBuF,GAChBnH,KAAK8F,SAASsB,KAAK,sBAAuB,KAAM,CAAElH,SAAU,KAC9D,CAEAmD,mBACErD,KAAKqH,sBAAsB,OAC7B,CAEAnE,qBACElD,KAAKqH,sBAAsB,SAC7B,CAEAA,sBAAsBC,GACpBtH,MAAKsF,EAAgBiC,cAClBC,QAAKC,KAAIC,GAAMA,GAAIC,QAAQL,GAAUM,aAAU,EAAGC,KAAK,IACvDC,UAAUC,IACT/H,MAAKyF,EAAWuC,sBAAsBD,EAAYE,OAAQF,EAAYG,MAAO,MAAK,EAExF,CAEAvE,eACEwE,OAAOf,KAAKe,OAAO/H,MAAMN,KAAKO,OAAO,qBAAsB,SAC7D,CAGAiB,gBAAgB8G,GAGVA,EAAYC,SAAS,kBACvBD,EAAc,gBAEhB,MAAME,EAAStI,MAAK0F,EAAc4C,OAClCA,EAAOC,SAAS,CAACD,EAAO9G,IAAIgH,QAAQ,SAAU,IAAMJ,GACtD,CAEAnI,gBAAgBwI,GACdzI,MAAK6F,EAAU6C,MAAK,GACpB1I,KAAK8F,SAASsB,KAAK,iBACnBpH,MAAKuF,EAAoBtF,gBAAgBD,KAAK8D,iBAAiBgE,UAAUa,IACvE3I,MAAK6F,EAAU6C,MAAK,GACpB1I,KAAK8F,SAASsB,KAAKuB,EAAK,KAAM,CAAEzI,SAAU,KAAM,GAE9C0I,SAASC,yBAAyBC,aACpCF,SAASC,cAAcE,OAEzBN,EAAKO,WACP,CAEQlC,gBACN9G,MAAKwF,EAASsB,gBAAgBgB,UAAU,CACtCmB,MAAOA,KACLjJ,MAAK2F,EAAgB+C,UAAKvD,EAAS,EAErCuD,KAAOQ,IACLlJ,MAAK2F,EAAgB+C,KAAKQ,EAAa,GAG7C,CAEQnC,eACN/G,MAAKwF,EAASuB,eAAee,UAAU,CACrCmB,MAAOA,KACLjJ,MAAK4F,EAAY8C,UAAKvD,EAAS,EAEjCuD,KAAOS,IACLnJ,MAAK4F,EAAY8C,KAAKS,EAAS,GAGrC,CAEQtC,iBAGN,MAAMuC,EAAepJ,MAAK2F,EAAgB6B,QACxCC,KAAIyB,IACF,GAAqB,MAAjBA,EAAuB,OAC3B,MAAM1H,EAAMxB,MAAK0F,EAAc4C,OAAO9G,IAAM,gBAsB5C,MArB6B,CAC3B,CAAEE,MAAO,MAAOG,MAAO,UAAUqH,EAAcG,OAAOC,cACtD,CAAE5H,MAAO,WAAYG,MAAO,GAAGqH,EAAcG,OAAOE,cAAcL,EAAcG,OAAOG,mBACvF,CAAE9H,MAAO,QAASG,MAAOqH,EAAcG,OAAOI,MAAMjJ,YACpD,CAAEkB,MAAO,cAAeG,MAAOqH,EAAcG,OAAOK,aACpD,CACEhI,MAAO,gBACPG,MAAOqH,EAAcS,QAAQC,OAAS,iBACtCrI,KAAM2H,EAAcS,QAAQC,MACxB,CACApI,MACAE,MAAO,SACPO,OAAQ,WAER,CACAT,MACAE,MAAO,WACPO,OAAQ,YAEb,IAKD4H,KAAaC,KAAc,CAAC9J,MAAK2F,EAAiB3F,MAAK4F,IAAc4B,QACzEC,KAAI,EAAEyB,EAAeC,MACnB,GAAqB,MAAjBD,GAAsC,MAAbC,EAAmB,OAChD,MAAMY,EAAeZ,EAAUa,OACzBC,EAAkBd,EAAUe,OAAOC,GAAKA,EAAEC,WAAWJ,OAuB3D,MAtB6B,CAC3B,CAAEtI,MAAO,OAAQG,MAAOqH,EAAcmB,KAAKpC,OAAOzH,YAClD,CAAEkB,MAAO,OAAQG,MAAOqH,EAAcmB,KAAKC,OAAO9J,YAClD,CACEkB,MAAO,YACPG,MAAO,GAAGoI,KAAmBF,IAC7BxI,KAAM,CACJC,IAAK,YACLE,MAAO,SACPO,OAAQ,YAGZ,CACEP,MAAO,OACPG,MAAOqH,EAAcmB,KAAKE,KAAK/J,WAC/Be,KAAM,CACJC,IAAK,OACLE,MAAO,SACPO,OAAQ,YAEX,IAKDuI,EAAexK,MAAK2F,EAAgB6B,QACxCC,KAAIyB,IACF,GAAqB,MAAjBA,EACJ,OAAIA,EAAcuB,SAASC,kBAAoBxB,EAAcuB,SAASE,cAC7D,UAEF,WAGLC,EAAgB5K,MAAK2F,EAAgB6B,QACzCC,KAAIyB,GACmB,MAAjBA,OAAuB,EACE,CAC3B,CACExH,MAAO,oBACPG,MAAOqH,EAAcuB,SAASC,iBAAiBlK,WAC/Ce,KAAO2H,EAAcuB,SAASC,iBAE1B,CACAlJ,IAAK2G,OAAO/H,MAAMN,KAAKO,OAAO,2CAC9BqB,MAAO,SACPO,OAAQ,eAJRkD,GAON,CACEzD,MAAO,iBACPG,MAAOqH,EAAcuB,SAASE,cAAcnK,WAC5Ce,KAAO2H,EAAcuB,SAASE,cAE1B,CACAnJ,IAAK2G,OAAO/H,MAAMN,KAAKO,OAAO,qBAC9BqB,MAAO,SACPO,OAAQ,eAJRkD,MAWZnF,KAAK6K,cAAaf,KAAc,CAACV,EAAcS,EAAY7J,MAAK6F,EAAW2E,EAAcI,IAAgBpD,QACvGC,KAAI,EAAEvD,EAAaG,EAAWO,EAASG,EAAaC,MAAY,CAE5Dd,cACAG,YACAO,UACAG,cACAC,kBAKR,CAACvE,SAAAT,KAAA,mBAAAU,iBArOU2E,GAAmB1E,MAAAC,MAAA,EAAAH,SAAAT,KAAA,UAAAc,EAAAgK,IAAA,MAAnBzF,EAAmB0F,UAAA,sBAAAC,YAAA,EAAAjF,SAAA,CAAApF,OAAAsK,MAAA,EAAAC,KAAA,EAAAC,OAAA,2oCAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IDnDhC1K,MAAA,EAAA4K,GAAA,iCAyNA5K,MAAA,EAAA6K,GAAA,yBAAA7K,OAOAA,MAAA,+BAhOAA,MAAA,GAAA8K,EAAA9K,MAAA,IAAA2K,EAAAT,aAAA,KAAAY,mBCoCIC,KAAa7K,mCACb8K,KAAaC,KACbC,KACAC,KACAC,KAAeC,UACfC,KAAWC,kDACXC,KAAkBC,UAClBC,KAAcC,KACdC,KACAC,KACAC,IACAC,IACAC,cAGStH,CAAmB,sCCjDzB,MAAMmB,EAAe,CAC1BoG,qBAAsB,uBACtBC,sBAAuB,wBACvBC,wBAAyB,0BACzBC,gBAAiB,kBACjBC,sBAAuB,wBACvBC,mBAAoB,qBACpBC,0BAA2B,4BAC3BzG,WAAY,wBACZC,sBAAuB,wBACvByG,sBAAuB,wBACvBC,2BAA4B,6BAE5BC,wBAAyB,+LCbvB1M,MAAA,gCAA+BA,MAAA,mBAAAA,MAAAsC,GAAA,MAAAqK,EAAA3M,MAAA,UAAAA,MAAS2M,EAAAC,aAAY,GAClD5M,MAAA,cAAwCA,MAAA,GAAaA,QAEnDA,MADF,UACEA,CADqC,WACAA,MAAA,wBAAgDA,QACrFA,MAAA,WAAwCA,MAAA,yBAE5CA,oCANsDA,MAAA,QAAAA,MAAA,uBAAA6M,EAAAC,UAC1C9M,MAAA,GAAAA,MAAA,aAAA6M,EAAAE,KAAA,IAA8B/M,cAAA6M,EAAAE,MAED/M,MAAA,GAAAA,YAAA,sCACGA,MAAA,GAAAA,YAAA,4DAL9CA,MAAA,EAAAgN,EAAA,oBAAAhN,MAAA,EAAA2K,EAAAsC,KAAA,4BAUAjN,MAAA,SAAKA,MAAA,gBAAUA,+BAGfA,MAAA,SAAKA,MAAA,gBAAUA,SCOV,IAAM8L,EAAyB,MAAhC,MAAOA,UAAiCoB,IAC5C,UACWC,CAAOjM,GAAkB7B,KAAK+N,QAAQrF,KAAK7G,EAAQ,CAK9DhC,cACEmO,QALFhO,KAAA+N,QAAU,IAAInH,KAAyB,GAMrC5G,KAAK6K,cAAaf,KAAc,CAAC9J,KAAKiO,SAAUjO,KAAK+N,QAAS/N,KAAKkO,QAAQ1G,QACzEC,KAAI,EAAEgG,EAASK,EAAQF,MAAI,CAEzBH,UACAC,KAAMI,EAAS,OAAS,UACxBF,UAGN,CAACnN,SAAAT,KAAA,mBAAAU,iBAjBU+L,EAAwB,EAAAhM,SAAAT,KAAA,UAAAmO,EAAArD,IAAA,MAAxB2B,EAAwB1B,UAAA,4BAAAqD,OAAA,CAAAN,OAAA,UAAA9C,YAAA,EAAAjF,SAAA,CAAApF,aAAAsK,MAAA,EAAAC,KAAA,EAAAC,OAAA,4LAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IDrBrC1K,MAAA,EAAA0N,EAAA,sBAaA1N,MAHE,EAAA2N,EAAA,IAGF3N,CAHS,EAAA4N,EAAA,yBAAA5N,mBAVTA,MAAA,GAAA8K,EAAA9K,MAAA,IAAA2K,EAAAT,aAAA,IAAAY,mBCeIE,KAAa/K,KACb4L,KACAgC,IAAe3N,KACf8L,KAAc8B,OAAA,6rBAGLhC,CAAyB,wHCd/B,MAAMiC,EAAgB,aAGtB,IAAMC,EAAgB,MAAvB,MAAOA,EACX9O,YAAoBC,EAA0B8O,EAA0B7O,GAApDC,KAAAF,OAA0BE,KAAA4O,UAA0B5O,KAAAD,YAA0B,CAElG8O,UAAUC,EAAYC,EAAqBC,GAAmB,GAC5D,MAAMC,EAAW,IAAIC,SACrBD,SAASE,OAAO,OAAQL,GACxBG,EAASE,OAAO,OAAQJ,GAAe,IAChC/O,KAAKF,KAAKsP,KAAuBpP,KAAKD,WAAWK,MAAMN,KAAKO,OAAOqO,EAAgB,UAAWO,EAAU,CAC7G1O,OAAQ,CAAE8O,OAAQrP,KAAK4O,QAAQS,OAAO7O,cACrCgH,QACD8H,KAAUC,IACR,GAAIP,GAAoBO,EAAO9E,SAAS,IAAI+E,cAAgBC,KAAuBC,QAAS,CAC1F,MAAMC,EAAaC,OAAOL,EAAO9E,SAAS,GAAGoF,KAAO,4DACpD,GAAIF,EACF,OAAO3P,KAAK6O,UAAUC,EAAMa,GAAY,GAG5C,SAAOG,MAAGP,EAAM,GAGtB,CAAC9O,SAAAT,KAAA,mBAAAU,iBApBUiO,GAAgBhO,MAAAC,MAAAD,MAAAE,KAAAF,MAAAiL,MAAA,EAAAnL,SAAAT,KAAA,WAAA+P,EAAAhP,IAAA,OAAhB4N,EAAgB3N,QAAhB2N,EAAgB1N,mBAAhB0N,CAAgB,uICNrBhO,MAAA,4BADFA,MAAA,cACEA,MAAA,EAAAqP,EAAA,sBACFrP,uCADiBA,cAAA,mBAAAsP,yBAKftP,MAAA,4BADFA,MAAA,eACEA,MAAA,EAAAuP,EAAA,sBACFvP,uCADiBA,cAAA,mBAAAsP,yBAOrBtP,MAAA,GCDK,IAAM+L,EAAkB,MAAzB,MAAOA,EAIX7M,cAHSG,KAAAmQ,SAAU,EACnBnQ,KAAAoQ,SAAU,CAEM,CAEhBC,gBACErQ,KAAKoQ,SAAWpQ,KAAKoQ,OACvB,CAAC3P,SAAAT,KAAA,mBAAAU,iBARUgM,EAAkB,EAAAjM,SAAAT,KAAA,UAAAsQ,EAAAxF,IAAA,MAAlB4B,EAAkB3B,UAAA,qBAAAqD,OAAA,CAAA+B,QAAA,WAAAnF,YAAA,EAAAjF,SAAA,CAAApF,OAAA4P,mBAAAnM,EAAA6G,MAAA,EAAAC,KAAA,EAAAC,OAAA,2EAAAC,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,yBDf/B1K,MAAA,WAAsBA,MAAA,mBAAAA,aAAAsC,GAAAtC,MAAS2K,EAAA+E,gBAAe,GAO1C1P,MALA,EAAA6P,EAAA,IAKA7P,CALe,EAAA8P,EAAA,KAWnB9P,QAEAA,MAAA,EAAA+P,EAAA,yBAAA/P,qBAfgDA,MAAA,UAAAA,MAAA,EAAA4D,EAAA+G,EAAA8E,UAC9CzP,cAAA,QAAAgQ,EAAArF,EAAA6E,SAAK,GAAL,IAAKQ,EAAD,sBCSFxE,KAAkBvL,UAClBgQ,KACA9E,MAAgB2C,OAAA,+cAGP/B,CAAkB,oBCdzB,SAAU9K,EAAgBiP,GAC9B,MAAMC,EAAKlI,SAASmI,cAAc,YAClCD,EAAGjP,MAAQgP,EACXC,EAAGE,aAAa,WAAY,IAC5BF,EAAGG,MAAMC,SAAW,WACpBJ,EAAGG,MAAME,KAAO,UAChBvI,SAASwI,KAAKC,YAAYP,GAC1B,MAAMQ,EACJ1I,SAAS2I,eAAeC,WAAa,GACjC5I,SAAS2I,eAAeE,WAAW,GAEzCX,EAAGY,SACH9I,SAAS+I,YAAY,QACrB/I,SAASwI,KAAKQ,YAAYd,GACtBQ,IACF1I,SAAS2I,eAAeM,kBACxBjJ,SAAS2I,eAAeO,SAASR,GAErC,sICbA,MAAMS,EAAW,CACfC,SAAS,EACTC,KAAM,uBACNC,MAAO,CACLlL,kBAAkB,IAUf,IAAMV,EAAqB,MAA5B,MAAOA,UAA6B6L,IAIxCtS,YACSyI,EACA8J,GAEPpE,QAHOhO,KAAAsI,SACAtI,KAAAoS,QAJTpS,KAAAqS,IAAM,IAAIC,IAAUP,EAOpB,CAEA9K,cACE+G,MAAMuE,SACR,CAEA,YAAIC,GAAa,OAAOxS,KAAKoS,MAAMI,QAAU,CAE7C,OAAIhR,GAAQ,OAAOxB,KAAKsI,OAAO9G,GAAK,CAEpCiR,QAAmB,OAAOzS,KAAKsI,OAAOoK,uBAAuBC,QAAQF,KAAY,CAK1EzL,iBAAiB4L,GACtB,MAAMzI,EAAInK,KAAKqS,IAAIQ,KAAK,oBACxB7S,KAAK8S,cAAcC,IACjB/S,KAAKgT,qBAAqBlL,UAAU,KAAQ8K,GAAQ,IAEtDzI,EAAE8I,KACJ,CAMOC,QAAQ1R,EAAamR,GAC1B,OAAO3S,KAAKsI,OAAOC,SAAS,CAAC/G,GAAMmR,EACrC,CAKOQ,YAAYC,EAAiBT,GAClC,OAAO3S,KAAKsI,OAAOC,SAAS6K,EAAU,IAAKT,EAAQU,WAAYrT,KAAKoS,OACtE,CAEOkB,oBAAoBF,EAAiBT,GAC1C,OAAO3S,KAAKsI,OAAOC,SAAS6K,EAAU,IAAKT,EAAQU,WAAYrT,KAAKoS,MAAMmB,OAAOC,YACnF,CAEAR,qBACE,OAAOhT,KAAKsI,OAAOmL,OAAOjM,QACxB0C,KAAOwJ,GAASA,aAAiBC,OAAa,EAC9CC,OAAY5T,KAAKoS,MAAMI,SAASgB,aAAU,EAC1C/L,KAAI,MAAQzH,KAAKoS,MAAMI,SAASgB,aAAU,EAC1CK,QAAQ,EACR3J,KAAO,EAAE4J,EAAgBC,KAAiBD,IAAmBC,GAEjE,CAACtT,SAAAT,KAAA,mBAAAU,iBA3DU4F,GAAoB3F,MAAAC,MAAAD,MAAAC,MAAA,EAAAH,SAAAT,KAAA,WAAAgU,EAAAjT,IAAA,OAApBuF,EAAoBtF,QAApBsF,EAAoBrF,mBAApBqF,CAAqB,8DCf3B,IAAe6L,EAAW,MAA3B,MAAgBA,EADtBtS,cAGYG,KAAA8S,cAAgB,IAAImB,KAG9BhN,cACEjH,KAAKuS,SACP,CAEAA,UACEvS,KAAK8S,cAAcoB,aACrB,CAACzT,SAAAT,KAAA,mBAAAU,iBAXmByR,EAAW,EAAA1R,SAAAT,KAAA,WAAAmO,EAAApN,IAAA,OAAXoR,EAAWnR,QAAXmR,EAAWlR,mBAAXkR,CAAW","names":["SxcInsightsService","constructor","http","dnnContext","this","activatePageLog","duration","get","$2sxc","apiUrl","webApiLogRoot","params","toString","static","t","i0","i1","i2","core","jDH","factory","ɵfac","_r5","info_r3","$implicit","ctx_r3","openSideNavPath","link","url","_c4","label","_r2","copyToClipboard","value","SystemInfoComponent_Conditional_0_For_12_Conditional_6_Template","_r8","info_r7","target","SystemInfoComponent_Conditional_0_For_36_Conditional_6_Conditional_0_Template","SystemInfoComponent_Conditional_0_For_36_Conditional_6_Conditional_1_Template","_r6","SystemInfoComponent_Conditional_0_For_36_Conditional_6_Template","SystemInfoComponent_Conditional_0_Conditional_119_Conditional_0_Template","duration_r10","errors","pattern","info_r12","SystemInfoComponent_Conditional_0_For_135_Conditional_6_Conditional_0_Template","SystemInfoComponent_Conditional_0_For_135_Conditional_6_Conditional_1_Template","_r11","SystemInfoComponent_Conditional_0_For_135_Conditional_6_Template","SystemInfoComponent_Conditional_0_For_12_Template","SystemInfoComponent_Conditional_0_ng_container_19_Template","_r1","openGlobalSettings","SystemInfoComponent_Conditional_0_For_36_Template","SystemInfoComponent_Conditional_0_ng_container_44_Template","openSiteSettings","SystemInfoComponent_Conditional_0_Conditional_61_Template","SystemInfoComponent_Conditional_0_ng_container_64_Template","SystemInfoComponent_Conditional_0_Conditional_76_Template","SystemInfoComponent_Conditional_0_ng_container_79_Template","SystemInfoComponent_Conditional_0_ng_container_98_Template","openInsights","activateLogForm_r9","$event","pageLogDuration","SystemInfoComponent_Conditional_0_Conditional_119_Template","SystemInfoComponent_Conditional_0_For_135_Template","vm_r13","systemInfos","docsLink_r14","_c0","siteInfos","lsEnabled","_c1","cspEnabled","_c2","_c3","positiveWholeNumber","loading","touched","valid","warningIcon","warningInfos","tmp_7_0","icon_r15","undefined","label_r16","SystemInfoComponent","#dialogSettings","#sxcInsightsService","#zoneSvc","#dialogSvc","#dialogRouter","#systemInfoSet$","#languages$","#loading$","snackBar","features","inject","FeaturesService","transient","AppDialogConfigService","ZoneService","DialogService","DialogRoutingService","isEnabled","FeatureNames","LightSpeed","ContentSecurityPolicy","ngOnInit","BehaviorSubject","buildViewModel","getSystemInfo","getLanguages","doOnDialogClosed","ngOnDestroy","complete","text","open","openParentAppSettings","partName","getCurrent$","pipe","map","dc","Context","PrimaryApp","take","subscribe","appIdentity","openAppAdministration","ZoneId","AppId","window","sideNavPath","includes","router","navigate","replace","form","next","res","document","activeElement","HTMLElement","blur","resetForm","error","systemInfoSet","languages","systemInfos$","System","EavVersion","Platform","PlatformVersion","Zones","Fingerprint","License","Owner","siteInfos$","combineLatest","allLanguages","length","activeLanguages","filter","l","IsEnabled","Site","SiteId","Apps","warningIcon$","Messages","WarningsObsolete","WarningsOther","warningInfos$","viewModel$","VBU","selectors","standalone","decls","vars","consts","template","rf","ctx","SystemInfoComponent_Conditional_0_Template","SystemInfoComponent_ng_template_2_Template","tmp_1_0","MatCardModule","MatIconModule","i3","RouterLink","NgTemplateOutlet","MatButtonModule","i4","FormsModule","i5","MatFormFieldModule","i6","MatInputModule","i7","RouterOutlet","AsyncPipe","FeatureTextInfoComponent","FieldHintComponent","TippyDirective","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","PermissionsByLanguage","FieldShareConfigManagement","AppExportAssetsAdvanced","ctx_r1","openDialog","vm_r3","feature","icon","FeatureTextInfoComponent_Conditional_0_Conditional_0_Template","show","FeatureComponentBase","asInfo","asInfo$","super","feature$","show$","_angular_core__WEBPACK_IMPORTED_MODULE_1__","inputs","FeatureTextInfoComponent_Conditional_0_Template","FeatureTextInfoComponent_Conditional_2_Template","FeatureTextInfoComponent_ng_template_3_Template","TranslateModule","styles","webApiAppRoot","ImportAppService","context","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","post","zoneId","switchMap","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","ngContentSelectors","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","tmp_2_0","NgClass","str","el","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","logSpecs","enabled","name","specs","ServiceBase","route","log","EavLogger","destroy","snapshot","state","getCurrentNavigation","extras","callback","fnIf","subscriptions","add","childDialogClosed$","end","navPath","navRelative","commands","relativeTo","navParentFirstChild","parent","firstChild","events","event","NavigationEnd","startWith","pairwise","hadChildBefore","hasChildNow","_angular_core__WEBPACK_IMPORTED_MODULE_7__","Subscription","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/services/sxc-insights.service.ts","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.html","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.ts","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.html","./projects/eav-ui/src/app/features/feature-text-info/feature-text-info.component.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n      params: { duration: duration.toString() }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-cards-box\">\r\n    <!-- Platform Info -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">settings_applications</mat-icon>\r\n        </div>\r\n        <mat-card-title>Platform</mat-card-title>\r\n        <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        @for (info of vm.systemInfos; track info) {\r\n          <div class=\"eav-info-row\">\r\n            <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n            <div class=\"eav-info-row__value\">\r\n              <span class=\"eav-info-row__value__span eav-click\" [tippy]=\"info.value\"\r\n                (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n              @if (info.link) {\r\n                <a class=\"eav-info-row__link\" [routerLink]=\"['/']\" (click)=\"openSideNavPath(info.link.url)\">\r\n                  {{ info.link.label }}\r\n                </a>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n        <h4>Global Settings</h4>\r\n        <p>\r\n          This includes both pre-defined SystemSettings as well as custom Settings.\r\n          It will affect the entire Installation.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openGlobalSettings()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open Global Settings</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Site Info -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">public</mat-icon>\r\n        </div>\r\n        <mat-card-title>This Site</mat-card-title>\r\n        <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        @for (info of vm.siteInfos; track info) {\r\n          <div class=\"eav-info-row\">\r\n            <div class=\"eav-info-row__label\">{{ info.label }}:</div>\r\n            <div class=\"eav-info-row__value\">\r\n              <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n              @if (info.link) {\r\n                @if (info.link.target === 'angular') {\r\n                  <a [routerLink]=\"['/']\" class=\"eav-info-row__link\" (click)=\"openSideNavPath(info.link.url)\" >\r\n                  {{info.link.label }}\r\n                  </a>\r\n                }\r\n                @if (info.link.target !== 'angular') {\r\n                  <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n                }\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n        <div class=\"card-content-separator\"></div>\r\n        <h4>Site Settings</h4>\r\n        <p>\r\n          This includes both pre-defined SystemSettings as well as custom Settings.\r\n          It will affect the entire Site / Portal.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openSiteSettings()\">\r\n          <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n          <span>Open Site Settings</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Performance / Lightspeed -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">bolt</mat-icon>\r\n        </div>\r\n        <mat-card-title>Performance</mat-card-title>\r\n        <mat-card-subtitle>Performance Enhancements and Caching</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <app-feature-text-info [featureNameId]=\"'LightSpeedOutputCache'\" [asInfo]=\"true\"></app-feature-text-info>\r\n        @if (lsEnabled()) {\r\n          <div>\r\n            LightSpeed is enabled.\r\n            Configure it in each site/app as you need.\r\n          </div>\r\n        }\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/lightspeed' }\"></ng-container>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Security -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">local_police</mat-icon>\r\n        </div>\r\n        <mat-card-title>Security</mat-card-title>\r\n        <mat-card-subtitle>System Security Features</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <app-feature-text-info [featureNameId]=\"'ContentSecurityPolicy'\" [asInfo]=\"true\"></app-feature-text-info>\r\n        @if (cspEnabled()) {\r\n          <div>\r\n            ContentSecurityPolicy is enabled.\r\n            Configure it in each site/app as you need.\r\n          </div>\r\n        }\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/csp' }\"></ng-container>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Insights -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">speed</mat-icon>\r\n        </div>\r\n        <mat-card-title>2sxc Insights</mat-card-title>\r\n        <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <h4>2sxc Insights for Super Users</h4>\r\n        <p>\r\n          This is to access a special section to see what is really in the server memory.\r\n          It's intended for extensive debugging - see also\r\n          <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n        </p>\r\n        <div align=\"start\">\r\n          <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/insights' }\"></ng-container>\r\n          <button mat-button class=\"eav-button__with-icon\" (click)=\"openInsights()\">\r\n            <mat-icon class=\"eav-icon\">open_in_new</mat-icon>\r\n            <span>Open 2sxc Insights</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"card-content-separator\"></div>\r\n        <h4>Activate Page Level Logging</h4>\r\n        <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n          <div>\r\n            This will place insights-logs in the HTML of the user output for users with <code>?debug=true</code> in the\r\n            url.\r\n            It can only be activated for short periods of time.\r\n          </div>\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Duration in Minutes</mat-label>\r\n            <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n              name=\"Duration\" #duration=\"ngModel\" [disabled]=\"vm.loading\">\r\n          </mat-form-field>\r\n          @if (duration.touched && duration.errors) {\r\n            @if (duration.errors.pattern) {\r\n              <app-field-hint [isError]=\"true\">\r\n                Only positive whole numbers\r\n              </app-field-hint>\r\n            }\r\n          }\r\n        </form>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!activateLogForm.valid || vm.loading\">\r\n          Activate\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Warnings -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar>\r\n          <mat-icon class=\"eav-card-header-avatar-icon\">{{ vm.warningIcon }}</mat-icon>\r\n        </div>\r\n        <mat-card-title>Warnings</mat-card-title>\r\n        <mat-card-subtitle>System and Code Warnings</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        @for (info of vm.warningInfos; track info) {\r\n          <div class=\"eav-info-row\">\r\n            <div class=\"eav-info-row__label eav-long\">{{ info.label }}:</div>\r\n            <div class=\"eav-info-row__value\">\r\n              <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n              @if (info.link) {\r\n                @if (info.link.target === 'angular') {\r\n                  <a class=\"eav-info-row__link\" [routerLink]=\"info.link.url\">\r\n                    {{info.link.label}}</a>\r\n                }\r\n                @if (info.link.target !== 'angular') {\r\n                  <a class=\"eav-info-row__link\" [href]=\"info.link.url\" [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n                }\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n    </mat-card>\r\n  </div>\r\n}\r\n\r\n\r\n<ng-template #docsLink let-icon let-label let-link=\"link\">\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{link}}\" target=\"_blank\" [tippy]=\"'online documentation'\">\r\n    <mat-icon class=\"eav-icon\">{{ icon ?? \"menu_book\" }}</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </a>\r\n</ng-template>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { NgForm, FormsModule } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable, take } from 'rxjs';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate, SystemInfoViewModel } from './system-info.models';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgTemplateOutlet, AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { transient } from '../../core';\r\nimport { AppDialogConfigService } from '../../app-administration/services/app-dialog-config.service';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    RouterLink,\r\n    NgTemplateOutlet,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    FeatureTextInfoComponent,\r\n    FieldHintComponent,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class SystemInfoComponent implements OnInit, OnDestroy {\r\n\r\n  public features: FeaturesService = inject(FeaturesService);\r\n\r\n  #dialogSettings = transient(AppDialogConfigService);\r\n  #sxcInsightsService = transient(SxcInsightsService);\r\n  #zoneSvc = transient(ZoneService);\r\n  #dialogSvc = transient(DialogService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  viewModel$: Observable<SystemInfoViewModel>;\r\n\r\n  #systemInfoSet$: BehaviorSubject<SystemInfoSet | undefined>;\r\n  #languages$: BehaviorSubject<SiteLanguage[] | undefined>;\r\n  #loading$: BehaviorSubject<boolean>;\r\n\r\n  protected lsEnabled = this.features.isEnabled(FeatureNames.LightSpeed);\r\n  protected cspEnabled = this.features.isEnabled(FeatureNames.ContentSecurityPolicy);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.#systemInfoSet$ = new BehaviorSubject<SystemInfoSet | undefined>(undefined);\r\n    this.#languages$ = new BehaviorSubject<SiteLanguage[] | undefined>(undefined);\r\n    this.#loading$ = new BehaviorSubject<boolean>(false);\r\n    this.buildViewModel();\r\n    this.getSystemInfo();\r\n    this.getLanguages();\r\n    this.#dialogRouter.doOnDialogClosed(() => {\r\n      this.buildViewModel();\r\n      this.getSystemInfo();\r\n      this.getLanguages();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.#systemInfoSet$.complete();\r\n    this.#languages$.complete();\r\n    this.#loading$.complete();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    this.openParentAppSettings(\"Site\");\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    this.openParentAppSettings(\"System\");\r\n  }\r\n\r\n  openParentAppSettings(partName: \"System\" | \"Site\"): void {\r\n    this.#dialogSettings.getCurrent$()\r\n      .pipe(map(dc => dc?.Context[partName].PrimaryApp), take(1))\r\n      .subscribe(appIdentity => {\r\n        this.#dialogSvc.openAppAdministration(appIdentity.ZoneId, appIdentity.AppId, 'app');\r\n      })\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n\r\n  openSideNavPath(sideNavPath: string): void {\r\n\r\n    // Url are /2/apps/system/registration, sideNavPath are only the last part of the url\r\n    if (sideNavPath.includes('registration'))\r\n      sideNavPath = 'registration';\r\n\r\n    const router = this.#dialogRouter.router;\r\n    router.navigate([router.url.replace('system', '') + sideNavPath]);\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.#loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.#sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.#loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.#zoneSvc.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.#systemInfoSet$.next(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.#systemInfoSet$.next(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private getLanguages(): void {\r\n    this.#zoneSvc.getLanguages().subscribe({\r\n      error: () => {\r\n        this.#languages$.next(undefined);\r\n      },\r\n      next: (languages) => {\r\n        this.#languages$.next(languages);\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildViewModel(): void {\r\n    // TODO: @2dg - this should be easy to get rid of #remove-observables\r\n    // ...but it will take a bit longer, as it's a bit more complex.\r\n    const systemInfos$ = this.#systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) return;\r\n        const url = this.#dialogRouter.router.url + '/' + \"registration\";\r\n        const info: InfoTemplate[] = [\r\n          { label: 'CMS', value: `2sxc v.${systemInfoSet.System.EavVersion}` },\r\n          { label: 'Platform', value: `${systemInfoSet.System.Platform} v.${systemInfoSet.System.PlatformVersion}` },\r\n          { label: 'Zones', value: systemInfoSet.System.Zones.toString() },\r\n          { label: 'Fingerprint', value: systemInfoSet.System.Fingerprint },\r\n          {\r\n            label: 'Registered to',\r\n            value: systemInfoSet.License.Owner || '(unregistered)',\r\n            link: systemInfoSet.License.Owner\r\n              ? {\r\n                url,\r\n                label: 'manage',\r\n                target: 'angular',\r\n              }\r\n              : {\r\n                url,\r\n                label: 'register',\r\n                target: 'angular',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const siteInfos$ = combineLatest([this.#systemInfoSet$, this.#languages$]).pipe(\r\n      map(([systemInfoSet, languages]) => {\r\n        if (systemInfoSet == null || languages == null) return;\r\n        const allLanguages = languages.length;\r\n        const activeLanguages = languages.filter(l => l.IsEnabled).length;\r\n        const info: InfoTemplate[] = [\r\n          { label: 'Zone', value: systemInfoSet.Site.ZoneId.toString() },\r\n          { label: 'Site', value: systemInfoSet.Site.SiteId.toString() },\r\n          {\r\n            label: 'Languages',\r\n            value: `${activeLanguages}/${allLanguages}`,\r\n            link: {\r\n              url: 'languages',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n          {\r\n            label: 'Apps',\r\n            value: systemInfoSet.Site.Apps.toString(),\r\n            link: {\r\n              url: 'list',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const warningIcon$ = this.#systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) return;\r\n        if (systemInfoSet.Messages.WarningsObsolete || systemInfoSet.Messages.WarningsOther) {\r\n          return 'warning';\r\n        }\r\n        return 'check';\r\n      }),\r\n    );\r\n    const warningInfos$ = this.#systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) return;\r\n        const info: InfoTemplate[] = [\r\n          {\r\n            label: 'Warnings Obsolete',\r\n            value: systemInfoSet.Messages.WarningsObsolete.toString(),\r\n            link: !systemInfoSet.Messages.WarningsObsolete\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n          {\r\n            label: 'Warnings Other',\r\n            value: systemInfoSet.Messages.WarningsOther.toString(),\r\n            link: !systemInfoSet.Messages.WarningsOther\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      }),\r\n    );\r\n    this.viewModel$ = combineLatest([systemInfos$, siteInfos$, this.#loading$, warningIcon$, warningInfos$]).pipe(\r\n      map(([systemInfos, siteInfos, loading, warningIcon, warningInfos]) => {\r\n        const viewModel: SystemInfoViewModel = {\r\n          systemInfos,\r\n          siteInfos,\r\n          loading,\r\n          warningIcon,\r\n          warningInfos,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n  \r\n};\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (vm.show) {\r\n    <div class=\"feature-text-info\" (click)=\"openDialog()\" [tippy]=\"'Features.Tooltip' | translate: vm.feature\">\r\n      <mat-icon class=\"icon icon-{{vm.icon}}\">{{ vm.icon }}</mat-icon>\r\n      <div class=\"feature-text-info-content\">\r\n        <div class=\"feature-text-info-title\">{{ 'Features.FeatureNotActivated' | translate }}</div>\r\n        <div class=\"feature-text-info-subtitle\">{{ 'Features.ClickToFindOutMore' | translate }}</div>\r\n      </div>\r\n    </div>\r\n  }\r\n} @else {\r\n  <div>loading...</div>\r\n}\r\n<ng-template #loading>\r\n  <div>loading...</div>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureComponentBase } from '../shared/base-feature.component';\r\nimport { BehaviorSubject, map, Observable, combineLatest } from 'rxjs';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-feature-text-info',\r\n  templateUrl: './feature-text-info.component.html',\r\n  styleUrls: ['./feature-text-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeatureTextInfoComponent extends FeatureComponentBase {\r\n  @Input()\r\n  public set asInfo(value: boolean) { this.asInfo$.next(value); }\r\n  asInfo$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FeatureTextInfoViewModel>;\r\n\r\n  constructor() {\r\n    super();\r\n    this.viewModel$ = combineLatest([this.feature$, this.asInfo$, this.show$]).pipe(\r\n      map(([feature, asInfo, show]) =>\r\n      ({\r\n        feature,\r\n        icon: asInfo ? 'info' : 'warning',\r\n        show\r\n      }))\r\n    );\r\n  }\r\n\r\n}\r\n\r\ninterface FeatureTextInfoViewModel {\r\n  feature: FeatureSummary;\r\n  icon: string;\r\n  show: boolean;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  enabled: false,\r\n  name: 'DialogRoutingService',\r\n  specs: {\r\n    doOnDialogClosed: true,\r\n  }\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase implements OnDestroy {\r\n\r\n  log = new EavLogger(logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.destroy();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => { callback(); })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/** Base class for services, withOUT logging */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  // todo use this instead\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  // Note: we can't do this, because angular compiler complains about wanting to implement OnDestroy\r\n  // and if we do that, it will want a decorator, which we can't have here.\r\n  // ngOnDestroy() {\r\n  //   this.destroy();\r\n  // }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}