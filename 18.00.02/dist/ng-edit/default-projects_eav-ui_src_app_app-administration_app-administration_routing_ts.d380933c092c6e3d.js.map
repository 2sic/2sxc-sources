{"version":3,"file":"default-projects_eav-ui_src_app_app-administration_app-administration_routing_ts.d380933c092c6e3d.js","mappings":"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","names":["appAdministrationDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","AppAdminMainComponent","Promise","all","__webpack_require__","e","then","bind","analyzeSettingsDialog","AnalyzeSettingsComponent","settingsItemDetailsDialog","SettingsItemDetailsComponent","editContentTypeDialog","EditContentTypeComponent","importContentTypeDialog","ImportContentTypeComponent","importQueryDialog","ImportQueryComponent","importViewDialog","ImportViewComponent","languagePermissionsDialog","LanguagePermissionsComponent","viewsUsageDialog","ViewsUsageComponent","ExportAppComponent","constructor","this","exportAppService","transient","ExportAppService","appInfo","signal","features","inject","FeaturesScopedService","expAssetsAdvEnabled","isEnabled","FeatureNames","AppExportAssetsAdvanced","includeContentGroups","model","resetAppGuid","assetsAdam","assetsAdamDeleted","assetsSite","downloadUrl","computed","exportAppUrl","ngOnInit","getAppInfo","subscribe","set","static","t","core","VBU","selectors","inputs","i0","SignalBased","outputs","standalone","decls","vars","consts","template","rf","ctx","$event","tmp_1_0","Name","tmp_2_0","Guid","tmp_3_0","Version","tmp_4_0","EntitiesCount","tmp_5_0","LanguagesCount","tmp_6_0","TemplatesCount","HasTokenTemplates","HasRazorTemplates","tmp_7_0","TransferableFilesCount","tmp_8_0","FilesCount","MatCheckboxModule","i1","FormsModule","i2","MatDialogActions","MatButtonModule","i3","MatIconModule","i4","FeatureIconComponent","styles","scopeOption_r3","value","template_r7","_r6","$implicit","_export","Id","ExportAppPartsComponent_Conditional_0_Conditional_35_For_5_Conditional_5_For_4_Template","contentType_r5","Templates","entity_r9","_r8","Title","ExportAppPartsComponent_Conditional_0_Conditional_35_For_5_Conditional_6_For_4_Template","Entities","_r4","ExportAppPartsComponent_Conditional_0_Conditional_35_For_5_Conditional_5_Template","ExportAppPartsComponent_Conditional_0_Conditional_35_For_5_Conditional_6_Template","length","template_r11","_r10","ExportAppPartsComponent_Conditional_0_Conditional_35_For_5_Template","ExportAppPartsComponent_Conditional_0_Conditional_35_For_10_Template","ctx_r1","contentInfo","ContentTypes","TemplatesWithoutContentTypes","_r1","changeScope","ExportAppPartsComponent_Conditional_0_For_25_Template","unlockScope","ExportAppPartsComponent_Conditional_0_Conditional_35_Template","exportAppParts","loading","exportScope","lockScope","scopeOptions","dropdownInsertValue","isExporting","ExportAppPartsComponent","#exportAppPartsSvc","#contentTypesSvc","hostClass","ExportAppPartsService","ContentTypesService","eavConstants","scopes","default","loading$","BehaviorSubject","viewModel$","combineLatest","pipe","map","#fetchScopes","#fetchContentInfo","ngOnDestroy","complete","contentTypeIds","#selectedContentTypes","contentType","templateIds","#selectedTemplates","entityIds","#selectedEntities","entity","concat","exportParts","newScope","prompt","find","option","unshift","next","getScopes","getContentInfo","filter","entities","templates","hostVars","hostBindings","ExportAppPartsComponent_Conditional_0_Template","tmp_0_0","MatFormFieldModule","MatSelectModule","MatOptionModule","i5","i6","i7","AsyncPipe","FieldHintComponent","ClickStopPropagationDirective","TippyDirective","MatDialogModule","file_r3","_c1","message_r4","MessageType","ctx_r4","FileUploadMessageTypes","Warning","Success","Error","Text","ImportAppPartsComponent_Conditional_19_Conditional_1_Template","ImportAppPartsComponent_Conditional_19_Conditional_2_Template","ImportAppPartsComponent_Conditional_19_For_4_Template","result","Messages","upload","files","uploading","ImportAppPartsComponent","BaseComponent","snackBar","sanitizer","context","changeDetectorRef","super","importAppPartsService","ImportAppPartsService","uploadType","UploadTypes","AppPart","undefined","showAppCatalog$","showProgress","remoteInstallerUrl","ready","importData","title","description","allowedFileTypes","upload$","importAppParts","installerService","InstallerService","installSettingsService","AppInstallSettingsService","alreadyProcessing","messages$","fromEvent","window","evt","origin","JSON","parse","data","console","error","Number","moduleId","effect","log","subscriptions","add","settings$","settings","bypassSecurityTrustResourceUrl","remoteUrl","filesDropped","loadGettingStarted","action","tap","winFrame","installerWindow","nativeElement","specsMsg","installedApps","rules","app","target","appGuid","guid","mode","url","specsJson","stringify","contentWindow","postMessage","Object","values","packages","msg","reduce","c","displayName","confirm","switchMap","detectChanges","installPackages","p","currentPackage","alert","top","location","reload","catchError","Message","message","of","setFiles","filesChanged","event","Array","from","take","open","duration","multiple","slice","viewQuery","ImportAppPartsComponent_Conditional_5_Template","fileInput_r2","click","ImportAppPartsComponent_Conditional_14_Template","ImportAppPartsComponent_For_16_Template","ImportAppPartsComponent_Conditional_19_Template","ImportAppPartsComponent_Conditional_20_Template","tmp_9_0","NgClass","MatProgressSpinnerModule","SafeHtmlPipe","DragAndDropDirective","exportAppXml","resetApp","_r3","AppStateComponent","#importAppPartsSvc","#exportAppSvc","#dialogConfigSvc","appStateAdvanced","DialogConfigAppService","getCurrent$","dialogSettings","dismiss","withFiles","exportForVersionControl","AppStateComponent_Conditional_13_Template","AppStateComponent_Conditional_14_Template","AppStateComponent_Conditional_15_Template","AppStateComponent_Conditional_16_Template","MatCardModule","MatSlideToggleModule","FeatureTextInfoComponent","appAdministrationRoutes","path","component","DialogEntryComponent","dialog","children","redirectTo","pathMatch","loadComponent","mod","GettingStartedComponent","breadcrumb","DataComponent","loadChildren","m","contentItemsRoutes","EditRoutes","GoToMetadata","getRoutes","GoToDevRest","route","contentTypeFieldsRoutes","ContentExportRoutes","contentImportRoutes","GoToPermissions","GoToCopilot","CopilotPageComponent","CopilotSpecs","routeData","DataRestApiComponent","paramTypeName","DevRestDataComponent","QueriesComponent","EditRoutesNoHistory","routeQuery","QueriesRestApiComponent","paramQuery","DevRestQueryComponent","ViewsComponent","views","WebApiComponent","webApi","routeWebApi","WebApiRestApiComponent","paramApiPath","DevRestApiComponent","AppConfigurationComponent","intro","heading","teaser","outputType","routeDefinition","part","icon","svgIcon","webApiTypeRoot","webApiTypeScopes","HttpServiceBase","retrieveContentType","staticName","http","get","apiUrl","params","appId","contentTypeId","retrieveContentTypes","scope","scopesData","old","keys","key","getScopesV2","save","post","appid","delete","StaticName","import","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","dnnContext","$2sxc","webApiAppPartsRoot","toString","join","webApiAppRoot","withPortalFiles","ImportAppService","importApp","changedName","retryOnDuplicate","folderName","_angular_core__WEBPACK_IMPORTED_MODULE_4__","defaultRoute","metadataRoutes","getUrl","targetType","keyType","dialogTitle","contentTypeStaticName","encodeURIComponent","getUrlApp","metadata","getUrlAttribute","attributeId","attribute","getUrlContentType","getUrlEntity","DnnContext","HttpClient","Context","_angular_core__WEBPACK_IMPORTED_MODULE_1__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/app-admin-main/app-admin-main.dialog-config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-content-type/import-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-query/import-query-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-view/import-view-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/language-permissions/language-permissions-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-dialog.config.ts","./projects/eav-ui/src/app/app-administration/app-menu/export-app/export-app.component.ts","./projects/eav-ui/src/app/app-administration/app-menu/export-app/export-app.component.html","./projects/eav-ui/src/app/app-administration/app-menu/export-app-parts/export-app-parts.component.html","./projects/eav-ui/src/app/app-administration/app-menu/export-app-parts/export-app-parts.component.ts","./projects/eav-ui/src/app/app-administration/app-menu/import-app-parts/import-app-parts.component.html","./projects/eav-ui/src/app/app-administration/app-menu/import-app-parts/import-app-parts.component.ts","./projects/eav-ui/src/app/app-administration/app-menu/app-state/app-state.component.html","./projects/eav-ui/src/app/app-administration/app-menu/app-state/app-state.component.ts","./projects/eav-ui/src/app/app-administration/app-administration.routing.ts","./projects/eav-ui/src/app/app-administration/copilot/copilot-specs.ts","./projects/eav-ui/src/app/app-administration/copilot/go-to-copilot.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/metadata/go-to-metadata.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/services/http-service-base.ts"],"sourcesContent":["import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appAdministrationDialog: DialogConfig = {\r\n  name: 'APP_ADMINISTRATION_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppAdminMainComponent } = await import('./app-admin-main.component');\r\n    return AppAdminMainComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const analyzeSettingsDialog: DialogConfig = {\r\n  name: 'ANALYZE_SETTINGS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AnalyzeSettingsComponent } = await import('./analyze-settings.component');\r\n    return AnalyzeSettingsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../../shared/models/dialog-config.model';\r\n\r\nexport const settingsItemDetailsDialog: DialogConfig = {\r\n  name: 'SETTINGS_ITEM_DETAILS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { SettingsItemDetailsComponent } = await import('./settings-item-details.component');\r\n    return SettingsItemDetailsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeComponent } = await import('./edit-content-type.component');\r\n    return EditContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importContentTypeDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentTypeComponent } = await import('./import-content-type.component');\r\n    return ImportContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importQueryDialog: DialogConfig = {\r\n  name: 'IMPORT_QUERY_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportQueryComponent } = await import('./import-query.component');\r\n    return ImportQueryComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importViewDialog: DialogConfig = {\r\n  name: 'IMPORT_VIEW_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportViewComponent } = await import('./import-view.component');\r\n    return ImportViewComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const languagePermissionsDialog: DialogConfig = {\r\n  name: 'LANGUAGE_PERMISSIONS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { LanguagePermissionsComponent } = await import('./language-permissions.component');\r\n    return LanguagePermissionsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const viewsUsageDialog: DialogConfig = {\r\n  name: 'VIEWS_USAGE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ViewsUsageComponent } = await import('./views-usage.component');\r\n    return ViewsUsageComponent;\r\n  }\r\n};\r\n","import { Component, computed, HostBinding, inject, model, OnInit, signal } from '@angular/core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { AppInfo } from '../../models/app-info.model';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { transient } from '../../../core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FeaturesScopedService } from '../../../features/features-scoped.service';\r\nimport { FeatureNames } from '../../../features/feature-names';\r\nimport { FeatureIconIndicatorComponent } from '../../../features/feature-icon-indicator/feature-icon-indicator.component';\r\nimport { FeatureIconComponent } from '../../../features/feature-icon/feature-icon.component';\r\n\r\n@Component({\r\n  selector: 'app-export-app',\r\n  templateUrl: './export-app.component.html',\r\n  styleUrls: ['./export-app.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n\r\n    FeatureIconIndicatorComponent,\r\n    FeatureIconComponent,\r\n  ],\r\n})\r\nexport class ExportAppComponent implements OnInit {\r\n\r\n  private exportAppService = transient(ExportAppService);\r\n\r\n  appInfo = signal<AppInfo>(null);\r\n\r\n  public features = inject(FeaturesScopedService);\r\n  public expAssetsAdvEnabled = this.features.isEnabled(FeatureNames.AppExportAssetsAdvanced);\r\n\r\n  ngOnInit() {\r\n    this.exportAppService.getAppInfo().subscribe(appInfo => this.appInfo.set(appInfo));\r\n  }\r\n\r\n  // Use Signals\r\n  includeContentGroups = model(false);\r\n  resetAppGuid = model(false);\r\n  assetsAdam = model(true);\r\n  assetsAdamDeleted = model(false);\r\n  assetsSite = model(true);\r\n\r\n  downloadUrl = computed(() => this.exportAppService.exportAppUrl()\r\n   + `&includeContentGroups=${this.includeContentGroups()}&resetAppGuid=${this.resetAppGuid()}`\r\n   + `&assetsAdam=${this.assetsAdam()}&assetsSite=${this.assetsSite()}`\r\n  );\r\n\r\n}\r\n","<div class=\"outer-container-app\">\r\n  <h3>\r\n    Export app\r\n    {{ appInfo() == null ? '(loading details...)' : '' }}\r\n  </h3>\r\n  <div class=\"form-height\">\r\n    <p>\r\n      Pack the entire app to a <em>zip</em> folder which can be imported again to another site.\r\n      For further help visit <a href=\"https://2sxc.org/en/help?tag=export-app\" target=\"_blank\">2sxc Help</a>.\r\n    </p>\r\n\r\n    <p class=\"eav-app-info__title\">\r\n      Specs\r\n    </p>\r\n    <ul class=\"eav-app-info__content\">\r\n      <li>Name: {{ appInfo()?.Name }}</li>\r\n      <li>Guid: {{ appInfo()?.Guid }}</li>\r\n      <li>Version: {{ appInfo()?.Version }}</li>\r\n    </ul>\r\n\r\n    <p class=\"eav-app-info__title\">\r\n      Contains\r\n    </p>\r\n    <ul class=\"eav-app-info__content\">\r\n      <li>{{ appInfo()?.EntitiesCount }} entities</li>\r\n      <li>{{ appInfo()?.LanguagesCount }} languages</li>\r\n      <li>\r\n        {{ appInfo()?.TemplatesCount }} templates (Token: {{ appInfo()?.HasTokenTemplates }}, Razor:\r\n        {{ appInfo()?.HasRazorTemplates }})\r\n      </li>\r\n      <li>{{ appInfo()?.TransferableFilesCount }} files to export</li>\r\n      <li>{{ appInfo()?.FilesCount }} files in the app folder totally</li>\r\n    </ul>\r\n\r\n    <p class=\"eav-app-info__title\">\r\n      Advanced\r\n    </p>\r\n    <ul class=\"checkboxes\">\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"includeContentGroups\" [disabled]=\"resetAppGuid()\">\r\n          <br>\r\n          Include all content-groups to re-import the app in an exact copy of this site.\r\n          <br>\r\n          Only select this option when you copy an entire DNN site.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"resetAppGuid\" [disabled]=\"includeContentGroups()\">\r\n          <br>\r\n          Reset the app GUID to zero.\r\n          <br>\r\n          You only need this option for special tutorial apps, and usually must not select it.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <app-feature-icon [featureNameId]=\"'AppExportAssetsAdvanced'\"></app-feature-icon>\r\n        <mat-checkbox [(ngModel)]=\"assetsAdam\" [disabled]=\"!expAssetsAdvEnabled()\">\r\n          <br>\r\n          Include all ADAM assets.\r\n          <br>\r\n          This will include all App files in the <code>/adam</code> folder in your portal.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <app-feature-icon [featureNameId]=\"'AppExportAssetsAdvanced'\"></app-feature-icon>\r\n        <mat-checkbox [(ngModel)]=\"assetsAdamDeleted\" [disabled]=\"!expAssetsAdvEnabled()\">\r\n          <br>\r\n          Skip ADAM assets of deleted entities.\r\n          <br>\r\n          This will skip all ADAM files which are probably not in use any more, since the owning entities were deleted.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <app-feature-icon [featureNameId]=\"'AppExportAssetsAdvanced'\" ></app-feature-icon>\r\n        <mat-checkbox [(ngModel)]=\"assetsSite\" [disabled]=\"!expAssetsAdvEnabled()\">\r\n          <br>\r\n          Include all Site assets like images which are not in ADAM.\r\n          <br>\r\n          This will include all files used by your entities (eg. in link fields) which are not in you App-ADAM folder.\r\n        </mat-checkbox>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <a mat-button class=\"eav-button__with-icon\" [href]=\"downloadUrl()\" download>\r\n      <mat-icon class=\"eav-icon\">deployed_code_update</mat-icon>\r\n      <span>Download</span>\r\n    </a>\r\n  </mat-dialog-actions>\r\n</div>\r\n","<!-- TODO:: Remove viewModel broken, vm not in use, loading needs ? -->\r\n\r\n@if (viewModel$ | async; as vm) {\r\n\r\n  <pre>\r\n    <div>Old: {{vm.loading}}</div>\r\n    <div>New: {{loading()}} </div>\r\n  </pre>\r\n\r\n<div class=\"outer-container-app\">\r\n  <h3>Export Content and Templates from this App</h3>\r\n  <div class=\"form-height\">\r\n    <p>\r\n      To export Content-Types, Queries, Views or Data, use the respective tabs.\r\n    </p>\r\n    <p>\r\n      This is an advanced feature to export parts of the app.\r\n      The export will create an xml file which can be imported into another site or app.\r\n      To export the entire content of the app (for example when duplicating the entire site), go to the app export.\r\n      For further help visit <a href=\"https://2sxc.org/en/help?tag=export\" target=\"_blank\">2sxc Help</a>.\r\n    </p>\r\n    <div class=\"eav-edit-input\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select [ngModel]=\"exportScope\" name=\"Scope\" [disabled]=\"lockScope\" (ngModelChange)=\"changeScope($event)\">\r\n          @for (scopeOption of scopeOptions; track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n        <button mat-icon-button matTextSuffix [tippy]=\"lockScope ? 'Unlock' : 'Lock'\">\r\n          <mat-icon appClickStopPropagation (click)=\"unlockScope()\">\r\n            {{ lockScope ? 'lock' : 'lock_open' }}\r\n          </mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a appClickStopPropagation href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\">see help</a>\r\n      </app-field-hint>\r\n    </div>\r\n    @if (contentInfo) {\r\n    <div>\r\n      <ul class=\"eav-content-info__list eav-content-info__base\">\r\n        <p class=\"eav-content-info__title\">Content Types</p>\r\n        @for (contentType of contentInfo.ContentTypes; track contentType) {\r\n        <li class=\"eav-content-info__item\">\r\n          <div class=\"eav-option-box\">\r\n            <mat-checkbox [(ngModel)]=\"contentType._export\">\r\n              <span class=\"eav-option-box__text\">{{ contentType.Name }} ({{ contentType.Id }})</span>\r\n            </mat-checkbox>\r\n          </div>\r\n          @if (contentType.Templates.length > 0) {\r\n          <ul class=\"eav-content-info__list\">\r\n            <p class=\"eav-content-info__subtitle\">Templates</p>\r\n            @for (template of contentType.Templates; track template) {\r\n            <li class=\"eav-content-info__item\">\r\n              <div class=\"eav-option-box\">\r\n                <mat-checkbox [(ngModel)]=\"template._export\">\r\n                  <span class=\"eav-option-box__text\">{{ template.Name }} ({{ template.Id }})</span>\r\n                </mat-checkbox>\r\n              </div>\r\n            </li>\r\n            }\r\n          </ul>\r\n          }\r\n          @if (contentType.Entities.length > 0) {\r\n          <ul class=\"eav-content-info__list\">\r\n            <p class=\"eav-content-info__subtitle\">Entities</p>\r\n            @for (entity of contentType.Entities; track entity) {\r\n            <li class=\"eav-content-info__item\">\r\n              <div class=\"eav-option-box\">\r\n                <mat-checkbox [(ngModel)]=\"entity._export\">\r\n                  <span class=\"eav-option-box__text\">{{ entity.Title }} ({{ entity.Id }})</span>\r\n                </mat-checkbox>\r\n              </div>\r\n            </li>\r\n            }\r\n          </ul>\r\n          }\r\n        </li>\r\n        }\r\n      </ul>\r\n      <ul class=\"eav-content-info__list eav-content-info__base\">\r\n        <p class=\"eav-content-info__title\">Templates Without Content Types</p>\r\n        @for (template of contentInfo.TemplatesWithoutContentTypes; track template) {\r\n        <li class=\"eav-content-info__item\">\r\n          <div class=\"eav-option-box\">\r\n            <mat-checkbox [(ngModel)]=\"template._export\">\r\n              <span class=\"eav-option-box__text\">{{ template.Name }} ({{ template.Id }})</span>\r\n            </mat-checkbox>\r\n          </div>\r\n        </li>\r\n        }\r\n      </ul>\r\n    </div>\r\n    }\r\n  </div>\r\n\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Export selected Parts\"\r\n      [disabled]=\"loading() || isExporting()\" (click)=\"exportAppParts()\">\r\n      <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n      <span>Export Parts</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n}\r\n","import { Component, HostBinding, OnDestroy, OnInit, signal } from '@angular/core';\r\nimport {  MatDialogActions, MatDialogModule } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { dropdownInsertValue } from '../../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ContentInfo, ContentInfoEntity, ContentInfoTemplate } from '../../models/content-info.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\nimport { ExportAppPartsService } from '../../services/export-app-parts.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-export-app-parts',\r\n  templateUrl: './export-app-parts.component.html',\r\n  styleUrls: ['./export-app-parts.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    MatDialogModule,\r\n  ],\r\n})\r\nexport class ExportAppPartsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #exportAppPartsSvc = transient(ExportAppPartsService);\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n\r\n  contentInfo: ContentInfo;\r\n  exportScope = eavConstants.scopes.default.value;\r\n  scopeOptions: ScopeOption[];\r\n  lockScope = true;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n\r\n  loading = signal(false);\r\n  isExporting = signal(false);\r\n\r\n  // TODO: @2dg - this should be easy to get rid of #remove-observables\r\n  private loading$ = new BehaviorSubject(false);\r\n  viewModel$ = combineLatest([this.loading$]).pipe(\r\n    map(([loading]) => ({ loading })),\r\n  );\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.#fetchScopes();\r\n    this.#fetchContentInfo();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n  }\r\n\r\n  exportAppParts() {\r\n    this.isExporting.set(true);\r\n    // spm TODO: maybe optimize these functions to not loop content types and entities multiple times for no reason\r\n    // spm TODO: figure out how to capture window loading to disable export button\r\n    const contentTypeIds = this.#selectedContentTypes().map(contentType => contentType.Id);\r\n    const templateIds = this.#selectedTemplates().map(template => template.Id);\r\n    let entityIds = this.#selectedEntities().map(entity => entity.Id);\r\n    entityIds = entityIds.concat(templateIds);\r\n\r\n    this.#exportAppPartsSvc.exportParts(contentTypeIds, entityIds, templateIds);\r\n    this.isExporting.set(false);\r\n\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n      if (!this.scopeOptions.find(option => option.value === newScope)) {\r\n        const newScopeOption: ScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        this.scopeOptions.unshift(newScopeOption);\r\n      }\r\n    }\r\n    this.exportScope = newScope;\r\n    this.#fetchContentInfo();\r\n  }\r\n\r\n  unlockScope() {\r\n    this.lockScope = !this.lockScope;\r\n    if (this.lockScope) {\r\n      this.exportScope = eavConstants.scopes.default.value;\r\n      this.#fetchContentInfo();\r\n    }\r\n  }\r\n\r\n  #fetchScopes() {\r\n    this.loading$.next(true);\r\n    this.loading.set(true);\r\n    this.#contentTypesSvc.getScopes().subscribe(scopes => {\r\n      this.scopeOptions = scopes;\r\n      this.loading$.next(false);\r\n      this.loading.set(false);\r\n\r\n    });\r\n  }\r\n\r\n  #fetchContentInfo() {\r\n    this.loading$.next(true);\r\n    this.loading.set(true);\r\n    this.#exportAppPartsSvc.getContentInfo(this.exportScope).subscribe(contentInfo => {\r\n      this.contentInfo = contentInfo;\r\n      this.loading$.next(false);\r\n      this.loading.set(false);\r\n    });\r\n  }\r\n\r\n  #selectedContentTypes() {\r\n    return this.contentInfo.ContentTypes.filter(contentType => contentType._export);\r\n  }\r\n\r\n  #selectedEntities() {\r\n    let entities: ContentInfoEntity[] = [];\r\n    for (const contentType of this.contentInfo.ContentTypes) {\r\n      entities = entities.concat(contentType.Entities.filter(entity => entity._export));\r\n    }\r\n    return entities;\r\n  }\r\n\r\n  #selectedTemplates() {\r\n    let templates: ContentInfoTemplate[] = [];\r\n    // The ones with...\r\n    for (const contentType of this.contentInfo.ContentTypes)\r\n      templates = templates.concat(contentType.Templates.filter(template => template._export));\r\n    // ...and without content types\r\n    templates = templates.concat(this.contentInfo.TemplatesWithoutContentTypes.filter(template => template._export));\r\n    return templates;\r\n  }\r\n}\r\n","<div class=\"outer-container-app\" appDragAndDrop [allowedFileTypes]=\"importData.allowedFileTypes\"\r\n  (filesDropped)=\"filesDropped($event)\">\r\n  <div>\r\n    <h3 [innerHtml]=\"importData.title | safeHtml\"></h3>\r\n  </div>\r\n  <div>\r\n    @if (uploading()) {\r\n    <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n    }\r\n    <p>To import Content-Types, Queries, Views or Data, use the respective tabs.</p>\r\n    <p>Create an xml containing parts of the app, e.g. content and templates. Import parts from such an xml into this\r\n      app.\r\n    </p>\r\n    <p [innerHtml]=\"importData.description | safeHtml\"></p>\r\n    <div>\r\n      <button class=\"select-btn\" mat-raised-button tippy=\"Open file browser\" [disabled]=\"uploading()\"\r\n        (click)=\"fileInput.click()\">\r\n        @if (!files().length) {\r\n        <div>Select or drop file</div>\r\n        }\r\n        @for (file of files(); track file) {\r\n        <div>{{ file.name }}</div>\r\n        }\r\n      </button>\r\n      <input #fileInput type=\"file\" multiple (change)=\"filesChanged($event)\" class=\"hide\" />\r\n    </div>\r\n    @if (result()) {\r\n    <div class=\"eav-result-container\">\r\n      @if (result().Success) {\r\n      <div class=\"sxc-message sxc-message-info\">\r\n        Upload succeeded. See the messages below for more information.\r\n      </div>\r\n      }\r\n      @if (!result().Success) {\r\n      <div class=\"sxc-message sxc-message-error\">\r\n        Upload failed. See the messages below for more information.\r\n      </div>\r\n      }\r\n      @for (message of result().Messages; track message) {\r\n      <div class=\"sxc-message\" [ngClass]=\"{\r\n                'sxc-message-warning': message.MessageType === FileUploadMessageTypes.Warning,\r\n                'sxc-message-success': message.MessageType === FileUploadMessageTypes.Success,\r\n                'sxc-message-error': message.MessageType === FileUploadMessageTypes.Error\r\n                }\">\r\n        {{ message.Text }}\r\n      </div>\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  @if (!result()?.Success) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Import File\"\r\n      [disabled]=\"!files().length || uploading() || !!result()\" (click)=\"upload()\">\r\n      <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n      <span>Upload</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n  }\r\n</div>\r\n","import { ChangeDetectorRef, Component, effect, ElementRef, HostBinding, OnDestroy, OnInit, signal, ViewChild } from '@angular/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, FileUploadMessageTypes, FileUploadResult, UploadTypes } from '../../../shared/components/file-upload-dialog';\r\nimport { ImportAppPartsService } from '../../services/import-app-parts.service';\r\nimport { transient } from '../../../core';\r\nimport { BehaviorSubject, catchError, combineLatest, filter, fromEvent, map, Observable, of, switchMap, take, tap } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { InstallPackage, InstallSettings, CrossWindowMessage, SpecsForInstaller } from '../../../shared/models/installer-models';\r\nimport { AppInstallSettingsService } from '../../../shared/services/getting-started.service';\r\nimport { InstallerService } from '../../../shared/services/installer.service';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { Context } from '../../../shared/services/context';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { DragAndDropDirective } from '../../../shared/directives/drag-and-drop.directive';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-import-app-parts',\r\n  templateUrl: './import-app-parts.component.html',\r\n  styleUrls: ['./import-app-parts.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FileUploadDialogComponent,\r\n    NgClass,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    SafeHtmlPipe,\r\n    DragAndDropDirective,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class ImportAppPartsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  // Code are copied from file-upload-dialog\r\n\r\n  private importAppPartsService = transient(ImportAppPartsService);\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @ViewChild('installerWindow') installerWindow: ElementRef;\r\n\r\n  uploadType = UploadTypes.AppPart;\r\n\r\n  uploading = signal(false);\r\n  // showAppCatalogTemp = signal(false);\r\n  result = signal<FileUploadResult>(undefined);\r\n  files = signal<File[]>([]);\r\n\r\n  FileUploadMessageTypes = FileUploadMessageTypes;\r\n\r\n  UploadTypes = UploadTypes;\r\n  showAppCatalog$ = new BehaviorSubject<boolean>(false);\r\n\r\n  showProgress: boolean = false;\r\n  currentPackage: InstallPackage;\r\n  remoteInstallerUrl = '';\r\n  ready = false;\r\n  settings: InstallSettings;\r\n\r\n  importData: FileUploadDialogData = {\r\n    title: 'Import Content and Templates into this App',\r\n    description: `\r\n    Import content and templates from a content export (zip) or partial export (xml) to this app.\r\n    The entire content of the selected file will be imported.\r\n    If you want to import an entire app, go to the <em>Apps Management</em>.\r\n    For further help visit <a href=\"https://2sxc.org/en/help?tag=import\" target=\"_blank\">2sxc Help</a>.\r\n    `,\r\n    allowedFileTypes: 'xml',\r\n    upload$: (files: File[]) => this.importAppPartsService.importAppParts(files[0]),\r\n  };\r\n\r\n  private installerService = transient(InstallerService);\r\n  private installSettingsService = transient(AppInstallSettingsService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private sanitizer: DomSanitizer,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n\r\n    // TODO:: @2dg Check with Daniel\r\n     // TODO:: Old Code\r\n    //  this.subscriptions.add(\r\n    //   this.files$.subscribe(() => {\r\n    //     console.log('files changed');\r\n    //     if (this.result() !== undefined)\r\n    //       this.result.set(undefined);\r\n    //   }),\r\n    // );\r\n    effect(() => {\r\n      this.files();\r\n      if (this.result() != undefined) {\r\n        console.log('result changed');\r\n        this.result.set(undefined);\r\n      }\r\n    });\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(\r\n      this.installSettingsService.settings$.subscribe(settings => {\r\n        this.settings = settings;\r\n        this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(settings.remoteUrl);\r\n        this.ready = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  private alreadyProcessing = false;\r\n  // copied from 2sxc-ui app/installer\r\n  // Initial Observable to monitor messages\r\n  private messages$ = fromEvent(window, 'message').pipe(\r\n    // Ensure only one installation is processed.\r\n    filter(() => !this.alreadyProcessing),\r\n    filter((evt: MessageEvent) => evt.origin === \"https://2sxc.org\"),\r\n    // Get data from event.\r\n    map((evt: MessageEvent) => {\r\n      try {\r\n        return JSON.parse(evt.data) as CrossWindowMessage;\r\n      } catch (e) {\r\n        console.error('error procesing message. Message was ' + evt.data, e);\r\n        return void 0;\r\n      }\r\n    }),\r\n    // Check if data is valid and the moduleID matches\r\n    filter(data => data && Number(data.moduleId) === this.context.moduleId),\r\n  );\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.importData.files != null) {\r\n      this.filesDropped(this.importData.files);\r\n    }\r\n    // copied from 2sxc-ui\r\n    this.installSettingsService.loadGettingStarted(false);//this.isContentApp -> from @Input on 2sxc-ui\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(this.messages$.pipe(\r\n      // Verify it's for this action\r\n      filter(data => data.action === 'specs'),\r\n      // Send message to iframe\r\n      tap(() => {\r\n        const winFrame = this.installerWindow.nativeElement as HTMLIFrameElement;\r\n        const specsMsg: SpecsForInstaller = {\r\n          action: 'specs',\r\n          data: {\r\n            //currently not used\r\n            installedApps: this.settings.installedApps,//.map(app => ((app as InstalledApp).guid)),\r\n            //currently used to forbid already installed apps\r\n            rules: this.settings.installedApps.map(app => ({ target: 'guid', appGuid: app.guid, mode: 'f', url: '' })),//this.settings.rules,\r\n          },\r\n        };\r\n        const specsJson = JSON.stringify(specsMsg);\r\n        winFrame.contentWindow.postMessage(specsJson, '*');\r\n        console.log('debug: just sent specs message:' + specsJson, specsMsg, winFrame);\r\n      }),\r\n    ).subscribe());\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    // Subscription to listen to 'install' messages\r\n    this.subscriptions.add(this.messages$.pipe(\r\n      filter(data => data.action === 'install'),\r\n      // Get packages from data.\r\n      map(data => Object.values(data.packages)),\r\n      // Show confirm dialog.\r\n      filter(packages => {\r\n        const packagesDisplayNames = packages\r\n          .reduce((t, c) => `${t} - ${c.displayName}\\n`, '');\r\n\r\n        const msg = `Do you want to install these packages?\r\n\r\n${packagesDisplayNames}\r\nThis takes about 10 seconds per package. Don't reload the page while it's installing.`;\r\n        return confirm(msg);\r\n      }),\r\n      // Install the packages one at a time\r\n      switchMap(packages => {\r\n        this.alreadyProcessing = true;\r\n        this.showProgress = true;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not shown\r\n        return this.installerService.installPackages(packages, p => this.currentPackage = p);\r\n      }),\r\n      tap(() => {\r\n        this.showProgress = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed (though window reload will remove it anyway) so maybe unnecessary\r\n        alert('Installation complete 👍');\r\n        window.top.location.reload();\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error: ', error);\r\n        this.showProgress = false;\r\n        this.alreadyProcessing = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed\r\n        const errorMsg = `An error occurred: Package ${this.currentPackage.displayName}\r\n\r\n${error.error?.Message ?? error.error?.message ?? ''}\r\n\r\n${error.message}\r\n\r\nPlease try again later or check how to manually install content-templates: https://azing.org/2sxc/r/0O4OymoA`;\r\n        alert(errorMsg);\r\n        return of(error);\r\n      }),\r\n    ).subscribe());\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n\r\n  filesDropped(files: File[]): void {\r\n    this.setFiles(files);\r\n    this.upload();\r\n  }\r\n\r\n  filesChanged(event: Event): void {\r\n    const fileList = (event.target as HTMLInputElement).files;\r\n    const files = Array.from(fileList);\r\n    this.setFiles(files);\r\n  }\r\n\r\n  upload(): void {\r\n    this.uploading.set(true);\r\n    this.subscriptions.add(\r\n      this.importData.upload$(this.files()).pipe(take(1)).subscribe({\r\n        next: (result) => {\r\n          this.uploading.set(false);\r\n          this.result.set(result);\r\n        },\r\n        error: () => {\r\n\r\n          this.uploading.set(false);\r\n          this.result.set(undefined);\r\n          this.snackBar.open('Upload failed. Please check console for more information', undefined, { duration: 3000 });\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  private setFiles(files: File[]): void {\r\n    if (!this.importData.multiple) {\r\n      files = files.slice(0, 1);\r\n    }\r\n    this.files.set(files);\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"outer-container-app\">\r\n  <!-- Title -->\r\n  <div>\r\n    <div class=\"title-slider\">\r\n      <h3>App-State Versioning</h3>\r\n      <mat-slide-toggle class=\"eav-card-header-toggle\" [(ngModel)]=\"appStateAdvanced\">{{ appStateAdvanced ? \"advanced\"\r\n        : \"basic\" }}</mat-slide-toggle>\r\n    </div>\r\n  </div>\r\n  <!-- Content -->\r\n  <div>\r\n    <p>\r\n      You can save / restore the app with data and configuration in <code>.data/app.xml</code>.\r\n      This file can then also be versioned using git.\r\n    </p>\r\n    @if (appStateAdvanced) {\r\n    <p>\r\n      <br>\r\n      In Advanced mode you can also sync all the site files used by this app.\r\n      They will be placed in a folder inside <code>App_Data</code> and allow sync/restore with git or another server.\r\n    </p>\r\n    }\r\n    @if (appStateAdvanced) {\r\n    <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n    }\r\n  </div>\r\n  <!-- Button -->\r\n  @if (!appStateAdvanced) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(false)\">\r\n        <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n        <span>Save state</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(false)\">\r\n        <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n        <span>Restore state</span>\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n  }\r\n  @if (appStateAdvanced) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(true)\">\r\n        <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n        <span>Save with Assets</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(true)\">\r\n        <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n        <span>Restore with Assets</span>\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n  }\r\n</div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { DialogSettings } from '../../../shared/models/dialog-settings.model';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\nimport { ImportAppPartsService } from '../../services/import-app-parts.service';\r\nimport { FeatureTextInfoComponent } from '../../../features/feature-text-info/feature-text-info.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { transient } from '../../../core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { DialogConfigAppService } from '../../services/dialog-config-app.service';\r\n\r\n@Component({\r\n  selector: 'app-app-state',\r\n  templateUrl: './app-state.component.html',\r\n  styleUrls: ['./app-state.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    FeatureTextInfoComponent,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n  ],\r\n})\r\nexport class AppStateComponent implements OnInit, OnDestroy {\r\n  dialogSettings: DialogSettings;\r\n\r\n  #importAppPartsSvc = transient(ImportAppPartsService);\r\n  #exportAppSvc = transient(ExportAppService);\r\n\r\n  public appStateAdvanced = false;\r\n\r\n  #dialogConfigSvc = transient(DialogConfigAppService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.#dialogConfigSvc.getCurrent$().subscribe((dialogSettings) => {\r\n      this.dialogSettings = dialogSettings;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.snackBar.dismiss();\r\n  }\r\n\r\n  exportAppXml(withFiles: boolean) {\r\n    this.snackBar.open('Exporting...');\r\n    this.#exportAppSvc.exportForVersionControl({ includeContentGroups: true, resetAppGuid: false, withFiles }).subscribe({\r\n      next: result => {\r\n        this.snackBar.open('Export completed into the \\'App_Data\\' folder.', null, { duration: 3000 });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Export failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  resetApp(withFiles: boolean) {\r\n    if (!confirm('Are you sure? All changes since last xml export will be lost')) return;\r\n    this.snackBar.open('Resetting...');\r\n    this.#importAppPartsSvc.resetApp(withFiles).subscribe({\r\n      next: result => {\r\n        this.snackBar.open(\r\n          'Reset worked! Since this is a complex operation, please restart the Website to ensure all caches are correct',\r\n          null,\r\n          { duration: 30000 },\r\n        );\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Reset failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { appAdministrationDialog } from './app-admin-main/app-admin-main.dialog-config';\r\nimport { analyzeSettingsDialog } from './sub-dialogs/analyze-settings/analyze-settings-dialog.config';\r\nimport { settingsItemDetailsDialog } from './sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config';\r\nimport { editContentTypeDialog } from './sub-dialogs/edit-content-type/edit-content-type-dialog.config';\r\nimport { importContentTypeDialog } from './sub-dialogs/import-content-type/import-content-type-dialog.config';\r\nimport { importQueryDialog } from './sub-dialogs/import-query/import-query-dialog.config';\r\nimport { importViewDialog } from './sub-dialogs/import-view/import-view-dialog.config';\r\nimport { languagePermissionsDialog } from './sub-dialogs/language-permissions/language-permissions-dialog.config';\r\nimport { viewsUsageDialog } from './sub-dialogs/views-usage/views-usage-dialog.config';\r\nimport { GoToCopilot } from './copilot/go-to-copilot';\r\nimport { CopilotSpecs } from './copilot/copilot-specs';\r\nimport { EditRoutes, EditRoutesNoHistory } from '../edit/edit.routing';\r\nimport { ExportAppComponent } from './app-menu/export-app/export-app.component';\r\nimport { ExportAppPartsComponent } from './app-menu/export-app-parts/export-app-parts.component';\r\nimport { ImportAppPartsComponent } from './app-menu/import-app-parts/import-app-parts.component';\r\nimport { AppStateComponent } from './app-menu/app-state/app-state.component';\r\n\r\nexport const appAdministrationRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    // experimental 2dm\r\n    // ...DialogEntryComponent.routeFor(appAdministrationDialog),\r\n    component: DialogEntryComponent,\r\n    data: { dialog: appAdministrationDialog },\r\n    children: [\r\n      {\r\n        path: '', redirectTo: 'home', pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'home',\r\n        loadComponent: () => import('./getting-started/getting-started.component').then(mod => mod.GettingStartedComponent),\r\n        data: { title: 'App Home', breadcrumb: 'Info', }\r\n      },\r\n      {\r\n        path: 'data/:scope',\r\n        loadComponent: () => import('./data/data.component').then(mod => mod.DataComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            // experimental 2dm\r\n            // ...DialogEntryComponent.routeFor(importContentTypeDialog, { title: 'Import Content Type' }),\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importContentTypeDialog, title: 'Import Content Type' },\r\n          },\r\n          {\r\n            path: 'items/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-items/content-items.routing').then(m => m.contentItemsRoutes)\r\n          },\r\n          ...EditRoutes,\r\n          {\r\n            path: 'add',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Add Content Type' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/edit',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Edit Content Type' },\r\n          },\r\n          ...GoToMetadata.getRoutes(),\r\n          GoToDevRest.route,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            // May change how things are injected, so be careful when evaluating\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.routing').then(m => m.contentTypeFieldsRoutes),\r\n            data: { title: 'Content Type Fields' },\r\n          },\r\n          {\r\n            path: 'export/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes),\r\n            data: { title: 'Export Items' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/import',\r\n            loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n            data: { title: 'Import Items' },\r\n          },\r\n          GoToPermissions.route,\r\n        ],\r\n        data: { title: 'App Data', breadcrumb: \"Data\" },\r\n      },\r\n      {\r\n        path: `data-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.data,\r\n      },\r\n      {\r\n        path: GoToDevRest.routeData,\r\n        loadComponent: () => import('./data-rest-api/data-rest-api.component').then(mod => mod.DataRestApiComponent),\r\n        data: {\r\n          title: 'Rest-Api Data',\r\n          breadcrumb: 'Rest-Api Data'\r\n        },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramTypeName}`,\r\n            loadComponent: () => import('../dev-rest/data/data.component').then(mod => mod.DevRestDataComponent),\r\n            data: {\r\n              breadcrumb: 'Rest-Api Data'\r\n            },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'queries',\r\n        loadComponent: () => import('./queries/queries.component').then(mod => mod.QueriesComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importQueryDialog, title: 'Import Query' }\r\n          },\r\n          ...EditRoutesNoHistory,\r\n          ...GoToMetadata.getRoutes(),\r\n          {\r\n            ...GoToPermissions.route,\r\n            data: { title: 'Query Permissions' }\r\n          },\r\n          GoToDevRest.route,\r\n        ],\r\n        data: { title: 'App Queries', breadcrumb: \"Queries\" },\r\n      },\r\n      {\r\n        path: GoToDevRest.routeQuery,\r\n        loadComponent: () => import('./queries-rest-api/queries-rest-api.component').then(mod => mod.QueriesRestApiComponent),\r\n        data: { title: 'Rest-Api Queries', breadcrumb: 'Rest-Api Queries' },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramQuery}`,\r\n            loadComponent: () => import('../dev-rest/query/query.component').then(mod => mod.DevRestQueryComponent),\r\n            data: { breadcrumb: 'Rest-Api Queries', },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'views',\r\n        loadComponent: () => import('./views/views.component').then(mod => mod.ViewsComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importViewDialog, title: 'Import View' },\r\n          },\r\n          {\r\n            path: 'usage/:guid',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: viewsUsageDialog }\r\n          },\r\n          ...EditRoutes,\r\n          { ...GoToPermissions.route, data: { title: 'View Permissions' } },\r\n          ...GoToMetadata.getRoutes(),\r\n        ],\r\n        data: { title: 'App Views', breadcrumb: \"Views\" },\r\n      },\r\n      {\r\n        path: `views-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.views,\r\n      },\r\n      {\r\n        path: 'web-api',\r\n        loadComponent: () => import('./web-api/web-api.component').then(mod => mod.WebApiComponent),\r\n        data: { title: 'App WebApi', breadcrumb: \"WebApi\" },\r\n        children: [\r\n          GoToDevRest.route,\r\n        ],\r\n      },\r\n      {\r\n        path: `web-api-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.webApi,\r\n      },\r\n      {\r\n        path: GoToDevRest.routeWebApi,\r\n        loadComponent: () => import('./web-api-rest-api/web-api-rest-api.component').then(mod => mod.WebApiRestApiComponent),\r\n        data: {\r\n          title: 'Rest-Api Web Api',\r\n          breadcrumb: 'Rest-Api Web Api'\r\n        },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramApiPath}`,\r\n            loadComponent: () => import('../dev-rest/api/api.component').then(mod => mod.DevRestApiComponent),\r\n            data: {\r\n              breadcrumb: 'Rest-Api Web Api'\r\n            },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'app',\r\n        loadComponent: () => import('./app-configuration/app-configuration.component').then(mod => mod.AppConfigurationComponent),\r\n        data: { title: 'Manage App', breadcrumb: \"Manage App\" },\r\n        children: [\r\n          ...GoToMetadata.getRoutes(),\r\n          // Edit App Properties / Settings / Resources\r\n          ...EditRoutes,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.routing').then(m => m.contentTypeFieldsRoutes),\r\n            data: { title: 'Edit Fields of App Settings & Resources' },\r\n          },\r\n          {\r\n            path: 'language-permissions',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: languagePermissionsDialog, title: 'Language Permissions' },\r\n            children: [\r\n              { ...GoToPermissions.route, data: { title: 'Language Permissions' } },\r\n            ],\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'App Permissions' } },\r\n          {\r\n            path: 'analyze/:part',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: analyzeSettingsDialog, title: 'Analyze Settings / Resources' }, children: [\r\n              {\r\n                path: 'details/:view/:settingsItemKey',\r\n                component: DialogEntryComponent,\r\n                data: { dialog: settingsItemDetailsDialog, title: 'Settings / Resources Item Details' },\r\n              },\r\n            ],\r\n          },\r\n          // New Export etc.\r\n          // {\r\n          //   path: 'export-app',\r\n          //   component: ExportAppComponent,\r\n          //   data: { breadcrumb: 'Export this entire App' },\r\n          // },\r\n          // {\r\n          //   path: 'export-parts',\r\n          //   component: DialogEntryComponent,\r\n          //   data: { breadcrumb: 'Export parts of this App' },\r\n          // },\r\n          // {\r\n          //   path: 'import-parts',\r\n          //   component: DialogEntryComponent,\r\n          //   data: { breadcrumb: 'Import parts of this App' },\r\n          // },\r\n          // {\r\n          //   path: 'app-state',\r\n          //   component: DialogEntryComponent,\r\n          //   data: { breadcrumb: 'App-State Versioning' },\r\n          // },\r\n        ],\r\n      },\r\n      // New Export etc.\r\n      {\r\n        path: 'export-app',\r\n        component: ExportAppComponent,\r\n        data: { breadcrumb: 'Export this entire App' },\r\n      },\r\n      {\r\n        path: 'export-parts',\r\n        component: ExportAppPartsComponent,\r\n        data: { breadcrumb: 'Export parts of this App' },\r\n      },\r\n      {\r\n        path: 'import-parts',\r\n        component: ImportAppPartsComponent,\r\n        data: { breadcrumb: 'Import parts of this App' },\r\n      },\r\n      {\r\n        path: 'app-state',\r\n        component: AppStateComponent,\r\n        data: { breadcrumb: 'App-State Versioning' },\r\n      },\r\n    ]\r\n  },\r\n];\r\n","export interface CopilotSpec {\r\n  /** Title in the menu */\r\n  title: string;\r\n  /** Title in the breadcrumb */\r\n  breadcrumb: string;\r\n\r\n  heading: string,\r\n  intro: string,\r\n  teaser: string;\r\n  outputType: string;\r\n}\r\n\r\nconst intro = `The Copilot provides tools to help you create code.\r\n    It is still in new, so please use it carefully and report any issues.`;\r\n\r\nexport const CopilotSpecs: { [key: string ]: CopilotSpec } = {\r\n  'data': {\r\n    title: 'Data Copilot',\r\n    breadcrumb: '2sxc Data Copilot',\r\n\r\n    heading: '2sxc Data Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate content types',\r\n\r\n    outputType: 'DataModel',\r\n  },\r\n  'views': {\r\n    title: 'Views Copilot',\r\n    breadcrumb: '2sxc View Copilot',\r\n\r\n    heading: '2sxc View Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate Razor Views',\r\n\r\n    outputType: 'RazorView',\r\n  },\r\n  'webApi': {\r\n    title: 'WebApi Copilot',\r\n    breadcrumb: '2sxc WebApi Copilot',\r\n\r\n    heading: '2sxc WebApi Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate WebApi Controllers',\r\n\r\n    outputType: 'WebApi',\r\n  }\r\n};\r\n","export class GoToCopilot {\r\n  static route = 'copilot';\r\n\r\n  static routeDefinition(part: string) {\r\n    return {\r\n      name: 'Copilot',\r\n      icon: 'support_agent',\r\n      svgIcon: false,\r\n      path: `${part}-${GoToCopilot.route}`\r\n    };\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService extends HttpServiceBase {\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.appId, contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.appId, scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.appId }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.appId },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.appId, staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.appId, sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.dnnContext.$2sxc.http.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.context.appId}&zoneId=${this.context.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToMetadata {\r\n\r\n  static getRoutes(): Route[] {\r\n    const defaultRoute: Route = {\r\n      path: 'metadata/:targetType/:keyType/:key',\r\n      loadChildren: () => import('./metadata.routing').then(m => m.metadataRoutes),\r\n      data: { title: 'Metadata' },\r\n    };\r\n    const routes: Route[] = [\r\n      defaultRoute,\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/contentType/:contentTypeStaticName`,\r\n      },\r\n      {\r\n        ...defaultRoute,\r\n        path: `${defaultRoute.path}/title/:title/contentType/:contentTypeStaticName`,\r\n      }\r\n    ];\r\n    return routes;\r\n  }\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    let url = `metadata/${targetType}/${keyType}/${key}`;\r\n    if (dialogTitle) {\r\n      url += `/title/${encodeURIComponent(dialogTitle)}`;\r\n    }\r\n    if (contentTypeStaticName) {\r\n      url += `/contentType/${contentTypeStaticName}`;\r\n    }\r\n    return url;\r\n  }\r\n\r\n  static getUrlApp(appId: number, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.app.targetType,\r\n      eavConstants.metadata.app.keyType,\r\n      appId.toString(),\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlAttribute(attributeId: number, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.attribute.targetType,\r\n      eavConstants.metadata.attribute.keyType,\r\n      attributeId.toString(),\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n  static getUrlContentType(staticName: string, dialogTitle?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.contentType.targetType,\r\n      eavConstants.metadata.contentType.keyType,\r\n      staticName,\r\n      dialogTitle,\r\n    );\r\n  }\r\n\r\n  static getUrlEntity(guid: string, dialogTitle?: string, contentTypeStaticName?: string): string {\r\n    return this.getUrl(\r\n      eavConstants.metadata.entity.targetType,\r\n      eavConstants.metadata.entity.keyType,\r\n      guid,\r\n      dialogTitle,\r\n      contentTypeStaticName,\r\n    );\r\n  }\r\n\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { Context } from '../../shared/services/context';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/**\r\n * Base class for all services that need to make HTTP calls.\r\n * Provides important typical information and services, especially\r\n * * apiUrl(name) - to get the full API URL\r\n * * appId - the current app id\r\n * * zoneId - the current zone id\r\n */\r\n@Injectable()\r\nexport class HttpServiceBase {\r\n\r\n  protected dnnContext = inject(DnnContext);\r\n  protected http = inject(HttpClient);\r\n  protected context = inject(Context);\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Convert a short 2sxc-url into the correct full URL on the system.\r\n   * @param name 2sxc-style short url\r\n   * @returns \r\n   */\r\n  protected apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  /**\r\n   * The current app id\r\n   */\r\n  protected get appId() { return this.context.appId.toString(); }\r\n\r\n  /**\r\n   * The current zone id\r\n   */\r\n  protected get zoneId() { return this.context.zoneId.toString(); }\r\n}"],"x_google_ignoreList":[]}