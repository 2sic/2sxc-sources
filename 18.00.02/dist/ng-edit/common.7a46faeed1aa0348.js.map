{"version":3,"file":"common.7a46faeed1aa0348.js","mappings":"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","names":["i0","_r1","ctx_r1","openLightspeedFeatureInfo","_r3","openLightspeed","LightSpeedActionsComponent_Conditional_1_Conditional_1_Template","LightSpeedActionsComponent_Conditional_1_Conditional_2_Template","appHasLightSpeed","lightSpeed","Title","appLightSpeedEnabled","LightSpeedActionsComponent","constructor","this","features","inject","FeaturesScopedService","lightSpeedEnabled","isEnabled","FeatureNames","LightSpeed","Id","IsEnabled","params","onOpenLightspeed","lightSpeedOwner","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_2__","VBU","selectors","inputs","standalone","decls","vars","consts","template","rf","ctx","LightSpeedActionsComponent_Conditional_0_Template","LightSpeedActionsComponent_Conditional_1_Template","TippyDirective","MatIconModule","i1","MatBadgeModule","i2","MatRippleModule","i3","encapsulation","AppAdminHelpers","getLightSpeedEditParams","appId","items","EditPrep","newMetadata","eavConstants","appMetadata","ContentTypeName","metadata","app","AnalyzeSettingsService","http","context","dnnContext","getStack","part","key","view","stringifyValue","get","$2sxc","apiUrl","webApiAppRoot","toString","pipe","map","stack","stackItem","_value","JSON","stringify","Value","_angular_core__WEBPACK_IMPORTED_MODULE_3__","jDH","factory","ɵfac","AnalyzeSettingsValueComponent","snackBar","agInit","value","refresh","copy","text","JsonHelpers","tryParse","copyToClipboard","open","duration","styles","AppsListService","HttpServiceBase","getAll","zoneId","getInheritable","getPendingApps","create","name","inheritAppId","templateId","post","installPendingApps","pendingApps","delete","flushCache","FeaturesConfigService","saveFeatures","featuresStates","getLicenses","uploadLicense","file","formData","FormData","append","info","Success","Messages","MessageType","FileUploadMessageTypes","Error","Text","Message","retrieveLicense","webApiZoneRoot","ZoneService","getLanguages","toggleLanguage","code","enable","cultureCode","getSystemInfo","getLanguagesPermissions","ContentExportService","exportContent","values","selectedIds","selectedIdsString","join","url","webApiEntityRoot","language","defaultLanguage","contentTypeStaticName","recordExport","resourcesReferences","languageReferences","window","exportJson","typeName","webApiTypeRoot","exportEntity","id","prefix","importContentItemDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ImportContentItemComponent","Promise","all","__webpack_require__","e","then","bind","contentItemsDialog","ContentItemsComponent","contentItemsRoutes","path","component","DialogEntryComponent","data","dialog","children","GoToMetadata","getRoutes","loadChildren","m","ContentExportRoutes","contentImportRoutes","title","EditRoutes","ContentItemsService","webApiEntityList","contentType","getColumns","webApiFieldsAll","staticName","importItem","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","_angular_core__WEBPACK_IMPORTED_MODULE_7__","contentTypeFieldsDialog","ContentTypeFieldsComponent","editContentTypeFieldsDialog","EditContentTypeFieldsComponent","contentTypeFieldsRoutes","GoToPermissions","route","importRoutes","ImportAppComponent","webApiContentGroup","ContentGroupService","getItems","item","guid","index","saveItem","entityId","add","removeItem","contentGroup","parent","fields","getList","saveList","resortedList","getHeader","_angular_core__WEBPACK_IMPORTED_MODULE_1__","replaceContentDialog","ReplaceContentComponent","replaceContentRoutes","EditRoutesNoHistory","#dialogData","#dialogRef","viewContainerRef","router","changeDetectorRef","log","classLog","navigation","getCurrentNavigation","extras","state","ngOnInit","l","fn","dialogConfig","snapshot","a","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","ngOnDestroy","close","svcId","init","autoFocus","backdropClass","closeOnNavigation","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","length","totalPopup","navigate","relativeTo","markForCheck","Context","guidRegex","empty","InputTypeCatalog","EmptyDefault","EmptyEnd","EmptyMessage","ends","oldValuePickers","StringDropdown","NumberDropdown","oldEntityPickers","EntityContentBlocks","EntityDefault","EntityQuery","oldOtherPickers","StringDropdownQuery","StringTemplatePicker","newPicker","EntityPicker","StringPicker","NumberPicker","InputTypeHelpers","isEmpty","inputType","includes","endsPreviousGroup","isGroupStart","isGroupEnd","isMessage","isNewPicker","isOldValuePicker","isAnyPicker","input","parse","loadScripts","scriptObjects","callback","iteration","newCallback","scrObj","global","test","w","require","src","exportedVar","UpdateEnvVarsFromDialogSettings","appContext","includedApiRoot","Api","new2sxcHeader","env","header","appApi","load","AppScopes","App","Site","Global","DialogService","openCodeFile","isShared","DialogTypeConstants","Develop","form","Path","editId","hashParams","buildHashParam","keyDialog","keyIsShared","keyItems","buildFullUrl","openQueryDesigner","queryId","PipelineDesigner","keyPipelineId","openAppsManagement","tab","keyZoneId","Zone","Object","keys","keyExtras","openAppAdministration","scope","keyAppId","buildSharedHashParams","keyModuleId","moduleId","keyContentBlockId","contentBlockId","keyPartOfPage","sessionStorage","getItem","keyDebug","rawKey","replace","valueTemp","r","encodeURIComponent","oldHref","keyUrl","oldUrl","URL","newHref","origin","pathname","search","allHashParams","entries","reduce","acc","_angular_core__WEBPACK_IMPORTED_MODULE_4__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.html","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.ts","./projects/eav-ui/src/app/app-administration/app-admin-helpers.ts","./projects/eav-ui/src/app/app-administration/services/analyze-settings.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.html","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/apps-management/services/features-config.service.ts","./projects/eav-ui/src/app/apps-management/services/zone.service.ts","./projects/eav-ui/src/app/content-export/services/content-export.service.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items.routing.ts","./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.routing.ts","./projects/eav-ui/src/app/import-app/import-app-dialog.config.ts","./projects/eav-ui/src/app/import-app/import-app.routing.ts","./projects/eav-ui/src/app/manage-content-list/services/content-group.service.ts","./projects/eav-ui/src/app/replace-content/replace-content-dialog.config.ts","./projects/eav-ui/src/app/replace-content/replace-content.routing.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./projects/eav-ui/src/app/shared/constants/guid.constants.ts","./projects/eav-ui/src/app/shared/fields/input-type-helpers.ts","./projects/eav-ui/src/app/shared/helpers/json.helpers.ts","./projects/eav-ui/src/app/shared/helpers/load-scripts.helper.ts","./projects/eav-ui/src/app/shared/helpers/update-env-vars-from-dialog-settings.helper.ts","./projects/eav-ui/src/app/shared/models/dialog-context.models.ts","./projects/eav-ui/src/app/shared/services/dialog.service.ts"],"sourcesContent":["@if (!lightSpeedEnabled()) {\r\n  <div class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\"\r\n    (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n      bolt\r\n    </mat-icon>\r\n  </div>\r\n}\r\n@else {\r\n  <div class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled'}}\" matRipple\r\n    [tippy]=\"appHasLightSpeed ? lightSpeed.Title : 'Not yet configured for LightSpeed'\"\r\n    (click)=\"openLightspeed()\">\r\n    @if (appLightSpeedEnabled) {\r\n      <mat-icon matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\"\r\n        aria-hidden=\"false\">\r\n        bolt\r\n      </mat-icon>\r\n    }\r\n    @else {\r\n      <mat-icon matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\"\r\n        aria-hidden=\"false\">\r\n        bolt\r\n      </mat-icon>\r\n    }\r\n  </div>\r\n}\r\n","import { Component, Input, inject } from '@angular/core';\r\nimport { LightSpeedInfo } from '../../apps-management/models/LightSpeedInfo';\r\nimport { LightSpeedActionsParams } from './lightspeed-actions.models';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n/**\r\n * LightSpeedActionsComponent\r\n *\r\n * Specially meant to be used inside an AGGrid action, and receive the parameters from it.\r\n *\r\n */\r\n@Component({\r\n  selector: 'app-lightspeed-action',\r\n  templateUrl: './lightspeed-action.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class LightSpeedActionsComponent {\r\n  /** App needed for lightspeed checks */\r\n  @Input({ required: true }) lightSpeedOwner: unknown;\r\n\r\n  @Input({ required: true }) params: LightSpeedActionsParams;\r\n\r\n  @Input({ required: true }) lightSpeed: LightSpeedInfo | null;\r\n\r\n  public features = inject(FeaturesScopedService);\r\n  protected lightSpeedEnabled = this.features.isEnabled(FeatureNames.LightSpeed)\r\n\r\n  constructor() {}\r\n\r\n  public get appHasLightSpeed(): boolean {\r\n    return this.lightSpeed?.Id != null;\r\n  }\r\n\r\n  public get appLightSpeedEnabled(): boolean {\r\n    return this.lightSpeed?.IsEnabled == true;\r\n  }\r\n\r\n  openLightspeed(): void {\r\n    this.params.onOpenLightspeed(this.lightSpeedOwner);\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params.openLightspeedFeatureInfo();\r\n  }\r\n}\r\n","import { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\n\r\nexport class AppAdminHelpers {\r\n  public static getLightSpeedEditParams(appId: number) {\r\n    const form: EditForm = {\r\n      items: [\r\n        EditPrep.newMetadata(appId, eavConstants.appMetadata.LightSpeed.ContentTypeName, eavConstants.metadata.app, true),\r\n      ],\r\n    };\r\n    return form;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AnalyzePart, SettingsStackItem } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\n\r\n@Injectable()\r\nexport class AnalyzeSettingsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getStack(part: AnalyzePart, key?: string, view?: string, stringifyValue = false): Observable<SettingsStackItem[]> {\r\n    return this.http.get<SettingsStackItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'GetStack'), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }).pipe(\r\n      map(stack => {\r\n        if (!stringifyValue) { return stack; }\r\n\r\n        for (const stackItem of stack) {\r\n          stackItem._value = JSON.stringify(stackItem.Value);\r\n        }\r\n        return stack;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { JsonHelpers } from '../../../../shared/helpers/json.helpers';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-value',\r\n  templateUrl: './analyze-settings-value.component.html',\r\n  styleUrls: ['./analyze-settings-value.component.scss'],\r\n  standalone: true,\r\n  imports: [MatRippleModule, TippyDirective,],\r\n})\r\nexport class AnalyzeSettingsValueComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(text: string) {\r\n    text = JsonHelpers.tryParse(text) ?? text;\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"value-box highlight\" [tippy]=\"value\" (click)=\"copy(value)\">\r\n  <span class=\"value\">{{ value }}</span>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { App, PendingApp } from '../models/app.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\n@Injectable()\r\nexport class AppsListService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'InheritableApps'), {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getPendingApps() {\r\n    return this.http.get<PendingApp[]>(this.apiUrl(webApiAppRoot + 'GetPendingApps'), {\r\n      params: { zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'InstallPendingApps'), pendingApps, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { License, LicenseDownloadInfo, LicenseUploadInfo } from '../models/license.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiLicense = 'sys/license/';\r\nconst webAPiLicenseRetrieve = 'sys/license/Retrieve';\r\nconst webApiFeatSaveNew = 'admin/feature/SaveNew';\r\nconst webApiLicSummary = 'sys/license/Summary';\r\nconst webApiUpload = 'sys/license/Upload';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService extends HttpServiceBase {\r\n\r\n  saveFeatures(featuresStates: FeatureState[]): Observable<null> {\r\n    return this.http.post<null>(this.apiUrl(webApiFeatSaveNew), featuresStates);\r\n  }\r\n\r\n  getLicenses(): Observable<License[]> {\r\n    return this.http.get<License[]>(this.apiUrl(webApiLicSummary));\r\n  }\r\n\r\n  uploadLicense(file: File): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<LicenseUploadInfo>(this.apiUrl(webApiUpload), formData)\r\n      .pipe(\r\n        map(info => ({\r\n          Success: info.Success,\r\n          Messages: [{\r\n            MessageType: info.Success ? FileUploadMessageTypes.Success : FileUploadMessageTypes.Error,\r\n            Text: `License ${info.Success ? 'uploaded' : 'upload failed'}: ${info.Message}`,\r\n          }],\r\n        } satisfies FileUploadResult)),\r\n      );\r\n  }\r\n\r\n  retrieveLicense(): Observable<LicenseDownloadInfo> {\r\n    return this.http.get<LicenseDownloadInfo>(this.apiUrl(webAPiLicenseRetrieve));\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { SiteLanguage, SiteLanguagePermissions } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\n\r\nconst webApiZoneRoot = 'admin/zone/';\r\n\r\n@Injectable()\r\nexport class ZoneService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getLanguages() {\r\n    return this.http.get<SiteLanguage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'GetLanguages'));\r\n  }\r\n\r\n  toggleLanguage(code: string, enable: boolean) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'SwitchLanguage'), {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  getSystemInfo() {\r\n    return this.http.get<SystemInfoSet>(this.dnnContext.$2sxc.http.apiUrl(webApiZoneRoot + 'GetSystemInfo'));\r\n  }\r\n\r\n  getLanguagesPermissions() {\r\n    return this.http.get<SiteLanguagePermissions[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'languages'), {\r\n      params: { appId: this.context.appId },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentExport } from '../models/content-export.model';\r\nimport { webApiEntityRoot } from '../../shared/services/entity.service';\r\n\r\n@Injectable()\r\nexport class ContentExportService {\r\n  constructor(private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Download')\r\n      + '?appId=' + this.context.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiTypeRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const importContentItemDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_ITEM_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentItemComponent: ImportContentItemComponent } = await import('./import-content-item.component');\r\n    return ImportContentItemComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentItemsDialog: DialogConfig = {\r\n  name: 'CONTENT_ITEMS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentItemsComponent } = await import('./content-items.component');\r\n    return ContentItemsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importContentItemDialog } from './import-content-item/import-content-item-dialog.config';\r\nimport { contentItemsDialog } from './content-items-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const contentItemsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentItemsDialog },\r\n    children: [\r\n      ...GoToMetadata.getRoutes(),\r\n      {\r\n        path: 'export/:contentTypeStaticName',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'export/:contentTypeStaticName/:selectedIds',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'import',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: importContentItemDialog }\r\n      },\r\n      {\r\n        path: ':contentTypeStaticName/import',\r\n        loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n        data: { title: 'Import Items' },\r\n      },\r\n      ...EditRoutes,\r\n    ]\r\n  },\r\n];\r\n\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\n\r\n@Injectable()\r\nexport class ContentItemsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get<ContentItem[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appId: this.context.appId.toString(), staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentTypeFieldsDialog: DialogConfig = {\r\n  name: 'CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentTypeFieldsComponent } = await import('./content-type-fields.component');\r\n    return ContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeFieldsDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeFieldsComponent } = await import('./edit-content-type-fields.component');\r\n    return EditContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentTypeFieldsDialog } from './content-type-fields-dialog.config';\r\nimport { editContentTypeFieldsDialog } from './edit-content-type-fields/edit-content-type-fields-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const contentTypeFieldsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentTypeFieldsDialog },\r\n    children: [\r\n      {\r\n        path: 'add/:contentTypeStaticName',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog }\r\n      },\r\n      {\r\n        path: 'update/:contentTypeStaticName/:id/:editMode',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog },\r\n      },\r\n      ...GoToMetadata.getRoutes(),\r\n      GoToPermissions.route,\r\n      ...EditRoutes,\r\n    ]\r\n  }\r\n];\r\n\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const importAppDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppComponent } = await import('./import-app.component');\r\n    return ImportAppComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importAppDialog } from './import-app-dialog.config';\r\n\r\nexport const importRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: importAppDialog }\r\n  }\r\n];\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { ReplaceConfig } from '../../replace-content/replace-config.model';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService extends HttpServiceBase {\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.http.get<ReplaceConfig>(this.apiUrl(webApiContentGroup + 'replace'), {\r\n      params: { appId: this.context.appId.toString(), guid: item.guid, part: item.part, index: item.index.toString() }\r\n    });\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post<null>(this.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    });\r\n  }\r\n\r\n  removeItem(contentGroup: ContentGroup, index: number) {\r\n    // note: the server checks if the part == 'content' and will automatically treat it as a pair with presentation\r\n    return this.http.delete<null>(this.apiUrl('cms/list/delete'), {\r\n      params: { index: index, parent: contentGroup.guid, fields: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader[]>(this.apiUrl(webApiContentGroup + 'itemlist'), {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup) {\r\n    return this.http.get<GroupHeader>(this.apiUrl(webApiContentGroup + 'header'), {\r\n      params: { appId: this.appId, guid: contentGroup.guid }\r\n    });\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const replaceContentDialog: DialogConfig = {\r\n  name: 'REPLACE_CONTENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ReplaceContentComponent } = await import('./replace-content.component');\r\n    return ReplaceContentComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { replaceContentDialog } from './replace-content-dialog.config';\r\nimport { EditRoutesNoHistory } from '../edit/edit.routing';\r\n\r\nexport const replaceContentRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: replaceContentDialog },\r\n    children: [\r\n      // Note 2024-07-01 2dm - not sure why it is configured without history, but to be safe I'll keep it for now\r\n      ...EditRoutesNoHistory\r\n    ],\r\n  },\r\n];\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\nimport { classLog } from '../../logging';\r\nimport { NavigateFormResult } from '../../../edit/routing/edit-routing.service';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n  standalone: true,\r\n  imports: [],\r\n  providers: [\r\n    Context, // this is used in the dialog to get the correct App\r\n  ],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  \r\n  log = classLog({DialogEntryComponent});\r\n  \r\n  #dialogData: Record<string, any>;\r\n  #dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.#dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const l = this.log.fn('ngOnInit');\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null)\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n\r\n    l.a('Open dialog: '+ dialogConfig.name, { id: this.context.id, context: this.context });\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      const dialog = (this.dialog as any);\r\n      if (dialog._dialogAnimatingOpen && dialog._lastDialogRef)\r\n        (dialog._lastDialogRef as MatDialogRef<any>).afterOpened()\r\n          .subscribe(() => this.openDialogComponent(dialogConfig, component));\r\n      else\r\n        this.openDialogComponent(dialogConfig, component);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#dialogRef.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    this.log.a(`Open dialog(initContext: ${dialogConfig.initContext})`, { name: dialogConfig.name, 'Contextid:': this.context.log.svcId, 'Context:': this.context });\r\n    if (dialogConfig.initContext)\r\n      this.context.init(this.route);\r\n\r\n    this.#dialogRef = this.dialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.#dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.#dialogRef.afterClosed().subscribe((data: any) => {\r\n      this.log.a('Dialog was closed - name:' + dialogConfig.name, { data });\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0)\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      else\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","/**\r\n * Do not reuse regex:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test#using_test_on_a_regex_with_the_global_flag\r\n */\r\nexport function guidRegex(): RegExp {\r\n  return /^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$/i;\r\n}\r\n","import { InputTypeCatalog, InputTypeStrict } from './input-type-catalog';\r\n\r\nconst empty: InputTypeStrict[] = [InputTypeCatalog.EmptyDefault, InputTypeCatalog.EmptyEnd, InputTypeCatalog.EmptyMessage];\r\n\r\nconst ends: InputTypeStrict[] = [InputTypeCatalog.EmptyDefault, InputTypeCatalog.EmptyEnd];\r\n\r\nconst oldValuePickers: InputTypeStrict[] = [\r\n  InputTypeCatalog.StringDropdown,\r\n  InputTypeCatalog.NumberDropdown,\r\n];\r\n\r\nconst oldEntityPickers: InputTypeStrict[] = [\r\n  InputTypeCatalog.EntityContentBlocks,\r\n  InputTypeCatalog.EntityDefault,\r\n  InputTypeCatalog.EntityQuery,\r\n];\r\n\r\nconst oldOtherPickers: InputTypeStrict[] = [\r\n  InputTypeCatalog.StringDropdownQuery,\r\n  InputTypeCatalog.StringTemplatePicker,\r\n];\r\n\r\nconst newPicker: InputTypeStrict[] = [\r\n  InputTypeCatalog.EntityPicker,\r\n  InputTypeCatalog.StringPicker,\r\n  InputTypeCatalog.NumberPicker,\r\n];\r\n\r\nexport class InputTypeHelpers {\r\n  static isEmpty(inputType: InputTypeStrict): boolean {\r\n    return empty.includes(inputType);\r\n  }\r\n\r\n  static endsPreviousGroup(inputType: InputTypeStrict): boolean {\r\n    return ends.includes(inputType);\r\n  }\r\n\r\n  static isGroupStart(inputType: InputTypeStrict): boolean {\r\n    return inputType === InputTypeCatalog.EmptyDefault;\r\n  }\r\n  \r\n  static isGroupEnd(inputType: InputTypeStrict): boolean {\r\n    return inputType === InputTypeCatalog.EmptyEnd;\r\n  }\r\n\r\n  static isMessage(inputType: InputTypeStrict): boolean {\r\n    return inputType === InputTypeCatalog.EmptyMessage;\r\n  }\r\n\r\n  /** True if it's either an EntityPicker, StringPicker or NumberPicker */\r\n  static isNewPicker(inputType: InputTypeStrict): boolean {\r\n    return newPicker.includes(inputType);\r\n  }\r\n\r\n  static isOldValuePicker(inputType: InputTypeStrict): boolean {\r\n    return oldValuePickers.includes(inputType);\r\n  }\r\n\r\n  static isAnyPicker(inputType: InputTypeStrict): boolean {\r\n    return newPicker.includes(inputType)\r\n      || oldValuePickers.includes(inputType)\r\n      || oldEntityPickers.includes(inputType)\r\n      || oldOtherPickers.includes(inputType);\r\n  }\r\n}\r\n","\r\nexport class JsonHelpers {\r\n\r\n  /** Tries to parse string as JSON */\r\n  static tryParse(input: string): any {\r\n    try {\r\n      return JSON.parse(input);\r\n    } catch { }\r\n  }\r\n}\r\n","import { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function loadScripts(scriptObjects: ScriptObject[], callback: () => void, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n  const w = window as Record<string, any>;\r\n\r\n  if (global != null && !!w[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  window.require([scrObj.src], (exportedVar: any) => {\r\n    if (exportedVar && !w[global]) {\r\n      w[global] = exportedVar;\r\n    }\r\n    newCallback();\r\n  });\r\n}\r\n\r\nexport interface ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import { EnvironmentSpecs } from '@2sic.com/2sxc-typings';\r\nimport { DialogContextApp } from '../models/dialog-context.models';\r\nimport { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n/**\r\n * This ensures that $2sxc is fully initialized with parameters which are provided later on\r\n * The appApi is being added in v12\r\n * It's important because in Oqtane the app-api root is different in from the normal admin-apis\r\n */\r\nexport function UpdateEnvVarsFromDialogSettings(appContext: DialogContextApp): void {\r\n  try {\r\n    const includedApiRoot = appContext?.Api;\r\n    if (!includedApiRoot) return;\r\n\r\n    const old2sxcHeader = (window.$2sxc.env as any).header as EnvironmentSpecs;\r\n    const new2sxcHeader = { ...old2sxcHeader, appApi: includedApiRoot } as EnvironmentSpecs;\r\n    window.$2sxc.env.load(new2sxcHeader);\r\n  } catch { /* ignore */ }\r\n}\r\n","import { PermissionsCount } from '../../app-administration/models/permissions-count.model';\r\nimport { Language } from './language.model';\r\n\r\nexport interface DialogContextApp {\r\n  /** Root for app APIs and content/query */\r\n  Api: string;\r\n  Folder: string;\r\n  GettingStartedUrl: string;\r\n  Id: number;\r\n  Identifier: string;\r\n  IsContentApp: boolean;\r\n  IsGlobalApp: boolean;\r\n  IsInherited: boolean;\r\n  IsShared: boolean;\r\n  IsSiteApp: boolean;\r\n  Name: string;\r\n  Permissions: PermissionsCount;\r\n  SettingsScope: AppScope;\r\n  Url: string;\r\n  SharedUrl: string;\r\n\r\n  /** New app icon */\r\n  Icon: string;\r\n}\r\n\r\nexport interface ApiKeySpecs {\r\n  NameId: string;\r\n  ApiKey: string;\r\n  IsDemo: boolean;\r\n}\r\n\r\nexport const AppScopes = {\r\n  App: 'App',\r\n  Site: 'Site',\r\n  Global: 'Global',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\nexport type AppScope = typeof AppScopes[keyof typeof AppScopes];\r\n\r\nexport interface DialogContextEnable {\r\n  /** Determines if app admin should show app-permissions (true for Apps, false for Content and Global) */\r\n  AppPermissions?: boolean;\r\n  /** Determines if Code editing should be enabled (true for super-users) */\r\n  CodeEditor?: boolean;\r\n  DebugMode: boolean;\r\n  /** True if saving of formulas should be enabled (for edit-ui) */\r\n  FormulaSave?: boolean;\r\n  /** While debug is enabled, this allows some Edit Ui actions even when they are disabled in fields settings */\r\n  OverrideEditRestrictions?: boolean;\r\n  /** Determines if Queries should be enabled (true for Apps) */\r\n  Query?: boolean;\r\n}\r\n\r\nexport interface DialogContextLanguage {\r\n  Current: string;\r\n  List: Language[];\r\n  Primary: string;\r\n}\r\n\r\nexport interface DialogContextPage {\r\n  Id: number;\r\n}\r\n\r\nexport interface DialogContextSite {\r\n  DefaultApp: DialogContextSiteApp;\r\n  Id: number;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSystem {\r\n  DefaultApp: DialogContextSiteApp;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSiteApp {\r\n  ZoneId: number;\r\n  AppId: number;\r\n}\r\n\r\nexport interface DialogContextUser {\r\n  Email: string;\r\n  Id: number;\r\n  Guid: string;\r\n  IsAnonymous: boolean;\r\n  IsSiteAdmin: boolean;\r\n  IsContentAdmin: boolean;\r\n  IsSystemAdmin: boolean;\r\n  Name: string;\r\n  Username: string;\r\n}\r\n\r\n// export interface DialogContextFeature {\r\n//   NameId: string;\r\n//   Enabled: boolean;\r\n// }\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyExtras, keyIsShared, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { DialogHashParams, ExtrasParam } from '../models/dialog-url-params.model';\r\nimport { EditForm, EditPrep, ViewOrFileIdentifier } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCodeFile(path: string, isShared: boolean, templateId?: number) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form = {\r\n      items: [{\r\n        Path: path,\r\n        ...(templateId != null && EditPrep.editId(templateId)),\r\n      }] as ViewOrFileIdentifier[]\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyIsShared, isShared.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(queryId)],\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyPipelineId, queryId.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppsManagement(zoneId: number, tab?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.Zone),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppAdministration(zoneId: number, appId: number, tab?: string, scope?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n      ...(scope && { scope }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, appId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.App),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  private buildSharedHashParams() {\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, this.context.zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, this.context.appId.toString()),\r\n      ...this.buildHashParam(keyModuleId, this.context.moduleId?.toString()),\r\n      ...this.buildHashParam(keyContentBlockId, this.context.contentBlockId?.toString()),\r\n      ...this.buildHashParam(keyPartOfPage),\r\n      ...(sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : {}),\r\n    };\r\n    return hashParams;\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam: DialogHashParams = { [rawKey]: rawValue };\r\n    return hashParam;\r\n  }\r\n\r\n  private buildFullUrl(hashParams: DialogHashParams) {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    const allHashParams: DialogHashParams = {\r\n      ...this.buildSharedHashParams(),\r\n      ...hashParams,\r\n    };\r\n    const hashUrl = Object.entries(allHashParams).reduce((acc, [key, value]) => `${acc}&${key}=${value}`, '').replace('&', '#');\r\n    return newHref + hashUrl;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}