{"version":3,"file":"projects_eav-ui_src_app_dev-rest_data_data_component_ts.36f4a9b1d2c7fe8c.js","mappings":"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","names":["DevRestDataIntroductionComponent","constructor","this","scenarios","AllScenarios","ngOnInit","static","t","core","VBU","selectors","inputs","data","standalone","features","i0","decls","vars","consts","template","rf","ctx","vm_r3","scenario","useVirtual","DevRestDataComponent_Conditional_0_div_48_Conditional_8_Template","permissions","length","$event","_r1","ctx_r1","changeScenario","DevRestDataComponent_Conditional_0_div_27_Template","DevRestDataComponent_Conditional_0_div_37_Template","DevRestDataComponent_Conditional_0_div_48_Template","DevRestDataComponent_Conditional_0_div_56_Template","name","key","DevRestDataComponent","DevRestBase","dialogRef","router","route","context","dnnContext","permissionsService","transient","PermissionsService","super","hostClass","entityService","EntityService","contentTypesService","ContentTypesService","contentType$","paramMap","pipe","map","pm","get","GoToDevRest","paramTypeName","switchMap","ctName","retrieveContentType","share","permissions$","buildPermissionStream","root$","combineLatest","scenario$","dialogSettings$","contentType","dialogSettings","resolved","replace","Name","inSameContext","encodeURI","Context","App","Folder","rootBasedOnScenario","noDataFound","Id","Guid","Title","itemOfThisType$","getEntities$","filter","ct","contentTypeName","StaticName","list","viewModel$","root","item","diag","buildBaseViewModel","itemId","apiCalls","generateApiCalls","$2sxc","i1","i2","i3","i4","hostVars","hostBindings","DevRestDataComponent_Conditional_0_Template","tmp_0_0","MatButtonModule","TippyDirective","MatIconModule","i5","RouterOutlet","SelectorWithHelpComponent","MatTabsModule","i6","DevRestTabIntroductionComponent","DevRestTabExamplesComponent","DevRestUrlsAndCodeComponent","DevRestTabPermissionsComponent","DevRestHttpHeadersComponent","AsyncPipe","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/dev-rest/data/introduction/introduction.component.ts","./projects/eav-ui/src/app/dev-rest/data/introduction/introduction.component.html","./projects/eav-ui/src/app/dev-rest/data/data.component.html","./projects/eav-ui/src/app/dev-rest/data/data.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { AllScenarios } from '../..';\r\nimport { DevRestDataViewModel } from '../data-template-vars';\r\n\r\n@Component({\r\n  selector: 'app-dev-data-introduction',\r\n  templateUrl: './introduction.component.html',\r\n  standalone: true,\r\n})\r\nexport class DevRestDataIntroductionComponent implements OnInit {\r\n\r\n  @Input() data: DevRestDataViewModel;\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>\r\n  To learn more about data you may want to read these <a href=\"https://docs.2sxc.org/index.html\" target=\"_blank\">docs</a>:\r\n</p>\r\n<ul>\r\n  <li><a href=\"https://docs.2sxc.org/basics/data/index.html\" target=\"_blank\">Data & Content-Types in 2sxc</a></li>\r\n  <li><a href=\"https://docs.2sxc.org/web-api/content-rest-web-api.html\" target=\"_blank\">Content REST API</a></li>\r\n</ul>\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Using REST with Data of <code>{{ vm.name }}</code></div>\r\n      <!-- @if (!isSideNavContent) {\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n      } -->\r\n    </div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <router-outlet></router-outlet>\r\n    <app-selector-with-help label=\"Choose Scenario\" [items]=\"scenarios\" [value]=\"vm.scenario.key\"\r\n      (valueChange)=\"changeScenario($event)\">\r\n    </app-selector-with-help>\r\n    <mat-tab-group dynamicHeight color=\"accent\"\r\n      class=\"mat-tab-group-fit-height mat-tab-group-fancy-scrollbar default-fonts\">\r\n      <!-- Introduction -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Introduction\">\r\n          <mat-icon>emoji_objects</mat-icon>\r\n          <span>Introduction</span>\r\n        </div>\r\n        <app-dev-data-introduction [data]=\"vm\"></app-dev-data-introduction>\r\n        <app-dev-rest-tab-introduction [data]=\"vm\"></app-dev-rest-tab-introduction>\r\n      </mat-tab>\r\n      <!-- Absolute / Virtual URLs -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\"\r\n          [tippy]=\"(vm.scenario.useVirtual ? 'Virtual ' : 'Absolute ') + 'REST URLs'\">\r\n          <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n          <span>Call {{ vm.scenario.useVirtual ? 'Virtual' : 'Absolute' }} REST URLs</span>\r\n        </div>\r\n        <app-dev-rest-tab-examples-intro [data]=\"vm\"></app-dev-rest-tab-examples-intro>\r\n        <!-- REST Tab showing the urls and code snippets -->\r\n        <app-dev-rest-urls-and-code [data]=\"vm\"></app-dev-rest-urls-and-code>\r\n      </mat-tab>\r\n      <!-- Permissions explained -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Permissions\">\r\n          <mat-icon>person</mat-icon>\r\n          <span>Permissions ({{ vm.permissions.length }})</span>\r\n          @if (!vm.permissions.length) {\r\n          <mat-icon>warning</mat-icon>\r\n          }\r\n        </div>\r\n        <app-dev-rest-tab-permissions [data]=\"vm\"></app-dev-rest-tab-permissions>\r\n      </mat-tab>\r\n      <!-- HTTP Headers Explained -->\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"HTTP headers and auto\">\r\n          <mat-icon>perm_device_information</mat-icon>\r\n          <span>HTTP headers & &nbsp;<code>/auto/</code></span>\r\n        </div>\r\n        <app-dev-rest-tab-headers [data]=\"vm\"></app-dev-rest-tab-headers>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { Component, HostBinding, Input, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, filter, map, share, switchMap } from 'rxjs';\r\nimport { generateApiCalls } from '..';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { PermissionsService } from '../../permissions';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DevRestBase } from '../dev-rest-base.component';\r\nimport { GoToDevRest } from '../go-to-dev-rest';\r\nimport { DevRestDataViewModel } from './data-template-vars';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { DevRestHttpHeadersComponent } from '../tab-headers/tab-headers.component';\r\nimport { DevRestTabPermissionsComponent } from '../tab-permissions/tab-permissions.component';\r\nimport { DevRestUrlsAndCodeComponent } from '../dev-rest-urls-and-code/dev-rest-urls-and-code.component';\r\nimport { DevRestTabExamplesComponent } from '../tab-examples/tab-examples.component';\r\nimport { DevRestTabIntroductionComponent } from '../tab-introduction/tab-introduction.component';\r\nimport { DevRestDataIntroductionComponent } from './introduction/introduction.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { SelectorWithHelpComponent } from '../selector-with-help/selector-with-help.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { EntityBasic } from '../../shared/models/entity-basic';\r\nimport { transient } from '../../core';\r\nimport { EntityService } from '../../shared/services/entity.service';\r\n\r\n\r\nconst pathToContent = 'app/{appname}/data/{typename}';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest-data',\r\n  templateUrl: './data.component.html',\r\n  styleUrls: ['../dev-rest-all.scss'],\r\n  // we need preserve whitespace - otherwise spaces are missing in some conditional HTML\r\n  preserveWhitespaces: true,\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    TippyDirective,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SelectorWithHelpComponent,\r\n    MatTabsModule,\r\n    DevRestDataIntroductionComponent,\r\n    DevRestTabIntroductionComponent,\r\n    DevRestTabExamplesComponent,\r\n    DevRestUrlsAndCodeComponent,\r\n    DevRestTabPermissionsComponent,\r\n    DevRestHttpHeadersComponent,\r\n    AsyncPipe,\r\n  ],\r\n})\r\nexport class DevRestDataComponent extends DevRestBase<DevRestDataViewModel> implements OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @Input() contentTypeInput$: BehaviorSubject<ContentType>;\r\n\r\n  private entityService = transient(EntityService);\r\n  private contentTypesService = transient(ContentTypesService);\r\n\r\n\r\n  constructor(\r\n    dialogRef: MatDialogRef<DevRestDataComponent>,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    context: Context,\r\n    /** sxc-angular context. Used to resolve urls */\r\n    dnnContext: DnnContext,\r\n  ) {\r\n    const permissionsService = transient(PermissionsService);\r\n    super(context, dialogRef, dnnContext, router, route, permissionsService);\r\n\r\n    const contentType$ = route.paramMap.pipe(\r\n      map(pm => pm.get(GoToDevRest.paramTypeName)),\r\n      switchMap(ctName => this.contentTypesService.retrieveContentType(ctName)),\r\n      share()\r\n    );\r\n\r\n    this.permissions$ = this.buildPermissionStream(GoToDevRest.paramTypeName);\r\n\r\n    // Build Root Stream (for the root folder)\r\n    const root$ = combineLatest([contentType$, this.scenario$, this.dialogSettings$]).pipe(\r\n      map(([contentType, scenario, dialogSettings]) => {\r\n        const resolved = pathToContent\r\n          .replace('{typename}', contentType.Name)\r\n          .replace('{appname}', scenario.inSameContext ? 'auto' : encodeURI(dialogSettings.Context.App.Folder));\r\n        return this.rootBasedOnScenario(resolved, scenario);\r\n      }),\r\n    );\r\n\r\n    // Get an item of this type for building urls\r\n    const noDataFound: EntityBasic = { Id: 0, Guid: '00000000-0000-0000-0000-000000000000', Title: 'no data found' };\r\n    const itemOfThisType$ = this.entityService.getEntities$(\r\n      contentType$.pipe(\r\n        filter(ct => !!ct),\r\n        map(ct => ({ contentTypeName: ct.StaticName })),\r\n      ),\r\n    ).pipe(\r\n      map(list => list.length\r\n        ? list[0]\r\n        // we need a dummy in case nothing is found, otherwise the observables stop\r\n        : noDataFound),\r\n    );\r\n\r\n    // Prepare everything for use in the template\r\n    this.viewModel$ = combineLatest([\r\n        contentType$,\r\n        this.scenario$,\r\n        this.permissions$,\r\n        root$,\r\n        itemOfThisType$,\r\n        this.dialogSettings$\r\n    ]).pipe(\r\n      map(([contentType, scenario, permissions, root, item, diag]) => {\r\n        var result: DevRestDataViewModel = {\r\n          ...this.buildBaseViewModel(contentType.Name, contentType.StaticName, diag, permissions, root, scenario),\r\n          contentType,\r\n          itemId: item.Id,\r\n          apiCalls: generateApiCalls(dnnContext.$2sxc, scenario, context, root, item.Id),\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}