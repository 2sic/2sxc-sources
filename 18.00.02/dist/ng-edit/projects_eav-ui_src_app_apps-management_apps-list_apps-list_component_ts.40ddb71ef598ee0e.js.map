{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-list_apps-list_component_ts.40ddb71ef598ee0e.js","mappings":"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","names":["i0","_r1","ctx_r1","do","app","IsApp","AppsListActionsComponent","agInit","params","this","data","refresh","verb","static","t","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","AppsListActionsComponent_Conditional_2_Template","AppsListActionsComponent_Conditional_3_Template","AppsListActionsComponent_ng_template_10_Template","IsGlobal","IsInherited","lightSpeed","menu_r3","TippyDirective","MatIconModule","i1","MatBadgeModule","MatRippleModule","i2","MatMenuModule","i3","LightSpeedActionsComponent","encapsulation","AppListShowIcons","states","true","tooltip","icon","false","AppListCodeErrorIcons","clickable","getUrl","window","$2sxc","http","apiUrl","Id","$event","importApp","openChange","browseCatalog","createInheritedApp","addFromFolder","createApp","apps","gridOptions","_c0","fabOpen","isAddFromFolderEnabled","AppsListComponent","#refreshApps$","#appsListSvc","#dialogRouter","constructor","snackBar","context","dialog","viewContainerRef","changeDetectorRef","log","classLog","signal","refreshApps","computed","console","getAll","pipe","catchError","of","undefined","buildGridOptions","Subject","inject","FeaturesScopedService","isEnabled","FeatureNames","AppSyncWithSiteFiles","transient","AppsListService","DialogRoutingService","ModuleRegistry","registerModules","ClientSideRowModelModule","ngOnInit","apps$","startWith","switchMap","shareReplay","doOnDialogClosed","next","set","viewModel$","combineLatest","map","ngOnDestroy","complete","open","navParentFirstChild","files","state","deleteApp","result","prompt","Name","delete","subscribe","error","duration","alert","flushApp","confirm","flushCache","openLightSpeed","formUrl","convertFormToUrl","AppAdminHelpers","getLightSpeedEditParams","zoneId","openApp","toString","openLightSpeedFeatInfo","openFeatureDialog","LightSpeed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","IconShow","cellRenderer","AgBoolIconRenderer","settings","TextWide","field","cellClass","split","sort","onCellClicked","Thumbnail","value","Character","width","Number","Boolean","headerName","filter","BooleanFilterComponent","ActionsPinnedRight3","onOpenLightspeed","openLightspeedFeatureInfo","AppsListComponent_Conditional_0_Template","tmp_0_0","SxcGridModule","i4","MatDialogActions","EcoFabSpeedDialComponent","NgClass","EcoFabSpeedDialTriggerComponent","MatButtonModule","i5","i6","EcoFabSpeedDialActionsComponent","i7","RouterOutlet","AsyncPipe","DragAndDropDirective","TrueFalseComponent","trueIcon","falseIcon","reverse","_angular_core__WEBPACK_IMPORTED_MODULE_0__","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","ContentSecurityPolicy","PermissionsByLanguage","FieldShareConfigManagement","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","AgBoolCellIconsDefault","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","url","showIcon_r2","allSettings","d","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","cellClassSecAction","actionsRight","pinned","textSortFilter","sortable","ActionsPinnedRight1","ActionsPinnedRight4","ActionsPinnedRight5","ActionsPinnedRight6","ActionsPinnedRight7","headerClass","valueGetter","IsHidden","Items","Fields","IdFieldComponent","Boolean2","Boolean3","TextWidePrimary","flex","minWidth","TextWideMin100","TextWideFlex3","TextNarrow","TextWideActionClass","key","tooltipGetter","contentType","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","node","getValue","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","FormsModule","MatRadioModule","styles","id","align","copy","copyToClipboard","_angular_core__WEBPACK_IMPORTED_MODULE_1__","logSpecs","ServiceBase","router","route","super","snapshot","getParam","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","getCurrentNavigation","extras","callback","l","fnIf","subscriptions","add","childDialogClosed$","end","navPath","navigate","navRelative","commands","relativeTo","parent","firstChild","events","event","NavigationEnd","pairwise","hadChildBefore","hasChildNow","_angular_core__WEBPACK_IMPORTED_MODULE_7__","jDH","factory","ɵfac","Subscription","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/app-list-grid-config.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["<div class=\"actions-component\">\r\n  <!-- Global/Inherited button for shared apps (if enabled) -->\r\n  <div class=\"eav-grid-action-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    @if (app.IsGlobal) {\r\n      <mat-icon>foundation</mat-icon>\r\n    }\r\n    @if (app.IsInherited) {\r\n      <mat-icon>holiday_village</mat-icon>\r\n    }\r\n  </div>\r\n\r\n  <!-- Lightspeed button -->\r\n  <app-lightspeed-action [lightSpeedOwner]=\"app\" [params]=\"params\" [lightSpeed]=\"app.lightSpeed\"></app-lightspeed-action>\r\n\r\n  <!-- More button -->\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<!-- The menu which appears on more -->\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item (click)=\"do('flushCache')\">\r\n      <mat-icon>cached</mat-icon>\r\n      <span>Flush cache</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"do('deleteApp')\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams, AppsListActionsType } from './apps-list-actions.models';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LightSpeedActionsComponent } from '../../../admin-shared/lightspeed-action/lightspeed-action.component';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatRippleModule,\r\n    MatMenuModule,\r\n    LightSpeedActionsComponent,\r\n  ],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n\r\n  public params: ICellRendererParams & AppsListActionsParams;\r\n  agInit(params: ICellRendererParams & AppsListActionsParams): void {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  do(verb: AppsListActionsType): void {\r\n    this.params.do(verb, this.app);\r\n  }\r\n}\r\n","import { AgBoolCellIconSettings } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { App } from '../models/app.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const AppListShowIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'Show this app to users',\r\n      icon: 'visibility',\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: 'visibility_off',\r\n    }\r\n  }\r\n};\r\n\r\nexport const AppListCodeErrorIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      clickable: true,\r\n      tooltip: 'This App uses obsolete code which will cause problems on future upgrades. Click to see details.',\r\n      icon: 'bug_report',\r\n      getUrl: (data: App) => window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete&filter=AppId=' + data.Id),\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: '',\r\n    }\r\n  }\r\n};\r\n","@if (viewModel$ | async; as vm) {\r\n  <!-- <pre>\r\n    <div>Old: {{vm.apps?.length}}</div>\r\n    <div>New: {{apps()}} </div>\r\n  </pre> -->\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.apps\" [gridOptions]=\"gridOptions\" appDragAndDrop\r\n      [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n    </ag-grid-angular>\r\n    <mat-dialog-actions align=\"end\">\r\n      <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\" (openChange)=\"openChange($event)\">\r\n        <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n          <button mat-fab>\r\n            <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n          </button>\r\n        </eco-fab-speed-dial-trigger>\r\n        <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n            <mat-icon>holiday_village</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Add from folder\" (click)=\"addFromFolder()\">\r\n            <mat-icon [matBadgeHidden]=\"isAddFromFolderEnabled()\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n              matBadgePosition=\"below after\" aria-hidden=\"false\">\r\n              add\r\n            </mat-icon>\r\n          </button>\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Import app\" (click)=\"importApp()\">\r\n            <mat-icon>cloud_upload</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create app\" (click)=\"createApp()\">\r\n            <mat-icon>add</mat-icon>\r\n          </button>\r\n        </eco-fab-speed-dial-actions>\r\n      </eco-fab-speed-dial>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n\r\n<router-outlet></router-outlet>\r\n","import { GridOptions, ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef, computed, inject, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, catchError, combineLatest, map, Observable, of, shareReplay, startWith, Subject, switchMap, tap } from 'rxjs';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesScopedService } from '../../features/features-scoped.service';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppsListActionsComponent } from './apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from './apps-list-actions/apps-list-actions.models';\r\nimport { openFeatureDialog } from '../../features/shared/base-feature.component';\r\nimport { MatDialog, MatDialogActions } from '@angular/material/dialog';\r\nimport { AppAdminHelpers } from '../../app-administration/app-admin-helpers';\r\nimport { AppListCodeErrorIcons, AppListShowIcons } from './app-list-grid-config';\r\nimport { AgBoolIconRenderer } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component';\r\nimport { AgBoolCellIconsParams } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, AsyncPipe } from '@angular/common';\r\nimport { EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent, EcoFabSpeedDialActionsComponent } from '@ecodev/fab-speed-dial';\r\nimport { ModuleRegistry } from '@ag-grid-community/core';\r\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { DragAndDropDirective } from '../../shared/directives/drag-and-drop.directive';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { transient } from '../../core';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { classLog } from '../../shared/logging';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    DragAndDropDirective,\r\n    // WIP 2dm - needed for the lightspeed buttons to work\r\n  ],\r\n})\r\nexport class AppsListComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({AppsListComponent});\r\n  fabOpen = signal(false);\r\n\r\n  // TODO: 2dg appsListSvc get all\r\n  refreshApps = signal(false);\r\n  apps = computed(() => {\r\n    const refresh = this.refreshApps();\r\n\r\n    console.log(\"App refreshed:\", refresh);  // Log, wenn `refreshApps()` getriggert wird\r\n    const data = this.#appsListSvc.getAll().pipe(catchError(() => of(undefined)));\r\n    return data;\r\n  });\r\n\r\n  apps$: Observable<App[]>;\r\n  gridOptions = this.buildGridOptions();\r\n\r\n\r\n  #refreshApps$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<AppsListViewModel>;\r\n  public features = inject(FeaturesScopedService);\r\n  public isAddFromFolderEnabled = this.features.isEnabled(FeatureNames.AppSyncWithSiteFiles);\r\n\r\n  #appsListSvc = transient(AppsListService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private context: Context,\r\n    // Services for showing features in the menu\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.apps$ = this.#refreshApps$.pipe(\r\n      startWith(undefined),\r\n      switchMap(() => this.#appsListSvc.getAll().pipe(catchError(() => of(undefined)))),\r\n      shareReplay(1),\r\n    );\r\n\r\n    this.#dialogRouter.doOnDialogClosed(() => this.#refreshApps$.next());\r\n    this.#dialogRouter.doOnDialogClosed(() => this.refreshApps.set(true));\r\n\r\n\r\n    // TODO: @2dg - this should be easy to get rid of #remove-observables\r\n    this.viewModel$ = combineLatest([this.apps$]).pipe(\r\n      map(([apps]) => {\r\n        return { apps};\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.#refreshApps$.complete();\r\n  }\r\n\r\n  openChange(open: boolean): void {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  browseCatalog(): void {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp(): void {\r\n    this.#dialogRouter.navParentFirstChild(['create']);\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.#dialogRouter.navParentFirstChild(['create-inherited']);\r\n  }\r\n\r\n  addFromFolder(): void {\r\n    this.#dialogRouter.navParentFirstChild(['add-app-from-folder']);\r\n  }\r\n\r\n  importApp(files?: File[]): void {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.#dialogRouter.navParentFirstChild(['import'], { state: dialogData });\r\n  }\r\n\r\n  private deleteApp(app: App): void {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) return;\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.#appsListSvc.delete(app.Id).subscribe({\r\n        error: () => {\r\n          this.snackBar.open('Delete failed. Please check console for more information', undefined, { duration: 3000 });\r\n          this.#refreshApps$.next();\r\n          this.refreshApps.set(true)\r\n        },\r\n        next: () => {\r\n          this.snackBar.open('Deleted', undefined, { duration: 2000 });\r\n          this.#refreshApps$.next();\r\n          this.refreshApps.set(true)\r\n        },\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App): void {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) return;\r\n    this.snackBar.open('Flushing cache...');\r\n    this.#appsListSvc.flushCache(app.Id).subscribe({\r\n      error: () => {\r\n        this.snackBar.open('Cache flush failed. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.snackBar.open('Cache flushed', undefined, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private openLightSpeed(app: App): void {\r\n    const formUrl = convertFormToUrl(AppAdminHelpers.getLightSpeedEditParams(app.Id));\r\n    this.#dialogRouter.navParentFirstChild([`${this.context.zoneId}/${app.Id}/edit/${formUrl}`]);\r\n  }\r\n\r\n  private openApp(app: App): void {\r\n    this.#dialogRouter.navParentFirstChild([app.Id.toString()]);\r\n  }\r\n\r\n  openLightSpeedFeatInfo() {\r\n    openFeatureDialog(this.dialog, FeatureNames.LightSpeed, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<App>(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.IconShow,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: () => AppListShowIcons }))(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Name',\r\n          cellClass: 'apps-list-primary-action highlight'.split(' '),\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const app: App = params.data;\r\n            this.openApp(app);\r\n          },\r\n          cellRenderer: (params: ICellRendererParams) => {\r\n            const app: App = params.data;\r\n            return `\r\n            <div class=\"container\">\r\n              ${app.Thumbnail\r\n                ? `<img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>`\r\n                : `<div class=\"image logo\"><span class=\"material-icons-outlined\">star_border</span></div>`\r\n              }\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>\r\n            `;\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Folder',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Version',\r\n          width: 78,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Items',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Boolean,\r\n          field: 'HasCodeWarnings',\r\n          headerName: 'Code',\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: (app) => AppListCodeErrorIcons } as AgBoolCellIconsParams<App>))(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight3,\r\n          cellRenderer: AppsListActionsComponent,\r\n          cellRendererParams: {\r\n            onOpenLightspeed: (app) => this.openLightSpeed(<App>app),\r\n            openLightspeedFeatureInfo: () => this.openLightSpeedFeatInfo(),\r\n            do: (verb, app) => {\r\n              switch (verb) {\r\n                case 'deleteApp': this.deleteApp(app); break;\r\n                case 'flushCache': this.flushApp(app); break;\r\n              }\r\n            }\r\n          } satisfies AppsListActionsParams,\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface AppsListViewModel {\r\n  apps: App[];\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-true-false',\r\n  templateUrl: './true-false.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    NgClass,\r\n  ],\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = {\r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { TrueFalseParams } from '../../dev-rest/api/true-false/true-false.models';\r\nimport { IdFieldComponent } from '../components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../components/id-field/id-field.models';\r\n\r\nconst cellClassSecAction = 'secondary-action no-padding'.split(' ');\r\n\r\nconst actionsRight: ColDef = {\r\n  cellClass: cellClassSecAction,\r\n  pinned: 'right',\r\n};\r\n\r\nconst textSortFilter: ColDef = {\r\n  sortable: true,\r\n  filter: 'agTextColumnFilter',\r\n};\r\n\r\nexport class ColumnDefinitions {\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    ...actionsRight,\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    ...actionsRight,\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    ...actionsRight,\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    ...actionsRight,\r\n  };\r\n\r\n  // TODO: the name here is wrong - 6 indicates 6 buttons, but the size wouldn't allow this\r\n  static ActionsPinnedRight6: ColDef = {\r\n    width: 82,\r\n    ...actionsRight,\r\n  };\r\n\r\n  // TODO: the name here is wrong - 7 indicates 6 buttons, but the size wouldn't allow this\r\n  static ActionsPinnedRight7: ColDef = {\r\n    width: 62,\r\n    cellClass: cellClassSecAction + ' no-outline',\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  static Items: ColDef = {\r\n    width: 102,\r\n    headerClass: 'dense',\r\n    cellClass: cellClassSecAction,\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Fields: ColDef = {\r\n    width: 94,\r\n    headerClass: 'dense',\r\n    cellClass: cellClassSecAction,\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static IdWithDefaultRenderer: ColDef = {\r\n    ...ColumnDefinitions.Id,\r\n    cellRenderer: IdFieldComponent,\r\n  }\r\n\r\n  static Boolean: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n  };\r\n\r\n  static Boolean2: ColDef = {\r\n    width: 100,\r\n    sortable: true,\r\n    cellClass: 'no-outline',\r\n    filter: BooleanFilterComponent,\r\n  };\r\n\r\n  static Boolean3: ColDef = {\r\n    headerClass: 'dense',\r\n    width: 80,\r\n    cellClass: 'no-outline',\r\n    cellRenderer: TrueFalseComponent,\r\n    cellRendererParams: (() => ({\r\n      reverse: false,\r\n    } satisfies TrueFalseParams))(),\r\n  }\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWidePrimary: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action highlight'.split(' '),\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWideMin100: ColDef = {\r\n    flex: 1,\r\n    minWidth: 100,\r\n    ...textSortFilter,\r\n  }\r\n\r\n  static TextWideFlex3: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static TextWideActionClass: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n    ...textSortFilter,\r\n  };\r\n\r\n  static idFieldParamsTooltipGetter<T extends { Id: string | number, Guid?: string }>(key?: keyof T): IdFieldParams<T> {\r\n    const objWithTooltipGetter: IdFieldParams<T> = {\r\n      tooltipGetter: (contentType: T) => `ID: ${contentType.Id}\\nGUID: ${contentType[key || \"Guid\"]}`,\r\n    };\r\n    return objWithTooltipGetter;\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n  ]\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) return;\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../services/service-base';\r\nimport { classLog } from '../logging';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({DialogRoutingService}, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public navParentFirstChild(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route.parent.firstChild });\r\n  }\r\n  \r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}