{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts-projects_eav-ui_src_app_shared_fields_-53fb0d.14d1e80dca81c6c3.js","mappings":"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","names":["webApiTypeRoot","webApiTypeScopes","ContentTypesService","constructor","http","context","dnnContext","this","apiUrl","name","$2sxc","retrieveContentType","staticName","get","params","appId","toString","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","map","scopesData","scopes","old","Object","keys","key","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","ExportAppPartsService","getContentInfo","webApiAppPartsRoot","exportParts","contentTypeIds","entityIds","templateIds","url","join","window","open","ExportAppService","getAppInfo","webApiAppRoot","exportAppUrl","exportForVersionControl","includeContentGroups","resetAppGuid","withFiles","withPortalFiles","ImportAppPartsService","importAppParts","resetApp","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","export","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","ctx_r0","dialogData","message","ConfirmDeleteDialogComponent","dialogRef","hostClass","closeDialog","confirm","close","MAT_DIALOG_DATA","core","VBU","selectors","hostVars","hostBindings","rf","ctx","ConfirmDeleteDialogComponent_Conditional_4_Template","entityTitle","entityId","MatCardModule","MatButtonModule","SafeHtmlPipe","styles","MetadataActionsComponent","agInit","refresh","deleteMetadata","onDelete","data","standalone","features","decls","vars","consts","template","MatRippleModule","MatIconModule","MetadataContentTypeComponent","metadata","_Type","Description","TippyDirective","scopeOption_r2","MetadataSaveDialogComponent_Conditional_0_Conditional_11_For_5_Template","vm_r3","scopeOptions","length","ctx_r3","dropdownInsertValue","contentType_r5","Label","MetadataSaveDialogComponent_Conditional_0_Conditional_15_For_2_Template","contentTypes","MetadataSaveDialogComponent_Conditional_0_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_0_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_0_Conditional_16_Template","_r1","toggleGuidedContentType","MetadataSaveDialogComponent_Conditional_0_Conditional_24_Template","$event","toggleAdvancedMode","form","advancedMode","guidedContentType","_c0","controls","touched","errors","required","valid","MetadataSaveDialogComponent","contentTypesService","transient","ngOnInit","contentTypes$","BehaviorSubject","scopeOptions$","buildForm","fetchScopes","viewModel$","combineLatest","ngOnDestroy","complete","event","checked","formValues","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","eavConstants","default","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","prompt","some","option","next","fetchContentTypes","MetadataSaveDialogComponent_Conditional_0_Template","tmp_0_0","FormsModule","ReactiveFormsModule","MatFormFieldModule","i4","MatSelectModule","i5","i6","MatOptionModule","MatInputModule","i7","i8","NgClass","i9","MatSlideToggleModule","i10","AsyncPipe","FieldHintComponent","ClickStopPropagationDirective","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_0_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_0_Conditional_10_Conditional_8_Template","Target","TargetType","_r4","ctx_r1","createMetadata","recommendation_r7","Icon","Enabled","_r6","$implicit","MetadataComponent_Conditional_0_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_0_Conditional_16_For_10_Conditional_2_Template","_r5","openChange","MetadataComponent_Conditional_0_Conditional_16_For_10_Template","fabOpen","recommendations","MetadataComponent_Conditional_0_Conditional_9_Template","MetadataComponent_Conditional_0_Conditional_10_Template","MetadataComponent_Conditional_0_Conditional_15_Template","MetadataComponent_Conditional_0_Conditional_16_Template","title","gridOptions","logSpecs","enabled","MetadataComponent","#entitiesSvc","#metadataSvc","#contentItemSvc","#dialogRoutes","#metadataSet$","#itemFor$","#fabOpen$","#targetType","#keyType","#key","#contentTypeStaticName","snackBar","dialog","viewContainerRef","changeDetectorRef","buildGridOptions","EntityEditService","MetadataService","ContentItemsService","DialogRoutingService","Items","Recommendations","undefined","parseInt","snapshot","paramMap","decodeURIComponent","log","EavLogger","fetchFor","fetchMetadata","doOnDialogClosed","logFilteredRecs","rxTap","set","a","filteredRecs$","filter","r","i","Count","logViewModel","recommendation","CreateEmpty","Name","create","For","calculateItemFor","error","duration","createMetadataForm","openFeatureDialog","MissingFeature","autoFocus","width","afterClosed","items","formUrl","convertFormToUrl","navRelative","markForCheck","x","EditPrep","constructMetadataInfo","newMetadataFromInfo","item","find","Guid","logGetMetadata","getMetadata","take","forEach","startsWith","replace","atob","editMetadata","editId","confirmed","DeleteWarning","isConfirmed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWide","field","onCellClicked","headerName","valueGetter","cellRenderer","ActionsPinnedRight1","MetadataComponent_Conditional_0_Template","RouterOutlet","SxcGridModule","MatDialogActions","EcoFabSpeedDialComponent","EcoFabSpeedDialTriggerComponent","EcoFabSpeedDialActionsComponent","MatBadgeModule","GoToPermissions","route","path","loadChildren","__webpack_require__","e","then","bind","m","permissionRoutes","getUrl","targetType","keyType","getUrlApp","app","getUrlAttribute","attribute","getUrlContentType","getUrlEntity","entity","getUrlLanguage","language","permissionsDialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","Promise","all","component","DialogEntryComponent","children","EditRoutes","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","inputs","ngContentSelectors","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgTemplateOutlet","onClick","stopPropagation","FsC","webApiFieldsRoot","webApiFieldsAll","webApiFieldsGetShared","ContentTypesFieldsService","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","Type","substring","indexOf","inputType","label","description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","contentTypeStaticName","fields","fld","Metadata","md","merged","All","InputType","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","ContentTypeId","SourceType","SourceField","share","inherit","inheritMetadataOf","reOrder","idArray","order","JSON","stringify","setTitle","rename","fieldId","IsTitle","Error","add","newField","Index","SortOrder","updateInputType","_angular_core__WEBPACK_IMPORTED_MODULE_3__","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","readAsText"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/export-app.service.ts","./projects/eav-ui/src/app/app-administration/services/import-app-parts.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/permissions/go-to-permissions.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions.routing.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentInfo } from '../models/content-info.model';\r\nimport { webApiAppPartsRoot } from './import-app-parts.service';\r\n\r\n@Injectable()\r\nexport class ExportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getContentInfo(scope: string) {\r\n    return this.http.get<ContentInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Get'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString(), scope },\r\n    });\r\n  }\r\n\r\n  exportParts(contentTypeIds: number[], entityIds: number[], templateIds: number[]) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Export')\r\n      + '?appId=' + this.context.appId.toString()\r\n      + '&zoneId=' + this.context.zoneId.toString()\r\n      + '&contentTypeIdsString=' + contentTypeIds.join(';')\r\n      + '&entityIdsString=' + entityIds.join(';')\r\n      + '&templateIdsString=' + templateIds.join(';');\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppInfo } from '../models/app-info.model';\r\n\r\n@Injectable()\r\nexport class ExportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAppInfo() {\r\n    return this.http.get<AppInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Statistics'), {\r\n      params: { appid: this.context.appId.toString(), zoneId: this.context.zoneId.toString() },\r\n    });\r\n  }\r\n\r\n  /** Generate the export app path. It can be extended with additional parameters */\r\n  exportAppUrl() {\r\n    return `${this.dnnContext.$2sxc.http.apiUrl(`${webApiAppRoot}Export`)}?appId=${this.context.appId}&zoneId=${this.context.zoneId}`;\r\n  }\r\n\r\n  exportForVersionControl({ includeContentGroups, resetAppGuid, withFiles }:\r\n    { includeContentGroups: boolean; resetAppGuid: boolean; withFiles: boolean; }) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'SaveData'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        includeContentGroups: includeContentGroups.toString(),\r\n        resetAppGuid: resetAppGuid.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppPartsRoot = 'admin/appParts/';\r\n\r\n@Injectable()\r\nexport class ImportAppPartsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importAppParts(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppPartsRoot + 'Import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  /** Reset the App back to the state it was in the last xml export */\r\n  resetApp(withFiles: boolean) {\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Reset'), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        zoneId: this.context.zoneId.toString(),\r\n        withPortalFiles: withFiles.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Delete {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog(true)\">Delete</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete-dialog',\r\n  templateUrl: './confirm-delete-dialog.component.html',\r\n  styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialogRef: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialogRef.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-metadata-actions',\r\n  templateUrl: './metadata-actions.component.html',\r\n  styleUrls: ['./metadata-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-metadata-content-type',\r\n  templateUrl: './metadata-content-type.component.html',\r\n  styleUrls: ['./metadata-content-type.component.scss'],\r\n  standalone: true,\r\n  imports: [TippyDirective,],\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\" [tippyDisabled]=\"!metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>Create Metadata</mat-card-title>\r\n      <mat-card-subtitle>\r\n        This is a special operation to add an item which is metadata for another item,\r\n        see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"form\">\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedContentType) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!vm.scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of vm.scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n              <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Content Type of metadata item -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Content Type</mat-label>\r\n          @if (guidedContentType) {\r\n            <mat-select formControlName=\"contentType\" required\r\n              [placeholder]=\"!vm.contentTypes.length ? 'No items found' : ''\">\r\n              @for (contentType of vm.contentTypes; track contentType) {\r\n                <mat-option [value]=\"contentType.StaticName\">\r\n                  {{ contentType.Label }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedContentType) {\r\n            <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n          }\r\n          <div matTextSuffix>\r\n            <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedContentType(true)\">\r\n              <mat-icon>search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedContentType(false)\">\r\n              <mat-icon>text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n          <app-field-hint\r\n            [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      </form>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"eav-card-actions\">\r\n      <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n        {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n      </mat-slide-toggle>\r\n      <div>\r\n        <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\" (click)=\"confirm()\">\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable, startWith } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { MetadataSaveDialogViewModel, MetadataSaveFormValues } from './metadata-save-dialog.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass, AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-metadata-save-dialog',\r\n  templateUrl: './metadata-save-dialog.component.html',\r\n  styleUrls: ['./metadata-save-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ]\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  viewModel$: Observable<MetadataSaveDialogViewModel>;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  private contentTypes$: BehaviorSubject<ContentType[]>;\r\n  private scopeOptions$: BehaviorSubject<ScopeOption[]>;\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<MetadataSaveDialogComponent>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contentTypes$ = new BehaviorSubject<ContentType[]>([]);\r\n    this.scopeOptions$ = new BehaviorSubject<ScopeOption[]>([]);\r\n\r\n    this.buildForm();\r\n    this.fetchScopes();\r\n\r\n    // TODO: @2dg - this should be easy to get rid of #remove-observables\r\n    this.viewModel$ = combineLatest([this.contentTypes$, this.scopeOptions$]).pipe(\r\n      map(([contentTypes, scopeOptions]) => {\r\n        const viewModel: MetadataSaveDialogViewModel = {\r\n          contentTypes,\r\n          scopeOptions,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contentTypes$.complete();\r\n    this.scopeOptions$.complete();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialogRef.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions$.value.some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions$.next([newScopeOption, ...this.scopeOptions$.value]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.fetchContentTypes(newScope);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchContentTypes(scope: string): void {\r\n    this.contentTypesService.retrieveContentTypes(scope).subscribe(contentTypes => {\r\n      this.contentTypes$.next(contentTypes);\r\n    });\r\n  }\r\n\r\n  private fetchScopes(): void {\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions$.next(scopes);\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">\r\n        {{ title || 'Metadata' }}\r\n      </div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <p>\r\n        @if (!vm.itemFor) {\r\n          This item is not metadata for anything else.\r\n        }\r\n        @else {\r\n          This item is metadata for:\r\n          <br>Target: {{ vm.itemFor.Target }}\r\n          <br>TargetType: {{ vm.itemFor.TargetType }}\r\n          @if (vm.itemFor.KeyNumber) {\r\n            <br>Key Number: {{ vm.itemFor.KeyNumber }}\r\n          }\r\n          @if (vm.itemFor.KeyGuid) {\r\n            <br>Key Guid: {{ vm.itemFor.KeyGuid }}\r\n          }\r\n          @if (vm.itemFor.KeyString) {\r\n            <br>Key String: {{ vm.itemFor.KeyString }}\r\n          }\r\n          @if (vm.itemFor.Title) {\r\n            <br>Title: {{ vm.itemFor.Title }}\r\n          }\r\n        }\r\n      </p>\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.metadata\" [gridOptions]=\"gridOptions\">\r\n        </ag-grid-angular>\r\n      </div>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      @if (vm.recommendations.length === 0) {\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\"\r\n          (click)=\"createMetadata()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      }\r\n      @if (vm.recommendations.length > 0) {\r\n        <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': vm.fabOpen }\"\r\n          (openChange)=\"openChange($event)\">\r\n          <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n            <button mat-fab>\r\n              <mat-icon class=\"spin180\">{{ vm.fabOpen ? 'close' : 'add' }}</mat-icon>\r\n            </button>\r\n          </eco-fab-speed-dial-trigger>\r\n          <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n            <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\"\r\n              (click)=\"createMetadata()\">\r\n              <mat-icon>search</mat-icon>\r\n            </button>\r\n            @for (recommendation of vm.recommendations; track recommendation) {\r\n              <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" [attr.label]=\"recommendation.Title\"\r\n                (click)=\"createMetadata(recommendation)\">\r\n                @if (recommendation.Icon) {\r\n                  <div style=\"color: white; fill: white;\" [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n                    [matBadgeHidden]=\"recommendation.Enabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\"></div>\r\n                } @else {\r\n                  <mat-icon>add</mat-icon>\r\n                }\r\n              </button>\r\n            }\r\n          </eco-fab-speed-dial-actions>\r\n        </eco-fab-speed-dial>\r\n      }\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable, take } from 'rxjs';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { EavFor } from '../edit/shared/models/eav';\r\nimport { MetadataService } from '../permissions';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm, EditPrep, ItemAddIdentifier } from '../shared/models/edit-form.model';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataDto, MetadataItem, MetadataRecommendation, MetadataViewModel } from './models/metadata.model';\r\nimport { openFeatureDialog } from '../features/shared/base-feature.component';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { NgClass, AsyncPipe } from '@angular/common';\r\nimport { EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent, EcoFabSpeedDialActionsComponent } from '@ecodev/fab-speed-dial';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { EavLogger } from '../shared/logging/eav-logger';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { transient } from '../core';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\n\r\nconst logSpecs = {\r\n  enabled: false,\r\n  name: 'MetadataComponent',\r\n};\r\n\r\n@Component({\r\n  selector: 'app-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    AsyncPipe,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class MetadataComponent implements OnInit, OnDestroy {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  #entitiesSvc = transient(EntityEditService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #contentItemSvc = transient(ContentItemsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  #metadataSet$ = new BehaviorSubject<MetadataDto>({ Items: [], Recommendations: [] } as MetadataDto);\r\n  #itemFor$ = new BehaviorSubject<EavFor | undefined>(undefined);\r\n  #fabOpen$ = new BehaviorSubject(false);\r\n  #targetType = parseInt(this.#dialogRoutes.snapshot.paramMap.get('targetType'), 10);\r\n  #keyType = this.#dialogRoutes.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  #key = this.#dialogRoutes.snapshot.paramMap.get('key');\r\n  title = decodeURIComponent(this.#dialogRoutes.snapshot.paramMap.get('title') ?? '');\r\n  #contentTypeStaticName = this.#dialogRoutes.snapshot.paramMap.get('contentTypeStaticName');\r\n  viewModel$: Observable<MetadataViewModel>;\r\n\r\n  log = new EavLogger(logSpecs);\r\n  constructor(\r\n    private dialogRef: MatDialogRef<MetadataComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchFor();\r\n    this.fetchMetadata();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.fetchMetadata());\r\n\r\n    const logFilteredRecs = this.log.rxTap('filteredRecs$');\r\n\r\n    // TODO: @2dg - this should be easy to get rid of #remove-observables\r\n    this.#metadataSet$.subscribe((set) => {\r\n      this.log.a('test 2dm', { set });\r\n    });\r\n\r\n    const filteredRecs$ = this.#metadataSet$.pipe(\r\n      logFilteredRecs.pipe(),\r\n      map((set) => set.Recommendations.filter(r => set.Items.filter(i => i._Type.Id === r.Id).length < r.Count)),\r\n      logFilteredRecs.map(),\r\n    );\r\n\r\n    const logViewModel = this.log.rxTap('viewModel$');\r\n    this.viewModel$ = combineLatest([this.#metadataSet$, filteredRecs$, this.#itemFor$, this.#fabOpen$]).pipe(\r\n      logViewModel.pipe(),\r\n      map(([metadata, recommendations, itemFor, fabOpen]) => {\r\n        const viewModel: MetadataViewModel = {\r\n          metadata: metadata.Items,\r\n          recommendations,\r\n          itemFor,\r\n          fabOpen,\r\n        };\r\n        return viewModel;\r\n      }),\r\n      logViewModel.map(),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.log.a('destroying');\r\n    this.#metadataSet$.complete();\r\n    this.#itemFor$.complete();\r\n    this.#fabOpen$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.#fabOpen$.next(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        openFeatureDialog(this.dialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.#entitiesSvc.create(recommendation.Id, { For: this.calculateItemFor('dummy').For }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.fetchMetadata();\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.fetchMetadata();\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.dialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) return;\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [this.calculateItemFor(contentType)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(contentType: string): ItemAddIdentifier {\r\n    const x = EditPrep.constructMetadataInfo(this.#targetType, this.#keyType, this.#key);\r\n    return EditPrep.newMetadataFromInfo(contentType, x);\r\n  }\r\n\r\n  private fetchFor() {\r\n    if (!this.#contentTypeStaticName) return;\r\n\r\n    this.#contentItemSvc.getAll(this.#contentTypeStaticName).subscribe(items => {\r\n      const item = items.find(i => i.Guid === this.#key);\r\n      if (item?.For) {\r\n        this.#itemFor$.next(item.For);\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchMetadata() {\r\n    const logGetMetadata = this.log.rxTap('getMetadata');\r\n    this.#metadataSvc.getMetadata(this.#targetType, this.#keyType, this.#key)\r\n      .pipe(\r\n        logGetMetadata.pipe(),\r\n        take(1),\r\n        map(metadata => {\r\n          metadata.Recommendations.forEach(r => {\r\n            if (r.Icon?.startsWith('base64:')) {\r\n              r.Icon = r.Icon.replace('base64:', '');\r\n              r.Icon = window.atob(r.Icon);\r\n              // used for coloring black icons to white\r\n              r.Icon = r.Icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n            }\r\n          });\r\n          return metadata;\r\n        }),\r\n        logGetMetadata.map(),\r\n      )\r\n      // 2024-05-30 2dm - this standard shorthand seems to fail\r\n      // for reasons unknown to me. I've replaced it with the longhand\r\n      // The problem occurs when the metadataSet$ is updated after the initial load.\r\n      // .subscribe(this.metadataSet$);\r\n      .subscribe(data => this.#metadataSet$.next(data));\r\n  }\r\n\r\n  private editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(metadata.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  private deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.#metadataSet$.value.Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.dialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed)\r\n          this.deleteMetadata(metadata, true);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.#entitiesSvc.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchMetadata();\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<MetadataItem>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Title',\r\n          onCellClicked: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            this.editMetadata(metadata);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          valueGetter: (params) => {\r\n            const metadata: MetadataItem = params.data;\r\n            return `${metadata._Type.Name}${metadata._Type.Title !== metadata._Type.Name ? ` (${metadata._Type.Title})` : ''}`;\r\n          },\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: MetadataActionsParams = {\r\n              onDelete: (metadata) => this.deleteMetadata(metadata),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:targetType/:keyType/:key',\r\n    loadChildren: () => import('./permissions.routing').then(m => m.permissionRoutes),\r\n    // loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.targetType, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.targetType, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.targetType, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(id: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.targetType, eavConstants.metadata.language.keyType, id);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const permissionRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: permissionsDialog },\r\n    children: EditRoutes\r\n  },\r\n];\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\nconst logThis = false;\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n  constructor() {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.onClick', event);\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../services/context';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\nimport { InputTypeStrict } from './input-type-catalog';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputTypeMetadata[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) continue;\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"x_google_ignoreList":[]}