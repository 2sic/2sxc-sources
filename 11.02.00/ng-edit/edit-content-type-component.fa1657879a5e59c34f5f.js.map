{"version":3,"sources":["./src/app/app-administration/models/content-type.model.ts","./src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.html","./src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.ts"],"names":["dialogRef","route","contentTypesService","snackBar","lockScope","contentTypeNamePattern","contentTypeNameError","disableAnimation","this","scope","snapshot","paramMap","get","id","parseInt","ngAfterViewInit","setTimeout","ngOnInit","fetchScopes","fetchContentType","contentType","StaticName","Name","Description","Scope","ChangeStaticName","NewStaticName","changeScope","event","newScope","value","prompt","scopeOptions","find","option","push","name","scopes","default","unlockScope","stopPropagation","onSubmit","open","save","subscribe","result","duration","closeDialog","close","getScopes","retrieveContentTypes","contentTypes","ct","Id","EditContentTypeComponent"],"mappings":"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","file":"edit-content-type-component.fa1657879a5e59c34f5f.js","sourcesContent":["export class ContentType {\r\n  Description: string;\r\n  Fields: number;\r\n  I18nKey: string;\r\n  Id: number;\r\n  Items: number;\r\n  Label: string;\r\n  Metadata: ContentTypeMetadata;\r\n  Name: string;\r\n  Scope: string;\r\n  SharedDefId: number;\r\n  StaticName: string;\r\n  UsesSharedDef: boolean;\r\n}\r\n\r\nexport class ContentTypeMetadata {\r\n  Description: string;\r\n  EditInstructions: string;\r\n  Icon: string;\r\n  Id: number;\r\n  Label: string;\r\n  Link: string;\r\n  ListInstructions: any;\r\n  Notes: string;\r\n  Title: string;\r\n}\r\n\r\nexport class ContentTypeEdit extends ContentType {\r\n  ChangeStaticName: boolean;\r\n  NewStaticName: string;\r\n}\r\n","<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">{{ id ? 'Edit Content Type' : 'New Content Type' }}</div>\r\n</div>\r\n\r\n<form *ngIf=\"contentType\" (ngSubmit)=\"onSubmit()\" #ngForm=\"ngForm\">\r\n  <div class=\"edit-input\">\r\n    <mat-form-field appearance=\"standard\" color=\"accent\">\r\n      <mat-label>Name</mat-label>\r\n      <input matInput type=\"text\" [pattern]=\"contentTypeNamePattern\" [(ngModel)]=\"contentType.Name\" name=\"Name\" required\r\n        #name='ngModel'>\r\n    </mat-form-field>\r\n    <ng-container *ngIf=\"name.touched && name.errors\">\r\n      <app-field-hint *ngIf=\"name.errors.required\" [isError]=\"true\">This field is required</app-field-hint>\r\n      <app-field-hint *ngIf=\"name.errors.pattern\" [isError]=\"true\">{{ contentTypeNameError }}</app-field-hint>\r\n    </ng-container>\r\n  </div>\r\n  <mat-accordion [@.disabled]=\"disableAnimation\">\r\n    <mat-expansion-panel expanded=\"false\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>Advanced</mat-panel-title>\r\n        <mat-panel-description></mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n\r\n      <div class=\"edit-input\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput type=\"text\" [(ngModel)]=\"contentType.Description\" name=\"Description\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"edit-input\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Scope</mat-label>\r\n          <mat-select [ngModel]=\"contentType.Scope\" name=\"Scope\" (selectionChange)=\"changeScope($event)\"\r\n            [disabled]=\"lockScope\">\r\n            <mat-option *ngFor=\"let scopeOption of scopeOptions\" [value]=\"scopeOption.value\">{{ scopeOption.name }}\r\n            </mat-option>\r\n            <mat-option value=\"Other\">Other...</mat-option>\r\n          </mat-select>\r\n          <button mat-icon-button type=\"button\" matSuffix [matTooltip]=\"lockScope ? 'Unlock' : 'Lock'\">\r\n            <mat-icon *ngIf=\"lockScope\" (click)=\"unlockScope($event)\">lock</mat-icon>\r\n            <mat-icon *ngIf=\"!lockScope\" (click)=\"unlockScope($event)\">lock_open</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n        <app-field-hint>\r\n          The scope should almost never be changed -\r\n          <a href=\"http://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n        </app-field-hint>\r\n      </div>\r\n\r\n      <div class=\"edit-input\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Static Name</mat-label>\r\n          <input matInput type=\"text\" [ngModel]=\"contentType.StaticName\" name=\"StaticName\" disabled>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div *ngIf=\"contentType.SharedDefId\" class=\"edit-input\">\r\n        <h3>Shared Content Type (Ghost)</h3>\r\n        <p>Note: this can't be edited in the UI, for now if you really know what you're doing, do it in the DB</p>\r\n        <p>Uses Type Definition of: {{ contentType.SharedDefId }}</p>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n\r\n  <div class=\"dialog-actions-box\">\r\n    <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!ngForm.form.valid\">Save</button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { ContentTypeEdit } from '../../models/content-type.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\nimport { eavConstants, EavScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { contentTypeNamePattern, contentTypeNameError } from '../../constants/content-type.patterns';\r\n\r\n@Component({\r\n  selector: 'app-edit-content-type',\r\n  templateUrl: './edit-content-type.component.html',\r\n  styleUrls: ['./edit-content-type.component.scss']\r\n})\r\nexport class EditContentTypeComponent implements OnInit, AfterViewInit {\r\n  scope: string;\r\n  id: number;\r\n  contentType: ContentTypeEdit;\r\n  lockScope = true;\r\n  scopeOptions: EavScopeOption[];\r\n  contentTypeNamePattern = contentTypeNamePattern;\r\n  contentTypeNameError = contentTypeNameError;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditContentTypeComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentTypesService: ContentTypesService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.scope = this.route.snapshot.paramMap.get('scope');\r\n    this.id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\r\n  }\r\n\r\n  // Workaround for angular component issue #13870\r\n  disableAnimation = true;\r\n  ngAfterViewInit() {\r\n    // timeout required to avoid the dreaded 'ExpressionChangedAfterItHasBeenCheckedError'\r\n    setTimeout(() => this.disableAnimation = false);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchScopes();\r\n    if (!this.id) {\r\n      this.contentType = {\r\n        ...(new ContentTypeEdit()),\r\n        StaticName: '',\r\n        Name: '',\r\n        Description: '',\r\n        Scope: this.scope,\r\n        ChangeStaticName: false,\r\n        NewStaticName: '',\r\n      };\r\n    } else {\r\n      this.fetchContentType();\r\n    }\r\n  }\r\n\r\n  changeScope(event: MatSelectChange) {\r\n    let newScope: string = event.value;\r\n    if (newScope === 'Other') {\r\n      // tslint:disable-next-line:max-line-length\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.');\r\n      if (!newScope) {\r\n        newScope = eavConstants.scopes.default.value;\r\n      } else if (!this.scopeOptions.find(option => option.value === newScope)) {\r\n        const newScopeOption: EavScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        this.scopeOptions.push(newScopeOption);\r\n      }\r\n    }\r\n    this.contentType.Scope = newScope;\r\n  }\r\n\r\n  unlockScope(event: Event) {\r\n    event.stopPropagation();\r\n    this.lockScope = !this.lockScope;\r\n    if (this.lockScope) {\r\n      this.contentType.Scope = this.scope;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.snackBar.open('Saving...');\r\n    this.contentTypesService.save(this.contentType).subscribe(result => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchScopes() {\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions = scopes;\r\n    });\r\n  }\r\n\r\n  private fetchContentType() {\r\n    this.contentTypesService.retrieveContentTypes(this.scope).subscribe(contentTypes => {\r\n      const contentType = contentTypes.find(ct => ct.Id === this.id);\r\n      this.contentType = {\r\n        ...contentType,\r\n        ChangeStaticName: false,\r\n        NewStaticName: contentType.StaticName,\r\n      };\r\n    });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}