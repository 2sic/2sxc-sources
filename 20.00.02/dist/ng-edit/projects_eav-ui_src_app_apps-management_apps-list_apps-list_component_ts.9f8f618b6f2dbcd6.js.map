{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-list_apps-list_component_ts.9f8f618b6f2dbcd6.js","mappings":"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","names":["BaseDirective","constructor","this","subscriptions","Subscription","ngOnDestroy","unsubscribe","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","isFunction","undefined","pipe","mapOneOrManyArgs","add","remove","isEventTarget","addEventListener","removeEventListener","map","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args","next","length","FeatureNames","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","DataExportImportBundles","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","DragAndDropDirective","elementRef","zone","snackBar","super","markStyle","input","allowedFileTypes","filesDropped","output","dropAreaClass","markStyleClass","signal","dragClass","timeouts","element","nativeElement","ngOnInit","set","classList","runOutsideAngular","subscribe","event","preventDefault","stopPropagation","clearTimeouts","push","window","setTimeout","onDrop","files","Array","from","dataTransfer","filterTypes","emit","timeout","clearTimeout","allowedTypes","split","type","toLocaleLowerCase","filtered","filter","file","extIndex","name","lastIndexOf","ext","substring","includes","allowedTypesString","replace","open","duration","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_4__","selectors","hostBindings","rf","ctx","$event","logSpecs","doOnDialogClosed","DialogRoutingService","ServiceBase","router","route","log","classLog","snapshot","url","urlSegments","getParam","key","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","state","getCurrentNavigation","extras","callback","l","fnIf","childDialogClosed$","data","a","end","doOnDialogClosedWithData","#childDialogClosedWithData","urlSubRoute","params","tree","createUrlTree","relativeTo","serializeUrl","navPath","navigate","navRelative","commands","events","NavigationEnd","startWith","firstChild","pairwise","hadChildBefore","hasChildNow","tap","fn","snapShot","prev","curr","_angular_core__WEBPACK_IMPORTED_MODULE_8__","jDH","factory","ɵfac","AppListShowIcons","states","true","tooltip","icon","false","AppListCodeErrorIcons","clickable","getUrl","$2sxc","http","apiUrl","Id","_r1","ctx_r1","do","app","IsApp","AppsListActionsComponent","agInit","refresh","verb","debug_node_JnOYh9kg","VBU","decls","vars","consts","template","AppsListActionsComponent_Conditional_2_Template","AppsListActionsComponent_Conditional_3_Template","AppsListActionsComponent_ng_template_10_Template","IsGlobal","IsInherited","lightSpeed","menu_r3","TippyDirective","MatIconModule","MatBadgeModule","MatRippleModule","i2","MatMenuModule","i3","LightSpeedActionsComponent","encapsulation","AppsListComponent","#appsListSvc","#dialogRouter","context","matDialog","viewContainerRef","changeDetectorRef","gridOptions","#buildGridOptions","features","inject","FeaturesService","isAddFromFolderEnabled","isEnabled","transient","AppsListService","fabOpen","#refresh","apps","getAllLive","value","ModuleRegistry","registerModules","ClientSideRowModelModule","#loadApps","openChange","browseCatalog","createApp","createInheritedApp","addFromFolder","importApp","#deleteApp","result","prompt","Name","delete","error","alert","#flushApp","_this","_asyncToGenerator","confirm","status","flushCache","statusCode","console","#getLightSpeedLink","formUrl","convertFormToUrl","AppAdminHelpers","getLightSpeedEditParams","zoneId","openLightSpeedFeatInfo","openFeatureDialog","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","IconShow","settings","TextWide","field","cellClass","sort","cellRenderer","p","toString","Thumbnail","Character","width","Number","Boolean","headerName","BooleanFilterComponent","AgBoolIconRenderer","ActionsPinnedRight3","lightSpeedLink","openLightspeedFeatureInfo","update","v","_c0","SxcGridModule","i4","MatDialogActions","EcoFabSpeedDialComponent","NgClass","EcoFabSpeedDialTriggerComponent","MatButtonModule","i5","i6","EcoFabSpeedDialActionsComponent","MatBadgeIconDirective","RouterOutlet"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/directives/base.directive.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/apps-management/apps-list/app-list-grid-config.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.html"],"sourcesContent":["import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseDirective implements OnDestroy {\r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n  DataExportImportBundles: 'DataExportImportBundles',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Directive, ElementRef, HostListener, input, NgZone, OnDestroy, OnInit, output, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent } from 'rxjs';\r\nimport { BaseDirective } from './base.directive';\r\n\r\n@Directive({\r\n  selector: '[appDragAndDrop]',\r\n})\r\nexport class DragAndDropDirective extends BaseDirective implements OnInit, OnDestroy {\r\n  markStyle = input<'outline' | 'fill' | 'shadow'>('outline');\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  allowedFileTypes = input<string>('');\r\n  protected filesDropped = output<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass = signal<string>('');\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass.set(`eav-droparea-${this.markStyle()}`);\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass());\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass(), this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes());\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes().replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, tap } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  get urlSegments() { return this.router.url.split('/'); }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe((data: unknown) => {\r\n        l.a('Dialog closed', { data });\r\n        return callback();\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  public doOnDialogClosedWithData(callback: (data: any) => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.#childDialogClosedWithData().subscribe(({ state }) => {\r\n        l.a('Dialog closed', { state });\r\n        callback(state);\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  public childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n\r\n  #childDialogClosedWithData() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      tap(event => {\r\n        const l = this.log.fn(\"childDialogClosed$\", {\r\n          event,\r\n          firstChild: this.route.snapshot.firstChild,\r\n          snapShot: this.route.snapshot,\r\n          state: this.router.getCurrentNavigation()?.extras.state,\r\n        });\r\n        l.a('NavigationEnd', { event });\r\n        l.end();\r\n      }),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => ({\r\n        hasChildNow: !!this.route.snapshot.firstChild,\r\n        state: this.router.getCurrentNavigation()?.extras.state,\r\n      })),\r\n      pairwise(),\r\n      filter(([prev, curr]) => prev.hasChildNow && !curr.hasChildNow),\r\n      map(([prev, curr]) => ({\r\n        hadChildBefore: prev.hasChildNow,\r\n        hasChildNow: curr.hasChildNow,\r\n        state: curr.state\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { AgBoolCellIconSettings } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { App } from '../models/app.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const AppListShowIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'Show this app to users',\r\n      icon: 'visibility',\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: 'visibility_off',\r\n    }\r\n  }\r\n};\r\n\r\nexport const AppListCodeErrorIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      clickable: true,\r\n      tooltip: 'This App uses obsolete code which will cause problems on future upgrades. Click to see details.',\r\n      icon: 'bug_report',\r\n      getUrl: (data: App) => window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete&filter=AppId=' + data.Id),\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: '',\r\n    }\r\n  }\r\n};\r\n","<div class=\"actions-component\">\r\n  <!-- Global/Inherited button for shared apps (if enabled) -->\r\n  <div class=\"eav-grid-action-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    @if (app.IsGlobal) {\r\n      <mat-icon>foundation</mat-icon>\r\n    }\r\n    @if (app.IsInherited) {\r\n      <mat-icon>holiday_village</mat-icon>\r\n    }\r\n  </div>\r\n\r\n  <!-- Lightspeed button -->\r\n  <app-lightspeed-action [lightSpeedOwner]=\"app\" [params]=\"params\" [lightSpeed]=\"app.lightSpeed\"></app-lightspeed-action>\r\n\r\n  <!-- More button -->\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<!-- The menu which appears on more -->\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item (click)=\"do('flushCache')\">\r\n      <mat-icon>cached</mat-icon>\r\n      <span>Flush cache</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"do('deleteApp')\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams, AppsListActionsType } from './apps-list-actions.models';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LightSpeedActionsComponent } from '../../../admin-shared/lightspeed-action/lightspeed-action.component';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-apps-list-actions',\r\n    templateUrl: './apps-list-actions.component.html',\r\n    imports: [\r\n        TippyDirective,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n        MatRippleModule,\r\n        MatMenuModule,\r\n        LightSpeedActionsComponent,\r\n    ]\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n\r\n  public params: ICellRendererParams & AppsListActionsParams;\r\n  agInit(params: ICellRendererParams & AppsListActionsParams): void {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  do(verb: AppsListActionsType): void {\r\n    this.params.do(verb, this.app);\r\n  }\r\n}\r\n","import { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { GridOptions, ICellRendererParams, ModuleRegistry } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, inject, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { transient } from '../../../../../core';\r\nimport { AppAdminHelpers } from '../../app-administration/app-admin-helpers';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { openFeatureDialog } from '../../features/shared/base-feature.component';\r\nimport { AgBoolCellIconsParams } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { AgBoolIconRenderer } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { DragAndDropDirective } from '../../shared/directives/drag-and-drop.directive';\r\nimport { MatBadgeIconDirective } from '../../shared/directives/mat-badge-icon.directive';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppListCodeErrorIcons, AppListShowIcons } from './app-list-grid-config';\r\nimport { AppsListActionsComponent } from './apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from './apps-list-actions/apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  imports: [\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    MatBadgeIconDirective,\r\n    RouterOutlet,\r\n    DragAndDropDirective,\r\n  ]\r\n})\r\nexport class AppsListComponent implements OnInit {\r\n\r\n  log = classLog({ AppsListComponent });\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  public features = inject(FeaturesService);\r\n  protected isAddFromFolderEnabled = this.features.isEnabled[FeatureNames.AppSyncWithSiteFiles];\r\n\r\n  #appsListSvc = transient(AppsListService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private context: Context,\r\n    // Services for showing features in the menu\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  fabOpen = signal(false);\r\n\r\n  #refresh = signal(0);\r\n\r\n\r\n  // TODO: @2dg Only for example - remove later\r\n  //   apps = computed(() => {\r\n  //   const refresh = this.#refresh();\r\n  //   return this.#appsListSvc.getAllOld();\r\n  // });\r\n\r\n  // TODO: @2dg Only for example - remove later\r\n  // apps = computed(() => {\r\n  //   const refresh = this.#refresh();\r\n  //   return untracked(() => this.#appsListSvc.getAll().value) // Untracked to avoid re-running this when the refresh changes\r\n  // });\r\n\r\n  apps = this.#appsListSvc.getAllLive(this.#refresh).value;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.#dialogRouter.doOnDialogClosed(() => this.#loadApps());\r\n  }\r\n\r\n  openChange(open: boolean): void {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  browseCatalog(): void {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp(): void {\r\n    this.#dialogRouter.navRelative(['create']);\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.#dialogRouter.navRelative(['create-inherited']);\r\n  }\r\n\r\n  addFromFolder(): void {\r\n    this.#dialogRouter.navRelative(['add-app-from-folder']);\r\n  }\r\n\r\n  importApp(files?: File[]): void {\r\n    this.#dialogRouter.navRelative(['import'], { state: { files } satisfies FileUploadDialogData });\r\n  }\r\n\r\n  #deleteApp(app: App): void {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) return;\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.#appsListSvc.delete(app.Id).subscribe({\r\n        error: () => {\r\n          this.snackBar.open('Delete failed. Please check console for more information', undefined, { duration: 3000 });\r\n          this.#loadApps();\r\n        },\r\n        next: () => {\r\n          this.snackBar.open('Deleted', undefined, { duration: 2000 });\r\n          this.#loadApps();\r\n        },\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  async #flushApp(app: App) {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`))\r\n      return;\r\n    this.snackBar.open('Flushing cache...');\r\n    try {\r\n      const status = await this.#appsListSvc.flushCache(app.Id);\r\n      // Check the status code\r\n      if (status >= 200 && status < 300) {\r\n        this.snackBar.open('Cache flushed', undefined, { duration: 2000 })\r\n      }\r\n    } catch (statusCode) {\r\n      this.snackBar.open('Cache flush failed. Please check console.', undefined, { duration: 3000 }),\r\n        console.error('Export error:', statusCode);\r\n    }\r\n  }\r\n\r\n\r\n  #getLightSpeedLink(app?: App): string {\r\n    const formUrl = convertFormToUrl(AppAdminHelpers.getLightSpeedEditParams(app.Id));\r\n    const urlString = `${this.context.zoneId}/${app.Id}/edit/${formUrl}`;\r\n    return this.#dialogRouter.urlSubRoute(urlString);\r\n  }\r\n\r\n  openLightSpeedFeatInfo() {\r\n    openFeatureDialog(this.matDialog, FeatureNames.LightSpeed, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<App>(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.IconShow,\r\n          cellRendererParams: { settings: () => AppListShowIcons },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Name',\r\n          cellClass: 'apps-list-primary-action highlight'.split(' '),\r\n          sort: 'asc',\r\n          cellRenderer: (p: ICellRendererParams & { data: App }) => {\r\n            const app = p.data;\r\n            const url = this.#dialogRouter.urlSubRoute(app.Id.toString());\r\n            return `\r\n              <a class=\"default-link fill-cell\" href=\"#${url}\">\r\n                <div class=\"container\">\r\n                  ${app.Thumbnail\r\n                ? `<img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>`\r\n                : `<div class=\"image logo\"><span class=\"material-symbols-outlined\">star</span></div>`\r\n              }\r\n                  ${p.value}\r\n                </div>\r\n              </a>\r\n            `;\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Folder',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Version',\r\n          width: 78,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Items',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Boolean,\r\n          field: 'HasCodeWarnings',\r\n          headerName: 'Code',\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: () => AppListCodeErrorIcons } as AgBoolCellIconsParams<App>))(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight3,\r\n          cellRenderer: AppsListActionsComponent,\r\n          cellRendererParams: {\r\n            lightSpeedLink: (app: App) => this.#getLightSpeedLink(app),\r\n            openLightspeedFeatureInfo: () => this.openLightSpeedFeatInfo(),\r\n            do: (verb, app) => {\r\n              switch (verb) {\r\n                case 'deleteApp': this.#deleteApp(app); break;\r\n                case 'flushCache': this.#flushApp(app); break;\r\n              }\r\n            }\r\n          } satisfies AppsListActionsParams,\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n\r\n  #loadApps(): void {\r\n    this.#refresh.update(v => ++v);\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular\r\n    class=\"ag-theme-material\"\r\n    [rowData]=\"apps()\"\r\n    [gridOptions]=\"gridOptions\"\r\n    appDragAndDrop\r\n    [allowedFileTypes]=\"'zip'\"\r\n    (filesDropped)=\"importApp($event)\"\r\n  >\r\n  </ag-grid-angular>\r\n  <mat-dialog-actions align=\"end\">\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\" (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab class=\"grid-fab\">\r\n          <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n          <mat-icon>holiday_village</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Add from folder\" (click)=\"addFromFolder()\">\r\n          <mat-icon\r\n            [matBadgeHidden]=\"isAddFromFolderEnabled()\"\r\n            matBadgeColor=\"accent\"\r\n            matBadgeSize=\"small\"\r\n            matBadgeIcon=\"diamond\"\r\n            matBadgePosition=\"below after\"\r\n            aria-hidden=\"false\"\r\n          >\r\n            add\r\n          </mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Import app\" (click)=\"importApp()\">\r\n          <mat-icon>cloud_upload</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create app\" (click)=\"createApp()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n  </mat-dialog-actions>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n"],"x_google_ignoreList":[1]}