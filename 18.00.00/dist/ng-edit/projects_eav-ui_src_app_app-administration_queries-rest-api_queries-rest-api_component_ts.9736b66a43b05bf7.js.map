{"version":3,"file":"projects_eav-ui_src_app_app-administration_queries-rest-api_queries-rest-api_component_ts.9736b66a43b05bf7.js","mappings":"qZAMQA,MAAA,kBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAC,EAAAC,MACVF,cAAA,IAAAC,EAAAE,KAAA,2BAFFH,MAAA,EAAAI,EAAA,mBAAAJ,kBAAAK,EAAAC,QC4BD,IAAMC,EAAuB,MAA9B,MAAOA,EAMXC,YACUC,EACAC,EACAC,GAFAC,KAAAH,KACAG,KAAAF,SACAE,KAAAD,QARFC,KAAAC,oBAAmBC,KAAUC,MAErCH,KAAAI,YAAc,IAAIC,SAAyBC,EAOvC,CAEJC,WACEP,KAAKQ,eACLR,KAAKS,cAAgBT,KAAKH,GAAGa,MAAM,CACjCC,UAAW,CAAC,KAEhB,CAEAH,eACER,KAAKC,iBAAiBW,OAAOC,KAAaC,aAAaC,OAAOC,UAAWC,IACvEjB,KAAKI,YAAYc,KAAKD,GAGtB,MAAME,EAAcnB,KAAKF,OAAOsB,IAAIC,MAAM,KACpCC,EAAcH,EAAYA,EAAYI,OAAS,GAE/CC,EAAsBP,EAAQQ,KAAKV,GAASA,EAAMzB,OAASgC,GAC7DE,GACFxB,KAAKS,cAAciB,IAAI,aAAaC,SAASH,EAAoBlC,KAAI,EAE3E,CAEAsC,YAAYC,GACLA,GACL7B,KAAKF,OAAOgC,SAAS,CAAC,GAAGD,KAAU,CAAEE,WAAY/B,KAAKD,MAAMiC,OAAOC,YACrE,CAACC,SAAAlC,KAAA,mBAAAmC,iBApCUxC,GAAuBP,MAAAgD,MAAAhD,MAAAiD,MAAAjD,MAAAiD,MAAA,EAAAH,SAAAlC,KAAA,UAAAsC,EAAAC,IAAA,MAAvB5C,EAAuB6C,UAAA,2BAAAC,YAAA,EAAAC,SAAA,CAAAtD,OAAAuD,MAAA,EAAAC,KAAA,EAAAC,OAAA,wHAAAC,SAAA,SAAAC,EAAAtD,MAAA,EAAAsD,ID/BhC3D,MAFJ,WAEIA,CAF8B,qBAE9BA,CADwD,eAC7CA,MAAA,WAAKA,QAChBA,MAAA,kBAAwCA,MAAA,uBAAA4D,GAAA,OAAevD,EAAAmC,YAAAoB,EAAmB,GACxE5D,MAAA,EAAA6D,EAAA,sBASN7D,YAEAA,MAAA,+BAfMA,MAAA,YAAAK,EAAAgB,eAIArB,MAAA,GAAAA,MAAA,GAAA8D,EAAA9D,MAAA,IAAAK,EAAAW,cAAA,KAAA8C,mBCgBFC,KAAeC,UAAAC,KAAAC,KACfC,KACAC,KACAC,KACAC,KAAmBtB,yBACnBuB,KAEAC,KACAC,cAKSlE,CAAuB","names":["i0","contentType_r1","Guid","Name","QueriesRestApiComponent_Conditional_5_For_1_Template","ctx","sort","QueriesRestApiComponent","constructor","fb","router","route","this","pipelinesService","transient","PipelinesService","queryTypes$","BehaviorSubject","undefined","ngOnInit","fetchQueries","queryTypeForm","group","queryType","getAll","eavConstants","contentTypes","query","subscribe","queries","next","urlSegments","url","split","urlGuidName","length","selectedContentType","find","get","setValue","openRestApi","event","navigate","relativeTo","parent","firstChild","static","t","i1","i2","_angular_core__WEBPACK_IMPORTED_MODULE_3__","VBU","selectors","standalone","features","decls","vars","consts","template","rf","$event","QueriesRestApiComponent_Conditional_5_Template","tmp_1_0","MatSelectModule","i3","i4","i5","MatButtonModule","MatCardModule","MatIconModule","ReactiveFormsModule","AsyncPipe","RouterOutlet","SxcGridModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/queries-rest-api/queries-rest-api.component.html","./projects/eav-ui/src/app/app-administration/queries-rest-api/queries-rest-api.component.ts"],"sourcesContent":["<form [formGroup]=\"queryTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Query</mat-label>\r\n    <mat-select formControlName=\"queryType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (queryTypes$ | async; as contentTypes) {\r\n        @for (contentType of contentTypes.sort() ; track contentType) {\r\n        <mat-option [value]=\"contentType.Guid\">\r\n          {{ contentType.Name }}\r\n        </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { PipelinesService } from '../services';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { DevRestQueryComponent } from '../../dev-rest/query/query.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Query } from '../models';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { transient } from '../../core';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\n\r\n@Component({\r\n  selector: 'app-web-api-rest-api',\r\n  standalone: true,\r\n  imports: [\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    AsyncPipe,\r\n    DevRestQueryComponent,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n  ],\r\n  templateUrl: './queries-rest-api.component.html',\r\n  styleUrl: './queries-rest-api.component.scss'\r\n})\r\nexport class QueriesRestApiComponent {\r\n  private pipelinesService = transient(PipelinesService);\r\n\r\n  queryTypes$ = new BehaviorSubject<Query[]>(undefined);\r\n  queryTypeForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchQueries();\r\n    this.queryTypeForm = this.fb.group({\r\n      queryType: ['']\r\n    });\r\n  }\r\n\r\n  fetchQueries() {\r\n    this.pipelinesService.getAll(eavConstants.contentTypes.query).subscribe((queries: Query[]) => {\r\n      this.queryTypes$.next(queries);\r\n\r\n      // When Route are reload and have some Guid in the Route\r\n      const urlSegments = this.router.url.split('/');\r\n      const urlGuidName = urlSegments[urlSegments.length - 1]\r\n\r\n      const selectedContentType = queries.find(query => query.Guid === urlGuidName);\r\n      if (selectedContentType)\r\n        this.queryTypeForm.get('queryType').setValue(selectedContentType.Guid);\r\n    });\r\n  }\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.router.navigate([`${event}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}