{"version":3,"file":"default-projects_eav-ui_src_app_monaco-editor_monaco-editor_component_ts-projects_eav-ui_src_-57db9c.82054ee5168cad81.js","mappings":"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","names":["voidElements","split","map","el","trim","toLocaleLowerCase","MonacoInstance","constructor","monaco","filename","value","container","options","snippets","tooltips","this","globalCache","createGlobalCache","defineThemes","cachedValue","editorInstance","createInstance","completionItemProviders","addSnippets","resizeObserver","createResizeObserver","restoreState","addEvents","destroy","saveState","disconnect","forEach","completionItemProvider","dispose","jsTypingsLib","getModel","updateValue","setValue","focus","onValueChange","callback","valueChangedCallback","onFocus","focusedCallback","onBlur","blurredCallback","insertSnippet","snippet","getContribution","insert","setSnippets","setTooltips","setJsonSchema","jsonSchema","uri","toString","oldJsonDiagnostics","languages","json","jsonDefaults","diagnosticsOptions","exists","schemas","some","schema","fileMatch","newSchema","type","JSON","parse","undefined","newJsonDiagnostics","enableSchemaRequest","filter","setDiagnosticsOptions","setJsonComments","comments","jsonDiagnostics","setJsDiagnostics","javascriptDiagnostics","typescript","javascriptDefaults","getDiagnosticsOptions","setJsTypings","typings","addExtraLib","_2sxc","themesAreDefined","savedStates","editor","defineTheme","base","inherit","rules","token","foreground","colors","create","editorModelUri","Uri","file","editorModel","createModel","setModel","viewState","stringify","saveViewState","savedState","restoreViewState","registerCompletionItemProvider","getLanguageId","triggerCharacters","provideCompletionItems","model","position","suggestions","textUntilPosition","getValueInRange","startLineNumber","lineNumber","startColumn","endLineNumber","endColumn","column","length","tagStartIndex","lastIndexOf","codeInTag","substring","quotes","Array","from","c","startsWith","indexOf","tagEndIndex","tag","includes","test","label","kind","CompletionItemKind","Snippet","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","range","word","getWordUntilPosition","content","name","documentation","title","help","links","suggestion","registerHoverProvider","provideHover","getWordAtPosition","tooltip","find","i","Term","contents","Help","ResizeObserver","layout","observe","onDidChangeContent","newValue","getValue","onDidFocusEditorWidget","onDidBlurEditorWidget","MonacoEditorComponent","autoFocus","valueChanged","EventEmitter","focused","blurred","ngAfterViewInit","window","require","config","paths","vs","createEditor","ngOnChanges","changes","monacoInstance","jsonComments","jsTypings","jsDiagnostics","ngOnDestroy","editorRef","nativeElement","emit","static","t","core","VBU","selectors","viewQuery","rf","ctx","i0","ToggleDebugDirective","globalConfigService","onClick","event","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","i1","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","hostBindings","$event","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","_angular_core__WEBPACK_IMPORTED_MODULE_0__","EJ8","pure","standalone","_c0","MatProgressSpinner_ng_template_0_Template","ctx_r0","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","MatProgressSpinner","color","_color","_defaultColor","_elementRef","animationMode","defaults","_value","_diameter","_noopAnimations","_forceAnimations","mode","nodeName","toLowerCase","strokeWidth","v","Math","max","min","size","_strokeWidth","viewBox","PI","_strokeDashOffset","ɵfac","ANIMATION_MODULE_TYPE","ɵcmp","_t","_determinateCircle","first","hostAttrs","hostVars","inputs","HasDecoratorInputTransform","numberAttribute","exportAs","features","decls","vars","consts","template","circle_r2","dependencies","NgTemplateOutlet","styles","encapsulation","changeDetection","MatProgressSpinnerModule","ɵmod","ɵinj","imports","CommonModule","MatCommonModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/typescript-helpers/name-of.ts","./projects/eav-ui/src/app/monaco-editor/monaco-instance.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.component.ts","./projects/eav-ui/src/app/monaco-editor/monaco-editor.component.html","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./node_modules/@angular/material/fesm2022/progress-spinner.mjs"],"sourcesContent":["// Inspired by https://schneidenbach.gitbooks.io/typescript-cookbook/content/nameof-operator.html\r\nexport const nameof = <T>(name: keyof T) => name;\r\n","import type * as Monaco from 'monaco-editor';\r\nimport { JsonSchema, Monaco2sxc } from '.';\r\nimport { Snippet } from '../code-editor/models/snippet.model';\r\nimport { Tooltip } from '../code-editor/models/tooltip.model';\r\n\r\nexport const voidElements = 'area, base, br, col, embed, hr, img, input, link, meta, param, source, track, wbr'\r\n  .split(',')\r\n  .map(el => el.trim().toLocaleLowerCase());\r\n\r\nexport class MonacoInstance {\r\n  /** Editor instance configuration */\r\n  private editorInstance: Monaco.editor.IStandaloneCodeEditor;\r\n  private completionItemProviders: Monaco.IDisposable[];\r\n  private jsTypingsLib?: Monaco.IDisposable;\r\n  private resizeObserver: ResizeObserver;\r\n  private globalCache: Monaco2sxc;\r\n  private cachedValue: string;\r\n  private valueChangedCallback?: (value: string) => void;\r\n  private focusedCallback?: () => void;\r\n  private blurredCallback?: () => void;\r\n\r\n  constructor(\r\n    /** Global Monaco configuration */\r\n    private monaco: typeof Monaco,\r\n    private filename: string,\r\n    value: string,\r\n    container: HTMLElement,\r\n    options: Monaco.editor.IStandaloneEditorConstructionOptions,\r\n    private snippets: Snippet[],\r\n    private tooltips: Tooltip[],\r\n  ) {\r\n    this.globalCache = this.createGlobalCache(monaco);\r\n    this.defineThemes(this.globalCache, this.monaco);\r\n    this.cachedValue = value;\r\n    this.editorInstance = this.createInstance(this.monaco, filename, value, container, options);\r\n    this.completionItemProviders = this.addSnippets(this.monaco, this.editorInstance);\r\n    this.resizeObserver = this.createResizeObserver(container, this.editorInstance);\r\n    this.restoreState(this.globalCache, this.editorInstance);\r\n    this.addEvents(this.editorInstance);\r\n  }\r\n\r\n  destroy(): void {\r\n    this.saveState(this.globalCache, this.editorInstance);\r\n    this.resizeObserver.disconnect();\r\n    this.completionItemProviders.forEach(completionItemProvider => completionItemProvider.dispose());\r\n    this.jsTypingsLib?.dispose();\r\n    this.editorInstance.getModel().dispose();\r\n    this.editorInstance.dispose();\r\n  }\r\n\r\n  updateValue(value: string): void {\r\n    if (this.cachedValue === value) { return; }\r\n    this.cachedValue = value;\r\n    this.editorInstance.getModel().setValue(value);\r\n  }\r\n\r\n  focus(): void {\r\n    this.editorInstance.focus();\r\n  }\r\n\r\n  onValueChange(callback: (value: string) => void): void {\r\n    this.valueChangedCallback = callback;\r\n  }\r\n\r\n  onFocus(callback: () => void): void {\r\n    this.focusedCallback = callback;\r\n  }\r\n\r\n  onBlur(callback: () => void): void {\r\n    this.blurredCallback = callback;\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    const snippetController = this.editorInstance\r\n      .getContribution<Monaco.editor.IEditorContribution & { insert(template: string, opts?: Record<string, any>): void; }>('snippetController2');\r\n    snippetController.insert(snippet);\r\n  }\r\n\r\n  setSnippets(snippets: Snippet[]): void {\r\n    this.snippets = snippets;\r\n  }\r\n\r\n  setTooltips(tooltips: Tooltip[]): void {\r\n    this.tooltips = tooltips;\r\n  }\r\n\r\n  setJsonSchema(jsonSchema?: JsonSchema): void {\r\n    const uri = this.editorInstance.getModel().uri.toString();\r\n    const oldJsonDiagnostics = this.monaco.languages.json.jsonDefaults.diagnosticsOptions;\r\n    const exists = oldJsonDiagnostics.schemas?.some(schema => schema.fileMatch[0] === uri) ?? false;\r\n\r\n    const newSchema: Monaco.languages.json.DiagnosticsOptions['schemas'][0] = jsonSchema?.type === 'link'\r\n      ? { uri: jsonSchema.value, fileMatch: [uri] }\r\n      : jsonSchema?.type === 'raw'\r\n        ? { uri, fileMatch: [uri], schema: JSON.parse(jsonSchema.value) }\r\n        : undefined;\r\n\r\n    if (!exists && !newSchema) { return; }\r\n\r\n    const newJsonDiagnostics: Monaco.languages.json.DiagnosticsOptions = {\r\n      ...oldJsonDiagnostics,\r\n      enableSchemaRequest: true,\r\n      schemas: exists && !newSchema\r\n        ? oldJsonDiagnostics.schemas.filter(schema => schema.fileMatch[0] !== uri)\r\n        : exists\r\n          ? oldJsonDiagnostics.schemas.map(schema => schema.fileMatch[0] === uri ? newSchema : schema)\r\n          : [...(oldJsonDiagnostics.schemas ?? []), newSchema],\r\n    };\r\n\r\n    this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(newJsonDiagnostics);\r\n  }\r\n\r\n  setJsonComments(comments?: Monaco.languages.json.SeverityLevel): void {\r\n    if (!comments) { return; }\r\n\r\n    const jsonDiagnostics: Monaco.languages.json.DiagnosticsOptions = {\r\n      ...this.monaco.languages.json.jsonDefaults.diagnosticsOptions,\r\n      comments,\r\n    };\r\n    this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(jsonDiagnostics);\r\n  }\r\n\r\n  setJsDiagnostics(options: Monaco.languages.typescript.DiagnosticsOptions): void {\r\n    if (!options) { return; }\r\n\r\n    const javascriptDiagnostics: Monaco.languages.typescript.DiagnosticsOptions = {\r\n      ...this.monaco.languages.typescript.javascriptDefaults.getDiagnosticsOptions(),\r\n      ...options,\r\n    };\r\n    this.monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions(javascriptDiagnostics);\r\n  }\r\n\r\n  setJsTypings(typings: string): void {\r\n    if (!typings) {\r\n      this.jsTypingsLib?.dispose();\r\n      return;\r\n    }\r\n    this.jsTypingsLib = this.monaco.languages.typescript.javascriptDefaults.addExtraLib(typings, `js-typings-${this.filename}`);\r\n  }\r\n\r\n  private createGlobalCache(monaco: typeof Monaco & { _2sxc?: Monaco2sxc }): Monaco2sxc {\r\n    if (monaco._2sxc == null) {\r\n      const _2sxc: Monaco2sxc = {\r\n        themesAreDefined: false,\r\n        savedStates: {},\r\n      };\r\n      monaco._2sxc = _2sxc;\r\n    }\r\n    return monaco._2sxc;\r\n  }\r\n\r\n  /** Registers our themes. Themes are global. Run before creating editor */\r\n  private defineThemes(globalCache: Monaco2sxc, monaco: typeof Monaco): void {\r\n    // there is currently no official way to get defined themes from Monaco to check if some theme was already defined\r\n    if (globalCache.themesAreDefined) { return; }\r\n    globalCache.themesAreDefined = true;\r\n\r\n    monaco.editor.defineTheme('2sxc-dark', {\r\n      base: 'vs-dark',\r\n      inherit: true,\r\n      rules: [\r\n        { token: 'metatag.cs', foreground: 'ffff00' },\r\n      ],\r\n      colors: {\r\n      },\r\n    });\r\n  }\r\n\r\n  private createInstance(\r\n    monaco: typeof Monaco,\r\n    filename: string,\r\n    value: string,\r\n    container: HTMLElement,\r\n    options: Monaco.editor.IStandaloneEditorConstructionOptions,\r\n  ): Monaco.editor.IStandaloneCodeEditor {\r\n    const editorInstance = monaco.editor.create(container, options);\r\n    const editorModelUri = monaco.Uri.file(filename);\r\n    const editorModel = monaco.editor.createModel(value, undefined, editorModelUri);\r\n    editorInstance.setModel(editorModel);\r\n    return editorInstance;\r\n  }\r\n\r\n  private saveState(globalCache: Monaco2sxc, editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    const uri = editorInstance.getModel().uri.toString();\r\n    const viewState = JSON.stringify(editorInstance.saveViewState());\r\n\r\n    if (globalCache.savedStates[uri] == null) {\r\n      globalCache.savedStates[uri] = { viewState };\r\n    } else {\r\n      globalCache.savedStates[uri].viewState = viewState;\r\n    }\r\n  }\r\n\r\n  private restoreState(globalCache: Monaco2sxc, editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    const uri = editorInstance.getModel().uri.toString();\r\n    const savedState = globalCache.savedStates[uri];\r\n    if (savedState == null) { return; }\r\n\r\n    const viewState: Monaco.editor.ICodeEditorViewState = JSON.parse(savedState.viewState);\r\n    editorInstance.restoreViewState(viewState);\r\n  }\r\n\r\n  private addSnippets(monaco: typeof Monaco, editorInstance: Monaco.editor.IStandaloneCodeEditor): Monaco.IDisposable[] {\r\n    const completionItemProviders = [\r\n      monaco.languages.registerCompletionItemProvider(editorInstance.getModel().getLanguageId(), {\r\n        triggerCharacters: ['>'],\r\n        provideCompletionItems: (model, position) => {\r\n          if (editorInstance.getModel() !== model) { return { suggestions: [] }; }\r\n\r\n          const textUntilPosition: string = model.getValueInRange({\r\n            startLineNumber: position.lineNumber,\r\n            startColumn: 1,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column,\r\n          });\r\n\r\n          // sometimes trigger character is wrong\r\n          const trigger = textUntilPosition[textUntilPosition.length - 1];\r\n          if (trigger !== '>') { return { suggestions: [] }; }\r\n\r\n          const tagStartIndex = textUntilPosition.lastIndexOf('<');\r\n          if (tagStartIndex === -1) { return { suggestions: [] }; }\r\n\r\n          const codeInTag = textUntilPosition.substring(tagStartIndex);\r\n          // check that > is not in between quotes like in <div class=\"car>\"\r\n          let quotes = 0;\r\n          Array.from(codeInTag).forEach(c => {\r\n            if (c === '\"') { quotes++; }\r\n          });\r\n          if (quotes % 2 !== 0) { return { suggestions: [] }; }\r\n          // check that it's not a closing tag\r\n          if (codeInTag.startsWith('</')) { return { suggestions: [] }; }\r\n          // check that tag is not already closed\r\n          if (codeInTag.indexOf('>') !== codeInTag.length - 1) { return { suggestions: [] }; }\r\n\r\n          // tag name ends with space or tag is closed completely\r\n          let tagEndIndex = codeInTag.indexOf(' ');\r\n          if (tagEndIndex === -1) {\r\n            tagEndIndex = codeInTag.indexOf('>');\r\n          }\r\n          if (tagEndIndex === -1) { return { suggestions: [] }; }\r\n\r\n          const tag = codeInTag.substring(1, tagEndIndex);\r\n          if (!tag) { return { suggestions: [] }; }\r\n          if (voidElements.includes(tag.toLocaleLowerCase())) { return { suggestions: [] }; }\r\n          if (!/[a-zA-Z0-9_-]/.test(tag)) { return { suggestions: [] }; }\r\n\r\n          const suggestions: Monaco.languages.CompletionItem[] = [{\r\n            label: `</${tag}>`,\r\n            kind: monaco.languages.CompletionItemKind.Snippet,\r\n            insertText: `\\$0</${tag}>`,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            range: {\r\n              startLineNumber: position.lineNumber,\r\n              endLineNumber: position.lineNumber,\r\n              startColumn: position.column,\r\n              endColumn: position.column,\r\n            },\r\n          }];\r\n          return { suggestions };\r\n        },\r\n      }),\r\n\r\n      monaco.languages.registerCompletionItemProvider(editorInstance.getModel().getLanguageId(), {\r\n        provideCompletionItems: (model, position) => {\r\n          if (this.snippets == null || editorInstance.getModel() !== model) { return { suggestions: [] }; }\r\n\r\n          const word = model.getWordUntilPosition(position);\r\n          const suggestions = this.snippets.map(snippet => {\r\n            if (!snippet.content) { return; }\r\n            const suggestion: Monaco.languages.CompletionItem = {\r\n              label: snippet.name,\r\n              kind: monaco.languages.CompletionItemKind.Snippet,\r\n              documentation: `${snippet.title ?? ''}\\n${snippet.help ?? ''}\\n${snippet.links ?? ''}`,\r\n              insertText: snippet.content,\r\n              insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n              range: {\r\n                startLineNumber: position.lineNumber,\r\n                endLineNumber: position.lineNumber,\r\n                startColumn: word.startColumn,\r\n                endColumn: word.endColumn\r\n              },\r\n            };\r\n            return suggestion;\r\n          }).filter(suggestion => !!suggestion);\r\n          return { suggestions };\r\n        },\r\n      }),\r\n\r\n      monaco.languages.registerHoverProvider(editorInstance.getModel().getLanguageId(), {\r\n        provideHover: (model, position) => {\r\n          if (this.tooltips == null || editorInstance.getModel() !== model) { return; }\r\n\r\n          const word = model.getWordAtPosition(position);\r\n          if (!word) { return; }\r\n\r\n          const tooltip = this.tooltips.find(i => i.Term === word.word);\r\n          if (!tooltip) { return; }\r\n\r\n          return {\r\n            contents: tooltip.Help.map(value => {\r\n              const content: Monaco.IMarkdownString = {\r\n                value,\r\n              };\r\n              return content;\r\n            }),\r\n            range: {\r\n              startLineNumber: position.lineNumber,\r\n              endLineNumber: position.lineNumber,\r\n              startColumn: word.startColumn,\r\n              endColumn: word.endColumn,\r\n            },\r\n          };\r\n        }\r\n      }),\r\n    ];\r\n\r\n    return completionItemProviders;\r\n  }\r\n\r\n  private createResizeObserver(container: HTMLElement, editorInstance: Monaco.editor.IStandaloneCodeEditor): ResizeObserver {\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      editorInstance.layout();\r\n    });\r\n    resizeObserver.observe(container);\r\n    return resizeObserver;\r\n  }\r\n\r\n  private addEvents(editorInstance: Monaco.editor.IStandaloneCodeEditor): void {\r\n    editorInstance.getModel().onDidChangeContent(() => {\r\n      const newValue = editorInstance.getModel().getValue();\r\n      if (newValue === this.cachedValue) { return; }\r\n      this.cachedValue = newValue;\r\n      this.valueChangedCallback?.(newValue);\r\n    });\r\n\r\n    editorInstance.onDidFocusEditorWidget(() => {\r\n      this.focusedCallback?.();\r\n    });\r\n\r\n    editorInstance.onDidBlurEditorWidget(() => {\r\n      this.blurredCallback?.();\r\n    });\r\n\r\n    // this.editorInstance.onDidChangeModelDecorations(e => {\r\n    //   const value = this.editorInstance.getModel().getValue();\r\n    //   const markers = this.monaco.editor.getModelMarkers({}).filter(marker => marker.resource.path === `/${this.filename}`);\r\n    //   const valid = !markers.some(\r\n    //     marker => marker.severity === this.monaco.MarkerSeverity.Error || marker.severity === this.monaco.MarkerSeverity.Warning\r\n    //   );\r\n    // });\r\n\r\n    // this.monaco.editor.onDidChangeMarkers(() => {\r\n    //   // markers updates are async and lagging behind value updates\r\n    //   const markers = this.monaco.editor.getModelMarkers({}).filter(marker => marker.resource.path === `/${this.filename}`);\r\n    //   if (markers.some(marker => marker.severity === this.monaco.MarkerSeverity.Error)) {\r\n    //     // has errors\r\n    //   } else if (markers.some(marker => marker.severity === this.monaco.MarkerSeverity.Warning)) {\r\n    //     // has warnings\r\n    //   } else {\r\n    //     // has no errors or warnings\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { JsonSchema } from '.';\r\nimport { Snippet } from '../code-editor/models/snippet.model';\r\nimport { Tooltip } from '../code-editor/models/tooltip.model';\r\nimport { EavWindow } from '../shared/models/eav-window.model';\r\nimport { nameof } from '../shared/typescript-helpers';\r\nimport { MonacoInstance } from './monaco-instance';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n    selector: 'app-monaco-editor',\r\n    templateUrl: './monaco-editor.component.html',\r\n    styleUrls: ['./monaco-editor.component.scss'],\r\n    standalone: true,\r\n})\r\nexport class MonacoEditorComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ViewChild('editor') private editorRef: ElementRef<HTMLElement>;\r\n  @Input() filename: string;\r\n  @Input() value: string;\r\n  @Input() snippets?: Snippet[];\r\n  @Input() tooltips?: Tooltip[];\r\n  @Input() options?: Monaco.editor.IStandaloneEditorConstructionOptions;\r\n  @Input() jsonSchema?: JsonSchema;\r\n  @Input() jsonComments?: Monaco.languages.json.SeverityLevel;\r\n  @Input() jsTypings?: string;\r\n  @Input() jsDiagnostics?: Monaco.languages.typescript.DiagnosticsOptions;\r\n  @Input() autoFocus = false;\r\n  @Output() private valueChanged = new EventEmitter<string>();\r\n  @Output() private focused = new EventEmitter<undefined>();\r\n  @Output() private blurred = new EventEmitter<undefined>();\r\n\r\n  private monaco?: typeof Monaco;\r\n  private monacoInstance?: MonacoInstance;\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit(): void {\r\n    window.require.config({\r\n      paths: {\r\n        vs: ['https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.46.0/min/vs'],\r\n      },\r\n    });\r\n\r\n    window.require(['vs/editor/editor.main'], (monaco: typeof Monaco) => {\r\n      this.monaco = monaco;\r\n      this.createEditor(this.autoFocus);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes[nameof<MonacoEditorComponent>('filename')] != null && this.monacoInstance != null) {\r\n      this.monacoInstance.destroy();\r\n      this.createEditor(true);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('value')] != null) {\r\n      this.monacoInstance?.updateValue(this.value);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsonSchema')] != null) {\r\n      this.monacoInstance?.setJsonSchema(this.jsonSchema);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsonComments')] != null) {\r\n      this.monacoInstance?.setJsonComments(this.jsonComments);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('snippets')] != null) {\r\n      this.monacoInstance?.setSnippets(this.snippets);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('tooltips')] != null) {\r\n      this.monacoInstance?.setTooltips(this.tooltips);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsTypings')] != null) {\r\n      this.monacoInstance?.setJsTypings(this.jsTypings);\r\n    }\r\n    if (changes[nameof<MonacoEditorComponent>('jsDiagnostics')] != null) {\r\n      this.monacoInstance?.setJsDiagnostics(this.jsDiagnostics);\r\n    }\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoInstance?.insertSnippet(snippet);\r\n    this.monacoInstance?.focus();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.monacoInstance?.destroy();\r\n  }\r\n\r\n  private createEditor(autoFocus: boolean): void {\r\n    this.monacoInstance = new MonacoInstance(\r\n      this.monaco, this.filename, this.value, this.editorRef.nativeElement, this.options, this.snippets, this.tooltips,\r\n    );\r\n\r\n    this.monacoInstance.setJsonSchema(this.jsonSchema);\r\n    this.monacoInstance.setJsonComments(this.jsonComments);\r\n    this.monacoInstance.setJsTypings(this.jsTypings);\r\n    this.monacoInstance.setJsDiagnostics(this.jsDiagnostics);\r\n\r\n    this.monacoInstance.onValueChange(value => {\r\n      this.valueChanged.emit(value);\r\n    });\r\n\r\n    this.monacoInstance.onFocus(() => {\r\n      this.focused.emit();\r\n    });\r\n\r\n    this.monacoInstance.onBlur(() => {\r\n      this.blurred.emit();\r\n    });\r\n\r\n    if (autoFocus) {\r\n      this.monacoInstance.focus();\r\n    }\r\n  }\r\n}\r\n","<div class=\"editor\" #editor></div>\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\n\r\n@Directive({ selector: '[appToggleDebug]', standalone: true})\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml',  standalone: true  })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /** Theme palette color of the progress spinner. */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    constructor(_elementRef, animationMode, defaults) {\n        this._elementRef = _elementRef;\n        this._defaultColor = 'primary';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            _elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n"],"x_google_ignoreList":[6]}