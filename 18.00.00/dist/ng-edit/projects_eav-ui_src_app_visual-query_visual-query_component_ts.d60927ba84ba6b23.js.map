{"version":3,"file":"projects_eav-ui_src_app_visual-query_visual-query_component_ts.d60927ba84ba6b23.js","mappings":"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","names":["i0","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","constructor","this","isError","isShort","toggleIsShort","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","inputs","standalone","features","ngContentSelectors","_c0","decls","vars","consts","template","rf","ctx","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","MatFormFieldModule","i1","NgClass","NgTemplateOutlet","styles","MousedownStopPropagationDirective","onMousedown","event","stopPropagation","FsC","hostBindings","$event","QueryDefinitionService","http","context","fetchPipeline","pipelineEntityId","dataSources","get","webApiQueryGet","params","appId","toString","id","pipe","map","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","push","Description","EntityGuid","EntityId","undefined","Name","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","webApiQueryDataSources","appid","zoneId","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","Icon","In","Out","PrimaryType","TypeNameForUi","UiHint","typeNameFilter","input","format","globalParts","split","classFullNameParts","savePipeline","pipeline","post","webApiQuerySave","Id","newPipelineModel","runPipeline","top","webApiQueryRun","debugStream","source","sourceOut","webApiQueryDebugStream","from","out","i2","core","jDH","factory","ɵfac","ctx_r0","name","sourceName","option_r3","_r2","$implicit","show","QueryResultComponent_For_18_Conditional_2_Template","QueryResultComponent_For_18_Conditional_3_Template","param_r4","QueryResultComponent_Conditional_22_div_1_Template","QueryResultComponent_Conditional_22_For_5_Template","parameters","source_r5","value","Definition","config_r6","key","QueryResultComponent_For_37_Conditional_2_Template","QueryResultComponent_For_37_For_10_Template","Guid","Type","Configuration","Error","stream_r7","Source","SourceOut","Target","TargetIn","Count","QueryResultComponent","dialogData","dialogRef","visualQueryService","ngOnInit","pipelineModel$","Params","filter","el","testParams","TestParameters","concat","timeUsed","result","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_15_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_For_18_Template","QueryResultComponent_Conditional_22_Template","QueryResultComponent_div_24_Template","QueryResultComponent_For_37_Template","QueryResultComponent_div_40_Template","QueryResultComponent_For_53_Template","MatButtonModule","i3","MatIconModule","i4","MatTabsModule","i5","JsonPipe","KeyValuePipe","StreamErrorResultComponent","errorData","openInsights","window","open","$2sxc","apiUrl","MatDialogActions","VisualQueryService","BaseWithChildDialogComponent","router","route","queryDefinitionService","titleService","snackBar","dialog","viewContainerRef","zone","metadataService","contentTypesService","changeDetectorRef","super","BehaviorSubject","dataSources$","putEntityCountOnConnections$","Subject","dataSourceConfigs$","pipelineId","parseInt","snapshot","paramMap","refreshPipeline","refreshDataSourceConfigs","ngOnDestroy","complete","init","attachKeyboardSave","subscriptions","add","childDialogClosed$","subscribe","editPipelineEntity","formUrl","convertFormToUrl","items","navigate","relativeTo","saveAndRun","save","run","showDataSourceDetails","showDetails","cloneDeep","visualDesignerData","JsonHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","next","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","calculateDataSourceConfigs","dataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","Title","editDataSource","contentTypeName","getMetadata","metadata","entity","targetType","keyType","Items","retrieveContentType","contentType","duration","ContentTypeName","For","target","TargetType","error","callback","pipelineResult","showQueryResult","console","warn","setTimeout","stream","showStreamErrorResult","streamResult","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","fromEvent","firstChild","navigator","platform","match","metaKey","ctrlKey","keyCode","preventDefault","i6","i7","guiTypes","App","Label","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Unknown","Debug","System","calculateTypeInfos","typeInfos","typeInfo","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","isSource","pipelineResultExists","controls","label","touched","errors","required","scopeOption_r3","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_r5","toggleAdvancedMode","RenameStreamComponent","BaseComponent","hostClass","buildForm","checked","rename","formValue","form","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scope","scopes","valueChanges","startWith","distinctUntilChanged","values","Scope","patchValue","getScopes","filtered","s","o","hostVars","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","FormsModule","ReactiveFormsModule","MatInputModule","i8","MatSelectModule","i9","i10","MatOptionModule","MatSlideToggleModule","i11","ClickStopPropagationDirective","dataSrcIdPrefix","Plumber","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","log","EavLogger","lineCount","linePaintDefault","stroke","strokeWidth","outlineStroke","outlineWidth","lineColors","maxCols","uuidColorMap","bulkDelete","instance","jsPlumb","getInstance","getInstanceDefaults","batch","initDomDataSources","initWirings","bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","delete","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","each","endpoint","join","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","cssClass","events","click","overlay","AllowEdit","nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","l","fnCond","domDataSource","querySelector","draggable","grid","stop","finalPos","outCount","a","addEndpoint","inCount","in","targetEndpointUnlimited","buildTargetEndpoint","maxConnections","makeTarget","makeSource","buildSourceEndpoint","end","fn","wirings","inGroups","groupBy","wire","outGroups","guid","pipeDataSource","connect","uuids","paintStyle","message","to","endpointName","isIn","count","d","connectionList","isDynamic","getEndpointInfo","endpointInfo","style","angled","model","enabled","addClass","fill","radius","anchor","faces","overlays","getEndpointOverlays","endpointOrOverlay","onChangeLabel","isTarget","dropOptions","hoverClass","activeClass","location","width","afterClosed","newLabel","bind","info","targetEndpoint","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","trimmed","trim","endsWith","substring","arr","reduce","groups","item","dataSource_r3","ctx_r3","configureDataSource","vm_r6","openHelp","_r7","remove","config_r8","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","allowEdit","editName","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","_c2","Width","_c3","isOutDataSource","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","PlumbEditorComponent","scriptLoaded$","loadScripts","test","src","plumber","pipelineDesignerData$","RxHelpers","objectsEqual","viewModel$","combineLatest","pipelineDesignerData","detectChanges","ngAfterViewInit","domDataSourcesLoaded$","domDataSourcesRef","changes","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","url","newName","prompt","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","tmp_0_0","NgStyle","AsyncPipe","dataSource_r6","ctx_r1","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r4","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_14_0","toggledItems","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","difficulties","difficulty$","difficulty","filterAndSortDataSources","maxDifficulty","sort","b","toLocaleLowerCase","localeCompare","type","advanced","ArrayHelpers","toggleInArray","index","AddExplorerComponent_Conditional_0_Template","TippyDirective","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","pipelineModel_r4","param_r5","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","_r6","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_For_8_Template","warnings_r8","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_Template","saveAndRunQuery","editPipeline","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","RunExplorerComponent_Conditional_0_Conditional_29_Template","openRestApi","tmp_4_0","visualDesignerData$","tmp_5_0","warnings$","RunExplorerComponent","asObservable","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","VisualQueryComponent","explorer","activeExplorer","toggleExplorer","MetadataService","ContentTypesService","RouterOutlet"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html"],"sourcesContent":["<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule, NgClass, NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appMousedownStopPropagation]', standalone: true})\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService {\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.http.get<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.context.appId.toString(), id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.http.get<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.context.appId,\r\n        zoneId: this.context.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.context.appId.toString(), Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos.\r\n      Executed in {{ timeUsed }}ms ({{ ticksUsed }} ticks)\r\n    </p>\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n\r\n        <p class=\"eav-tab-description\">\r\n          @if (top === 0) {\r\n            Showing All results\r\n          }\r\n          @if (top !== 0) {\r\n            Showing top {{ top }} results\r\n          }\r\n          @for (option of optionsForTop; track option) {\r\n            <button mat-button (click)=\"show(option)\">\r\n              Show\r\n              @if (option === 0) {\r\n                All\r\n              }\r\n              @if (option !== 0) {\r\n                {{ option }}\r\n              }\r\n            </button>\r\n          }\r\n        </p>\r\n        <pre>{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n          <br />\r\n          <ul>\r\n            @for (param of parameters; track param) {\r\n              <li>{{ param }}</li>\r\n            }\r\n          </ul>\r\n        </mat-tab>\r\n      }\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Name and Guid</th>\r\n            <th>Type</th>\r\n            <th>Configuration</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (source of sources | keyvalue; track source) {\r\n            <tr>\r\n              <td>\r\n                @if (source.value.Definition?.Name) {\r\n                  <div>{{ source.value.Definition?.Name }}</div>\r\n                }\r\n                <pre>{{ source.value.Guid }}</pre>\r\n              </td>\r\n              <td>{{ source.value.Type }}</td>\r\n              <td>\r\n                <ol>\r\n                  @for (config of source.value.Configuration | keyvalue; track config) {\r\n                    <li>\r\n                      <b>{{ config.key }}</b>=<em>{{ config.value }}</em>\r\n                    </li>\r\n                  }\r\n                </ol>\r\n              </td>\r\n              <td>{{ source.value.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Source</th>\r\n            <th>Target</th>\r\n            <th>Items</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (stream of streams; track stream) {\r\n            <tr>\r\n              <td>\r\n                <pre>{{ stream.Source + \":\" + stream.SourceOut }}</pre>\r\n              </td>\r\n              <td>\r\n                <pre>{{ stream.Target + \":\" + stream.TargetIn }}</pre>\r\n              </td>\r\n              <td>{{ stream.Count }}</td>\r\n              <td>{{ stream.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\nimport { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-query-result',\r\n  templateUrl: './query-result.component.html',\r\n  styleUrls: ['./query-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    JsonPipe,\r\n    KeyValuePipe,\r\n  ],\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialogRef: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel$.value.Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) { return; }\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-stream-error-result',\r\n  templateUrl: './stream-error-result.component.html',\r\n  styleUrls: ['./stream-error-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    JsonPipe,\r\n  ],\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialogRef: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { BehaviorSubject, filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\n// tslint:disable-next-line:max-line-length\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\n\r\n@Injectable()\r\nexport class VisualQueryService extends BaseWithChildDialogComponent implements OnDestroy {\r\n  pipelineModel$ = new BehaviorSubject<PipelineModel>(null);\r\n  dataSources$ = new BehaviorSubject<DataSource[]>(null);\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n  dataSourceConfigs$ = new BehaviorSubject<DataSourceConfigs>({});\r\n  pipelineResult?: PipelineResult;\r\n\r\n  private pipelineId = parseInt(this.route.snapshot.paramMap.get('pipelineId'), 10);\r\n  private refreshPipeline = false;\r\n  private refreshDataSourceConfigs = false;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private titleService: Title,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private metadataService: MetadataService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pipelineModel$.complete();\r\n    this.dataSources$.complete();\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.fetchDataSources(() => this.fetchPipeline(true, true, false));\r\n    this.attachKeyboardSave();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => {\r\n      if (this.refreshPipeline || this.refreshDataSourceConfigs) {\r\n        this.fetchPipeline(this.refreshPipeline, this.refreshDataSourceConfigs, this.refreshPipeline);\r\n      }\r\n      this.refreshPipeline = false;\r\n      this.refreshDataSourceConfigs = false;\r\n     }));\r\n  }\r\n\r\n  editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [{ EntityId: this.pipelineModel$.value.Pipeline.EntityId }],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n      this.refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  saveAndRun(save: boolean, run: boolean) {\r\n    if (save && run) {\r\n      this.savePipeline(() => { this.runPipeline(); });\r\n    } else if (save) {\r\n      this.savePipeline();\r\n    } else if (run) {\r\n      this.runPipeline();\r\n    }\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const visualDesignerData: Record<string, any> = JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {};\r\n    visualDesignerData.ShowDataSourceDetails = showDetails;\r\n    pipelineModel.Pipeline.VisualDesignerData = JSON.stringify(visualDesignerData);\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const newPipelineDataSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (pipelineModel.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    pipelineModel.DataSources.push(newPipelineDataSource);\r\n    this.pipelineModel$.next(pipelineModel);\r\n    this.savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.DataSources = pipelineModel.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Name = name;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Description = description;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!pipelineDataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    pipelineDataSource.VisualDesignerData = { ...pipelineDataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  private calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) { return; }\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') { return; }\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) { return; }\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title != null && attributeValue[0]?.Id != null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs$.next(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources$.value.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const targetType = eavConstants.metadata.entity.targetType;\r\n    const keyType = eavConstants.metadata.entity.keyType;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.metadataService.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [{ EntityId: metadata.Items[0].Id }],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n        this.refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.contentTypesService.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [{\r\n              ContentTypeName: contentTypeName,\r\n              For: {\r\n                Target: eavConstants.metadata.entity.target,\r\n                TargetType: eavConstants.metadata.entity.targetType,\r\n                Guid: key,\r\n              },\r\n            }],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n          this.refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.queryDefinitionService.savePipeline(this.pipelineModel$.value).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel$.next(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.queryDefinitionService.runPipeline(this.pipelineModel$.value.Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.pipelineResult = pipelineResult;\r\n        this.showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel$.next(cloneDeep(this.pipelineModel$.value));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25) {\r\n    if (stream.Error) {\r\n      this.showStreamErrorResult(stream);\r\n      return;\r\n    }\r\n\r\n    if (stream.Count === 0) { return; }\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel$.value.Pipeline.EntityId;\r\n    this.queryDefinitionService.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel$.value.DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar) {\r\n      this.snackBar.open('Reloading query, please wait...');\r\n    }\r\n    this.queryDefinitionService.fetchPipeline(this.pipelineId, this.dataSources$.value).subscribe(pipelineModel => {\r\n      if (showSnackBar) {\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n      }\r\n      this.titleService.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline) {\r\n        this.pipelineModel$.next(pipelineModel);\r\n      }\r\n      if (refreshDataSourceConfigs) {\r\n        this.calculateDataSourceConfigs(pipelineModel.DataSources);\r\n      }\r\n    });\r\n  }\r\n\r\n  private showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.dialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.dialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private fetchDataSources(callback?: () => void) {\r\n    this.queryDefinitionService.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources$.next(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  private attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.route.snapshot.firstChild),\r\n          filter(event => {\r\n            const CTRL_S = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.keyCode === 83;\r\n            return CTRL_S;\r\n          }),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (dataSource) {\r\n      typeInfo = { ...(dataSource.PrimaryType ? guiTypes[dataSource.PrimaryType] : guiTypes.Unknown) };\r\n      if (dataSource.Icon != null) { typeInfo.Icon = dataSource.Icon; }\r\n      if (dataSource.DynamicIn != null) { typeInfo.DynamicIn = dataSource.DynamicIn; }\r\n      if (dataSource.DynamicOut != null) { typeInfo.DynamicOut = dataSource.DynamicOut; }\r\n      if (dataSource.HelpLink != null) { typeInfo.HelpLink = dataSource.HelpLink; }\r\n      if (dataSource.EnableConfig != null) { typeInfo.EnableConfig = dataSource.EnableConfig; }\r\n      if (dataSource.UiHint != null) { typeInfo.UiHint = dataSource.UiHint; }\r\n    }\r\n    if (!typeInfo) { typeInfo = { ...guiTypes.Unknown }; }\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { ChangeDetectorRef, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith, Subscription } from 'rxjs';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { VisualQueryService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\n\r\n@Component({\r\n  selector: 'app-rename-stream',\r\n  templateUrl: './rename-stream.component.html',\r\n  styleUrls: ['./rename-stream.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    MatDialogActions,\r\n    MatSlideToggleModule,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ]\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.pipelineResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialogRef: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryService,\r\n    private contentTypesService: ContentTypesService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialogRef.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists) { return; }\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null) {\r\n          this.controls.label.patchValue(null);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\n\r\nconst logThis = true;\r\nconst nameOfThis = 'Plumber';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nconst endPointsWhereWeRotate = 3;\r\n\r\nexport class Plumber {\r\n  private log = new EavLogger(nameOfThis, logThis);\r\n  private instance: PlumbType;\r\n  private lineCount = 0;\r\n  private linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  private lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  private maxCols = this.lineColors.length - 1;\r\n  private uuidColorMap: Record<string, any> = {};\r\n  private bulkDelete = false;\r\n  private dialogRef: MatDialogRef<RenameStreamComponent>;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.instance = window.jsPlumb.getInstance(this.getInstanceDefaults(this.jsPlumbRoot));\r\n    this.instance.batch(() => {\r\n      this.initDomDataSources();\r\n      this.initWirings();\r\n      this.bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.dialogRef?.close();\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  private nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.uuidColorMap[uuid] ||\r\n      (this.uuidColorMap[uuid] = Object.assign({}, this.linePaintDefault, { stroke: this.lineColors[this.lineCount++ % this.maxCols] }))\r\n    );\r\n  }\r\n\r\n  private getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  private initDomDataSources() {\r\n    const l = this.log.fnCond(false, 'initDomDataSources');\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) continue;\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) continue;\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, false, pipelineDataSource, outCount);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, true, pipelineDataSource, inCount);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut)\r\n        this.instance.makeSource(domDataSource, this.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n    }\r\n    l.end();\r\n  }\r\n\r\n  /** Create wires */\r\n  private initWirings() {\r\n    const l = this.log.fn('initWirings');\r\n    const wirings = this.pipelineModel.Pipeline.StreamWiring;\r\n    if (!wirings) return l.end(null, 'no wirings');\r\n\r\n    const inGroups = groupBy(wirings, wire => wire.To);\r\n    const outGroups = groupBy(wirings, wire => wire.From);\r\n\r\n    l.values({ inGroups, outGroups });\r\n\r\n    wirings.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        \r\n        // if (wire.In === \"DEBUG\") debugger;\r\n\r\n        this.addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      }\r\n\r\n      try {\r\n        this.instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  private addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, pipelineDataSource: PipelineDataSource, count: number = 0) {\r\n    const l = this.log.fnCond(false, 'addEndpoint', { endpointName, isIn, pipelineDataSource });\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const connectionList = isIn ? dataSource.In : dataSource.Out;\r\n    const isDynamic = connectionList?.some(name => this.getEndpointInfo(name, false));\r\n    // const count = connectionList?.length ?? -1;\r\n    const endpointInfo = this.getEndpointInfo(endpointName, isDynamic);\r\n    \r\n    l.a(`endpointInfo ${count}`, { dataSource, connectionList, isDynamic, count, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    let style: string;\r\n    if (isDynamic)\r\n      style = 'dynamic';\r\n    else if (!endpointInfo.required)\r\n      style = '';\r\n    else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const angled = count > endPointsWhereWeRotate;\r\n    const model = isIn\r\n      ? this.buildTargetEndpoint(pipelineDataSource.EntityGuid, style)\r\n      : this.buildSourceEndpoint(pipelineDataSource.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || pipelineDataSource.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    if (angled)\r\n      overlay.addClass('angled');\r\n    l.end({count, angled, overlay}, \"end\");\r\n  }\r\n\r\n  private buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + style ?? '',\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return sourceEndpoint;\r\n  }\r\n\r\n  private buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return targetEndpoint;\r\n  }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    return [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n  }\r\n\r\n  private onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.dialogRef = this.dialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.dialogRef.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) return;\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private bindEvents() {\r\n    this.instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.bulkDelete) return;\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic) {\r\n        this.instance.deleteEndpoint(info.targetEndpoint);\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      } else {\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      }\r\n    });\r\n\r\n    this.instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => { this.onConnectionsChanged(); });\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel) {\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      }\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n  private getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    if (isDynamic) {\r\n      name = endpointName;\r\n      required = false;\r\n    } else {\r\n      const trimmed = endpointName.trim();\r\n      required = trimmed.endsWith('*');\r\n      name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n    }\r\n\r\n    const endpointInfo: EndpointInfo = {\r\n      name,\r\n      required,\r\n    };\r\n    return endpointInfo;\r\n  }\r\n}\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);","@if ((viewModel$ | async); as vm) {\r\n<div #domRoot id=\"pipeline-root\">\r\n  <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n  @if (!hardReset) {\r\n  @for (dataSource of vm.pipelineDataSources; track dataSource) {\r\n  <div #domDataSource [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\" class=\"dataSource\" [ngStyle]=\"{\r\n          'top': dataSource.VisualDesignerData.Top + 'px',\r\n          'left': dataSource.VisualDesignerData.Left + 'px',\r\n          'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null\r\n          }\" [ngClass]=\"{\r\n          'show-details': vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\r\n          }\">\r\n    <div class=\"actions left\">\r\n      <mat-icon class=\"type-info\" [title]=\"vm.typeInfos[dataSource.EntityGuid].UiHint\">\r\n        {{ vm.typeInfos[dataSource.EntityGuid].Icon }}\r\n      </mat-icon>\r\n      @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].EnableConfig) {\r\n      <mat-icon class=\"configure\" title=\"Configure data source\" appMousedownStopPropagation\r\n        (click)=\"configureDataSource(dataSource)\">\r\n        settings\r\n      </mat-icon>\r\n      }\r\n      @if (vm.typeInfos[dataSource.EntityGuid].HelpLink) {\r\n      <mat-icon class=\"help\" title=\"Help for this data source\" appMousedownStopPropagation\r\n        (click)=\"openHelp(vm.typeInfos[dataSource.EntityGuid].HelpLink)\">\r\n        help_outline\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"actions right\">\r\n      @if (vm.allowEdit && !isOutDataSource(dataSource)) {\r\n      <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\">\r\n        delete\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"name\" title=\"Click to edit name\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editName(dataSource)\">\r\n      <span>{{ dataSource.Name || '(no name)' }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    <div class=\"description\" title=\"Click to edit description\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editDescription(dataSource)\">\r\n      <span>{{ dataSource.Description }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    @if (vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length) {\r\n    <hr style=\"margin: 0\">\r\n    <table class=\"configs\">\r\n      @for (config of vm.dataSourceConfigs[dataSource.EntityId]; track config) {\r\n      <tr class=\"config\">\r\n        <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n        <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n      </tr>\r\n      }\r\n    </table>\r\n    }\r\n    <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">\r\n      Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}\r\n    </div>\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicOut) {\r\n    <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\">\r\n    </div>\r\n    }\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicIn) {\r\n    <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\">\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n  }\r\n</div>\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable } from 'rxjs';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { PlumbEditorViewModel } from './plumb-editor.models';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgStyle, NgClass, AsyncPipe } from '@angular/common';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { RxHelpers } from '../../shared/rxJs/rx.helpers';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\n\r\nconst logThis = true;\r\nconst nameOfThis = 'PlumbEditorComponent';\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n  selector: 'app-plumb-editor',\r\n  templateUrl: './plumb-editor.component.html',\r\n  styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n  styleUrls: ['./plumb-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgStyle,\r\n    NgClass,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    MousedownStopPropagationDirective,\r\n  ],\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  private plumber: Plumber;\r\n  private scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n  viewModel$: Observable<PlumbEditorViewModel>;\r\n\r\n  constructor(\r\n    private visualQueryService: VisualQueryService,\r\n    private queryDefinitionService: QueryDefinitionService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super(new EavLogger(nameOfThis, logThis));\r\n  }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.visualQueryService.putEntityCountOnConnections$.subscribe(result => {\r\n        this.plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    const pipelineDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel?.Pipeline.VisualDesignerData) ?? {}),\r\n      distinctUntilChanged(RxHelpers.objectsEqual),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.visualQueryService.pipelineModel$,\r\n      this.visualQueryService.dataSources$,\r\n      pipelineDesignerData$,\r\n      this.visualQueryService.dataSourceConfigs$,\r\n    ]).pipe(\r\n      map(([pipelineModel, dataSources, pipelineDesignerData, dataSourceConfigs]) => {\r\n        if (pipelineModel == null || dataSources == null) { return; }\r\n\r\n        // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n        // This wipes dom entirely and gives us new elements\r\n        this.hardReset = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.hardReset = false;\r\n        const viewModel: PlumbEditorViewModel = {\r\n          pipelineDataSources: pipelineModel.DataSources,\r\n          typeInfos: calculateTypeInfos(pipelineModel.DataSources, dataSources),\r\n          allowEdit: pipelineModel.Pipeline.AllowEdit,\r\n          showDataSourceDetails: pipelineDesignerData.ShowDataSourceDetails ?? false,\r\n          dataSourceConfigs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fn('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        this.log.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.plumber?.destroy();\r\n        this.plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visualQueryService.pipelineModel$.value,\r\n          this.visualQueryService.dataSources$.value,\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.dialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.plumber?.destroy();\r\n    this.scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visualQueryService.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visualQueryService.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource) {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved')) {\r\n      this.visualQueryService.saveAndRun(true, false);\r\n    } else {\r\n      this.visualQueryService.editDataSource(dataSource);\r\n    }\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.visualQueryService.dataSources$.value.find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.queryDefinitionService.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) { return; }\r\n\r\n    this.plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') { return; }\r\n\r\n    this.visualQueryService.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) { return; }\r\n\r\n    this.visualQueryService.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of vm.sorted | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue, AsyncPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-add-explorer',\r\n  templateUrl: './add-explorer.component.html',\r\n  styleUrls: ['./add-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    KeyValuePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AddExplorerComponent implements OnInit, OnDestroy {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  private difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n  private difficulty$ = new BehaviorSubject(this.difficulties.default);\r\n\r\n  viewModel$: Observable<AddExplorerViewModel>;\r\n\r\n  constructor(private visualQueryService: VisualQueryService) { }\r\n\r\n  ngOnInit() {\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.visualQueryService.dataSources$, this.difficulty$]).pipe(\r\n        map(([dataSources, difficulty]) => filterAndSortDataSources(dataSources, difficulty)),\r\n      )\r\n    ]).pipe(map(([sorted]) => ({ sorted })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.difficulty$.complete();\r\n  }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.difficulties.advanced : this.difficulties.default;\r\n    this.difficulty$.next(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n\r\ninterface AddExplorerViewModel {\r\n  sorted: SortedDataSources;\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) { return; }\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","@if ((pipelineModel$ | async); as pipelineModel) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">\r\n          Save and run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">\r\n          Run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">\r\n          Save\r\n        </button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (pipelineModel.Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (pipelineModel.Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerData$ | async; as visualDesignerData) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle color=\"primary\" [checked]=\"visualDesignerData.ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"/>\r\n          </div>\r\n        }\r\n      @if ((warnings$ | async); as warnings) {\r\n        @if (warnings.length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warnings; track warning) {\r\n                <li [innerHTML]=\"warning\">\r\n                </li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (pipelineModel.Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ pipelineModel.Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\nimport { VisualQueryService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\n\r\n@Component({\r\n  selector: 'app-run-explorer',\r\n  templateUrl: './run-explorer.component.html',\r\n  styleUrls: ['./run-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n  ],\r\n})\r\nexport class RunExplorerComponent implements OnInit {\r\n  pipelineModel$: Observable<PipelineModel>;\r\n  warnings$: Observable<string[]>;\r\n  visualDesignerData$: Observable<Record<string, any>>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private visualQueryService: VisualQueryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pipelineModel$ = this.visualQueryService.pipelineModel$.asObservable();\r\n    this.warnings$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => calculateWarnings(pipelineModel, this.context)),\r\n    );\r\n    this.visualDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n  }\r\n\r\n  editPipeline() {\r\n    this.visualQueryService.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.visualQueryService.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.visualQueryService.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.visualQueryService.pipelineModel$.value.Pipeline.EntityGuid;\r\n    this.router.navigate([GoToDevRest.getUrlQueryDialog(queryGuid)], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { VisualQueryService } from './services/visual-query.service';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\nimport { QueryDefinitionService } from './services/query-definition.service';\r\nimport { MetadataService } from '../permissions';\r\nimport { ContentTypesService } from '../app-administration/services';\r\n\r\n@Component({\r\n  selector: 'app-visual-query',\r\n  templateUrl: './visual-query.component.html',\r\n  styleUrls: ['./visual-query.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    RunExplorerComponent,\r\n    AddExplorerComponent,\r\n    PlumbEditorComponent,\r\n  ],\r\n  providers: [\r\n    VisualQueryService,\r\n    QueryDefinitionService,\r\n\r\n    MetadataService,\r\n    ContentTypesService,\r\n  ],\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(private context: Context, private route: ActivatedRoute, private visualQueryService: VisualQueryService) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n"],"x_google_ignoreList":[]}