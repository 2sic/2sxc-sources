{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_export-app_export-app_component_ts.b51a0582cd0a0709.js","mappings":"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","names":["i0","$event","_r2","ctx_r2","includeContentGroups","resetAppGuid","vm_r4","appInfo","Name","Guid","Version","EntitiesCount","LanguagesCount","TemplatesCount","HasTokenTemplates","HasRazorTemplates","TransferableFilesCount","FilesCount","isExporting","ExportAppComponent_Conditional_0_Conditional_5_Template","ExportAppComponent_Conditional_0_Conditional_14_Template","_r1","closeDialog","exportApp","ExportAppComponent","constructor","dialogRef","this","hostClass","exportAppService","transient","ExportAppService","appInfo$","BehaviorSubject","isExporting$","viewModel$","combineLatest","pipe","map","ngOnInit","getAppInfo","subscribe","next","ngOnDestroy","complete","close","static","t","i1","_angular_core__WEBPACK_IMPORTED_MODULE_1__","VBU","selectors","hostVars","hostBindings","rf","ctx","ExportAppComponent_Conditional_0_Template","tmp_0_0","MatProgressSpinnerModule","i2","MatCheckboxModule","i3","FormsModule","i4","MatDialogActions","MatButtonModule","i5","AsyncPipe","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/export-app/export-app.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/export-app/export-app.component.ts"],"sourcesContent":["@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Export app</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      @if (vm.isExporting) {\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n      }\r\n      <p>\r\n        Pack the entire app to a <em>zip</em> folder which can be imported again to another site.\r\n        For further help visit <a href=\"https://2sxc.org/en/help?tag=export-app\" target=\"_blank\">2sxc Help</a>.\r\n      </p>\r\n      @if (vm.appInfo) {\r\n        <div>\r\n          <p class=\"eav-app-info__title\">Specs</p>\r\n          <ul class=\"eav-app-info__content\">\r\n            <li>Name: {{ vm.appInfo.Name }}</li>\r\n            <li>Guid: {{ vm.appInfo.Guid }}</li>\r\n            <li>Version: {{ vm.appInfo.Version }}</li>\r\n          </ul>\r\n          <p class=\"eav-app-info__title\">Contains</p>\r\n          <ul class=\"eav-app-info__content\">\r\n            <li>{{ vm.appInfo.EntitiesCount }} entities</li>\r\n            <li>{{ vm.appInfo.LanguagesCount }} languages</li>\r\n            <li>\r\n              {{ vm.appInfo.TemplatesCount }} templates (Token: {{ vm.appInfo.HasTokenTemplates }}, Razor:\r\n              {{ vm.appInfo.HasRazorTemplates }})\r\n            </li>\r\n            <li>{{ vm.appInfo.TransferableFilesCount }} files to export</li>\r\n            <li>{{ vm.appInfo.FilesCount }} files in the app folder totally</li>\r\n          </ul>\r\n          <div class=\"eav-options-wrapper\">\r\n            <div class=\"oeav-ption-box\">\r\n              <mat-checkbox [(ngModel)]=\"includeContentGroups\" [disabled]=\"resetAppGuid || vm.isExporting\">\r\n                <span class=\"eav-option-box__text\">\r\n                  Include all content-groups to re-import the app in an exact copy of this site.\r\n                  Only select this option when you copy an entire DNN site.\r\n                </span>\r\n              </mat-checkbox>\r\n            </div>\r\n            <div class=\"eav-option-box\">\r\n              <mat-checkbox [(ngModel)]=\"resetAppGuid\" [disabled]=\"includeContentGroups || vm.isExporting\">\r\n                <span class=\"eav-option-box__text\">\r\n                  Reset the app GUID to zero. You only need this option for special tutorial apps,\r\n                  and usually must not select it.\r\n                </span>\r\n              </mat-checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-raised-button [disabled]=\"vm.isExporting\" (click)=\"closeDialog()\">\r\n        Cancel\r\n      </button>\r\n      <button mat-raised-button color=\"accent\" [disabled]=\"vm.isExporting\" (click)=\"exportApp()\">\r\n        Export App\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { AppInfo } from '../../models/app-info.model';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-export-app',\r\n  templateUrl: './export-app.component.html',\r\n  styleUrls: ['./export-app.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    AsyncPipe,\r\n  ],\r\n})\r\nexport class ExportAppComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  private exportAppService = transient(ExportAppService);\r\n\r\n  includeContentGroups = false;\r\n  resetAppGuid = false;\r\n  private appInfo$ = new BehaviorSubject<AppInfo>(null);\r\n  private isExporting$ = new BehaviorSubject(false);\r\n  viewModel$ = combineLatest([this.appInfo$, this.isExporting$]).pipe(\r\n    map(([appInfo, isExporting]) => ({ appInfo, isExporting })),\r\n  );\r\n\r\n  constructor(private dialogRef: MatDialogRef<ExportAppComponent>) { }\r\n\r\n  ngOnInit() {\r\n    this.exportAppService.getAppInfo().subscribe(appInfo => {\r\n      this.appInfo$.next(appInfo);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.appInfo$.complete();\r\n    this.isExporting$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  exportApp() {\r\n    this.isExporting$.next(true);\r\n    this.exportAppService.exportApp(this.includeContentGroups, this.resetAppGuid);\r\n    this.isExporting$.next(false);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}