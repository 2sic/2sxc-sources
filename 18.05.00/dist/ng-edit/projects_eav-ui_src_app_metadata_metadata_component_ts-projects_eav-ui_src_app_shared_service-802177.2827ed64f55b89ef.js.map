{"version":3,"file":"projects_eav-ui_src_app_metadata_metadata_component_ts-projects_eav-ui_src_app_shared_service-802177.2827ed64f55b89ef.js","mappings":"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","names":["ContentItemsService","HttpServiceBase","getAll","contentTypeStaticName","this","getHttpApiUrl","webApiEntityList","params","appId","contentType","getAllSig","initial","getSignal","getColumns","webApiFieldsAll","staticName","importItem","file","from","toBase64","pipe","switchMap","fileBase64","http","post","apiUrl","webApiEntityRoot","AppId","ContentBase64","map","success","Success","Messages","__ngFactoryType__","factory","ɵfac","i0","ctx_r0","dialogData","message","ConfirmDeleteDialogComponent","constructor","dialog","hostClass","closeDialog","confirm","close","MAT_DIALOG_DATA","i1","selectors","hostVars","hostBindings","rf","ctx","ConfirmDeleteDialogComponent_Conditional_4_Template","entityTitle","entityId","MatCardModule","i2","MatButtonModule","i3","SafeHtmlPipe","styles","MetadataActionsComponent","agInit","refresh","deleteMetadata","onDelete","data","standalone","features","decls","vars","consts","template","MatRippleModule","MatIconModule","TippyDirective","encapsulation","MetadataContentTypeComponent","value","metadata","_Type","Description","scopeOption_r1","name","MetadataSaveDialogComponent_Conditional_11_For_5_Template","ctx_r1","scopeOptions","length","dropdownInsertValue","contentType_r3","NameId","Label","MetadataSaveDialogComponent_Conditional_15_For_2_Template","tmp_1_0","contentTypes","MetadataSaveDialogComponent","#contentTypesService","guidedContentType","advancedMode","transient","ContentTypesService","scope","signal","eavConstants","scopes","default","getScopesSig","undefined","computed","retrieveContentTypesSig","ngOnInit","buildForm","toggleGuidedContentType","toggleAdvancedMode","event","checked","formValues","form","getRawValue","UntypedFormGroup","addControl","UntypedFormControl","Validators","required","controls","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","patchValue","prompt","some","option","set","MetadataSaveDialogComponent_Conditional_11_Template","MetadataSaveDialogComponent_Conditional_15_Template","MetadataSaveDialogComponent_Conditional_16_Template","MetadataSaveDialogComponent_Conditional_24_Template","$event","_c0","touched","errors","valid","FormsModule","ReactiveFormsModule","MatFormFieldModule","i4","MatSelectModule","i5","i6","MatOptionModule","MatInputModule","i7","i8","NgClass","i9","MatSlideToggleModule","i10","FieldHintComponent","ClickStopPropagationDirective","itemFor","KeyNumber","KeyGuid","KeyString","Title","MetadataComponent_Conditional_10_Conditional_5_Template","MetadataComponent_Conditional_10_Conditional_6_Template","MetadataComponent_Conditional_10_Conditional_7_Template","MetadataComponent_Conditional_10_Conditional_8_Template","Target","TargetType","_r2","createMetadata","recommendation_r5","Icon","Enabled","_r4","$implicit","MetadataComponent_Conditional_16_For_10_Conditional_1_Template","MetadataComponent_Conditional_16_For_10_Conditional_2_Template","_r3","openChange","MetadataComponent_Conditional_16_For_10_Template","fabOpen","recommendations","MetadataComponent","#entitiesSvc","#metadataSvc","#contentItemSvc","#dialogRoutes","snackBar","matDialog","viewContainerRef","changeDetectorRef","log","classLog","EntityEditService","MetadataService","DialogRoutingService","gridOptions","#buildGridOptions","#params","convert","getParams","p","targetType","parseInt","keyType","key","#itemsFromHttp","item","find","i","Guid","For","metadataSet","Items","Recommendations","filter","r","Id","Count","title","decodeURIComponent","getParam","#fetchMetadata","doOnDialogClosed","open","recommendation","CreateEmpty","Name","create","calculateItemFor","error","duration","next","createMetadataForm","openFeatureDialog","MissingFeature","autoFocus","width","afterClosed","items","formUrl","convertFormToUrl","navRelative","markForCheck","x","EditPrep","constructMetadataInfo","newMetadataFromInfo","logGetMetadata","rxTap","getMetadata","take","forEach","startsWith","replace","window","atob","#editMetadata","editId","#deleteMetadata","confirmed","delete","DeleteWarning","isConfirmed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","TextWide","field","onCellClicked","headerName","valueGetter","cellRenderer","ActionsPinnedRight1","MetadataComponent_Conditional_9_Template","MetadataComponent_Conditional_10_Template","MetadataComponent_Conditional_15_Template","MetadataComponent_Conditional_16_Template","RouterOutlet","SxcGridModule","MatDialogActions","EcoFabSpeedDialComponent","EcoFabSpeedDialTriggerComponent","EcoFabSpeedDialActionsComponent","MatBadgeModule","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","input","isShort","toggleIsShort","inputs","ngContentSelectors","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgTemplateOutlet","a","onClick","stopPropagation","ServiceBase","subscriptions","Subscription","ngOnDestroy","destroy","unsubscribe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/content-items.service.ts","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.html","./projects/eav-ui/src/app/metadata/confirm-delete-dialog/confirm-delete-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.ts","./projects/eav-ui/src/app/metadata/metadata-actions/metadata-actions.component.html","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.ts","./projects/eav-ui/src/app/metadata/metadata-content-type/metadata-content-type.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.html","./projects/eav-ui/src/app/metadata/metadata-save-dialog/metadata-save-dialog.component.ts","./projects/eav-ui/src/app/metadata/metadata.component.html","./projects/eav-ui/src/app/metadata/metadata.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/constants/dropdown-insert-value.constant.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { Injectable, Signal } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { webApiFieldsAll } from '../../shared/fields/content-types-fields.service';\r\nimport { Field } from '../../shared/fields/field.model';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { webApiEntityList, webApiEntityRoot } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\n@Injectable()\r\nexport class ContentItemsService extends HttpServiceBase {\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  getAllSig(contentTypeStaticName: string, initial: undefined): Signal<ContentItem[]> {\r\n    return this.getSignal<ContentItem[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType: contentTypeStaticName }\r\n    }, initial);\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsAll, {\r\n      params: { appId: this.appId, staticName: contentTypeStaticName }\r\n    });\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Delete {{ dialogData.entityTitle }} ({{ dialogData.entityId }})?</mat-card-title>\r\n    @if (dialogData.message) {\r\n      <mat-card-subtitle [innerHtml]=\"dialogData.message | safeHtml\"></mat-card-subtitle>\r\n    }\r\n  </mat-card-header>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog(true)\">Delete</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, HostBinding, Inject } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete-dialog',\r\n  templateUrl: './confirm-delete-dialog.component.html',\r\n  styleUrls: ['./confirm-delete-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class ConfirmDeleteDialogComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmDeleteDialogData,\r\n    private dialog: MatDialogRef<ConfirmDeleteDialogComponent>,\r\n  ) { }\r\n\r\n  closeDialog(confirm?: boolean) {\r\n    this.dialog.close(confirm);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { MetadataActionsParams } from './metadata-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-metadata-actions',\r\n  templateUrl: './metadata-actions.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class MetadataActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & MetadataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & MetadataActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteMetadata(): void {\r\n    const metadata: MetadataItem = this.params.data;\r\n    this.params.onDelete(metadata);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deleteMetadata()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MetadataItem } from '../models/metadata.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-metadata-content-type',\r\n  templateUrl: './metadata-content-type.component.html',\r\n  styleUrls: ['./metadata-content-type.component.scss'],\r\n  standalone: true,\r\n  imports: [TippyDirective,],\r\n})\r\nexport class MetadataContentTypeComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  metadata: MetadataItem;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.metadata = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\" [tippy]=\"metadata._Type.Description\">\r\n  {{ value }}\r\n</div>\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Create Metadata</mat-card-title>\r\n    <mat-card-subtitle>\r\n      This is a special operation to add an item which is metadata for another item,\r\n      see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"form\">\r\n      <!-- Scope -->\r\n      @if (advancedMode && guidedContentType) {\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions().length ? 'No items found' : ''\">\r\n          @for (scopeOption of scopeOptions(); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n      </app-field-hint>\r\n      }\r\n      <!-- Content Type of metadata item -->\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Content Type</mat-label>\r\n        @if (guidedContentType) {\r\n        <mat-select formControlName=\"contentType\" required\r\n          [placeholder]=\"!contentTypes()()?.length ? 'No items found' : ''\">\r\n          @for (contentType of contentTypes()(); track contentType) {\r\n          <mat-option [value]=\"contentType.NameId\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!guidedContentType) {\r\n        <input matInput type=\"text\" formControlName=\"contentType\" required>\r\n        }\r\n        <div matTextSuffix>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': guidedContentType }\" tippy=\"Pick existing value\"\r\n            (click)=\"toggleGuidedContentType(true)\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-icon-button type=\"button\" [ngClass]=\"{ 'active': !guidedContentType }\" tippy=\"Manual entry\"\r\n            (click)=\"toggleGuidedContentType(false)\">\r\n            <mat-icon>text_fields</mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-form-field>\r\n      @if (form.controls.contentType.touched && form.controls.contentType.errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"eav-card-actions\">\r\n    <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n      {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n    </mat-slide-toggle>\r\n    <div>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" class=\"eav-card-action-button\" [disabled]=\"!form.valid\"\r\n        (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, computed, HostBinding, OnInit, signal, WritableSignal } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { MetadataSaveFormValues } from './metadata-save-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-metadata-save-dialog',\r\n  templateUrl: './metadata-save-dialog.component.html',\r\n  styleUrls: ['./metadata-save-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ]\r\n})\r\nexport class MetadataSaveDialogComponent implements OnInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  guidedContentType = true;\r\n  advancedMode = false;\r\n\r\n  #contentTypesService = transient(ContentTypesService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataSaveDialogComponent>,\r\n  ) { }\r\n\r\n  scope = signal(eavConstants.scopes.default.value);\r\n  scopeOptions = this.#contentTypesService.getScopesSig(undefined) as WritableSignal<ScopeOption[]>;\r\n\r\n  contentTypes = computed(() => {\r\n    const scope = this.scope();\r\n    return this.#contentTypesService.retrieveContentTypesSig(scope, undefined);\r\n  });\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  closeDialog(contentType?: string): void {\r\n    this.dialog.close(contentType);\r\n  }\r\n\r\n  toggleGuidedContentType(guidedContentType: boolean): void {\r\n    this.guidedContentType = guidedContentType;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataSaveFormValues = this.form.getRawValue();\r\n    this.closeDialog(formValues.contentType);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('contentType', new UntypedFormControl(null, [Validators.required]));\r\n    this.form.addControl('scope', new UntypedFormControl(eavConstants.scopes.default.value));\r\n\r\n    this.form.controls.scope.valueChanges.pipe(\r\n      startWith(this.form.controls.scope.value),\r\n      distinctUntilChanged(),\r\n    ).subscribe((newScope: string) => {\r\n      // reset content types when scope changes\r\n      if (this.form.controls.contentType.value != null) {\r\n        this.form.controls.contentType.patchValue(null);\r\n      }\r\n\r\n      // add new scope on manual entry\r\n      if (newScope === dropdownInsertValue) {\r\n        newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n        if (!this.scopeOptions().some(option => option.value === newScope)) {\r\n          const newScopeOption: ScopeOption = {\r\n            name: newScope,\r\n            value: newScope,\r\n          };\r\n          this.scopeOptions.set([newScopeOption, ...this.scopeOptions()]);\r\n        }\r\n        this.form.controls.scope.patchValue(newScope);\r\n      } else {\r\n        this.scope.set(newScope);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ title || 'Metadata' }}\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <p>\r\n      @if (!itemFor()) {\r\n      This item is not metadata for anything else.\r\n      }\r\n      @else {\r\n      This item is metadata for:\r\n      <br>Target: {{ itemFor().Target }}\r\n      <br>TargetType: {{ itemFor().TargetType }}\r\n      @if (itemFor().KeyNumber) {\r\n      <br>Key Number: {{ itemFor().KeyNumber }}\r\n      }\r\n      @if (itemFor().KeyGuid) {\r\n      <br>Key Guid: {{ itemFor().KeyGuid }}\r\n      }\r\n      @if (itemFor().KeyString) {\r\n      <br>Key String: {{ itemFor().KeyString }}\r\n      }\r\n      @if (itemFor().Title) {\r\n      <br>Title: {{ itemFor().Title }}\r\n      }\r\n      }\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"metadataSet().Items\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    @if (recommendations().length === 0) {\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new metadata for this item\"\r\n      (click)=\"createMetadata()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    }\r\n    @if (recommendations().length > 0) {\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\"\r\n      (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab>\r\n          <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Other Content Type\"\r\n          (click)=\"createMetadata()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        @for (recommendation of recommendations(); track recommendation) {\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" [attr.label]=\"recommendation.Title\"\r\n          (click)=\"createMetadata(recommendation)\">\r\n          @if (recommendation.Icon) {\r\n          <div style=\"color: white; fill: white;\" [innerHTML]=\"recommendation.Icon | safeHtml\"\r\n            [matBadgeHidden]=\"recommendation.Enabled\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n            matBadgePosition=\"below after\" aria-hidden=\"false\"></div>\r\n          } @else {\r\n          <mat-icon>add</mat-icon>\r\n          }\r\n        </button>\r\n        }\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n    }\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { map, take } from 'rxjs';\r\nimport { convert, Of, transient } from '../../../../core';\r\nimport { ContentItemsService } from '../content-items/services/content-items.service';\r\nimport { EavForInAdminUi } from '../edit/shared/models/eav';\r\nimport { openFeatureDialog } from '../features/shared/base-feature.component';\r\nimport { MetadataService } from '../permissions';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { MetadataKeyTypes } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../shared/logging';\r\nimport { EditForm, EditPrep, ItemAddIdentifier } from '../shared/models/edit-form.model';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { DialogRoutingService } from '../shared/routing/dialog-routing.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog/confirm-delete-dialog.component';\r\nimport { ConfirmDeleteDialogData } from './confirm-delete-dialog/confirm-delete-dialog.models';\r\nimport { MetadataActionsComponent } from './metadata-actions/metadata-actions.component';\r\nimport { MetadataActionsParams } from './metadata-actions/metadata-actions.models';\r\nimport { MetadataContentTypeComponent } from './metadata-content-type/metadata-content-type.component';\r\nimport { MetadataSaveDialogComponent } from './metadata-save-dialog/metadata-save-dialog.component';\r\nimport { MetadataDto, MetadataItem, MetadataRecommendation } from './models/metadata.model';\r\n\r\n@Component({\r\n  selector: 'app-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    EcoFabSpeedDialComponent,\r\n    NgClass,\r\n    EcoFabSpeedDialTriggerComponent,\r\n    EcoFabSpeedDialActionsComponent,\r\n    MatBadgeModule,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class MetadataComponent implements OnInit {\r\n\r\n  log = classLog({ MetadataComponent });\r\n\r\n  #entitiesSvc = transient(EntityEditService);\r\n  #metadataSvc = transient(MetadataService);\r\n  #contentItemSvc = transient(ContentItemsService);\r\n  #dialogRoutes = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<MetadataComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  fabOpen = signal(false);\r\n\r\n  #params = convert(this.#dialogRoutes.getParams(['targetType', 'keyType', 'key', 'title', 'contentTypeStaticName']), p => ({\r\n    targetType: parseInt(p.targetType, 10),\r\n    keyType: p.keyType as Of<typeof MetadataKeyTypes>,\r\n    key: p.key,\r\n    contentTypeStaticName: p.contentTypeStaticName,\r\n  }));\r\n\r\n  // 2024-11-05 2dm: broken, must inform @2dg\r\n  // itemFor = computed<EavForInAdminUi | undefined>(() => {\r\n  //   const items = this.#contentItemSvc.getAllSig(this.#params.contentTypeStaticName, undefined)\r\n  //   const item = items()?.find(i => i.Guid === this.#params.key);\r\n  //   if (item?.For)\r\n  //     return item.For;\r\n  //   return undefined;\r\n  // });\r\n\r\n  // Signal to get itemFor - must be _outside_ the computed property, otherwise it regenerates infinitely\r\n  #itemsFromHttp = this.#contentItemSvc.getAllSig(this.#params.contentTypeStaticName, undefined);\r\n\r\n  itemFor = computed<EavForInAdminUi | undefined>(() => {\r\n    const item = this.#itemsFromHttp()?.find(i => i.Guid === this.#params.key);\r\n    return (item?.For)\r\n      ? item.For\r\n      : undefined;\r\n  });\r\n\r\n  metadataSet = signal<MetadataDto>({ Items: [], Recommendations: [] } as MetadataDto);\r\n\r\n  recommendations = computed(() => {\r\n    const metadata = this.metadataSet();\r\n    return metadata.Recommendations.filter(r =>\r\n      metadata.Items.filter(i => i._Type.Id === r.Id).length < r.Count\r\n    );\r\n  });\r\n\r\n  protected title = decodeURIComponent(this.#dialogRoutes.getParam('title') ?? '');\r\n\r\n  ngOnInit() {\r\n    this.#fetchMetadata();\r\n    this.#dialogRoutes.doOnDialogClosed(() => this.#fetchMetadata());\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  createMetadata(recommendation?: MetadataRecommendation) {\r\n    if (recommendation) {\r\n      // If the feature is not enabled, open the info dialog instead of metadata\r\n      if (!recommendation.Enabled) {\r\n        openFeatureDialog(this.matDialog, recommendation.MissingFeature, this.viewContainerRef, this.changeDetectorRef);\r\n        return;\r\n      }\r\n      // Feature is enabled, check if it's an empty metadata\r\n      if (recommendation.CreateEmpty) {\r\n        this.snackBar.open(`Creating ${recommendation.Name}...`);\r\n        this.#entitiesSvc.create(recommendation.Id, { For: this.calculateItemFor('dummy').For }).subscribe({\r\n          error: () => {\r\n            this.snackBar.open(`Creating ${recommendation.Name} failed. Please check console for more info`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n          next: () => {\r\n            this.snackBar.open(`Created ${recommendation.Name}`, undefined, { duration: 3000 });\r\n            this.#fetchMetadata();\r\n          },\r\n        });\r\n      } else {\r\n        // Default case - open new-metadata dialog\r\n        this.createMetadataForm(recommendation.Id);\r\n      }\r\n      return;\r\n    }\r\n    const metadataDialogRef = this.matDialog.open(MetadataSaveDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((contentType?: string) => {\r\n      if (contentType == null) return;\r\n      this.createMetadataForm(contentType);\r\n    });\r\n  }\r\n\r\n  private createMetadataForm(contentType: string) {\r\n    const form: EditForm = {\r\n      items: [this.calculateItemFor(contentType)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private calculateItemFor(contentType: string): ItemAddIdentifier {\r\n    const x = EditPrep.constructMetadataInfo(this.#params.targetType, this.#params.keyType, this.#params.key);\r\n    return EditPrep.newMetadataFromInfo(contentType, x);\r\n  }\r\n\r\n  #fetchMetadata() {\r\n    const logGetMetadata = this.log.rxTap('getMetadata');\r\n    this.#metadataSvc.getMetadata(this.#params.targetType, this.#params.keyType, this.#params.key)\r\n      .pipe(\r\n        logGetMetadata.pipe(),\r\n        take(1),\r\n        map(metadata => {\r\n          metadata.Recommendations.forEach(r => {\r\n            if (r.Icon?.startsWith('base64:')) {\r\n              r.Icon = r.Icon.replace('base64:', '');\r\n              r.Icon = window.atob(r.Icon);\r\n              // used for coloring black icons to white\r\n              r.Icon = r.Icon.replace('fill=\"#000000\"', 'fill=\"#ffffff\"');\r\n            }\r\n          });\r\n          return metadata;\r\n        }),\r\n        logGetMetadata.map(),\r\n      )\r\n      // 2024-05-30 2dm - this standard shorthand seems to fail\r\n      // for reasons unknown to me. I've replaced it with the longhand\r\n      // The problem occurs when the metadataSet$ is updated after the initial load.\r\n      // .subscribe(this.metadataSet$);\r\n      .subscribe(data => {\r\n        this.metadataSet.set(data);\r\n      }\r\n      );\r\n  }\r\n\r\n  #editMetadata(metadata: MetadataItem) {\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(metadata.Id)],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.#dialogRoutes.navRelative([`edit/${formUrl}`]);\r\n  }\r\n\r\n  #deleteMetadata(metadata: MetadataItem, confirmed = false) {\r\n    if (!confirmed) {\r\n      const data: ConfirmDeleteDialogData = {\r\n        entityId: metadata.Id,\r\n        entityTitle: metadata.Title,\r\n        message: this.metadataSet().Recommendations.find(r => r.Id === metadata._Type.Id)?.DeleteWarning,\r\n      };\r\n      const confirmationDialogRef = this.matDialog.open(ConfirmDeleteDialogComponent, {\r\n        autoFocus: false,\r\n        data,\r\n        viewContainerRef: this.viewContainerRef,\r\n        width: '400px',\r\n      });\r\n      confirmationDialogRef.afterClosed().subscribe((isConfirmed: boolean) => {\r\n        if (isConfirmed)\r\n          this.#deleteMetadata(metadata, true);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.#entitiesSvc.delete(metadata._Type.Id, metadata.Id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.#fetchMetadata();\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Delete failed. Please check console for more information', null, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<MetadataItem>()\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Title',\r\n          onCellClicked: (p: { data: MetadataItem }) => this.#editMetadata(p.data),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Content Type',\r\n          field: 'ContentType',\r\n          valueGetter: (p: { data: MetadataItem }) => `${p.data._Type.Name}${p.data._Type.Title !== p.data._Type.Name ? ` (${p.data._Type.Title})` : ''}`,\r\n          cellRenderer: MetadataContentTypeComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: MetadataActionsComponent,\r\n          cellRendererParams: (() => ({\r\n            onDelete: (metadata) => this.#deleteMetadata(metadata),\r\n          } satisfies MetadataActionsParams))(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","export const dropdownInsertValue = 'DROPDOWN_INSERT_VALUE' as const;\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { classLog } from '../logging';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  log = classLog({ClickStopPropagationDirective});\r\n\r\n  // Log constructor to detect that it was really attached/created\r\n  constructor() {\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.log.a('onClick', { event });\r\n    event.stopPropagation();\r\n\r\n    // This should never be added here, as it's often on a link, and the default behavior (link open) should happen\r\n    // event.preventDefault();\r\n  }\r\n\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}