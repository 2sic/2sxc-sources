{"version":3,"file":"projects_eav-ui_src_app_content-import_content-import_component_ts.2b099f782bd104e2.js","mappings":"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","names":["AppDialogConfigService","constructor","http","context","dnnContext","globalConfigService","featuresService","this","dialogSettings$","loadFromService","getShared$","appId","getDialogSettings","pipe","shareReplay","refCount","get","$2sxc","apiUrl","webApiDialogRoot","params","toString","map","dialogSettings","Context","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","static","t","i0","i1","i2","i3","i4","i5","_angular_core__WEBPACK_IMPORTED_MODULE_5__","wxM","factory","ɵfac","ContentImportService","evaluateContent","formValues","from","toBase64","file","switchMap","fileBase64","requestData","AppId","DefaultLanguage","defaultLanguage","ContentType","contentType","ContentBase64","ResourcesReferences","resourcesReferences","ClearEntities","clearEntities","post","webApiEntityRoot","result","Success","Errors","Detail","importContent","core","_r10","_r8","click","$event","ctx_r11","fileChange","ctx_r12","ctx_r13","ctx_r14","closeDialog","ctx_r15","ctx_r3","name","ctx_r17","vm_r1","evaluationResult","DocumentElementsCount","LanguagesInDocumentCount","AttributeNamesInDocument","length","join","AmountOfEntitiesCreated","AmountOfEntitiesUpdated","AmountOfEntitiesDeleted","AttributeNamesNotImported","error_r21","ErrorDetail","LineNumber","LineDetail","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_3_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_4_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Conditional_5_Template","ctx_r20","errors","ErrorCode","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_For_5_Template","ctx_r18","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_0_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Conditional_1_Template","_r34","ctx_r33","back","ctx_r35","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Conditional_0_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Conditional_0_Conditional_1_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Conditional_0_Conditional_2_Template","importResult","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Conditional_0_Template","_r43","ctx_r42","ContentImportComponent_Conditional_0_Conditional_10_Case_0_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_1_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_2_Template","ContentImportComponent_Conditional_0_Conditional_10_Case_3_Template","ContentImportComponent_Conditional_0_Conditional_10_contFlowTmp","viewStateSelected","_r47","ctx_r46","filesDropped","ContentImportComponent_Conditional_0_Conditional_10_Template","ctx","Name","ctx_r0","ContentImportComponent","dialogData","dialogRef","route","contentImportService","appDialogConfigService","contentTypesService","hostClass","contentType$","BehaviorSubject","loading$","viewStates","waiting","default","evaluated","imported","viewStateSelected$","evaluationResult$","importResult$","viewModel$","combineLatest","loading","contentTypeStaticName","snapshot","paramMap","ngOnInit","next","retrieveContentType","forkJoin","subscribe","Primary","files","ngOnDestroy","complete","close","event","target","MAT_DIALOG_DATA","In1","selectors","hostVars","hostBindings","rf","ContentTypesService","decls","vars","consts","template","ContentImportComponent_Conditional_0_Template","ContentImportComponent_contFlowTmp","SharedComponentsModule","i6","i7","FormsModule","i8","MatButtonModule","i9","MatRadioModule","i10","MatDialogActions","AsyncPipe","styles","DragAndDropDirective","BaseSubsinkComponent","elementRef","zone","snackBar","super","markStyle","allowedFileTypes","EventEmitter","dropAreaClass","dragClass","timeouts","element","nativeElement","markStyleClass","classList","add","runOutsideAngular","subscription","fromEvent","preventDefault","stopPropagation","clearTimeouts","push","window","setTimeout","remove","onDrop","Array","dataTransfer","filterTypes","emit","timeout","clearTimeout","allowedTypes","split","type","toLocaleLowerCase","filtered","extIndex","lastIndexOf","ext","substring","includes","allowedTypesString","replace","open","duration","_angular_core__WEBPACK_IMPORTED_MODULE_1__","Sc5"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/content-import/services/content-import.service.ts","./projects/eav-ui/src/app/content-import/content-import.component.html","./projects/eav-ui/src/app/content-import/content-import.component.ts","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getShared$(appId?: number) {\r\n    appId ??= this.context.appId;\r\n    if (!this.dialogSettings$[appId])\r\n      this.dialogSettings$[appId] = this.getDialogSettings(appId).pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions are killed\r\n  }\r\n\r\n  getDialogSettings(appId?: number) {\r\n    return this.http.get<DialogSettings>(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dialogSettings => {\r\n        dialogSettings.Context.Language.List = dialogSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dialogSettings;\r\n      }),\r\n      tap(dialogSettings => {\r\n        this.globalConfigService.allowDebug(dialogSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentImport, EvaluateContentResult, ImportContentRequest, ImportContentResult } from '../models/content-import.model';\r\n\r\n@Injectable()\r\nexport class ContentImportService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  evaluateContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.context.appId.toString(),\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return this.http.post<EvaluateContentResult>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'XmlPreview'), requestData).pipe(\r\n          map(result => {\r\n            if (!result.Success) {\r\n              result.Errors = result.Detail as any;\r\n              delete result.Detail;\r\n            }\r\n            return result;\r\n          }),\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  importContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.context.appId.toString(),\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return this.http.post<ImportContentResult>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'XmlUpload'), requestData);\r\n      })\r\n    );\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\" appDragAndDrop\r\n    [allowedFileTypes]=\"'xml'\" (filesDropped)=\"filesDropped($event)\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ vm.contentType?.Name }} Import Data</div>\r\n    </div>\r\n    <div class=\"eav-dialog-description\">\r\n      <p>\r\n        This will import content-items into 2sxc. It requires that you already defined the content-type before you try\r\n        importing, and that you created the import-file using the template provided by the Export. Please visit\r\n        <a href=\"https://2sxc.org/help\" target=\"_blank\">https://2sxc.org/help</a> for more instructions.\r\n      </p>\r\n    </div>\r\n    @if (formValues != null) {\r\n      @switch (vm.viewStateSelected) {\r\n        <!-- FORM -->\r\n        @case (1) {\r\n          <form #ngForm=\"ngForm\">\r\n            <div class=\"eav-dialog-content\">\r\n              <div>\r\n                <button mat-raised-button tippy=\"Open file browser\" (click)=\"fileInput.click()\">\r\n                  <span>{{ formValues.file ? formValues.file.name : 'Select or drop file' }}</span>\r\n                </button>\r\n                <input #fileInput type=\"file\" (change)=\"fileChange($event)\" class=\"hide\" />\r\n              </div>\r\n              <div>\r\n                <p class=\"eav-radio-group-label\">References to pages / files</p>\r\n                <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.resourcesReferences\" name=\"ResourcesReferences\">\r\n                  <mat-radio-button value=\"Keep\">\r\n                    Import links as written in the file (for example /Portals/...)\r\n                  </mat-radio-button>\r\n                  <mat-radio-button value=\"Resolve\">\r\n                    Try to resolve paths to references\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n              </div>\r\n              <div>\r\n                <p class=\"eav-radio-group-label\">Clear all other entities</p>\r\n                <mat-radio-group class=\"eav-radio-group\" [(ngModel)]=\"formValues.clearEntities\" name=\"ClearEntities\">\r\n                  <mat-radio-button value=\"None\">\r\n                    Keep all entities not found in import\r\n                  </mat-radio-button>\r\n                  <mat-radio-button value=\"All\">\r\n                    Remove all entities not found in import\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n              </div>\r\n              <p class=\"eav-hint\">Remember to backup your DNN first!</p>\r\n            </div>\r\n            <mat-dialog-actions align=\"end\">\r\n              <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n              <button mat-raised-button color=\"accent\" [disabled]=\"!formValues.file || !formValues.file.name\"\r\n                (click)=\"evaluateContent()\">\r\n                Preview Import\r\n              </button>\r\n            </mat-dialog-actions>\r\n          </form>\r\n        }\r\n        <!-- END FORM -->\r\n        <!-- WAITING -->\r\n        @case (0) {\r\n          <div class=\"eav-dialog-content\">\r\n            <p>Please wait while processing...</p>\r\n          </div>\r\n        }\r\n        <!-- END WAITING -->\r\n        <!-- EVALUATION RESULT -->\r\n        @case (2) {\r\n          @if (vm.evaluationResult) {\r\n            <!-- DETAILS / STATISTICS -->\r\n            @if (vm.evaluationResult.Success) {\r\n              <div class=\"eav-dialog-content\">\r\n                <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n                <p class=\"eav-evaluation__title\">File contains:</p>\r\n                <ul class=\"eav-evaluation__content\">\r\n                  <li>{{ vm.evaluationResult.Detail.DocumentElementsCount }} content-items (records/entities)</li>\r\n                  <li>{{ vm.evaluationResult.Detail.LanguagesInDocumentCount }} languages</li>\r\n                  <li>{{ vm.evaluationResult.Detail.AttributeNamesInDocument.length }} columns:\r\n                  {{ vm.evaluationResult.Detail.AttributeNamesInDocument.join(', ') }}</li>\r\n                </ul>\r\n                <p class=\"eav-evaluation__title\">If you press Import, it will:</p>\r\n                <ul class=\"eav-evaluation__content\">\r\n                  <li>Create {{ vm.evaluationResult.Detail.AmountOfEntitiesCreated }} content-items</li>\r\n                  <li>Update {{ vm.evaluationResult.Detail.AmountOfEntitiesUpdated }} content-items</li>\r\n                  <li>Delete {{ vm.evaluationResult.Detail.AmountOfEntitiesDeleted }} content-items</li>\r\n                  <li>Ignore {{ vm.evaluationResult.Detail.AttributeNamesNotImported.length }} columns:\r\n                  {{ vm.evaluationResult.Detail.AttributeNamesNotImported.join(', ') }}</li>\r\n                </ul>\r\n                <p class=\"eav-hint\">Note: The import validates much data and may take several minutes.</p>\r\n              </div>\r\n            }\r\n            <!-- END DETAILS / STATISTICS -->\r\n            <!-- ERRORS -->\r\n            @if (!vm.evaluationResult.Success) {\r\n              <div class=\"eav-dialog-content\">\r\n                <p class=\"eav-evaluation__title\">Try to import file '{{ formValues.file.name }}'</p>\r\n                <ul class=\"eav-evaluation__content\">\r\n                  @for (error of vm.evaluationResult.Errors; track error) {\r\n                    <li>\r\n                      <div>{{ errors[error.ErrorCode] }}</div>\r\n                      @if (error.ErrorDetail) {\r\n                        <div><i>Details: {{ error.ErrorDetail }}</i></div>\r\n                      }\r\n                      @if (error.LineNumber) {\r\n                        <div><i>Line-no: {{ error.LineNumber }}</i></div>\r\n                      }\r\n                      @if (error.LineDetail) {\r\n                        <div><i>Line-details: {{ error.LineDetail }}</i></div>\r\n                      }\r\n                    </li>\r\n                  }\r\n                </ul>\r\n              </div>\r\n            }\r\n            <!-- END ERRORS -->\r\n            <mat-dialog-actions align=\"end\">\r\n              <button mat-raised-button (click)=\"back()\">Back</button>\r\n              <button mat-raised-button color=\"accent\" [disabled]=\"!vm.evaluationResult.Success\" (click)=\"importContent()\">\r\n                Import\r\n              </button>\r\n            </mat-dialog-actions>\r\n          }\r\n        }\r\n        <!-- END EVALUATION RESULT -->\r\n        <!-- IMPORT RESULT -->\r\n        @case (3) {\r\n          @if (vm.importResult) {\r\n            <div class=\"eav-dialog-content\">\r\n              @if (vm.importResult.Success) {\r\n                <p>Import done.</p>\r\n              }\r\n              @if (!vm.importResult.Success) {\r\n                <p>Import failed.</p>\r\n              }\r\n            </div>\r\n          }\r\n          <mat-dialog-actions align=\"end\">\r\n            <button mat-raised-button color=\"accent\" (click)=\"closeDialog()\">Close</button>\r\n          </mat-dialog-actions>\r\n        }\r\n        <!-- END IMPORT RESULT -->\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, forkJoin, map } from 'rxjs';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentImportDialogData } from './content-import-dialog.config';\r\nimport { ContentImport, EvaluateContentResult, ImportContentResult } from './models/content-import.model';\r\nimport { ContentImportService } from './services/content-import.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\n\r\n@Component({\r\n    selector: 'app-content-import',\r\n    templateUrl: './content-import.component.html',\r\n    styleUrls: ['./content-import.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        SharedComponentsModule,\r\n        FormsModule,\r\n        MatButtonModule,\r\n        MatRadioModule,\r\n        MatDialogActions,\r\n        AsyncPipe,\r\n    ],\r\n    providers: [\r\n        ContentImportService,\r\n        ContentTypesService,\r\n        AppDialogConfigService,\r\n    ],\r\n})\r\nexport class ContentImportComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  formValues: ContentImport;\r\n  private contentType$ = new BehaviorSubject<ContentType>(null);\r\n  private loading$ = new BehaviorSubject(false);\r\n  private viewStates = {\r\n    waiting: 0,\r\n    default: 1,\r\n    evaluated: 2,\r\n    imported: 3,\r\n  };\r\n  private viewStateSelected$ = new BehaviorSubject<number>(this.viewStates.default);\r\n  private evaluationResult$ = new BehaviorSubject<EvaluateContentResult>(null);\r\n  private importResult$ = new BehaviorSubject<ImportContentResult>(null);\r\n  viewModel$ = combineLatest([\r\n    this.contentType$, this.loading$, this.viewStateSelected$, this.evaluationResult$, this.importResult$,\r\n  ]).pipe(\r\n    map(([contentType, loading, viewStateSelected, evaluationResult, importResult]) =>\r\n      ({ contentType, loading, viewStateSelected, evaluationResult, importResult })),\r\n  );\r\n  errors: Record<number, string> = {\r\n    0: 'Unknown error occured.',\r\n    1: 'Selected content-type does not exist.',\r\n    2: 'Document is not a valid XML file.',\r\n    3: 'Selected content-type does not match the content-type in the XML file.',\r\n    4: 'The language is not supported.',\r\n    5: 'The document does not specify all languages for all entities.',\r\n    6: 'Language reference cannot be parsed, the language is not supported.',\r\n    7: 'Language reference cannot be parsed, the read-write protection is not supported.',\r\n    8: 'Value cannot be read, because of it has an invalid format.'\r\n  };\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: ContentImportDialogData,\r\n    private dialogRef: MatDialogRef<ContentImportComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentImportService: ContentImportService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private contentTypesService: ContentTypesService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loading$.next(true);\r\n    const contentType$ = this.contentTypesService.retrieveContentType(this.contentTypeStaticName);\r\n    const dialogSettings$ = this.appDialogConfigService.getShared$(); // .getDialogSettings();\r\n    forkJoin([contentType$, dialogSettings$]).subscribe(([contentType, dialogSettings]) => {\r\n      this.contentType$.next(contentType);\r\n      this.formValues = {\r\n        defaultLanguage: dialogSettings.Context.Language.Primary,\r\n        contentType: this.contentTypeStaticName,\r\n        file: this.dialogData.files != null ? this.dialogData.files[0] : null,\r\n        resourcesReferences: 'Keep',\r\n        clearEntities: 'None',\r\n      };\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.loading$.complete();\r\n    this.viewStateSelected$.complete();\r\n    this.evaluationResult$.complete();\r\n    this.importResult$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  evaluateContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.evaluateContent(this.formValues).subscribe(result => {\r\n      this.evaluationResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.evaluated);\r\n    });\r\n  }\r\n\r\n  importContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.importContent(this.formValues).subscribe(result => {\r\n      this.importResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.imported);\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.viewStateSelected$.next(this.viewStates.default);\r\n    this.evaluationResult$.next(null);\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    this.formValues.file = (event.target as HTMLInputElement).files[0];\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    this.formValues.file = importFile;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../components/base-subsink-component/base-subsink.component';\r\n\r\n@Directive({ selector: '[appDragAndDrop]' })\r\nexport class DragAndDropDirective extends BaseSubsinkComponent implements OnInit, OnDestroy {\r\n  @Input() markStyle: 'outline' | 'fill' | 'shadow' = 'outline';\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  @Input() allowedFileTypes = '';\r\n  @Output() private filesDropped = new EventEmitter<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass: string;\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass = `eav-droparea-${this.markStyle}`;\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass);\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscription.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass, this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes);\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes.replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}