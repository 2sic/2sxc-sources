{"version":3,"file":"projects_eav-ui_src_app_permissions_permissions_module_ts.1c5872887adfcc34.js","mappings":"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","names":["EntitiesService","constructor","http","context","dnnContext","this","create","contentType","entity","post","params","appId","zoneId","update","entityId","delete","type","id","tryForce","$2sxc","apiUrl","webApiEntityRoot","toString","force","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","wxM","factory","Éµfac","permissionsDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","PermissionsComponent","__webpack_require__","e","then","bind","routes","path","component","DialogEntryComponent","data","dialog","children","matcher","edit","loadChildren","Promise","all","m","EditModule","refreshEdit","RefreshEditModule","PermissionsRoutingModule","_angular_core__WEBPACK_IMPORTED_MODULE_3__","a4G","s3X","RouterModule","forChild","PermissionsModule","_angular_core__WEBPACK_IMPORTED_MODULE_6__","Context","PermissionsService","MetadataService","imports","CommonModule","SharedComponentsModule","MatDialogModule","MatButtonModule","MatIconModule","SxcGridModule","MatRippleModule","MatSnackBarModule","getMetadata","targetType","keyType","key","contentTypeName","get","_angular_core__WEBPACK_IMPORTED_MODULE_1__","metadataService","entitiesService","getAll","eavConstants","contentTypes","permissions","pipe","map","metadata","Items","_angular_core__WEBPACK_IMPORTED_MODULE_4__"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/content-items/services/entities.service.ts","./projects/eav-ui/src/app/permissions/permissions-dialog.config.ts","./projects/eav-ui/src/app/permissions/permissions-routing.module.ts","./projects/eav-ui/src/app/permissions/permissions.module.ts","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { webApiEntityRoot } from '../../edit/shared/services';\r\nimport { ItemInListIdentifier } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\nexport interface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: permissionsDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PermissionsRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsRoutingModule } from './permissions-routing.module';\r\nimport { PermissionsComponent } from './permissions.component';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PermissionsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    SxcGridModule,\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ]\r\n})\r\nexport class PermissionsModule { }\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.http.get<MetadataDto>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n  constructor(private metadataService: MetadataService, private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}