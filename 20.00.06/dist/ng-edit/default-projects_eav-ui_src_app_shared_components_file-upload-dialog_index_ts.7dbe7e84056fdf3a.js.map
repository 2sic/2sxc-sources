{"version":3,"file":"default-projects_eav-ui_src_app_shared_components_file-upload-dialog_index_ts.7dbe7e84056fdf3a.js","mappings":"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","names":["BaseDirective","constructor","this","subscriptions","Subscription","ngOnDestroy","unsubscribe","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","InstallerService","http","installPackages","packages","step","reduce","t","c","pipe","switchMap","url","post","of","i0","i1","root_effect_scheduler_DCy1y1b8","jDH","factory","ɵfac","ImportModeValues","importOriginal","importAsTemplate","FileUploadMessageTypes","Warning","Success","Error","UploadTypes","App","AppPart","ContentType","ContentItem","Query","View","ImportParts","_r2","ctx_r2","closeDialog","dialogData","title","FileUploadDialogComponent_Conditional_7_Conditional_7_Template","FileUploadDialogComponent_Conditional_7_Conditional_8_Template","importForm","importModeValues","tmp_5_0","get","value","file_r5","name","_r6","toggleShowAppCatalog","uploading","invalid","_r7","upload","files","length","result","_r8","_r9","cleanUpload","FileUploadDialogComponent_Conditional_17_Conditional_1_Conditional_2_Template","FileUploadDialogComponent_Conditional_17_Conditional_1_Conditional_3_Template","uploadType","_r10","_r11","FileUploadDialogComponent_Conditional_17_Conditional_2_Conditional_2_Template","FileUploadDialogComponent_Conditional_17_Conditional_2_Conditional_3_Template","_c2","message_r12","MessageType","Text","FileUploadDialogComponent_Conditional_17_Conditional_1_Template","FileUploadDialogComponent_Conditional_17_Conditional_2_Template","FileUploadDialogComponent_Conditional_17_For_4_Template","Messages","remoteInstallerUrl","currentPackage","displayName","FileUploadDialogComponent_Conditional_18_Conditional_0_Template","FileUploadDialogComponent_Conditional_18_Conditional_1_Template","ready","showProgress","FileUploadDialogComponent","BaseComponent","#installerService","#installSettingsService","#appsListService","#fb","dialog","snackBar","sanitizer","context","changeDetectorRef","super","hostClass","input","signal","showAppCatalog","undefined","urlChangeImportMode","transient","AppInstallSettingsService","AppsListService","inject","FormBuilder","group","importMode","Validators","required","#alreadyProcessing","#messages$","fromEvent","window","filter","evt","origin","map","JSON","parse","data","e","console","error","Number","moduleId","add","settings$","subscribe","settings","remoteUrl","bypassSecurityTrustResourceUrl","#setupConditionalValidation","ngOnInit","valueChanges","mode","isTemplate","includes","filesDropped","loadGettingStarted","action","tap","winFrame","installerWindow","nativeElement","specsMsg","installedApps","rules","app","target","appGuid","guid","specsJson","stringify","contentWindow","postMessage","log","Object","values","msg","confirm","detectChanges","createTemplate","p","alert","top","location","reload","catchError","Message","message","refresh","close","set","nameControl","setValidators","updateValueAndValidity","#setFiles","filesChanged","event","Array","from","upload$","take","next","open","duration","multiple","slice","MAT_DIALOG_DATA","i2","i3","i4","debug_node_JnOYh9kg","VBU","selectors","viewQuery","rf","ctx","$event","_r1","FileUploadDialogComponent_Conditional_1_Template","FileUploadDialogComponent_Conditional_3_Template","FileUploadDialogComponent_Conditional_4_Template","FileUploadDialogComponent_Conditional_7_Template","fileInput_r4","click","FileUploadDialogComponent_Conditional_10_Template","FileUploadDialogComponent_For_12_Template","FileUploadDialogComponent_Conditional_15_Template","FileUploadDialogComponent_Conditional_16_Template","FileUploadDialogComponent_Conditional_17_Template","FileUploadDialogComponent_Conditional_18_Template","allowedFileTypes","_c1","description","valid","NgClass","MatDialogModule","MatProgressSpinnerModule","i5","SafeHtmlPipe","DragAndDropDirective","MatButtonModule","i6","MatIconModule","i7","MatRadioModule","i8","MatInputModule","i9","i10","ReactiveFormsModule","i11","styles","installSettingsSubject","Subject","asObservable","startWith","isContentApp","json","_angular_core__WEBPACK_IMPORTED_MODULE_3__","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","eventName","options","resultSelector","isFunction","mapOneOrManyArgs","remove","isEventTarget","addEventListener","removeEventListener","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args","elementRef","zone","markStyle","output","dropAreaClass","markStyleClass","dragClass","timeouts","element","classList","runOutsideAngular","preventDefault","stopPropagation","clearTimeouts","push","setTimeout","onDrop","dataTransfer","filterTypes","emit","timeout","clearTimeout","allowedTypes","split","type","toLocaleLowerCase","filtered","file","extIndex","lastIndexOf","ext","substring","allowedTypesString","replace","_angular_core__WEBPACK_IMPORTED_MODULE_4__","hostBindings","_c0","MatProgressSpinner_ng_template_0_Template","ctx_r0","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","InjectionToken","providedIn","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","MatProgressSpinner","_elementRef","ElementRef","_noopAnimations","color","_color","_defaultColor","_determinateCircle","defaults","_animationsDisabled","_forceAnimations","nodeName","toLowerCase","strokeWidth","_value","v","Math","max","min","_diameter","size","_strokeWidth","viewBox","PI","_strokeDashOffset","_t","first","hostAttrs","hostVars","inputs","numberAttribute","exportAs","decls","vars","consts","template","circle_r2","dependencies","NgTemplateOutlet","encapsulation","changeDetection","imports","MatCommonModule","webApiAppRootApp","HttpServiceBaseSignal","getAllLive","httpResource","apiUrl","params","zoneId","getInheritable","getPendingApps","create","inheritAppId","templateId","newName","encodedName","encodeURIComponent","installPendingApps","pendingApps","delete","appId","toString","flushCache","_this","_asyncToGenerator","getStatusPromise"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/directives/base.directive.ts","./projects/eav-ui/src/app/shared/services/installer.service.ts","./projects/eav-ui/src/app/shared/components/file-upload-dialog/file-upload-dialog.models.ts","./projects/eav-ui/src/app/shared/components/file-upload-dialog/file-upload-dialog.component.html","./projects/eav-ui/src/app/shared/components/file-upload-dialog/file-upload-dialog.component.ts","./projects/eav-ui/src/app/shared/services/getting-started.service.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts","./node_modules/@angular/material/fesm2022/progress-spinner.mjs","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts"],"sourcesContent":["import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseDirective implements OnDestroy {\r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { InstallPackage } from '../models/installer-models';\r\n\r\n// copied from 2sxc-ui app/installer\r\n@Injectable()\r\nexport class InstallerService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  installPackages(packages: InstallPackage[], step: (p: InstallPackage) => void): Observable<any> {\r\n    return packages.reduce(\r\n      (t: Observable<Response>, c) => t.pipe(\r\n        switchMap(() => {\r\n          if (!c.url) return of(true);\r\n          step(c);\r\n          return <Observable<any>>this.http.post(`sys/install/RemotePackage?packageUrl=${c.url}`, {});\r\n        })),\r\n      of(true));\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Of } from '../../../../../../core';\r\n\r\nexport interface FileUploadDialogData {\r\n  title?: string;\r\n  description?: string;\r\n  allowedFileTypes?: string;\r\n  files?: File[];\r\n  multiple?: boolean;\r\n  // upload$?(files: File[]): Observable<FileUploadResult>;\r\n  upload$?(files: File[], name?: string): Observable<FileUploadResult>;\r\n}\r\n\r\nexport enum ImportModeValues {\r\n  importOriginal = 'importOriginal',\r\n  importAsTemplate = 'importAsTemplate',\r\n}\r\n\r\n\r\nexport interface FileUploadResult {\r\n  Messages: FileUploadResultMessage[];\r\n  Success: boolean;\r\n}\r\n\r\nexport interface FileUploadResultMessage {\r\n  MessageType: Of<typeof FileUploadMessageTypes>;\r\n  Text: string;\r\n}\r\n\r\nexport const FileUploadMessageTypes = {\r\n  Warning: 0,\r\n  Success: 1,\r\n  Error: 2,\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\nexport const UploadTypes = {\r\n  App: 0,\r\n  AppPart: 1,\r\n  ContentType: 2,\r\n  ContentItem: 3,\r\n  Query: 4,\r\n  View: 5,\r\n  ImportParts: 6,\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","<div\r\n  class=\"eav-dialog\"\r\n  style=\"margin-bottom: 12px\"\r\n  appDragAndDrop\r\n  [allowedFileTypes]=\"dialogData.allowedFileTypes\"\r\n  (filesDropped)=\"filesDropped($event)\"\r\n>\r\n  @if (uploadType() != UploadTypes.ImportParts) {\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\" [innerHtml]=\"dialogData.title | safeHtml\"></div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  }\r\n\r\n  <div\r\n    [ngClass]=\"{\r\n      'outer-container-app': uploadType() === UploadTypes.ImportParts,\r\n      'eav-dialog-content': uploadType() !== UploadTypes.ImportParts,\r\n    }\"\r\n  >\r\n    @if (uploadType() == UploadTypes.ImportParts) {\r\n      <h3 [innerHtml]=\"dialogData.title | safeHtml\"></h3>\r\n    }\r\n\r\n    @if (uploading()) {\r\n      <mat-spinner mode=\"indeterminate\" diameter=\"20\"></mat-spinner>\r\n    }\r\n\r\n    <p [innerHtml]=\"dialogData.description | safeHtml\"></p>\r\n\r\n    @if (uploadType() == UploadTypes.App) {\r\n      <form [formGroup]=\"importForm\">\r\n        <mat-radio-group formControlName=\"importMode\" aria-label=\"Select import mode\">\r\n          <mat-radio-button [value]=\"importModeValues.importOriginal\">Import App(s)</mat-radio-button>\r\n          <mat-radio-button [value]=\"importModeValues.importAsTemplate\">Import and Rename / Reset</mat-radio-button>\r\n        </mat-radio-group>\r\n        <br />\r\n\r\n        @if (importForm.get('importMode')?.value === importModeValues.importOriginal) {\r\n          <span>The app will be imported as is, using the original name and folder.</span>\r\n          <span>If you already have the same app installed, it will prevent you from overwriting it.</span>\r\n        } @else if (importForm.get('importMode')?.value === importModeValues.importAsTemplate) {\r\n          <span>The app will be imported using a new name / folder.</span>\r\n          <span>\r\n            This allows you to create multiple isolated copies of the same app or to create something very different using this app as a\r\n            template.\r\n          </span>\r\n          <br />\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\" style=\"max-width: 300px\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"name\" />\r\n          </mat-form-field>\r\n        }\r\n      </form>\r\n      <br />\r\n    }\r\n\r\n    <div>\r\n      <button mat-raised-button tippy=\"Open file browser\" [disabled]=\"uploading() || importForm.invalid\" (click)=\"fileInput.click()\">\r\n        @if (!files().length) {\r\n          <div>Select or drop file</div>\r\n        }\r\n        @for (file of files(); track file) {\r\n          <div>{{ file.name }}</div>\r\n        }\r\n      </button>\r\n      <input #fileInput type=\"file\" multiple (change)=\"filesChanged($event)\" class=\"hide\" />\r\n      @if (uploadType() == UploadTypes.App && !files().length) {\r\n        <button\r\n          mat-raised-button\r\n          class=\"eav-app-catalog-button eav-action-button\"\r\n          [disabled]=\"uploading() || importForm.invalid\"\r\n          tippy=\"Open app catalog\"\r\n          (click)=\"toggleShowAppCatalog()\"\r\n        >\r\n          Get recommended Apps from Catalog\r\n        </button>\r\n      }\r\n\r\n      @if (files().length) {\r\n        <button\r\n          class=\"eav-action-button\"\r\n          style=\"margin-left: 12px\"\r\n          mat-raised-button\r\n          [disabled]=\"!files().length || uploading() || !!result() || importForm.invalid\"\r\n          (click)=\"upload()\"\r\n        >\r\n          Upload\r\n        </button>\r\n      }\r\n    </div>\r\n    @if (result()) {\r\n      <div class=\"eav-result-container\">\r\n        @if (result().Success) {\r\n          <div class=\"sxc-message sxc-message-info\">\r\n            Upload succeeded. See the messages below for more information.\r\n            @if (uploadType() != UploadTypes.ImportParts) {\r\n              <a href=\"javascript:void(0)\" (click)=\"closeDialog(true)\">Close</a>\r\n            } @else {\r\n              <a href=\"javascript:void(0)\" (click)=\"cleanUpload()\">Clean</a>\r\n            }\r\n          </div>\r\n        }\r\n        @if (!result().Success) {\r\n          <div class=\"sxc-message sxc-message-error\">\r\n            Upload failed. See the messages below for more information.\r\n            @if (uploadType() != UploadTypes.ImportParts) {\r\n              <a href=\"javascript:void(0)\" (click)=\"closeDialog(true)\">Close</a>\r\n            } @else {\r\n              <a href=\"javascript:void(0)\" (click)=\"cleanUpload()\">Clean</a>\r\n            }\r\n          </div>\r\n        }\r\n        @for (message of result().Messages; track message) {\r\n          <div\r\n            class=\"sxc-message\"\r\n            [ngClass]=\"{\r\n              'sxc-message-warning': message.MessageType === FileUploadMessageTypes.Warning,\r\n              'sxc-message-success': message.MessageType === FileUploadMessageTypes.Success,\r\n              'sxc-message-error': message.MessageType === FileUploadMessageTypes.Error,\r\n            }\"\r\n          >\r\n            {{ message.Text }}\r\n          </div>\r\n        }\r\n      </div>\r\n    }\r\n    @if (uploadType() == UploadTypes.App && showAppCatalog() && !files().length && importForm.valid) {\r\n      @if (ready) {\r\n        <iframe #installerWindow class=\"eav-app-catalog-iframe\" [src]=\"remoteInstallerUrl\"></iframe>\r\n      }\r\n      @if (showProgress) {\r\n        <div class=\"eav-progress\">\r\n          <mat-progress-spinner [mode]=\"'indeterminate'\"></mat-progress-spinner>\r\n          <span>Installing {{ currentPackage?.displayName }}..</span>\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, ElementRef, HostBinding, inject, Inject, input, OnDestroy, OnInit, signal, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { catchError, filter, fromEvent, map, of, switchMap, take, tap } from 'rxjs';\r\nimport { Of, transient } from '../../../../../../core';\r\nimport { AppsListService } from '../../../apps-management/services/apps-list.service';\r\nimport { DragAndDropDirective } from '../../directives/drag-and-drop.directive';\r\nimport { CrossWindowMessage, InstallPackage, InstallSettings, SpecsForInstaller } from '../../models/installer-models';\r\nimport { SafeHtmlPipe } from '../../pipes/safe-html.pipe';\r\nimport { Context } from '../../services/context';\r\nimport { AppInstallSettingsService } from '../../services/getting-started.service';\r\nimport { InstallerService } from '../../services/installer.service';\r\nimport { BaseComponent } from '../base.component';\r\nimport { FileUploadDialogData, FileUploadMessageTypes, FileUploadResult, ImportModeValues, UploadTypes } from './file-upload-dialog.models';\r\n\r\n\r\n@Component({\r\n  selector: 'app-file-upload-dialog',\r\n  templateUrl: './file-upload-dialog.component.html',\r\n  styleUrls: ['./file-upload-dialog.component.scss'],\r\n  imports: [\r\n    NgClass,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    SafeHtmlPipe,\r\n    DragAndDropDirective,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class FileUploadDialogComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  uploadType = input<Of<typeof UploadTypes>>();\r\n  \r\n  @ViewChild('installerWindow') installerWindow: ElementRef;\r\n\r\n  uploading = signal(false);\r\n  showAppCatalog = signal(false);\r\n  result = signal<FileUploadResult>(undefined);\r\n  files = signal<File[]>([]);\r\n\r\n  FileUploadMessageTypes = FileUploadMessageTypes;\r\n  UploadTypes = UploadTypes;\r\n  importModeValues = ImportModeValues;\r\n\r\n  showProgress: boolean = false;\r\n  currentPackage: InstallPackage;\r\n  remoteInstallerUrl = '';\r\n  urlChangeImportMode = \"\"\r\n  ready = false;\r\n  settings: InstallSettings;\r\n\r\n  #installerService = transient(InstallerService);\r\n  #installSettingsService = transient(AppInstallSettingsService);\r\n  #appsListService = transient(AppsListService);\r\n  #fb = inject(FormBuilder);\r\n\r\n  importForm: FormGroup = this.#fb.group({\r\n    importMode: [this.importModeValues.importOriginal, Validators.required],\r\n    name: ['']\r\n  });\r\n\r\n  \r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: FileUploadDialogData,\r\n    private dialog: MatDialogRef<FileUploadDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private sanitizer: DomSanitizer,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(\r\n      this.#installSettingsService.settings$.subscribe(settings => {\r\n        this.settings = settings;\r\n        this.urlChangeImportMode = settings.remoteUrl\r\n        this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(settings.remoteUrl);\r\n        this.ready = true;\r\n      })\r\n    );\r\n\r\n    this.#setupConditionalValidation();\r\n  }\r\n\r\n  #alreadyProcessing = false;\r\n  // copied from 2sxc-ui app/installer\r\n  // Initial Observable to monitor messages\r\n  #messages$ = fromEvent(window, 'message').pipe(\r\n    // Ensure only one installation is processed.\r\n    filter(() => !this.#alreadyProcessing),\r\n    filter((evt: MessageEvent) => evt.origin === \"https://2sxc.org\"),\r\n    // Get data from event.\r\n    map((evt: MessageEvent) => {\r\n      try {\r\n        return JSON.parse(evt.data) as CrossWindowMessage;\r\n      } catch (e) {\r\n        console.error('error procesing message. Message was ' + evt.data, e);\r\n        return void 0;\r\n      }\r\n    }),\r\n    // Check if data is valid and the moduleID matches\r\n    filter(data => data && Number(data.moduleId) === this.context.moduleId),\r\n  );\r\n\r\n  ngOnInit(): void {\r\n    // Update the remote installer URL based on the import mode\r\n    // Show multiple select or single select based on import mode\r\n    this.importForm.get('importMode')?.valueChanges.subscribe((mode) => {\r\n      const isTemplate = mode === this.importModeValues.importAsTemplate;\r\n      const url = this.urlChangeImportMode + (this.urlChangeImportMode.includes('?') ? '&' : '?') + `selectOnlyMode=${isTemplate}`;\r\n      this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    });\r\n\r\n\r\n    if (this.dialogData.files != null)\r\n      this.filesDropped(this.dialogData.files);\r\n\r\n    // copied from 2sxc-ui\r\n    this.#installSettingsService.loadGettingStarted(false); // Passed as input from 2sxc-ui\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(this.#messages$.pipe(\r\n      // Verify it's for this action\r\n      filter(data => data.action === 'specs'),\r\n      // Send message to iframe\r\n      tap(() => {\r\n        const winFrame = this.installerWindow.nativeElement as HTMLIFrameElement;\r\n        const specsMsg: SpecsForInstaller = {\r\n          action: 'specs',\r\n          data: {\r\n            //currently not used\r\n            installedApps: this.settings.installedApps,//.map(app => ((app as InstalledApp).guid)),\r\n            //currently used to forbid already installed apps\r\n            rules: this.settings.installedApps.map(app => ({ target: 'guid', appGuid: app.guid, mode: 'f', url: '' })),//this.settings.rules,\r\n          },\r\n        };\r\n        const specsJson = JSON.stringify(specsMsg);\r\n        winFrame.contentWindow.postMessage(specsJson, '*');\r\n        console.log('debug: just sent specs message:' + specsJson, specsMsg, winFrame);\r\n      }),\r\n    ).subscribe());\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    // Subscription to listen to 'install' messages\r\n    this.subscriptions.add(this.#messages$.pipe(\r\n      filter(data => data.action === 'install'),\r\n      // Get packages from data.\r\n      map(data => Object.values(data.packages)),\r\n      // Show confirm dialog.\r\n      filter(packages => {\r\n        const packagesDisplayNames = packages\r\n          .reduce((t, c) => `${t} - ${c.displayName}\\n`, '');\r\n\r\n        const msg = `Do you want to install these packages?\r\n\r\n${packagesDisplayNames}\r\nThis takes about 10 seconds per package. Don't reload the page while it's installing.`;\r\n        return confirm(msg);\r\n      }),\r\n      // Install the packages one at a time\r\n      switchMap(packages => {\r\n        this.#alreadyProcessing = true;\r\n        this.showProgress = true;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not shown\r\n        // If import mode is 'importAsTemplate', create a Install template with Url and new Name\r\n        if (this.importForm.get('importMode')?.value === this.importModeValues.importAsTemplate) {\r\n          return this.#appsListService.createTemplate(packages[0].url, this.importForm.get('name')?.value);\r\n        } else {\r\n          // Otherwise, install the packages normally\r\n          return this.#installerService.installPackages(packages, p => this.currentPackage = p);\r\n        }\r\n      }),\r\n      tap(() => {\r\n        this.showProgress = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed (though window reload will remove it anyway) so maybe unnecessary\r\n        alert('Installation complete 👍');\r\n        window.top.location.reload();\r\n        this.closeDialog(true);\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error: ', error);\r\n        this.showProgress = false;\r\n        this.#alreadyProcessing = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed\r\n        const errorMsg = `An error occurred: Package ${this.currentPackage.displayName}\r\n\r\n${error.error?.Message ?? error.error?.message ?? ''}\r\n\r\n${error.message}\r\n\r\nPlease try again later or check how to manually install content-templates: https://azing.org/2sxc/r/0O4OymoA`;\r\n        alert(errorMsg);\r\n        return of(error);\r\n      }),\r\n    ).subscribe());\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(refresh?: boolean): void {\r\n    this.dialog.close(refresh);\r\n  }\r\n\r\n  cleanUpload(): void {\r\n    this.result.set(undefined);\r\n    this.files.set([]);\r\n    this.uploading.set(false);\r\n  }\r\n\r\n\r\n  #setupConditionalValidation(): void {\r\n    const nameControl = this.importForm.get('name');\r\n    this.importForm.get('importMode')?.valueChanges.subscribe(mode => {\r\n      const isTemplate = mode === this.importModeValues.importAsTemplate;\r\n      nameControl?.setValidators(isTemplate ? [Validators.required] : null);\r\n      nameControl?.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n\r\n  filesDropped(files: File[]): void {\r\n    this.#setFiles(files);\r\n  }\r\n\r\n  filesChanged(event: Event): void {\r\n    const fileList = (event.target as HTMLInputElement).files;\r\n    const files = Array.from(fileList);\r\n    this.#setFiles(files);\r\n  }\r\n\r\n  upload(): void {\r\n    this.uploading.set(true);\r\n    const name = this.importForm.get('name')?.value as string;\r\n    this.subscriptions.add(\r\n      this.dialogData.upload$(this.files(), name).pipe(take(1)).subscribe({\r\n        next: (result) => {\r\n          this.uploading.set(false);\r\n          this.result.set(result);\r\n        },\r\n        error: () => {\r\n          this.uploading.set(false);\r\n          this.result.set(undefined);\r\n          this.snackBar.open('Upload failed. Please check console for more information', undefined, { duration: 3000 });\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  toggleShowAppCatalog(): void {\r\n    this.showAppCatalog.set(!this.showAppCatalog());\r\n  }\r\n\r\n  #setFiles(files: File[]): void {\r\n    if (!this.dialogData.multiple)\r\n      files = files.slice(0, 1);\r\n\r\n    this.files.set(files);\r\n  }\r\n}\r\n\r\n","\r\nimport { startWith, map, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { InstallSettings } from '../models/installer-models';\r\n\r\n// copied from 2sxc-ui app/installer\r\n@Injectable()\r\nexport class AppInstallSettingsService {\r\n\r\n  private installSettingsSubject: Subject<InstallSettings> = new Subject<InstallSettings>();\r\n  settings$: Observable<InstallSettings> = this.installSettingsSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    const ready$ = this.settings$.pipe(\r\n      map(() => true),\r\n      startWith(false));\r\n\r\n    ready$.subscribe();\r\n  }\r\n\r\n  public loadGettingStarted(isContentApp: boolean): void {\r\n    this.http.get<InstallSettings>(`sys/install/InstallSettings?isContentApp=${isContentApp}`)\r\n      .subscribe(json => this.installSettingsSubject.next(json));\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Directive, ElementRef, HostListener, input, NgZone, OnDestroy, OnInit, output, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent } from 'rxjs';\r\nimport { BaseDirective } from './base.directive';\r\n\r\n@Directive({\r\n  selector: '[appDragAndDrop]',\r\n})\r\nexport class DragAndDropDirective extends BaseDirective implements OnInit, OnDestroy {\r\n  markStyle = input<'outline' | 'fill' | 'shadow'>('outline');\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  allowedFileTypes = input<string>('');\r\n  protected filesDropped = output<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass = signal<string>('');\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass.set(`eav-droparea-${this.markStyle()}`);\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass());\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass(), this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes());\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes().replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    _elementRef = inject(ElementRef);\n    /** Whether the _mat-animation-noopable class should be applied, disabling animations.  */\n    _noopAnimations;\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress spinner. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/progress-spinner/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    _color;\n    _defaultColor = 'primary';\n    /** The element of the determinate spinner. */\n    _determinateCircle;\n    constructor() {\n        const defaults = inject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS);\n        this._noopAnimations = _animationsDisabled() && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            this._elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     */\n    mode;\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    _value = 0;\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    _diameter = BASE_SIZE;\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    _strokeWidth;\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinner, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mat-progress-spinner-size\": \"diameter + \\\"px\\\"\", \"style.--mat-progress-spinner-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mat-progress-spinner-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mat-progress-spinner-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mat-progress-spinner-size]': 'diameter + \"px\"',\n                        '[style.--mat-progress-spinner-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mat-progress-spinner-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mat-progress-spinner-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { App, PendingApp } from '../models/app.model';\r\n\r\nconst webApiAppRootList = 'admin/app/list';\r\nconst webApiAppRootInheritableApps = 'admin/app/InheritableApps';\r\nconst webApiAppRootPendingApps = 'admin/app/GetPendingApps';\r\nconst webApiAppRootApp = 'admin/app/app';\r\nconst webApiAppRootInstallPendingApps = 'admin/app/InstallPendingApps';\r\nconst webApiAppRootFlushcache = 'admin/app/flushcache';\r\n\r\n@Injectable()\r\nexport class AppsListService extends HttpServiceBaseSignal {\r\n\r\n  // clean way to create a new resource every time if refresh change\r\n  getAllLive(refresh: Signal<unknown>) {\r\n    return httpResource<App[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiAppRootList),\r\n        params: { zoneId: this.zoneId }\r\n      });\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return httpResource<App[]>(() => ({\r\n      url: this.apiUrl(webApiAppRootInheritableApps),\r\n      params: { zoneId: this.zoneId }\r\n    }));\r\n  }\r\n\r\n  getPendingApps() {\r\n    return httpResource<PendingApp[]>(() => ({\r\n      url: this.apiUrl(webApiAppRootPendingApps),\r\n      params: { zoneId: this.zoneId },\r\n    }));\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootApp), {}, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  createTemplate(url: string, newName: string) {\r\n    const encodedName = encodeURIComponent(newName);\r\n    return <Observable<any>>this.http.post(`sys/install/RemotePackage?packageUrl=${url}&newName=${encodedName}`, {});\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootInstallPendingApps), pendingApps, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRootApp), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  async flushCache(appId: number): Promise<number> {\r\n    return this.getStatusPromise(webApiAppRootFlushcache, {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[6,8]}