{"version":3,"sources":["./src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.ts","./src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.html","./src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.html","./src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.ts","./src/app/apps-management/constants/app.patterns.ts","./src/app/apps-management/apps-list/apps-list.component.ts","./src/app/apps-management/apps-list/apps-list.component.html","./src/app/apps-management/ag-grid-components/enable-languages-status/enable-languages-status.component.ts","./src/app/apps-management/ag-grid-components/enable-languages-status/enable-languages-status.component.html","./src/app/apps-management/enable-languages/enable-languages.component.ts","./src/app/apps-management/enable-languages/enable-languages.component.html","./src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.html","./src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.ts","./src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.html","./src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.ts","./src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.ts","./src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.html","./src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.html","./src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.ts","./src/app/apps-management/manage-features/manage-features.component.html","./src/app/apps-management/manage-features/manage-features.component.ts","./src/app/apps-management/sxc-insights/sxc-insights.component.html","./src/app/apps-management/sxc-insights/sxc-insights.component.ts","./src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./src/app/shared/pipes/safe-resource-url.ts"],"names":["agInit","params","this","app","data","refresh","flushCache","onFlush","deleteApp","onDelete","AppsListActionsComponent","value","AppsListShowComponent","appNamePattern","router","route","appsListService","snackBar","apps$","BehaviorSubject","modules","gridOptions","frameworkComponents","booleanFilterComponent","idFieldComponent","appsListShowComponent","appsListActionsComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","cellRendererParams","tooltipGetter","paramsData","Id","Guid","valueGetter","showValueGetter","flex","minWidth","onCellClicked","openApp","bind","Thumbnail","pinned","flushApp","subscription","Subscription","ngOnInit","fetchAppsList","refreshOnChildClosed","ngOnDestroy","complete","unsubscribe","browseCatalog","window","open","createApp","name","prompt","trim","replace","match","create","subscribe","duration","importApp","files","navigate","relativeTo","firstChild","state","getAll","apps","next","IsHidden","result","Name","delete","alert","confirm","toString","parent","add","events","pipe","event","startWith","snapshot","map","pairwise","AppsListComponent","toggleLanguage","onEnabledToggle","EnableLanguagesStatusComponent","languagesService","languages$","enableLanguagesStatusComponent","Code","handleNameClicked","fetchLanguages","language","save","IsEnabled","languages","EnableLanguagesComponent","FeaturesListEnabledComponent","FeaturesListPublicComponent","FeaturesListSecurityComponent","FeaturesListUiComponent","featuresConfigService","featuresListEnabledComponent","featuresListUiComponent","featuresListPublicComponent","featuresListSecurityComponent","id","openFeature","valueGetterDateTime","features$","showManagement$","showSpinner$","managementUrl$","templateVars$","combineLatest","features","showManagement","showSpinner","managementUrl","fetchFeatures","subscribeToMessages","toggleManagement","getManageFeaturesUrl","url","includes","Error","rawValue","colDef","substring","fromEvent","origin","endsWith","featuresString","JSON","stringify","saveFeatures","res","ManageFeaturesComponent","sxcInsightsService","positiveWholeNumber","loading$","openInsights","$2sxc","http","apiUrl","activatePageLog","form","pageLogDuration","document","activeElement","HTMLElement","blur","resetForm","SxcInsightsComponent","dialogRef","context","zoneId","tabs","tabIndex$","indexOf","path","closeDialog","close","changeTab","index","AppsManagementNavComponent","sanitizer","transform","resourceUrl","bypassSecurityTrustResourceUrl","SafeResourceUrlPipe"],"mappings":"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","file":"apps-management-nav-component.7d07aef2351f4cc82dc5.js","sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n  private params: AppsListActionsParams;\r\n\r\n  constructor() { }\r\n\r\n  agInit(params: AppsListActionsParams) {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  flushCache() {\r\n    this.params.onFlush(this.app);\r\n  }\r\n\r\n  deleteApp() {\r\n    this.params.onDelete(this.app);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Flush cache\" (click)=\"flushCache()\">\r\n    <mat-icon>cached</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"deleteApp()\">\r\n    <mat-icon>delete</mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","<div class=\"icon-container\">\r\n  <mat-icon matTooltip=\"Show this app to users\" *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon matTooltip=\"Don't show this app to users\" *ngIf=\"!value\">visibility_off</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-show',\r\n  templateUrl: './apps-list-show.component.html',\r\n  styleUrls: ['./apps-list-show.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppsListShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","export const appNamePattern = /^[A-Za-z](?:[A-Za-z0-9\\s\\(\\)-]+)*$/;\r\nexport const appNameError = 'Standard letters, numbers, spaces, hyphens and round brackets are allowed. Must start with a letter.';\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { ImportAppDialogData } from '../../import-app/import-app-dialog.config';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { AppsListActionsComponent } from '../ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from '../ag-grid-components/apps-list-actions/apps-list-actions.models';\r\nimport { AppsListShowComponent } from '../ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { appNameError, appNamePattern } from '../constants/app.patterns';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppsListComponent implements OnInit, OnDestroy {\r\n  apps$ = new BehaviorSubject<App[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      appsListShowComponent: AppsListShowComponent,\r\n      appsListActionsComponent: AppsListActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (paramsData: App) => `ID: ${paramsData.Id}\\nGUID: ${paramsData.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Show', field: 'IsHidden', width: 70, headerClass: 'dense', cellClass: 'icons no-outline', sortable: true,\r\n        filter: 'booleanFilterComponent', cellRenderer: 'appsListShowComponent', valueGetter: this.showValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'apps-list-primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', onCellClicked: this.openApp.bind(this), cellRenderer: (params: ICellRendererParams) => {\r\n          const app: App = params.data;\r\n          if (app.Thumbnail != null) {\r\n            return `\r\n            <div class=\"container\">\r\n              <img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          } else {\r\n            return `\r\n            <div class=\"container\">\r\n              <div class=\"image logo\">\r\n                <span class=\"material-icons-outlined\">star_border</span>\r\n              </div>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          }\r\n        },\r\n      },\r\n      {\r\n        headerName: 'Folder', field: 'Folder', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Version', field: 'Version', width: 78, headerClass: 'dense', cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Items', field: 'Items', width: 70, headerClass: 'dense', cellClass: 'number-cell no-outline', sortable: true,\r\n        filter: 'agNumberColumnFilter',\r\n      },\r\n      {\r\n        width: 80, cellClass: 'secondary-action no-padding', cellRenderer: 'appsListActionsComponent', pinned: 'right',\r\n        cellRendererParams: {\r\n          onDelete: this.deleteApp.bind(this),\r\n          onFlush: this.flushApp.bind(this),\r\n        } as AppsListActionsParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchAppsList();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.apps$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  browseCatalog() {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp() {\r\n    let name = prompt('Enter App Name (will also be used for folder)');\r\n    if (name === null) { return; }\r\n    name = name.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs\r\n    while (!name.match(appNamePattern)) {\r\n      name = prompt(`Enter App Name (will also be used for folder)\\n${appNameError}`, name);\r\n      if (name === null) { return; }\r\n      name = name.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs\r\n    }\r\n    this.snackBar.open('Saving...');\r\n    this.appsListService.create(name).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.fetchAppsList();\r\n    });\r\n  }\r\n\r\n  importApp(files?: File[]) {\r\n    const dialogData: ImportAppDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild, state: dialogData });\r\n  }\r\n\r\n  private fetchAppsList() {\r\n    this.appsListService.getAll().subscribe(apps => {\r\n      this.apps$.next(apps);\r\n    });\r\n  }\r\n\r\n  private showValueGetter(params: ValueGetterParams) {\r\n    const app: App = params.data;\r\n    return !app.IsHidden;\r\n  }\r\n\r\n  private deleteApp(app: App) {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) { return; }\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.appsListService.delete(app.Id).subscribe(() => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchAppsList();\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App) {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open('Flushing cache...');\r\n    this.appsListService.flushCache(app.Id).subscribe(() => {\r\n      this.snackBar.open('Cache flushed', null, { duration: 2000 });\r\n    });\r\n  }\r\n\r\n  private openApp(params: CellClickedEvent) {\r\n    const appId = (params.data as App).Id;\r\n    this.router.navigate([appId.toString()], { relativeTo: this.route.parent });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.fetchAppsList();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps$ | async\" [modules]=\"modules\" [gridOptions]=\"gridOptions\"\r\n    appDragAndDrop [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n  </ag-grid-angular>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\">\r\n    <eco-fab-speed-dial-trigger spin=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab matTooltip=\"Find more apps\" (click)=\"browseCatalog()\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab matTooltip=\"Import app\" (click)=\"importApp()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab matTooltip=\"Create app\" (click)=\"createApp()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { EnableLanguage } from '../../models/enable-language.model';\r\nimport { EnableLanguagesStatusParams } from './enable-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-enable-languages-status',\r\n  templateUrl: './enable-languages-status.component.html',\r\n  styleUrls: ['./enable-languages-status.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EnableLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  private params: EnableLanguagesStatusParams;\r\n\r\n  agInit(params: EnableLanguagesStatusParams) {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage() {\r\n    const language: EnableLanguage = this.params.data;\r\n    this.params.onEnabledToggle(language);\r\n  }\r\n}\r\n","<div class=\"cell-box\">\r\n  <mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage()\"></mat-slide-toggle>\r\n</div>\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { EnableLanguagesStatusComponent } from '../ag-grid-components/enable-languages-status/enable-languages-status.component';\r\nimport { EnableLanguagesStatusParams } from '../ag-grid-components/enable-languages-status/enable-languages-status.models';\r\nimport { EnableLanguage } from '../models/enable-language.model';\r\nimport { EnableLanguagesService } from '../services/enable-languages.service';\r\n\r\n@Component({\r\n  selector: 'app-enable-languages',\r\n  templateUrl: './enable-languages.component.html',\r\n  styleUrls: ['./enable-languages.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EnableLanguagesComponent implements OnInit, OnDestroy {\r\n  languages$ = new BehaviorSubject<EnableLanguage[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      enableLanguagesStatusComponent: EnableLanguagesStatusComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Code', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (paramsData: EnableLanguage) => `ID: ${paramsData.Code}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Culture', flex: 2, minWidth: 250, cellClass: 'primary-action highlight no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', onCellClicked: this.handleNameClicked.bind(this),\r\n      },\r\n      {\r\n        headerName: 'Status', field: 'IsEnabled', width: 72, headerClass: 'dense', cellClass: 'no-padding no-outline',\r\n        cellRenderer: 'enableLanguagesStatusComponent', sortable: true, filter: 'booleanFilterComponent',\r\n        cellRendererParams: {\r\n          onEnabledToggle: this.toggleLanguage.bind(this),\r\n        } as EnableLanguagesStatusParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private languagesService: EnableLanguagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchLanguages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.languages$.complete();\r\n  }\r\n\r\n  private handleNameClicked(params: CellClickedEvent) {\r\n    const language: EnableLanguage = params.data;\r\n    this.toggleLanguage(language);\r\n  }\r\n\r\n  private toggleLanguage(language: EnableLanguage) {\r\n    this.languagesService.save(language.Code, !language.IsEnabled).subscribe(() => {\r\n      this.fetchLanguages();\r\n    });\r\n  }\r\n\r\n  private fetchLanguages() {\r\n    this.languagesService.getAll().subscribe(languages => {\r\n      this.languages$.next(languages);\r\n    });\r\n  }\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages$ | async\" [modules]=\"modules\"\r\n    [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon matTooltip=\"Feature is enabled\" *ngIf=\"value\">toggle_on</mat-icon>\r\n  <mat-icon matTooltip=\"Feature is disabled\" *ngIf=\"!value\">toggle_off</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">person</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-public',\r\n  templateUrl: './features-list-public.component.html',\r\n  styleUrls: ['./features-list-public.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeaturesListPublicComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-security',\r\n  templateUrl: './features-list-security.component.html',\r\n  styleUrls: ['./features-list-security.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeaturesListSecurityComponent implements ICellRendererAngularComp {\r\n\r\n  agInit(params: ICellRendererParams) {\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon matTooltip=\"Security Status still work-in progress\" class=\"feature-security-icon\">help</mat-icon>\r\n</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-ui',\r\n  templateUrl: './features-list-ui.component.html',\r\n  styleUrls: ['./features-list-ui.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeaturesListUiComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"(templateVars$ | async) as data\">\r\n\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\" [ngClass]=\"{ 'iframe-wrapper': data.showManagement }\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [ngClass]=\"{ 'force-hide': data.showManagement }\"\r\n      [rowData]=\"data.features\" [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <mat-spinner class=\"spinner\" *ngIf=\"data.showSpinner\" mode=\"indeterminate\" diameter=\"20\" color=\"accent\">\r\n    </mat-spinner>\r\n\r\n    <iframe class=\"iframe\" *ngIf=\"data.showManagement\" [src]=\"data.managementUrl | safeResourceUrl\"></iframe>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Manage features\" (click)=\"toggleManagement()\">\r\n      <mat-icon>tune</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, fromEvent, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { FeaturesListEnabledComponent } from '../ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListPublicComponent } from '../ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from '../ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesListUiComponent } from '../ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { Feature } from '../models/feature.model';\r\nimport { ManageFeaturesMessageData } from '../models/manage-features-message-data.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-features',\r\n  templateUrl: './manage-features.component.html',\r\n  styleUrls: ['./manage-features.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ManageFeaturesComponent implements OnInit, OnDestroy {\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      featuresListEnabledComponent: FeaturesListEnabledComponent,\r\n      featuresListUiComponent: FeaturesListUiComponent,\r\n      featuresListPublicComponent: FeaturesListPublicComponent,\r\n      featuresListSecurityComponent: FeaturesListSecurityComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (paramsData: Feature) => `GUID: ${paramsData.id}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Enabled', field: 'enabled', width: 80, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListEnabledComponent',\r\n      },\r\n      {\r\n        headerName: 'UI', field: 'ui', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListUiComponent',\r\n      },\r\n      {\r\n        headerName: 'Public', field: 'public', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListPublicComponent'\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'id', flex: 2, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', onCellClicked: this.openFeature,\r\n        cellRenderer: (params: ICellRendererParams) => 'details (name lookup still WIP)',\r\n      },\r\n      {\r\n        headerName: 'Expires', field: 'expires', flex: 1, minWidth: 200, cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter', valueGetter: this.valueGetterDateTime,\r\n      },\r\n      { headerName: 'Security', width: 70, cellClass: 'no-outline', cellRenderer: 'featuresListSecurityComponent' },\r\n    ],\r\n  };\r\n\r\n  private features$ = new BehaviorSubject<Feature[]>(null);\r\n  private showManagement$ = new BehaviorSubject(false);\r\n  private showSpinner$ = new BehaviorSubject(false);\r\n  private managementUrl$ = new BehaviorSubject<string>(null);\r\n  templateVars$ = combineLatest([this.features$, this.showManagement$, this.showSpinner$, this.managementUrl$]).pipe(\r\n    map(([features, showManagement, showSpinner, managementUrl]) => ({ features, showManagement, showSpinner, managementUrl })),\r\n  );\r\n  private subscription = new Subscription();\r\n\r\n  constructor(private featuresConfigService: FeaturesConfigService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchFeatures();\r\n    this.subscribeToMessages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.features$.complete();\r\n    this.showManagement$.complete();\r\n    this.showSpinner$.complete();\r\n    this.managementUrl$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  toggleManagement() {\r\n    this.showManagement$.next(!this.showManagement$.value);\r\n    if (!this.showManagement$.value) { return; }\r\n\r\n    this.showSpinner$.next(true);\r\n    this.managementUrl$.next(null); // reset url\r\n    this.featuresConfigService.getManageFeaturesUrl().subscribe(url => {\r\n      this.showSpinner$.next(false);\r\n      if (url.includes('error: user needs host permissions')) {\r\n        this.showManagement$.next(false);\r\n        throw new Error('User needs host permissions!');\r\n      }\r\n      this.managementUrl$.next(url);\r\n    });\r\n  }\r\n\r\n  private openFeature(params: CellClickedEvent) {\r\n    window.open(`https://2sxc.org/r/f/${params.value}`, '_blank');\r\n  }\r\n\r\n  private valueGetterDateTime(params: ValueGetterParams) {\r\n    const rawValue: string = params.data[params.colDef.field];\r\n    if (!rawValue) { return null; }\r\n    return rawValue.substring(0, 19).replace('T', ' '); // remove 'Z' and replace 'T'\r\n  }\r\n\r\n  private fetchFeatures() {\r\n    this.featuresConfigService.getAll().subscribe(features => {\r\n      this.features$.next(features);\r\n    });\r\n  }\r\n\r\n  /** Waits for a json message from the iframe and sends it to the server */\r\n  private subscribeToMessages() {\r\n    this.subscription.add(\r\n      fromEvent(window, 'message').pipe(\r\n        filter((event: MessageEvent) => this.showManagement$.value),\r\n        filter(event => event.origin.endsWith('2sxc.org') === true),\r\n        filter(event => event.data != null),\r\n      ).subscribe(event => {\r\n        const features: ManageFeaturesMessageData = event.data;\r\n        const featuresString = JSON.stringify(features);\r\n        this.featuresConfigService.saveFeatures(featuresString).subscribe(res => {\r\n          this.showManagement$.next(false);\r\n          this.fetchFeatures();\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>2sxc Insights for Super Users</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n          <mat-icon>speed</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This is to access a special section to see what is really in the server memory. It's intended for extensive\r\n      debugging\r\n      - see also <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Activate Page Level Logging</mat-card-title>\r\n      <div class=\"actions-box\"></div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with ?debug=true in the url. It can\r\n          only be activated for short periods of time.\r\n        </div>\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration=\"ngModel\" [disabled]=\"loading$ | async\">\r\n        </mat-form-field>\r\n        <ng-container *ngIf=\"duration.touched && duration.errors\">\r\n          <app-field-hint *ngIf=\"duration.errors.pattern\" [isError]=\"true\">\r\n            Only positive whole numbers\r\n          </app-field-hint>\r\n        </ng-container>\r\n        <div class=\"form-actions\">\r\n          <button mat-raised-button type=\"submit\" color=\"accent\"\r\n            [disabled]=\"!activateLogForm.valid || (loading$ | async)\">\r\n            Activate\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { SxcRoot } from '@2sic.com/2sxc-typings';\r\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\n\r\ndeclare const $2sxc: SxcRoot;\r\n\r\n@Component({\r\n  selector: 'app-sxc-insights',\r\n  templateUrl: './sxc-insights.component.html',\r\n  styleUrls: ['./sxc-insights.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SxcInsightsComponent implements OnInit, OnDestroy {\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  loading$ = new BehaviorSubject(false);\r\n\r\n  constructor(private sxcInsightsService: SxcInsightsService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open($2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Manage Apps in Zone {{ zoneId }}</div>\r\n      <button mat-icon-button matTooltip=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n  <mat-tab-group class=\"mat-tab-group-max-height\" dynamicHeight color=\"accent\" (selectedTabChange)=\"changeTab($event)\"\r\n    [selectedIndex]=\"tabIndex$ | async\">\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Apps\">\r\n        <mat-icon>star_border</mat-icon>\r\n        <span>Apps</span>\r\n      </div>\r\n      <app-apps-list *matTabContent></app-apps-list>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Languages\">\r\n        <mat-icon>translate</mat-icon>\r\n        <span>Languages</span>\r\n      </div>\r\n      <app-enable-languages *matTabContent></app-enable-languages>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Features\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Features</span>\r\n      </div>\r\n      <app-manage-features *matTabContent></app-manage-features>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"2sxc Insights\">\r\n        <mat-icon>speed</mat-icon>\r\n        <span>2sxc Insights</span>\r\n      </div>\r\n      <app-sxc-insights *matTabContent></app-sxc-insights>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppsManagementNavComponent implements OnInit {\r\n  zoneId = this.context.zoneId;\r\n\r\n  private tabs = ['list', 'languages', 'features', 'sxc-insights']; // tabs order has to match template\r\n  tabIndex$ = this.router.events.pipe(\r\n    filter(event => event instanceof NavigationEnd),\r\n    map(() => this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n    startWith(this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeResourceUrl' })\r\nexport class SafeResourceUrlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(resourceUrl: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}