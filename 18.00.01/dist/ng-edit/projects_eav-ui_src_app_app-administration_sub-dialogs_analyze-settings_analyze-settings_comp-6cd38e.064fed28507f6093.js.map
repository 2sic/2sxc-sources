{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_analyze-settings_analyze-settings_comp-6cd38e.064fed28507f6093.js","mappings":"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","names":["webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","constructor","http","context","dnnContext","this","getAll","contentType","get","$2sxc","apiUrl","webApiEntityList","params","appId","toString","importQuery","file","from","toBase64","pipe","switchMap","fileBase64","post","AppId","ContentBase64","map","success","Success","Messages","clonePipeline","id","Id","delete","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_6__","jDH","factory","Éµfac","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","formData","FormData","append","zoneId","export","url","window","open","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","AnalyzeSettingsKeyComponent","snackBar","agInit","key","value","refresh","copy","copyToClipboard","duration","fesm2022_core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","MatRippleModule","TippyDirective","styles","ctx_r0","totalResults","_r2","openDetails","AnalyzeSettingsTotalResultsComponent","stackItem","data","AnalyzeSettingsTotalResultsComponent_Conditional_0_Template","AnalyzeSettingsTotalResultsComponent_Conditional_1_Template","MatIconModule","view_r3","Guid","Name","_r1","ctx_r1","closeDialog","$event","changeView","AnalyzeSettingsComponent_Conditional_0_For_19_Template","part","vm_r4","selectedView","undefined","views","stack","gridOptions","AnalyzeSettingsComponent","dialogRef","route","router","buildGridOptions","viewsService","transient","analyzeSettingsService","AnalyzeSettingsService","snapshot","paramMap","ngOnInit","views$","BehaviorSubject","selectedView$","stack$","getViews","getStack","viewModel$","combineLatest","ngOnDestroy","complete","close","viewGuid","next","subscribe","defaultGridOptions","columnDefs","ColumnDefinitions","TextWideActionClass","headerName","field","cellRenderer","AnalyzeSettingsValueComponent","TextNarrow","width","headerClass","cellClass","split","sortable","filter","cellRendererParams","navigate","Path","relativeTo","AnalyzeSettingsComponent_Conditional_0_Template","tmp_0_0","MatButtonModule","i4","RouterOutlet","MatFormFieldModule","i5","MatSelectModule","i6","i7","FormsModule","i8","MatOptionModule","AsyncPipe","SxcGridModule","i9","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","readAsText"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-key',\r\n  templateUrl: './analyze-settings-key.component.html',\r\n  styleUrls: ['./analyze-settings-key.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsKeyComponent implements ICellRendererAngularComp {\r\n  key: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.key = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.key);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"key-box highlight\" [tippy]=\"key\" (click)=\"copy()\">\r\n  <span class=\"key\">{{ key }}</span>\r\n</div>\r\n","@if (totalResults <= 1) {\r\n  <div class=\"input-component no-click\">\r\n    <div>{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n@if (totalResults > 1) {\r\n  <div matRipple class=\"input-component highlight\" tippy=\"Open details\" (click)=\"openDetails()\">\r\n    <div class=\"text\">{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { SettingsStackItem } from '../analyze-settings.models';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results.models';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-total-results',\r\n  templateUrl: './analyze-settings-total-results.component.html',\r\n  styleUrls: ['./analyze-settings-total-results.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsTotalResultsComponent implements ICellRendererAngularComp {\r\n  totalResults: number;\r\n\r\n  private stackItem: SettingsStackItem;\r\n  private params: ICellRendererParams & AnalyzeSettingsTotalResultsParams;\r\n\r\n  agInit(params: ICellRendererParams & AnalyzeSettingsTotalResultsParams): void {\r\n    this.totalResults = params.value;\r\n    this.params = params;\r\n    this.stackItem = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openDetails(): void {\r\n    this.params.openDetails(this.stackItem);\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"nav-component-wrapper\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Analyze {{ part }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"padding-class\">\r\n    <p class=\"dialog-description\">\r\n      Settings and Resources are consolidated from many sources. Here you see what the resulting values would be.\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <mat-form-field color=\"accent\" class=\"view-select-box\">\r\n      <mat-label>Merge settings / resources of a View</mat-label>\r\n      <mat-select [ngModel]=\"vm.selectedView\" (ngModelChange)=\"changeView($event)\">\r\n        <mat-option [value]=\"undefined\">No view selected - this is how APIs see the data</mat-option>\r\n        @for (view of vm.views; track view) {\r\n        <mat-option [value]=\"view.Guid\">{{ view.Name }}</mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"grid-wrapper padding-class\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.stack\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { View } from '../../models';\r\nimport { ViewsService } from '../../services';\r\nimport { AnalyzeSettingsService } from '../../services/analyze-settings.service';\r\nimport { AnalyzeSettingsKeyComponent } from './analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from './analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results/analyze-settings-total-results.models';\r\nimport { AnalyzeSettingsValueComponent } from './analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzePart, AnalyzeSettingsViewModel, SettingsStackItem } from './analyze-settings.models';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings',\r\n  templateUrl: './analyze-settings.component.html',\r\n  styleUrls: ['./analyze-settings.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsComponent implements OnInit, OnDestroy {\r\n  part: AnalyzePart;\r\n  viewModel$: Observable<AnalyzeSettingsViewModel>;\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private views$: BehaviorSubject<View[]>;\r\n  private selectedView$: BehaviorSubject<string>;\r\n  private stack$: BehaviorSubject<SettingsStackItem[]>;\r\n\r\n  private viewsService = transient(ViewsService);\r\n  private analyzeSettingsService = transient(AnalyzeSettingsService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AnalyzeSettingsComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) {\r\n    this.part = this.route.snapshot.paramMap.get('part') as AnalyzePart;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.views$ = new BehaviorSubject<View[]>([]);\r\n    this.selectedView$ = new BehaviorSubject<string>(undefined);\r\n    this.stack$ = new BehaviorSubject<SettingsStackItem[]>([]);\r\n\r\n    this.getViews();\r\n    this.getStack();\r\n\r\n    this.viewModel$ = combineLatest([this.views$, this.selectedView$, this.stack$]).pipe(\r\n      map(([views, selectedView, stack]) => {\r\n        const viewModel: AnalyzeSettingsViewModel = {\r\n          views,\r\n          selectedView,\r\n          stack,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.views$.complete();\r\n    this.selectedView$.complete();\r\n    this.stack$.complete();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeView(viewGuid: string): void {\r\n    this.selectedView$.next(viewGuid);\r\n    this.getStack();\r\n  }\r\n\r\n  private getViews(): void {\r\n    this.viewsService.getAll().subscribe(views => {\r\n      this.views$.next(views);\r\n    });\r\n  }\r\n\r\n  private getStack(): void {\r\n    this.analyzeSettingsService.getStack(this.part, undefined, this.selectedView$.value, true).subscribe(stack => {\r\n      this.stack$.next(stack);\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Key',\r\n          field: 'Path',\r\n          cellRenderer: AnalyzeSettingsKeyComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Value',\r\n          field: '_value',\r\n          cellRenderer: AnalyzeSettingsValueComponent,\r\n        },\r\n        {\r\n          field: 'Source',\r\n          ...ColumnDefinitions.TextNarrow,\r\n        },\r\n        {\r\n          headerName: 'Total',\r\n          field: 'TotalResults',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'secondary-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          cellRenderer: AnalyzeSettingsTotalResultsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AnalyzeSettingsTotalResultsParams = {\r\n              openDetails: (stackItem) => {\r\n                this.router.navigate([`details/${this.selectedView$.value}/${stackItem.Path}`], { relativeTo: this.route });\r\n              },\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"x_google_ignoreList":[]}