{"version":3,"file":"default-projects_eav-ui_src_app_edit_shared_helpers_field-mask_helper_ts-projects_eav-ui_src_-5f0d04.55c725263a1327e9.js","mappings":"mNAYM,MAAOA,EACXC,YAESC,EAGAC,EAGAC,EAGAC,EAGAC,EAGAC,EAGAC,EAEAC,GApBAC,KAAAR,OAGAQ,KAAAP,SAGAO,KAAAN,QAGAM,KAAAL,UAGAK,KAAAJ,YAGAI,KAAAH,WAGAG,KAAAF,SAEAE,KAAAD,eACL,4DC9BN,MACME,EAAa,aAIb,MAAgBC,EAEpBX,YAAYC,EAAeW,GAapBH,KAAAI,kBAAmB,EAZpBZ,IACFQ,KAAKR,KAAOA,EACZQ,KAAKK,KAAO,IAAIC,IAAU,GAAGL,KAAcT,KAASW,GACpDH,KAAKO,IAAIC,EAAE,mBAAmBhB,KAElC,CAUA,UAAOiB,CAAIC,GACT,MAAMC,EAAgB,IAAID,EAC1BE,IAAkBC,YAAYJ,IAAIE,EACpC,CAGA,eAAOG,GAAmB,CAE1B,OAAIP,GAAQ,OAAOP,KAAKK,OAAS,IAAIC,IAAU,GAAGL,KAAcD,KAAKR,SA/BvD,EA+ByE,CASvFuB,aAAaC,EAAmBC,GAC9B,MAAMC,EAAIlB,KAAKO,IAAIY,GAAG,eAAgB,CAAEH,QAAOC,iBACzCG,EAAmBC,MAAMC,QAAQN,IAA2B,IAAjBA,EAAMO,QAAgBN,EACvE,OAAOC,EAAEM,OAAYC,IAAVT,GAAuBI,EACpC,CAcAM,qBAAwBC,EAAwBC,EAAsBC,GACpE,IAAKD,EAAc,OAAOC,EAE1B,MAAMC,EAAgBH,EAAMI,UAAUlC,SAASmC,SAASC,KAAKC,GAAKA,EAAEC,OAASP,GAC7E,IAAKE,EAAe,OAAOD,EAE3B,MAAMO,EAAWT,EAAMU,aAAaC,QAAQR,GAC5C,MAAO,IAAKD,KAAaO,EAC3B,4DCpEI,MAAOG,UAAqBrC,IAAlCX,kCACES,KAAAR,KAAOgD,IAAiBC,QAExBzC,KAAAI,kBAAmB,CAKrB,CAHEsC,QAAS7C,aACP,OAAOA,CACT,ECJI,MAAOe,EAGXrB,cAFQS,KAAA2C,OAAyC,GAI/C3C,KAAKS,IAAI,IAAI8B,EACf,CAEA,gBAAO1B,GACL,OAAO+B,OAAOC,uBAAyB,IAAIjC,CAC7C,CAGAH,IAAIC,GACFV,KAAK2C,OAAOjC,EAAMlB,MAAQkB,CAC5B,CAGAoC,IAAIC,GACF,OAAO/C,KAAK2C,OAAOI,IAAkB,IACvC,CAGAC,aAAaD,GACX,OAAO/C,KAAK8C,IAAIC,IAAkB/C,KAAK8C,IAAIN,IAAiBC,QAC9D,0PChBYQ,MAAA,2BAAAA,MAAA,EAAAC,EAAA,0EAAkDD,MAAnC,mBAAAE,EAAmCF,CAAA,0BAAAA,MAAA,EAAAG,EAAAC,8BAFtDJ,MAAA,QACEA,MAAA,EAAAK,EAAA,wBAAAL,OAGFA,8BAHEA,cAAAM,EAAAC,6BASIP,MADF,OACEA,CADE,YAEAA,MAAA,YACAA,MAAA,SAAKA,MAAA,gBAETA,uCAUUA,MAAA,aAA4CA,MAAA,GAA4BA,wCAAhDA,MAAA,QAAAQ,EAAAC,MAAoBT,cAAA,GAAAQ,EAAAC,KAAA,oCAM5CT,MAAA,iBAA8CA,MAAA,oBAAcA,+BAG5DA,MAAA,iBAA8CA,MAAA,YAAMA,iDAf5DA,MADF,OACEA,CADE,YAEAA,MAAA,YACAA,MAAA,YAA2EA,MAAA,yBAAAQ,EAAAR,MAAAU,GAAAC,UAAAC,EAAAZ,MAAA,UAAAA,MAASY,EAAAC,OAAAL,GAAY,GAC9FR,MAAA,YACEA,MAAA,iBACAA,MAAA,EAAAc,GAAA,eAGAd,MAAA,aAA4CA,MAAA,GAC9CA,UACAA,MAAA,YAIEA,MAHA,GAAAe,EAAA,kBAGAf,CAHuB,GAAAgB,EAAA,mBAS/BhB,qDAlB4BA,MAAA,GAAAA,MAAA,UAAAQ,EAAAS,KAAAL,EAAAM,SAAA,eAGpBlB,MAAA,GAAAA,MAAA,EAAAQ,EAAAC,KAAA,MAGwBT,cAAA,QAAAQ,EAAAjE,MAAoByD,cAAAQ,EAAAjE,MAG5CyD,MAAA,GAAAA,MAAA,GAAAQ,EAAAW,WAAA,MAGAnB,cAAA,GAAAQ,EAAAY,aAAA,gCAzBZpB,MAAA,QACEA,MAAA,EAAAqB,EAAA,UAQArB,MAAA,EAAAsB,EAAA,eAAAtB,OAwBFA,8BAhCEA,cAAA,MAAAM,EAAAiB,eAAAjD,OAAA,MAQA0B,cAAAM,EAAAiB,sCA+BEvB,MAAA,qDAGAA,MAAA,iBAA8BA,MAAA,mBAAAA,MAAAwB,GAAA,MAAAC,EAAAzB,QAAA0B,KAAAd,EAAAZ,MAAA,UAAAA,MAASY,EAAAe,OAAAF,EAAAR,IAAe,GACpDjB,MAAA,GACFA,gDADEA,cAAA,IAAAY,EAAAgB,QAAAC,SAAAJ,EAAAR,IAAA,0EAUEjB,MAAA,iBAA8CA,MAAA,oBAAcA,gCAG5DA,MAAA,iBAA8CA,MAAA,YAAMA,+BAQtDA,MAAA,4BAAAA,MAAA,EAAA8B,GAAA,0EAAkD9B,MAAnC,mBAAAE,EAAmCF,CAAA,0BAAAA,MAAA,EAAAG,EAAA4B,+BAFtD/B,MAAA,QACEA,MAAA,EAAAgC,GAAA,wBAAAhC,OAGFA,mCAHEA,cAAAyB,EAAAQ,mDA1BJjC,MADF,OACEA,CADE,YAKAA,MAHA,EAAAkC,EAAA,aAGAlC,CAHkC,EAAAmC,GAAA,mBAQlCnC,MAAA,YAA2EA,MAAA,yBAAAyB,EAAAzB,MAAAoC,GAAAV,KAAAd,EAAAZ,MAAA,UAAAA,MAASY,EAAAC,OAAAY,GAAY,GAC9FzB,MAAA,YACEA,MAAA,iBACAA,MAAA,UAAMA,MAAA,GACRA,UACAA,MAAA,YAIEA,MAHA,GAAAqC,GAAA,kBAGArC,CAHuB,GAAAsC,GAAA,mBAQ7BtC,YACAA,MAAA,GAAAuC,GAAA,UAOFvC,0CA9BIA,MAAA,GAAAA,MAAA,MAAAyB,EAAAQ,SAAA3D,OAAA,MAGA0B,cAAA,EAAAyB,EAAAQ,SAAA3D,OAAA,QAKwB0B,cAAA,UAAAyB,EAAAR,KAAAL,EAAAM,SAAA,eAGdlB,MAAA,GAAAA,MAAAyB,EAAAlF,MAGNyD,MAAA,GAAAA,MAAA,GAAAyB,EAAAN,WAAA,MAGAnB,cAAA,GAAAyB,EAAAL,aAAA,MAMNpB,cAAA,GAAAyB,EAAAQ,SAAA3D,OAAA,GAAAsC,EAAAgB,QAAAC,SAAAJ,EAAAR,IAAA,gDAhFJjB,MAFJ,UAEIA,CAFoB,UAEpBA,CAD6B,WACSA,MAAA,wBACxCA,UAIMA,MAHN,UAGMA,CAH0B,UAG1BA,CAFyB,qBAEzBA,CADwD,eAC7CA,MAAA,YAAMA,QACjBA,MAAA,cAA0CA,MAAA,yBAAAwC,GAAAxC,MAAAyC,GAAA,MAAA7B,EAAAZ,QAAA,OAAAA,MAAiBY,EAAA8B,UAAAF,GAAiB,GAEhFxC,YACAA,MAAA,YAQEA,MAPA,GAAA2C,EAAA,SAOA3C,CAPsB,GAAA4C,EAAA,UA2CxB5C,QACAA,MAAA,GAAA6C,EAAA,0BAAA7C,OAmCFA,QACAA,MAAA,yBAEFA,0BA5F0CA,MAAA,GAAAA,YAAA,0CAMlBA,MAAA,GAAAA,MAAA,UAAAM,EAAAwC,YAIlB9C,MAAA,GAAAA,MAAA,GAAAM,EAAAwC,YAAA,MAOA9C,cAAA,GAAAM,EAAAwC,WAAA,QCiBD,IAAMC,EAAmB,MAA1B,MAAOA,EAWXzG,YACmC0G,EACzBC,EACAC,GAFyBnG,KAAAiG,aACzBjG,KAAAkG,YACAlG,KAAAmG,YALFnG,KAAAoG,gBAAeC,KAAUC,IAM7B,CAEJC,WACEvG,KAAKmE,SAAWnE,KAAKwG,sBACrBxG,KAAK6E,QAAU,GACf7E,KAAKyG,YAAc,IAAIC,IAAgB,IACvC1G,KAAK2G,aAAe,IAAID,IAAgB,IACxC1G,KAAK4G,MAAQ,IAAIF,IAAgB,IAEjC,MAAMG,KAAkBC,KAAc,CAAC9G,KAAKyG,YAAazG,KAAK2G,eAAeI,QAC3EC,KAAI,EAAEjB,EAAYkB,KAChBA,EAAYC,OAAOC,GAAQA,EAAK3H,KAAK4H,oBAAoBtC,SAASiB,EAAWqB,wBAGjFpH,KAAKqH,cAAaP,KAAc,CAAC9G,KAAKyG,YAAaI,EAAiB7G,KAAK4G,QAAQG,QAC/EC,KAAI,EAAEjB,EAAYvB,EAAgBhB,MAAI,CAElCuC,aACAvB,iBACAhB,WAMNxD,KAAKsH,YACP,CAEAC,cACEvH,KAAKyG,YAAYe,WACjBxH,KAAK2G,aAAaa,WAClBxH,KAAK4G,MAAMY,UACb,CAEA7B,UAAUI,GACR/F,KAAKyG,YAAYgB,KAAK1B,EACxB,CAEAjC,OAAOa,GAEU,MAAXA,EAAKT,OACJS,EAAKN,cAAgBM,EAAKP,aAClBxB,OAAO8E,QAAQ1H,KAAKmG,UAAUwB,QAAQ,2DAGnD3H,KAAK4H,YAAYjD,EAAKT,IACxB,CAEAU,OAAOiD,GACLC,IAAaC,cAAcF,EAAQ7H,KAAK6E,QAC1C,CAEQ+C,YAAYC,GAClB,GAAc,MAAVA,EAEF,YADA7H,KAAKkG,UAAU8B,QAIjB,MAAMrD,EAAO3E,KAAK2G,aAAa3F,MAAMiB,KAAKgG,GAAKA,EAAE/D,KAAO2D,GAClDK,EAA2B,CAC/BhE,GAAIS,EAAKT,GAAGiE,WACZ3I,KAAMmF,EAAKnF,MAEbQ,KAAKkG,UAAU8B,MAAME,EACvB,CAEQZ,aACN,MAAMc,EAAS,UAEfpI,KAAKoG,aAAaiC,qBAAqB,uBADxB,qBACwD,MAAMC,UAAU,CACrFb,KAAOc,IACL,IAAKA,EAEH,YADAC,QAAQC,MAAMzI,KAAKmG,UAAUwB,QAAQ,mCAGvC,IAAKY,EAAKH,GAER,YADAI,QAAQC,MAAMzI,KAAKmG,UAAUwB,QAAQ,qCAAuC,IAAMS,GAGpF,MAAMM,EAAQH,EAAKH,GACbnB,EClIR,SAAU0B,EAAgBD,GAC9B,OAAKA,EAESA,EAAM1B,IAAIrC,IACtB,IAAIjB,EAAOiB,EAAKiE,KAAKC,OAAOC,QAAQ,MAAO,KAAKA,QAAQ,QAAS,KACjE,OAAIpF,EAAKqF,WAAW,OAClBrF,EAAOA,EAAKsF,UAAU,IAExBtF,EAAOA,EAAKuF,MAAM,KAAKC,MAAM,GAAG,GAAIC,KAAK,OAEZ,CAC3BjF,GAAIS,EAAKyE,GACT5J,KAAMmF,EAAK0E,KACX3F,OACAU,UAAWO,EAAK2E,QAChBjF,YAAaM,EAAK4E,aAdD,EAoBvB,CD6G4BZ,CAAgBD,GACpC1I,KAAK2G,aAAac,KAAKR,GACvB,MAAMzD,EC7GR,SAAUgG,EAAcd,GAC5B,IAAKA,EAAS,MAAO,GAErB,MAAMe,EAAQf,EAAM1B,IAAIrC,KAEpBO,SAAU,GACVhB,GAAIS,EAAKyE,GACT5J,KAAMmF,EAAK0E,KACXK,SAAU/E,EAAKgF,SACfvF,UAAWO,EAAK2E,QAChBjF,YAAaM,EAAK4E,aAKhB/F,EAAuB,GAC7B,UAAW2D,KAAQsC,EAAO,CACxB,IAAsB,IAAlBtC,EAAKuC,SAAiB,CACxBlG,EAAKoG,KAAKzC,GACV,SAGF,MAAM0C,EAASJ,EAAMxH,KAAKgG,GAAKA,EAAE/D,KAAOiD,EAAKuC,UACxCG,EAGHA,EAAO3E,SAAS0E,KAAKzC,GAFrB3D,EAAKoG,KAAKzC,GAMd,OAAO3D,CACT,CD8EqBgG,CAAcd,GAC3B1I,KAAK4G,MAAMa,KAAKjE,EAAI,EAEtBiF,MAAQA,IACND,QAAQC,MAAMA,GACdD,QAAQC,MAAM,GAAGzI,KAAKmG,UAAUwB,QAAQ,iCAAiCc,EAAMF,OAAM,GAG3F,CAEQ/B,sBACN,MAAMsD,EAAS,QACf,IAAIC,EAAyB/J,KAAKiG,WAAWvG,MAAMsK,SAAShK,KAAKiG,WAAWxG,OAAOwK,WAAWjJ,MAC9F,GAA0B,iBAAf+I,IAEXA,EAAaA,EAAWlB,OAAOzB,oBAC1B2C,EAAWhB,WAAWe,IAE3B,IAEE,OADWI,SAASH,EAAWd,MAAMa,GAAQ,GAAI,UAGjD,OAEJ,CAACK,SAAAnK,KAAA,mBAAAoK,iBAzHUpE,GAAmB/C,MAYpBoH,MAAepH,MAAAqH,MAAArH,MAAAsH,MAAA,EAAAJ,SAAAnK,KAAA,UAAAwK,EAAAC,IAAA,MAZdzE,EAAmB0E,UAAA,sBAAAC,YAAA,EAAAC,SAAA,CAAA3H,OAAA4H,MAAA,EAAAC,KAAA,EAAAC,OAAA,8jBAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IDrChChI,MAAA,EAAAkI,EAAA,2CAAAlI,MAAA,GAAAmI,EAAAnI,MAAA,IAAAiI,EAAA7D,aAAA,KAAA+D,mBCwBIC,KAAkBC,UAClBC,KAAcC,KACdC,KAAWC,eACXC,KACAC,KACAC,KAAcC,KACdC,KAAaC,KACbC,KACAC,KACAC,IAAe5B,KACf6B,KAAcC,OAAA,i2DAGLrG,CAAmB,KE5B1B,MAAOsG,EACX,WAAOC,CACL9M,EACAC,EACA8M,EACAC,EACAC,EACAC,GAMkBH,EAAOD,KAAKvG,EAAqB,CACjD4G,WAAW,EACXrE,KANuC,CACvC9I,SACAC,SAKA+M,mBACAI,OAAQ,MACRC,MAAO,UAGCC,cAAchG,QAAKiG,KAAK,IAAI1E,UAAWtH,IAC/C2L,EAAS3L,EAAK,GAGhB0L,EAAkBO,cACpB,kDCjCI,MAAOC,EAEX,+BAAOC,CAAyBC,GAC9B,OAAQA,GACN,KAAKC,IAAiBC,wBACpB,MAAO,0CACT,KAAKD,IAAiBE,UACtB,KAAKF,IAAiBG,aACpB,MAAO,yBACT,KAAKH,IAAiBI,cACpB,MAAO,GACT,KAAKJ,IAAiBK,aACpB,MAAO,8BACT,KAAKL,IAAiBM,cACpB,MAAO,+BACT,QACE,MAAO,GAEb,CAEA,iCAAOC,CAA2BC,EAAsBC,GACtDD,EAAaX,EAAqBa,yBAAyBF,EAAYC,GACvE,MAAM5F,EAASgF,EAAqBc,+BAA+BH,GAC7DI,EAAqB/F,EAAO+F,mBAC5BC,EAAqBhG,EAAOgG,mBAClC,IAAIC,EAAc,GAElB,MAAMC,EAAgBH,EAAmB1M,OAAS,EAC5C8M,EAAgBH,EAAmB3M,OAAS,EAClD,OAAI6M,GAAiBC,EACnBF,EAAc,GAAGF,EAAmB9E,KAAK,WAAW+E,EAAmB/E,KAAK,SACnEiF,EACTD,EAAcF,EAAmB9E,KAAK,MAC7BkF,IACTF,EAAc,IAAID,EAAmB/E,KAAK,UAGrCgF,CACT,CAEQ,+BAAOJ,CAAyBF,EAAsBC,GAC5D,MAAMQ,EAA0C,GAC1CC,EAAuBT,EAAgB5E,MAAM,EAAG4E,EAAgBU,QAAQ,MAE9EF,SAAcC,GAAwB,GACtCD,EAAcC,GAAsB3E,KAAK2E,GAEzCV,EAAWY,QAAQC,IAEjB,MAAMC,EADiBD,EAAUxF,MAAM,EAAGwF,EAAUF,QAAQ,MACrB1F,QAAQ,IAAK,IAE/CwF,EAAcK,KACjBL,EAAcK,GAAmB,IACjCL,EAAcK,GAAiB/E,KAAK8E,EAAS,GAMpCb,EAAW7G,IAAI0H,IAC1B,MAAME,EAAiBF,EAAUxF,MAAM,EAAGwF,EAAUF,QAAQ,MACtDG,EAAkBC,EAAe9F,QAAQ,IAAK,IAEpD,OAAIwF,EAAcK,GAAiBpN,OAAS,EACnCmN,EAEAE,GAKb,CAEQ,qCAAOZ,CAA+BH,GAC5C,MAAMI,EAA+B,GAC/BC,EAA+B,GAErCL,SAAWY,QAAQC,IACZA,EAAU5J,SAAS,KAGtBoJ,EAAmBtE,KAAK8E,EAAU5F,QAAQ,IAAK,KAF/CmF,EAAmBrE,KAAK8E,EAAS,GAM9B,CACLT,qBACAC,qBAEJ,mCC3FK,MAAMW,EAAiB,CAC5BC,QAAS,UACTC,OAAQ,8FCKV,MAGMxO,EAAM,IAAID,IAFG,uBADH,GAKV,MAAO0O,EAMX,gBAAO7I,CAAa8I,EAAwBC,EAA8BC,GACxE,IAAKD,EACH,OAAOC,EAET,MAAMC,EAA2BpP,KAAKqP,oBAAoBH,EAAiBD,GAC3E,GAAIG,EACF,OAAOA,EAAYE,MAErB,MAAMC,EAAkCvP,KAAKqP,oBAAoBH,EAAiBM,IAAaC,YAAYR,IAC3G,OAAIM,EACKA,EAAmBD,MAGrBJ,EAAgBQ,OAAO,IAAIJ,OAAS,IAC7C,CAEA,wBAAOK,CAAkBC,EAAsBX,GAE7C,OADkBjP,KAAKqP,oBAAoBO,EAAOX,IAE7CjP,KAAKqP,oBAAoBO,EAAOJ,IAAaC,YAAYR,GAChE,CAQQ,uBAAOY,CAAoBD,EAAoBX,GACrD,OAAKW,EACEA,EAAMF,OAAOxI,OAAO4I,GAAO9P,KAAK+P,iBAAiBD,EAAKb,IAD1C,EAErB,CAEQ,uBAAOc,CAAoBD,EAAkBb,GACnD,OAAOa,EAAIE,WAAW/N,KAAKgO,GACzBA,EAAEX,QAAUL,EAASiB,SAClBD,EAAEX,QAAU,IAAIL,EAASiB,WACxBjB,EAASiB,UAAYjB,EAASkB,SAAuB,MAAZF,EAAEX,MACnD,CAGA,0BAAOD,CAAuBO,EAAoBX,GAEhD,OAAOjP,KAAK6P,iBAAiBD,EAAOX,GAAU,EAChD,CAEA,2CAAOmB,CAAqCR,EAAsBX,GAChE,QAAKW,GACE5P,KAAKqQ,wBAAwBT,EAAOX,GAAU1N,OAAS,CAChE,CAMQ,8BAAO8O,CAA2BT,EAAoBU,GAC5D,OAAKV,EACEA,EAAMF,OACVxI,OAAO4I,GAAOA,EAAIE,WAAW/N,KAAKgO,GAAMA,EAAEX,QAAUgB,EAAMJ,SAAyB,MAAZD,EAAEX,OAAiBgB,EAAMJ,UAAYI,EAAMH,UAFlG,EAGrB,CAIA,uBAAOI,CAAiBX,EAAsBX,GAC5C,OAAOjP,KAAKqQ,wBAAwBT,EAAOX,GAAU1N,OAAS,CAChE,CAGA,0BAAOiP,CAAoBZ,EAAsBX,GAC/C,OAAOjP,KAAKqQ,wBAAwBT,EAAOX,GAAU1N,MACvD,CAGA,qCAAOkP,CAA+Bb,EAAsBX,GAC1D,OAAKW,EACE5P,KAAKqQ,wBAAwBT,EAAOX,GAAU/H,OAAOwJ,GAAgB,IAAXA,EAAEpB,OAA0B,MAAXoB,EAAEpB,QAAgB/N,OADjF,CAErB,CAEA,uBAAOoP,CAAiBf,EAAsBX,GAC5C,QAAKW,GACEA,EAAMF,OAAOxI,OAAO4I,GAAOA,EAAIE,WAAW/N,KAAKgO,GAAKA,EAAEX,QAAU,IAAIL,MAAa1N,OAAS,CACnG,CAEA,wBAAOqP,CAAkBhB,EAAsBiB,GAC7C,QAAKjB,GACEA,EAAMF,OAAOxI,OAAO4I,GAAOA,EAAIE,WAAW/N,KAAKgO,GAAKA,EAAEX,QAAUuB,GAA+B,MAAZZ,EAAEX,QAAgB/N,OAAS,CACvH,CAGQ,sBAAOuP,CACbC,EACAC,EACAC,GAEA,MAAMC,EAAqC,GAC3C,GAA0C,IAAtCC,OAAOC,KAAKL,GAAexP,OAAc,CAC3C,MAAM8P,EAA+B,IAAKJ,GAC1CC,SAAcF,GAAgBK,EACvBH,EAGT,UAAWI,KAAOH,OAAOC,KAAKL,GAC5B,GAAIO,IAAQN,EAAc,CACxB,MAAMK,EAA+B,IAAKJ,GAC1CC,EAAcI,GAAOD,MAChB,CACL,MAAMA,EAA+B,IAAKN,EAAcO,IACxDJ,EAAcI,GAAOD,EAIzB,GAAmC,MAA/BN,EAAcC,GAAuB,CACvC,MAAMK,EAA+B,IAAKJ,GAC1CC,EAAcF,GAAgBK,EAEhC,OAAOH,CACT,CAGA,6BAAOK,CACLC,EACAC,EACAxC,GAEA,MAAM/N,EAAIX,EAAIY,GAAG,yBAA0B,CAAEqQ,YAAWC,eAAcxC,aAEhEyC,EAAqC,GAC3CP,cAAOC,KAAKI,GAAW/C,QAAQuC,IAC7B,MAAMW,EAAeF,EAAaT,GAGlC,QAAqBvP,IAAjBkQ,EAIF,GAH+B3R,KAAKoQ,qCAAqCoB,EAAUR,GAAe/B,GAGtE,CAC1B,MAAM2C,EAA2B,IAC5BJ,EAAUR,GACbtB,OAAQ8B,EAAUR,GAActB,OAAO1I,IAAI8I,GACnB9P,KAAK+P,iBAAiBD,EAAKb,GAG7C,IACGa,EACHR,MAAOqC,GAEP7B,IAIR4B,EAAcV,GAAgBY,MACzB,CACL1Q,EAAEV,EAAE,kCAAmC,CAAEmR,iBACzC,MAAME,EAAcC,IAASC,OAAOJ,EAAc,CAACK,IAAaD,OAAO9C,EAASiB,WAC1E+B,EAA8B,IAC/BT,EAAUR,GACbtB,OAAQ,IAAI8B,EAAUR,GAActB,OAAQmC,IAE9CH,EAAcV,GAAgBiB,MAE3B,CACL,MAAMZ,EAA+B,IAAKG,EAAUR,IACpDU,EAAcV,GAAgBK,KAG3BK,CACT,CAGA,2BAAOQ,CACLC,EACAnB,EACAoB,EACAnD,EACAoD,GAGA,IAAIX,EAAqC,GACrCY,EAAmBrD,EAASiB,QAE5BmC,IACFC,EAAmB,IAAIrD,EAASiB,WAElC,MAAMe,EAA2B,IAC5BkB,EAAcnB,GAAetB,OAAQyC,EAAcnB,GAActB,OAAO1I,IAAI8I,GACvD9P,KAAK+P,iBAAiBD,EAAKb,GAG7C,IACGa,EAEHR,MAAO8C,EAEPpC,WAAYF,EAAIE,WAAWhJ,IAAIiJ,GACGA,EAAEX,QAAUL,EAASiB,SAChDD,EAAEX,QAAU,IAAIL,EAASiB,WACxBjB,EAASiB,UAAYjB,EAASkB,SAAuB,MAAZF,EAAEX,MAE7C,CAAEA,MAAOgD,GACTrC,IAGNH,IAIR4B,SAAgB1R,KAAK8Q,gBAAgBqB,EAAenB,EAAcC,GAC3DS,CACT,CAEA,wBAAOa,CACLJ,EACAK,EACAxB,EACAyB,GAGA,IAAIf,EAAqC,GACzC,MAAMT,EACkC,IAAtCE,OAAOC,KAAKe,GAAe5Q,QAAiB4Q,EAAcnB,GAMtD,IACGmB,EAAcnB,GACjBtB,OAAQ,IAAIyC,EAAcnB,GAActB,OAAQ8C,GAChDE,KAAMD,GARN,IACGN,EAAcnB,GACjBtB,OAAQ,CAAC8C,GACTE,KAAMD,GAOZf,SAAgB1R,KAAK8Q,gBAAgBqB,EAAenB,EAAcC,GAC3DS,CACT,CAGA,4BAAOiB,CACLR,EACAnB,EACA4B,EACAC,EACAhC,EACAwB,GAGA,IAAIX,EAAqC,GACrCY,EAAmBM,EAEnBP,IACFC,EAAmB,IAAIM,KAGzB,MAAM3B,EAA2B,IAC5BkB,EAAcnB,GAAetB,OAAQyC,EAAcnB,GAActB,OAAO1I,IAAI8L,GAC7CA,EAAS9C,WAAW/N,KAAKgO,GAAKA,EAAEX,QAAUuD,GACpEA,IAA2BhC,GAA+B,MAAZZ,EAAEX,OAElD,IACGwD,EAEH9C,WAAY8C,EAAS9C,WAAW+C,OAAO,CAAEzD,MAAOgD,KAEhDQ,IAIRpB,SAAgB1R,KAAK8Q,gBAAgBqB,EAAenB,EAAcC,GAC3DS,CACT,CAGA,+BAAOsB,CAAyBC,EAAiCjC,EAAsB/B,GACrF,MAAM8B,EAAgBkC,EAChBC,EAAkB,CAACjE,EAAU,IAAIA,KAEjCjO,EAAQ+P,EAAcC,GAActB,OAAOzN,KAAK6Q,GAC5BA,EAAS9C,WAAWmD,KAAKzE,GAAawE,EAAgBpO,SAAS4J,EAAUY,SAKnG,IAAKtO,EAEH,MAD4C,IAAK+P,GAInD,IAAIkB,EACJ,OAAIjR,EAAMgP,WAAWzO,OAAS,EAE5B0Q,EAAe,IACVlB,EAAcC,GACjBtB,OAAQqB,EAAcC,GAActB,OAAO1I,IAAI8L,GACrBA,EAAS9C,WAAWmD,KAAKzE,GAAawE,EAAgBpO,SAAS4J,EAAUY,QAG1F,IACFwD,EACH9C,WAAY8C,EAAS9C,WAAW9I,OAAOwH,IAAcwE,EAAgBpO,SAAS4J,EAAUY,SAJ7DwD,IAQI,IAA5B9R,EAAMgP,WAAWzO,SAE1B0Q,EAAe,IACVlB,EAAcC,GACjBtB,OAAQqB,EAAcC,GAActB,OAAOxI,OAAO4L,IACxBA,EAAS9C,WAAWmD,KAAKzE,GAAawE,EAAgBpO,SAAS4J,EAAUY,WAMjFtP,KAAK8Q,gBAAgBC,EAAeC,EAAciB,EAE1E,CAkBA,mBAAOmB,CAAaC,EAA0BvF,EAAyB+C,EAAyByC,GAC9F,GAAiB,MAAbD,EAAqB,OAEzB,IAAIE,EAAiB,CAACzF,EAAiB,IAAIA,KACvC0F,EAAYxT,KAAKyT,uBAAuBJ,EAAWE,GAKvD,YAJkB9R,IAAd+R,IAEJD,EAAiB,CAAC,KAClBC,EAAYxT,KAAKyT,uBAAuBJ,EAAWE,QACjC9R,IAAd+R,GAAkCA,EAElCF,IAASzE,IAAeE,QAE5BwE,EAAiB,CAAC1C,EAAiB,IAAIA,KACvC2C,EAAYxT,KAAKyT,uBAAuBJ,EAAWE,QACjC9R,IAAd+R,IAEJA,EAAYH,EAAU3D,OAAO,IAAIJ,OAC1BkE,QAPP,CAQF,CAEA,2BAAOE,CAAwBL,EAA0B3E,GACvD,OAAO2E,EAAUpR,KAAKyO,GAAKA,EAAEV,WAAW/N,KAAK0R,GAAKA,EAAErE,QAAUZ,GAChE,CAEQ,6BAAO+E,CAAuBJ,EAA0BxF,GAI9D,OAHcwF,EAAU3D,OAAOzN,KAC7B6Q,KAAcA,EAAS9C,WAAW/N,KAAKyM,GAAab,EAAW/I,SAAS4J,EAAUY,UACjFA,KAEL,oCC3XK,MAAMjC,EAAmB,CAC9BE,UAAW,YACXE,cAAe,gBACfH,wBAAyB,0BACzBI,aAAc,eACdC,cAAe,gBACfH,aAAc,uGCAhB,MACMvN,EAAa,YAEb2T,EAAa,YACbC,EAAc,WAYb,IAAMC,EAAU,MAAjB,MAAOA,UAAkBC,IAmB7BxU,YAAoByU,GAClBC,MAAM,IAAI3T,IAAUL,GApCR,IAmCMD,KAAAgU,WAlBbhU,KAAAkU,UAASA,OAAe,IAExBlU,KAAAmU,OAAQ,EAGPnU,KAAAoU,iBAA6B,GAE7BpU,KAAAqU,cAAaC,OAAOhV,KAEpBU,KAAAgK,SAAWhK,KAAKqU,WAAW3U,MAAMsK,SACjChK,KAAAuU,YAAcvU,KAAKqU,WAAW5U,OAE5BO,KAAAwU,cAAaF,OAAOG,KAQ5BzU,KAAKO,IAAIC,EAAE,cACb,CAEA+G,cACEvH,KAAK0U,SACP,CAGOC,aAAaC,GAClB,OAAA5U,KAAKO,IAAIC,EAAE,gBACXR,KAAK6U,SAAWD,EACT5U,IACT,CAQO8U,aAAanI,GAClB,OAAA3M,KAAKO,IAAIC,EAAE,gBACXR,KAAK2M,SAAWA,EAChB3M,KAAKmU,OAAQ,EACNnU,IACT,CAEO+U,KAAKvV,EAAcwV,EAAcb,GACtC,OAAAnU,KAAKO,IAAI0U,OAAO,GAAGjV,KAAKO,IAAIf,QAAQA,KAEvB,MAAT2U,IACFnU,KAAKmU,MAAQA,GACfnU,KAAKkV,WAAWF,GACThV,IACT,CAEOmV,aAEL,MAAMjU,EAAIlB,KAAKO,IAAI6U,QAAUpV,KAAKO,IAAM,IAAID,IAAUL,GAAY,GAClEoV,gBAAO,KACL,MAAMC,EAAStV,KAAKkU,SACpBhT,EAAEV,EAAE,SAASR,KAAKgV,2BAA2BM,IAAQ,EACpD,CAAEtB,SAAUhU,KAAKgU,WACbhU,IACT,CAGOkV,WAAWF,GAChBhV,KAAKgV,KAAOA,GAAQ,GACpBhV,KAAKoU,iBAAmBpU,KAAKuV,kBAAkBvV,KAAKgV,OAIhDhV,KAAKmU,OAASnU,KAAK2M,WACrB3M,KAAKwV,iBAEPxV,KAAKyV,UACP,CAKAC,UAGE,IAAKC,EAAgB3V,KAAKgV,MACxB,OAAOhV,KAAKgV,KAEd,IAAIhU,EAyER,SAAS4U,EAA8B5U,GACrC,OAAOA,EAAM8H,QAAQ,gBAAiB,CAAC+M,EAAOnW,IAAU,IAAIA,EAAMoW,iBACpE,CA3EgBF,CAA8B5V,KAAKgV,MAC/C,OAAuB,MAAnBhV,KAAKwU,aACPxT,EAAQA,EACL8H,QAAQ,cAAe9I,KAAKwU,WAAW/U,OAAOsW,MAAM5N,YACpDW,QAAQ,eAAgB9I,KAAKwU,WAAW/U,OAAOuW,OAAO7N,aAEnC,MAApBnI,KAAKuU,cACPvT,EAAQA,EACL8H,QAAQ,SAAU9I,KAAKuU,YAAY0B,YACnCnN,QAAQ,OAAQ9I,KAAKuU,YAAY2B,SAAS/N,aAE/CnI,KAAKoU,iBAAiB3F,QAAQ,CAACvM,EAAG+F,KAChC,MAAMkO,EAAenW,KAAKgK,SAASoM,eAAelU,IAAMlC,KAAKgK,SAAS9H,IAAMlC,KAAKgK,SAAS9H,GAAGlB,MAAQhB,KAAKgK,SAAS9H,GAAGlB,MAAQ,GACxHqV,EAAUrW,KAAK6U,SAAS3S,EAAGiU,GACjCnV,EAAQA,EAAM8H,QAAQ,IAAM5G,EAAE4T,cAAgB,IAAKO,EAAO,GAErDrV,CACT,CAGQuU,kBAAkBP,GAExB,IAAKA,IAASW,EAAgBX,GAC5B,MAAO,GAET,MAAM9M,EAAmB,GACnBoO,EAAUtB,EAAKa,MAAMjC,GAC3B,OAAI0C,EACFA,EAAQ7H,QAASxE,IACf,MAAMsM,EAAatM,EAAUnB,QAAQ+K,EAAa,IAClD3L,EAAO0B,KAAK2M,EAAU,GAIxBrO,EAAO0B,KAAK5J,KAAKgV,MACZ9M,CACT,CAGQ2M,SAASvD,EAAatQ,GAC5B,OAAOA,CACT,CAGQyU,WACN,MAAMe,EAAWxW,KAAK0V,UAClB1V,KAAKkU,WAAasC,IACpBxW,KAAKkU,OAAOuC,IAAID,GAChBxW,KAAK2M,WAAW6J,GAEpB,CAMQhB,iBAENxV,KAAKoU,iBAAiB3F,QAAQmB,IAC5B,MAAMjQ,EAAUK,KAAKgK,SAAS4F,GAC9B,IAAKjQ,EAAS,OACd,MAAM+W,EAAW/W,EAAQgX,aAAarO,UAAUsO,GAAK5W,KAAKyV,YAC1DzV,KAAK6W,cAAcpW,IAAIiW,EAAQ,EAEnC,CAACvM,SAAAnK,KAAA,mBAAAoK,iBAzJU0J,GAAS7Q,aAAA,EAAAkH,SAAAnK,KAAA,WAAA8W,EAAAC,IAAA,OAATjD,EAASkD,QAATlD,EAASmD,mBAATnD,CAAU,KA6JvB,SAAS6B,EAAgBX,GACvB,OAAQA,GAAQ,IAAIlQ,SAAS,IAC/B,2IChLM,MAAOoS,EACX3X,YAAmB2Q,EAAwBC,GAAxBnQ,KAAAkQ,UAAwBlQ,KAAAmQ,SAAmB,CAI9DiD,aAAgBlE,EAAoCC,EAAkB,MACpE,OAAOH,IAAoB7I,UAAanG,KAAMkP,EAAgCC,EAChF,CAEO7M,QAAW6U,GAChB,OAAOnX,KAAKoX,WAAc,CAACD,GAC7B,CAEOC,WAAcC,GACnB,GAAqB,MAAjBA,GAAkD,IAAzBA,EAAc9V,QAAoC,MAApB8V,EAAc,GACvE,MAAO,GAET,MAAMC,EAA8B,GAEpC,UAAWnQ,KAAQkQ,EACjB,GAAqB,SAAjBlQ,EAAKuL,KAAKtJ,GAEd,UAAY5J,EAAM+X,KAAWpG,OAAOqG,QAAQrQ,EAAKsQ,YAAa,CAC5D,MAAMzW,EAAQhB,KAAKoT,aAAamE,GAChCD,EAAO9X,GAAQwB,EAKnB,UAAWmG,KAAQkQ,EACjB,GAAqB,SAAjBlQ,EAAKuL,KAAKtJ,GAEd,UAAY5J,EAAM+X,KAAWpG,OAAOqG,QAAQrQ,EAAKsQ,YAAa,CAC5D,MAAMzW,EAAQhB,KAAKoT,aAAamE,GAED,MAAhBD,EAAO9X,KACI,MAATwB,GAA2B,KAAVA,KAGlCsW,EAAO9X,GAAQwB,GAInB,OAAOsW,CACT,CAEAI,cAAcC,GACZ,MAAMC,EAAmC,GACzC,UAAYpY,EAAM+X,KAAWpG,OAAOqG,QAAQG,GAC1CC,EAAWpY,GAAQQ,KAAKoT,aAAamE,GACvC,OAAOK,CACT,ECxDK,IAAMC,EAAe,MAAtB,MAAOA,EAAe1N,SACXnK,KAAA8X,YAAc,OAAM3N,SACpBnK,KAAA+X,iBAA2C,CACxDC,IAAK,YACLC,KAAM,YACNC,IAAK,aACLC,KAAM,aACNC,IAAK,kBACLC,KAAM,kBACNC,IAAK,WACLC,IAAK,aACLC,IAAK,aACLC,IAAK,aACLC,KAAM,aACNC,IAAK,aACLC,IAAK,aACLC,IAAK,eACLC,IAAK,eACLC,IAAK,YACLC,KAAM,YACNC,IAAK,YACLC,IAAK,YACLC,IAAK,aACNhP,SACcnK,KAAAoZ,cAAwC,CACrDC,IAAK,UAGP,mBAAOC,CAAaC,GAClB,OAAOA,EAASvQ,UAAUuQ,EAASC,YAAY,KAAO,GAAGpS,mBAC3D,CAEA,mBAAOqS,CAAaF,GAClB,MAAMG,EAAM1Z,KAAKsZ,aAAaC,GAC9B,OAAOvZ,KAAKoZ,cAAcM,IAAQ1Z,KAAK+X,iBAAiB2B,IAAQ1Z,KAAK8X,WACvE,CAEA,kBAAO6B,CAAYJ,GACjB,OAA0D,MAAnDvZ,KAAKoZ,cAAcpZ,KAAKsZ,aAAaC,GAC9C,CAEA,cAAOK,CAAQL,GACb,OAAOvZ,KAAK6Z,aAAaC,KAAKP,EAChC,CAEQ,iBAAOM,GACb,MAAO,kGACT,SA/CWhC,CAAe,6BCOtB,MAAOkC,EAGX,+BAAOC,CACLxa,EACAya,EACApa,EACAqa,EACAC,GAGA,MAAMjZ,EADM,IAAIZ,IAAU,qBAZd,GAaEa,GAAG,oBAAqB,CAAE3B,OAAMya,YAAWpa,WAAUqa,aAAYC,gBAEzEC,EAAaF,GAAYG,UAAU7a,GACzC,GAAI2a,QAA8B1Y,IAAf2Y,EACjB,OAAOlZ,EAAEoZ,MAAM,2CAEjB,IAAInL,EAAeiL,GAAYjS,YAActI,EAAS0a,aAItD,OAFArZ,EAAEqW,OAAO,CAAEpI,iBAEH8K,GACN,KAAKzX,IAAiBgY,eACpB,MAAuC,SAAhCrL,GAAc2G,cACvB,KAAKtT,IAAiBiY,gBACpB,OAAuB,MAAhBtL,GAAyC,KAAjBA,EACI,SAA/BA,EAAa2G,cACb,KACN,KAAKtT,IAAiBkY,gBACpB,OAAuB,MAAhBvL,GAAyC,KAAjBA,EAC3B,IAAIwL,KAAKxL,GAAcyL,SACvB,KACN,KAAKpY,IAAiBqY,cACtB,KAAKrY,IAAiBsY,eACtB,KAAKtY,IAAiBuY,aACpB,OAAuB,MAAhB5L,GAAyC,KAAjBA,EAC1B6L,MAAMC,OAAO9L,IAAwC,KAAvB8L,OAAO9L,GACtC,KACN,KAAK3M,IAAiB0Y,cACtB,KAAK1Y,IAAiB2Y,YACtB,KAAK3Y,IAAiB4Y,oBACtB,KAAK5Y,IAAiB6Y,aAEpB,GAAoB,MAAhBlM,GAAyC,KAAjBA,EAC1B,MAAO,GAQT,GAJIA,EAAarK,SAAS,OACxBqK,EAAeA,EAAarG,QAAQ,UAAW,MAG7CqG,EAAarK,SAAS,OAASqK,EAAarK,SAAS,KAAM,CAC7D,MAAMwW,EAAQnM,EAAalG,MAAM,KAAKjC,IAAIuU,GAAQA,EAAK1S,QACvDsG,EAAeqM,KAAKC,UAAUH,GAIhC,OAAOnM,EAAapG,WAAW,KAC3ByS,KAAKE,MAAMvM,GACX,CAACA,EAAarG,QAAQ,KAAM,KAClC,QACE,OAAOqG,GAAgB,GAE7B,UCvEI,MAAOwM,EAEH,sBAAOC,CAAgBC,EAAmBC,GAEhD,IAAKD,EAAa,OAAOA,EAEzB,KAAOA,EAAU7S,UAAU,EAAG,KAAO8S,GACnCD,EAAYA,EAAU7S,UAAU,GAElC,OAAO6S,CACT,CAEQ,oBAAOE,CAAcF,EAAmBC,GAE9C,IAAKD,EAAa,OAAOA,EAEzB,KAAOA,EAAU7S,UAAU6S,EAAUta,OAAS,EAAGsa,EAAUta,UAAYua,GACrED,EAAYA,EAAU7S,UAAU,EAAG6S,EAAUta,OAAS,GAExD,OAAOsa,CACT,CAEQ,mBAAOG,CAAaH,GAE1B,IAAKA,EAAa,OAAOA,EAEzB,MAAMI,EAAW,IAMjB,OAAOJ,EACJ/S,QANe,mBAMImT,GACnBnT,QANe,wBAMImT,GACnBnT,QANgB,QAMImT,GACpBnT,QANuB,gDAMImT,GAC3BnT,QANuB,UAMImT,EAChC,CAGA,mBAAOC,CAAaL,GAElB,OAAKA,IAGLA,EAAY7b,KAAK4b,gBAAgBC,EAAW,KAG5CA,EAAY7b,KAAK+b,cAAcF,EAAW,KAG1CA,EAAY7b,KAAK4b,gBAAgBC,EAAW,MAG5CA,EAAY7b,KAAK+b,cAAcF,EAAW,MAG9B7b,KAAKgc,aAAaH,GAGhC,CAGA,mBAAOM,CAAaN,GAElB,OAAKA,EAME7b,KAAKkc,aAAaL,GAAW/S,QADlB,MADE,KAJK+S,CAO3B,gDCzEI,MAAO7J,EAGX,aAAOD,CAAO/Q,GACZ,MAAO,CAAEsO,MAAOtO,EAClB,iDCFI,MAAO8Q,EAIX,aAAOC,CAAU/Q,EAAU6M,GAKzB,MAJ8B,CAC5ByB,MAAOtO,EACPgP,WAAYnC,EAGhB,CAEA,cAAOuO,CAAWC,GAKhB,OAJelL,OAAOqG,QAAQ6E,GAAWrV,IAAI,EAAEsJ,EAAOtP,MACpD,MAAM6M,EAAayC,EAAMrH,MAAM,KAAKjC,IAAIsV,GAAQtK,IAAaD,OAAOuK,IACpE,OAAOtc,KAAK+R,OAAO/Q,EAAO6M,EAAU,EAGxC,uHCTK,IAAM0O,EAAwB,MAA/B,MAAOA,UAAgCC,IAE3Cjd,cACE0U,MAAM,CAAEhU,WANO,0BAMKE,SAPR,IAUKH,KAAAyc,MAAStV,GAA8BA,EAAKuV,OAE5C1c,KAAA2c,YAAexV,QAC7BqI,IAAaoN,MAChBC,QAAS1V,EAAK+I,WACX/I,IAqCLnH,MAAA8c,EAAqB,IAAIC,IAezB/c,MAAAgd,EAA0B,IAAID,GA3D9B,CAUAE,QAAQP,EAAgBvM,EAAiBD,EAAiBgN,GACxDld,KAAKS,IAAI,CACPic,SACAxM,UACA2M,QAAS3M,EACTC,UACA+M,cAEJ,CAEAC,WAAWT,EAAgBU,GACzBpd,KAAK0C,OAAOga,EAAQ,CAAExM,QAASkN,GACjC,CAMAC,iBAAiBX,GACf,OAAO1c,KAAKsd,aAAaZ,GACtB3V,QACCC,KAAKiI,GAAa,IAAIiI,KAAajI,EAASiB,QAASjB,EAASkB,WAAQ,EAEtEoN,KAAY,GAElB,CAEAC,gBAAgBd,GAEd,OAAO1c,MAAK8c,EAAmBW,YAAYf,EAAQ,KACjD,MAAMzN,EAAWjP,KAAK0d,UAAUhB,GAChC,OAAO,IAAIxF,KAAajI,IAAWiB,QAASjB,IAAWkB,QAAO,EAElE,CACA2M,GAGAQ,aAAaZ,GACX,OAAO1c,KAAK2d,OAAO5W,QACjBC,KAAI4W,GAAqBA,EAAkBlB,KAAO,EAClDmB,KAAgBC,GAAKA,IAAC,EACtBP,KAAY,GAEhB,CAGAQ,oBAAoBrB,GAClB,OAAO1c,MAAKgd,EAAwBS,YAAYf,EAAQ,IAAM1c,KAAKge,QAAQtB,IAASQ,aAAc,EACpG,CACAF,GAIAiB,iBAAiBvB,EAAgBQ,GAC/Bld,KAAK0C,OAAOga,EAAQ,CAAEQ,cACxB,CAAC/S,SAAAnK,KAAA,mBAAAoK,iBArEUmS,EAAuB,EAAApS,SAAAnK,KAAA,WAAAke,EAAAnH,IAAA,OAAvBwF,EAAuBvF,QAAvBuF,EAAuBtF,UAAAkH,WADV,gBACb5B,CAAwB,kFCD/B,MAAO6B,EAEXC,GAGAC,GAGA,SAAcN,GACZ,OAAOhe,MAAKqe,CACd,CAGA,QAAcE,GACZ,OAAOve,MAAKse,CACd,CAeA/e,YAAYif,GA5BZxe,MAAAqe,KAASnK,OAA6B,IAGtClU,MAAAse,KAAQG,OAAS,IAAMtN,OAAOoG,OAAOvX,MAAKqe,MAiBhCre,KAAAyc,MAAiCtV,GAAUA,EAAajD,GAExDlE,KAAA2c,YAAyCxV,GAASA,EA4G5DnH,MAAA0e,EAAoB,IAAI3B,IArGtB/c,KAAKO,IAAM,IAAID,IAAUke,EAAQve,YAnClB,kBAmC4Cue,EAAQre,UApC9C,GAqCrBH,KAAKO,IAAIC,EAAE,0BAA2B,CAAEge,YACxCxe,KAAKR,KAAOgf,EAAQve,UACtB,CAIAQ,IAAI0G,GACF,MAAMjG,EAAIlB,KAAKO,IAAIY,GAAG,MAAO,CAAEgG,SAC/B,IAAKA,EACH,OAAOjG,EAAEyd,IAAI,KAAM,gBAGrB3e,MAAKqe,EAAO5H,IAAI,IACXzW,MAAKqe,IACR,CAACre,KAAKyc,MAAMtV,IAAQnH,KAAK2c,YAAYxV,KAEvCjG,EAAEyd,IAAI,KAAM,QACd,CAEAC,QAAQnV,GACN,IAAIvI,EAAIlB,KAAKO,IAAIY,GAAG,UAAW,CAAEsI,UACjC,IAAKA,GAAyB,GAAhBA,EAAMlI,OAClB,OAAOL,EAAEyd,IAAI,KAAM,0BAGrB,MAAMzW,EAASuB,EAAMoV,OAAO,CAACC,EAAK3X,SAC7B2X,EACH,CAAC9e,KAAKyc,MAAMtV,IAAQnH,KAAK2c,YAAYxV,KACnC,IAAKnH,MAAKqe,MAEdre,MAAKqe,EAAO5H,IAAIvO,GAChBhH,EAAEyd,IAAI,KAAM,QACd,CAEAjc,OAAOwB,EAAUiD,GACf,MAAMjG,EAAIlB,KAAKO,IAAIY,GAAG,SAAU,CAAE+C,KAAIiD,SACtC,IAAKjD,IAAOiD,EACV,OAAOjG,EAAEyd,IAAI,KAAM,sBAErB,MAAMI,EAAS/e,KAAK8C,IAAIoB,GACxB,IAAK6a,EACH,OAAO7d,EAAEyd,IAAI,KAAM,gBAAgBza,wBAGrC,MAAM8a,EAAU,IAAKD,KAAW5X,GAGhCnH,MAAKqe,EAAO5H,IAAI,IACXzW,MAAKqe,IACRY,CAAC/a,GAAK8a,IAER9d,EAAEyd,IAAI,KAAM,UACd,CAEAO,OAAOhb,GACL,MAAMhD,EAAIlB,KAAKO,IAAIY,GAAG,SAAU,CAAE+C,QAC1B+a,CAAC/a,GAAK0S,KAAMuI,GAAiBnf,MAAKqe,IAC1Cre,MAAKqe,EAAO5H,IAAI0I,GAChBje,EAAEyd,IAAI,KAAM,UACd,CAEAS,aACE,MAAMle,EAAIlB,KAAKO,IAAIY,GAAG,cACtBnB,MAAKqe,EAAO5H,IAAI,IAChBvV,EAAEyd,IAAI,KAAM,UACd,CAMA7b,IAAIoB,GACF,MAAMgE,EAASlI,MAAKqe,IAASna,GAC7B,OAAAlE,KAAKO,IAAIC,EAAE,OAAO0D,SAAsB,MAAVgE,EAAiB,MAAQ,IAAM,SACtDA,CACT,CAEAmX,SACE,MAAMnX,EAASlI,MAAKse,IACpB,OAAAte,KAAKO,IAAIC,EAAE,oBAAyB0H,EAAO3G,gBACpC2G,CACT,CAEAoX,QAAQC,GACN,MAAMre,EAAIlB,KAAKO,IAAIY,GAAG,UAAW,CAAEoe,QAC7BrX,EAASqX,EACZvY,IAAI9C,GAAMlE,MAAKqe,IAASna,IACxBgD,OAAOC,GAAgB,MAARA,GAClB,OAAOjG,EAAEM,EAAE0G,EAAQ,SAASA,EAAO3G,eACrC,CAMAmc,UAAUxZ,GACR,MAAMgE,EAASlI,MAAK0e,EAAkBc,oBAAoBtb,EAAI,IAAMlE,KAAK8C,IAAIoB,IAC7E,OAAAlE,KAAKO,IAAIC,EAAE,aAAa0D,KAAO,CAAEub,MAAOvX,EAAOuX,QACxCvX,EAAOgM,MAChB,CACAwK,GAGAgB,cAAcH,GACZ,MAAMI,KAAMlB,OACV,IAAMc,EAAIvY,IAAI9C,GAAMlE,KAAK8C,IAAIoB,IAAKgD,OAAOC,GAAgB,MAARA,GACjD,CAAEyY,MAAOC,MAEX,OAAA7f,KAAKO,IAAIC,EAAE,kBAAmB,CAAE+e,QACzBI,CACT,CAEAG,eACE,MAAMvB,EAAOve,MAAKse,EAClB,OAAAte,KAAKO,IAAIC,EAAE,0BAA0B+d,IAAOhd,gBACrCgd,CACT,sEC1JI,MAAO/B,UAAwE4B,IAGnF2B,MAAUC,MAAahgB,KAAKge,OAE5BiC,MAASD,MAAahgB,KAAKue,MAG3B,UAAcZ,GACZ,OAAO3d,MAAK+f,CACd,CAEA,SAAcG,GACZ,OAAOlgB,MAAKigB,CACd,CAEA1gB,YAAYif,GACVvK,MAAMuK,EACR,CAEA2B,WACE,OAAOngB,KAAKkgB,KACd,CAEAE,SAASb,GACP,OAAOvf,KAAK2d,OAAO5W,QACjB8W,KAAgBwC,GAAOd,EAAIvY,IAAI9C,GAAMmc,EAAInc,IAAKgD,OAAO4W,GAAU,MAALA,IAE9D,2GCjBI,MAAOwC,EAMX,0BAAOC,CAAoBC,EAAsBC,EAA6BvG,GAE5E,MAAMwG,EAAkB,IADPF,EAAOpJ,WAAgCqJ,EAAYE,WAEpED,SAAgBE,cAAgB,GAChCF,EAAgBG,mBAAqB,GACrCH,EAAgBI,WAAa,GAC7BJ,EAAgBK,QAAU,GAC1BL,EAAgBM,mBAAqB,GACrCN,EAAgBO,QAAU,GAC1BP,EAAgBQ,OAAS,GACzBR,EAAgBS,OAAS,GACzBT,EAAgBU,WAAaphB,KAAKqhB,oBAAoBZ,EAAaD,GACnEE,EAAgBY,gBAAkBpH,EAAWqH,iBAAkB,EAC/Db,EAAgBc,aAAetH,EAAWuH,UAAW,EAC9Cf,CACT,CAEA,0BAAOW,CAAoBZ,EAA6BxR,GACtD,IAEE,MAAMyS,EAAOjB,EAAYE,SAAS1e,KAAK0f,GAAmC,gBAAvBA,EAASjP,KAAKrJ,MAAiD,mBAAvBsY,EAASjP,KAAKrJ,MACzG,IAAIuY,EAASF,EACT1S,IAAoBW,kBAAkB+R,EAAKjK,WAAWsJ,MAAO9R,IAAWK,MACxE,KACJsS,SAAQA,GAASnB,EAAYpX,KACtBuY,QAEP,OAAOnB,EAAYpX,KAEvB,EAII,MAAOwY,EAEX,8BAAOC,CAAwBjiB,GAC7B,MAAMkiB,EAAcC,EAAcC,uBAAuB,IAAKpiB,IAE9DkiB,EAAY1Y,OAAS,GACrB0Y,EAAYG,cAAgB,GAC5BH,EAAYd,QAAU,GACtBc,EAAYI,YAAa,EACzBJ,EAAYK,YAAa,EACzBL,EAAYM,sBAAuB,EACnCN,EAAYzY,WAAY,EACY,MAAhCyY,EAAYO,mBACdP,EAAYQ,UAAYR,EAAYO,wBAC7BP,EAAYO,kBAErBP,EAAYS,WAAa,GACzB,IAAI9hB,EAAQE,IAAkBC,YAAYiC,IAAIjD,EAAS4iB,WACvDV,SAAYW,0BAA4BhiB,GAAON,iBACxC2hB,CACT,CAGA,6BAAOY,CACLC,EACA3I,EACA/K,EACA2B,EACAgS,GAUA,GAPsBD,EAAoB3gB,KAAK6b,GAAKA,EAAEpL,KAAKrJ,OAASyZ,IAAmBC,qBACpEtL,WAAWuL,SAAStT,OAAOyD,KAAKL,IAA+B,IAAnBA,EAASxD,QAGpE2K,GAAWgJ,cAGVjU,IAAoB4B,kBAAkB1B,EAAiB2B,GAC1D,OAAO,EAGT,UAAWqS,KAAUL,GAAqB,GACxC,GAAIK,EAAOzL,WAAW4K,oBAAoB3S,OAAOyD,KAAKL,IAA+B,IAAnBA,EAASxD,OACzE,OAAO,EAGX,OAAO,CACT,CAEA,oBAAO6T,CAAc1C,EAA6BxP,GAChD,MAAMmS,EAAQ3C,EAAYhJ,WAAWjJ,QAAQyC,GAC7C,OAAyC,MAArCwP,EAAYhJ,WAAW2L,EAAQ,MAG/BA,EADsB3C,EAAYhJ,WAAW4L,UAAU7iB,GAAK8iB,IAAiBC,aAAa/iB,EAAEiiB,cAG5Fa,IAAiBE,WAAWvS,EAAUwR,aAEtCa,IAAiBG,kBAAkBhD,EAAYhJ,WAAW2L,EAAQ,GAAGX,WAG3E,CAEA,qCAAOiB,CACLxU,EACAyU,EACA1U,GAEA,QAAIA,EAASiB,UAAYjB,EAASkB,SAC7BnB,IAAoB4B,kBAAkB1B,EAAiBD,EAASkB,WACjEwT,IACA3U,IAAoBuB,iBAAiBrB,EAAiBD,KACtDD,IAAoB2B,iBAAiBzB,EAAiBD,EAASiB,SAAiB,IAEtF,CAEA,0BAAO0T,CACL1U,EACAyU,EACA1U,GAEA,IAAI4U,EACA1V,EAEJ,GAAIwV,EACFE,EAAY,0BACZ1V,EAAc,WACJa,IAAoB4B,kBAAkB1B,EAAiBD,EAASkB,SAGrE,CACL,MAAM2T,EAA4B9U,IAAoBuB,iBAAiBrB,EAAiBD,GAClF8U,EAA4B/U,IAAoB2B,iBAAiBzB,EAAiBD,EAASiB,SAEjG,GAAI4T,GAA6BC,EAA2B,CAC1D,MAAMlW,EAAamB,IAAoBK,oBAAoBH,EAAiBD,GACzEe,WAAWhJ,IAAI0H,GAAaA,EAAUY,OACtCpI,OAAOwH,IAAcA,EAAU5J,SAASmK,EAASiB,UAEnCrC,EAAWtM,OAAS,GAE/BuiB,EACFD,EAAY,cACLE,IACPF,EAAY,iBAEd1V,EAAcjB,IAAqBU,2BAA2BC,EAAYoB,EAASiB,WAEnF2T,EAAY,GACZ1V,EAAc,SAGhB0V,EAAY,sBACZ1V,EAAc,QAzBhB0V,EAAY,mCACZ1V,EAAcc,EAASkB,QA2BzB,MAAM6T,EAAQhkB,KAAKikB,wBAAwB/U,EAAiByU,EAAoB1U,GAOhF,MAN2C,CACzC4U,YACA1V,cACAc,SAAU+U,EAAM/U,SAChB7B,SAAU4W,EAAM5W,SAGpB,CAEQ,8BAAO6W,CACb/U,EACAyU,EACA1U,GAGA,IAAKD,IAAoB4B,kBAAkB1B,EAAiBD,EAASkB,SACnE,MAAO,CAAElB,SAAU,GAAI7B,SAAUC,IAAiBC,yBAEpD,GAAIqW,EACF,MAAO,CAAE1U,SAAU,GAAI7B,SAAUC,IAAiBI,eAEpD,GAAIuB,IAAoBuB,iBAAiBrB,EAAiBD,GAAW,CACnE,MAAMiV,EAAmBlV,IAAoBK,oBAAoBH,EAAiBD,GAC/Ee,WAAW9I,OAAOwH,GAAaA,EAAUY,QAAUL,EAASiB,SAE/D,OAAQgU,EAAiB3iB,OAAS,EAC9B,CAAE0N,SAAUiV,EAAiB,GAAG5U,MAAOlC,SAAUC,IAAiBM,eAClE,CAAEsB,SAAU,GAAI7B,SAAUC,IAAiBE,WAGjD,OAAIyB,IAAoB2B,iBAAiBzB,EAAiBD,EAASiB,SAI1D,CAAEjB,SAHgBD,IAAoBK,oBAAoBH,EAAiBD,GAC/Ee,WAAW9I,OAAOwH,GAAaA,EAAUY,QAAUL,EAASiB,SAE3B,GAAGZ,MAAOlC,SAAUC,IAAiBK,cAGpE,CAAEuB,SAAU,GAAI7B,SAAUC,IAAiBI,cACpD,EAGF,MAAMuU,EAIJ,6BAAOC,CAAuBpiB,GAC5B,IAAIskB,EAAetkB,EACnB,OAAoC,MAAhCskB,EAAaC,kBACjBvkB,EAASyJ,QAAU6a,EAAaC,uBACzBD,EAAaC,iBACbvkB,CACT,0FCzMK,IAAM4U,EAAiB,MAAxB,MAAOA,EAEXlV,cAEAS,KAAAO,IAAM,IAAID,IAfO,qBADH,GA0BdN,KAAAqkB,gBAAenQ,OAA0B,MAmBjClU,KAAAskB,WAAUhQ,OAAOiQ,KACjBvkB,KAAAwkB,mBAAkBlQ,OAAOiI,IAhCjB,CAmChBkI,eACEC,EACAhI,EACAiI,EACAC,EACAC,EACAC,EACAC,EACAllB,GAEAG,KAAKH,SAAWA,EAChBG,KAAKglB,UAAY,CACfnI,QAAS6H,EAAcO,SAASC,QAChC/U,QAASuU,EAAcO,SAASE,QAChC5G,KAAMmG,EAAcO,SAASG,MAE/BplB,KAAKP,OAAS,CACZuW,OAAQhW,KAAKskB,QAAQtO,OACrBD,MAAO/V,KAAKskB,QAAQvO,MACpBsP,QAASX,EAAcY,IAAIC,IAC3BC,cAAed,EAAcY,IAAIG,UACjCC,SAAU1lB,KAAKskB,QAAQoB,UAAUvd,WACjCwd,WAAYC,eAAeC,QAAQC,OAAkBC,KACrDC,WAAYtB,EAAcuB,KAAKV,IAC/BW,MAAOlmB,KAAKskB,QAAQ4B,OAAO/d,WAC3Bge,WAAYvjB,OAAOwjB,SAASC,SAASpd,MAAM,UAAU,GAAK,IAC1Dqd,kBAAmBtmB,KAAKumB,qBACoB,SAA1CX,eAAeC,QAAQC,MACvBF,eAAeC,QAAQW,OAEzB9J,SACAiI,iBACAC,YACAC,aACAC,SACAC,gBACA0B,kBAAmB/B,EAAcgC,OAAOC,cAAe,EACvDC,yBAA0BlC,EAAcgC,OAAOG,2BAA4B,EAC3EnC,gBACA7kB,YAEFG,KAAKqkB,aAAa5N,IAAIzW,KAAKP,QAC3BO,KAAKiP,SAAWjP,KAAKwkB,gBAAgB9G,UAAU1d,KAAKP,OAAOid,OAC7D,CAEQ6J,qBACNZ,EACAmB,GAGA,MAAMC,EAA8B,CAAEC,MAAM,EAAMC,MAAM,EAAMC,QAAQ,GAEtE,IAAKvB,EACH,OAAOoB,EAET,MAAMI,EAAUL,GAAc,GAC9B,OAAQK,GACN,IAAK,GACL,IAAK,gBACH,OAAOJ,EACT,IAAK,gBAGH,MAAO,CAAEG,QAAQ,EAAMD,MAAM,GAC/B,IAAK,iBACH,MAAO,CAAED,MAAM,GACjB,QACExe,eAAQC,MAAM,oCAAoC0e,KAC3C,GAGb,CAOA,aAAIC,GACF,OAAOpnB,KAAKqnB,aAAernB,KAAKwkB,gBAAgBlH,aAAatd,KAAKP,OAAOid,OAC3E,CAACvS,SAAAnK,KAAA,mBAAAoK,iBArHUqK,EAAiB,EAAAtK,SAAAnK,KAAA,WAAAsnB,EAAAvQ,IAAA,OAAjBtC,EAAiBuC,QAAjBvC,EAAiBwC,mBAAjBxC,CAAiB,sCCnBxB,MAAOjF,EAcX,kBAAOC,CAAY8X,GACjB,MAAO,CACLrX,QAASqX,EAASpX,QAClBA,QAASoX,EAASpX,QAEtB,CAEA,kBAAOqX,CAAYD,EAAwBrX,GACzC,MAAO,CACLA,QAASA,EACTC,QAASoX,EAASpX,QAEtB,CAEA,YAAOyM,GACL,MAAO,CACL1M,QAAS,GACTC,QAAS,GACT0M,QAAS,GAEb,oCCtCK,MAAMiG,EAAqB,CAChCC,mBAAoB,qBACpB0E,mBAAoB,uDCFf,MAAMjlB,EAAmB,CAC9BgY,eAAgB,kBAChBC,gBAAiB,mBACjBiN,cAAe,iBACfC,UAAW,aACXC,iBAAkB,qBAClBlN,gBAAiB,mBACjBmN,cAAe,WACfC,aAAc,gBACdC,SAAU,YACVC,aAAc,gBACd5M,oBAAqB,wBACrBF,cAAe,iBACfC,YAAa,eACb8M,qBAAsB,yBACtBC,iBAAkB,oBAClBC,iBAAkB,oBAClBtN,cAAe,iBACfC,eAAgB,kBAChBsN,cAAe,iBACfC,eAAgB,kBAChBC,oBAAqB,wBACrBC,qBAAsB,0BACtBC,WAAY,cACZC,qBAAsB,yBACtBC,cAAe,kBACfC,cAAe,iBAGftN,aAAc,gBACduN,aAAc,gBACd7N,aAAc,gBAGdtY,QAAS,0DChCX,MAAMma,EAA2B,CAACpa,IAAiBslB,aAActlB,IAAiBulB,SAAUvlB,IAAiBwlB,cAEvGa,EAA0B,CAACrmB,IAAiBslB,aAActlB,IAAiBulB,UAE3Ee,EAA+B,CAACtmB,IAAiB6Y,aAAc7Y,IAAiBomB,aAAcpmB,IAAiBuY,cAE/G,MAAOuI,EACX,cAAOyF,CAAQ9O,GACb,OAAO2C,EAAM9X,SAASmV,EACxB,CAEA,wBAAOwJ,CAAkBxJ,GACvB,OAAO4O,EAAK/jB,SAASmV,EACvB,CAEA,mBAAOsJ,CAAatJ,GAClB,OAAOA,IAAczX,IAAiBslB,YACxC,CAEA,iBAAOtE,CAAWvJ,GAChB,OAAOA,IAAczX,IAAiBulB,QACxC,CAEA,gBAAOiB,CAAU/O,GACf,OAAOA,IAAczX,IAAiBwlB,YACxC,CAEA,kBAAOiB,CAAYhP,GACjB,OAAO6O,EAAUhkB,SAASmV,EAC5B,oCC/BI,MAAOnS,EAMX,oBAAOC,CAAiBZ,EAAS+hB,GAC/B,MAAM9F,EAAQ8F,EAAM1a,QAAQrH,IACd,IAAVic,EACF8F,EAAMtf,KAAKzC,GAEX+hB,EAAMC,OAAO/F,EAAO,EAExB,4DCLI,MAAOrG,EAAbxd,cAGUS,KAAAge,MAAsC,EAmChD,CAjCElb,IAAIwO,GACF,OAAOtR,KAAKge,MAAM1M,EACpB,CAEAmM,YAAYnM,EAAW0F,EAAuBwH,EAAyC,MACrF,OAAOxe,KAAKwf,oBAAoBlO,EAAK0F,EAASwH,GAAStK,MAIzD,CAEAsL,oBAAoBlO,EAAW0F,EAAuBwH,EAAyC,MAC7F,GAAIxe,KAAKge,MAAM1M,GACb,MAAO,CAAE4C,OAAQlU,KAAKge,MAAM1M,GAAMmO,OAAO,GAC3C,MAAME,KAAMlB,OAAS,IAAMzH,IAAWwH,GAAW,CAAEoB,MAAOC,MAC1D,MAAO,CAAE3L,OAAQlU,KAAKyW,IAAInF,EAAKqO,GAAMF,OAAO,EAC9C,CAGAhJ,IAAInF,EAAWtQ,GACb,OAAAhB,KAAKge,MAAM1M,GAAOtQ,EACXA,CACT,CAEAooB,OAAO9X,UACEtR,KAAKge,MAAM1M,EACpB,CAEA+X,QACElY,OAAOC,KAAKpR,KAAKge,OAAOvP,QAAS6C,WACxBtR,KAAKge,MAAM1M,EAAW,EAEjC,uFCpCI,SAAUuM,EACd1c,GAEA,SAAO4F,QACLuiB,QAAoB,EACpBtiB,KAAI7F,IAAE,EACNmoB,OAEJ,CAEM,SAAUC,EACdpoB,GAEA,SAAO4F,QACLuiB,QAAoB,EACpBtiB,KAAI7F,IAAE,EACNmoB,KAAqBzJ,KAEzB,kBCRA,SAAS2J,EAAiBC,GACtB,QAASnY,KAAOmY,EAAQ,CACpB,IAAIzoB,EAAQyoB,EAAOnY,IAAQ,GAC3B,OAAQA,GACJ,IAAK,UAEGmY,EAAOC,QADG,SAAV1oB,EACoB,CAChB,eACA,QAGW,gBAAVA,EACe,CAChB,sBACA,eAIgBA,EAExB,MACJ,IAAK,cACL,IAAK,aACL,IAAK,gBACL,IAAK,OACL,IAAK,aACL,IAAK,YACL,IAAK,YACL,IAAK,cACL,IAAK,YACL,IAAK,kBACDyoB,EAAO,WAAanY,GAAOtQ,EAC3B,MACJ,IAAK,iBACDyoB,EAAO,0BAA4BzoB,EACnCyoB,EAAO,kBAAoBzoB,EAC3B,MACJ,IAAK,QACDyoB,EAAOE,MAAWF,EAAO,WAAanY,GAAO0J,OAAOha,GAAS,IAAMA,EAG/E,CACA,OAAOyoB,CACX,uDASA,MAAMG,EAAS,SACTC,EAAgB,CAAC,MAAO,SAAU,cAAe,kBAIvD,SAASC,EAAe9oB,GACpB,IAAK+oB,EAAWC,EAAMC,GAAYC,EAAclpB,GAChD,OA4DJ,SAASmpB,EAASJ,EAAWC,EAAO,KAAMI,GAAS,GAC/C,MAAO,CACHV,QAASU,EAAS,cAAgB,OAClC,aAAc,aACd,iBAAkBL,EAClB,YAAaC,GAAQ,KAE7B,CAnEWG,CAASJ,EAAWC,EAAMC,EACrC,CAKA,SAASC,EAAclpB,GACnBA,EAAQA,GAAO8U,eAAiB,GAChC,IAAKiU,EAAWC,EAAMI,GAAUppB,EAAMiI,MAAM,KAE5C,OAAK4gB,EAAc5nB,KAAK0R,GAAKA,IAAMoW,KAC/BA,EAAYF,EAAc,IAE1BG,IAASJ,IACTI,EAAQI,IAAWR,EAAUQ,EAAS,GACtCA,EAASR,GAEN,CAACG,EAAWM,EAAkBL,KAASI,EAClD,CAKA,SAASE,EAAiBtpB,GACtB,IAAKupB,GAASL,EAAclpB,GAC5B,OAAOupB,EAAK/b,QAAQ,QAAS,CACjC,CAIA,SAAS6b,EAAkBrpB,GACvB,GAAMA,EACF,OAAQA,EAAM8U,eACV,IAAK,UACL,IAAK,eACL,IAAK,eACD9U,EAAQ,eACR,MACJ,IAAK,KACL,IAAK,OACL,IAAK,SACDA,EAAQ,SACR,MAEJ,QACIA,EAAQ,OAIpB,OAAOA,CACX,CAiCA,SAASwpB,EAAaC,KAASC,GAC3B,GAAY,MAARD,EACA,MAAME,UAAU,8CAEpB,QAASC,KAAUF,EACf,GAAc,MAAVE,EACA,QAAStZ,KAAOsZ,EACRA,EAAOxU,eAAe9E,KACtBmZ,EAAKnZ,GAAOsZ,EAAOtZ,IAKnC,OAAOmZ,CACX,6MCzIA,MAAMI,EAAmB,CACrBC,QAASC,MACTC,WArBJ,SAASC,EAAaC,EAAWC,GAC7B,MAAO,KACH,MAAIC,MAAkBD,GAAa,CAC/B,MAAME,EAAWhqB,MAAMiqB,KAAKJ,EAAUK,iBAAkB,WAAUC,OAK5DC,EAAa,uBACnBJ,EAAS5c,QAAQid,IACbA,EAAGC,UAAUC,SAAU,GAAEJ,SAAoBE,EAAGG,WAC5CH,EAAGG,WAAWC,YAAYJ,GAAMA,EAAGK,UAAUjjB,QAAQ2iB,EAAY,GAAE,EAE/E,EAER,EAOIO,KAAM,CAACC,KAAUC,OACjBC,OAAO,GAELX,EAAa,eASnB,IAKMY,EAAU,MAAhB,MAAMA,GAENA,SAAWnV,UAAI,SAAA7M,GAAA,WAAAA,GAAwFgiB,EAAU,EACjHA,EAAWC,UADkFppB,KAAE,CAAAye,KACS0K,IACxGA,EAAWE,UAFkFrpB,MAAE,CAAAspB,UAEgC,CAAC1B,KAJ1HuB,CAAU,KAehB,MAAMI,EAQFjtB,YAAY+W,GAAU,EAAOmW,EAAa,MAAOC,EAAU,GAAIC,EAAS,GAAIC,EAAW,GACnF5sB,KAAKsW,QAAUA,EACftW,KAAKysB,WAAaA,EAClBzsB,KAAK0sB,QAAUA,EACf1sB,KAAK2sB,OAASA,EACd3sB,KAAK4sB,SAAWA,EAChB5sB,KAAK6sB,SAAW,EACpB,CAEAC,QACI,OAAO,IAAIN,EAAYxsB,KAAKsW,QAAStW,KAAKysB,WAAYzsB,KAAK0sB,QAAS1sB,KAAK2sB,OAC7E,EAUJ,IAMMI,EAAa,MAAnB,MAAMA,EACFxtB,cACIS,KAAKgtB,WAAa,IAAIC,GAC1B,CAIAC,kBAAkBC,EAASC,EAAOpsB,GAC9B,MAAMgsB,EAAahtB,KAAKgtB,WAAWlqB,IAAIqqB,GACnCH,EACAA,EAAWvW,IAAI2W,EAAOpsB,GAGtBhB,KAAKgtB,WAAWvW,IAAI0W,EAAS,IAAIF,IAAI,CAAC,CAACG,EAAOpsB,KAEtD,CAIAqsB,cACIrtB,KAAKgtB,WAAW3D,OACpB,CAIAiE,mBAAmB5B,EAAI6B,GACnB,MAAMlhB,EAASrM,KAAKgtB,WAAWlqB,IAAI4oB,GACnC,IAAI1qB,EAAQ,GACZ,GAAIqL,EAAQ,CACR,MAAM+gB,EAAQ/gB,EAAOvJ,IAAIyqB,IACJ,iBAAVH,GAAuC,iBAAVA,KACpCpsB,EAAQosB,EAAQ,GAExB,CACA,OAAOpsB,CACX,EAEJ+rB,SAAc9V,UAAI,SAAA7M,GAAA,WAAAA,GAAwF2iB,EAAa,EACvHA,EAAcS,WAtF+EvqB,MAAE,CAAAwqB,MAsFeV,EAAa/V,QAAb+V,EAAa9V,UAAAkH,WAAc,SAtCnI4O,CAAa,KA2DnB,MAAMW,EAAiB,CACnBC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,EACnBC,uBAAuB,EACvBC,cAAc,EACdC,oBAAoB,EACpBC,qBAAsB,GACtBC,yBAAyB,EACzBC,sBAAuB,GAIvBC,gBAAY3sB,EACZ4sB,YAAa,KACbC,qBAAqB,GAEnBC,EAAgB,IAAIC,MAAe,oDAAqD,CAC1FrQ,WAAY,OACZnH,QAASA,IAAM0W,IAgBbe,EAAe,IAAID,MAAe,yBAA0B,CAC9DrQ,WAAY,OACZnH,QAASA,KAAM,IAUb0X,EAAa,IAAIF,MAAe,+DAAgE,CAClGrQ,WAAY,OACZnH,QAASA,IAAM,OAsBnB,SAAS2X,EAAWlE,EAAMG,GACtBH,SAAOA,GAAMqC,SAAW,IAAIN,EACxB5B,IACAH,EAAKiC,QAAU9B,EAAOgE,MACtBnE,EAAKgC,WAAa7B,EAAO6B,WACzBhC,EAAKkC,OAAS/B,EAAO+B,OACrBlC,EAAKmC,SAAWhC,EAAOgC,UAEpBnC,CACX,CAGA,MAAMoE,EACFtvB,cAEIS,KAAK8uB,aAAc,CACvB,CAMAC,WAAWC,EAAQC,EAASC,GAC5B,EAGJ,IAOMC,EAAU,MAAhB,MAAMA,EACF5vB,YAAY6vB,EAAmBC,EAAqBC,EAAaC,GAC7DvvB,KAAKovB,kBAAoBA,EACzBpvB,KAAKqvB,oBAAsBA,EAC3BrvB,KAAKsvB,YAAcA,EACnBtvB,KAAKuvB,aAAeA,CACxB,CAIAC,oBAAoBrC,EAASC,EAAOpsB,EAAQ,MACxC,IAAIqL,EAAS,CAAC,EACO,iBAAV+gB,IACP/gB,EAAO+gB,GAASpsB,EAChBosB,EAAQ/gB,GAEZA,EAASrM,KAAKuvB,aAAazB,sBAAwBV,KAAQ5D,MAAiB4D,GAC5EptB,KAAKyvB,+BAA+BpjB,EAAQ8gB,EAChD,CAIAuC,qBAAqBtC,EAAO/B,EAAW,IACnC,MAAMhf,EAASrM,KAAKuvB,aAAazB,sBAAwBV,KAAQ5D,MAAiB4D,GAClF/B,EAAS5c,QAAQid,IACb1rB,KAAKyvB,+BAA+BpjB,EAAQqf,EAAE,EAEtD,CAMAiE,iBAAiBlG,GACb,MAAMmG,EAAQ,iBACd,IAAI5uB,EAAQhB,KAAK6vB,YAAYpG,EAAQmG,GAGrC,MAAO,CAAC5uB,GAAS,MAFMhB,KAAK8vB,kBAAkBrG,EAAQmG,KAAK,EACtDG,MAAiB/vB,KAAKsvB,cAAgBtvB,KAAKqvB,oBAAuBruB,EAAQ,GAEnF,CACAgvB,QAAQvG,GAEJ,MAA2C,SAApCzpB,KAAK6vB,YAAYpG,EADV,YAElB,CAIAwG,qBAAqB9C,EAASlc,GAC1B,OAAOkc,EAAQ+C,aAAajf,IAAc,EAC9C,CAIA6e,kBAAkB3C,EAASI,GACvB,SAAOnC,MAAkBprB,KAAKsvB,aAC1BnC,EAAQC,MAAM+C,iBAAiB5C,GAiE3C,SAAS6C,EAAejD,EAASI,GAE7B,OADiB8C,EAAmBlD,GACpBI,IAAc,EAClC,CApEwD6C,CAAejD,EAASI,EAC5E,CAKAsC,YAAY1C,EAASI,EAAW+C,GAAa,GACzC,IAAItvB,EAAQ,GACZ,OAAImsB,KACqBnsB,EAAQhB,KAAK8vB,kBAAkB3C,EAASI,OAAS,EAE9DnC,MAAkBprB,KAAKsvB,aAClBgB,IACDtvB,EAAQuvB,iBAAiBpD,GAASgD,iBAAiB5C,IAInDvtB,KAAKqvB,sBACLruB,EAAQhB,KAAKovB,kBAAkB9B,mBAAmBH,EAASI,MAOpEvsB,EAAQA,EAAM6H,OAAS,EAClC,CAMA4mB,+BAA+BpjB,EAAQ8gB,GACnChc,OAAOC,KAAK/E,GAAQmkB,OAAO/hB,QAAQ6C,IAC/B,MAAMoa,EAAKrf,EAAOiF,GACZiG,EAASlW,MAAMC,QAAQoqB,GAAMA,EAAK,CAACA,GACzCnU,EAAOiZ,OACP,QAASxvB,KAASuW,EACdvW,EAAQA,EAAQA,EAAQ,GAAK,MACzBoqB,MAAkBprB,KAAKsvB,eAAiBtvB,KAAKqvB,uBAC7CjE,MAAkBprB,KAAKsvB,aACnBnC,EAAQC,MAAMqD,YAAYnf,EAAKtQ,GAAS0vB,EAAevD,EAAS7b,EAAKtQ,GAGzEhB,KAAKovB,kBAAkBlC,kBAAkBC,EAAS7b,EAAKtQ,EAAK,EAI5E,EAEJmuB,SAAWlY,UAAI,SAAA7M,GAAA,WAAAA,GAAwF+kB,GA5TVlsB,MA4TsC8pB,GA5TtC9pB,MA4TgEwrB,GA5ThExrB,MA4TyFipB,OA5TzFjpB,MA4TiHsrB,GAAa,EAC3NY,EAAW3B,WA7TkFvqB,MAAE,CAAAwqB,MA6TY0B,EAAUnY,QAAVmY,EAAUlY,UAAAkH,WAAc,SA1G7HgR,CAAU,KA4HhB,SAASuB,EAAevD,EAASI,EAAWoD,GACxCpD,EAAYA,EAAUzkB,QAAQ,kBAAmB,SAASgN,cAC1D,MAAM8a,EAAWP,EAAmBlD,GACpCyD,EAASrD,GAAaoD,GAAc,GAGxC,SAASE,GAAoB1D,EAASyD,GAClC,IAAIE,EAAiB,GACrB,UAAWxf,KAAOsf,EACGA,EAAStf,KAEtBwf,GAAmB,GAAExf,KAAOsf,EAAStf,OAG7C6b,EAAQ4D,aAAa,QAASD,EAClC,CAXID,CAAoB1D,EAASyD,EACjC,CAWA,SAASP,EAAmBlD,GACxB,MAAMyD,EAAW,CAAC,EACZI,EAAiB7D,EAAQ+C,aAAa,SAC5C,GAAIc,EAAgB,CAChB,MAAMC,EAAYD,EAAe/nB,MAAM,OACvC,QAAShB,EAAI,EAAGA,EAAIgpB,EAAU1vB,OAAQ0G,IAAK,CACvC,MAAMmlB,EAAQ6D,EAAUhpB,GAAGY,OAC3B,GAAIukB,EAAM7rB,OAAS,EAAG,CAClB,MAAM2vB,EAAa9D,EAAM5e,QAAQ,KACjC,IAAmB,IAAf0iB,EACA,MAAM,IAAIC,MAAO,sBAAqB/D,KAG1CwD,EADaxD,EAAMgE,OAAO,EAAGF,GAAYroB,QACxBukB,EAAMgE,OAAOF,EAAa,GAAGroB,MAClD,CACJ,CACJ,CACA,OAAO+nB,CACX,CAUA,SAASS,EAAuB7wB,EAAG8wB,GAG/B,OADkBA,GAAIA,EAAE1E,UAAY,IADlBpsB,GAAIA,EAAEosB,UAAY,EAGxC,CAEA,SAAS2E,EAAsB/wB,EAAG8wB,GAG9B,OAFW9wB,EAAEosB,UAAY,IACd0E,EAAE1E,UAAY,EAE7B,CASA,IAOM4E,EAAU,MAAhB,MAAMA,EACFjyB,YAAYkyB,EAAOnC,EAAapE,GAC5BlrB,KAAKyxB,MAAQA,EACbzxB,KAAKsvB,YAAcA,EACnBtvB,KAAKkrB,UAAYA,EAEjBlrB,KAAK4qB,OAAS,IAAIlkB,IAAgB,IAAI8lB,GAAY,IAClDxsB,KAAK0xB,SAAW,IAAIzE,IACpBjtB,KAAK2xB,yBAA2B,GAChC3xB,KAAK4xB,aAAe5xB,KAAK4qB,OAAOiH,cACpC,CAIA,eAAIC,GACA,MAAMC,EAAU,GAChB,OAAA/xB,KAAK0xB,SAASjjB,QAAQ,CAACujB,EAAK1gB,KACpB0gB,EAAI1b,SACJyb,EAAQnoB,KAAK0H,EAAG,GAGjBygB,CACX,CAIAE,SAASxF,GAEL,OADYzsB,KAAK0xB,SAAS5uB,IAAI2pB,IAClBnW,SAAWtW,KAAKkyB,cAAczF,GAAYtZ,KAAK2K,GAAKA,EAAExH,QACtE,CAUA6b,QAAQC,EAAQC,GAAe,GAC3B,GAAID,GAAUA,EAAO7wB,OAAQ,CACzB,MAAM+wB,EAActyB,KAAK4xB,aAAa7qB,QAAKG,KAAQqrB,IAAYF,GAAuBD,EAAO5jB,QAAQ+jB,EAAO9F,aAAc,IACpH+F,EAAgB,IAAIC,IAAYC,IAClC,MAAMpc,EAAUtW,KAAKkyB,cAAcE,GACnC,GAAI9b,EAAQ/U,OAAQ,CAChB,MAAMoxB,EAAarc,EAAQsc,MAC3Btc,EAAQ7H,QAASvM,KACbwwB,EAASjrB,KAAKvF,GAAC,GAEnBlC,KAAK4qB,OAAOnjB,KAAKkrB,EACrB,CACAD,EAASlrB,UAAS,GAEtB,SAAOqrB,KAAML,EAAeF,EAChC,CACA,OAAOtyB,KAAK4xB,YAChB,CAKAM,cAAczF,GACV,MAAMlO,EAAOld,MAAMC,QAAQmrB,GAAcA,EAAa,CAACA,GACjDnW,EAAU,GAChBwc,OAwDR,SAASA,GAAcC,EAAc7H,GACjC,MAAM3M,EAAOwU,EAAa7rB,OAAO8rB,IAAOC,EAAWD,IACnD,GAAIzU,EAAKhd,OAAS,EAAG,CACjB,MAAMquB,EAAQrR,EAAKpV,KAAK,MACxB,IACI,MAAM+pB,EAAUhI,EAAUiI,cAAc,SACxCD,EAAQnC,aAAa,OAAQ,YACxBmC,EAAQE,YAQTF,EAAQG,YAAYnI,EAAUoI,eAPb,2IAKxB1D,4BAIG1E,EAAUqI,KAAKF,YAAYH,GAE3B3U,EAAK9P,QAAQ+kB,GAAMP,EAAWO,GAAMN,EACxC,OACOhxB,GACHsG,QAAQC,MAAMvG,EAClB,CACJ,CACJ,CAjFQ4wB,CAAcvU,EAAMve,KAAKkrB,WACzB3M,EAAK9P,QAASmhB,IACV,MAAM6D,EAAcvxB,IAChBlC,KAAKyxB,MAAMiC,IAAI,IAAM1zB,KAAK4qB,OAAOnjB,KAAK,IAAI+kB,EAAYtqB,EAAEoU,QAASsZ,IAAO,EAE5E,IAAIoC,EAAMhyB,KAAK0xB,SAAS5uB,IAAI8sB,GACvBoC,IACDA,EAAMhyB,KAAK2zB,SAAS/D,GACpBoC,EAAI4B,YAAYH,GAChBzzB,KAAK2xB,yBAAyB/nB,KAAK,IAAMooB,EAAI6B,eAAeJ,IAC5DzzB,KAAK0xB,SAASjb,IAAImZ,EAAOoC,IAEzBA,EAAI1b,SACJA,EAAQ1M,KAAK,IAAI4iB,GAAY,EAAMoD,GAAM,GAG1CtZ,CACX,CACA/O,cACI,IAAIpG,EACJ,KAAOA,EAAKnB,KAAK2xB,yBAAyBiB,OACtCzxB,GAER,CAKAwyB,SAAS/D,GACL,OAgER,SAASkE,GAAalE,EAAOmE,GAEzB,OADkBA,GAAenxB,OAAOoxB,WAAW,OAAOJ,YACvChxB,OAAOoxB,WAAWpE,GAbzC,SAASqE,GAAarE,GAClB,MAAMsE,EAAK,IAAIC,YACfD,SAAG5d,QAAoB,QAAVsZ,GAA6B,KAAVA,EAChCsE,EAAGE,MAAQxE,EACXsE,EAAGN,YAAc,OACjBM,EAAGL,eAAiB,OACpBK,EAAGG,iBAAmB,OACtBH,EAAGI,cAAgB,KAAM,EACzBJ,EAAGK,SAAW,KACPL,CACX,CAGkDD,CAAarE,EAC/D,CAnEekE,CAAalE,KAAOxE,MAAkBprB,KAAKsvB,aACtD,EAEJkC,SAAWva,UAAI,SAAA7M,GAAA,WAAAA,GAAwFonB,GArfVvuB,MAqfsCA,OArftCA,MAqf4DipB,OArf5DjpB,MAqfoFgpB,MAAQ,EACzLuF,EAAWhE,WAtfkFvqB,MAAE,CAAAwqB,MAsfY+D,EAAUxa,QAAVwa,EAAUva,UAAAkH,WAAc,SAjG7HqT,CAAU,KAgHhB,MAAMyB,EAAa,CAAC,EAqDduB,GAAsB,CACxB,CACI5F,MAAO,KACPnC,WAAY,wDACZG,SAAU,KAEd,CACIgC,MAAO,KACPnC,WAAY,0DACZG,SAAU,KAEd,CACIgC,MAAO,KACPnC,WAAY,2DACZG,SAAU,KAEd,CACIgC,MAAO,KACPnC,WAAY,4DACZG,SAAU,KAEd,CACIgC,MAAO,KACPnC,WAAY,4DACZG,SAAU,KAEd,CACIgC,MAAO,QACP6F,aAAa,EACbhI,WAAY,mCACZG,SAAU,KAEd,CACIgC,MAAO,QACP6F,aAAa,EACbhI,WAAY,mCACZG,SAAU,KAEd,CACIgC,MAAO,QACP6F,aAAa,EACbhI,WAAY,oCACZG,SAAU,KAEd,CACIgC,MAAO,QACP6F,aAAa,EACb7H,SAAU,IACVH,WAAY,qCAEhB,CACImC,MAAO,QACP6F,aAAa,EACbhI,WAAY,gCACZG,UAAU,KAEd,CACIgC,MAAO,QACP6F,aAAa,EACbhI,WAAY,gCACZG,UAAU,KACX,CACCgC,MAAO,QACP6F,aAAa,EACbhI,WAAY,iCACZG,UAAU,KAEd,CACIgC,MAAO,QACP6F,aAAa,EACbhI,WAAY,iCACZG,UAAU,MAYZ8H,GAAmB,oDACnBC,GAAoB,qDACpBC,EAAkB,2EAClBC,EAAmB,6EACnBC,EAAe,iDACfC,EAAgB,mDAChBC,EAAc,CAChBC,QAAY,GAAEP,OAAqBC,KACnCO,OAAW,GAAEN,OAAqBC,IAClCM,IAAQ,GAAEL,MAAiBC,KAC3BL,iBAAqB,GAAEA,KACvBE,gBAAoB,GAAEA,KACtBE,aAAiB,GAAEA,IACnBH,kBAAsB,GAAEA,KACxBE,iBAAqB,GAAEA,IACvBE,cAAkB,GAAEA,KAKlBK,EAA0B,CAC5B,CAAExG,MAAS,UAAWhC,SAAU,IAAMH,WAAcuI,EAAYC,SAChE,CAAErG,MAAS,oBAAqBhC,SAAU,IAAMH,WAAcuI,EAAYL,mBAC1E,CAAE/F,MAAS,mBAAoBhC,SAAU,IAAMH,WAAcuI,EAAYN,kBACzE,CAAE9F,MAAS,SAAUhC,SAAU,KAAMH,WAAcuI,EAAYE,QAC/D,CAAEtG,MAAS,mBAAoBhC,SAAU,KAAMH,WAAcuI,EAAYH,kBACzE,CAAEjG,MAAS,kBAAmBhC,SAAU,KAAMH,WAAcuI,EAAYJ,iBACxE,CAAEhG,MAAS,MAAOhC,SAAU,KAAMH,WAAcuI,EAAYG,IAAKV,aAAa,GAC9E,CAAE7F,MAAS,gBAAiBhC,SAAU,KAAMH,WAAcuI,EAAYD,cAAeN,aAAa,GAClG,CAAE7F,MAAS,eAAgBhC,SAAU,KAAMH,WAAcuI,EAAYF,aAAcL,aAAa,IAG9FY,EAAmB,YACzB,SAASC,EAAeC,GACpB,IAAIC,EAAQD,EAAKh0B,OAAS,EAAIg0B,EAAKE,OAAO,GAAK,GAC3CC,EAAaH,EAAKh0B,OAAS,EAAKg0B,EAAKrsB,MAAM,GAAK,GACpD,OAAOssB,EAAMG,cAAgBD,CACjC,CA0DA,MAAME,EAAc,IAAIpH,MAAe,2CAA4C,CAC/ErQ,WAAY,OACZnH,QAASA,KACL,MAAM6e,KAAcvhB,OAAOoa,GACrBa,KAAejb,OAAOia,GACtBuH,EAAiB,GAAG/iB,OAAOgjB,MAAM,IAAKF,GAAe,IACtD7uB,IAAK0J,GAAMrP,MAAMC,QAAQoP,GAAKA,EAAI,CAACA,KAGxC,OArCR,SAASslB,EAAan0B,EAAUo0B,EAAS,IACrC,MAAMC,EAAO,CAAC,EACdr0B,SAAS4M,QAAQ0nB,IACbD,EAAKC,EAAGvH,OAASuH,IAGrBF,EAAOxnB,QAAS0nB,IACRD,EAAKC,EAAGvH,QAAK,EACbpE,MAAa0L,EAAKC,EAAGvH,OAAQuH,GAG7BD,EAAKC,EAAGvH,OAASuH,IAzB7B,SAASC,EAAiB7X,GACtBA,SAAK9P,QAAS0nB,IACLA,EAAGxJ,SACJwJ,EAAGxJ,OAdf,SAAS0J,EAAU72B,GACf,OAAOA,EACFsJ,QAAQusB,EAAkB,KAC1BpsB,MAAM,KACNjC,IAAIsuB,GACJnsB,KAAK,GACd,CAQwBktB,CAAUF,EAAGvH,OACzBuH,EAAG1B,cAAgB0B,EAAG1B,eAGvBlW,CACX,CAoBW6X,CAAiBjlB,OAAOC,KAAK8kB,GAAMlvB,IAAIsvB,GAAKJ,EAAKI,IAC5D,CAsBeN,EAFWzG,EAAa1B,kBAAoB,GAAK2G,IACnDzhB,OAAOwc,EAAa3B,kBAAoBwH,EAA0B,IACzCU,EAAc,IAWpD,IAKMS,GAAkB,MAAxB,MAAMA,EACFh3B,YAAYgf,GAIRve,KAAKw2B,UAAY,IAAIvJ,IACrBjtB,KAAKyJ,MAAQ,IAAI8U,GAAMiS,KAAKe,EAChC,CAIAkF,YAAY7H,GACR,OAAQA,EAAe5uB,KAAK02B,kBAAkB9H,EAAQuH,GAAOA,EAAGvH,QAAUA,GAA1D,IACpB,CACA+H,YAAY/G,GACR,OAAO5vB,KAAK02B,kBAAkB9G,EAAQuG,GAAOA,EAAG1J,aAAemD,EACnE,CAKA,gBAAIgH,GACA,OAAO52B,KAAKyJ,MAAMvC,OAAO8rB,GAAMA,EAAGyB,YACtC,CAIA,WAAIoC,GACA,OAAO72B,KAAKyJ,MAAMzC,IAAIgsB,GAAMA,EAAGpE,MACnC,CAMA,YAAIkI,GACA,OAAO92B,KAAKyJ,MAAMzC,IAAIgsB,GAAMA,GAAIrG,QAAU,GAC9C,CAIA+J,kBAAkBplB,EAAKylB,GACnB,IAAIC,EAAWh3B,KAAKw2B,UAAU1zB,IAAIwO,GAClC,OAAK0lB,IACDA,EAAWh3B,KAAKyJ,MAAMxH,KAAK80B,IAAa,KACxC/2B,KAAKw2B,UAAU/f,IAAInF,EAAK0lB,IAErBA,GAAY,IACvB,EAEJT,SAAmBtf,UAAI,SAAA7M,GAAA,WAAAA,GAAwFmsB,GAvzBlBtzB,MAuzBsD2yB,GAAW,EAC9JW,EAAmB/I,WAxzB0EvqB,MAAE,CAAAwqB,MAwzBoB8I,EAAkBvf,QAAlBuf,EAAkBtf,UAAAkH,WAAc,SAnD7IoY,CAAkB,KAmExB,MAAMU,EAAQ,QACRC,GAAmB,CACrBtI,MAAOqI,EACPxK,WAAYwK,EACZrK,SAAU,KAEd,IAMMuK,GAAS,MAAf,MAAMA,EACF53B,YAAYs2B,EAAatG,EAAcrE,GACnClrB,KAAK61B,YAAcA,EACnB71B,KAAKuvB,aAAeA,EACpBvvB,KAAKkrB,UAAYA,EAGjBlrB,KAAKo3B,iCAAkC,EAMvCp3B,KAAKq3B,4BAA6B,EAClCr3B,KAAKs3B,0BAA4B,GACjCt3B,KAAKu3B,yBAA2B,GAChCv3B,KAAKw3B,kBAAoB,KAEzBx3B,KAAKy3B,YAAa,EAClBz3B,KAAK03B,MAAQ,IAAIC,GACjB33B,KAAK43B,cAAgB,EACzB,CAEAC,eAAeC,GACX,MAAO,IAAIA,EAASb,EACxB,CAEAc,aAAa71B,GACT,OAAOA,EAAEuqB,WAAW1jB,WAAWkuB,EACnC,CAEA,cAAIe,GACA,MAAO,IAAKh4B,KAAKuvB,aAAatB,sBAAwB,GAC1D,CAEA,oBAAIgK,GACA,OAAOj4B,KAAKg4B,WACPhxB,IAAI4nB,GAAS5uB,KAAK61B,YAAYY,YAAY7H,IAC1C1nB,OAAOivB,GAAa,OAAPA,EACtB,CAEA+B,qBAAsBzL,eAClB,MAAM0J,EAAKn2B,KAAK61B,YAAYc,YAAYlK,GAExC,OADa0J,EAAK,IAAIn2B,KAAKi4B,iBAAkB9B,GAAMn2B,KAAKi4B,kBAC5CzH,KAAKa,EACrB,CAEA8G,YAAYC,GACR,IAAIjC,EAAKn2B,KAAK61B,YAAYc,YAAYyB,EAAM3L,YAC5C,OAAIzsB,KAAK+3B,aAAaK,KAElBjC,EAAKn2B,KAAKk4B,oBAAoBE,GAAO,GACrCA,EAAM3L,WAAa0J,GAAI1J,YAAc,IAElCkC,EAAWyJ,EAAOjC,EAC7B,CAKAkC,8BAA8B5O,GAE1B,IAAKzpB,KAAKkrB,UAAUoN,aAAet4B,KAAKo3B,gCACpC,OAEJp3B,KAAKo3B,iCAAkC,EACvC,MAAMmB,EAAsBA,KAGnBv4B,KAAKy3B,aACNz3B,KAAKq3B,4BAA6B,EAClCr3B,KAAKw4B,cAAc/O,EAAQzpB,KAAKk4B,oBAAoB,IAAI1L,GAAY,EAAMyK,KAC1ExN,EAAOgP,eAAa,EAGtBC,EAAqBA,KAGvB14B,KAAKq3B,4BAA6B,EAC9Br3B,KAAKy3B,aACLz3B,KAAK24B,aAAalP,GAClBA,EAAOgP,eAAa,EAI5Bz4B,KAAKkrB,UAAUoN,YAAYjE,iBAAiB,cAAekE,GAC3Dv4B,KAAKkrB,UAAUoN,YAAYjE,iBAAiB,aAAcqE,GAC1D14B,KAAKs3B,0BAA0B1tB,KAAK2uB,GACpCv4B,KAAKu3B,yBAAyB3tB,KAAK8uB,EACvC,CAKAE,gBAAgBnP,GACZ,OAAQ2O,IACAp4B,KAAK+3B,aAAaK,GACdA,EAAM9hB,UAAYtW,KAAKy3B,YACvBz3B,KAAKw4B,cAAc/O,EAAQzpB,KAAKk4B,oBAAoBE,IACpD3O,EAAOgP,iBAEDL,EAAM9hB,SAAWtW,KAAKy3B,aAAez3B,KAAKq3B,6BAChDr3B,KAAK24B,aAAalP,GAClBA,EAAOgP,gBAIfz4B,KAAK64B,mBAAmBpP,EAAQ2O,EAAK,CAE7C,CAEAU,mBACI,OAAQV,KACKp4B,KAAKy3B,YAAcz3B,KAAK+3B,aAAaK,GAEtD,CAKAI,cAAc/O,EAAQsP,GAClB/4B,KAAKy3B,YAAa,EAClBz3B,KAAKw3B,kBAAoB/N,EAAOuP,qBAChCvP,EAAOuP,qBAAuBh5B,KAAK03B,MAAMuB,oBAAoBF,EACjE,CAEAJ,aAAalP,GACTA,EAAOuP,qBAAuBh5B,KAAK43B,cACnC53B,KAAK43B,cAAgB,GACrB53B,KAAKw3B,kBAAoB,KACzBx3B,KAAK03B,MAAMrO,QACXrpB,KAAKy3B,YAAa,CACtB,CAmBAoB,mBAAmBpP,EAAQ2O,GACvB,IAAKp4B,KAAKy3B,YAAcz3B,KAAKq3B,2BAA4B,CACrD,IAAKr3B,KAAKq3B,2BAKN,YADAr3B,KAAK43B,cAAgB,IAGzB,IAAKQ,EAAM9hB,QAAS,CAChB,MAAM6f,EAAKn2B,KAAK61B,YAAYc,YAAYyB,EAAM3L,YAE9C,GAAI0J,EAAI,CACJ,MAAM+C,EAAcl5B,KAAKw3B,mBAAqBx3B,KAAKw3B,kBAAkB1yB,SAASqxB,GACxEgD,GAAgBn5B,KAAKw3B,mBAAqB/N,EAAOuP,qBAAqBl0B,SAASqxB,IAC5D+C,GAAeC,KAEpCn5B,KAAK43B,cAAchuB,KAAKusB,GACxBn2B,KAAK43B,cAAcpH,KAAKa,GAEhC,CACJ,CACJ,CACJ,CAEA9pB,cACQvH,KAAKkrB,UAAUoN,cACft4B,KAAKs3B,0BAA0B7oB,QAAQvN,GAAKlB,KAAKkrB,UAAUoN,YAAYc,oBAAoB,cAAel4B,IAC1GlB,KAAKu3B,yBAAyB9oB,QAAQvN,GAAKlB,KAAKkrB,UAAUoN,YAAYc,oBAAoB,aAAcl4B,IAEhH,EAEJi2B,SAAUlgB,UAAI,SAAA7M,GAAA,WAAAA,GAAwF+sB,GA3gCTl0B,MA2gCoCszB,IA3gCpCtzB,MA2gCmEsrB,GA3gCnEtrB,MA2gC6FgpB,MAAQ,EAClMkL,EAAU3J,WA5gCmFvqB,MAAE,CAAAwqB,MA4gCW0J,EAASngB,QAATmgB,EAASlgB,UAAAkH,WAAc,SAxL3HgZ,CAAS,KA0Mf,MAAMQ,GACFp4B,cAEIS,KAAKq5B,iBAAmB,EAC5B,CACAJ,oBAAoBF,GAChBA,SAAOnvB,KAAKstB,IACZ6B,EAAOvI,KAAKa,GACZ0H,EAAOtqB,QAAQ0nB,GAAMn2B,KAAKs5B,cAAcnD,IACjCn2B,KAAKq5B,gBAChB,CAEAC,cAAcnD,GACJA,QAEe10B,IADAzB,KAAKq5B,iBAAiBp3B,KAAK+wB,GAAMA,EAAGvG,aAAe0J,EAAG1J,cAInEzsB,KAAKq5B,iBAcrB,SAASE,GAAkBpD,GACvB,OAAOA,GAAI1J,WAAW1jB,WAAWkuB,KAAU,CAC/C,CAhBwCsC,CAAkBpD,GAAM,CAACA,KAAOn2B,KAAKq5B,kBACvD,IAAIr5B,KAAKq5B,iBAAkBlD,GAG7C,CAEA9M,QACIrpB,KAAKq5B,iBAAmB,EAC5B,EAiBJ,IAIMG,GAAe,MAArB,MAAMA,EACFj6B,YAAYy0B,EAAY6B,EAAa4D,GACjCz5B,KAAKg0B,WAAaA,EAClBh0B,KAAK61B,YAAcA,EACnB71B,KAAKy5B,KAAOA,EACZz5B,KAAK05B,eAAgB,EACrB15B,KAAK25B,sBAAwB,GAC7B35B,KAAK45B,WAAa,IAAI3M,IACtBjtB,KAAK65B,cAAgB,IAAIC,QACzB95B,KAAK+5B,WAAa,IAAID,QACtB95B,KAAKg6B,UAAY,IAAIF,QACrB95B,KAAKi6B,SAAW,IAAIH,QACpB95B,KAAKk6B,QAAU,IAAIC,IACnBn6B,KAAKo6B,oBACT,CACA,kBAAIC,GACA,OAAOr6B,KAAKg5B,qBAAqB,IAAIpK,OAAS,EAClD,CACA,wBAAIoK,CAAqBsB,GACrBt6B,KAAK25B,sBAAwB,IAAIW,EACrC,CACA,wBAAItB,GACA,MAAO,IAAIh5B,KAAK25B,sBACpB,CACA,gBAAIY,CAAav5B,GACbhB,KAAK05B,cAAgB14B,CACzB,CAKAw5B,cAAcC,GACV,MAAMtE,EAAKn2B,KAAK22B,YAAY8D,EAAGhO,YAC/B,GAAI0J,EAAI,CACJsE,EAAK9L,EAAW8L,EAAItE,GACpB,MAAMuE,EAAU16B,KAAKg5B,qBAAqBxqB,QAAQ2nB,GAC9CsE,EAAGnkB,UAAuB,IAAZokB,GACd16B,KAAK25B,sBAAsB/vB,KAAKusB,GAChCn2B,KAAK25B,sBAAsBnJ,KAAKa,GAChCrxB,KAAKy4B,iBAECgC,EAAGnkB,UAAuB,IAAZokB,IAEpB16B,KAAK25B,sBAAsBxQ,OAAOuR,EAAS,GAC3C16B,KAAK25B,sBAAsBnJ,KAAKa,GAChCrxB,KAAKy4B,eAEb,CACJ,CASA1jB,KAAKoY,EAAS7b,EAAKqpB,EAAUC,EAASC,EAAgB,IAClDC,GAAe96B,KAAKg6B,UAAW7M,EAAS7b,EAAKqpB,GAC7CG,GAAe96B,KAAKi6B,SAAU9M,EAAS7b,EAAKspB,GAC5C56B,KAAK+6B,mBAAmB5N,EAAS7b,GACjCtR,KAAKg7B,mBAAmB7N,EAAS7b,EAAKupB,EAC1C,CAOAI,SAAS9N,EAAS7b,EAAK6kB,GACnB,MAAM+E,EAAQl7B,KAAK45B,WAAW92B,IAAIqqB,GAClC,GAAI+N,EAAO,CACP,MAAM3jB,OAAgB9V,IAAP00B,EAAmB+E,EAAMp4B,IAAIqzB,GAAMn2B,KAAKm7B,mBAAmBD,EAAO5pB,GACjF,GAAIiG,EACA,OAAOA,EAAOzU,IAAIwO,EAE1B,CAEJ,CAMA8pB,SAASjO,EAAS7b,GACd,MAAM4pB,EAAQl7B,KAAK45B,WAAW92B,IAAIqqB,GAClC,GAAI+N,EAAO,CACP,MAAM3jB,EAASvX,KAAKm7B,mBAAmBD,EAAO5pB,GAC9C,GAAIiG,EACA,YAA2B9V,IAApB8V,EAAOzU,IAAIwO,KAAsB,CAEhD,CACA,OAAO,CACX,CAQA+pB,SAASlO,EAAS7b,EAAKxB,EAAKqmB,GACxB,IAAI+E,EAAQl7B,KAAK45B,WAAW92B,IAAIqqB,GAChC,GAAK+N,EAIA,CACD,MAAM3jB,GAAU2jB,EAAMp4B,IAAIqzB,IAAO,IAAIlJ,KAAOxW,IAAInF,EAAKxB,GACrDorB,EAAMzkB,IAAI0f,EAAI5e,GACdvX,KAAK45B,WAAWnjB,IAAI0W,EAAS+N,EACjC,MAPIA,OAAYjO,KAAMxW,IAAI0f,OAAQlJ,KAAMxW,IAAInF,EAAKxB,IAC7C9P,KAAK45B,WAAWnjB,IAAI0W,EAAS+N,GAOjC,MAAMl6B,EAAQhB,KAAKi7B,SAAS9N,EAAS7b,QACvB7P,IAAVT,GACAhB,KAAKs7B,cAAcnO,EAAS7b,EAAKtQ,EAEzC,CAEAu6B,WAAWpO,EAAS7b,GAChB,OAAOtR,KAAKk6B,QACPrI,eACA9qB,QAAKG,KAAOwJ,GAAKA,EAAEyc,UAAYA,GAAWzc,EAAEY,MAAQA,GAC7D,CAEAmnB,eACIz4B,KAAK45B,WAAWnrB,QAAQ,CAACysB,EAAOxP,KAC5B,MAAM8P,EAAS,IAAIC,IAAIz7B,KAAK65B,cAAc/2B,IAAI4oB,IAC9C,IAAIgQ,EAAW17B,KAAKm7B,mBAAmBD,GACnCQ,GACAA,EAASjtB,QAAQ,CAACiC,EAAG4lB,KACjBt2B,KAAKs7B,cAAc5P,EAAI4K,EAAG5lB,GAC1B8qB,EAAOpS,OAAOkN,EAAC,GAGvBkF,EAAO/sB,QAAQ6nB,IAEX,GADAoF,EAAW17B,KAAKm7B,mBAAmBD,EAAO5E,GACtCoF,EAAU,CACV,MAAM16B,EAAQ06B,EAAS54B,IAAIwzB,GAC3Bt2B,KAAKs7B,cAAc5P,EAAI4K,EAAGt1B,EAC9B,MAEIhB,KAAK27B,aAAajQ,EAAI4K,EAAC,EAE9B,EAET,CAMAqF,aAAaxO,EAAS7b,GAClB,MAAMsqB,EAAW57B,KAAKi6B,SAASn3B,IAAIqqB,GACnC,GAAIyO,EAAU,CACV,MAAMhB,EAAUgB,EAAS94B,IAAIwO,GACvBspB,IACFA,IACA56B,KAAKk6B,QAAQzyB,KAAK,CAAE0lB,UAAS7b,MAAKtQ,MAAO,KAEjD,CACJ,CAOAs6B,cAAcnO,EAAS7b,EAAKtQ,GACxB,MAAM46B,EAAW57B,KAAKg6B,UAAUl3B,IAAIqqB,GACpC,GAAIyO,EAAU,CACV,MAAMjB,EAAWiB,EAAS94B,IAAIwO,GACxBqpB,IACFA,EAAS35B,GACThB,KAAKk6B,QAAQzyB,KAAK,CAAE0lB,UAAS7b,MAAKtQ,UAE1C,CACJ,CAKA66B,eAAe1O,GACX,MAAM4M,EAAa/5B,KAAK+5B,WAAWj3B,IAAIqqB,GACnC4M,IACAA,EAAWtrB,QAAQqtB,GAAKA,EAAEC,eAC1B/7B,KAAK+5B,WAAW3Q,OAAO+D,IAE3B,MAAMyM,EAAa55B,KAAK45B,WAAW92B,IAAIqqB,GACnCyM,IACAA,EAAWnrB,QAAQ,CAACmI,EAAGklB,IAAMlC,EAAWxQ,OAAO0S,IAC/C97B,KAAK45B,WAAWxQ,OAAO+D,GAE/B,CAMA6O,cAAc7O,EAAS7b,GACnB,MAAM4pB,EAAQl7B,KAAK45B,WAAW92B,IAAIqqB,GAClC,GAAI+N,EAAO,CACP,MAAMQ,EAAW17B,KAAKm7B,mBAAmBD,EAAO5pB,GAC5CoqB,IACIpqB,EACAtR,KAAKs7B,cAAcnO,EAAS7b,EAAKoqB,EAAS54B,IAAIwO,IAG9CoqB,EAASjtB,QAAQ,CAACiC,EAAG4lB,IAAMt2B,KAAKs7B,cAAcnO,EAASmJ,EAAG5lB,IAGtE,CACJ,CAEAqqB,mBAAmB5N,EAAS7b,GACxB,IAAIkqB,EAASx7B,KAAK65B,cAAc/2B,IAAIqqB,GAC/BqO,IACDA,EAAS,IAAIC,IACbz7B,KAAK65B,cAAcpjB,IAAI0W,EAASqO,IAEpCA,EAAO/6B,IAAI6Q,EACf,CAOA0pB,mBAAmB7N,EAAS7b,EAAK2qB,GAC7B,GAAIA,GAAYA,EAAS16B,OAAQ,CAC7B,IAAI26B,EAAWl8B,KAAK+5B,WAAWj3B,IAAIqqB,GAMnC,GALK+O,IACDA,EAAW,IAAIjP,IACfjtB,KAAK+5B,WAAWtjB,IAAI0W,EAAS+O,KAEZA,EAASp5B,IAAIwO,GACf,CACf,MAAM6qB,KAAkBtJ,QAASoJ,GAAU3zB,UAAU,KACjD,MAAM8zB,EAAep8B,KAAKi7B,SAAS9N,EAAS7b,GAC5CtR,KAAKs7B,cAAcnO,EAAS7b,EAAK8qB,EAAY,GAEjDF,EAASzlB,IAAInF,EAAK6qB,EACtB,CACJ,CACJ,CAEAxF,YAAY/G,GACR,OAAO5vB,KAAK61B,YAAYc,YAAY/G,EACxC,CAMAuL,mBAAmBD,EAAO5pB,GACtB,QAASrJ,EAAI,EAAGA,EAAIjI,KAAKg5B,qBAAqBz3B,OAAQ0G,IAAK,CACvD,MACMyzB,EAAWR,EAAMp4B,IADH9C,KAAKg5B,qBAAqB/wB,GACP2mB,OACvC,GAAI8M,SACYj6B,IAAR6P,GAAsBoqB,EAASW,IAAI/qB,IAA6B,MAArBoqB,EAAS54B,IAAIwO,IACxD,OAAOoqB,CAGnB,CAGA,IAAK17B,KAAK05B,cACN,OAEJ,MAAM4C,EAAWpB,EAAMp4B,IAAI,IAC3B,YAAgBrB,IAAR6P,GAAqBgrB,GAAYA,EAASD,IAAI/qB,GAAQgrB,OAAW76B,CAC7E,CAIA24B,qBACI,MAAMtC,EAAU93B,KAAK61B,YAAYpsB,MAAMzC,IAAImvB,GAAMA,EAAG1J,YACpDzsB,KAAKy5B,KAAKpB,8BAA8Br4B,MACxCA,KAAKg0B,WACA7B,QAAQnyB,KAAKy5B,KAAK5B,eAAeC,IACjC/wB,QAAKw1B,KAAIv8B,KAAKy5B,KAAKb,gBAAgB54B,QAAK,EAAGkH,KAAOlH,KAAKy5B,KAAKX,qBAC5DxwB,UAAUtI,KAAKw6B,cAAcgC,KAAKx8B,MAC3C,EAEJw5B,SAAgBviB,UAAI,SAAA7M,GAAA,WAAAA,GAAwFovB,GAx2Cfv2B,MAw2CgDuuB,GAx2ChDvuB,MAw2CuEszB,IAx2CvEtzB,MAw2CsGk0B,IAAS,EAC5MqC,EAAgBhM,WAz2C6EvqB,MAAE,CAAAwqB,MAy2CiB+L,EAAexiB,QAAfwiB,EAAeviB,UAAAkH,WAAc,SA5RvIqb,CAAe,KAiSrB,SAASsB,GAAe9zB,EAAKmmB,EAAS7b,EAAKmrB,GACvC,QAAch7B,IAAVg7B,EAAqB,CACrB,MAAMC,EAAS11B,EAAIlE,IAAIqqB,IAAY,IAAIF,IACvCyP,EAAOjmB,IAAInF,EAAKmrB,GAChBz1B,EAAIyP,IAAI0W,EAASuP,EACrB,CACJ,CAEA,IAOMC,GAAc,MAApB,MAAMA,EACFp9B,YAAYq9B,EAAYC,EAAcC,EAAQC,GAC1C/8B,KAAK48B,WAAaA,EAClB58B,KAAK68B,aAAeA,EACpB78B,KAAK88B,OAASA,EACd98B,KAAK+8B,QAAUA,EACf/8B,KAAKg9B,cAAgB,GACrBh9B,KAAKi9B,OAAS,GAEdj9B,KAAKk9B,IAAM,CAAC,EACZl9B,KAAKm9B,eAAiB,IAAIhD,IAE1Bn6B,KAAKo9B,WAAa,IAAInQ,GAC1B,CAEA,iBAAIoQ,GACA,OAAOr9B,KAAK48B,WAAWU,cAAcD,aACzC,CAEA,iBAAIC,GACA,OAAOt9B,KAAK48B,WAAWU,aAC3B,CAEA,kBAAIC,GACA,OAAOv9B,KAAK+8B,QAAQ9B,SAASj7B,KAAKs9B,cAAet9B,KAAKg9B,cAC1D,CACA,kBAAIO,CAAev8B,GACfhB,KAAK+8B,QAAQ1B,SAASr7B,KAAKs9B,cAAet9B,KAAKg9B,cAAeh8B,EAAOhB,KAAK+8B,QAAQ1C,eACtF,CAEAmD,YAAYC,GACRtsB,OAAOC,KAAKqsB,GAAShvB,QAAQ6C,IACzB,IAAiC,IAA7BtR,KAAKi9B,OAAOzuB,QAAQ8C,GAAa,CACjC,MAAM6kB,EAAK7kB,EAAIrI,MAAM,KAAKC,MAAM,GAAGC,KAAK,KAExCnJ,KAAKq7B,SADOoC,EAAQnsB,GAAK8qB,aACNjG,EACvB,GAER,CACA5uB,cACIvH,KAAKm9B,eAAe11B,OACpBzH,KAAKm9B,eAAe31B,WACpBxH,KAAK+8B,QAAQlB,eAAe77B,KAAKs9B,cACrC,CAEAvoB,KAAK8lB,EAAgB,IACjB76B,KAAK+8B,QAAQhoB,KAAK/U,KAAK48B,WAAWU,cAAet9B,KAAKg9B,cAAeh9B,KAAK09B,gBAAgBlB,KAAKx8B,MAAOA,KAAKqtB,YAAYmP,KAAKx8B,MAAO66B,EACvI,CAEA8C,UAAUlB,EAAO5yB,GACb,MAAM+zB,EAAU59B,KAAK68B,aACfgB,EAAWD,EAAQ9O,YACzB,IAAIgP,EAAY99B,KAAKo9B,WAAWt6B,IAAI25B,KAC/BqB,IAAcD,KACfC,EAAYF,EAAQG,YAAYtB,EAAO5yB,GACnCg0B,GACA79B,KAAKo9B,WAAW3mB,IAAIgmB,EAAOqB,IAGnC99B,KAAKk9B,IAAM,IAAKY,GAChB99B,KAAKwvB,oBAAoBsO,GACzBF,EAAQ7O,WAAW0N,EAAOqB,EAAWj0B,EACzC,CAEAwjB,cACIlc,OAAOC,KAAKpR,KAAKk9B,KAAKzuB,QAAQ6nB,IAC1Bt2B,KAAKk9B,IAAI5G,GAAK,KAElBt2B,KAAKwvB,oBAAoBxvB,KAAKk9B,KAC9Bl9B,KAAKk9B,IAAM,CAAC,EACZl9B,KAAKo8B,kBAAe36B,CACxB,CAEAu6B,gBACIh8B,KAAK+8B,QAAQf,cAAch8B,KAAKs9B,cAAet9B,KAAKg9B,cACxD,CAOAgB,qBAAqBvU,EAAQwU,GAAe,GACxC,GAAIxU,EAAQ,CACR,MAAOzoB,EAAOk9B,GAAkBl+B,KAAK88B,OAAOnN,iBAAiBlG,GAC7D,IAAKyU,GAAkBD,EAAc,CACjC,MAAM7Q,KAAQtD,MAAe9oB,GAE7BhB,KAAK88B,OAAOpN,qBAAqBtC,EADhB,CAAC3D,GAEtB,CACA,OAAOzoB,EAAM6H,MACjB,CACA,MAAO,KACX,CACAmnB,QAAQvG,GACJ,OAAOzpB,KAAK88B,OAAO9M,QAAQvG,EAC/B,CAEA+F,oBAAoBpC,EAAOpsB,EAAOmsB,EAAUntB,KAAKs9B,eAC7Ct9B,KAAK88B,OAAOtN,oBAAoBrC,EAASC,EAAOpsB,EACpD,CACAq6B,SAASvrB,EAAKqmB,GACVn2B,KAAK+8B,QAAQ1B,SAASr7B,KAAKs9B,cAAet9B,KAAKg9B,cAAeltB,EAAKqmB,EACvE,CACAuH,gBAAgBjB,GACRz8B,KAAKo8B,eAAiBK,IACtBz8B,KAAK29B,UAAUlB,GACfz8B,KAAKo8B,aAAeK,EAE5B,EAEJE,SAAe1lB,UAAI,SAAA7M,GAAA,WAAAA,GAAwFuyB,GA5+Cd15B,MA4+C8CA,OA5+C9CA,MA4+CwE4rB,GA5+CxE5rB,MA4+CiGksB,GA5+CjGlsB,MA4+CwHu2B,IAAe,EACpOmD,EAAewB,UA7+C8El7B,MAAE,CAAAye,KA6+CAib,EAAc/xB,SAAA,CA7+ChB3H,SA63CvF05B,CAAc,KA0vBpB,SAASyB,GAAcC,EAAOC,EAAO,IAAKC,EAAS,KAC/C,IAAIC,EAAQ,CAACF,EAAMC,EAAQF,GACvBI,EAAIJ,EAAM7vB,QAAQ,QACtB,GAAIiwB,EAAI,EAAG,CACPD,EAAM,GAAKE,GAAmBL,EAAMr1B,UAAUy1B,GAAG51B,QACjD,IAAIyN,EAAU+nB,EAAMjN,OAAO,EAAGqN,GAAG51B,OAAOI,MAAM,KACxB,GAAlBqN,EAAQ/U,SACRi9B,EAAM,GAAKloB,EAAQ,GACnBkoB,EAAM,GAAKloB,EAAQ,GAE3B,SACc,GAALmoB,EACLD,EAAM,GAAKE,GAAmBL,EAAMx1B,YAEnC,CACD,IAAIyN,EAAU+nB,EAAMp1B,MAAM,KAC1Bu1B,EAA4B,IAAnBloB,EAAQ/U,OAAgB+U,EAAU,CACvCgoB,EAAMC,EAAQF,EAEtB,CACA,OAAOG,CACX,CAWA,SAASE,GAAmBC,GACxB,OAAOA,EAAK71B,QAAQ,QAAS,IAAIA,QAAQ,cAAe,OAC5D,CApgBiCqrB,YAsgBjC,MAAMyK,GAAoB,IAC1B,SAASC,GAAS79B,EAAOotB,GACrB,QAAmB3sB,IAAf2sB,EACA,OAAOptB,EAEX,MAAM89B,EAAkBC,IACpB,MAAMC,GAAgBD,EAAc71B,MAAM,GAAI01B,GAAkBr9B,QAChE,OAAIP,EAAMi+B,SAASL,MAAuB5jB,MAAMgkB,GACpC,GAAEA,EAAc5Q,EAAWptB,QAAQotB,EAAW8Q,OAEnDl+B,GAEX,OAAOA,EAAM8D,SAAS,KAClB9D,EAAMiI,MAAM,KAAKjC,IAAI83B,GAAgB31B,KAAK,KAAO21B,EAAe99B,EACxE,+HC5oEA,IA6BMm+B,EAAc,MAApB,MAAMA,UAAuBxC,KACzBp9B,YAAYq9B,EAAYE,EAAQC,EAASqC,EAAiBC,EAAiBC,EAAWC,GAClFtrB,MAAM2oB,EAAY,KAAME,EAAQC,GAChC/8B,KAAKu/B,gBAAkBA,EACvBv/B,KAAKg9B,cAAgB,UAChBh9B,KAAKu/B,kBAGNv/B,KAAKu/B,gBAAkB,IAAI3zB,KAAQwzB,EAAiBC,EAAiBzC,EAAY0C,IAErFt/B,KAAK+U,OACL/U,KAAKq7B,SAAS,GAAI,GACtB,CAKA,SAAImE,CAAM1vB,GACN9P,KAAKu/B,gBAAgBC,MAAQ1vB,EAC7B9P,KAAKq7B,SAASvrB,EAAK,GACvB,CACA4tB,gBAAgB18B,GACZhB,KAAKu/B,gBAAgBE,QAAUz+B,EAC/BhB,KAAKu/B,gBAAgBG,WACzB,CAOAA,YACI1/B,KAAKu/B,gBAAgBG,WACzB,EAEJP,SAAeloB,UAAI,SAAA7M,GAAA,WAAAA,GAAwF+0B,GAnINl8B,MAmIsCA,OAnItCA,MAmIgEqH,MAnIhErH,MAmI0FqH,MAnI1FrH,MAmIyHA,OAnIzHA,MAmIwJA,OAnIxJA,MAmIuLA,OAnIvLA,MAmIgNsH,KAAU,MAC/T40B,EAAehB,UApIsFl7B,MAAE,CAAAye,KAoIRyd,EAAclC,OAAA,CAAAuC,MAAA,CApIRv8B,MAAE08B,KAAA,kBAAA/0B,SAAA,CAAF3H,SAgG/Fk8B,CAAc,KA+CpB,MAAMS,EAAW,CACb,UAAW,aAAc,aAAc,aAAc,aAAc,aACnE,gBAAiB,gBAAiB,gBAAiB,gBACnD,gBAAiB,gBAAiB,gBAAiB,iBAOvD,IAKMC,EAAqB,MAA3B,MAAMA,UAA8BV,EAChC5/B,cACI0U,SAAS6rB,WACT9/B,KAAKi9B,OAAS2C,CAClB,EAEJC,SAAsB5oB,UAAI,UAAA8oB,EAAA,gBAAA31B,GAAA,OAAA21B,MApK2E98B,MAoKa48B,KAAqBz1B,GAArBy1B,EAAqB,GAA7G,GAC1BA,EAAsB1B,UArK+El7B,MAAE,CAAAye,KAqKDme,EAAqBn1B,UAAA,6TAAAuyB,OAAA,CAAAwC,QAAA,6YAAA70B,SAAA,CArKtB3H,SA8J/F48B,CAAqB,KAoBrBG,EAAoB,MAA1B,MAAMA,UAA6BnR,KAC/BkP,YAAY/W,EAAMnd,GAEd,MAAO,CAAE6f,QADmB,SAAT1C,EACcnd,EAAO6f,UAAY7f,EAAOo2B,SAAW,UAAY,IAAM,OAC5F,EAEJD,SAAqB/oB,UAAI,UAAAipB,EAAA,gBAAA91B,GAAA,OAAA81B,MAxL4Ej9B,MAwLY+8B,KAAoB51B,GAApB41B,EAAoB,GAA5G,GACzBA,EAAqBxS,WAzLgFvqB,MAAE,CAAAwqB,MAyLcuS,EAAoBhpB,QAApBgpB,EAAoB/oB,UAAAkH,WAAc,SAPjJ6hB,CAAoB,KAYpBG,EAAiB,MAAvB,MAAMA,UAA0BxD,KAC5Bp9B,YAAYq9B,EAAYC,EAAcC,EAAQC,EAASxN,EAAcpE,EAAYiV,GAC7EnsB,MAAM2oB,EAAYC,EAAcC,EAAQC,GACxC/8B,KAAKuvB,aAAeA,EACpBvvB,KAAKmrB,WAAaA,EAClBnrB,KAAKogC,mBAAqBA,EAC1BpgC,KAAKg9B,cAAgB,YAErBh9B,KAAK0pB,QAAU,GACf1pB,KAAKqgC,WAAY,EACjBrgC,KAAKsgC,cAAe,CACxB,CAIAC,kBACIvgC,KAAKwgC,qBACL,MAAMt7B,EAAW7D,MAAMiqB,KAAKtrB,KAAKs9B,cAAcp4B,UAC/C,QAAS+C,EAAI,EAAGA,EAAI/C,EAAS3D,OAAQ0G,IACjC,GAAIjI,KAAK+8B,QAAQ3B,SAASl2B,EAAS+C,GAAI,QAAS,CAC5CjI,KAAKsgC,cAAe,EACpB,KACJ,CAEAG,EAAYpE,IAAIr8B,KAAKs9B,eACrBt9B,KAAK0pB,QAAU+W,EAAY39B,IAAI9C,KAAKs9B,gBAGpCt9B,KAAK0pB,QAAU1pB,KAAK0gC,kBACpBD,EAAYhqB,IAAIzW,KAAKs9B,cAAet9B,KAAK0pB,UAE7C1pB,KAAK+U,OAEL,MAAM5F,EAAenP,KAAK+8B,QAAQ9B,SAASj7B,KAAKs9B,cAAet9B,KAAKg9B,cAAe,SAC9Dv7B,IAAjB0N,GAA+C,KAAjBA,EAC9BnP,KAAKq7B,UAAS,EAAM,IAGpBr7B,KAAKg8B,eAEb,CAMAwB,YAAYC,GACRtsB,OAAOC,KAAKqsB,GAAShvB,QAAQ6C,IACzB,IAAiC,IAA7BtR,KAAKi9B,OAAOzuB,QAAQ8C,GAAa,CACjC,MAAMqvB,EAAWrvB,EAAIrI,MAAM,KACrBktB,EAAKwK,EAASz3B,MAAM,GAAGC,KAAK,KAC5By3B,EAAanD,EAAQnsB,GAAK8qB,aAChC,IAAIyE,EAA4B,KAAfD,GACE,IAAfA,IAAe,EAAIE,MAAsBF,GAEzB,WAAhBD,EAAS,KACTE,GAAcA,GAElB7gC,KAAKq7B,SAASwF,EAAY1K,EAC9B,GAER,CAOAqK,qBACIxgC,KAAKqgC,UAAYrgC,KAAK+8B,QAAQ3B,SAASp7B,KAAKs9B,cAAe,UAC3D,CAAC,SAAU,gBAAgB7uB,QAAQ6C,IAC/BtR,KAAK+8B,QACAxB,WAAWv7B,KAAKs9B,cAAehsB,GAC/BvK,QAAKg6B,KAAU/gC,KAAKm9B,iBACpB70B,UAAUtI,KAAKg8B,cAAcQ,KAAKx8B,MAAK,EAEpD,CAMA0gC,kBACI,OAAQ1gC,KAAKqgC,WAAcrgC,KAAKsgC,cAAgBtgC,KAAKuvB,aAAa5B,gBAC9D,OAAS3tB,KAAK88B,OAAOjN,YAAY7vB,KAAKs9B,cAAe,WAAW,EACxE,CAEAI,gBAAgB18B,GAAQ,GACpB,GAAc,KAAVA,EACA,OAEJ,MAAMi/B,KAAWlQ,MAAiB/vB,KAAKmrB,YACvCnrB,KAAK29B,UAAU38B,EAAQ,OAAS,QAAS,CAAE0oB,QAAS1pB,KAAK0pB,QAASuW,aAC9DA,GAAYjgC,KAAKogC,oBACjBpgC,KAAKs9B,cAAclQ,MAAMqD,YAAY,UAAW,IAEpDzwB,KAAK+8B,QAAQf,cAAch8B,KAAKq9B,cAAe,aACnD,EAEJ8C,SAAkBlpB,UAAI,SAAA7M,GAAA,WAAAA,GAAwF+1B,GAjSTl9B,MAiS4CA,OAjS5CA,MAiSsE+8B,GAjStE/8B,MAiSuGqH,MAjSvGrH,MAiSiIqH,MAjSjIrH,MAiSgKsrB,MAjShKtrB,MAiS0LipB,OAjS1LjpB,MAiSkNwrB,MAAY,EACnU0R,EAAkBhC,UAlSmFl7B,MAAE,CAAAye,KAkSLye,EAAiBv1B,SAAA,CAlSd3H,eA8L/Fk9B,CAAiB,KAiHvB,MAAMM,EAAc,IAAI3G,QAClBkH,EAAW,CACb,SAAU,eACV,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,eAChD,SAAU,eACV,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,gBAYpD,IAGMC,EAAwB,MAA9B,MAAMA,UAAiCd,EACnC5gC,cACI0U,SAAS6rB,WACT9/B,KAAKi9B,OAAS+D,CAClB,EAEJC,SAAyBhqB,UAAI,UAAAiqB,EAAA,gBAAA92B,GAAA,OAAA82B,MA7UwEj+B,MA6UgBg+B,KAAwB72B,GAAxB62B,EAAwB,GAAhH,GAC7BA,EAAyB9C,UA9U4El7B,MAAE,CAAAye,KA8UEuf,EAAwBv2B,UAAA,0oBAAAuyB,OAAA,CAAAkE,OAAA,+YAAAC,OAAA,gZAAAx2B,SAAA,CA9U5B3H,SAuU/Fg+B,CAAwB,KAqB9B,MAAMI,EACF9hC,YAAY+R,EAAKtQ,EAAOsgC,GAAW,GAC/BthC,KAAKsR,IAAMA,EACXtR,KAAKgB,MAAQA,EACbhB,KAAKsR,IAAMgwB,EAAWhwB,EAAIxI,QAAQ,QAAS,IAAID,OAASyI,EAAIzI,OAC5D7I,KAAKgB,MAAQsgC,EAAWtgC,EAAM8H,QAAQ,QAAS,IAAID,OAAS7H,EAAM6H,OAClE7I,KAAKgB,MAAQhB,KAAKgB,MAAM8H,QAAQ,IAAK,GACzC,EAEJ,SAASy4B,EAAQ9X,GACb,IAAI+X,SAAc/X,EAClB,MAAa,WAAT+X,EACQ/X,EAAOlqB,cAAgB8B,MAAS,QACnCooB,EAAOlqB,cAAgBk8B,IAAO,MAAQ,SAExC+F,CACX,CAwCA,SAASC,EAAiBzO,GACtB,MAAO1hB,KAAQowB,GAAQ1O,EAAG/pB,MAAM,KAChC,OAAO,IAAIo4B,EAAgB/vB,EAAKowB,EAAKv4B,KAAK,KAC9C,CAEA,SAASw4B,EAAe36B,EAAK46B,GACzB,OAAMA,EAAMtwB,MACRtK,EAAI46B,EAAMtwB,KAAOswB,EAAM5gC,OAEpBgG,CACX,CAEA,IAOM66B,EAAc,MAApB,MAAMA,UAAuBlF,KACzBp9B,YAAYq9B,EAAYE,EAAQC,EAAS+E,EAAWC,EAASzC,EAAW0C,EAAiBjU,EAAc5C,GACnGlX,MAAM2oB,EAAY,KAAME,EAAQC,GAChC/8B,KAAK8hC,UAAYA,EACjB9hC,KAAKgiC,gBAAkBA,EACvBhiC,KAAKg9B,cAAgB,UAChBh9B,KAAKgiC,kBAGNhiC,KAAKgiC,gBAAkB,IAAIC,KAAQrF,EAAYmF,EAASzC,IAE5Dt/B,KAAK+U,OACL,MAAM1I,EAASrM,KAAKs9B,cAAcpN,aAAa,UAAY,GAC3DlwB,KAAKkiC,eAAiBliC,KAAKmiC,cAAc91B,GACzCrM,KAAKigC,SAAWlS,MAAgBgC,MAAiB5E,EACrD,CAEAuS,gBAAgB18B,GACZ,MAAMqL,EAASrM,KAAKmiC,cAAcnhC,GAClChB,KAAKgiC,gBAAgBI,QAAU,IAAKpiC,KAAKkiC,kBAAmB71B,GACxDrM,KAAKigC,UACLjgC,KAAKwvB,oBAAoBnjB,GAE7BrM,KAAKgiC,gBAAgBtC,WACzB,CAEArS,cACIrtB,KAAKgiC,gBAAgBI,QAAUpiC,KAAKkiC,eACpCliC,KAAKgiC,gBAAgBtC,WACzB,CAOAyC,cAAc91B,GAEV,MAAMy1B,EAAahyB,GAAQ9P,KAAK8hC,UAAUO,SAASC,MAAgBC,MAAOzyB,IAAQ,GAClF,GAAIzD,EACA,OAAQk1B,EAAQl1B,IACZ,IAAK,SAAU,OAAOm2B,GA/FtC,SAASC,GAAa7X,EAAQ8X,EAAY,KACtC,OAAOC,OAAO/X,GACT/hB,OACAI,MAAMy5B,GACN17B,IAAK8I,GAAQA,EAAIjH,QACjB3B,OAAO4I,GAAe,KAARA,EACvB,CAyFuD2yB,CAAap2B,GAASy1B,GAC7D,IAAK,QAAS,OAAOU,GAAiBn2B,EAAQy1B,GAE9C,QAAS,OA5EzB,SAASc,EAAgBhY,EAAQyX,GAC7B,IAAI9jB,EAAO,GACX,MAAwB,QAApBgjB,EAAQ3W,GACRA,EAAOnc,QAAQmzB,GAASrjB,EAAK3U,KAAKg4B,IAGlCzwB,OAAOC,KAAKwZ,GAAQnc,QAAS6C,IACzBiN,EAAK3U,KAAM,GAAE0H,KAAOsZ,EAAOtZ,KAAM,GArB7C,SAASuxB,EAAmBx2B,EAAQg2B,GAOhC,OAAOh2B,EACFrF,IAAIy6B,GACJv6B,OAAO06B,KAAWA,GAClB56B,IATkBgsB,IACfqP,IACArP,EAAGhyB,MAAQqhC,EAASrP,EAAGhyB,QAEpBgyB,IAMNnU,OAAO8iB,EAAgB,CAAC,EACjC,CAYWkB,CAAmBtkB,EAAM8jB,EACpC,CAiEgCO,CAAgBv2B,EAAQy1B,GAGhD,MAAO,CAAC,CACZ,CAKApC,YACI1/B,KAAKgiC,gBAAgBtC,WACzB,EAEJmC,SAAe5qB,UAAI,SAAA7M,GAAA,WAAAA,GAAwFy3B,GAheN5+B,MAgesCA,OAhetCA,MAgegEqH,MAhehErH,MAge0FqH,MAhe1FrH,MAgeyH6/B,MAhezH7/B,MAgeuJA,OAhevJA,MAgesLA,OAhetLA,MAge+MsH,KAAU,IAhezNtH,MAgekQwrB,MAhelQxrB,MAge2RipB,OAAW,EAC3Y2V,EAAe1D,UAjesFl7B,MAAE,CAAAye,KAieRmgB,EAAcj3B,SAAA,CAjeR3H,SAua/F4+B,CAAc,KAwEpB,MAAM5E,GAAS,CACX,UACA,aAAc,aAAc,aAAc,aAAc,aACxD,gBAAiB,gBAAiB,gBAAiB,gBACnD,gBAAiB,gBAAiB,gBAAiB,iBAQvD,IAIM8F,GAAqB,MAA3B,MAAMA,UAA8BlB,EAChCtiC,cACI0U,SAAS6rB,WACT9/B,KAAKi9B,OAASA,EAClB,EAEJ8F,SAAsB9rB,UAAI,UAAA+rB,EAAA,gBAAA54B,GAAA,OAAA44B,MArgB2E//B,MAqgBa8/B,KAAqB34B,GAArB24B,EAAqB,GAA7G,GAC1BA,EAAsB5E,UAtgB+El7B,MAAE,CAAAye,KAsgBDqhB,EAAqBr4B,UAAA,6TAAAuyB,OAAA,CAAAmF,QAAA,6YAAAx3B,SAAA,CAtgBtB3H,SA+f/F8/B,CAAqB,KAa3B,SAASP,GAAiBn2B,EAAQg2B,GAO9B,OAAOh2B,EACFrF,IAAIy6B,GACJv6B,OAAO06B,KAAWA,GAClB56B,IATkBgsB,IACfqP,IACArP,EAAGhyB,MAAQqhC,EAASrP,EAAGhyB,QAEpBgyB,IAMNnU,OAAO8iB,EAAgB,CAAC,EACjC,CAeA,IAKM91B,GAAc,MAApB,MAAMA,GAENA,SAAeoL,UAAI,SAAA7M,GAAA,WAAAA,GAAwFyB,EAAc,EACzHA,EAAewgB,UA/iBsFppB,KAAE,CAAAye,KA+iBK7V,IAO5GA,EAAeygB,UAtjBsFrpB,MAAE,CAAAggC,QAAA,CAsjB+B7W,QAVhIvgB,CAAc","names":["FieldState","constructor","name","config","group","control","settings$","settings","basics","controlStatus","this","nameOfThis","FieldLogicBase","logThis","canAutoTranslate","_log","EavLogger","log","a","add","logic","logicInstance","FieldLogicManager","singleton","importMe","isValueEmpty","value","isCreateMode","l","fn","emptyEntityField","Array","isArray","length","r","undefined","findAndMergeAdvanced","tools","possibleGuid","defaults","wysiwygConfig","eavConfig","Entities","find","e","Guid","advanced","entityReader","flatten","UnknownLogic","InputTypeCatalog","Unknown","update","logics","window","eavFieldLogicManager","get","inputTypeName","getOrUnknown","i0","PagePickerComponent_Conditional_0_Conditional_12_For_2_ng_container_0_Template","pageAndChildren_r4","_c0","page_r3","PagePickerComponent_Conditional_0_Conditional_12_For_2_Template","vm_r5","tree","page_r7","path","_r6","$implicit","ctx_r1","select","PagePickerComponent_Conditional_0_Conditional_13_For_3_Conditional_6_Template","PagePickerComponent_Conditional_0_Conditional_13_For_3_Conditional_10_Template","PagePickerComponent_Conditional_0_Conditional_13_For_3_Conditional_11_Template","id","selected","isVisible","isClickable","PagePickerComponent_Conditional_0_Conditional_13_Conditional_1_Template","PagePickerComponent_Conditional_0_Conditional_13_For_3_Template","filteredSearch","_r9","page_r10","page","toggle","toggled","includes","PagePickerComponent_Conditional_0_ng_template_14_Conditional_12_For_2_ng_container_0_Template","child_r11","PagePickerComponent_Conditional_0_ng_template_14_Conditional_12_For_2_Template","children","PagePickerComponent_Conditional_0_ng_template_14_Conditional_2_Template","PagePickerComponent_Conditional_0_ng_template_14_Conditional_3_Template","_r8","PagePickerComponent_Conditional_0_ng_template_14_Conditional_10_Template","PagePickerComponent_Conditional_0_ng_template_14_Conditional_11_Template","PagePickerComponent_Conditional_0_ng_template_14_Conditional_12_Template","$event","_r1","setFilter","PagePickerComponent_Conditional_0_Conditional_12_Template","PagePickerComponent_Conditional_0_Conditional_13_Template","PagePickerComponent_Conditional_0_ng_template_14_Template","filterText","PagePickerComponent","dialogData","dialogRef","translate","queryService","transient","QueryService","ngOnInit","parseSelectedPageId","filterText$","BehaviorSubject","searchItems$","tree$","filteredSearch$","combineLatest","pipe","map","searchItems","filter","item","toLocaleLowerCase","viewModel$","fetchPages","ngOnDestroy","complete","next","confirm","instant","closeDialog","pageId","ArrayHelpers","toggleInArray","close","i","result","toString","stream","getAvailableEntities","subscribe","data","console","error","pages","buildPageSearch","Path","trim","replace","startsWith","substring","split","slice","join","Id","Name","Visible","Clickable","buildPageTree","items","parentId","ParentId","push","parent","prefix","fieldValue","controls","fieldName","parseInt","static","t","MAT_DIALOG_DATA","i1","i2","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","PagePickerComponent_Conditional_0_Template","tmp_0_0","MatFormFieldModule","i3","MatInputModule","i4","FormsModule","i5","NgTemplateOutlet","NgClass","ExtendedModule","i6","MatIconModule","i7","MatDialogActions","AsyncPipe","TranslateModule","TippyDirective","styles","PagePicker","open","dialog","viewContainerRef","changeDetectorRef","callback","autoFocus","height","width","afterClosed","take","markForCheck","TranslateMenuHelpers","getTranslationStateClass","linkType","TranslationLinks","MissingDefaultLangValue","Translate","LinkCopyFrom","DontTranslate","LinkReadOnly","LinkReadWrite","calculateSharedInfoMessage","dimensions","currentLanguage","calculateShortDimensions","calculateEditAndReadDimensions","editableDimensions","readOnlyDimensions","infoMessage","editableExist","readOnlyExist","dimensionsMap","shortCurrentLanguage","indexOf","forEach","dimension","shortNoReadOnly","shortDimension","BestValueModes","Default","Strict","LocalizationHelpers","language","attributeValues","defaultValue","translation","getValueTranslation","Value","translationDefault","FormLanguage","bothPrimary","Values","getValueOrDefault","field","valuesOfLanguage","val","valueHasLanguage","Dimensions","d","current","primary","isEditableOrReadonlyTranslationExist","valuesEditableOfCurrent","langs","hasEditableValue","countEditableValues","countEditableValuesWithContent","v","hasReadonlyValue","hasValueOnPrimary","defaultLanguage","updateAttribute","oldAttributes","attributeKey","attribute","newAttributes","Object","keys","attributeCopy","key","updateAttributesValues","allFields","updateValues","eavAttributes","newItemValue","newValues","newEavValue","EavValue","create","EavDimension","newAttribute","updateAttributeValue","allAttributes","updateValue","isReadOnly","newLanguageValue","addAttributeValue","attributeValue","attributeType","Type","addAttributeDimension","newDimensionValue","existingDimensionValue","eavValue","concat","removeAttributeDimension","attributes","validDimensions","some","getBestValue","eavValues","mode","bestDimensions","bestValue","findValueForDimensions","findOfExactDimension","x","FieldsFind","FieldUnwrap","FieldMask","ServiceBase","injector","super","signal","watch","fieldsUsedInMask","fieldState","inject","fieldConfig","formConfig","FormConfigService","destroy","initPreClean","overloadPreCleanValues","preClean","initCallback","init","mask","rename","updateMask","logChanges","enabled","effect","latest","extractFieldNames","watchAllFields","onChange","resolve","hasPlaceholders","lowercaseInsideSquareBrackets","match","toLowerCase","appId","zoneId","entityGuid","entityId","replaceValue","hasOwnProperty","cleaned","matches","staticName","maybeNew","set","valueSub","valueChanges","_","subscriptions","_angular_core__WEBPACK_IMPORTED_MODULE_3__","jDH","factory","ɵfac","EntityReader","metadataItem","flattenAll","metadataItems","merged","values","entries","Attributes","currentValues","itemAttributes","formValues","FileTypeHelpers","defaultIcon","customExtensions","doc","docx","xls","xlsx","ppt","pptx","pdf","mp3","avi","mpg","mpeg","mov","mp4","zip","rar","txt","html","css","xml","xsl","matExtensions","vcf","getExtension","filename","lastIndexOf","getIconClass","ext","isKnownType","isImage","isImgRegex","test","FieldHelper","getDefaultOrPrefillValue","inputType","itemHeader","onlyPrefill","prefillRaw","Prefill","rNull","DefaultValue","BooleanDefault","BooleanTristate","DateTimeDefault","Date","toJSON","NumberDefault","NumberDropdown","NumberPicker","isNaN","Number","EntityDefault","EntityQuery","EntityContentBlocks","EntityPicker","guids","guid","JSON","stringify","parse","SanitizeHelper","removeFromStart","sanitized","charToRemove","removeFromEnd","cleanBadPath","goodChar","sanitizePath","sanitizeName","convert","valuesDto","lang","LanguageInstanceService","SignalStoreObservableBase","getId","formId","sanitizeAdd","empty","initial","#entityReaderCache","ComputedCacheHelper","#signalsHideHeaderCache","addForm","hideHeader","setCurrent","newLanguage","getEntityReader$","getLanguage$","shareReplay","getEntityReader","getOrCreate","getSignal","cache$","languageInstances","mapUntilChanged","m","getHideHeaderSignal","cache","updateHideHeader","_angular_core__WEBPACK_IMPORTED_MODULE_7__","providedIn","SignalStoreBase","#cache","#list","list","options","computed","#itemSignalsCache","end","addMany","reduce","acc","before","newItem","f","remove","updatedStore","clearCache","getAll","getMany","ids","getOrCreateWithInfo","isNew","getManySignal","sig","equal","isEqual","getAllSignal","#cache$","toObservable","#list$","list$","getList$","getMany$","obj","ContentTypeSettingsHelpers","initDefaultSettings","reader","contentType","defaultSettings","Metadata","Description","EditInstructions","Features","Label","ListInstructions","Notes","Icon","Link","_itemTitle","getContentTypeTitle","_slotCanBeEmpty","IsEmptyAllowed","_slotIsEmpty","IsEmpty","type","metadata","label","FieldsSettingsHelpers","getDefaultFieldSettings","defSettings","AllDeprecated","moveDeprecatedSettings","Placeholder","Required","Disabled","DisableTranslation","DefaultCollapsed","Collapsed","Formulas","InputType","DisableAutoTranslation","findDisableTranslation","contentTypeMetadata","attributeMetadata","MetadataDecorators","LanguagesDecorator","Enabled","DisableI18n","mdItem","isLastInGroup","index","findIndex","InputTypeHelpers","isGroupStart","isGroupEnd","endsPreviousGroup","getDisabledBecauseTranslations","disableTranslation","getTranslationState","infoLabel","editableTranslationExists","readonlyTranslationExists","state","getTranslationStateCore","editableElements","asDeprecated","VisibleInEditUI","configSignal","context","Context","languageService","initFormConfig","dialogContext","isParentDialog","itemGuids","createMode","isCopy","enableHistory","languages","Language","Current","Primary","List","appRoot","App","Url","appSharedRoot","SharedUrl","moduleId","partOfPage","sessionStorage","getItem","keyPartOfPage","partOfPageDefault","portalRoot","Site","tabId","systemRoot","location","pathname","versioningOptions","getVersioningOptions","keyPublishing","enableFormulaSave","Enable","FormulaSave","overrideEditRestrictions","OverrideEditRestrictions","publishing","allowAll","show","hide","branch","publish","language$","_language$","_angular_core__WEBPACK_IMPORTED_MODULE_4__","original","diffCurrent","SaveEmptyDecorator","CustomDefault","CustomGps","CustomJsonEditor","DefaultSuffix","EmptyDefault","EmptyEnd","EmptyMessage","ExternalWebComponent","HyperlinkDefault","HyperlinkLibrary","StringDefault","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringJson","StringTemplatePicker","StringUrlPath","StringWysiwyg","StringPicker","ends","newPicker","isEmpty","isMessage","isNewPicker","array","splice","delete","clear","distinctUntilChanged","mapUntilObjChanged","applyCssPrefixes","target","display","order","INLINE","LAYOUT_VALUES","buildLayoutCSS","direction","wrap","isInline","validateValue","buildCSS","inline","validateWrapValue","isFlowHorizontal","flow","extendObject","dest","sources","TypeError","source","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","removeStyles","_document","platformId","isPlatformBrowser","elements","from","querySelectorAll","CLASS_NAME","classRegex","el","classList","contains","parentNode","removeChild","className","deps","DOCUMENT","PLATFORM_ID","multi","CoreModule","ɵmod","ɵinj","providers","MediaChange","mediaQuery","mqAlias","suffix","priority","property","clone","StylesheetMap","stylesheet","Map","addStyleToElement","element","style","clearStyles","getStyleForElement","styleName","ɵprov","token","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","multiplier","defaultUnit","detectLayoutDisplay","LAYOUT_CONFIG","InjectionToken","SERVER_TOKEN","BREAKPOINT","mergeAlias","alias","StyleBuilder","shouldCache","sideEffect","_input","_styles","_parent","StyleUtils","_serverStylesheet","_serverModuleLoaded","_platformId","layoutConfig","applyStyleToElement","_applyMultiValueStyleToElement","applyStyleToElements","getFlowDirection","query","lookupStyle","lookupInlineStyle","isPlatformServer","hasWrap","lookupAttributeValue","getAttribute","getPropertyValue","getServerStyle","readStyleAttribute","inlineOnly","getComputedStyle","sort","setProperty","setServerStyle","styleValue","styleMap","writeStyleAttribute","styleAttrValue","setAttribute","styleAttribute","styleList","colonIndex","Error","substr","sortDescendingPriority","b","sortAscendingPriority","MatchMedia","_zone","registry","pendingRemoveListenerFns","_observable$","asObservable","activations","results","mql","isActive","registerQuery","observe","mqList","filterOthers","matchMedia$","change","registration$","Observable","observer","lastChange","pop","merge","buildQueryCss","mediaQueries","it","ALL_STYLES","styleEl","createElement","styleSheet","appendChild","createTextNode","head","mq","onMQLEvent","run","buildMQL","addListener","removeListener","constructMql","isBrowser","matchMedia","buildMockMql","et","EventTarget","media","addEventListener","dispatchEvent","onchange","DEFAULT_BREAKPOINTS","overlapping","HANDSET_PORTRAIT","HANDSET_LANDSCAPE","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","TABLET","WEB","ORIENTATION_BREAKPOINTS","ALIAS_DELIMITERS","firstUpperCase","part","first","charAt","remainder","toUpperCase","BREAKPOINTS","breakpoints","bpFlattenArray","apply","mergeByAlias","custom","dict","bp","validateSuffixes","camelCase","k","BreakPointRegistry","findByMap","findByAlias","findWithPredicate","findByQuery","overlappings","aliases","suffixes","searchFn","response","PRINT","BREAKPOINT_PRINT","PrintHook","registeredBeforeAfterPrintHooks","isPrintingBeforeAfterEvent","beforePrintEventListeners","afterPrintEventListeners","formerActivations","isPrinting","queue","PrintQueue","deactivations","withPrintQuery","queries","isPrintEvent","printAlias","printBreakPoints","getEventBreakpoints","updateEvent","event","registerBeforeAfterPrintHooks","defaultView","beforePrintListener","startPrinting","updateStyles","afterPrintListener","stopPrinting","interceptEvents","collectActivations","blockPropagation","bpList","activatedBreakpoints","addPrintBreakpoints","hasFormerBp","wasActivated","removeEventListener","printBreakpoints","addBreakpoint","isPrintBreakPoint","MediaMarshaller","hook","_useFallbacks","_activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","activatedAlias","bps","useFallbacks","onMediaChange","mc","bpIndex","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","getActivatedValues","hasValue","setValue","updateElement","trackValue","keyMap","Set","valueMap","clearElement","builders","releaseElement","s","unsubscribe","triggerUpdate","triggers","watchers","newSubscription","currentValue","has","lastHope","tap","bind","input","oldMap","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","mru","destroySubject","styleCache","parentElement","nativeElement","activatedValue","ngOnChanges","changes","updateWithValue","addStyles","builder","useCache","genStyles","buildStyles","getFlexFlowDirection","addIfMissing","hasInlineValue","ɵdir","validateBasis","basis","grow","shrink","parts","j","_validateCalcValue","calc","MULTIPLIER_SUFFIX","multiply","transformValue","possibleValue","numberValue","endsWith","unit","ClassDirective","iterableDiffers","keyValueDiffers","renderer2","ngClassInstance","klass","ngClass","ngDoCheck","None","inputs$2","DefaultClassDirective","arguments","ɵDefaultClassDirective_BaseFactory","ShowHideStyleBuilder","isServer","ɵShowHideStyleBuilder_BaseFactory","ShowHideDirective","serverModuleLoaded","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","DISPLAY_MAP","getDisplayStyle","inputKey","inputValue","shouldShow","coerceBooleanProperty","takeUntil","inputs$1","DefaultShowHideDirective","ɵDefaultShowHideDirective_BaseFactory","fxShow","fxHide","NgStyleKeyValue","noQuotes","getType","what","stringToKeyValue","vals","keyValuesToMap","entry","StyleDirective","sanitizer","differs","ngStyleInstance","NgStyle","fallbackStyles","buildStyleMap","ngStyle","sanitize","SecurityContext","STYLE","buildMapFromList","buildRawList","delimiter","String","buildMapFromSet","buildMapFromList$1","i2$1","DefaultStyleDirective","ɵDefaultStyleDirective_BaseFactory","imports"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/edit/fields/field-state.ts","./projects/eav-ui/src/app/edit/fields/logic/field-logic-base.ts","./projects/eav-ui/src/app/edit/fields/logic/field-logic-unknown.ts","./projects/eav-ui/src/app/edit/fields/logic/field-logic-manager.ts","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.component.html","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.component.ts","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.helpers.ts","./projects/eav-ui/src/app/edit/fields/page-picker/page-picker.helper.ts","./projects/eav-ui/src/app/edit/fields/wrappers/localization/translate-menu/translate-menu.helpers.ts","./projects/eav-ui/src/app/edit/localization/localization.constants.ts","./projects/eav-ui/src/app/edit/localization/localization.helpers.ts","./projects/eav-ui/src/app/edit/localization/translation-link.constants.ts","./projects/eav-ui/src/app/edit/shared/helpers/field-mask.helper.ts","./projects/eav-ui/src/app/edit/shared/helpers/entity-reader.ts","./projects/eav-ui/src/app/edit/shared/helpers/file-type.helpers.ts","./projects/eav-ui/src/app/edit/shared/helpers/input-field.helpers.ts","./projects/eav-ui/src/app/edit/shared/helpers/sanitize.helper.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-dimension.ts","./projects/eav-ui/src/app/edit/shared/models/eav/eav-value.ts","./projects/eav-ui/src/app/edit/shared/store/language-instance.service.ts","./projects/eav-ui/src/app/edit/shared/store/signal-store-base.ts","./projects/eav-ui/src/app/edit/shared/store/signal-store-observable-base.ts","./projects/eav-ui/src/app/edit/state/fields-settings.helpers.ts","./projects/eav-ui/src/app/edit/state/form-config.service.ts","./projects/eav-ui/src/app/edit/state/form-languages.model.ts","./projects/eav-ui/src/app/edit/state/metadata-decorators.constants.ts","./projects/eav-ui/src/app/shared/fields/input-type-catalog.ts","./projects/eav-ui/src/app/shared/fields/input-type-helpers.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/shared/helpers/computed-cache.ts","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-_private-utils.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-core.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-extended.mjs"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { AbstractControl, UntypedFormGroup } from '@angular/forms';\r\nimport { Signal } from '@angular/core';\r\nimport { FieldConfigSet } from './field-config-set.model';\r\nimport { BasicControlSettings } from '../../../../../edit-types/src/BasicControlSettings';\r\nimport { ControlStatus } from '../shared/models/control-status.model';\r\n\r\n/**\r\n * This is provided / injected at the fields-builder for every single field.\r\n * So any control or service within that field, which requests this service, will get one containing exactly that fields.\r\n */\r\nexport class FieldState {\r\n  constructor(\r\n    /** The fields technical name to access settings etc. */\r\n    public name: string,\r\n\r\n    /** Field configuration, incl. a lot of unchanging values and access to adam, dropzone etc. */\r\n    public config: FieldConfigSet,\r\n\r\n    /** The form group containing the field - rarely relevant, as you should use the control in most cases */\r\n    public group: UntypedFormGroup,\r\n\r\n    /** The control of the field in the form group */\r\n    public control: AbstractControl,\r\n\r\n    /** The settings as an observable - where possible, try to use the signal instead */\r\n    public settings$: Observable<FieldSettings>,\r\n\r\n    /** The settings as a signal - use this for most cases */\r\n    public settings: Signal<FieldSettings>,\r\n\r\n    /** The basic settings - use this for most cases as it will change less than the settings signal */\r\n    public basics: Signal<BasicControlSettings>,\r\n\r\n    public controlStatus: Signal<ControlStatus<unknown>>,\r\n  ) { }\r\n}\r\n","import { FieldSettings, FieldValue } from '../../../../../../edit-types';\r\nimport { EavLogger } from '../../../shared/logging/eav-logger';\r\nimport { FieldLogicManager } from './field-logic-manager';\r\nimport { FieldLogicTools } from './field-logic-tools';\r\n\r\n/** LogThis will apply, if the inheriting class isn't specifying it in the constructor */\r\nconst logThis = false;\r\nconst nameOfThis = 'FieldLogic';\r\n\r\ntype LogicConstructor = new (...args: any[]) => FieldLogicBase;\r\n\r\nexport abstract class FieldLogicBase {\r\n\r\n  constructor(name?: string, logThis?: boolean) {\r\n    if (name) {\r\n      this.name = name;\r\n      this._log = new EavLogger(`${nameOfThis}[${name}]`, logThis);\r\n      this.log.a(`constructor for ${name}`);\r\n    }\r\n  }\r\n\r\n\r\n  /** Input type name */\r\n  name: string;\r\n\r\n  /** If this field supports AutoTranslate (new v15.x) */\r\n  public canAutoTranslate = false;\r\n\r\n  /** Adds Logic to FieldLogicManager */\r\n  static add(logic: LogicConstructor) {\r\n    const logicInstance = new logic();\r\n    FieldLogicManager.singleton().add(logicInstance);\r\n  }\r\n\r\n  /** Run this dummy method from component to make sure Logic files are not tree shaken */\r\n  static importMe(): void { }\r\n\r\n  get log() { return this._log ??= new EavLogger(`${nameOfThis}[${this.name}]`, logThis) };\r\n  private _log: EavLogger;\r\n\r\n  /**\r\n   * Entity fields for empty items are prefilled on the backend with []\r\n   * so I can never know if entity field is brand new, or just emptied out by the user\r\n   * \r\n   * Note: 2dm 2023-08-31 moved from InputFieldHelpers; in future, each logic can override this\r\n   */\r\n  isValueEmpty(value: FieldValue, isCreateMode: boolean): boolean {\r\n    const l = this.log.fn('isValueEmpty', { value, isCreateMode });\r\n    const emptyEntityField = Array.isArray(value) && value.length === 0 && isCreateMode;\r\n    return l.r(value === undefined || emptyEntityField);\r\n  }\r\n\r\n  /** \r\n   * Update field settings - typically used on init and in every formula cycle\r\n   */\r\n  abstract update(updateSpecs: FieldLogicUpdate): FieldSettings;\r\n\r\n  /**\r\n   * Lookup advanced (external) configuration.\r\n   * These are usually stored in the eavConfig.settings.\r\n   * Needs defaults to merge for anything that is not defined in the external config.\r\n   * @param possibleGuid - guid of the external config, if empty, return defaults\r\n   * @param defaults - defaults to merge with external config\r\n   */\r\n  findAndMergeAdvanced<T>(tools: FieldLogicTools, possibleGuid: string, defaults: T): T {\r\n    if (!possibleGuid) return defaults;\r\n\r\n    const wysiwygConfig = tools.eavConfig.settings.Entities.find(e => e.Guid === possibleGuid);\r\n    if (!wysiwygConfig) return defaults;\r\n\r\n    const advanced = tools.entityReader.flatten(wysiwygConfig) as T;\r\n    return { ...defaults, ...advanced };\r\n  }\r\n}\r\n\r\nexport interface FieldLogicUpdate<T = FieldValue> {\r\n  /** Settings before logic update */\r\n  settings: FieldSettings;\r\n\r\n  /** Tools for doing various kind of work in the logic, which is singleton and may need context-specific tools */\r\n  tools: FieldLogicTools;\r\n\r\n  /** The field value which the settings-update sometimes needs to know, eg. to indicated selected option in a dropdown */\r\n  value?: T;\r\n}","import { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { FieldLogicBase, FieldLogicUpdate } from './field-logic-base';\r\nimport { FieldSettings } from '../../../../../../edit-types/src/FieldSettings';\r\n\r\nexport class UnknownLogic extends FieldLogicBase {\r\n  name = InputTypeCatalog.Unknown;\r\n\r\n  canAutoTranslate = false;\r\n\r\n  update({ settings }: FieldLogicUpdate): FieldSettings {\r\n    return settings;\r\n  }\r\n}\r\n\r\n// Don't register here, the manager will register it as a fallback\r\n// FieldLogicBase.add(UnknownLogic);\r\n\r\n","import { InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { EavWindow } from '../../../shared/models/eav-window.model';\r\nimport { FieldLogicBase } from './field-logic-base';\r\nimport { UnknownLogic } from './field-logic-unknown';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport class FieldLogicManager {\r\n  private logics: Record<string, FieldLogicBase> = {};\r\n\r\n  private constructor() {\r\n    // add unknown as a fallback for all scenarios\r\n    this.add(new UnknownLogic());\r\n  }\r\n\r\n  static singleton(): FieldLogicManager {\r\n    return window.eavFieldLogicManager ??= new FieldLogicManager();\r\n  }\r\n\r\n  /** Add settings logic */\r\n  add(logic: FieldLogicBase): void {\r\n    this.logics[logic.name] = logic;\r\n  }\r\n\r\n  /** Get settings logic for input type */\r\n  get(inputTypeName: string): FieldLogicBase {\r\n    return this.logics[inputTypeName] ?? null;\r\n  }\r\n\r\n  /** Get or use unknown - temporary solution v16.04 to prevent any scenario where there is none */\r\n  getOrUnknown(inputTypeName: string): FieldLogicBase {\r\n    return this.get(inputTypeName) ?? this.get(InputTypeCatalog.Unknown);\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ 'Fields.Hyperlink.PagePicker.Title' | translate }}</div>\r\n    </div>\r\n    <div class=\"eav-dialog-content\">\r\n      <div class=\"page-search-box\">\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput [ngModel]=\"vm.filterText\" (ngModelChange)=\"setFilter($event)\">\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"page-tree-box\">\r\n        @if (!vm.filterText) {\r\n          <ul>\r\n            @for (page of vm.tree; track page) {\r\n              <ng-container *ngTemplateOutlet=\"pageAndChildren; context: {page: page}\"></ng-container>\r\n            }\r\n          </ul>\r\n        }\r\n        @if (vm.filterText) {\r\n          <ul>\r\n            @if (vm.filteredSearch.length === 0) {\r\n              <li>\r\n                <div class=\"page-row\">\r\n                  <div class=\"no-toggle\"></div>\r\n                  <div>No results</div>\r\n                </div>\r\n              </li>\r\n            }\r\n            @for (page of vm.filteredSearch; track page) {\r\n              <li>\r\n                <div class=\"page-row\">\r\n                  <div class=\"no-toggle\"></div>\r\n                  <div class=\"page-label\" [ngClass]=\"page.id === selected ? 'selected' : ''\" (click)=\"select(page)\">\r\n                    <div class=\"page-icon-and-text\">\r\n                      <mat-icon class=\"page-icon\" svgIcon=\"file\"></mat-icon>\r\n                      @if (page.path) {\r\n                        <span class=\"page-path\" [tippy]=\"page.path\">{{ page.path }}&nbsp;>&nbsp;</span>\r\n                      }\r\n                      <span class=\"page-name\" [tippy]=\"page.name\">{{ page.name }}</span>\r\n                    </div>\r\n                    <div class=\"page-icons\">\r\n                      @if (!page.isVisible) {\r\n                        <mat-icon class=\"page-visible-clickable-icon\">visibility_off</mat-icon>\r\n                      }\r\n                      @if (!page.isClickable) {\r\n                        <mat-icon class=\"page-visible-clickable-icon\">cancel</mat-icon>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <ng-template #pageAndChildren let-page=\"page\">\r\n        <li>\r\n          <div class=\"page-row\">\r\n            @if (page.children.length === 0) {\r\n              <div class=\"no-toggle\"></div>\r\n            }\r\n            @if (page.children.length > 0) {\r\n              <mat-icon class=\"page-toggle\" (click)=\"toggle(page.id)\">\r\n                {{ toggled.includes(page.id) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n            }\r\n            <div class=\"page-label\" [ngClass]=\"page.id === selected ? 'selected' : ''\" (click)=\"select(page)\">\r\n              <div class=\"page-icon-and-text\">\r\n                <mat-icon class=\"page-icon\" svgIcon=\"file\"></mat-icon>\r\n                <span>{{ page.name }}</span>\r\n              </div>\r\n              <div class=\"page-icons\">\r\n                @if (!page.isVisible) {\r\n                  <mat-icon class=\"page-visible-clickable-icon\">visibility_off</mat-icon>\r\n                }\r\n                @if (!page.isClickable) {\r\n                  <mat-icon class=\"page-visible-clickable-icon\">cancel</mat-icon>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          @if (page.children.length > 0 && toggled.includes(page.id)) {\r\n            <ul>\r\n              @for (child of page.children; track child) {\r\n                <ng-container *ngTemplateOutlet=\"pageAndChildren; context: {page: child}\"></ng-container>\r\n              }\r\n            </ul>\r\n          }\r\n        </li>\r\n      </ng-template>\r\n    </div>\r\n    <mat-dialog-actions>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { FieldValue, PagePickerResult } from '../../../../../../edit-types';\r\nimport { buildPageSearch, buildPageTree } from './page-picker.helpers';\r\nimport { PageEntity, PagePickerDialogData, PagePickerViewModel, PageSearchItem, PageTreeItem } from './page-picker.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgTemplateOutlet, NgClass, AsyncPipe } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ArrayHelpers } from '../../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../core';\r\nimport { QueryService } from '../../../shared/services/query.service';\r\n\r\n@Component({\r\n  selector: 'app-page-picker',\r\n  templateUrl: './page-picker.component.html',\r\n  styleUrls: ['./page-picker.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    NgTemplateOutlet,\r\n    NgClass,\r\n    ExtendedModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class PagePickerComponent implements OnInit, OnDestroy {\r\n  selected: number;\r\n  toggled: number[];\r\n  viewModel$: Observable<PagePickerViewModel>;\r\n\r\n  private filterText$: BehaviorSubject<string>;\r\n  private searchItems$: BehaviorSubject<PageSearchItem[]>;\r\n  private tree$: BehaviorSubject<PageTreeItem[]>;\r\n\r\n  private queryService = transient(QueryService);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: PagePickerDialogData,\r\n    private dialogRef: MatDialogRef<PagePickerComponent>,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selected = this.parseSelectedPageId();\r\n    this.toggled = [];\r\n    this.filterText$ = new BehaviorSubject('');\r\n    this.searchItems$ = new BehaviorSubject([]);\r\n    this.tree$ = new BehaviorSubject([]);\r\n\r\n    const filteredSearch$ = combineLatest([this.filterText$, this.searchItems$]).pipe(\r\n      map(([filterText, searchItems]) =>\r\n        searchItems.filter(item => item.name.toLocaleLowerCase().includes(filterText.toLocaleLowerCase()))\r\n      ),\r\n    );\r\n    this.viewModel$ = combineLatest([this.filterText$, filteredSearch$, this.tree$]).pipe(\r\n      map(([filterText, filteredSearch, tree]) => {\r\n        const viewModel: PagePickerViewModel = {\r\n          filterText,\r\n          filteredSearch,\r\n          tree,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n\r\n    this.fetchPages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.filterText$.complete();\r\n    this.searchItems$.complete();\r\n    this.tree$.complete();\r\n  }\r\n\r\n  setFilter(filterText: string): void {\r\n    this.filterText$.next(filterText);\r\n  }\r\n\r\n  select(page: PageTreeItem | PageSearchItem): void {\r\n    // filters out pages without parent (broken)\r\n    if (page.id == null) { return; }\r\n    if (!page.isClickable || !page.isVisible) {\r\n      const ok = window.confirm(this.translate.instant('Fields.Hyperlink.PagePicker.HiddenOrSystemPageWarning'));\r\n      if (!ok) { return; }\r\n    }\r\n    this.closeDialog(page.id);\r\n  }\r\n\r\n  toggle(pageId: number): void {\r\n    ArrayHelpers.toggleInArray(pageId, this.toggled);\r\n  }\r\n\r\n  private closeDialog(pageId?: number): void {\r\n    if (pageId == null) {\r\n      this.dialogRef.close();\r\n      return;\r\n    }\r\n\r\n    const page = this.searchItems$.value.find(i => i.id === pageId);\r\n    const result: PagePickerResult = {\r\n      id: page.id.toString(),\r\n      name: page.name,\r\n    };\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  private fetchPages(): void {\r\n    const stream = 'Default';\r\n    const params = 'includehidden=true';\r\n    this.queryService.getAvailableEntities(`System.Pages/Default`, params, null).subscribe({\r\n      next: (data) => {\r\n        if (!data) {\r\n          console.error(this.translate.instant('Fields.Picker.QueryErrorNoData'));\r\n          return;\r\n        }\r\n        if (!data[stream]) {\r\n          console.error(this.translate.instant('Fields.Picker.QueryStreamNotFound') + ' ' + stream);\r\n          return;\r\n        }\r\n        const pages = data[stream] as PageEntity[];\r\n        const searchItems = buildPageSearch(pages);\r\n        this.searchItems$.next(searchItems);\r\n        const tree = buildPageTree(pages);\r\n        this.tree$.next(tree);\r\n      },\r\n      error: (error) => {\r\n        console.error(error);\r\n        console.error(`${this.translate.instant('Fields.Picker.QueryError')} - ${error.data}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private parseSelectedPageId(): number {\r\n    const prefix = 'page:';\r\n    let fieldValue: FieldValue = this.dialogData.group.controls[this.dialogData.config.fieldName].value;\r\n    if (typeof fieldValue !== 'string') { return; }\r\n\r\n    fieldValue = fieldValue.trim().toLocaleLowerCase();\r\n    if (!fieldValue.startsWith(prefix)) { return; }\r\n\r\n    try {\r\n      const id = parseInt(fieldValue.split(prefix)[1], 10);\r\n      return id;\r\n    } catch {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","import { PageEntity, PageSearchItem, PageTreeItem } from './page-picker.models';\r\n\r\nexport function buildPageSearch(pages: PageEntity[]): PageSearchItem[] {\r\n  if (!pages) { return []; }\r\n\r\n  const items = pages.map(page => {\r\n    let path = page.Path.trim().replace(/\\\\/g, '/').replace(/\\/\\//g, '/');\r\n    if (path.startsWith('/')) {\r\n      path = path.substring(1);\r\n    }\r\n    path = path.split('/').slice(0, -1).join(' > ');\r\n\r\n    const item: PageSearchItem = {\r\n      id: page.Id,\r\n      name: page.Name,\r\n      path,\r\n      isVisible: page.Visible,\r\n      isClickable: page.Clickable,\r\n    };\r\n    return item;\r\n  });\r\n\r\n  return items;\r\n}\r\n\r\nexport function buildPageTree(pages: PageEntity[]): PageTreeItem[] {\r\n  if (!pages) { return []; }\r\n\r\n  const items = pages.map(page => {\r\n    const item: PageTreeItem = {\r\n      children: [],\r\n      id: page.Id,\r\n      name: page.Name,\r\n      parentId: page.ParentId,\r\n      isVisible: page.Visible,\r\n      isClickable: page.Clickable,\r\n    };\r\n    return item;\r\n  });\r\n\r\n  const tree: PageTreeItem[] = [];\r\n  for (const item of items) {\r\n    if (item.parentId === -1) {\r\n      tree.push(item);\r\n      continue;\r\n    }\r\n\r\n    const parent = items.find(i => i.id === item.parentId);\r\n    if (!parent) {\r\n      tree.push(item);\r\n    } else {\r\n      parent.children.push(item);\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { take } from 'rxjs';\r\nimport { PagePickerResult } from '../../../../../../edit-types';\r\nimport { PagePickerComponent } from './page-picker.component';\r\nimport { PagePickerDialogData } from './page-picker.models';\r\nimport { FieldConfigSet } from '../field-config-set.model';\r\n\r\nexport class PagePicker {\r\n  static open(\r\n    config: FieldConfigSet,\r\n    group: UntypedFormGroup,\r\n    dialog: MatDialog,\r\n    viewContainerRef: ViewContainerRef,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    callback: (value: PagePickerResult) => void,\r\n  ): void {\r\n    const dialogData: PagePickerDialogData = {\r\n      config,\r\n      group,\r\n    };\r\n    const dialogRef = dialog.open(PagePickerComponent, {\r\n      autoFocus: false,\r\n      data: dialogData,\r\n      viewContainerRef,\r\n      height: '80%',\r\n      width: '650px',\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(take(1)).subscribe((value: PagePickerResult) => {\r\n      callback(value);\r\n    });\r\n\r\n    changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { TranslationLink, TranslationLinks } from '../../../../localization/translation-link.constants';\r\n\r\nexport class TranslateMenuHelpers {\r\n\r\n  static getTranslationStateClass(linkType: TranslationLink) {\r\n    switch (linkType) {\r\n      case TranslationLinks.MissingDefaultLangValue:\r\n        return 'localization-missing-default-lang-value';\r\n      case TranslationLinks.Translate:\r\n      case TranslationLinks.LinkCopyFrom:\r\n        return 'localization-translate';\r\n      case TranslationLinks.DontTranslate:\r\n        return '';\r\n      case TranslationLinks.LinkReadOnly:\r\n        return 'localization-link-read-only';\r\n      case TranslationLinks.LinkReadWrite:\r\n        return 'localization-link-read-write';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static calculateSharedInfoMessage(dimensions: string[], currentLanguage: string): string {\r\n    dimensions = TranslateMenuHelpers.calculateShortDimensions(dimensions, currentLanguage);\r\n    const result = TranslateMenuHelpers.calculateEditAndReadDimensions(dimensions);\r\n    const editableDimensions = result.editableDimensions;\r\n    const readOnlyDimensions = result.readOnlyDimensions;\r\n    let infoMessage = '';\r\n\r\n    const editableExist = editableDimensions.length > 0;\r\n    const readOnlyExist = readOnlyDimensions.length > 0;\r\n    if (editableExist && readOnlyExist) {\r\n      infoMessage = `${editableDimensions.join(', ')}, (${readOnlyDimensions.join(', ')})`;\r\n    } else if (editableExist) {\r\n      infoMessage = editableDimensions.join(', ');\r\n    } else if (readOnlyExist) {\r\n      infoMessage = `(${readOnlyDimensions.join(', ')})`;\r\n    }\r\n\r\n    return infoMessage;\r\n  }\r\n\r\n  private static calculateShortDimensions(dimensions: string[], currentLanguage: string): string[] {\r\n    const dimensionsMap: Record<string, string[]> = {};\r\n    const shortCurrentLanguage = currentLanguage.slice(0, currentLanguage.indexOf('-'));\r\n\r\n    dimensionsMap[shortCurrentLanguage] = [];\r\n    dimensionsMap[shortCurrentLanguage].push(shortCurrentLanguage);\r\n\r\n    dimensions.forEach(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (!dimensionsMap[shortNoReadOnly]) {\r\n        dimensionsMap[shortNoReadOnly] = [];\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      } else {\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      }\r\n    });\r\n\r\n    dimensions = dimensions.map(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (dimensionsMap[shortNoReadOnly].length > 1) {\r\n        return dimension;\r\n      } else {\r\n        return shortDimension;\r\n      }\r\n    });\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  private static calculateEditAndReadDimensions(dimensions: string[]) {\r\n    const editableDimensions: string[] = [];\r\n    const readOnlyDimensions: string[] = [];\r\n\r\n    dimensions.forEach(dimension => {\r\n      if (!dimension.includes('~')) {\r\n        editableDimensions.push(dimension);\r\n      } else {\r\n        readOnlyDimensions.push(dimension.replace('~', ''));\r\n      }\r\n    });\r\n\r\n    return {\r\n      editableDimensions,\r\n      readOnlyDimensions\r\n    };\r\n  }\r\n}\r\n","export const BestValueModes = {\r\n  Default: 'Default',\r\n  Strict: 'Strict',\r\n} as const;\r\n\r\nexport type BestValueMode = typeof BestValueModes[keyof typeof BestValueModes];\r\n","import { FieldValue } from '../../../../../edit-types';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { EavDimension, EavEntityAttributes, EavValue, EavField } from '../shared/models/eav';\r\nimport { FormLanguage } from '../state/form-languages.model';\r\nimport { ItemValuesOfLanguage } from '../state/item-values-of-language.model';\r\nimport { BestValueMode, BestValueModes } from './localization.constants';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'LocalizationHelpers';\r\n\r\nconst log = new EavLogger(nameOfThis, logThis);\r\n\r\nexport class LocalizationHelpers {\r\n  /**\r\n   * Get translated value for currentLanguage,\r\n   * if not exist return default language translation,\r\n   * if default language also not exist return first value\r\n   */\r\n  static translate<T>(language: FormLanguage, attributeValues: EavField<T>, defaultValue: T): T | null {\r\n    if (!attributeValues)\r\n      return defaultValue;\r\n\r\n    const translation: EavValue<T> = this.getValueTranslation(attributeValues, language);\r\n    if (translation)\r\n      return translation.Value;\r\n\r\n    const translationDefault: EavValue<T> = this.getValueTranslation(attributeValues, FormLanguage.bothPrimary(language));\r\n    if (translationDefault)\r\n      return translationDefault.Value;\r\n\r\n    // TODO: maybe return value with *\r\n    return attributeValues.Values[0]?.Value ?? null;\r\n  }\r\n\r\n  static getValueOrDefault(field: EavField<any>, language: FormLanguage): EavValue<any> {\r\n    let translation = this.getValueTranslation(field, language);\r\n    return translation\r\n      ?? this.getValueTranslation(field, FormLanguage.bothPrimary(language));\r\n  }\r\n\r\n  /**\r\n   * Find all values which are of the current language.\r\n   * 1. either directly assigned\r\n   * 2. or read-only assigned\r\n   * 3. or assigned to '*' when the current language is the default language\r\n   */\r\n  private static valuesOfLanguage<T>(field: EavField<T>, language: FormLanguage): EavValue<T>[] {\r\n    if (!field) return [];\r\n    return field.Values.filter(val => this.valueHasLanguage(val, language));\r\n  }\r\n\r\n  private static valueHasLanguage<T>(val: EavValue<T>, language: FormLanguage): EavDimension | undefined {\r\n    return val.Dimensions.find(d =>\r\n      d.Value === language.current\r\n      || d.Value === `~${language.current}`\r\n      || (language.current === language.primary && d.Value === '*'));\r\n  }\r\n\r\n\r\n  static getValueTranslation<T>(field: EavField<T>, language: FormLanguage): EavValue<T> {\r\n    // first match if any is the one we're looking for\r\n    return this.valuesOfLanguage(field, language)[0];\r\n  }\r\n\r\n  static isEditableOrReadonlyTranslationExist(field: EavField<any>, language: FormLanguage): boolean {\r\n    if (!field) return false;\r\n    return this.valuesEditableOfCurrent(field, language).length > 0;\r\n  }\r\n\r\n  /**\r\n   * Values of a field are for the current language,\r\n   * if they are assigned to the current language or to '*' (but only when the current-language is also the primary-language)\r\n   */\r\n  private static valuesEditableOfCurrent<T>(field: EavField<T>, langs: FormLanguage): EavValue<T>[] {\r\n    if (!field) return [];\r\n    return field.Values\r\n      .filter(val => val.Dimensions.find(d => (d.Value === langs.current) || (d.Value === '*' && langs.current === langs.primary)));\r\n  }\r\n\r\n\r\n  /** A value in specified Language is editable, if assigned to current language or to '*' (but only when on default-language) */\r\n  static hasEditableValue(field: EavField<any>, language: FormLanguage): boolean {\r\n    return this.valuesEditableOfCurrent(field, language).length > 0;\r\n  }\r\n\r\n  // Number of editable translatable fields that\r\n  static countEditableValues(field: EavField<any>, language: FormLanguage): number {\r\n    return this.valuesEditableOfCurrent(field, language).length;\r\n  }\r\n\r\n  // Number of editable translatable fields that have some content\r\n  static countEditableValuesWithContent(field: EavField<any>, language: FormLanguage): number {\r\n    if (!field) return 0;\r\n    return this.valuesEditableOfCurrent(field, language).filter(v => v.Value != \"\" && v.Value != null)?.length\r\n  }\r\n\r\n  static hasReadonlyValue(field: EavField<any>, language: string): boolean {\r\n    if (!field) return false;\r\n    return field.Values.filter(val => val.Dimensions.find(d => d.Value === `~${language}`)).length > 0;\r\n  }\r\n\r\n  static hasValueOnPrimary(field: EavField<any>, defaultLanguage: string): boolean {\r\n    if (!field) return false;\r\n    return field.Values.filter(val => val.Dimensions.find(d => d.Value === defaultLanguage || d.Value === '*')).length > 0;\r\n  }\r\n\r\n  /** Copy attributes from item */\r\n  private static updateAttribute(\r\n    oldAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    attribute: EavField<any>,\r\n  ): EavEntityAttributes {\r\n    const newAttributes: EavEntityAttributes = {};\r\n    if (Object.keys(oldAttributes).length === 0) {\r\n      const attributeCopy: EavField<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n      return newAttributes;\r\n    }\r\n\r\n    for (const key of Object.keys(oldAttributes)) {\r\n      if (key === attributeKey) {\r\n        const attributeCopy: EavField<any> = { ...attribute };\r\n        newAttributes[key] = attributeCopy;\r\n      } else {\r\n        const attributeCopy: EavField<any> = { ...oldAttributes[key] };\r\n        newAttributes[key] = attributeCopy;\r\n      }\r\n    }\r\n\r\n    if (oldAttributes[attributeKey] == null) {\r\n      const attributeCopy: EavField<any> = { ...attribute };\r\n      newAttributes[attributeKey] = attributeCopy;\r\n    }\r\n    return newAttributes;\r\n  }\r\n\r\n  /** Update values for languageKey */\r\n  static updateAttributesValues(\r\n    allFields: EavEntityAttributes,\r\n    updateValues: ItemValuesOfLanguage,\r\n    language: FormLanguage,\r\n  ): EavEntityAttributes {\r\n    const l = log.fn('updateAttributesValues', { allFields, updateValues, language });\r\n    // copy attributes from item\r\n    const eavAttributes: EavEntityAttributes = {};\r\n    Object.keys(allFields).forEach(attributeKey => {\r\n      const newItemValue = updateValues[attributeKey];\r\n      // if new value exist update attribute for languageKey\r\n      // if (newItemValue !== null && newItemValue !== undefined) {\r\n      if (newItemValue !== undefined) {\r\n        const valueWithLanguageExist = this.isEditableOrReadonlyTranslationExist(allFields[attributeKey], language);\r\n\r\n        // if valueWithLanguageExist update value for languageKey\r\n        if (valueWithLanguageExist) {\r\n          const newValues: EavField<any> = {\r\n            ...allFields[attributeKey],\r\n            Values: allFields[attributeKey].Values.map(val => {\r\n              const hasLanguage = !!this.valueHasLanguage(val, language);\r\n              const newValue: EavValue<any> = hasLanguage\r\n                // Update value for languageKey\r\n                ? {\r\n                  ...val,\r\n                  Value: newItemValue,\r\n                }\r\n                : val;\r\n              return newValue;\r\n            })\r\n          };\r\n          eavAttributes[attributeKey] = newValues;\r\n        } else { // else add new value with dimension languageKey\r\n          l.a('saveAttributeValues add values ', { newItemValue });\r\n          const newEavValue = EavValue.create(newItemValue, [EavDimension.create(language.current)]);\r\n          const newAttribute: EavField<any> = {\r\n            ...allFields[attributeKey],\r\n            Values: [...allFields[attributeKey].Values, newEavValue]\r\n          };\r\n          eavAttributes[attributeKey] = newAttribute;\r\n        }\r\n      } else { // else copy item attributes\r\n        const attributeCopy: EavField<any> = { ...allFields[attributeKey] };\r\n        eavAttributes[attributeKey] = attributeCopy;\r\n      }\r\n    });\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** update attribute value, and change language readonly state if needed */\r\n  static updateAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    updateValue: FieldValue,\r\n    language: FormLanguage,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = language.current;\r\n\r\n    if (isReadOnly)\r\n      newLanguageValue = `~${language.current}`;\r\n\r\n    const attribute: EavField<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(val => {\r\n        const hasLanguage = !!this.valueHasLanguage(val, language);\r\n        const newValue: EavValue<any> = hasLanguage\r\n          // Update value and dimension\r\n          ? {\r\n            ...val,\r\n            // update value\r\n            Value: updateValue,\r\n            // update languageKey with newLanguageValue\r\n            Dimensions: val.Dimensions.map(d => {\r\n              const dimensionIsForLanguage = (d.Value === language.current\r\n                || d.Value === `~${language.current}`\r\n                || (language.current === language.primary && d.Value === '*'));\r\n              return dimensionIsForLanguage\r\n                ? { Value: newLanguageValue } satisfies EavDimension\r\n                : d;\r\n            })\r\n          }\r\n          : val;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  static addAttributeValue(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeValue: EavValue<any>,\r\n    attributeKey: string,\r\n    attributeType: string,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    const attribute: EavField<any> =\r\n      Object.keys(allAttributes).length === 0 || !allAttributes[attributeKey]\r\n        ? {\r\n          ...allAttributes[attributeKey],\r\n          Values: [attributeValue],\r\n          Type: attributeType\r\n        }\r\n        : {\r\n          ...allAttributes[attributeKey],\r\n          Values: [...allAttributes[attributeKey].Values, attributeValue],\r\n          Type: attributeType\r\n        };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Add dimension to value with existing dimension */\r\n  static addAttributeDimension(\r\n    allAttributes: EavEntityAttributes,\r\n    attributeKey: string,\r\n    newDimensionValue: string,\r\n    existingDimensionValue: string,\r\n    defaultLanguage: string,\r\n    isReadOnly: boolean,\r\n  ): EavEntityAttributes {\r\n    // copy attributes from item\r\n    let eavAttributes: EavEntityAttributes = {};\r\n    let newLanguageValue = newDimensionValue;\r\n\r\n    if (isReadOnly) {\r\n      newLanguageValue = `~${newDimensionValue}`;\r\n    }\r\n\r\n    const attribute: EavField<any> = {\r\n      ...allAttributes[attributeKey], Values: allAttributes[attributeKey].Values.map(eavValue => {\r\n        const newValue: EavValue<any> = eavValue.Dimensions.find(d => d.Value === existingDimensionValue\r\n          || (existingDimensionValue === defaultLanguage && d.Value === '*'))\r\n          // Update dimension for current language\r\n          ? {\r\n            ...eavValue,\r\n            // if languageKey already exist\r\n            Dimensions: eavValue.Dimensions.concat({ Value: newLanguageValue })\r\n          }\r\n          : eavValue;\r\n        return newValue;\r\n      })\r\n    };\r\n    eavAttributes = this.updateAttribute(allAttributes, attributeKey, attribute);\r\n    return eavAttributes;\r\n  }\r\n\r\n  /** Removes dimension (language) from attribute. If multiple dimensions exist, delete only dimension, else delete value and dimension */\r\n  static removeAttributeDimension(attributes: EavEntityAttributes, attributeKey: string, language: string): EavEntityAttributes {\r\n    const oldAttributes = attributes;\r\n    const validDimensions = [language, `~${language}`];\r\n\r\n    const value = oldAttributes[attributeKey].Values.find(eavValue => {\r\n      const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n      return dimensionExists;\r\n    });\r\n\r\n    // given dimension doesn't exist for this attribute so no change is needed\r\n    if (!value) {\r\n      const attributesCopy: EavEntityAttributes = { ...oldAttributes };\r\n      return attributesCopy;\r\n    }\r\n\r\n    let newAttribute: EavField<any>;\r\n    if (value.Dimensions.length > 1) {\r\n      // if multiple dimensions exist delete only dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.map(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n          if (!dimensionExists) return eavValue;\r\n\r\n          return {\r\n            ...eavValue,\r\n            Dimensions: eavValue.Dimensions.filter(dimension => !validDimensions.includes(dimension.Value)),\r\n          } satisfies EavValue<any>;\r\n        })\r\n      };\r\n    } else if (value.Dimensions.length === 1) {\r\n      // if only one dimension exists delete value and dimension\r\n      newAttribute = {\r\n        ...oldAttributes[attributeKey],\r\n        Values: oldAttributes[attributeKey].Values.filter(eavValue => {\r\n          const dimensionExists = eavValue.Dimensions.some(dimension => validDimensions.includes(dimension.Value));\r\n          return !dimensionExists;\r\n        })\r\n      };\r\n    }\r\n\r\n    const newAttributes = this.updateAttribute(oldAttributes, attributeKey, newAttribute);\r\n    return newAttributes;\r\n  }\r\n\r\n  /**\r\n   * Default mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   * 4. first value\r\n   *\r\n   * Strict mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   * 3. value for default language\r\n   *\r\n   * Very strict mode priority:\r\n   * 1. value for current language\r\n   * 2. value for all languages\r\n   */\r\n  static getBestValue(eavValues: EavField<any>, currentLanguage: string, defaultLanguage: string, mode: BestValueMode): FieldValue {\r\n    if (eavValues == null) { return; }\r\n\r\n    let bestDimensions = [currentLanguage, `~${currentLanguage}`];\r\n    let bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    bestDimensions = ['*'];\r\n    bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    if (mode === BestValueModes.Strict) { return; }\r\n\r\n    bestDimensions = [defaultLanguage, `~${defaultLanguage}`];\r\n    bestValue = this.findValueForDimensions(eavValues, bestDimensions);\r\n    if (bestValue !== undefined) { return bestValue; }\r\n\r\n    bestValue = eavValues.Values[0]?.Value;\r\n    return bestValue;\r\n  }\r\n\r\n  static findOfExactDimension<T>(eavValues: EavValue<T>[], dimension: string): EavValue<T> {\r\n    return eavValues.find(v => v.Dimensions.find(x => x.Value === dimension));\r\n  }\r\n\r\n  private static findValueForDimensions(eavValues: EavField<any>, dimensions: string[]): FieldValue {\r\n    const value = eavValues.Values.find(\r\n      eavValue => !!eavValue.Dimensions.find(dimension => dimensions.includes(dimension.Value)),\r\n    )?.Value;\r\n    return value;\r\n  }\r\n}\r\n","export const TranslationLinks = {\r\n  Translate: 'Translate',\r\n  DontTranslate: 'DontTranslate',\r\n  MissingDefaultLangValue: 'MissingDefaultLangValue',\r\n  LinkReadOnly: 'LinkReadOnly',\r\n  LinkReadWrite: 'LinkReadWrite',\r\n  LinkCopyFrom: 'LinkCopyFrom',\r\n} as const;\r\n\r\nexport type TranslationLink = typeof TranslationLinks[keyof typeof TranslationLinks];\r\n","import { ServiceBase } from '../../../shared/services/service-base';\r\nimport { EavLogger } from '../../../shared/logging/eav-logger';\r\nimport { Injectable, inject, signal, Injector, OnDestroy, effect } from '@angular/core';\r\nimport { FieldState } from '../../fields/field-state';\r\nimport { FormConfigService } from '../../state/form-config.service';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'FieldMask';\r\n\r\nconst FieldsFind = /\\[.*?\\]/ig;\r\nconst FieldUnwrap = /[\\[\\]]/ig;\r\n/**\r\n * Create a new FieldMask instance and access result with resolve\r\n * @example\r\n * const mask = new FieldMask(\"[FirstName]\", formGroup.controls);\r\n * const maskValue = mask.resolve();\r\n *\r\n * @param mask a string like \"[FirstName] [LastName]\"\r\n * @param model usually FormGroup controls, passed into here\r\n * @param overloadPreCleanValues a function which will \"scrub\" the found field-values\r\n */\r\n@Injectable()\r\nexport class FieldMask extends ServiceBase implements OnDestroy {\r\n  public signal = signal<string>('');\r\n\r\n  public watch = false;\r\n\r\n  /** Fields used in the mask */\r\n  private fieldsUsedInMask: string[] = [];\r\n\r\n  private fieldState = inject(FieldState);\r\n\r\n  private controls = this.fieldState.group.controls;\r\n  private fieldConfig = this.fieldState.config;\r\n\r\n  protected formConfig = inject(FormConfigService);\r\n\r\n  private callback?: (newValue: string) => void;\r\n\r\n  private mask: string | null;\r\n\r\n  constructor(private injector: Injector) {\r\n    super(new EavLogger(nameOfThis, logThis));\r\n    this.log.a('constructor');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy();\r\n  }\r\n\r\n  /** Attach any processing events before the mask is resolved the first time */\r\n  public initPreClean(overloadPreCleanValues: (key: string, value: string) => string): this {\r\n    this.log.a('initPreClean');\r\n    this.preClean = overloadPreCleanValues;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * attach a callback.\r\n   * Someday should simply be replaced to use the signal instead.\r\n   * @param callback\r\n   * @returns\r\n   */\r\n  public initCallback(callback: (newValue: string) => void): this {\r\n    this.log.a('initCallback');\r\n    this.callback = callback;\r\n    this.watch = true;\r\n    return this;\r\n  }\r\n\r\n  public init(name: string, mask: string, watch?: boolean): this {\r\n    this.log.rename(`${this.log.name}-${name}`);\r\n    // mut happen before updateMask\r\n    if (watch != null)\r\n      this.watch = watch;\r\n    this.updateMask(mask);\r\n    return this;\r\n  }\r\n\r\n  public logChanges(): this {\r\n    // use logger, but if not enabled, create new just for this\r\n    const l = this.log.enabled ? this.log : new EavLogger(nameOfThis, true);\r\n    effect(() => {\r\n      const latest = this.signal();\r\n      l.a(`Mask '${this.mask}' value changed to: ${latest}`);\r\n    }, { injector: this.injector });\r\n    return this;\r\n  }\r\n\r\n\r\n  public updateMask(mask: string) {\r\n    this.mask = mask ?? '';\r\n    this.fieldsUsedInMask = this.extractFieldNames(this.mask);\r\n\r\n    // bind auto-watch only if needed...\r\n    // otherwise it's just on-demand\r\n    if (this.watch || this.callback)\r\n      this.watchAllFields();\r\n\r\n    this.onChange();\r\n  }\r\n\r\n\r\n\r\n  /** Resolves a mask to the final value */\r\n  resolve(): string {\r\n\r\n    // if no mask, exit early\r\n    if (!hasPlaceholders(this.mask))\r\n      return this.mask;\r\n\r\n    let value = lowercaseInsideSquareBrackets(this.mask);\r\n    if (this.formConfig != null)\r\n      value = value\r\n        .replace('[app:appid]', this.formConfig.config.appId.toString())\r\n        .replace('[app:zoneid]', this.formConfig.config.zoneId.toString());\r\n\r\n    if (this.fieldConfig != null)\r\n      value = value\r\n        .replace('[guid]', this.fieldConfig.entityGuid)\r\n        .replace('[id]', this.fieldConfig.entityId.toString());\r\n\r\n    this.fieldsUsedInMask.forEach((e, i) => {\r\n      const replaceValue = this.controls.hasOwnProperty(e) && this.controls[e] && this.controls[e].value ? this.controls[e].value : '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      value = value.replace('[' + e.toLowerCase() + ']', cleaned);\r\n    });\r\n    return value;\r\n  }\r\n\r\n  /** Retrieves a list of all fields used in the mask */\r\n  private extractFieldNames(mask: string): string[] {\r\n    // exit early if mask very simple or not a mask\r\n    if (!mask || !hasPlaceholders(mask))\r\n      return [];\r\n\r\n    const result: string[] = [];\r\n    const matches = mask.match(FieldsFind);\r\n    if (matches)\r\n      matches.forEach((fieldName) => {\r\n        const staticName = fieldName.replace(FieldUnwrap, '');\r\n        result.push(staticName);\r\n      });\r\n    else\r\n      // TODO: ask is this good\r\n      result.push(this.mask);\r\n    return result;\r\n  }\r\n\r\n  /** Default preClean function, if no other function was specified for this */\r\n  private preClean(key: string, value: string): string {\r\n    return value;\r\n  }\r\n\r\n  /** Change-event - will only fire if it really changes */\r\n  private onChange() {\r\n    const maybeNew = this.resolve();\r\n    if (this.signal() !== maybeNew) {\r\n      this.signal.set(maybeNew);\r\n      this.callback?.(maybeNew);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add watcher and execute onChange.\r\n   * Uses observables, since that's what angular provides on valueChanges.\r\n   */\r\n  private watchAllFields() {\r\n    // add a watch for each field in the field-mask\r\n    this.fieldsUsedInMask.forEach(field => {\r\n      const control = this.controls[field];\r\n      if (!control) return;\r\n      const valueSub = control.valueChanges.subscribe(_ => this.onChange());\r\n      this.subscriptions.add(valueSub);\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction hasPlaceholders(mask: string): boolean {\r\n  return (mask ?? '').includes('[');\r\n}\r\n\r\n/** used for query parameters */\r\nfunction lowercaseInsideSquareBrackets(value: string) {\r\n  return value.replace(/\\[([^\\]]+)\\]/g, (match, group) => `[${group.toLowerCase()}]`);\r\n}\r\n","import { EavEntity, EavEntityAttributes, EavField } from '../models/eav';\r\nimport { LocalizationHelpers } from '../../localization/localization.helpers';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\nimport { FormLanguage } from '../../state/form-languages.model';\r\n\r\nexport class EntityReader implements FormLanguage {\r\n  constructor(public current: string, public primary: string) { }\r\n\r\n  // WIP - to make code clearer, this is what should be used from now on\r\n  // But we'll probably end up calling this from the EntityReader only, so it should be straight forward\r\n  getBestValue<T>(attributeValues: EavField<unknown>, defaultValue: T = null): T {\r\n    return LocalizationHelpers.translate<T>(this, attributeValues as EavField<T>, defaultValue);\r\n  }\r\n\r\n  public flatten<T>(metadataItem: EavEntity): T {\r\n    return this.flattenAll<T>([metadataItem]);\r\n  }\r\n\r\n  public flattenAll<T>(metadataItems: EavEntity[]): T {\r\n    if (metadataItems == null || metadataItems.length === 0 || metadataItems[0] == null)\r\n      return {} as T;\r\n\r\n    const merged: Record<string, any> = {};\r\n    // copy metadata settings which are not @All\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id === '@All') { continue; }\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = this.getBestValue(values);\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    // copy @All metadata settings, overwriting previous settings\r\n    for (const item of metadataItems) {\r\n      if (item.Type.Id !== '@All') { continue; }\r\n\r\n      for (const [name, values] of Object.entries(item.Attributes)) {\r\n        const value = this.getBestValue(values);\r\n        // do not overwrite previous settings if @All is empty\r\n        const exists = merged[name] != null;\r\n        const emptyAll = value == null || value === '';\r\n        if (exists && emptyAll) { continue; }\r\n\r\n        merged[name] = value;\r\n      }\r\n    }\r\n\r\n    return merged as T;\r\n  }\r\n\r\n  currentValues(itemAttributes: EavEntityAttributes): ItemValuesOfLanguage {\r\n    const formValues: ItemValuesOfLanguage = {};\r\n    for (const [name, values] of Object.entries(itemAttributes))\r\n      formValues[name] = this.getBestValue(values);\r\n    return formValues;\r\n  }\r\n\r\n}\r\n","export class FileTypeHelpers {\r\n  private static defaultIcon = 'file';\r\n  private static customExtensions: Record<string, string> = {\r\n    doc: 'file-word',\r\n    docx: 'file-word',\r\n    xls: 'file-excel',\r\n    xlsx: 'file-excel',\r\n    ppt: 'file-powerpoint',\r\n    pptx: 'file-powerpoint',\r\n    pdf: 'file-pdf',\r\n    mp3: 'file-audio',\r\n    avi: 'file-video',\r\n    mpg: 'file-video',\r\n    mpeg: 'file-video',\r\n    mov: 'file-video',\r\n    mp4: 'file-video',\r\n    zip: 'file-archive',\r\n    rar: 'file-archive',\r\n    txt: 'file-text',\r\n    html: 'file-code',\r\n    css: 'file-code',\r\n    xml: 'file-code',\r\n    xsl: 'file-code',\r\n  };\r\n  private static matExtensions: Record<string, string> = {\r\n    vcf: 'person',\r\n  };\r\n\r\n  static getExtension(filename: string) {\r\n    return filename.substring(filename.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n  }\r\n\r\n  static getIconClass(filename: string) {\r\n    const ext = this.getExtension(filename);\r\n    return this.matExtensions[ext] || this.customExtensions[ext] || this.defaultIcon;\r\n  }\r\n\r\n  static isKnownType(filename: string) {\r\n    return this.matExtensions[this.getExtension(filename)] != null;\r\n  }\r\n\r\n  static isImage(filename: string) {\r\n    return this.isImgRegex().test(filename);\r\n  }\r\n\r\n  private static isImgRegex() {\r\n    return /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*\\.(?:jpg|jpeg|gif|png|webp))(?:\\?([^#]*))?(?:#(.*))?/i;\r\n  }\r\n}\r\n","import { FieldSettings, FieldValue } from '../../../../../../edit-types';\r\nimport { InputTypeStrict, InputTypeCatalog } from '../../../shared/fields/input-type-catalog';\r\nimport { EavLogger } from '../../../shared/logging/eav-logger';\r\nimport { ItemIdentifierShared } from '../../../shared/models/edit-form.model';\r\n\r\nconst logThis = false;\r\n\r\nexport class FieldHelper {\r\n\r\n  /** Include itemHeader if you need data from prefill, and set onlyPrefill if you only need parsed prefill */\r\n  static getDefaultOrPrefillValue(\r\n    name: string,\r\n    inputType: InputTypeStrict,\r\n    settings: FieldSettings,\r\n    itemHeader?: ItemIdentifierShared,\r\n    onlyPrefill?: boolean,\r\n  ): FieldValue {\r\n    const log = new EavLogger('InputFieldHelpers', logThis);\r\n    const l = log.fn('parseDefaultValue', { name, inputType, settings, itemHeader, onlyPrefill });\r\n\r\n    const prefillRaw = itemHeader?.Prefill?.[name];\r\n    if (onlyPrefill && prefillRaw === undefined)\r\n      return l.rNull('only prefill, but no prefill data found');\r\n\r\n    let defaultValue = prefillRaw?.toString() ?? settings.DefaultValue;\r\n\r\n    l.values({ defaultValue });\r\n\r\n    switch (inputType) {\r\n      case InputTypeCatalog.BooleanDefault:\r\n        return defaultValue?.toLowerCase() === 'true';\r\n      case InputTypeCatalog.BooleanTristate:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? defaultValue.toLowerCase() === 'true'\r\n          : null;\r\n      case InputTypeCatalog.DateTimeDefault:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? new Date(defaultValue).toJSON()\r\n          : null;\r\n      case InputTypeCatalog.NumberDefault:\r\n      case InputTypeCatalog.NumberDropdown:\r\n      case InputTypeCatalog.NumberPicker:\r\n        return defaultValue != null && defaultValue !== ''\r\n          ? !isNaN(Number(defaultValue)) ? Number(defaultValue) : null\r\n          : null;\r\n      case InputTypeCatalog.EntityDefault:\r\n      case InputTypeCatalog.EntityQuery:\r\n      case InputTypeCatalog.EntityContentBlocks:\r\n      case InputTypeCatalog.EntityPicker:\r\n        // Empty - return []\r\n        if (defaultValue == null || defaultValue === '')\r\n          return [];\r\n\r\n        // string has { } characters, we must switch them to quotes for parsing below\r\n        // 2024-06-01 2dm not sure why this is an option..., maybe some interim encoding?\r\n        if (defaultValue.includes('{'))\r\n          defaultValue = defaultValue.replace(/[\\{\\}]/g, '\\\"');\r\n\r\n        // list but no array, add brackets\r\n        if (defaultValue.includes(',') && !defaultValue.includes('[')) {\r\n          const guids = defaultValue.split(',').map(guid => guid.trim());\r\n          defaultValue = JSON.stringify(guids);\r\n        }\r\n\r\n        // Finally parse\r\n        return defaultValue.startsWith('[') // an array with guid strings\r\n          ? JSON.parse(defaultValue) // if it's a string containing an array\r\n          : [defaultValue.replace(/\"/g, '')]; // just a guid string, but might have quotes\r\n      default:\r\n        return defaultValue ?? '';\r\n    }\r\n  }\r\n}\r\n","export class SanitizeHelper {\r\n\r\n  private static removeFromStart(sanitized: string, charToRemove: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    while (sanitized.substring(0, 1) === charToRemove) {\r\n      sanitized = sanitized.substring(1);\r\n    }\r\n    return sanitized;\r\n  }\r\n\r\n  private static removeFromEnd(sanitized: string, charToRemove: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    while (sanitized.substring(sanitized.length - 1, sanitized.length) === charToRemove) {\r\n      sanitized = sanitized.substring(0, sanitized.length - 1);\r\n    }\r\n    return sanitized;\r\n  }\r\n\r\n  private static cleanBadPath(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    const goodChar = '_';\r\n    const illegalRe = /[\\?<>\\\\:\\*\\|\":]/g;\r\n    const controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\r\n    const reservedRe = /^\\.+$/;\r\n    const windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\r\n    const windowsTrailingRe = /[\\. ]+$/;\r\n    return sanitized\r\n      .replace(illegalRe, goodChar)\r\n      .replace(controlRe, goodChar)\r\n      .replace(reservedRe, goodChar)\r\n      .replace(windowsReservedRe, goodChar)\r\n      .replace(windowsTrailingRe, goodChar);\r\n  }\r\n\r\n  // sanitize path\r\n  static sanitizePath(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    // remove slashes form start of path\r\n    sanitized = this.removeFromStart(sanitized, '\\/');\r\n\r\n    // remove slashed form end of path\r\n    sanitized = this.removeFromEnd(sanitized, '\\/');\r\n\r\n    // remove backslashes form start of path\r\n    sanitized = this.removeFromStart(sanitized, '\\\\');\r\n\r\n    // remove backslashes form end of path\r\n    sanitized = this.removeFromEnd(sanitized, '\\\\');\r\n\r\n    // replace bad\r\n    sanitized = this.cleanBadPath(sanitized);\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  // sanitize file or folder name\r\n  static sanitizeName(sanitized: string): string {\r\n    // check for undefined\r\n    if (!sanitized) { return sanitized; }\r\n\r\n    // in addition to all path validation rules\r\n    // slashes are not valid in file or folder name\r\n    const replacement = '_';\r\n    const illegalRe = /\\//g;\r\n    return this.sanitizePath(sanitized).replace(illegalRe, replacement);\r\n  }\r\n}\r\n","export class EavDimension {\r\n  Value: string;\r\n\r\n  static create(value: string): EavDimension {\r\n    return { Value: value, } satisfies EavDimension;\r\n  }\r\n}\r\n","import { EavDimension } from '.';\r\nimport { EavValuesDto } from '../json-format-v1';\r\n\r\nexport class EavValue<T> {\r\n  Value: T;\r\n  Dimensions: EavDimension[];\r\n\r\n  static create<T>(value: T, dimensions: EavDimension[]): EavValue<T> {\r\n    const eavValue: EavValue<T> = {\r\n      Value: value,\r\n      Dimensions: dimensions,\r\n    };\r\n    return eavValue;\r\n  }\r\n\r\n  static convert<T>(valuesDto: EavValuesDto<T>): EavValue<T>[] {\r\n    const values = Object.entries(valuesDto).map(([langs, value]) => {\r\n      const dimensions = langs.split(',').map(lang => EavDimension.create(lang));\r\n      return this.create(value, dimensions);\r\n    });\r\n    return values;\r\n  }\r\n}\r\n","import { Injectable, Signal } from '@angular/core';\r\nimport { map, Observable, shareReplay } from 'rxjs';\r\nimport { EntityReader } from '../helpers';\r\nimport { mapUntilChanged } from '../../../shared/rxJs/mapUntilChanged';\r\nimport { FormLanguage, FormLanguageComplete } from '../../state/form-languages.model';\r\nimport { SignalStoreObservableBase } from './signal-store-observable-base';\r\nimport { ComputedCacheHelper } from '../../../shared/helpers/computed-cache';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'LanguageInstanceService';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LanguageInstanceService extends SignalStoreObservableBase<number, FormLanguageInStore> {\r\n\r\n  constructor() {\r\n    super({ nameOfThis, logThis});\r\n  }\r\n\r\n  protected override getId = (item: FormLanguageInStore) => item.formId;\r\n\r\n  protected override sanitizeAdd = (item: FormLanguageInStore) => ({\r\n    ...FormLanguage.empty,\r\n    initial: item.current,\r\n    ...item\r\n  });\r\n\r\n  addForm(formId: number, primary: string, current: string, hideHeader: boolean): void {\r\n    this.add({\r\n      formId,\r\n      current,\r\n      initial: current,\r\n      primary,\r\n      hideHeader,\r\n    } satisfies FormLanguageInStore);\r\n  }\r\n\r\n  setCurrent(formId: number, newLanguage: string): void {\r\n    this.update(formId, { current: newLanguage } satisfies Partial<FormLanguageInStore>);\r\n  }\r\n\r\n  /**\r\n   * Get an EntityReader for the current form\r\n   * use in fields settings service\r\n   */\r\n  getEntityReader$(formId: number) {\r\n    return this.getLanguage$(formId)  // This is already distinctUntilChanged\r\n      .pipe(\r\n        map((language) => new EntityReader(language.current, language.primary)),\r\n        // Ensure the EntityReader is reused and not recreated every time\r\n        shareReplay(1)\r\n      );\r\n  }\r\n\r\n  getEntityReader(formId: number): Signal<EntityReader> {\r\n    // Place creation of the language signal here to avoid creating it multiple times\r\n    return this.#entityReaderCache.getOrCreate(formId, () => {\r\n      const language = this.getSignal(formId);\r\n      return new EntityReader(language().current, language().primary);\r\n    });\r\n  }\r\n  #entityReaderCache = new ComputedCacheHelper<number, EntityReader>();\r\n\r\n  // use in form config service for language$()\r\n  getLanguage$(formId: number): Observable<FormLanguageComplete> {\r\n    return this.cache$.pipe(\r\n      map(languageInstances => languageInstances[formId]),\r\n      mapUntilChanged(m => m),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  /** Get hideHeader for the form. Fix for safari and mobile browsers */\r\n  getHideHeaderSignal(formId: number): Signal<boolean> {\r\n    return this.#signalsHideHeaderCache.getOrCreate(formId, () => this.cache()[formId]?.hideHeader ?? false);\r\n  }\r\n  #signalsHideHeaderCache = new ComputedCacheHelper<number, boolean>();\r\n\r\n\r\n  /** Update hideHeader for the form. Fix for safari and mobile browsers */\r\n  updateHideHeader(formId: number, hideHeader: boolean): void {\r\n    this.update(formId, { hideHeader } satisfies Partial<FormLanguageInStore>);\r\n  }\r\n}\r\n\r\nexport interface FormLanguageInStore extends FormLanguageComplete {\r\n  formId: number;\r\n  hideHeader: boolean;\r\n}\r\n","import { computed, Signal, signal } from '@angular/core';\r\nimport { EavLogger } from '../../../shared/logging/eav-logger';\r\nimport { ComputedCacheHelper } from '../../../shared/helpers/computed-cache';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\nconst logThis = false;\r\nconst logThisUndefined = true;\r\nconst nameOfThis = 'SignalStoreBase';\r\n/**\r\n * temp\r\n */\r\nexport class SignalStoreBase<TKey extends string | number, TValue> {\r\n  /** Main Cache */\r\n  #cache = signal<Record<TKey, TValue>>({} as Record<TKey, TValue>);\r\n\r\n  /** Cached version of the list, with the latest object-values */\r\n  #list = computed(() => Object.values(this.#cache()) as TValue[]);\r\n\r\n  /** Cache for the inheriting classes, but as read-only */\r\n  protected get cache(): Signal<Record<TKey, TValue>> {\r\n    return this.#cache;\r\n  }\r\n\r\n  /** List for the inheriting classes, but as read-only */\r\n  protected get list(): Signal<TValue[]> {\r\n    return this.#list;\r\n  }\r\n\r\n  /**\r\n   * Function to get the key / id for storing in the cache.\r\n   * Default is to get the 'id' property of the item.\r\n   * This should be overriden in the inheriting class.\r\n   */\r\n  protected getId: (item: TValue) => TKey = (item) => (item as any).id as TKey;\r\n\r\n  protected sanitizeAdd: (item: TValue) => TValue = (item) => item;\r\n\r\n  name: string;\r\n\r\n  protected log: EavLogger;\r\n\r\n  constructor(options: SignalStoreOptions) {\r\n    this.log = new EavLogger(options.nameOfThis ?? nameOfThis, options.logThis ?? logThisUndefined);\r\n    this.log.a('SignalStoreBase created', { options });\r\n    this.name = options.nameOfThis;\r\n  }\r\n\r\n  //#region Add / Update / Remove / Clear Cache\r\n\r\n  add(item: TValue): void {\r\n    const l = this.log.fn('add', { item });\r\n    if (!item)\r\n      return l.end(null, 'item is null');\r\n\r\n    // add to signal\r\n    this.#cache.set({\r\n      ...this.#cache(),\r\n      [this.getId(item)]: this.sanitizeAdd(item)\r\n    });\r\n    l.end(null, 'added');\r\n  }\r\n\r\n  addMany(items: TValue[]): void {\r\n    var l = this.log.fn('addMany', { items });\r\n    if (!items || items.length == 0)\r\n      return l.end(null, 'items is null or empty');\r\n\r\n    // also add to signal, but in one go\r\n    const result = items.reduce((acc, item) => ({\r\n      ...acc,\r\n      [this.getId(item)]: this.sanitizeAdd(item)\r\n    }), { ...this.#cache() });\r\n    \r\n    this.#cache.set(result);\r\n    l.end(null, 'added');\r\n  }\r\n\r\n  update(id: TKey, item: Partial<TValue>): void {\r\n    const l = this.log.fn('update', { id, item });\r\n    if (!id || !item)\r\n      return l.end(null, 'id or item is null');\r\n\r\n    const before = this.get(id);\r\n    if (!before)\r\n      return l.end(null, `Item with id ${id} not found in store`);\r\n\r\n    // merge\r\n    const newItem = { ...before, ...item };\r\n\r\n    // add to signal\r\n    this.#cache.set({\r\n      ...this.#cache(),\r\n      [id]: newItem\r\n    });\r\n    l.end(null, 'updated');\r\n  }\r\n\r\n  remove(id: TKey): void {\r\n    const l = this.log.fn('remove', { id });\r\n    const { [id]: _, ...updatedStore } = this.#cache();\r\n    this.#cache.set(updatedStore as Record<TKey, TValue>);\r\n    l.end(null, 'removed');\r\n  }\r\n\r\n  clearCache(): void {\r\n    const l = this.log.fn('clearCache');\r\n    this.#cache.set({} as Record<TKey, TValue>);\r\n    l.end(null, 'cleared');\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Now-Getters\r\n\r\n  get(id: TKey): TValue {\r\n    const result = this.#cache()[id];\r\n    this.log.a(`get(${id}) - ` + (result == null ? 'not' : '') + 'found');\r\n    return result;\r\n  }\r\n\r\n  getAll(): TValue[] {\r\n    const result = this.#list();\r\n    this.log.a('getAll() - ' + `found ${result.length} items`);\r\n    return result;\r\n  }\r\n\r\n  getMany(ids: TKey[]): TValue[] {\r\n    const l = this.log.fn('getMany', { ids });\r\n    const result = ids\r\n      .map(id => this.#cache()[id])\r\n      .filter(item => item != null);\r\n    return l.r(result, `found ${result.length} items`);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Signal Getters\r\n\r\n  getSignal(id: TKey): Signal<TValue> {\r\n    const result = this.#itemSignalsCache.getOrCreateWithInfo(id, () => this.get(id));\r\n    this.log.a(`getSignal(${id})`, { isNew: result.isNew });\r\n    return result.signal;\r\n  }\r\n  #itemSignalsCache = new ComputedCacheHelper<TKey, TValue>();\r\n\r\n\r\n  getManySignal(ids: TKey[]): Signal<TValue[]> {\r\n    const sig = computed(\r\n      () => ids.map(id => this.get(id)).filter(item => item != null),\r\n      { equal: isEqual }\r\n    );\r\n    this.log.a('getManySignal()', { ids });\r\n    return sig;\r\n  }\r\n\r\n  getAllSignal(): Signal<TValue[]> {\r\n    const list = this.#list;\r\n    this.log.a(`getAllSignal() - found ${list().length} items`);\r\n    return list;\r\n  }\r\n\r\n  //#endregion\r\n\r\n}\r\n\r\nexport interface SignalStoreOptions {\r\n  nameOfThis: string;\r\n  logThis?: boolean\r\n}","import { toObservable } from '@angular/core/rxjs-interop';\r\nimport { SignalStoreBase, SignalStoreOptions } from './signal-store-base';\r\nimport { map, Observable, filter } from 'rxjs';\r\nimport { mapUntilChanged } from '../../../shared/rxJs/mapUntilChanged';\r\n\r\nexport class SignalStoreObservableBase<TKey extends string | number, TValue> extends SignalStoreBase<TKey, TValue> {\r\n\r\n  /** Old / existing functionality with observables */\r\n  #cache$ = toObservable(this.cache);\r\n\r\n  #list$ = toObservable(this.list);\r\n\r\n  // publish only as a read-only signal\r\n  protected get cache$(): Observable<Record<TKey, TValue>> {\r\n    return this.#cache$;\r\n  }\r\n\r\n  protected get list$(): Observable<TValue[]> {\r\n    return this.#list$;\r\n  }\r\n  \r\n  constructor(options: SignalStoreOptions) {\r\n    super(options);\r\n  }\r\n\r\n  getList$(): Observable<TValue[]> {\r\n    return this.list$;\r\n  }\r\n\r\n  getMany$(ids?: TKey[]): Observable<TValue[]> {\r\n    return this.cache$.pipe(\r\n      mapUntilChanged(obj => ids.map(id => obj[id]).filter(m => m != null)),\r\n    );\r\n  }\r\n\r\n}","import { EntityReader } from '../shared/helpers';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { InputTypeMetadata } from '../../shared/fields/input-type-metadata.model';\r\nimport { ItemIdentifierEditConfig } from '../../shared/models/edit-form.model';\r\nimport { FieldLogicManager } from '../fields/logic/field-logic-manager';\r\nimport { TranslateMenuHelpers } from '../fields/wrappers/localization/translate-menu/translate-menu.helpers';\r\nimport { TranslationStateCore } from '../fields/wrappers/localization/translate-menu/translate-menu.models';\r\nimport { EavContentType, EavContentTypeAttribute, EavEntity, EavField } from '../shared/models/eav';\r\nimport { InputTypeHelpers } from '../../shared/fields/input-type-helpers';\r\nimport { TranslationLinks } from '../localization/translation-link.constants';\r\nimport { LocalizationHelpers } from '../localization/localization.helpers';\r\nimport { MetadataDecorators } from './metadata-decorators.constants';\r\nimport { ContentTypeSettings } from './content-type-settings.model';\r\nimport { TranslationState } from './fields-configs.model';\r\nimport { FormLanguage } from './form-languages.model';\r\n\r\nexport class ContentTypeSettingsHelpers {\r\n\r\n  /**\r\n   * Initialize the default settings of a ContentType to ensure everything is set or empty-string etc.\r\n   * @returns \r\n   */\r\n  static initDefaultSettings(reader: EntityReader, contentType: EavContentType, itemHeader: ItemIdentifierEditConfig): ContentTypeSettings {\r\n    const metadata = reader.flattenAll<ContentTypeSettings>(contentType.Metadata);\r\n    const defaultSettings = { ...metadata };\r\n    defaultSettings.Description ??= '';\r\n    defaultSettings.EditInstructions ??= '';\r\n    defaultSettings.Features ??= '';\r\n    defaultSettings.Label ??= '';\r\n    defaultSettings.ListInstructions ??= '';\r\n    defaultSettings.Notes ??= '';\r\n    defaultSettings.Icon ??= '';\r\n    defaultSettings.Link ??= '';\r\n    defaultSettings._itemTitle = this.getContentTypeTitle(contentType, reader);\r\n    defaultSettings._slotCanBeEmpty = itemHeader.IsEmptyAllowed ?? false;\r\n    defaultSettings._slotIsEmpty = itemHeader.IsEmpty ?? false;\r\n    return defaultSettings;\r\n  }\r\n\r\n  static getContentTypeTitle(contentType: EavContentType, language: FormLanguage): string {\r\n    try {\r\n      // xx ContentType is a historic bug and should be fixed when JSONs are rechecked\r\n      const type = contentType.Metadata.find(metadata => metadata.Type.Name === 'ContentType' || metadata.Type.Name === 'xx ContentType');\r\n      let label = (type)\r\n        ? LocalizationHelpers.getValueOrDefault(type.Attributes.Label, language)?.Value\r\n        : null;\r\n      label = label || contentType.Name;\r\n      return label;\r\n    } catch (error) {\r\n      return contentType.Name;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class FieldsSettingsHelpers {\r\n\r\n  static getDefaultFieldSettings(settings: FieldSettings): FieldSettings {\r\n    const defSettings = AllDeprecated.moveDeprecatedSettings({ ...settings });\r\n    // update @All settings\r\n    defSettings.Name ??= '';\r\n    defSettings.Placeholder ??= '';\r\n    defSettings.Notes ??= '';\r\n    defSettings.Required ??= false;\r\n    defSettings.Disabled ??= false;\r\n    defSettings.DisableTranslation ??= false;\r\n    defSettings.Visible ??= true;\r\n    if (defSettings.DefaultCollapsed != null) {\r\n      defSettings.Collapsed = defSettings.DefaultCollapsed;\r\n      delete defSettings.DefaultCollapsed;\r\n    }\r\n    defSettings.Formulas ??= [];\r\n    let logic = FieldLogicManager.singleton().get(settings.InputType);\r\n    defSettings.DisableAutoTranslation ??= !logic?.canAutoTranslate;\r\n    return defSettings;\r\n  }\r\n\r\n  /** Find if DisableTranslation is true in any setting and in any language */\r\n  static findDisableTranslation(\r\n    contentTypeMetadata: EavEntity[],\r\n    inputType: InputTypeMetadata,\r\n    attributeValues: EavField<any>,\r\n    defaultLanguage: string,\r\n    attributeMetadata: EavEntity[],\r\n  ): boolean {\r\n    // disable translation if LanguagesDecorator in ContentType is false in any language\r\n    const langDecorator = contentTypeMetadata.find(m => m.Type.Name === MetadataDecorators.LanguagesDecorator);\r\n    if (langDecorator?.Attributes.Enabled?.Values.some(eavValue => eavValue.Value === false))\r\n      return true;\r\n\r\n    if (inputType?.DisableI18n)\r\n      return true;\r\n\r\n    if (!LocalizationHelpers.hasValueOnPrimary(attributeValues, defaultLanguage))\r\n      return true;\r\n\r\n    // disable translation if DisableTranslation is true in any language in @All, @String, @string-default, etc...\r\n    for (const mdItem of attributeMetadata ?? []) {\r\n      if (mdItem.Attributes.DisableTranslation?.Values.some(eavValue => eavValue.Value === true))\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  static isLastInGroup(contentType: EavContentType, attribute: EavContentTypeAttribute): boolean {\r\n    const index = contentType.Attributes.indexOf(attribute);\r\n    if (contentType.Attributes[index + 1] == null) return true;\r\n\r\n    const indexOfFirstEmpty = contentType.Attributes.findIndex(a => InputTypeHelpers.isGroupStart(a.InputType));\r\n    if (index < indexOfFirstEmpty) return false;\r\n\r\n    if (InputTypeHelpers.isGroupEnd(attribute.InputType)) return true;\r\n\r\n    if (InputTypeHelpers.endsPreviousGroup(contentType.Attributes[index + 1].InputType)) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  static getDisabledBecauseTranslations(\r\n    attributeValues: EavField<any>,\r\n    disableTranslation: boolean,\r\n    language: FormLanguage,\r\n  ): boolean {\r\n    if (language.current === language.primary) return false;\r\n    if (!LocalizationHelpers.hasValueOnPrimary(attributeValues, language.primary)) return true;\r\n    if (disableTranslation) return true;\r\n    if (LocalizationHelpers.hasEditableValue(attributeValues, language)) return false;\r\n    if (LocalizationHelpers.hasReadonlyValue(attributeValues, language.current)) return true;\r\n    return true;\r\n  }\r\n\r\n  static getTranslationState(\r\n    attributeValues: EavField<any>,\r\n    disableTranslation: boolean,\r\n    language: FormLanguage,\r\n  ): TranslationState {\r\n    let infoLabel: string;\r\n    let infoMessage: string;\r\n\r\n    if (disableTranslation) {\r\n      infoLabel = 'LangMenu.InAllLanguages';\r\n      infoMessage = '';\r\n    } else if (!LocalizationHelpers.hasValueOnPrimary(attributeValues, language.primary)) {\r\n      infoLabel = 'LangMenu.MissingDefaultLangValue';\r\n      infoMessage = language.primary;\r\n    } else {\r\n      const editableTranslationExists = LocalizationHelpers.hasEditableValue(attributeValues, language);\r\n      const readonlyTranslationExists = LocalizationHelpers.hasReadonlyValue(attributeValues, language.current);\r\n\r\n      if (editableTranslationExists || readonlyTranslationExists) {\r\n        const dimensions = LocalizationHelpers.getValueTranslation(attributeValues, language)\r\n          .Dimensions.map(dimension => dimension.Value)\r\n          .filter(dimension => !dimension.includes(language.current));\r\n\r\n        const isShared = dimensions.length > 0;\r\n        if (isShared) {\r\n          if (editableTranslationExists)\r\n            infoLabel = 'LangMenu.In';\r\n          else if (readonlyTranslationExists)\r\n            infoLabel = 'LangMenu.From';\r\n\r\n          infoMessage = TranslateMenuHelpers.calculateSharedInfoMessage(dimensions, language.current);\r\n        } else {\r\n          infoLabel = '';\r\n          infoMessage = '';\r\n        }\r\n      } else {\r\n        infoLabel = 'LangMenu.UseDefault';\r\n        infoMessage = '';\r\n      }\r\n    }\r\n    const state = this.getTranslationStateCore(attributeValues, disableTranslation, language);\r\n    const translationState: TranslationState = {\r\n      infoLabel,\r\n      infoMessage,\r\n      language: state.language,\r\n      linkType: state.linkType,\r\n    };\r\n    return translationState;\r\n  }\r\n\r\n  private static getTranslationStateCore(\r\n    attributeValues: EavField<any>,\r\n    disableTranslation: boolean,\r\n    language: FormLanguage,\r\n  ): TranslationStateCore {\r\n    // Determine is control disabled or enabled and info message\r\n    if (!LocalizationHelpers.hasValueOnPrimary(attributeValues, language.primary))\r\n      return { language: '', linkType: TranslationLinks.MissingDefaultLangValue }\r\n\r\n    if (disableTranslation)\r\n      return { language: '', linkType: TranslationLinks.DontTranslate }\r\n\r\n    if (LocalizationHelpers.hasEditableValue(attributeValues, language)) {\r\n      const editableElements = LocalizationHelpers.getValueTranslation(attributeValues, language)\r\n        .Dimensions.filter(dimension => dimension.Value !== language.current);\r\n\r\n      return (editableElements.length > 0)\r\n        ? { language: editableElements[0].Value, linkType: TranslationLinks.LinkReadWrite }\r\n        : { language: '', linkType: TranslationLinks.Translate }\r\n    }\r\n\r\n    if (LocalizationHelpers.hasReadonlyValue(attributeValues, language.current)) {\r\n      const readOnlyElements = LocalizationHelpers.getValueTranslation(attributeValues, language)\r\n        .Dimensions.filter(dimension => dimension.Value !== language.current);\r\n\r\n      return { language: readOnlyElements[0].Value, linkType: TranslationLinks.LinkReadOnly, }\r\n    }\r\n\r\n    return { language: '', linkType: TranslationLinks.DontTranslate, }\r\n  }\r\n}\r\n\r\nclass AllDeprecated {\r\n  /** @deprecated */\r\n  VisibleInEditUI: boolean;\r\n  /** VisibleInEditUi is copied Visible and then deleted */\r\n  static moveDeprecatedSettings(settings: FieldSettings): FieldSettings {\r\n    var asDeprecated = settings as unknown as AllDeprecated;\r\n    if (asDeprecated.VisibleInEditUI == null) return settings;\r\n    settings.Visible = asDeprecated.VisibleInEditUI;\r\n    delete asDeprecated.VisibleInEditUI;\r\n    return settings;\r\n  }\r\n}\r\n","import { Injectable, Signal, inject, signal } from '@angular/core';\r\nimport { DialogContext } from '../../app-administration/models';\r\nimport { keyPartOfPage, keyPublishing, partOfPageDefault } from '../../shared/constants/session.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { EditSettings } from '../dialog/main/edit-dialog-main.models';\r\nimport { Observable } from 'rxjs';\r\nimport { LanguageInstanceService } from '../shared/store/language-instance.service';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { FormConfiguration, VersioningOptions } from './form-configuration.model';\r\nimport { FormLanguageComplete, FormLanguagesConfig } from './form-languages.model';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'FormConfigService';\r\n\r\nexport const webApiEditRoot = 'cms/edit/';\r\n\r\n/**\r\n * Service which tell us about a single edit-form configuration.\r\n * It contains multiple entities.\r\n *\r\n * Things such as language, IDs shown on it, edit-settings etc.\r\n */\r\n@Injectable()\r\nexport class FormConfigService {\r\n  /** no constructor */\r\n  constructor() { }\r\n\r\n  log = new EavLogger(nameOfThis, logThis);\r\n\r\n  /**\r\n   * Important! These are constants that form was loaded with.\r\n   * They are initialized in the main edit-form.\r\n   * They do not change while form is running\r\n   */\r\n  config: FormConfiguration;\r\n\r\n  // WIP, null at first\r\n  configSignal = signal<FormConfiguration>(null);\r\n\r\n  /**\r\n   * Current form language information\r\n   */\r\n  language: Signal<FormLanguageComplete>;\r\n\r\n  /**\r\n   * Current edit settings\r\n   * Note: Clean use - only used by classes that inject this themselves\r\n   */\r\n  settings: EditSettings;\r\n\r\n  /**\r\n   * Form language configuration, not meant to change during runtime...\r\n   */\r\n  languages: FormLanguagesConfig;\r\n\r\n  /** Used to fetch form data and fill up eavConfig. Do not use anywhere else */\r\n  private context = inject(Context);\r\n  private languageService = inject(LanguageInstanceService);\r\n\r\n  /** Create EavConfiguration from sessionStorage */\r\n  initFormConfig(\r\n    dialogContext: DialogContext,\r\n    formId: number,\r\n    isParentDialog: boolean,\r\n    itemGuids: string[],\r\n    createMode: boolean,\r\n    isCopy: boolean,\r\n    enableHistory: boolean,\r\n    settings: EditSettings\r\n  ) {\r\n    this.settings = settings;\r\n    this.languages = {\r\n      initial: dialogContext.Language.Current,\r\n      primary: dialogContext.Language.Primary,\r\n      list: dialogContext.Language.List,\r\n    };\r\n    this.config = {\r\n      zoneId: this.context.zoneId,\r\n      appId: this.context.appId,\r\n      appRoot: dialogContext.App.Url,\r\n      appSharedRoot: dialogContext.App.SharedUrl,\r\n      moduleId: this.context.moduleId?.toString(),\r\n      partOfPage: sessionStorage.getItem(keyPartOfPage) ?? partOfPageDefault,\r\n      portalRoot: dialogContext.Site.Url,\r\n      tabId: this.context.tabId?.toString(),\r\n      systemRoot: window.location.pathname.split('/dist/')[0] + '/',\r\n      versioningOptions: this.getVersioningOptions(\r\n        sessionStorage.getItem(keyPartOfPage) === 'true',\r\n        sessionStorage.getItem(keyPublishing)\r\n      ),\r\n      formId,\r\n      isParentDialog,\r\n      itemGuids,\r\n      createMode,\r\n      isCopy,\r\n      enableHistory,\r\n      enableFormulaSave: dialogContext.Enable.FormulaSave ?? false,\r\n      overrideEditRestrictions: dialogContext.Enable.OverrideEditRestrictions ?? false,\r\n      dialogContext,\r\n      settings,\r\n    };\r\n    this.configSignal.set(this.config);\r\n    this.language = this.languageService.getSignal(this.config.formId);\r\n  }\r\n\r\n  private getVersioningOptions(\r\n    partOfPage: boolean,\r\n    publishing: string\r\n  ): VersioningOptions {\r\n\r\n    const allowAll: VersioningOptions = { show: true, hide: true, branch: true };\r\n\r\n    if (!partOfPage)\r\n      return allowAll;\r\n\r\n    const publish = publishing || '';\r\n    switch (publish) {\r\n      case '':\r\n      case 'DraftOptional':\r\n        return allowAll;\r\n      case 'DraftRequired':\r\n        // Note: the key 'show' should not be added, as the code later picks the first property to set the default\r\n        // Branch should also be first, as it's the preferred option\r\n        return { branch: true, hide: true };\r\n      case 'DraftForbidden':\r\n        return { show: true };\r\n      default: {\r\n        console.error(`Invalid versioning requirements: ${publish}`);\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the language observable for the form - it will keep track of the current language as it changes.\r\n   * TODO: try to use the signal as much as possible\r\n    // TODO:: @2dg Question Languages as Signal\r\n   */\r\n  get language$(): Observable<FormLanguageComplete> {\r\n    return this._language$ ??= this.languageService.getLanguage$(this.config.formId);\r\n  }\r\n  private _language$: Observable<FormLanguageComplete>;\r\n\r\n}\r\n","import { Language } from '../../shared/models/language.model';\r\n\r\nexport { Language } from '../../shared/models/language.model';\r\n\r\nexport class FormLanguage\r\n{\r\n  /** The current language of the system / UI. */\r\n  current: string;\r\n\r\n  /** The primary language of the system.\r\n   * Important, because the primary language must be filled in before all other languages.\r\n   */\r\n  primary: string;\r\n\r\n  /**\r\n   * In some cases we want both to be primary, but it's not clear why.\r\n   * I think it's just because we want certain tests to only use one value, but the test is meant for 2 values.\r\n   */\r\n  static bothPrimary(original: FormLanguage): FormLanguage {\r\n    return {\r\n      current: original.primary,\r\n      primary: original.primary\r\n    };\r\n  }\r\n\r\n  static diffCurrent(original: FormLanguage, current: string): FormLanguage {\r\n    return {\r\n      current: current,\r\n      primary: original.primary\r\n    };\r\n  }\r\n\r\n  static empty(): FormLanguageComplete {\r\n    return {\r\n      current: '',\r\n      primary: '',\r\n      initial: '',\r\n    };\r\n  }\r\n}\r\n\r\nexport class FormLanguageComplete extends FormLanguage {\r\n  /** initial language of the UI */\r\n  initial: string;\r\n}\r\n\r\nexport interface FormLanguagesConfig\r\n{\r\n  initial: string;\r\n  primary: string;\r\n  list: Language[];\r\n}\r\n\r\n","export const MetadataDecorators = {\r\n  LanguagesDecorator: 'LanguagesDecorator',\r\n  SaveEmptyDecorator: 'SaveEmptyDecorator',\r\n} as const;\r\n","export const InputTypeCatalog = {\r\n  BooleanDefault: 'boolean-default',\r\n  BooleanTristate: 'boolean-tristate',\r\n  CustomDefault: 'custom-default',\r\n  CustomGps: 'custom-gps',\r\n  CustomJsonEditor: 'custom-json-editor',\r\n  DateTimeDefault: 'datetime-default',\r\n  DefaultSuffix: '-default',\r\n  EmptyDefault: 'empty-default',\r\n  EmptyEnd: 'empty-end',\r\n  EmptyMessage: 'empty-message',\r\n  EntityContentBlocks: 'entity-content-blocks',\r\n  EntityDefault: 'entity-default',\r\n  EntityQuery: 'entity-query',\r\n  ExternalWebComponent: 'external-web-component',\r\n  HyperlinkDefault: 'hyperlink-default',\r\n  HyperlinkLibrary: 'hyperlink-library',\r\n  NumberDefault: 'number-default',\r\n  NumberDropdown: 'number-dropdown',\r\n  StringDefault: 'string-default',\r\n  StringDropdown: 'string-dropdown',\r\n  StringDropdownQuery: 'string-dropdown-query',\r\n  StringFontIconPicker: 'string-font-icon-picker',\r\n  StringJson: 'string-json',\r\n  StringTemplatePicker: 'string-template-picker',\r\n  StringUrlPath: 'string-url-path',\r\n  StringWysiwyg: 'string-wysiwyg',\r\n\r\n  /** New Pickers v17.x */\r\n  EntityPicker: 'entity-picker',\r\n  StringPicker: 'string-picker',\r\n  NumberPicker: 'number-picker',\r\n\r\n  /** for all situations where we need a fallback; new v16.04 */\r\n  Unknown: 'unknown',\r\n} as const;\r\n\r\nexport type InputTypeStrict = typeof InputTypeCatalog[keyof typeof InputTypeCatalog];\r\n","import { InputTypeCatalog, InputTypeStrict } from './input-type-catalog';\r\n\r\nconst empty: InputTypeStrict[] = [InputTypeCatalog.EmptyDefault, InputTypeCatalog.EmptyEnd, InputTypeCatalog.EmptyMessage];\r\n\r\nconst ends: InputTypeStrict[] = [InputTypeCatalog.EmptyDefault, InputTypeCatalog.EmptyEnd];\r\n\r\nconst newPicker: InputTypeStrict[] = [InputTypeCatalog.EntityPicker, InputTypeCatalog.StringPicker, InputTypeCatalog.NumberPicker];\r\n\r\nexport class InputTypeHelpers {\r\n  static isEmpty(inputType: InputTypeStrict): boolean {\r\n    return empty.includes(inputType);\r\n  }\r\n\r\n  static endsPreviousGroup(inputType: InputTypeStrict): boolean {\r\n    return ends.includes(inputType);\r\n  }\r\n\r\n  static isGroupStart(inputType: InputTypeStrict): boolean {\r\n    return inputType === InputTypeCatalog.EmptyDefault;\r\n  }\r\n  \r\n  static isGroupEnd(inputType: InputTypeStrict): boolean {\r\n    return inputType === InputTypeCatalog.EmptyEnd;\r\n  }\r\n\r\n  static isMessage(inputType: InputTypeStrict): boolean {\r\n    return inputType === InputTypeCatalog.EmptyMessage;\r\n  }\r\n\r\n  static isNewPicker(inputType: InputTypeStrict): boolean {\r\n    return newPicker.includes(inputType);\r\n  }\r\n\r\n}\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","import { computed, Signal, CreateComputedOptions } from '@angular/core';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\nexport type ComputedCache<TKey extends string, TValue> = Record<TKey, Signal<TValue>>;\r\n\r\n/**\r\n * Special helper with Signals to cache computed signals.\r\n */\r\nexport class ComputedCacheHelper<TKey extends string | number, TValue> {\r\n  // private cache: ComputedCache<TKey, TValue> = {};// as any;\r\n\r\n  private cache: Record<TKey, Signal<TValue>> = {} as Record<TKey, Signal<TValue>>;// as any;\r\n\r\n  get(key: TKey): Signal<TValue> {\r\n    return this.cache[key];\r\n  }\r\n\r\n  getOrCreate(key: TKey, factory: () => TValue, options: CreateComputedOptions<TValue> = null): Signal<TValue> {\r\n    return this.getOrCreateWithInfo(key, factory, options).signal;\r\n    // if (this.cache[key]) return this.cache[key];\r\n    // const sig = computed(() => factory(), options ?? { equal: isEqual });\r\n    // return this.set(key, sig);\r\n  }\r\n\r\n  getOrCreateWithInfo(key: TKey, factory: () => TValue, options: CreateComputedOptions<TValue> = null): { signal: Signal<TValue>, isNew: boolean } {\r\n    if (this.cache[key])\r\n      return { signal: this.cache[key], isNew: false };\r\n    const sig = computed(() => factory(), options ?? { equal: isEqual });\r\n    return { signal: this.set(key, sig), isNew: true };\r\n  }\r\n\r\n\r\n  set(key: TKey, value: Signal<TValue>): Signal<TValue> {\r\n    this.cache[key] = value;\r\n    return value;\r\n  }\r\n\r\n  delete(key: TKey): void {\r\n    delete this.cache[key];\r\n  }\r\n\r\n  clear(): void {\r\n    Object.keys(this.cache).forEach((key) => {\r\n      delete this.cache[key as TKey];\r\n    });\r\n  }\r\n}","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(isEqual),\r\n  );\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nfunction applyCssPrefixes(target) {\n    for (let key in target) {\n        let value = target[key] ?? '';\n        switch (key) {\n            case 'display':\n                if (value === 'flex') {\n                    target['display'] = [\n                        '-webkit-flex',\n                        'flex'\n                    ];\n                }\n                else if (value === 'inline-flex') {\n                    target['display'] = [\n                        '-webkit-inline-flex',\n                        'inline-flex'\n                    ];\n                }\n                else {\n                    target['display'] = value;\n                }\n                break;\n            case 'align-items':\n            case 'align-self':\n            case 'align-content':\n            case 'flex':\n            case 'flex-basis':\n            case 'flex-flow':\n            case 'flex-grow':\n            case 'flex-shrink':\n            case 'flex-wrap':\n            case 'justify-content':\n                target['-webkit-' + key] = value;\n                break;\n            case 'flex-direction':\n                target['-webkit-flex-direction'] = value;\n                target['flex-direction'] = value;\n                break;\n            case 'order':\n                target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n                break;\n        }\n    }\n    return target;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst INLINE = 'inline';\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nfunction buildLayoutCSS(value) {\n    let [direction, wrap, isInline] = validateValue(value);\n    return buildCSS(direction, wrap, isInline);\n}\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nfunction validateValue(value) {\n    value = value?.toLowerCase() ?? '';\n    let [direction, wrap, inline] = value.split(' ');\n    // First value must be the `flex-direction`\n    if (!LAYOUT_VALUES.find(x => x === direction)) {\n        direction = LAYOUT_VALUES[0];\n    }\n    if (wrap === INLINE) {\n        wrap = (inline !== INLINE) ? inline : '';\n        inline = INLINE;\n    }\n    return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nfunction isFlowHorizontal(value) {\n    let [flow,] = validateValue(value);\n    return flow.indexOf('row') > -1;\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nfunction validateWrapValue(value) {\n    if (!!value) {\n        switch (value.toLowerCase()) {\n            case 'reverse':\n            case 'wrap-reverse':\n            case 'reverse-wrap':\n                value = 'wrap-reverse';\n                break;\n            case 'no':\n            case 'none':\n            case 'nowrap':\n                value = 'nowrap';\n                break;\n            // All other values fallback to 'wrap'\n            default:\n                value = 'wrap';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n    return {\n        display: inline ? 'inline-flex' : 'flex',\n        'box-sizing': 'border-box',\n        'flex-direction': direction,\n        'flex-wrap': wrap || null,\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nfunction extendObject(dest, ...sources) {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (let source of sources) {\n        if (source != null) {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INLINE, LAYOUT_VALUES, applyCssPrefixes, buildLayoutCSS, extendObject, isFlowHorizontal, validateValue, validateWrapValue };\n","import * as i0 from '@angular/core';\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_ID, NgModule, Injectable, InjectionToken, Inject, inject, Directive } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT, isPlatformServer } from '@angular/common';\nimport { BehaviorSubject, Observable, merge, Subject, asapScheduler, of, fromEvent } from 'rxjs';\nimport { applyCssPrefixes, extendObject, buildLayoutCSS } from '@angular/flex-layout/_private-utils';\nimport { filter, tap, debounceTime, switchMap, map, distinctUntilChanged, takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nfunction removeStyles(_document, platformId) {\n    return () => {\n        if (isPlatformBrowser(platformId)) {\n            const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n            // RegExp constructor should only be used if passing a variable to the constructor.\n            // When using static regular expression it is more performant to use reg exp literal.\n            // This is also needed to provide Safari 9 compatibility, please see\n            // https://stackoverflow.com/questions/37919802 for more discussion.\n            const classRegex = /\\bflex-layout-.+?\\b/g;\n            elements.forEach(el => {\n                el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n                    el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n            });\n        }\n    };\n}\n/**\n *  Provider to remove SSR styles on the browser\n */\nconst BROWSER_PROVIDER = {\n    provide: APP_BOOTSTRAP_LISTENER,\n    useFactory: removeStyles,\n    deps: [DOCUMENT, PLATFORM_ID],\n    multi: true\n};\nconst CLASS_NAME = 'flex-layout-';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\nclass CoreModule {\n}\nCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: CoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.2\", ngImport: i0, type: CoreModule });\nCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: CoreModule, providers: [BROWSER_PROVIDER] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: CoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [BROWSER_PROVIDER]\n                }]\n        }] });\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nclass MediaChange {\n    /**\n     * @param matches whether the mediaQuery is currently activated\n     * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n     * @param mqAlias e.g. gt-sm, md, gt-lg\n     * @param suffix e.g. GtSM, Md, GtLg\n     * @param priority the priority of activation for the given breakpoint\n     */\n    constructor(matches = false, mediaQuery = 'all', mqAlias = '', suffix = '', priority = 0) {\n        this.matches = matches;\n        this.mediaQuery = mediaQuery;\n        this.mqAlias = mqAlias;\n        this.suffix = suffix;\n        this.priority = priority;\n        this.property = '';\n    }\n    /** Create an exact copy of the MediaChange */\n    clone() {\n        return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\nclass StylesheetMap {\n    constructor() {\n        this.stylesheet = new Map();\n    }\n    /**\n     * Add an individual style to an HTML element\n     */\n    addStyleToElement(element, style, value) {\n        const stylesheet = this.stylesheet.get(element);\n        if (stylesheet) {\n            stylesheet.set(style, value);\n        }\n        else {\n            this.stylesheet.set(element, new Map([[style, value]]));\n        }\n    }\n    /**\n     * Clear the virtual stylesheet\n     */\n    clearStyles() {\n        this.stylesheet.clear();\n    }\n    /**\n     * Retrieve a given style for an HTML element\n     */\n    getStyleForElement(el, styleName) {\n        const styles = this.stylesheet.get(el);\n        let value = '';\n        if (styles) {\n            const style = styles.get(styleName);\n            if (typeof style === 'number' || typeof style === 'string') {\n                value = style + '';\n            }\n        }\n        return value;\n    }\n}\nStylesheetMap.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StylesheetMap, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nStylesheetMap.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StylesheetMap, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StylesheetMap, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_CONFIG = {\n    addFlexToParent: true,\n    addOrientationBps: false,\n    disableDefaultBps: false,\n    disableVendorPrefixes: false,\n    serverLoaded: false,\n    useColumnBasisZero: true,\n    printWithBreakpoints: [],\n    mediaTriggerAutoRestore: true,\n    ssrObserveBreakpoints: [],\n    // This is disabled by default because otherwise the multiplier would\n    // run for all users, regardless of whether they're using this feature.\n    // Instead, we disable it by default, which requires this ugly cast.\n    multiplier: undefined,\n    defaultUnit: 'px',\n    detectLayoutDisplay: false,\n};\nconst LAYOUT_CONFIG = new InjectionToken('Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nconst SERVER_TOKEN = new InjectionToken('FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst BREAKPOINT = new InjectionToken('Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nfunction mergeAlias(dest, source) {\n    dest = dest?.clone() ?? new MediaChange();\n    if (source) {\n        dest.mqAlias = source.alias;\n        dest.mediaQuery = source.mediaQuery;\n        dest.suffix = source.suffix;\n        dest.priority = source.priority;\n    }\n    return dest;\n}\n\n/** A class that encapsulates CSS style generation for common directives */\nclass StyleBuilder {\n    constructor() {\n        /** Whether to cache the generated output styles */\n        this.shouldCache = true;\n    }\n    /**\n     * Run a side effect computation given the input string and the computed styles\n     * from the build task and the host configuration object\n     * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n     */\n    sideEffect(_input, _styles, _parent) {\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass StyleUtils {\n    constructor(_serverStylesheet, _serverModuleLoaded, _platformId, layoutConfig) {\n        this._serverStylesheet = _serverStylesheet;\n        this._serverModuleLoaded = _serverModuleLoaded;\n        this._platformId = _platformId;\n        this.layoutConfig = layoutConfig;\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     */\n    applyStyleToElement(element, style, value = null) {\n        let styles = {};\n        if (typeof style === 'string') {\n            styles[style] = value;\n            style = styles;\n        }\n        styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        this._applyMultiValueStyleToElement(styles, element);\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive's element\n     */\n    applyStyleToElements(style, elements = []) {\n        const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        elements.forEach(el => {\n            this._applyMultiValueStyleToElement(styles, el);\n        });\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction)\n     *\n     * Check inline style first then check computed (stylesheet) style\n     */\n    getFlowDirection(target) {\n        const query = 'flex-direction';\n        let value = this.lookupStyle(target, query);\n        const hasInlineValue = this.lookupInlineStyle(target, query) ||\n            (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n        return [value || 'row', hasInlineValue];\n    }\n    hasWrap(target) {\n        const query = 'flex-wrap';\n        return this.lookupStyle(target, query) === 'wrap';\n    }\n    /**\n     * Find the DOM element's raw attribute value (if any)\n     */\n    lookupAttributeValue(element, attribute) {\n        return element.getAttribute(attribute) ?? '';\n    }\n    /**\n     * Find the DOM element's inline style value (if any)\n     */\n    lookupInlineStyle(element, styleName) {\n        return isPlatformBrowser(this._platformId) ?\n            element.style.getPropertyValue(styleName) : getServerStyle(element, styleName);\n    }\n    /**\n     * Determine the inline or inherited CSS style\n     * NOTE: platform-server has no implementation for getComputedStyle\n     */\n    lookupStyle(element, styleName, inlineOnly = false) {\n        let value = '';\n        if (element) {\n            let immediateValue = value = this.lookupInlineStyle(element, styleName);\n            if (!immediateValue) {\n                if (isPlatformBrowser(this._platformId)) {\n                    if (!inlineOnly) {\n                        value = getComputedStyle(element).getPropertyValue(styleName);\n                    }\n                }\n                else {\n                    if (this._serverModuleLoaded) {\n                        value = this._serverStylesheet.getStyleForElement(element, styleName);\n                    }\n                }\n            }\n        }\n        // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n        //       in which case getComputedStyle() should determine a valid value.\n        return value ? value.trim() : '';\n    }\n    /**\n     * Applies the styles to the element. The styles object map may contain an array of values\n     * Each value will be added as element style\n     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n     */\n    _applyMultiValueStyleToElement(styles, element) {\n        Object.keys(styles).sort().forEach(key => {\n            const el = styles[key];\n            const values = Array.isArray(el) ? el : [el];\n            values.sort();\n            for (let value of values) {\n                value = value ? value + '' : '';\n                if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n                    isPlatformBrowser(this._platformId) ?\n                        element.style.setProperty(key, value) : setServerStyle(element, key, value);\n                }\n                else {\n                    this._serverStylesheet.addStyleToElement(element, key, value);\n                }\n            }\n        });\n    }\n}\nStyleUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StyleUtils, deps: [{ token: StylesheetMap }, { token: SERVER_TOKEN }, { token: PLATFORM_ID }, { token: LAYOUT_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\nStyleUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StyleUtils, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StyleUtils, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: StylesheetMap }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }]; } });\nfunction getServerStyle(element, styleName) {\n    const styleMap = readStyleAttribute(element);\n    return styleMap[styleName] ?? '';\n}\nfunction setServerStyle(element, styleName, styleValue) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = readStyleAttribute(element);\n    styleMap[styleName] = styleValue ?? '';\n    writeStyleAttribute(element, styleMap);\n}\nfunction writeStyleAttribute(element, styleMap) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n        const newValue = styleMap[key];\n        if (newValue) {\n            styleAttrValue += `${key}:${styleMap[key]};`;\n        }\n    }\n    element.setAttribute('style', styleAttrValue);\n}\nfunction readStyleAttribute(element) {\n    const styleMap = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n        const styleList = styleAttribute.split(/;+/g);\n        for (let i = 0; i < styleList.length; i++) {\n            const style = styleList[i].trim();\n            if (style.length > 0) {\n                const colonIndex = style.indexOf(':');\n                if (colonIndex === -1) {\n                    throw new Error(`Invalid CSS style: ${style}`);\n                }\n                const name = style.substr(0, colonIndex).trim();\n                styleMap[name] = style.substr(colonIndex + 1).trim();\n            }\n        }\n    }\n    return styleMap;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** HOF to sort the breakpoints by descending priority */\nfunction sortDescendingPriority(a, b) {\n    const priorityA = a ? a.priority || 0 : 0;\n    const priorityB = b ? b.priority || 0 : 0;\n    return priorityB - priorityA;\n}\n/** HOF to sort the breakpoints by ascending priority */\nfunction sortAscendingPriority(a, b) {\n    const pA = a.priority || 0;\n    const pB = b.priority || 0;\n    return pA - pB;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\nclass MatchMedia {\n    constructor(_zone, _platformId, _document) {\n        this._zone = _zone;\n        this._platformId = _platformId;\n        this._document = _document;\n        /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n        this.source = new BehaviorSubject(new MediaChange(true));\n        this.registry = new Map();\n        this.pendingRemoveListenerFns = [];\n        this._observable$ = this.source.asObservable();\n    }\n    /**\n     * Publish list of all current activations\n     */\n    get activations() {\n        const results = [];\n        this.registry.forEach((mql, key) => {\n            if (mql.matches) {\n                results.push(key);\n            }\n        });\n        return results;\n    }\n    /**\n     * For the specified mediaQuery?\n     */\n    isActive(mediaQuery) {\n        const mql = this.registry.get(mediaQuery);\n        return mql?.matches ?? this.registerQuery(mediaQuery).some(m => m.matches);\n    }\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * Typically used by the MediaQueryAdaptor; optionally available to components\n     * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n     *\n     * Use deferred registration process to register breakpoints only on subscription\n     * This logic also enforces logic to register all mediaQueries BEFORE notify\n     * subscribers of notifications.\n     */\n    observe(mqList, filterOthers = false) {\n        if (mqList && mqList.length) {\n            const matchMedia$ = this._observable$.pipe(filter((change) => !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1)));\n            const registration$ = new Observable((observer) => {\n                const matches = this.registerQuery(mqList);\n                if (matches.length) {\n                    const lastChange = matches.pop();\n                    matches.forEach((e) => {\n                        observer.next(e);\n                    });\n                    this.source.next(lastChange); // last match is cached\n                }\n                observer.complete();\n            });\n            return merge(registration$, matchMedia$);\n        }\n        return this._observable$;\n    }\n    /**\n     * Based on the BreakPointRegistry provider, register internal listeners for each unique\n     * mediaQuery. Each listener emits specific MediaChange data to observers\n     */\n    registerQuery(mediaQuery) {\n        const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n        const matches = [];\n        buildQueryCss(list, this._document);\n        list.forEach((query) => {\n            const onMQLEvent = (e) => {\n                this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n            };\n            let mql = this.registry.get(query);\n            if (!mql) {\n                mql = this.buildMQL(query);\n                mql.addListener(onMQLEvent);\n                this.pendingRemoveListenerFns.push(() => mql.removeListener(onMQLEvent));\n                this.registry.set(query, mql);\n            }\n            if (mql.matches) {\n                matches.push(new MediaChange(true, query));\n            }\n        });\n        return matches;\n    }\n    ngOnDestroy() {\n        let fn;\n        while (fn = this.pendingRemoveListenerFns.pop()) {\n            fn();\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     */\n    buildMQL(query) {\n        return constructMql(query, isPlatformBrowser(this._platformId));\n    }\n}\nMatchMedia.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MatchMedia, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMatchMedia.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MatchMedia, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MatchMedia, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries, _document) {\n    const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n        const query = list.join(', ');\n        try {\n            const styleEl = _document.createElement('style');\n            styleEl.setAttribute('type', 'text/css');\n            if (!styleEl.styleSheet) {\n                const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n                styleEl.appendChild(_document.createTextNode(cssText));\n            }\n            _document.head.appendChild(styleEl);\n            // Store in private global registry\n            list.forEach(mq => ALL_STYLES[mq] = styleEl);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\nfunction buildMockMql(query) {\n    const et = new EventTarget();\n    et.matches = query === 'all' || query === '';\n    et.media = query;\n    et.addListener = () => { };\n    et.removeListener = () => { };\n    et.addEventListener = () => { };\n    et.dispatchEvent = () => false;\n    et.onchange = null;\n    return et;\n}\nfunction constructMql(query, isBrowser) {\n    const canListen = isBrowser && !!window.matchMedia('all').addListener;\n    return canListen ? window.matchMedia(query) : buildMockMql(query);\n}\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nconst DEFAULT_BREAKPOINTS = [\n    {\n        alias: 'xs',\n        mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)',\n        priority: 1000,\n    },\n    {\n        alias: 'sm',\n        mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)',\n        priority: 900,\n    },\n    {\n        alias: 'md',\n        mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)',\n        priority: 800,\n    },\n    {\n        alias: 'lg',\n        mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)',\n        priority: 700,\n    },\n    {\n        alias: 'xl',\n        mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)',\n        priority: 600,\n    },\n    {\n        alias: 'lt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 599.98px)',\n        priority: 950,\n    },\n    {\n        alias: 'lt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 959.98px)',\n        priority: 850,\n    },\n    {\n        alias: 'lt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 1279.98px)',\n        priority: 750,\n    },\n    {\n        alias: 'lt-xl',\n        overlapping: true,\n        priority: 650,\n        mediaQuery: 'screen and (max-width: 1919.98px)',\n    },\n    {\n        alias: 'gt-xs',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 600px)',\n        priority: -950,\n    },\n    {\n        alias: 'gt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 960px)',\n        priority: -850,\n    }, {\n        alias: 'gt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1280px)',\n        priority: -750,\n    },\n    {\n        alias: 'gt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1920px)',\n        priority: -650,\n    }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/* tslint:disable */\nconst HANDSET_PORTRAIT = '(orientation: portrait) and (max-width: 599.98px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.98px)';\nconst TABLET_PORTRAIT = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)';\nconst TABLET_LANDSCAPE = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)';\nconst WEB_PORTRAIT = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE = '(orientation: landscape) and (min-width: 1280px)';\nconst ScreenTypes = {\n    'HANDSET': `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n    'TABLET': `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n    'WEB': `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n    'HANDSET_PORTRAIT': `${HANDSET_PORTRAIT}`,\n    'TABLET_PORTRAIT': `${TABLET_PORTRAIT} `,\n    'WEB_PORTRAIT': `${WEB_PORTRAIT}`,\n    'HANDSET_LANDSCAPE': `${HANDSET_LANDSCAPE}`,\n    'TABLET_LANDSCAPE': `${TABLET_LANDSCAPE}`,\n    'WEB_LANDSCAPE': `${WEB_LANDSCAPE}`\n};\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nconst ORIENTATION_BREAKPOINTS = [\n    { 'alias': 'handset', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET },\n    { 'alias': 'handset.landscape', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE },\n    { 'alias': 'handset.portrait', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT },\n    { 'alias': 'tablet', priority: 2100, 'mediaQuery': ScreenTypes.TABLET },\n    { 'alias': 'tablet.landscape', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_LANDSCAPE },\n    { 'alias': 'tablet.portrait', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT },\n    { 'alias': 'web', priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping: true },\n    { 'alias': 'web.landscape', priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping: true },\n    { 'alias': 'web.portrait', priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping: true }\n];\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part) {\n    let first = part.length > 0 ? part.charAt(0) : '';\n    let remainder = (part.length > 1) ? part.slice(1) : '';\n    return first.toUpperCase() + remainder;\n}\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name) {\n    return name\n        .replace(ALIAS_DELIMITERS, '|')\n        .split('|')\n        .map(firstUpperCase)\n        .join('');\n}\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nfunction validateSuffixes(list) {\n    list.forEach((bp) => {\n        if (!bp.suffix) {\n            bp.suffix = camelCase(bp.alias); // create Suffix value based on alias\n            bp.overlapping = !!bp.overlapping; // ensure default value\n        }\n    });\n    return list;\n}\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nfunction mergeByAlias(defaults, custom = []) {\n    const dict = {};\n    defaults.forEach(bp => {\n        dict[bp.alias] = bp;\n    });\n    // Merge custom breakpoints\n    custom.forEach((bp) => {\n        if (dict[bp.alias]) {\n            extendObject(dict[bp.alias], bp);\n        }\n        else {\n            dict[bp.alias] = bp;\n        }\n    });\n    return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nconst BREAKPOINTS = new InjectionToken('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n        const breakpoints = inject(BREAKPOINT);\n        const layoutConfig = inject(LAYOUT_CONFIG);\n        const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n            .map((v) => Array.isArray(v) ? v : [v]));\n        const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n            .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n        return mergeByAlias(builtIns, bpFlattenArray);\n    }\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\nclass BreakPointRegistry {\n    constructor(list) {\n        /**\n         * Memoized BreakPoint Lookups\n         */\n        this.findByMap = new Map();\n        this.items = [...list].sort(sortAscendingPriority);\n    }\n    /**\n     * Search breakpoints by alias (e.g. gt-xs)\n     */\n    findByAlias(alias) {\n        return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias === alias);\n    }\n    findByQuery(query) {\n        return this.findWithPredicate(query, (bp) => bp.mediaQuery === query);\n    }\n    /**\n     * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n     * e.g. gt-sm overlaps md, lg, and xl\n     */\n    get overlappings() {\n        return this.items.filter(it => it.overlapping);\n    }\n    /**\n     * Get list of all registered (non-empty) breakpoint aliases\n     */\n    get aliases() {\n        return this.items.map(it => it.alias);\n    }\n    /**\n     * Aliases are mapped to properties using suffixes\n     * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n     * for property layoutGtSM.\n     */\n    get suffixes() {\n        return this.items.map(it => it?.suffix ?? '');\n    }\n    /**\n     * Memoized lookup using custom predicate function\n     */\n    findWithPredicate(key, searchFn) {\n        let response = this.findByMap.get(key);\n        if (!response) {\n            response = this.items.find(searchFn) ?? null;\n            this.findByMap.set(key, response);\n        }\n        return response ?? null;\n    }\n}\nBreakPointRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: BreakPointRegistry, deps: [{ token: BREAKPOINTS }], target: i0.ɵɵFactoryTarget.Injectable });\nBreakPointRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: BreakPointRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: BreakPointRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [BREAKPOINTS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PRINT = 'print';\nconst BREAKPOINT_PRINT = {\n    alias: PRINT,\n    mediaQuery: PRINT,\n    priority: 1000\n};\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\nclass PrintHook {\n    constructor(breakpoints, layoutConfig, _document) {\n        this.breakpoints = breakpoints;\n        this.layoutConfig = layoutConfig;\n        this._document = _document;\n        // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n        //  and `afterprint` event listeners.\n        this.registeredBeforeAfterPrintHooks = false;\n        // isPrintingBeforeAfterEvent is used to track if we are printing from within\n        // a `beforeprint` event handler. This prevents the typical `stopPrinting`\n        // form `interceptEvents` so that printing is not stopped while the dialog\n        // is still open. This is an extension of the `isPrinting` property on\n        // browsers which support `beforeprint` and `afterprint` events.\n        this.isPrintingBeforeAfterEvent = false;\n        this.beforePrintEventListeners = [];\n        this.afterPrintEventListeners = [];\n        this.formerActivations = null;\n        // Is this service currently in print mode\n        this.isPrinting = false;\n        this.queue = new PrintQueue();\n        this.deactivations = [];\n    }\n    /** Add 'print' mediaQuery: to listen for matchMedia activations */\n    withPrintQuery(queries) {\n        return [...queries, PRINT];\n    }\n    /** Is the MediaChange event for any 'print' @media */\n    isPrintEvent(e) {\n        return e.mediaQuery.startsWith(PRINT);\n    }\n    /** What is the desired mqAlias to use while printing? */\n    get printAlias() {\n        return [...(this.layoutConfig.printWithBreakpoints ?? [])];\n    }\n    /** Lookup breakpoints associated with print aliases. */\n    get printBreakPoints() {\n        return this.printAlias\n            .map(alias => this.breakpoints.findByAlias(alias))\n            .filter(bp => bp !== null);\n    }\n    /** Lookup breakpoint associated with mediaQuery */\n    getEventBreakpoints({ mediaQuery }) {\n        const bp = this.breakpoints.findByQuery(mediaQuery);\n        const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n        return list.sort(sortDescendingPriority);\n    }\n    /** Update event with printAlias mediaQuery information */\n    updateEvent(event) {\n        let bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (this.isPrintEvent(event)) {\n            // Reset from 'print' to first (highest priority) print breakpoint\n            bp = this.getEventBreakpoints(event)[0];\n            event.mediaQuery = bp?.mediaQuery ?? '';\n        }\n        return mergeAlias(event, bp);\n    }\n    // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n    // trigger print styles synchronously and apply proper layout styles.\n    // It is a noop if the hooks have already been registered or if the document's\n    // `defaultView` is not available.\n    registerBeforeAfterPrintHooks(target) {\n        // `defaultView` may be null when rendering on the server or in other contexts.\n        if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n            return;\n        }\n        this.registeredBeforeAfterPrintHooks = true;\n        const beforePrintListener = () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            if (!this.isPrinting) {\n                this.isPrintingBeforeAfterEvent = true;\n                this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n                target.updateStyles();\n            }\n        };\n        const afterPrintListener = () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            this.isPrintingBeforeAfterEvent = false;\n            if (this.isPrinting) {\n                this.stopPrinting(target);\n                target.updateStyles();\n            }\n        };\n        // Could we have teardown logic to remove if there are no print listeners being used?\n        this._document.defaultView.addEventListener('beforeprint', beforePrintListener);\n        this._document.defaultView.addEventListener('afterprint', afterPrintListener);\n        this.beforePrintEventListeners.push(beforePrintListener);\n        this.afterPrintEventListeners.push(afterPrintListener);\n    }\n    /**\n     * Prepare RxJS tap operator with partial application\n     * @return pipeable tap predicate\n     */\n    interceptEvents(target) {\n        return (event) => {\n            if (this.isPrintEvent(event)) {\n                if (event.matches && !this.isPrinting) {\n                    this.startPrinting(target, this.getEventBreakpoints(event));\n                    target.updateStyles();\n                }\n                else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n                    this.stopPrinting(target);\n                    target.updateStyles();\n                }\n                return;\n            }\n            this.collectActivations(target, event);\n        };\n    }\n    /** Stop mediaChange event propagation in event streams */\n    blockPropagation() {\n        return (event) => {\n            return !(this.isPrinting || this.isPrintEvent(event));\n        };\n    }\n    /**\n     * Save current activateBreakpoints (for later restore)\n     * and substitute only the printAlias breakpoint\n     */\n    startPrinting(target, bpList) {\n        this.isPrinting = true;\n        this.formerActivations = target.activatedBreakpoints;\n        target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n    }\n    /** For any print de-activations, reset the entire print queue */\n    stopPrinting(target) {\n        target.activatedBreakpoints = this.deactivations;\n        this.deactivations = [];\n        this.formerActivations = null;\n        this.queue.clear();\n        this.isPrinting = false;\n    }\n    /**\n     * To restore pre-Print Activations, we must capture the proper\n     * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n     * is supported; so 'print' mediaQuery activations are used as a fallback\n     * in browsers without `beforeprint` support.\n     *\n     * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n     *\n     * Let's capture all de-activations using the following logic:\n     *\n     *  When not printing:\n     *    - clear cache when activating non-print breakpoint\n     *    - update cache (and sort) when deactivating\n     *\n     *  When printing:\n     *    - sort and save when starting print\n     *    - restore as activatedTargets and clear when stop printing\n     */\n    collectActivations(target, event) {\n        if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n            if (!this.isPrintingBeforeAfterEvent) {\n                // Only clear deactivations if we aren't printing from a `beforeprint` event.\n                // Otherwise, this will clear before `stopPrinting()` is called to restore\n                // the pre-Print Activations.\n                this.deactivations = [];\n                return;\n            }\n            if (!event.matches) {\n                const bp = this.breakpoints.findByQuery(event.mediaQuery);\n                // Deactivating a breakpoint\n                if (bp) {\n                    const hasFormerBp = this.formerActivations && this.formerActivations.includes(bp);\n                    const wasActivated = !this.formerActivations && target.activatedBreakpoints.includes(bp);\n                    const shouldDeactivate = hasFormerBp || wasActivated;\n                    if (shouldDeactivate) {\n                        this.deactivations.push(bp);\n                        this.deactivations.sort(sortDescendingPriority);\n                    }\n                }\n            }\n        }\n    }\n    /** Teardown logic for the service. */\n    ngOnDestroy() {\n        if (this._document.defaultView) {\n            this.beforePrintEventListeners.forEach(l => this._document.defaultView.removeEventListener('beforeprint', l));\n            this.afterPrintEventListeners.forEach(l => this._document.defaultView.removeEventListener('afterprint', l));\n        }\n    }\n}\nPrintHook.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: PrintHook, deps: [{ token: BreakPointRegistry }, { token: LAYOUT_CONFIG }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nPrintHook.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: PrintHook, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: PrintHook, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: BreakPointRegistry }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n    constructor() {\n        /** Sorted queue with prioritized print breakpoints */\n        this.printBreakpoints = [];\n    }\n    addPrintBreakpoints(bpList) {\n        bpList.push(BREAKPOINT_PRINT);\n        bpList.sort(sortDescendingPriority);\n        bpList.forEach(bp => this.addBreakpoint(bp));\n        return this.printBreakpoints;\n    }\n    /** Add Print breakpoint to queue */\n    addBreakpoint(bp) {\n        if (!!bp) {\n            const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n            if (bpInList === undefined) {\n                // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n                // register as highest priority in the queue\n                this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n                    : [...this.printBreakpoints, bp];\n            }\n        }\n    }\n    /** Restore original activated breakpoints and clear internal caches */\n    clear() {\n        this.printBreakpoints = [];\n    }\n}\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp) {\n    return bp?.mediaQuery.startsWith(PRINT) ?? false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\nclass MediaMarshaller {\n    constructor(matchMedia, breakpoints, hook) {\n        this.matchMedia = matchMedia;\n        this.breakpoints = breakpoints;\n        this.hook = hook;\n        this._useFallbacks = true;\n        this._activatedBreakpoints = [];\n        this.elementMap = new Map();\n        this.elementKeyMap = new WeakMap();\n        this.watcherMap = new WeakMap(); // special triggers to update elements\n        this.updateMap = new WeakMap(); // callback functions to update styles\n        this.clearMap = new WeakMap(); // callback functions to clear styles\n        this.subject = new Subject();\n        this.observeActivations();\n    }\n    get activatedAlias() {\n        return this.activatedBreakpoints[0]?.alias ?? '';\n    }\n    set activatedBreakpoints(bps) {\n        this._activatedBreakpoints = [...bps];\n    }\n    get activatedBreakpoints() {\n        return [...this._activatedBreakpoints];\n    }\n    set useFallbacks(value) {\n        this._useFallbacks = value;\n    }\n    /**\n     * Update styles on breakpoint activates or deactivates\n     * @param mc\n     */\n    onMediaChange(mc) {\n        const bp = this.findByQuery(mc.mediaQuery);\n        if (bp) {\n            mc = mergeAlias(mc, bp);\n            const bpIndex = this.activatedBreakpoints.indexOf(bp);\n            if (mc.matches && bpIndex === -1) {\n                this._activatedBreakpoints.push(bp);\n                this._activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n            else if (!mc.matches && bpIndex !== -1) {\n                // Remove the breakpoint when it's deactivated\n                this._activatedBreakpoints.splice(bpIndex, 1);\n                this._activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n        }\n    }\n    /**\n     * initialize the marshaller with necessary elements for delegation on an element\n     * @param element\n     * @param key\n     * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n     * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n     * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n     */\n    init(element, key, updateFn, clearFn, extraTriggers = []) {\n        initBuilderMap(this.updateMap, element, key, updateFn);\n        initBuilderMap(this.clearMap, element, key, clearFn);\n        this.buildElementKeyMap(element, key);\n        this.watchExtraTriggers(element, key, extraTriggers);\n    }\n    /**\n     * get the value for an element and key and optionally a given breakpoint\n     * @param element\n     * @param key\n     * @param bp\n     */\n    getValue(element, key, bp) {\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * whether the element has values for a given key\n     * @param element\n     * @param key\n     */\n    hasValue(element, key) {\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            const values = this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key) !== undefined || false;\n            }\n        }\n        return false;\n    }\n    /**\n     * Set the value for an input on a directive\n     * @param element the element in question\n     * @param key the type of the directive (e.g. flex, layout-gap, etc)\n     * @param bp the breakpoint suffix (empty string = default)\n     * @param val the value for the breakpoint\n     */\n    setValue(element, key, val, bp) {\n        let bpMap = this.elementMap.get(element);\n        if (!bpMap) {\n            bpMap = new Map().set(bp, new Map().set(key, val));\n            this.elementMap.set(element, bpMap);\n        }\n        else {\n            const values = (bpMap.get(bp) ?? new Map()).set(key, val);\n            bpMap.set(bp, values);\n            this.elementMap.set(element, bpMap);\n        }\n        const value = this.getValue(element, key);\n        if (value !== undefined) {\n            this.updateElement(element, key, value);\n        }\n    }\n    /** Track element value changes for a specific key */\n    trackValue(element, key) {\n        return this.subject\n            .asObservable()\n            .pipe(filter(v => v.element === element && v.key === key));\n    }\n    /** update all styles for all elements on the current breakpoint */\n    updateStyles() {\n        this.elementMap.forEach((bpMap, el) => {\n            const keyMap = new Set(this.elementKeyMap.get(el));\n            let valueMap = this.getActivatedValues(bpMap);\n            if (valueMap) {\n                valueMap.forEach((v, k) => {\n                    this.updateElement(el, k, v);\n                    keyMap.delete(k);\n                });\n            }\n            keyMap.forEach(k => {\n                valueMap = this.getActivatedValues(bpMap, k);\n                if (valueMap) {\n                    const value = valueMap.get(k);\n                    this.updateElement(el, k, value);\n                }\n                else {\n                    this.clearElement(el, k);\n                }\n            });\n        });\n    }\n    /**\n     * clear the styles for a given element\n     * @param element\n     * @param key\n     */\n    clearElement(element, key) {\n        const builders = this.clearMap.get(element);\n        if (builders) {\n            const clearFn = builders.get(key);\n            if (!!clearFn) {\n                clearFn();\n                this.subject.next({ element, key, value: '' });\n            }\n        }\n    }\n    /**\n     * update a given element with the activated values for a given key\n     * @param element\n     * @param key\n     * @param value\n     */\n    updateElement(element, key, value) {\n        const builders = this.updateMap.get(element);\n        if (builders) {\n            const updateFn = builders.get(key);\n            if (!!updateFn) {\n                updateFn(value);\n                this.subject.next({ element, key, value });\n            }\n        }\n    }\n    /**\n     * release all references to a given element\n     * @param element\n     */\n    releaseElement(element) {\n        const watcherMap = this.watcherMap.get(element);\n        if (watcherMap) {\n            watcherMap.forEach(s => s.unsubscribe());\n            this.watcherMap.delete(element);\n        }\n        const elementMap = this.elementMap.get(element);\n        if (elementMap) {\n            elementMap.forEach((_, s) => elementMap.delete(s));\n            this.elementMap.delete(element);\n        }\n    }\n    /**\n     * trigger an update for a given element and key (e.g. layout)\n     * @param element\n     * @param key\n     */\n    triggerUpdate(element, key) {\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            const valueMap = this.getActivatedValues(bpMap, key);\n            if (valueMap) {\n                if (key) {\n                    this.updateElement(element, key, valueMap.get(key));\n                }\n                else {\n                    valueMap.forEach((v, k) => this.updateElement(element, k, v));\n                }\n            }\n        }\n    }\n    /** Cross-reference for HTMLElement with directive key */\n    buildElementKeyMap(element, key) {\n        let keyMap = this.elementKeyMap.get(element);\n        if (!keyMap) {\n            keyMap = new Set();\n            this.elementKeyMap.set(element, keyMap);\n        }\n        keyMap.add(key);\n    }\n    /**\n     * Other triggers that should force style updates:\n     * - directionality\n     * - layout changes\n     * - mutationobserver updates\n     */\n    watchExtraTriggers(element, key, triggers) {\n        if (triggers && triggers.length) {\n            let watchers = this.watcherMap.get(element);\n            if (!watchers) {\n                watchers = new Map();\n                this.watcherMap.set(element, watchers);\n            }\n            const subscription = watchers.get(key);\n            if (!subscription) {\n                const newSubscription = merge(...triggers).subscribe(() => {\n                    const currentValue = this.getValue(element, key);\n                    this.updateElement(element, key, currentValue);\n                });\n                watchers.set(key, newSubscription);\n            }\n        }\n    }\n    /** Breakpoint locator by mediaQuery */\n    findByQuery(query) {\n        return this.breakpoints.findByQuery(query);\n    }\n    /**\n     * get the fallback breakpoint for a given element, starting with the current breakpoint\n     * @param bpMap\n     * @param key\n     */\n    getActivatedValues(bpMap, key) {\n        for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n            const activatedBp = this.activatedBreakpoints[i];\n            const valueMap = bpMap.get(activatedBp.alias);\n            if (valueMap) {\n                if (key === undefined || (valueMap.has(key) && valueMap.get(key) != null)) {\n                    return valueMap;\n                }\n            }\n        }\n        // On the server, we explicitly have an \"all\" section filled in to begin with.\n        // So we don't need to aggressively find a fallback if no explicit value exists.\n        if (!this._useFallbacks) {\n            return undefined;\n        }\n        const lastHope = bpMap.get('');\n        return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n    }\n    /**\n     * Watch for mediaQuery breakpoint activations\n     */\n    observeActivations() {\n        const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n        this.hook.registerBeforeAfterPrintHooks(this);\n        this.matchMedia\n            .observe(this.hook.withPrintQuery(queries))\n            .pipe(tap(this.hook.interceptEvents(this)), filter(this.hook.blockPropagation()))\n            .subscribe(this.onMediaChange.bind(this));\n    }\n}\nMediaMarshaller.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MediaMarshaller, deps: [{ token: MatchMedia }, { token: BreakPointRegistry }, { token: PrintHook }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaMarshaller.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MediaMarshaller, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MediaMarshaller, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MatchMedia }, { type: BreakPointRegistry }, { type: PrintHook }]; } });\nfunction initBuilderMap(map, element, key, input) {\n    if (input !== undefined) {\n        const oldMap = map.get(element) ?? new Map();\n        oldMap.set(key, input);\n        map.set(element, oldMap);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        this.elementRef = elementRef;\n        this.styleBuilder = styleBuilder;\n        this.styler = styler;\n        this.marshal = marshal;\n        this.DIRECTIVE_KEY = '';\n        this.inputs = [];\n        /** The most recently used styles for the builder */\n        this.mru = {};\n        this.destroySubject = new Subject();\n        /** Cache map for style computation */\n        this.styleCache = new Map();\n    }\n    /** Access to host element's parent DOM node */\n    get parentElement() {\n        return this.elementRef.nativeElement.parentElement;\n    }\n    /** Access to the HTMLElement for the directive */\n    get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n    /** Access to the activated value for the directive */\n    get activatedValue() {\n        return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    set activatedValue(value) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value, this.marshal.activatedAlias);\n    }\n    /** For @Input changes */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach(key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                const bp = key.split('.').slice(1).join('.');\n                const val = changes[key].currentValue;\n                this.setValue(val, bp);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroySubject.next();\n        this.destroySubject.complete();\n        this.marshal.releaseElement(this.nativeElement);\n    }\n    /** Register with central marshaller service */\n    init(extraTriggers = []) {\n        this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY, this.updateWithValue.bind(this), this.clearStyles.bind(this), extraTriggers);\n    }\n    /** Add styles to the element using predefined style builder */\n    addStyles(input, parent) {\n        const builder = this.styleBuilder;\n        const useCache = builder.shouldCache;\n        let genStyles = this.styleCache.get(input);\n        if (!genStyles || !useCache) {\n            genStyles = builder.buildStyles(input, parent);\n            if (useCache) {\n                this.styleCache.set(input, genStyles);\n            }\n        }\n        this.mru = { ...genStyles };\n        this.applyStyleToElement(genStyles);\n        builder.sideEffect(input, genStyles, parent);\n    }\n    /** Remove generated styles from an element using predefined style builder */\n    clearStyles() {\n        Object.keys(this.mru).forEach(k => {\n            this.mru[k] = '';\n        });\n        this.applyStyleToElement(this.mru);\n        this.mru = {};\n        this.currentValue = undefined;\n    }\n    /** Force trigger style updates on DOM element */\n    triggerUpdate() {\n        this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     */\n    getFlexFlowDirection(target, addIfMissing = false) {\n        if (target) {\n            const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n            if (!hasInlineValue && addIfMissing) {\n                const style = buildLayoutCSS(value);\n                const elements = [target];\n                this.styler.applyStyleToElements(style, elements);\n            }\n            return value.trim();\n        }\n        return 'row';\n    }\n    hasWrap(target) {\n        return this.styler.hasWrap(target);\n    }\n    /** Applies styles given via string pair or object map to the directive element */\n    applyStyleToElement(style, value, element = this.nativeElement) {\n        this.styler.applyStyleToElement(element, style, value);\n    }\n    setValue(val, bp) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n    }\n    updateWithValue(input) {\n        if (this.currentValue !== input) {\n            this.addStyles(input);\n            this.currentValue = input;\n        }\n    }\n}\nBaseDirective2.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: BaseDirective2, deps: [{ token: i0.ElementRef }, { token: StyleBuilder }, { token: StyleUtils }, { token: MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nBaseDirective2.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: BaseDirective2, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: BaseDirective2, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: StyleBuilder }, { type: StyleUtils }, { type: MediaMarshaller }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\nclass MockMatchMedia extends MatchMedia {\n    constructor(_zone, _platformId, _document, _breakpoints) {\n        super(_zone, _platformId, _document);\n        this._breakpoints = _breakpoints;\n        this.autoRegisterQueries = true; // Used for testing BreakPoint registrations\n        this.useOverlaps = false; // Allow fallback to overlapping mediaQueries\n    }\n    /** Easy method to clear all listeners for all mediaQueries */\n    clearAll() {\n        this.registry.forEach((mql) => {\n            mql.destroy();\n        });\n        this.registry.clear();\n        this.useOverlaps = false;\n    }\n    /** Feature to support manual, simulated activation of a mediaQuery. */\n    activate(mediaQuery, useOverlaps = this.useOverlaps) {\n        mediaQuery = this._validateQuery(mediaQuery);\n        if (useOverlaps || !this.isActive(mediaQuery)) {\n            this._deactivateAll();\n            this._registerMediaQuery(mediaQuery);\n            this._activateWithOverlaps(mediaQuery, useOverlaps);\n        }\n        return this.hasActivated;\n    }\n    /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n    _validateQuery(queryOrAlias) {\n        const bp = this._breakpoints.findByAlias(queryOrAlias);\n        return bp?.mediaQuery ?? queryOrAlias;\n    }\n    /**\n     * Manually onMediaChange any overlapping mediaQueries to simulate\n     * similar functionality in the window.matchMedia()\n     */\n    _activateWithOverlaps(mediaQuery, useOverlaps) {\n        if (useOverlaps) {\n            const bp = this._breakpoints.findByQuery(mediaQuery);\n            const alias = bp?.alias ?? 'unknown';\n            // Simulate activation of overlapping lt-<XXX> ranges\n            switch (alias) {\n                case 'lg':\n                    this._activateByAlias(['lt-xl']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['lt-xl', 'lt-lg']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md']);\n                    break;\n                case 'xs':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md', 'lt-sm']);\n                    break;\n            }\n            // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n            switch (alias) {\n                case 'xl':\n                    this._activateByAlias(['gt-lg', 'gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'lg':\n                    this._activateByAlias(['gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['gt-sm', 'gt-xs']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['gt-xs']);\n                    break;\n            }\n        }\n        // Activate last since the responsiveActivation is watching *this* mediaQuery\n        return this._activateByQuery(mediaQuery);\n    }\n    /**\n     *\n     */\n    _activateByAlias(aliases) {\n        const activate = (alias) => {\n            const bp = this._breakpoints.findByAlias(alias);\n            this._activateByQuery(bp?.mediaQuery ?? alias);\n        };\n        aliases.forEach(activate);\n    }\n    /**\n     *\n     */\n    _activateByQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this._registerMediaQuery(mediaQuery);\n        }\n        const mql = this.registry.get(mediaQuery);\n        if (mql && !this.isActive(mediaQuery)) {\n            this.registry.set(mediaQuery, mql.activate());\n        }\n        return this.hasActivated;\n    }\n    /** Deactivate all current MQLs and reset the buffer */\n    _deactivateAll() {\n        this.registry.forEach((it) => {\n            it.deactivate();\n        });\n        return this;\n    }\n    /** Insure the mediaQuery is registered with MatchMedia */\n    _registerMediaQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this.registerQuery(mediaQuery);\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     */\n    buildMQL(query) {\n        return new MockMediaQueryList(query);\n    }\n    get hasActivated() {\n        return this.activations.length > 0;\n    }\n}\nMockMatchMedia.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MockMatchMedia, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: DOCUMENT }, { token: BreakPointRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nMockMatchMedia.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MockMatchMedia });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MockMatchMedia, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: BreakPointRegistry }]; } });\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nclass MockMediaQueryList extends EventTarget {\n    constructor(_mediaQuery) {\n        super();\n        this._mediaQuery = _mediaQuery;\n        this._isActive = false;\n        this._listeners = [];\n        this.onchange = null;\n    }\n    get matches() {\n        return this._isActive;\n    }\n    get media() {\n        return this._mediaQuery;\n    }\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     */\n    destroy() {\n        this.deactivate();\n        this._listeners = [];\n    }\n    /** Notify all listeners that 'matches === TRUE' */\n    activate() {\n        if (!this._isActive) {\n            this._isActive = true;\n            this._listeners.forEach((callback) => {\n                const cb = callback;\n                cb.call(this, { matches: this.matches, media: this.media });\n            });\n        }\n        return this;\n    }\n    /** Notify all listeners that 'matches === false' */\n    deactivate() {\n        if (this._isActive) {\n            this._isActive = false;\n            this._listeners.forEach((callback) => {\n                const cb = callback;\n                cb.call(this, { matches: this.matches, media: this.media });\n            });\n        }\n        return this;\n    }\n    /** Add a listener to our internal list to activate later */\n    addListener(listener) {\n        if (this._listeners.indexOf(listener) === -1) {\n            this._listeners.push(listener);\n        }\n        if (this._isActive) {\n            const cb = listener;\n            cb.call(this, { matches: this.matches, media: this.media });\n        }\n    }\n    /** Don't need to remove listeners in the testing environment */\n    removeListener(_) {\n    }\n    dispatchEvent(_) {\n        return false;\n    }\n}\n/**\n * Pre-configured provider for MockMatchMedia\n */\nconst MockMatchMediaProvider = {\n    provide: MatchMedia,\n    useClass: MockMatchMedia\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Wraps the provided value in an array, unless the provided value is an array. */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\nclass MediaObserver {\n    constructor(breakpoints, matchMedia, hook) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.hook = hook;\n        /** Filter MediaChange notifications for overlapping breakpoints */\n        this.filterOverlaps = false;\n        this.destroyed$ = new Subject();\n        this._media$ = this.watchActivations();\n    }\n    /**\n     * Completes the active subject, signalling to all complete for all\n     * MediaObserver subscribers\n     */\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n    // ************************************************\n    // Public Methods\n    // ************************************************\n    /**\n     * Observe changes to current activation 'list'\n     */\n    asObservable() {\n        return this._media$;\n    }\n    /**\n     * Allow programmatic query to determine if one or more media query/alias match\n     * the current viewport size.\n     * @param value One or more media queries (or aliases) to check.\n     * @returns Whether any of the media queries match.\n     */\n    isActive(value) {\n        const aliases = splitQueries(coerceArray(value));\n        return aliases.some(alias => {\n            const query = toMediaQuery(alias, this.breakpoints);\n            return query !== null && this.matchMedia.isActive(query);\n        });\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Register all the mediaQueries registered in the BreakPointRegistry\n     * This is needed so subscribers can be auto-notified of all standard, registered\n     * mediaQuery activations\n     */\n    watchActivations() {\n        const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n        return this.buildObservable(queries);\n    }\n    /**\n     * Only pass/announce activations (not de-activations)\n     *\n     * Since multiple-mediaQueries can be activation in a cycle,\n     * gather all current activations into a single list of changes to observers\n     *\n     * Inject associated (if any) alias information into the MediaChange event\n     * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     * - Exclude print activations that do not have an associated mediaQuery\n     *\n     * NOTE: the raw MediaChange events [from MatchMedia] do not\n     *       contain important alias information; as such this info\n     *       must be injected into the MediaChange\n     */\n    buildObservable(mqList) {\n        const hasChanges = (changes) => {\n            const isValidQuery = (change) => (change.mediaQuery.length > 0);\n            return (changes.filter(isValidQuery).length > 0);\n        };\n        const excludeOverlaps = (changes) => {\n            return !this.filterOverlaps ? changes : changes.filter(change => {\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return bp?.overlapping ?? true;\n            });\n        };\n        const ignoreDuplicates = (previous, current) => {\n            if (previous.length !== current.length) {\n                return false;\n            }\n            const previousMqs = previous.map(mc => mc.mediaQuery);\n            const currentMqs = new Set(current.map(mc => mc.mediaQuery));\n            const difference = new Set(previousMqs.filter(mq => !currentMqs.has(mq)));\n            return difference.size === 0;\n        };\n        /**\n         */\n        return this.matchMedia\n            .observe(this.hook.withPrintQuery(mqList))\n            .pipe(filter((change) => change.matches), debounceTime(0, asapScheduler), switchMap(_ => of(this.findAllActivations())), map(excludeOverlaps), filter(hasChanges), distinctUntilChanged(ignoreDuplicates), takeUntil(this.destroyed$));\n    }\n    /**\n     * Find all current activations and prepare single list of activations\n     * sorted by descending priority.\n     */\n    findAllActivations() {\n        const mergeMQAlias = (change) => {\n            const bp = this.breakpoints.findByQuery(change.mediaQuery);\n            return mergeAlias(change, bp);\n        };\n        const replaceWithPrintAlias = (change) => this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n        return this.matchMedia\n            .activations\n            .map(query => new MediaChange(true, query))\n            .map(replaceWithPrintAlias)\n            .map(mergeMQAlias)\n            .sort(sortDescendingPriority);\n    }\n}\nMediaObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MediaObserver, deps: [{ token: BreakPointRegistry }, { token: MatchMedia }, { token: PrintHook }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MediaObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MediaObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: PrintHook }]; } });\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query, locator) {\n    const bp = locator.findByAlias(query) ?? locator.findByQuery(query);\n    return bp?.mediaQuery ?? null;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.flatMap(query => query.split(','))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class\n */\nclass MediaTrigger {\n    constructor(breakpoints, matchMedia, layoutConfig, _platformId, _document) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.layoutConfig = layoutConfig;\n        this._platformId = _platformId;\n        this._document = _document;\n        this.hasCachedRegistryMatches = false;\n        this.originalActivations = [];\n        this.originalRegistry = new Map();\n    }\n    /**\n     * Manually activate range of breakpoints\n     * @param list array of mediaQuery or alias strings\n     */\n    activate(list) {\n        list = list.map(it => it.trim()); // trim queries\n        this.saveActivations();\n        this.deactivateAll();\n        this.setActivations(list);\n        this.prepareAutoRestore();\n    }\n    /**\n     * Restore original, 'real' breakpoints and emit events\n     * to trigger stream notification\n     */\n    restore() {\n        if (this.hasCachedRegistryMatches) {\n            const extractQuery = (change) => change.mediaQuery;\n            const list = this.originalActivations.map(extractQuery);\n            try {\n                this.deactivateAll();\n                this.restoreRegistryMatches();\n                this.setActivations(list);\n            }\n            finally {\n                this.originalActivations = [];\n                if (this.resizeSubscription) {\n                    this.resizeSubscription.unsubscribe();\n                }\n            }\n        }\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Whenever window resizes, immediately auto-restore original\n     * activations (if we are simulating activations)\n     */\n    prepareAutoRestore() {\n        const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n        const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n        if (enableAutoRestore) {\n            const resize$ = fromEvent(window, 'resize').pipe(take(1));\n            this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n        }\n    }\n    /**\n     * Notify all matchMedia subscribers of de-activations\n     *\n     * Note: we must force 'matches' updates for\n     *       future matchMedia::activation lookups\n     */\n    deactivateAll() {\n        const list = this.currentActivations;\n        this.forceRegistryMatches(list, false);\n        this.simulateMediaChanges(list, false);\n    }\n    /**\n     * Cache current activations as sorted, prioritized list of MediaChanges\n     */\n    saveActivations() {\n        if (!this.hasCachedRegistryMatches) {\n            const toMediaChange = (query) => new MediaChange(true, query);\n            const mergeMQAlias = (change) => {\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return mergeAlias(change, bp);\n            };\n            this.originalActivations = this.currentActivations\n                .map(toMediaChange)\n                .map(mergeMQAlias)\n                .sort(sortDescendingPriority);\n            this.cacheRegistryMatches();\n        }\n    }\n    /**\n     * Force set manual activations for specified mediaQuery list\n     */\n    setActivations(list) {\n        if (!!this.originalRegistry) {\n            this.forceRegistryMatches(list, true);\n        }\n        this.simulateMediaChanges(list);\n    }\n    /**\n     * For specified mediaQuery list manually simulate activations or deactivations\n     */\n    simulateMediaChanges(queries, matches = true) {\n        const toMediaQuery = (query) => {\n            const locator = this.breakpoints;\n            const bp = locator.findByAlias(query) || locator.findByQuery(query);\n            return bp ? bp.mediaQuery : query;\n        };\n        const emitChangeEvent = (query) => this.emitChangeEvent(matches, query);\n        queries.map(toMediaQuery).forEach(emitChangeEvent);\n    }\n    /**\n     * Replace current registry with simulated registry...\n     * Note: this is required since MediaQueryList::matches is 'readOnly'\n     */\n    forceRegistryMatches(queries, matches) {\n        const registry = new Map();\n        queries.forEach(query => {\n            registry.set(query, { matches });\n        });\n        this.matchMedia.registry = registry;\n    }\n    /**\n     * Save current MatchMedia::registry items.\n     */\n    cacheRegistryMatches() {\n        const target = this.originalRegistry;\n        target.clear();\n        this.matchMedia.registry.forEach((value, key) => {\n            target.set(key, value);\n        });\n        this.hasCachedRegistryMatches = true;\n    }\n    /**\n     * Restore original, 'true' registry\n     */\n    restoreRegistryMatches() {\n        const target = this.matchMedia.registry;\n        target.clear();\n        this.originalRegistry.forEach((value, key) => {\n            target.set(key, value);\n        });\n        this.originalRegistry.clear();\n        this.hasCachedRegistryMatches = false;\n    }\n    /**\n     * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n     */\n    emitChangeEvent(matches, query) {\n        this.matchMedia.source.next(new MediaChange(matches, query));\n    }\n    get currentActivations() {\n        return this.matchMedia.activations;\n    }\n}\nMediaTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MediaTrigger, deps: [{ token: BreakPointRegistry }, { token: MatchMedia }, { token: LAYOUT_CONFIG }, { token: PLATFORM_ID }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaTrigger.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MediaTrigger, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MediaTrigger, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* The flex API permits 3 or 1 parts of the value:\n*    - `flex-grow flex-shrink flex-basis`, or\n*    - `flex-basis`\n*/\nfunction validateBasis(basis, grow = '1', shrink = '1') {\n    let parts = [grow, shrink, basis];\n    let j = basis.indexOf('calc');\n    if (j > 0) {\n        parts[2] = _validateCalcValue(basis.substring(j).trim());\n        let matches = basis.substr(0, j).trim().split(' ');\n        if (matches.length == 2) {\n            parts[0] = matches[0];\n            parts[1] = matches[1];\n        }\n    }\n    else if (j == 0) {\n        parts[2] = _validateCalcValue(basis.trim());\n    }\n    else {\n        let matches = basis.split(' ');\n        parts = (matches.length === 3) ? matches : [\n            grow, shrink, basis\n        ];\n    }\n    return parts;\n}\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc) {\n    return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n\nconst MULTIPLIER_SUFFIX = 'x';\nfunction multiply(value, multiplier) {\n    if (multiplier === undefined) {\n        return value;\n    }\n    const transformValue = (possibleValue) => {\n        const numberValue = +(possibleValue.slice(0, -MULTIPLIER_SUFFIX.length));\n        if (value.endsWith(MULTIPLIER_SUFFIX) && !isNaN(numberValue)) {\n            return `${numberValue * multiplier.value}${multiplier.unit}`;\n        }\n        return value;\n    };\n    return value.includes(' ') ?\n        value.split(' ').map(transformValue).join(' ') : transformValue(value);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BREAKPOINT, BREAKPOINTS, BREAKPOINT_PRINT, BROWSER_PROVIDER, BaseDirective2, BreakPointRegistry, CLASS_NAME, CoreModule, DEFAULT_BREAKPOINTS, DEFAULT_CONFIG, LAYOUT_CONFIG, MediaChange, MediaMarshaller, MediaObserver, MediaTrigger, ORIENTATION_BREAKPOINTS, PrintHook, SERVER_TOKEN, ScreenTypes, StyleBuilder, StyleUtils, StylesheetMap, coerceArray, mergeAlias, removeStyles, sortAscendingPriority, sortDescendingPriority, validateBasis, MatchMedia as ɵMatchMedia, MockMatchMedia as ɵMockMatchMedia, MockMatchMediaProvider as ɵMockMatchMediaProvider, multiply as ɵmultiply };\n","import * as i0 from '@angular/core';\nimport { Injectable, PLATFORM_ID, Directive, Inject, Input, Optional, Self, SecurityContext, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, SERVER_TOKEN, LAYOUT_CONFIG, CoreModule } from '@angular/flex-layout/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ImgSrcStyleBuilder extends StyleBuilder {\n    buildStyles(url) {\n        return { 'content': url ? `url(${url})` : '' };\n    }\n}\nImgSrcStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nImgSrcStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ImgSrcDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'img-src';\n        this.defaultSrc = '';\n        this.styleCache = imgSrcCache;\n        this.init();\n        this.setValue(this.nativeElement.getAttribute('src') || '', '');\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.nativeElement.setAttribute('src', '');\n        }\n    }\n    set src(val) {\n        this.defaultSrc = val;\n        this.setValue(this.defaultSrc, '');\n    }\n    /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     */\n    updateWithValue(value) {\n        const url = value || this.defaultSrc;\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.addStyles(url);\n        }\n        else {\n            this.nativeElement.setAttribute('src', url);\n        }\n    }\n}\nImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcDirective, deps: [{ token: i0.ElementRef }, { token: ImgSrcStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: ImgSrcDirective, inputs: { src: \"src\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ImgSrcStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; }, propDecorators: { src: [{\n                type: Input,\n                args: ['src']\n            }] } });\nconst imgSrcCache = new Map();\nconst inputs$3 = [\n    'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n    'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n    'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\nconst selector$3 = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\nclass DefaultImgSrcDirective extends ImgSrcDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultImgSrcDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: DefaultImgSrcDirective, selector: \"\\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\\n\", inputs: { \"src.xs\": \"src.xs\", \"src.sm\": \"src.sm\", \"src.md\": \"src.md\", \"src.lg\": \"src.lg\", \"src.xl\": \"src.xl\", \"src.lt-sm\": \"src.lt-sm\", \"src.lt-md\": \"src.lt-md\", \"src.lt-lg\": \"src.lt-lg\", \"src.lt-xl\": \"src.lt-xl\", \"src.gt-xs\": \"src.gt-xs\", \"src.gt-sm\": \"src.gt-sm\", \"src.gt-md\": \"src.gt-md\", \"src.gt-lg\": \"src.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultImgSrcDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClassDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {\n        super(elementRef, null, styler, marshal);\n        this.ngClassInstance = ngClassInstance;\n        this.DIRECTIVE_KEY = 'ngClass';\n        if (!this.ngClassInstance) {\n            // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n            // the same host element; since the responsive variations may be defined...\n            this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n        }\n        this.init();\n        this.setValue('', '');\n    }\n    /**\n     * Capture class assignments so we cache the default classes\n     * which are merged with activated styles and used as fallbacks.\n     */\n    set klass(val) {\n        this.ngClassInstance.klass = val;\n        this.setValue(val, '');\n    }\n    updateWithValue(value) {\n        this.ngClassInstance.ngClass = value;\n        this.ngClassInstance.ngDoCheck();\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     */\n    ngDoCheck() {\n        this.ngClassInstance.ngDoCheck();\n    }\n}\nClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ClassDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i0.IterableDiffers }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgClass, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: ClassDirective, inputs: { klass: [\"class\", \"klass\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ClassDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i0.IterableDiffers }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgClass, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }]; }, propDecorators: { klass: [{\n                type: Input,\n                args: ['class']\n            }] } });\nconst inputs$2 = [\n    'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n    'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n    'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\nconst selector$2 = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\nclass DefaultClassDirective extends ClassDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultClassDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: DefaultClassDirective, selector: \"\\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\\n\", inputs: { ngClass: \"ngClass\", \"ngClass.xs\": \"ngClass.xs\", \"ngClass.sm\": \"ngClass.sm\", \"ngClass.md\": \"ngClass.md\", \"ngClass.lg\": \"ngClass.lg\", \"ngClass.xl\": \"ngClass.xl\", \"ngClass.lt-sm\": \"ngClass.lt-sm\", \"ngClass.lt-md\": \"ngClass.lt-md\", \"ngClass.lt-lg\": \"ngClass.lt-lg\", \"ngClass.lt-xl\": \"ngClass.lt-xl\", \"ngClass.gt-xs\": \"ngClass.gt-xs\", \"ngClass.gt-sm\": \"ngClass.gt-sm\", \"ngClass.gt-md\": \"ngClass.gt-md\", \"ngClass.gt-lg\": \"ngClass.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultClassDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ShowHideStyleBuilder extends StyleBuilder {\n    buildStyles(show, parent) {\n        const shouldShow = show === 'true';\n        return { 'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none' };\n    }\n}\nShowHideStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nShowHideStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ShowHideDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.layoutConfig = layoutConfig;\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'show-hide';\n        /** Original DOM Element CSS display style */\n        this.display = '';\n        this.hasLayout = false;\n        this.hasFlexChild = false;\n    }\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    ngAfterViewInit() {\n        this.trackExtraTriggers();\n        const children = Array.from(this.nativeElement.children);\n        for (let i = 0; i < children.length; i++) {\n            if (this.marshal.hasValue(children[i], 'flex')) {\n                this.hasFlexChild = true;\n                break;\n            }\n        }\n        if (DISPLAY_MAP.has(this.nativeElement)) {\n            this.display = DISPLAY_MAP.get(this.nativeElement);\n        }\n        else {\n            this.display = this.getDisplayStyle();\n            DISPLAY_MAP.set(this.nativeElement, this.display);\n        }\n        this.init();\n        // set the default to show unless explicitly overridden\n        const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n        if (defaultValue === undefined || defaultValue === '') {\n            this.setValue(true, '');\n        }\n        else {\n            this.triggerUpdate();\n        }\n    }\n    /**\n     * On changes to any @Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach(key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                const inputKey = key.split('.');\n                const bp = inputKey.slice(1).join('.');\n                const inputValue = changes[key].currentValue;\n                let shouldShow = inputValue !== '' ?\n                    inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n                    : true;\n                if (inputKey[0] === 'fxHide') {\n                    shouldShow = !shouldShow;\n                }\n                this.setValue(shouldShow, bp);\n            }\n        });\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *  Watch for these extra triggers to update fxShow, fxHide stylings\n     */\n    trackExtraTriggers() {\n        this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n        ['layout', 'layout-align'].forEach(key => {\n            this.marshal\n                .trackValue(this.nativeElement, key)\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerUpdate.bind(this));\n        });\n    }\n    /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     */\n    getDisplayStyle() {\n        return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n            'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n    }\n    /** Validate the visibility value and then update the host's inline display style */\n    updateWithValue(value = true) {\n        if (value === '') {\n            return;\n        }\n        const isServer = isPlatformServer(this.platformId);\n        this.addStyles(value ? 'true' : 'false', { display: this.display, isServer });\n        if (isServer && this.serverModuleLoaded) {\n            this.nativeElement.style.setProperty('display', '');\n        }\n        this.marshal.triggerUpdate(this.parentElement, 'layout-gap');\n    }\n}\nShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideDirective, deps: [{ token: i0.ElementRef }, { token: ShowHideStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: LAYOUT_CONFIG }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: ShowHideDirective, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ShowHideStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; } });\nconst DISPLAY_MAP = new WeakMap();\nconst inputs$1 = [\n    'fxShow', 'fxShow.print',\n    'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n    'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n    'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n    'fxHide', 'fxHide.print',\n    'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n    'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n    'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\nconst selector$1 = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n/**\n * 'show' Layout API directive\n */\nclass DefaultShowHideDirective extends ShowHideDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultShowHideDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: DefaultShowHideDirective, selector: \"\\n  [fxShow], [fxShow.print],\\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\\n  [fxHide], [fxHide.print],\\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\\n\", inputs: { fxShow: \"fxShow\", \"fxShow.print\": \"fxShow.print\", \"fxShow.xs\": \"fxShow.xs\", \"fxShow.sm\": \"fxShow.sm\", \"fxShow.md\": \"fxShow.md\", \"fxShow.lg\": \"fxShow.lg\", \"fxShow.xl\": \"fxShow.xl\", \"fxShow.lt-sm\": \"fxShow.lt-sm\", \"fxShow.lt-md\": \"fxShow.lt-md\", \"fxShow.lt-lg\": \"fxShow.lt-lg\", \"fxShow.lt-xl\": \"fxShow.lt-xl\", \"fxShow.gt-xs\": \"fxShow.gt-xs\", \"fxShow.gt-sm\": \"fxShow.gt-sm\", \"fxShow.gt-md\": \"fxShow.gt-md\", \"fxShow.gt-lg\": \"fxShow.gt-lg\", fxHide: \"fxHide\", \"fxHide.print\": \"fxHide.print\", \"fxHide.xs\": \"fxHide.xs\", \"fxHide.sm\": \"fxHide.sm\", \"fxHide.md\": \"fxHide.md\", \"fxHide.lg\": \"fxHide.lg\", \"fxHide.xl\": \"fxHide.xl\", \"fxHide.lt-sm\": \"fxHide.lt-sm\", \"fxHide.lt-md\": \"fxHide.lt-md\", \"fxHide.lt-lg\": \"fxHide.lt-lg\", \"fxHide.lt-xl\": \"fxHide.lt-xl\", \"fxHide.gt-xs\": \"fxHide.gt-xs\", \"fxHide.gt-sm\": \"fxHide.gt-sm\", \"fxHide.gt-md\": \"fxHide.gt-md\", \"fxHide.gt-lg\": \"fxHide.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultShowHideDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** NgStyle allowed inputs */\nclass NgStyleKeyValue {\n    constructor(key, value, noQuotes = true) {\n        this.key = key;\n        this.value = value;\n        this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n        this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n        this.value = this.value.replace(/;/, '');\n    }\n}\nfunction getType(target) {\n    let what = typeof target;\n    if (what === 'object') {\n        return (target.constructor === Array) ? 'array' :\n            (target.constructor === Set) ? 'set' : 'object';\n    }\n    return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source, delimiter = ';') {\n    return String(source)\n        .trim()\n        .split(delimiter)\n        .map((val) => val.trim())\n        .filter(val => val !== '');\n}\n/** Convert array of key:value strings to a iterable map object */\nfunction buildMapFromList$1(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nfunction buildMapFromSet(source, sanitize) {\n    let list = [];\n    if (getType(source) === 'set') {\n        source.forEach(entry => list.push(entry));\n    }\n    else {\n        Object.keys(source).forEach((key) => {\n            list.push(`${key}:${source[key]}`);\n        });\n    }\n    return buildMapFromList$1(list, sanitize);\n}\n/** Convert 'key:value' -> [key, value] */\nfunction stringToKeyValue(it) {\n    const [key, ...vals] = it.split(':');\n    return new NgStyleKeyValue(key, vals.join(':'));\n}\n/** Convert [ [key,value] ] -> { key : value } */\nfunction keyValuesToMap(map, entry) {\n    if (!!entry.key) {\n        map[entry.key] = entry.value;\n    }\n    return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass StyleDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {\n        super(elementRef, null, styler, marshal);\n        this.sanitizer = sanitizer;\n        this.ngStyleInstance = ngStyleInstance;\n        this.DIRECTIVE_KEY = 'ngStyle';\n        if (!this.ngStyleInstance) {\n            // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n            // defined on the same host element; since the responsive variations may be defined...\n            this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n        }\n        this.init();\n        const styles = this.nativeElement.getAttribute('style') ?? '';\n        this.fallbackStyles = this.buildStyleMap(styles);\n        this.isServer = serverLoaded && isPlatformServer(platformId);\n    }\n    /** Add generated styles */\n    updateWithValue(value) {\n        const styles = this.buildStyleMap(value);\n        this.ngStyleInstance.ngStyle = { ...this.fallbackStyles, ...styles };\n        if (this.isServer) {\n            this.applyStyleToElement(styles);\n        }\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /** Remove generated styles */\n    clearStyles() {\n        this.ngStyleInstance.ngStyle = this.fallbackStyles;\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /**\n     * Convert raw strings to ngStyleMap; which is required by ngStyle\n     * NOTE: Raw string key-value pairs MUST be delimited by `;`\n     *       Comma-delimiters are not supported due to complexities of\n     *       possible style values such as `rgba(x,x,x,x)` and others\n     */\n    buildStyleMap(styles) {\n        // Always safe-guard (aka sanitize) style property values\n        const sanitizer = (val) => this.sanitizer.sanitize(SecurityContext.STYLE, val) ?? '';\n        if (styles) {\n            switch (getType(styles)) {\n                case 'string': return buildMapFromList(buildRawList(styles), sanitizer);\n                case 'array': return buildMapFromList(styles, sanitizer);\n                case 'set': return buildMapFromSet(styles, sanitizer);\n                default: return buildMapFromSet(styles, sanitizer);\n            }\n        }\n        return {};\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n    ngDoCheck() {\n        this.ngStyleInstance.ngDoCheck();\n    }\n}\nStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StyleDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i2$1.DomSanitizer }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgStyle, optional: true, self: true }, { token: SERVER_TOKEN }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Directive });\nStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: StyleDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StyleDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i2$1.DomSanitizer }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgStyle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\nconst inputs = [\n    'ngStyle',\n    'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n    'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n    'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\nclass DefaultStyleDirective extends StyleDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultStyleDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: DefaultStyleDirective, selector: \"\\n  [ngStyle],\\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\\n\", inputs: { ngStyle: \"ngStyle\", \"ngStyle.xs\": \"ngStyle.xs\", \"ngStyle.sm\": \"ngStyle.sm\", \"ngStyle.md\": \"ngStyle.md\", \"ngStyle.lg\": \"ngStyle.lg\", \"ngStyle.xl\": \"ngStyle.xl\", \"ngStyle.lt-sm\": \"ngStyle.lt-sm\", \"ngStyle.lt-md\": \"ngStyle.lt-md\", \"ngStyle.lt-lg\": \"ngStyle.lt-lg\", \"ngStyle.lt-xl\": \"ngStyle.lt-xl\", \"ngStyle.gt-xs\": \"ngStyle.gt-xs\", \"ngStyle.gt-sm\": \"ngStyle.gt-sm\", \"ngStyle.gt-md\": \"ngStyle.gt-md\", \"ngStyle.gt-lg\": \"ngStyle.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultStyleDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultShowHideDirective,\n    DefaultClassDirective,\n    DefaultStyleDirective,\n    DefaultImgSrcDirective,\n];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\nclass ExtendedModule {\n}\nExtendedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ExtendedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nExtendedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.2\", ngImport: i0, type: ExtendedModule, declarations: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective], imports: [CoreModule], exports: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective] });\nExtendedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ExtendedModule, imports: [CoreModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ExtendedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClassDirective, DefaultClassDirective, DefaultImgSrcDirective, DefaultShowHideDirective, DefaultStyleDirective, ExtendedModule, ImgSrcDirective, ImgSrcStyleBuilder, ShowHideDirective, ShowHideStyleBuilder, StyleDirective };\n"],"x_google_ignoreList":[31,32,33]}