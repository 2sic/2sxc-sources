{"version":3,"file":"projects_eav-ui_src_app_content-items_content-items_component_ts-projects_eav-ui_src_app_impo-19a5d8.4b3f360d523bf70d.js","mappings":"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","names":["webApiTypeRoot","webApiTypeScopes","ContentTypesService","constructor","http","context","dnnContext","this","apiUrl","name","$2sxc","retrieveContentType","staticName","get","params","appId","toString","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","map","scopesData","scopes","old","Object","keys","key","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","GlobalDialogConfigService","globalConfigService","log","EavLogger","dialogSettings$","a","svcId","getShared$","getDialogSettings","shareReplay","refCount","reqBy","dlgSettings","Context","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","_angular_core__WEBPACK_IMPORTED_MODULE_6__","providedIn","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","webApiEntityList","importQuery","from","toBase64","switchMap","fileBase64","AppId","ContentBase64","success","Success","Messages","clonePipeline","id","Id","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","export","url","window","open","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","EntityFilterComponent","idFilterString","idFilter","agInit","filterParams","isFilterActive","length","doesFilterPass","values","valueGetter","api","colDef","column","columnApi","data","node","getValue","field","some","includes","items","headerName","idFltr","itm","getModel","filterType","setModel","model","join","afterGuiAttached","valueInputRef","nativeElement","focus","updateIdFilter","split","el","parseInt","isNaN","filterChanged","filterChangedCallback","core","VBU","selectors","viewQuery","rf","ctx","$event","_r1","FormsModule","MatRadioModule","MatFormFieldModule","MatInputModule","styles","_r2","ctx_r2","do","item","_EditInfo","DisableDelete","ContentItemsActionsComponent","refresh","verb","standalone","features","decls","vars","consts","template","ContentItemsActionsComponent_ng_template_12_Template","menu_r4","MatRippleModule","MatIconModule","MatMenuModule","ctx_r0","entities","ContentItemsEntityComponent","Array","isArray","encodedValue","htmlEncode","allowMultiValue","text","replace","ContentItemsEntityComponent_Conditional_1_Template","TippyDirective","ctx_r1","openMetadata","_c0","metadataCount","metadata","metadataTooltip","ContentItemsStatusComponent","disableMetadata","DisableMetadata","Metadata","mdf","For","Target","TargetType","KeyNumber","KeyString","KeyGuid","Title","onOpenMetadata","ContentItemsStatusComponent_Conditional_4_Template","ContentItemsStatusComponent_Conditional_5_Template","published","NgClass","MatBadgeModule","metadataKeyValidator","form","control","keyType","controls","testValue","eavConstants","keyTypes","number","test","patternWholeNumber","hasCurly","bracket","substring","guidRegex","patternGuid","option_r2","targetType","label","vm_r3","formValues","CreateMetadataDialogComponent_Conditional_0_Conditional_14_For_2_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_14_Conditional_3_Template","ctx_r3","targetTypeOptions","unknownTargetType","targetTypeHint","option_r5","contentType_r6","Label","CreateMetadataDialogComponent_Conditional_0_Conditional_27_For_5_Template","contentTypes","scopeOption_r7","CreateMetadataDialogComponent_Conditional_0_Conditional_28_For_5_Template","scopeOptions","dropdownInsertValue","item_r8","Guid","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_0_Conditional_0_For_2_Template","contentItems","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_0_Conditional_0_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_0_Conditional_1_Template","guidedKey","contentType_r9","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_1_Conditional_0_For_2_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_1_Conditional_0_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_1_Conditional_1_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_2_ng_container_0_Template","defaultKeyInput_r10","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_0_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_1_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Case_2_Template","tmp_4_0","entity","CreateMetadataDialogComponent_Conditional_0_Conditional_37_Conditional_0_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_37_Conditional_1_Template","CreateMetadataDialogComponent_Conditional_0_ng_template_38_Conditional_0_Template","CreateMetadataDialogComponent_Conditional_0_ng_template_38_Conditional_1_Template","_r11","toggleGuidedKey","CreateMetadataDialogComponent_Conditional_0_Conditional_14_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_15_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_16_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_17_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_18_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_19_Template","CreateMetadataDialogComponent_Conditional_0_For_25_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_26_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_27_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_28_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_36_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_37_Template","CreateMetadataDialogComponent_Conditional_0_ng_template_38_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_40_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_41_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_42_Template","CreateMetadataDialogComponent_Conditional_0_Conditional_43_Template","toggleGuidedMode","closeDialog","confirm","guidedMode","touched","invalid","errors","required","pattern","keyTypeOptions","guidedKeyExists","valid","CreateMetadataDialogComponent","BaseComponent","dialogRef","super","hostClass","contentItemsService","transient","ContentItemsService","contentTypesService","ngOnInit","option","keyTypeOptions$","BehaviorSubject","scopeOptions$","guidedMode$","contentItems$","contentTypes$","guidedKey$","fetchScopes","UntypedFormGroup","addControl","UntypedFormControl","Validators","default","subscriptions","add","scopeForContentTypes","valueChanges","startWith","distinctUntilChanged","subscribe","newScope","contentTypeForContentItems","patchValue","prompt","next","fetchContentTypes","merge","getRawValue","contentTypeStaticName","formValues$","mapUntilObjChanged","m","combineLatest","foundTargetType","find","RxHelpers","arraysEqual","updatedForm","isAppMetadata","app","ControlHelpers","disableControl","viewModel$","hint","ngOnDestroy","complete","result","close","event","checked","target","hostVars","hostBindings","CreateMetadataDialogComponent_Conditional_0_Template","tmp_0_0","ReactiveFormsModule","i4","MatSelectModule","i5","i6","MatOptionModule","i7","NgTemplateOutlet","MatButtonModule","i8","i9","MatDialogActions","MatSlideToggleModule","i10","AsyncPipe","FieldHintComponent","ClickStopPropagationDirective","PubMetaFilterComponent","hasMetadata","publishedPassed","metadataPassed","hasMetadataPassed","_r3","debugFilter","ContentItemsComponent_Conditional_0_Conditional_9_Template","onGridReady","filesDropped","exportContent","importContent","importItem","createMetadata","ContentItemsComponent_Conditional_0_Conditional_34_Template","editItem","vm_r4","Name","tmp_3_0","Properties","ListInstructions","gridOptions","isDebug","ContentItemsComponent","BaseWithChildDialogComponent","router","route","snackBar","dialog","viewContainerRef","changeDetectorRef","contentType$","Subject","items$","undefined","defaultGridOptions","gridApi$","snapshot","paramMap","entitiesService","EntityEditService","contentExportService","ContentExportService","inject","GlobalConfigService","fetchContentType","fetchItems","fetchColumns","childDialogClosed$","getColumns","columns","columnsWithoutEphemeral","IsEphemeral","columnDefs","buildColumnDefs","filterModel","buildFilterModel","urlFilters","filters","charAt","atob","JSON","parse","console","error","IsPublished","IsMetadata","Status","entries","forEach","c","type","filterTo","JsonHelpers","tryParse","v","sessionStorage","getItem","keyFilters","setColumnDefs","gridApi","take","setFilterModel","GoToMetadata","getUrlEntity","_Title","navigate","relativeTo","formUrl","convertFormToUrl","ContentTypeName","EntityId","getFilterModel","hasFilters","ids","forEachNodeAfterFilterAndSort","rowNode","push","importFile","lastIndexOf","toLocaleLowerCase","state","autoFocus","width","afterClosed","itemFor","Number","string","String","markForCheck","warn","duration","ColumnDefinitions","cellClass","ReadOnly","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","_RepositoryId","headerClass","flex","minWidth","sortable","onCellClicked","headerTooltip","_Used","_Uses","ActionsPinnedRight3","clone","Type","DataTypeCatalog","Entity","AllowMultiValue","valueGetterEntityField","DateTime","useTimePicker","UseTimePicker","valueGetterDateTime","Boolean","valueGetterBoolean","BooleanFilterComponent","DuplicateEntity","exportEntity","err","dismiss","ExceptionMessage","rawValue","ContentItemsComponent_Conditional_0_Template","RouterOutlet","SafeHtmlPipe","DragAndDropDirective","ToggleDebugDirective","SxcGridModule","TrueFalseComponent","trueIcon","falseIcon","reverse","icon","_angular_core__WEBPACK_IMPORTED_MODULE_0__","encapsulation","webApiAppRoot","ImportAppService","importApp","changedName","retryOnDuplicate","MessageType","FileUploadMessageTypes","Warning","folderName","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","AgBoolCellIconsDefault","states","true","tooltip","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","showIcon_r2","clickable","AgBoolIconRenderer","allSettings","settings","d","getUrl","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","ActionsPinnedRight1","pinned","ActionsPinnedRight4","ActionsPinnedRight5","ActionsPinnedRight6","ActionsPinnedRight7","IconShow","IsHidden","Items","Fields","Character","Boolean2","Boolean3","TextWideType","TextWide","TextWideMin100","TextWideFlex3","TextNarrow","TextWideActionClass","events","NavigationEnd","firstChild","pairwise","hadChildBefore","hasChildNow","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","inputs","ngContentSelectors","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","align","copy","copyToClipboard","onClick","stopPropagation","FsC","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","toggleDebugEnabled","getSelection","removeAllRanges","webApiFieldsRoot","webApiFieldsAll","webApiFieldsGetShared","ContentTypesFieldsService","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","indexOf","inputType","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","getReservedNames","getFields","fields","fld","md","merged","All","InputType","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","ContentTypeId","SourceType","SourceField","share","inherit","inheritMetadataOf","reOrder","idArray","order","stringify","setTitle","rename","fieldId","IsTitle","Error","newField","Index","SortOrder","updateInputType","_angular_core__WEBPACK_IMPORTED_MODULE_3__","Custom","Empty","Hyperlink","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","readAsText","mapUntilChanged","fn","isEqual","boolEquals","x","y","stringEquals","valueEquals","manyEquals","typeOfX","objectsEqual","obj1","obj2","keys1","keys2","every","key1","hasOwnProperty","index","distinct","array","create","update","entityId","tryForce","webApiEntityRoot","force","debugState","signal","computed","allowDebugMode","debugEnabled","debugEnabled$","toObservable","initial","keyDebug","set","allow","oldConfig","newConfig","QueryService","ServiceBase","getAvailableEntities","queryUrl","entitiesFilter","hasParams","urlParams","Guids","getEntities","itemIds","source","options","injector","assertInInjectionContext","Injector","subject","ReplaySubject","watcher","effect","untracked","manualCleanup","DestroyRef","onDestroy","destroy","asObservable","toSignal","requiresCleanup","cleanupRef","requireSync","kind","initialValue","sub","rejectErrors","unsubscribe","bind","current","ɵRuntimeError"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/app-administration/services/global-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/shared/components/entity-filter/entity-filter.component.ts","./projects/eav-ui/src/app/shared/components/entity-filter/entity-filter.component.html","./projects/eav-ui/src/app/content-items/content-items-actions/content-items-actions.component.html","./projects/eav-ui/src/app/content-items/content-items-actions/content-items-actions.component.ts","./projects/eav-ui/src/app/content-items/content-items-entity/content-items-entity.component.html","./projects/eav-ui/src/app/content-items/content-items-entity/content-items-entity.component.ts","./projects/eav-ui/src/app/content-items/content-items-status/content-items-status.component.html","./projects/eav-ui/src/app/content-items/content-items-status/content-items-status.component.ts","./projects/eav-ui/src/app/content-items/create-metadata-dialog/metadata-key.validator.ts","./projects/eav-ui/src/app/content-items/create-metadata-dialog/create-metadata-dialog.component.html","./projects/eav-ui/src/app/content-items/create-metadata-dialog/create-metadata-dialog.component.ts","./projects/eav-ui/src/app/content-items/pub-meta-filter/pub-meta-filter.component.ts","./projects/eav-ui/src/app/content-items/pub-meta-filter/pub-meta-filter.component.html","./projects/eav-ui/src/app/content-items/content-items.component.html","./projects/eav-ui/src/app/content-items/content-items.component.ts","./projects/eav-ui/src/app/content-items/content-items.helpers.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/base-with-child-dialog.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/directives/toggle-debug.directive.ts","./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/fields/data-type-catalog.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts","./projects/eav-ui/src/app/shared/rxJs/rx.helpers.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts","./projects/eav-ui/src/app/shared/services/global-config.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts","./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { GlobalConfigService } from '../../shared/services/global-config.service';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'GlobalDialogConfigService';\r\n\r\nconst webApiSettings = 'admin/dialog/settings';\r\n\r\n/**\r\n * Service for getting dialog settings for the current app.\r\n * \r\n * Note that it should normally be shared, to save resources / network calls.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalDialogConfigService {\r\n\r\n  log = new EavLogger(nameOfThis, logThis);\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private globalConfigService: GlobalConfigService,\r\n  ) {\r\n    this.log.a(`using context #${this.context.log.svcId}`);\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getShared$(appId: number): Observable<DialogSettings> {\r\n    this.log.a('getShared$ appId: ' + appId);\r\n    this.dialogSettings$[appId] ??= this.getDialogSettings(appId, 'getShared$')\r\n      .pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n  }\r\n\r\n  private getDialogSettings(appId?: number, reqBy?: string): Observable<DialogSettings> {\r\n    this.log.a('getDialogSettings', {appId, reqBy});\r\n    return this.http.get<DialogSettings>(webApiSettings, {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dlgSettings => {\r\n        dlgSettings.Context.Language.List = dlgSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dlgSettings;\r\n      }),\r\n      tap(dlgSettings => {\r\n        this.globalConfigService.allowDebug(dlgSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { EntityFilterModel } from './entity-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n@Component({\r\n  selector: 'app-entity-filter',\r\n  templateUrl: './entity-filter.component.html',\r\n  styleUrls: ['./entity-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n  ]\r\n})\r\nexport class EntityFilterComponent implements IFilterAngularComp {\r\n  @ViewChild('valueInput') private valueInputRef: ElementRef<HTMLInputElement>;\r\n\r\n  filter = '';\r\n  idFilterString = '';\r\n\r\n  private filterParams: IFilterParams;\r\n  private idFilter: number[] = [];\r\n\r\n  agInit(params: IFilterParams): void {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '' || this.idFilter.length > 0;\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    if (this.filter !== '') {\r\n      const valueGetterParams: ValueGetterParams = {\r\n        api: this.filterParams.api,\r\n        colDef: this.filterParams.colDef,\r\n        column: this.filterParams.column,\r\n        columnApi: this.filterParams.columnApi,\r\n        context: this.filterParams.context,\r\n        data: params.node.data,\r\n        getValue: (field) => params.node.data[field],\r\n        node: params.node,\r\n      };\r\n      const values: string[] | undefined = this.filterParams.valueGetter(valueGetterParams);\r\n      if (values == null) { return false; }\r\n      if (!values.some(value => !!value && value.includes(this.filter))) { return false; }\r\n    }\r\n\r\n    if (this.idFilter.length > 0) {\r\n      const items: { Id: number; Title: string; }[] | undefined = params.data[this.filterParams.colDef.headerName];\r\n      if (items == null) { return false; }\r\n      if (!this.idFilter.some(idFltr => items.some(itm => itm.Id === idFltr))) { return false; }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getModel(): EntityFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    const model: EntityFilterModel = {\r\n      filterType: 'entity',\r\n      filter: this.filter,\r\n      idFilter: this.idFilter,\r\n    };\r\n    return model;\r\n  }\r\n\r\n  setModel(model: EntityFilterModel): void {\r\n    this.filter = model?.filter ?? '';\r\n    this.idFilter = model?.idFilter ?? [];\r\n    this.idFilterString = model?.idFilter?.join(',') ?? '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams): void {\r\n    this.valueInputRef.nativeElement.focus();\r\n  }\r\n\r\n  updateIdFilter(): void {\r\n    this.idFilter = this.idFilterString.split(',').map(el => parseInt(el, 10)).filter(el => !isNaN(el));\r\n  }\r\n\r\n  filterChanged(): void {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n  <mat-label>Value</mat-label>\r\n  <input matInput type=\"text\" [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\" #valueInput>\r\n</mat-form-field>\r\n\r\n<mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n  <mat-label>IDs (comma separated)</mat-label>\r\n  <input matInput type=\"text\" [(ngModel)]=\"idFilterString\" (ngModelChange)=\"updateIdFilter(); filterChanged()\">\r\n</mat-form-field>\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Copy\" (click)=\"do('clone')\">\r\n    <mat-icon>file_copy</mat-icon>\r\n  </div>\r\n  <div class=\" eav-grid-action-button highlight\" matRipple tippy=\"Export\" (click)=\"do('export')\">\r\n    <mat-icon>cloud_download</mat-icon>\r\n  </div>\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item [disabled]=\"item._EditInfo.DisableDelete\" (click)=\"do('delete')\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ContentItem } from '../models/content-item.model';\r\nimport { ContentItemsActionsParams, ContentItemType } from './content-items-actions.models';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-content-items-actions',\r\n  templateUrl: './content-items-actions.component.html',\r\n  styleUrls: ['./content-items-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n  ],\r\n})\r\nexport class ContentItemsActionsComponent implements ICellRendererAngularComp {\r\n  item: ContentItem;\r\n\r\n  private params: ICellRendererParams & ContentItemsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & ContentItemsActionsParams): void {\r\n    this.params = params;\r\n    this.item = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n\r\n  do(verb: ContentItemType): void {\r\n    this.params.do(verb, this.item);\r\n  }\r\n}\r\n","<div [tippy]=\"encodedValue\">\r\n  @if (entities) {\r\n  <span class=\"more-entities\">{{ entities }}</span>\r\n  }\r\n  {{ encodedValue }}\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ExtendedColDef } from '../models/extended-col-def.model';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-content-items-entity',\r\n  templateUrl: './content-items-entity.component.html',\r\n  styleUrls: ['./content-items-entity.component.scss'],\r\n  standalone: true,\r\n  imports: [TippyDirective,],\r\n})\r\nexport class ContentItemsEntityComponent implements ICellRendererAngularComp {\r\n  encodedValue: string;\r\n  entities: number;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    if (!Array.isArray(params.value)) { return; }\r\n\r\n    this.encodedValue = this.htmlEncode(params.value.join(', '));\r\n    if ((params.colDef as ExtendedColDef).allowMultiValue) {\r\n      this.entities = params.value.length;\r\n    }\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  // htmlencode strings (source: https://stackoverflow.com/a/7124052)\r\n  private htmlEncode(text: string) {\r\n    return text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button icon\" [tippy]=\"value.published ? 'Published' : 'Not published'\">\r\n    <mat-icon>{{ value.published ? 'visibility' : 'visibility_off' }}</mat-icon>\r\n  </div>\r\n\r\n  @if (!disableMetadata) {\r\n  <div class=\"eav-grid-action-button highlight\" matRipple\r\n    [ngClass]=\"{ 'hide-until-row-hover': !metadataCount && !value.metadata }\" [tippy]=\"metadataTooltip\"\r\n    (click)=\"openMetadata()\">\r\n    <mat-icon [matBadge]=\"metadataCount\" matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadgeHidden]=\"!metadataCount\"\r\n      matBadgePosition=\"below after\" aria-hidden=\"false\">{{ value.metadata ? 'loyalty' : 'local_offer' }}\r\n    </mat-icon>\r\n  </div>\r\n  }\r\n  @if (disableMetadata && !(!metadataCount && !value.metadata)) {\r\n  <div class=\"eav-grid-action-button disabled\">\r\n    <mat-icon [matBadge]=\"metadataCount\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadgeDisabled=\"true\"\r\n      [matBadgeHidden]=\"!metadataCount\" matBadgePosition=\"below after\" aria-hidden=\"false\">{{ value.metadata ? 'loyalty'\r\n      : 'local_offer' }}\r\n    </mat-icon>\r\n  </div>\r\n  }\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ContentItem } from '../models/content-item.model';\r\nimport { PubMeta } from '../pub-meta-filter/pub-meta-filter.model';\r\nimport { ContentItemsStatusParams } from './content-items-status.models';\r\nimport { EavForInAdminUi } from '../../edit/shared/models/eav';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-content-items-status',\r\n  templateUrl: './content-items-status.component.html',\r\n  styleUrls: ['./content-items-status.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n    NgClass,\r\n    MatBadgeModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class ContentItemsStatusComponent implements ICellRendererAngularComp {\r\n  value: PubMeta;\r\n  disableMetadata: boolean;\r\n  metadataCount: number;\r\n  metadataTooltip: string;\r\n\r\n  private item: ContentItem;\r\n  private params: ICellRendererParams & ContentItemsStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & ContentItemsStatusParams): void {\r\n    this.value = params.value;\r\n    this.params = params;\r\n    this.item = params.data;\r\n    this.disableMetadata = this.item._EditInfo.DisableMetadata;\r\n\r\n    this.metadataCount = this.item.Metadata?.length ?? 0;\r\n\r\n    const mdf = this.item.For as EavForInAdminUi;\r\n    this.metadataTooltip = mdf\r\n      ? 'This item is metadata for:'\r\n      + `\\nTarget: ${mdf.Target}`\r\n      + `\\nTargetType: ${mdf.TargetType}`\r\n      + (mdf.KeyNumber ? `\\nNumber: ${mdf.KeyNumber}` : '')\r\n      + (mdf.KeyString ? `\\nString: ${mdf.KeyString}` : '')\r\n      + (mdf.KeyGuid ? `\\nGuid: ${mdf.KeyGuid}` : '')\r\n      + (mdf.Title ? `\\nTitle: ${mdf.Title}` : '')\r\n      : 'This item is not metadata.';\r\n    this.metadataTooltip += `\\n\\nThis item has ${this.metadataCount > 0 ? this.metadataCount : 'no'} other metadata ${this.metadataCount === 1 ? 'item' : 'items'} attached to it.`;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openMetadata(): void {\r\n    this.params.onOpenMetadata(this.item);\r\n  }\r\n}\r\n","import { AbstractControl, UntypedFormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { guidRegex } from '../../shared/constants/guid.constants';\r\n\r\nexport function metadataKeyValidator(form: UntypedFormGroup): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    if (!control.value) { return null; }\r\n\r\n    const keyType: MetadataKeyType = form.controls['keyType'].value;\r\n    const testValue = (control.value as string | number).toString();\r\n\r\n    switch (keyType) {\r\n      case eavConstants.keyTypes.number:\r\n        const isWholeNumber = /^[0-9]+$/.test(testValue);\r\n        return !isWholeNumber ? { patternWholeNumber: true } : null;\r\n      case eavConstants.keyTypes.guid:\r\n        // allow curly brackets around guid\r\n        const hasCurly = ['{', '}'].some(bracket => testValue.includes(bracket));\r\n        const guid = testValue.substring(\r\n          hasCurly ? 1 : 0,\r\n          hasCurly ? testValue.length - 1 : testValue.length,\r\n        );\r\n        const isGuid = guidRegex().test(guid);\r\n        return !isGuid ? { patternGuid: true } : null;\r\n      case eavConstants.keyTypes.string:\r\n        return null;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Create Metadata</div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      This is a special operation to add an item which is metadata for another item,\r\n      see <a href=\"https://go.2sxc.org/metadata\" target=\"_blank\">docs</a>.\r\n    </p>\r\n    <form [formGroup]=\"form\">\r\n      <!-- Target Type -->\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Target</mat-label>\r\n        @if (vm.guidedMode) {\r\n        <mat-select formControlName=\"targetType\" required>\r\n          @for (option of targetTypeOptions; track option) {\r\n          <mat-option [value]=\"option.targetType\">\r\n            {{ option.label }}\r\n          </mat-option>\r\n          }\r\n          @if (vm.unknownTargetType) {\r\n          <mat-option [value]=\"vm.formValues.targetType\">\r\n            {{ vm.formValues.targetType }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!vm.guidedMode) {\r\n        <input matInput type=\"number\" min=\"0\" formControlName=\"targetType\" required>\r\n        }\r\n      </mat-form-field>\r\n      @if (form.controls['targetType'].touched && !form.controls['targetType'].invalid && vm.unknownTargetType) {\r\n      <app-field-hint [isError]=\"false\">\r\n        Warning: you entered an unknown target type. This may work or may not. Please be sure you know what you're\r\n        doing\r\n      </app-field-hint>\r\n      }\r\n      @if (vm.targetTypeHint) {\r\n      <app-field-hint [isError]=\"false\">{{ vm.targetTypeHint }}</app-field-hint>\r\n      }\r\n      @if (form.controls['targetType'].touched && form.controls['targetType'].errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n      @if (form.controls['targetType'].touched && form.controls['targetType'].errors?.pattern) {\r\n      <app-field-hint [isError]=\"true\">\r\n        Must be a whole number\r\n      </app-field-hint>\r\n      }\r\n      <!-- Key Type -->\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Key type</mat-label>\r\n        <mat-select formControlName=\"keyType\" required>\r\n          @for (option of vm.keyTypeOptions; track option) {\r\n          <mat-option [value]=\"option\">\r\n            {{ option }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n      </mat-form-field>\r\n      @if (form.controls['keyType'].touched && form.controls['keyType'].errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n      <!-- Content Type for Content Items -->\r\n      @if (vm.guidedMode && vm.formValues.targetType === eavConstants.metadata.entity.targetType) {\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Content Type</mat-label>\r\n        <mat-select formControlName=\"contentTypeForContentItems\"\r\n          [placeholder]=\"!vm.contentTypes.length ? 'No items found' : ''\">\r\n          @for (contentType of vm.contentTypes; track contentType) {\r\n          <mat-option [value]=\"contentType.StaticName\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n      </mat-form-field>\r\n      }\r\n      <!-- Scope for Content Types -->\r\n      @if (vm.guidedMode && (vm.formValues.targetType === eavConstants.metadata.entity.targetType ||\r\n      vm.formValues.targetType === eavConstants.metadata.contentType.targetType)) {\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select formControlName=\"scopeForContentTypes\"\r\n          [placeholder]=\"!vm.scopeOptions.length ? 'No items found' : ''\">\r\n          @for (scopeOption of vm.scopeOptions; track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      }\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n      </app-field-hint>\r\n      <!-- Key -->\r\n      <mat-form-field color=\"accent\" style=\"width: 100%; margin-bottom: 8px;\">\r\n        <mat-label>Key</mat-label>\r\n        @if (vm.guidedMode) {\r\n        @switch (vm.formValues.targetType) {\r\n        @case (eavConstants.metadata.entity.targetType) {\r\n        @if (vm.guidedKey) {\r\n        <mat-select formControlName=\"key\" required [placeholder]=\"!vm.contentItems.length ? 'No items found' : ''\">\r\n          @for (item of vm.contentItems; track item) {\r\n          <mat-option [value]=\"item.Guid\">\r\n            {{ item.Title }} ({{ item.Id }})\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!vm.guidedKey) {\r\n        <input matInput type=\"text\" formControlName=\"key\" required>\r\n        }\r\n        }\r\n        @case (eavConstants.metadata.contentType.targetType) {\r\n        @if (vm.guidedKey) {\r\n        <mat-select formControlName=\"key\" required [placeholder]=\"!vm.contentTypes.length ? 'No items found' : ''\">\r\n          @for (contentType of vm.contentTypes; track contentType) {\r\n          <mat-option [value]=\"contentType.StaticName\">\r\n            {{ contentType.Label }}\r\n          </mat-option>\r\n          }\r\n        </mat-select>\r\n        }\r\n        @if (!vm.guidedKey) {\r\n        <input matInput type=\"text\" formControlName=\"key\" required>\r\n        }\r\n        }\r\n        @default {\r\n        <ng-container *ngTemplateOutlet=\"defaultKeyInput\"></ng-container>\r\n        }\r\n        }\r\n        } @else {\r\n        @if (vm.formValues.keyType !== eavConstants.keyTypes.number) {\r\n        <input matInput type=\"text\" formControlName=\"key\" required>\r\n        }\r\n        @if (vm.formValues.keyType === eavConstants.keyTypes.number) {\r\n        <input matInput type=\"number\" formControlName=\"key\" required>\r\n        }\r\n        }\r\n        <ng-template #defaultKeyInput>\r\n          @if (vm.formValues.keyType !== eavConstants.keyTypes.number) {\r\n          <input matInput type=\"text\" formControlName=\"key\" required>\r\n          }\r\n          @if (vm.formValues.keyType === eavConstants.keyTypes.number) {\r\n          <input matInput type=\"number\" formControlName=\"key\" required>\r\n          }\r\n        </ng-template>\r\n        @if (vm.guidedMode && vm.guidedKeyExists) {\r\n        <div matTextSuffix class=\"eav-selection-suffix\">\r\n          <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\"\r\n            [ngClass]=\"{ 'active': vm.guidedKey }\" tippy=\"Pick existing value\" (click)=\"toggleGuidedKey(true)\">\r\n            <mat-icon class=\"eav-icon\">search</mat-icon>\r\n          </button>\r\n          <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\"\r\n            [ngClass]=\"{ 'active': !vm.guidedKey }\" tippy=\"Manual entry\" (click)=\"toggleGuidedKey(false)\">\r\n            <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n          </button>\r\n        </div>\r\n        }\r\n      </mat-form-field>\r\n      @if (form.controls['key'].touched && form.controls['key'].errors?.required) {\r\n      <app-field-hint [isError]=\"true\">\r\n        This field is required\r\n      </app-field-hint>\r\n      }\r\n      @if (form.controls['key'].touched && form.controls['key'].errors?.patternWholeNumber) {\r\n      <app-field-hint [isError]=\"true\">\r\n        Must be a whole number\r\n      </app-field-hint>\r\n      }\r\n      @if (form.controls['key'].touched && form.controls['key'].errors?.patternGuid) {\r\n      <app-field-hint [isError]=\"true\">\r\n        Must be a valid GUID\r\n      </app-field-hint>\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <mat-slide-toggle color=\"accent\"\r\n      [tippy]=\"vm.guidedMode ? 'Guided mode helps you select options that work' : 'Manual mode is for advanced uses and allows you to insert any values'\"\r\n      [checked]=\"vm.guidedMode\" (change)=\"toggleGuidedMode($event)\">\r\n      {{ vm.guidedMode ? 'Guided' : 'Manual' }}\r\n    </mat-slide-toggle>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"confirm()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n}\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, merge, Observable, startWith } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { ContentTypesService } from '../../app-administration/services';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, MetadataKeyType, ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\nimport { ContentItemsService } from '../services/content-items.service';\r\nimport { MetadataDialogViewModel, MetadataFormValues, MetadataInfo, TargetTypeOption } from './create-metadata-dialog.models';\r\nimport { metadataKeyValidator } from './metadata-key.validator';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgTemplateOutlet, NgClass, AsyncPipe } from '@angular/common';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { ControlHelpers } from '../../edit/shared/helpers/control.helpers';\r\nimport { RxHelpers } from '../../shared/rxJs/rx.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { mapUntilObjChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-create-metadata-dialog',\r\n  templateUrl: './create-metadata-dialog.component.html',\r\n  styleUrls: ['./create-metadata-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    NgTemplateOutlet,\r\n    MatButtonModule,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class CreateMetadataDialogComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  eavConstants = eavConstants;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  form: UntypedFormGroup;\r\n  viewModel$: Observable<MetadataDialogViewModel>;\r\n  targetTypeOptions: TargetTypeOption[];\r\n\r\n  /** Constants from metadata definitions */\r\n  private keyTypeOptions: MetadataKeyType[];\r\n  private guidedMode$: BehaviorSubject<boolean>;\r\n  /** Currently available options */\r\n  private keyTypeOptions$: BehaviorSubject<MetadataKeyType[]>;\r\n  private scopeOptions$: BehaviorSubject<ScopeOption[]>;\r\n  private contentItems$: BehaviorSubject<ContentItem[]>;\r\n  private contentTypes$: BehaviorSubject<ContentType[]>;\r\n  private guidedKey$: BehaviorSubject<boolean>;\r\n\r\n  private contentItemsService = transient(ContentItemsService);\r\n  \r\n  private contentTypesService = transient(ContentTypesService);\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateMetadataDialogComponent>,\r\n    private context: Context,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.targetTypeOptions = Object.values(eavConstants.metadata).map(option => ({ ...option }));\r\n    this.keyTypeOptions = Object.values(eavConstants.keyTypes);\r\n\r\n    this.keyTypeOptions$ = new BehaviorSubject<MetadataKeyType[]>([]);\r\n    this.scopeOptions$ = new BehaviorSubject<ScopeOption[]>([]);\r\n    this.guidedMode$ = new BehaviorSubject(true);\r\n    this.contentItems$ = new BehaviorSubject<ContentItem[]>([]);\r\n    this.contentTypes$ = new BehaviorSubject<ContentType[]>([]);\r\n    this.guidedKey$ = new BehaviorSubject(true);\r\n\r\n    this.fetchScopes();\r\n\r\n    this.form = new UntypedFormGroup({});\r\n    this.form.addControl('targetType', new UntypedFormControl(eavConstants.metadata.entity.targetType, [Validators.required, Validators.pattern(/^[0-9]+$/)]));\r\n    this.form.addControl('keyType', new UntypedFormControl(eavConstants.metadata.entity.keyType, [Validators.required]));\r\n    this.form.addControl('contentTypeForContentItems', new UntypedFormControl(null));\r\n    this.form.addControl('scopeForContentTypes', new UntypedFormControl(eavConstants.scopes.default.value));\r\n    this.form.addControl('key', new UntypedFormControl(null, [Validators.required, metadataKeyValidator(this.form)]));\r\n\r\n    this.subscriptions.add(\r\n      this.form.controls['scopeForContentTypes'].valueChanges.pipe(\r\n        startWith(this.form.controls['scopeForContentTypes'].value),\r\n        distinctUntilChanged(),\r\n      ).subscribe((newScope: string) => {\r\n        if (this.form.controls['contentTypeForContentItems'].value != null) {\r\n          this.form.controls['contentTypeForContentItems'].patchValue(null);\r\n        }\r\n\r\n        if (newScope === dropdownInsertValue) {\r\n          newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n          if (!this.scopeOptions$.value.some(option => option.value === newScope)) {\r\n            const newScopeOption: ScopeOption = {\r\n              name: newScope,\r\n              value: newScope,\r\n            };\r\n            this.scopeOptions$.next([newScopeOption, ...this.scopeOptions$.value]);\r\n          }\r\n          this.form.controls['scopeForContentTypes'].patchValue(newScope);\r\n        } else {\r\n          this.fetchContentTypes(newScope);\r\n        }\r\n      })\r\n    );\r\n\r\n    // reset key if target or keyType changed\r\n    this.subscriptions.add(\r\n      merge(\r\n        this.form.controls['targetType'].valueChanges.pipe(distinctUntilChanged()),\r\n        this.form.controls['keyType'].valueChanges.pipe(distinctUntilChanged()),\r\n      ).subscribe(() => {\r\n        this.guidedKey$.next(true);\r\n\r\n        const formValues: MetadataFormValues = this.form.getRawValue();\r\n        if (formValues.key != null) {\r\n          const updatedForm: Partial<MetadataFormValues> = {\r\n            key: null,\r\n          };\r\n          this.form.patchValue(updatedForm);\r\n        }\r\n      })\r\n    );\r\n\r\n    // reset key if contentTypeForContentItems changed\r\n    this.subscriptions.add(\r\n      this.form.controls['contentTypeForContentItems'].valueChanges.pipe(\r\n        startWith(this.form.controls['contentTypeForContentItems'].value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(contentTypeStaticName => {\r\n        const formValues: MetadataFormValues = this.form.getRawValue();\r\n        if (formValues.targetType === eavConstants.metadata.entity.targetType && formValues.key != null) {\r\n          const updatedForm: Partial<MetadataFormValues> = {\r\n            key: null,\r\n          };\r\n          this.form.patchValue(updatedForm);\r\n        }\r\n\r\n        this.contentItemsService.getAll(contentTypeStaticName).subscribe(items => {\r\n          this.contentItems$.next(items);\r\n        });\r\n      })\r\n    );\r\n\r\n    const formValues$ = this.form.valueChanges.pipe(\r\n      startWith(this.form.getRawValue() as MetadataFormValues),\r\n      map(() => this.form.getRawValue() as MetadataFormValues),\r\n      mapUntilObjChanged(m => m)\r\n      // distinctUntilChanged(RxHelpers.objectsEqual),\r\n    );\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([formValues$, this.guidedMode$]).subscribe(([formValues, guidedMode]) => {\r\n        // keyTypeOptions depend on targetType and advanced\r\n        const foundTargetType = this.targetTypeOptions.find(option => option.targetType === formValues.targetType);\r\n        const keyTypeOptions = guidedMode && foundTargetType ? [foundTargetType.keyType] : [...this.keyTypeOptions];\r\n        if (!RxHelpers.arraysEqual(keyTypeOptions, this.keyTypeOptions$.value)) {\r\n          this.keyTypeOptions$.next(keyTypeOptions);\r\n        }\r\n\r\n        // update form if keyType is not available\r\n        const updatedForm: Partial<MetadataFormValues> = {};\r\n        if (!this.keyTypeOptions$.value.includes(formValues.keyType)) {\r\n          updatedForm.keyType = this.keyTypeOptions$.value[0];\r\n        }\r\n\r\n        // if target is app key must be current app id\r\n        const isAppMetadata = guidedMode && formValues.targetType === eavConstants.metadata.app.targetType;\r\n        if (isAppMetadata && formValues.key !== this.context.appId) {\r\n          updatedForm.key = this.context.appId;\r\n        }\r\n\r\n        if (Object.keys(updatedForm).length) {\r\n          this.form.patchValue(updatedForm);\r\n        }\r\n\r\n        const keyTypeDisabled = guidedMode && this.keyTypeOptions$.value.length <= 1;\r\n        ControlHelpers.disableControl(this.form.controls['keyType'], keyTypeDisabled);\r\n        ControlHelpers.disableControl(this.form.controls['key'], isAppMetadata);\r\n      })\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.guidedMode$, this.keyTypeOptions$, this.scopeOptions$, this.contentItems$, this.contentTypes$]),\r\n      combineLatest([formValues$, this.guidedKey$]),\r\n    ]).pipe(\r\n      map(([\r\n        [guidedMode, keyTypeOptions, scopeOptions, contentItems, contentTypes],\r\n        [formValues, guidedKey],\r\n      ]) => {\r\n        const viewModel: MetadataDialogViewModel = {\r\n          guidedMode,\r\n          unknownTargetType: !this.targetTypeOptions.some(option => option.targetType === formValues.targetType),\r\n          targetTypeHint: guidedMode && this.targetTypeOptions.find(option => option.targetType === formValues.targetType)?.hint,\r\n          keyTypeOptions,\r\n          scopeOptions,\r\n          guidedKey,\r\n          guidedKeyExists:\r\n            [eavConstants.metadata.entity.targetType, eavConstants.metadata.contentType.targetType].includes(formValues.targetType),\r\n          formValues,\r\n          contentItems,\r\n          contentTypes,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.guidedMode$.complete();\r\n    this.keyTypeOptions$.complete();\r\n    this.contentItems$.complete();\r\n    this.contentTypes$.complete();\r\n    this.guidedKey$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(result?: MetadataInfo): void {\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  toggleGuidedKey(event: boolean): void {\r\n    this.guidedKey$.next(event);\r\n  }\r\n\r\n  toggleGuidedMode(event: MatSlideToggleChange): void {\r\n    this.guidedMode$.next(event.checked);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: MetadataFormValues = this.form.getRawValue();\r\n\r\n    const result: MetadataInfo = {\r\n      target: this.targetTypeOptions.find(option => option.targetType === formValues.targetType)?.target,\r\n      targetType: formValues.targetType,\r\n      keyType: formValues.keyType,\r\n      // if keyType is guid remove curly brackets\r\n      key: formValues.keyType === eavConstants.keyTypes.guid ? (formValues.key as string).replace(/{|}/g, '') : formValues.key.toString(),\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchContentTypes(scope: string): void {\r\n    this.contentTypesService.retrieveContentTypes(scope).subscribe(contentTypes => {\r\n      this.contentTypes$.next(contentTypes);\r\n    });\r\n  }\r\n\r\n  private fetchScopes(): void {\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions$.next(scopes);\r\n    });\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { PubMeta, PubMetaFilterModel } from './pub-meta-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-pub-meta-filter',\r\n  templateUrl: './pub-meta-filter.component.html',\r\n  styleUrls: ['./pub-meta-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRadioModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class PubMetaFilterComponent implements IFilterAngularComp {\r\n  published = '';\r\n  metadata = '';\r\n  hasMetadata = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.published !== '' || this.metadata !== '' || this.hasMetadata !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    let publishedPassed = false;\r\n    let metadataPassed = false;\r\n    let hasMetadataPassed = false;\r\n\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: PubMeta = this.filterParams.valueGetter(valueGetterParams);\r\n    if (this.published !== '') {\r\n      if (value.published === null || value.published === undefined) {\r\n        publishedPassed = false;\r\n      } else {\r\n        publishedPassed = value.published.toString() === this.published;\r\n      }\r\n    } else {\r\n      publishedPassed = true;\r\n    }\r\n    if (this.metadata !== '') {\r\n      if (value.metadata === null || value.metadata === undefined) {\r\n        metadataPassed = false;\r\n      } else {\r\n        metadataPassed = value.metadata.toString() === this.metadata;\r\n      }\r\n    } else {\r\n      metadataPassed = true;\r\n    }\r\n    if (this.hasMetadata !== '') {\r\n      if (value.hasMetadata === null || value.hasMetadata === undefined) {\r\n        hasMetadataPassed = false;\r\n      } else {\r\n        hasMetadataPassed = value.hasMetadata.toString() === this.hasMetadata;\r\n      }\r\n    } else {\r\n      hasMetadataPassed = true;\r\n    }\r\n    return publishedPassed && metadataPassed && hasMetadataPassed;\r\n  }\r\n\r\n  getModel(): PubMetaFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n\r\n    const model: PubMetaFilterModel = {\r\n      filterType: 'pub-meta',\r\n      published: this.published,\r\n      metadata: this.metadata,\r\n      hasMetadata: this.hasMetadata,\r\n    };\r\n    return model;\r\n  }\r\n\r\n  setModel(model: PubMetaFilterModel) {\r\n    this.published = model ? model.published : '';\r\n    this.metadata = model ? model.metadata : '';\r\n    this.hasMetadata = model ? model.hasMetadata : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<div class=\"title\">Published</div>\r\n<mat-radio-group [(ngModel)]=\"published\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Published</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Not published</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Is Metadata</div>\r\n<mat-radio-group [(ngModel)]=\"metadata\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Is metadata</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Is not metadata</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Has Metadata</div>\r\n<mat-radio-group [(ngModel)]=\"hasMetadata\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Has metadata</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Has no metadata</mat-radio-button>\r\n</mat-radio-group>\r\n","@if (viewModel$ | async; as vm) {\r\n<div appToggleDebug class=\"eav-dialog nav-component-wrapper\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ vm.contentType.Label || vm.contentType.Name }} Data\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content nav-component-wrapper\">\r\n    <router-outlet></router-outlet>\r\n    @if (vm.contentType?.Properties?.ListInstructions; as listInstructions) {\r\n    <div [innerHTML]=\"listInstructions | safeHtml\"></div>\r\n    }\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.items\" [gridOptions]=\"gridOptions\"\r\n        (gridReady)=\"onGridReady($event)\" appDragAndDrop [allowedFileTypes]=\"'xml,json'\"\r\n        (filesDropped)=\"filesDropped($event)\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Export xml list\" (click)=\"exportContent()\">\r\n        <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n        <span>Data</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Import xml list\" (click)=\"importContent()\">\r\n        <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n        <span>Data</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Import single json item\" (click)=\"importItem()\">\r\n        <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n        <span>Item</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Create metadata\" (click)=\"createMetadata()\">\r\n        <mat-icon class=\"eav-icon\">local_offer</mat-icon>\r\n        <span>Create Metadata</span>\r\n      </button>\r\n      @if (isDebug()) {\r\n      <button mat-button class=\"eav-button__with-icon\" color=\"accent\" tippy=\"Print filter to console\"\r\n        (click)=\"debugFilter()\">\r\n        <mat-icon class=\"eav-icon\">filter_list</mat-icon>\r\n        <span>Filter</span>\r\n      </button>\r\n      }\r\n    </div>\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Add item\" (click)=\"editItem(null)\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n}\r\n","import { ColDef, GridApi, GridOptions, GridReadyEvent, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, inject, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, filter, map, Observable, Subject, take } from 'rxjs';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentExportService } from '../content-export/services/content-export.service';\r\nimport { ContentImportDialogData } from '../content-import/content-import-dialog.config';\r\nimport { DataTypeCatalog } from '../shared/fields/data-type-catalog';\r\nimport { Field } from '../shared/fields/field.model';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { BaseWithChildDialogComponent } from '../shared/components/base-with-child-dialog.component';\r\nimport { BooleanFilterComponent } from '../shared/components/boolean-filter/boolean-filter.component';\r\nimport { EntityFilterComponent } from '../shared/components/entity-filter/entity-filter.component';\r\nimport { FileUploadDialogData } from '../shared/components/file-upload-dialog';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants } from '../shared/constants/eav.constants';\r\nimport { keyFilters } from '../shared/constants/session.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { ContentItemsActionsComponent } from './content-items-actions/content-items-actions.component';\r\nimport { ContentItemsActionsParams } from './content-items-actions/content-items-actions.models';\r\nimport { ContentItemsEntityComponent } from './content-items-entity/content-items-entity.component';\r\nimport { ContentItemsStatusComponent } from './content-items-status/content-items-status.component';\r\nimport { ContentItemsStatusParams } from './content-items-status/content-items-status.models';\r\nimport { buildFilterModel } from './content-items.helpers';\r\nimport { CreateMetadataDialogComponent } from './create-metadata-dialog/create-metadata-dialog.component';\r\nimport { MetadataInfo } from './create-metadata-dialog/create-metadata-dialog.models';\r\nimport { AgGridFilterModel } from './models/ag-grid-filter.model';\r\nimport { ContentItem } from './models/content-item.model';\r\nimport { ExtendedColDef } from './models/extended-col-def.model';\r\nimport { PubMetaFilterComponent } from './pub-meta-filter/pub-meta-filter.component';\r\nimport { PubMeta } from './pub-meta-filter/pub-meta-filter.model';\r\nimport { ContentItemsService } from './services/content-items.service';\r\nimport { EntityEditService } from '../shared/services/entity-edit.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { SafeHtmlPipe } from '../shared/pipes/safe-html.pipe';\r\nimport { DragAndDropDirective } from '../shared/directives/drag-and-drop.directive';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { ToggleDebugDirective } from '../shared/directives/toggle-debug.directive';\r\nimport { transient } from '../core';\r\nimport { EavLogger } from '../shared/logging/eav-logger';\r\nimport { GlobalConfigService } from '../shared/services/global-config.service';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'ContentItemsComponent';\r\n\r\n@Component({\r\n  selector: 'app-content-items',\r\n  templateUrl: './content-items.component.html',\r\n  styleUrls: ['./content-items.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    SafeHtmlPipe,\r\n    DragAndDropDirective,\r\n    ToggleDebugDirective,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class ContentItemsComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  contentType$ = new Subject<ContentType>();\r\n  items$ = new BehaviorSubject<ContentItem[]>(undefined);\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n  };\r\n\r\n  private gridApi$ = new BehaviorSubject<GridApi>(null);\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  private entitiesService = transient(EntityEditService);\r\n  private contentExportService = transient(ContentExportService);\r\n\r\n  viewModel$: Observable<ContentItemsViewModel>;\r\n\r\n  isDebug = inject(GlobalConfigService).isDebug;\r\n\r\n  private contentItemsService = transient(ContentItemsService);\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<ContentItemsComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(router, route, new EavLogger(nameOfThis, logThis));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchContentType();\r\n    this.fetchItems();\r\n    this.fetchColumns();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => { this.fetchItems(); }));\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.contentType$, this.items$\r\n    ]).pipe(\r\n      map(([contentType, items]) => ({ contentType, items }))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.items$.complete();\r\n    this.gridApi$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGridReady(params: GridReadyEvent) {\r\n    this.gridApi$.next(params.api);\r\n  }\r\n\r\n  private fetchContentType() {\r\n    this.contentTypesService.retrieveContentType(this.contentTypeStaticName).subscribe(contentType => {\r\n      this.contentType$.next(contentType);\r\n    });\r\n  }\r\n\r\n  private fetchItems() {\r\n    this.contentItemsService.getAll(this.contentTypeStaticName).subscribe(items => {\r\n      this.items$.next(items);\r\n    });\r\n  }\r\n\r\n  private fetchColumns() {\r\n    this.contentItemsService.getColumns(this.contentTypeStaticName).subscribe(columns => {\r\n      // filter out ephemeral columns as they don't have data to show\r\n      const columnsWithoutEphemeral = columns.filter(column => !column.IsEphemeral);\r\n      const columnDefs = this.buildColumnDefs(columnsWithoutEphemeral);\r\n      const filterModel = buildFilterModel(sessionStorage.getItem(keyFilters), columnDefs);\r\n      if (this.gridApi$.value) {\r\n        this.setColumnDefs(columnDefs, filterModel);\r\n      } else {\r\n        this.gridApi$.pipe(\r\n          filter(gridApi => gridApi != null), // firefox does web requests faster than drawing grid and getting gridApi\r\n          take(1),\r\n        ).subscribe(gridApi => {\r\n          this.setColumnDefs(columnDefs, filterModel);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private setColumnDefs(columnDefs: ColDef[], filterModel: AgGridFilterModel) {\r\n    this.gridApi$.value.setColumnDefs(columnDefs);\r\n    if (filterModel) {\r\n      this.log.a('Will try to apply filter:', filterModel);\r\n      this.gridApi$.value.setFilterModel(filterModel);\r\n    }\r\n  }\r\n\r\n  openMetadata(item: ContentItem) {\r\n    const url = GoToMetadata.getUrlEntity(\r\n      item.Guid,\r\n      `Metadata for Entity: ${item._Title} (${item.Id})`,\r\n      this.contentTypeStaticName,\r\n    );\r\n    this.router.navigate([url], { relativeTo: this.route });\r\n  }\r\n\r\n  editItem(item?: ContentItem) {\r\n    const form: EditForm = {\r\n      items: [\r\n        item == null\r\n          ? { ContentTypeName: this.contentTypeStaticName }\r\n          : { EntityId: item.Id }\r\n      ],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  exportContent() {\r\n    const filterModel = this.gridApi$.value.getFilterModel();\r\n    const hasFilters = Object.keys(filterModel).length > 0;\r\n    const ids: number[] = [];\r\n    if (hasFilters) {\r\n      this.gridApi$.value.forEachNodeAfterFilterAndSort(rowNode => {\r\n        const contentItem: ContentItem = rowNode.data;\r\n        ids.push(contentItem.Id);\r\n      });\r\n    }\r\n    this.router.navigate([`export/${this.contentTypeStaticName}${ids.length > 0 ? `/${ids}` : ''}`], { relativeTo: this.route });\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    const ext = importFile.name.substring(importFile.name.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n    switch (ext) {\r\n      case 'xml':\r\n        this.importContent(files);\r\n        break;\r\n      case 'json':\r\n        this.importItem(files);\r\n        break;\r\n    }\r\n  }\r\n\r\n  importContent(files?: File[]) {\r\n    const dialogData: ContentImportDialogData = { files };\r\n    this.router.navigate([`${this.contentTypeStaticName}/import`], { relativeTo: this.route, state: dialogData });\r\n  }\r\n\r\n  importItem(files?: File[]) {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route, state: dialogData });\r\n  }\r\n\r\n  createMetadata() {\r\n    const metadataDialogRef = this.dialog.open(CreateMetadataDialogComponent, {\r\n      autoFocus: false,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    metadataDialogRef.afterClosed().subscribe((itemFor: MetadataInfo) => {\r\n      if (itemFor == null) { return; }\r\n\r\n      const form: EditForm = {\r\n        items: [{\r\n          ContentTypeName: this.contentTypeStaticName,\r\n          For: {\r\n            Target: itemFor.target ?? itemFor.targetType.toString(),\r\n            TargetType: itemFor.targetType,\r\n            ...(itemFor.keyType === eavConstants.keyTypes.guid && { Guid: itemFor.key }),\r\n            ...(itemFor.keyType === eavConstants.keyTypes.number && { Number: parseInt(itemFor.key, 10) }),\r\n            ...(itemFor.keyType === eavConstants.keyTypes.string && { String: itemFor.key }),\r\n          },\r\n        }],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  debugFilter() {\r\n    console.warn('Current filter:', this.gridApi$.value.getFilterModel());\r\n    this.snackBar.open('Check console for filter information', undefined, { duration: 3000 });\r\n  }\r\n\r\n  private buildColumnDefs(columns: Field[]) {\r\n    const columnDefs: ColDef[] = [\r\n      {\r\n        ...ColumnDefinitions.Id,\r\n        cellClass: (params) => {\r\n          const contentItem: ContentItem = params.data;\r\n          return `id-action no-padding no-outline ${contentItem._EditInfo.ReadOnly ? 'disabled' : ''}`.split(' ');\r\n        },\r\n        cellRenderer: IdFieldComponent,\r\n        cellRendererParams: (() => {\r\n          const params: IdFieldParams<ContentItem> = {\r\n            tooltipGetter: (item) => `ID: ${item.Id}\\nRepoID: ${item._RepositoryId}\\nGUID: ${item.Guid}`,\r\n          };\r\n          return params;\r\n        })(),\r\n      },\r\n      {\r\n        field: 'Status',\r\n        width: 82,\r\n        headerClass: 'dense',\r\n        cellClass: 'secondary-action no-padding'.split(' '),\r\n        filter: PubMetaFilterComponent,\r\n        valueGetter: (params) => {\r\n          const item: ContentItem = params.data;\r\n          const published: PubMeta = {\r\n            published: item.IsPublished,\r\n            metadata: !!item.For,\r\n            hasMetadata: item.Metadata ? item.Metadata.length > 0 : false,\r\n          };\r\n          return published;\r\n        },\r\n        cellRenderer: ContentItemsStatusComponent,\r\n        cellRendererParams: (() => {\r\n          const params: ContentItemsStatusParams = {\r\n            onOpenMetadata: (item) => this.openMetadata(item),\r\n          };\r\n          return params;\r\n        })(),\r\n      },\r\n      {\r\n        headerName: 'Item (Entity)',\r\n        field: '_Title',\r\n        flex: 2,\r\n        minWidth: 250,\r\n        cellClass: 'primary-action highlight'.split(' '),\r\n        sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n        onCellClicked: (params) => {\r\n          const contentItem: ContentItem = params.data;\r\n          this.editItem(contentItem);\r\n        },\r\n      },\r\n      {\r\n        headerName: 'Stats',\r\n        headerTooltip: 'Used by others / uses others',\r\n        field: '_Used',\r\n        width: 70,\r\n        headerClass: 'dense',\r\n        cellClass: 'no-outline',\r\n        sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => {\r\n          const item: ContentItem = params.data;\r\n          return `${item._Used} / ${item._Uses}`;\r\n        },\r\n      },\r\n      {\r\n        ...ColumnDefinitions.ActionsPinnedRight3,\r\n        cellRenderer: ContentItemsActionsComponent,\r\n        cellRendererParams: (() => {\r\n          const params: ContentItemsActionsParams = {\r\n            do: (verb, item) => {\r\n              switch (verb) {\r\n                case 'clone': this.clone(item); break;\r\n                case 'export': this.export(item); break;\r\n                case 'delete': this.delete(item); break;\r\n              }\r\n            }\r\n          } satisfies ContentItemsActionsParams;\r\n          return params;\r\n        })(),\r\n      },\r\n    ];\r\n    for (const column of columns) {\r\n      const colDef: ExtendedColDef = {\r\n        headerName: column.StaticName,\r\n        field: column.StaticName,\r\n        flex: 2,\r\n        minWidth: 250,\r\n        cellClass: 'no-outline',\r\n        sortable: true,\r\n      };\r\n      switch (column.Type) {\r\n        case DataTypeCatalog.Entity:\r\n          colDef.allowMultiValue = column.Metadata?.Entity?.AllowMultiValue ?? true;\r\n          colDef.cellRenderer = ContentItemsEntityComponent;\r\n          colDef.valueGetter = this.valueGetterEntityField;\r\n          colDef.filter = EntityFilterComponent;\r\n          break;\r\n        case DataTypeCatalog.DateTime:\r\n          colDef.useTimePicker = column.Metadata?.DateTime?.UseTimePicker ?? false;\r\n          colDef.valueGetter = this.valueGetterDateTime;\r\n          colDef.filter = 'agTextColumnFilter';\r\n          break;\r\n        case DataTypeCatalog.Boolean:\r\n          colDef.valueGetter = this.valueGetterBoolean;\r\n          colDef.filter = BooleanFilterComponent;\r\n          break;\r\n        case DataTypeCatalog.Number:\r\n          colDef.filter = 'agNumberColumnFilter';\r\n          break;\r\n        default:\r\n          colDef.filter = 'agTextColumnFilter';\r\n          break;\r\n      }\r\n      columnDefs.push(colDef);\r\n    }\r\n    return columnDefs;\r\n  }\r\n\r\n  private clone(item: ContentItem) {\r\n    const form: EditForm = {\r\n      items: [{ ContentTypeName: this.contentTypeStaticName, DuplicateEntity: item.Id }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private export(item: ContentItem) {\r\n    this.contentExportService.exportEntity(item.Id, this.contentTypeStaticName, true);\r\n  }\r\n\r\n  private delete(item: ContentItem) {\r\n    if (!confirm(`Delete '${item._Title}' (${item._RepositoryId})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.entitiesService.delete(this.contentTypeStaticName, item._RepositoryId, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchItems();\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.snackBar.dismiss();\r\n        if (!confirm(`${err.error.ExceptionMessage}\\n\\nDo you want to force delete '${item._Title}' (${item._RepositoryId})?`)) {\r\n          return;\r\n        }\r\n        this.snackBar.open('Deleting...');\r\n        this.entitiesService.delete(this.contentTypeStaticName, item._RepositoryId, true).subscribe(() => {\r\n          this.snackBar.open('Deleted', null, { duration: 2000 });\r\n          this.fetchItems();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private valueGetterEntityField(params: ValueGetterParams) {\r\n    const rawValue: ContentItem[] = params.data[params.colDef.field];\r\n    if (rawValue.length === 0) { return null; }\r\n    return rawValue.map(item => item.Title);\r\n  }\r\n\r\n  private valueGetterDateTime(params: ValueGetterParams) {\r\n    const rawValue: string = params.data[params.colDef.field];\r\n    if (!rawValue) { return null; }\r\n    return (params.colDef as ExtendedColDef).useTimePicker\r\n      ? rawValue.replace('T', ' ').replace('Z', '')\r\n      : rawValue.split('T')[0];\r\n  }\r\n\r\n  private valueGetterBoolean(params: ValueGetterParams) {\r\n    const rawValue = params.data[params.colDef.field];\r\n    if (typeof rawValue !== 'boolean') { return null; }\r\n    return rawValue.toString();\r\n  }\r\n}\r\n\r\ninterface ContentItemsViewModel {\r\n  contentType: ContentType;\r\n  items: ContentItem[];\r\n}\r\n","import { ColDef, NumberFilterModel, TextFilterModel } from '@ag-grid-community/core';\r\nimport { BooleanFilterModel } from '../shared/components/boolean-filter/boolean-filter.model';\r\nimport { EntityFilterComponent } from '../shared/components/entity-filter/entity-filter.component';\r\nimport { EntityFilterModel } from '../shared/components/entity-filter/entity-filter.model';\r\nimport { AgGridFilterModel } from './models/ag-grid-filter.model';\r\nimport { PubMetaFilterModel } from './pub-meta-filter/pub-meta-filter.model';\r\nimport { JsonHelpers } from '../shared/helpers/json.helpers';\r\n\r\nexport function buildFilterModel(urlFilters: string, columnDefs: ColDef[]) {\r\n  if (!urlFilters) { return; }\r\n\r\n  // special decode if parameter was passed as base64 - this is necessary for strings containing the \"+\" character\r\n  if (urlFilters.charAt(urlFilters.length - 1) === '=') {\r\n    urlFilters = atob(urlFilters);\r\n  }\r\n\r\n  let filters: Record<string, any>;\r\n  try {\r\n    filters = JSON.parse(urlFilters);\r\n  } catch (error) {\r\n    console.error('Can\\'t parse JSON with filters from url:', urlFilters);\r\n  }\r\n  if (!filters) { return; }\r\n\r\n  // handle IsPublished and IsMetadata\r\n  const filterModel: AgGridFilterModel = {};\r\n  if (filters.IsPublished || filters.IsMetadata) {\r\n    const filter: PubMetaFilterModel = {\r\n      filterType: 'pub-meta',\r\n      published: filters.IsPublished ?? '',\r\n      metadata: filters.IsMetadata ?? '',\r\n      hasMetadata: '',\r\n    };\r\n    filterModel.Status = filter;\r\n  }\r\n\r\n  // handle all other cases\r\n  Object.entries(filters)\r\n    .filter(([key, value]) => key !== 'IsPublished' && key !== 'IsMetadata')\r\n    .forEach(([key, value]) => {\r\n      const columnDef = columnDefs.find(c => c.headerName === key);\r\n      if (columnDef?.filter === EntityFilterComponent) {\r\n        value = JsonHelpers.tryParse(value) ?? value;\r\n        const filter: EntityFilterModel = {\r\n          filterType: 'entity',\r\n          filter: typeof value === 'string' ? value : undefined,\r\n          idFilter: typeof value === 'number' ? [value] : Array.isArray(value) ? value.filter(v => typeof v === 'number') : undefined,\r\n        };\r\n        filterModel[key] = filter;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'string') {\r\n        const filter: TextFilterModel = { filterType: 'text', type: 'equals', filter: value };\r\n        filterModel[key] = filter;\r\n      } else if (typeof value === 'number') {\r\n        const filter: NumberFilterModel = { filterType: 'number', type: 'equals', filter: value, filterTo: null };\r\n        filterModel[key] = filter;\r\n      } else if (typeof value === 'boolean') {\r\n        const filter: BooleanFilterModel = { filterType: 'boolean', filter: value.toString() };\r\n        filterModel[key] = filter;\r\n      }\r\n    });\r\n\r\n  return filterModel;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-true-false',\r\n  templateUrl: './true-false.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    NgClass,\r\n  ],\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = {\r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { TrueFalseParams } from '../../dev-rest/api/true-false/true-false.models';\r\n\r\nexport class ColumnDefinitions {\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight6: ColDef = {\r\n    width: 82,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight7: ColDef = {\r\n    width: 62,\r\n    cellClass: 'secondary-action no-outline no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  static Items: ColDef = {\r\n    width: 102,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Fields: ColDef = {\r\n    width: 94,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Boolean: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n  };\r\n\r\n  static Boolean2: ColDef = {\r\n    width: 100,\r\n    sortable: true,\r\n    cellClass: 'no-outline',\r\n    filter: BooleanFilterComponent,\r\n  };\r\n\r\n  static Boolean3: ColDef = {\r\n    headerClass: 'dense',\r\n    width: 80,\r\n    cellClass: 'no-outline',\r\n    cellRenderer: TrueFalseComponent,\r\n    cellRendererParams: (() => {\r\n      const params: TrueFalseParams = {\r\n        reverse: false,\r\n      };\r\n      return params;\r\n    })(),\r\n  }\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static TextWideType: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action highlight'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideMin100: ColDef = {\r\n    flex: 1,\r\n    minWidth: 100,\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  }\r\n\r\n  static TextWideFlex3: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideActionClass: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n\r\n\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, tap } from 'rxjs';\r\nimport { BaseComponent } from './base.component';\r\nimport { EavLogger } from '../logging/eav-logger';\r\n\r\nconst logThis = false;\r\n\r\n// 2024-06-12 2dm experimental - remove comments if all is good mid of June\r\n// - previously had\r\n// @Directive()   // Needs the @Directive() so the compiler allows OnDestroy to be implemented\r\n// ...then tried this\r\n// @Component({\r\n//   selector: 'app-base-component-with-child',\r\n//   template: ''\r\n// })\r\n// ...but then added abstract, so I think it doesn't actually need all that\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseWithChildDialogComponent extends BaseComponent implements OnDestroy {\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    public log?: EavLogger\r\n  ) {\r\n    super();\r\n    this.log ??= new EavLogger('BaseComponent', logThis);\r\n  }\r\n\r\n  // 2024-06-12 2dm - don't think this is needed since it's already on the base class\r\n  // ngOnDestroy() {\r\n  //   super.ngOnDestroy();\r\n  // }\r\n\r\n  protected childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n      // tap(() => console.log('2dm ' + 'childDialogClosed$'))\r\n    )\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n  ]\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { Directive, HostListener } from '@angular/core';\r\n\r\nconst logThis = false;\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n  constructor() {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.onClick', event);\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { GlobalConfigService } from '../services/global-config.service';\r\n\r\n@Directive({\r\n  selector: '[appToggleDebug]',\r\n  standalone: true\r\n})\r\nexport class ToggleDebugDirective {\r\n\r\n  constructor(private globalConfigService: GlobalConfigService) { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigService.toggleDebugEnabled();\r\n      window.getSelection().removeAllRanges();\r\n    }\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../services/context';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\nimport { InputTypeStrict } from './input-type-catalog';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputTypeMetadata[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","export const DataTypeCatalog = {\r\n  Boolean: 'Boolean',\r\n  Custom: 'Custom',\r\n  DateTime: 'DateTime',\r\n  Empty: 'Empty',\r\n  Entity: 'Entity',\r\n  Hyperlink: 'Hyperlink',\r\n  Number: 'Number',\r\n  String: 'String',\r\n} as const;\r\n\r\nexport type DataTypeStrict = typeof DataTypeCatalog[keyof typeof DataTypeCatalog];\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(isEqual),\r\n  );\r\n}\r\n","import isEqual from 'lodash-es/isEqual';\r\n\r\nexport class RxHelpers {\r\n\r\n  static boolEquals(x: boolean, y: boolean): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static stringEquals(x: string, y: string): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static valueEquals<T>(x: T, y: T): boolean {\r\n    return x === y;\r\n  }\r\n\r\n  static manyEquals<T>(x: T, y: T): boolean {\r\n    if (x == null || y == null) return x === y;\r\n    const typeOfX = typeof x;\r\n    if (typeOfX !== typeof y) return false;\r\n    if (typeOfX === 'string' || typeOfX === 'number' || typeOfX === 'boolean')\r\n      return x === y;\r\n\r\n    if (Array.isArray(x)) return RxHelpers.arraysEqual(x, y as []);\r\n\r\n    return RxHelpers.objectsEqual(x, y);\r\n  }\r\n\r\n  static objectsEqual<T>(x: T, y: T): boolean {\r\n    if (x == null || y == null) return x === y;\r\n\r\n    const obj1 = x as Record<string, any>;\r\n    const obj2 = y as Record<string, any>;\r\n\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n    if (keys1.length !== keys2.length) return false;\r\n\r\n    const equal = keys1.every(key1 => {\r\n      if (!obj2.hasOwnProperty(key1)) return false;\r\n\r\n      return obj1[key1] === obj2[key1];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  static arraysEqual<T>(x: T[], y: T[]): boolean {\r\n    if (x == null || y == null) return x === y;\r\n\r\n    if (x.length !== y.length) return false;\r\n\r\n    const equal = x.every((item, index) => {\r\n      return x[index] === y[index];\r\n    });\r\n\r\n    return equal;\r\n  }\r\n\r\n  /** used as .filter(distinct), filters array to only have distinct values */\r\n  static distinct<T>(value: T, index: number, array: T[]): boolean {\r\n    return array.indexOf(value) === index;\r\n  }\r\n\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\nimport { webApiEntityRoot } from './entity.service';\r\n\r\n@Injectable()\r\nexport class EntityEditService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Injectable, computed, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\nimport { keyDebug } from '../constants/session.constants';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalConfigService {\r\n\r\n  private debugState = signal<GlobalConfig>(null);\r\n\r\n  isDebug = computed(() => !!this.debugState()?.allowDebugMode && !!this.debugState()?.debugEnabled);\r\n\r\n  /** This observable is a left-over, try to remove once more is refactored */\r\n  debugEnabled$ = toObservable(this.isDebug);\r\n\r\n  constructor(private snackBar: MatSnackBar) {\r\n    const initial: GlobalConfig = {\r\n      id: 0,\r\n      debugEnabled: sessionStorage.getItem(keyDebug) === 'true',\r\n      allowDebugMode: false,\r\n    };\r\n    this.debugState.set(initial);\r\n  }\r\n\r\n  allowDebug(allow: boolean): void {\r\n    const oldConfig = this.debugState();\r\n    if (oldConfig.allowDebugMode === allow)\r\n      return;\r\n\r\n    const newConfig: GlobalConfig = {\r\n      ...oldConfig,\r\n      allowDebugMode: allow,\r\n    };\r\n    this.debugState.set(newConfig);\r\n  }\r\n\r\n  toggleDebugEnabled(): void {\r\n    const oldConfig = this.debugState();\r\n    if (!oldConfig.allowDebugMode) {\r\n      this.snackBar.open('You do not have permissions to enter developer mode', null, { duration: 3000 });\r\n      return;\r\n    }\r\n\r\n    const newConfig: GlobalConfig = {\r\n      ...oldConfig,\r\n      debugEnabled: !oldConfig.debugEnabled,\r\n    };\r\n    this.debugState.set(newConfig);\r\n    this.snackBar.open(newConfig.debugEnabled ? 'developer mode on' : 'developer mode off', null, { duration: 3000 });\r\n  }\r\n}\r\n\r\ninterface GlobalConfig {\r\n  id: 0;\r\n  debugEnabled: boolean;\r\n  allowDebugMode: boolean;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { ServiceBase } from './service-base';\r\nimport { Context } from './context';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\n\r\nconst logThis = false;\r\n\r\n@Injectable()\r\nexport class QueryService extends ServiceBase {\r\n\r\n  constructor(private http: HttpClient, private context: Context) {\r\n    super(new EavLogger('QueryService', logThis));\r\n  }\r\n\r\n  getAvailableEntities(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.a('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.a(`getEntities(${log})`, { contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","/**\n * @license Angular v17.3.11\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { assertInInjectionContext, inject, DestroyRef, ɵRuntimeError, ɵgetOutputDestroyRef, Injector, effect, untracked, assertNotInReactiveContext, signal, computed } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Operator which completes the Observable when the calling context (component, directive, service,\n * etc) is destroyed.\n *\n * @param destroyRef optionally, the `DestroyRef` representing the current context. This can be\n *     passed explicitly to use `takeUntilDestroyed` outside of an [injection\n * context](guide/dependency-injection-context). Otherwise, the current `DestroyRef` is injected.\n *\n * @developerPreview\n */\nfunction takeUntilDestroyed(destroyRef) {\n    if (!destroyRef) {\n        assertInInjectionContext(takeUntilDestroyed);\n        destroyRef = inject(DestroyRef);\n    }\n    const destroyed$ = new Observable(observer => {\n        const unregisterFn = destroyRef.onDestroy(observer.next.bind(observer));\n        return unregisterFn;\n    });\n    return (source) => {\n        return source.pipe(takeUntil(destroyed$));\n    };\n}\n\n/**\n * Implementation of `OutputRef` that emits values from\n * an RxJS observable source.\n *\n * @internal\n */\nclass OutputFromObservableRef {\n    constructor(source) {\n        this.source = source;\n        this.destroyed = false;\n        this.destroyRef = inject(DestroyRef);\n        this.destroyRef.onDestroy(() => {\n            this.destroyed = true;\n        });\n    }\n    subscribe(callbackFn) {\n        if (this.destroyed) {\n            throw new ɵRuntimeError(953 /* ɵRuntimeErrorCode.OUTPUT_REF_DESTROYED */, ngDevMode &&\n                'Unexpected subscription to destroyed `OutputRef`. ' +\n                    'The owning directive/component is destroyed.');\n        }\n        // Stop yielding more values when the directive/component is already destroyed.\n        const subscription = this.source.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n            next: value => callbackFn(value),\n        });\n        return {\n            unsubscribe: () => subscription.unsubscribe(),\n        };\n    }\n}\n/**\n * Declares an Angular output that is using an RxJS observable as a source\n * for events dispatched to parent subscribers.\n *\n * The behavior for an observable as source is defined as followed:\n *    1. New values are forwarded to the Angular output (next notifications).\n *    2. Errors notifications are not handled by Angular. You need to handle these manually.\n *       For example by using `catchError`.\n *    3. Completion notifications stop the output from emitting new values.\n *\n * @usageNotes\n * Initialize an output in your directive by declaring a\n * class field and initializing it with the `outputFromObservable()` function.\n *\n * ```ts\n * @Directive({..})\n * export class MyDir {\n *   nameChange$ = <some-observable>;\n *   nameChange = outputFromObservable(this.nameChange$);\n * }\n * ```\n *\n * @developerPreview\n */\nfunction outputFromObservable(observable, opts) {\n    ngDevMode && assertInInjectionContext(outputFromObservable);\n    return new OutputFromObservableRef(observable);\n}\n\n/**\n * Converts an Angular output declared via `output()` or `outputFromObservable()`\n * to an observable.\n *\n * You can subscribe to the output via `Observable.subscribe` then.\n *\n * @developerPreview\n */\nfunction outputToObservable(ref) {\n    const destroyRef = ɵgetOutputDestroyRef(ref);\n    return new Observable(observer => {\n        // Complete the observable upon directive/component destroy.\n        // Note: May be `undefined` if an `EventEmitter` is declared outside\n        // of an injection context.\n        destroyRef?.onDestroy(() => observer.complete());\n        const subscription = ref.subscribe(v => observer.next(v));\n        return () => subscription.unsubscribe();\n    });\n}\n\n/**\n * Exposes the value of an Angular `Signal` as an RxJS `Observable`.\n *\n * The signal's value will be propagated into the `Observable`'s subscribers using an `effect`.\n *\n * `toObservable` must be called in an injection context unless an injector is provided via options.\n *\n * @developerPreview\n */\nfunction toObservable(source, options) {\n    !options?.injector && assertInInjectionContext(toObservable);\n    const injector = options?.injector ?? inject(Injector);\n    const subject = new ReplaySubject(1);\n    const watcher = effect(() => {\n        let value;\n        try {\n            value = source();\n        }\n        catch (err) {\n            untracked(() => subject.error(err));\n            return;\n        }\n        untracked(() => subject.next(value));\n    }, { injector, manualCleanup: true });\n    injector.get(DestroyRef).onDestroy(() => {\n        watcher.destroy();\n        subject.complete();\n    });\n    return subject.asObservable();\n}\n\n/**\n * Get the current value of an `Observable` as a reactive `Signal`.\n *\n * `toSignal` returns a `Signal` which provides synchronous reactive access to values produced\n * by the given `Observable`, by subscribing to that `Observable`. The returned `Signal` will always\n * have the most recent value emitted by the subscription, and will throw an error if the\n * `Observable` errors.\n *\n * With `requireSync` set to `true`, `toSignal` will assert that the `Observable` produces a value\n * immediately upon subscription. No `initialValue` is needed in this case, and the returned signal\n * does not include an `undefined` type.\n *\n * By default, the subscription will be automatically cleaned up when the current [injection\n * context](/guide/dependency-injection-context) is destroyed. For example, when `toSignal` is\n * called during the construction of a component, the subscription will be cleaned up when the\n * component is destroyed. If an injection context is not available, an explicit `Injector` can be\n * passed instead.\n *\n * If the subscription should persist until the `Observable` itself completes, the `manualCleanup`\n * option can be specified instead, which disables the automatic subscription teardown. No injection\n * context is needed in this configuration as well.\n *\n * @developerPreview\n */\nfunction toSignal(source, options) {\n    ngDevMode &&\n        assertNotInReactiveContext(toSignal, 'Invoking `toSignal` causes new subscriptions every time. ' +\n            'Consider moving `toSignal` outside of the reactive context and read the signal value where needed.');\n    const requiresCleanup = !options?.manualCleanup;\n    requiresCleanup && !options?.injector && assertInInjectionContext(toSignal);\n    const cleanupRef = requiresCleanup ? options?.injector?.get(DestroyRef) ?? inject(DestroyRef) : null;\n    // Note: T is the Observable value type, and U is the initial value type. They don't have to be\n    // the same - the returned signal gives values of type `T`.\n    let state;\n    if (options?.requireSync) {\n        // Initially the signal is in a `NoValue` state.\n        state = signal({ kind: 0 /* StateKind.NoValue */ });\n    }\n    else {\n        // If an initial value was passed, use it. Otherwise, use `undefined` as the initial value.\n        state = signal({ kind: 1 /* StateKind.Value */, value: options?.initialValue });\n    }\n    // Note: This code cannot run inside a reactive context (see assertion above). If we'd support\n    // this, we would subscribe to the observable outside of the current reactive context, avoiding\n    // that side-effect signal reads/writes are attribute to the current consumer. The current\n    // consumer only needs to be notified when the `state` signal changes through the observable\n    // subscription. Additional context (related to async pipe):\n    // https://github.com/angular/angular/pull/50522.\n    const sub = source.subscribe({\n        next: value => state.set({ kind: 1 /* StateKind.Value */, value }),\n        error: error => {\n            if (options?.rejectErrors) {\n                // Kick the error back to RxJS. It will be caught and rethrown in a macrotask, which causes\n                // the error to end up as an uncaught exception.\n                throw error;\n            }\n            state.set({ kind: 2 /* StateKind.Error */, error });\n        },\n        // Completion of the Observable is meaningless to the signal. Signals don't have a concept of\n        // \"complete\".\n    });\n    if (ngDevMode && options?.requireSync && state().kind === 0 /* StateKind.NoValue */) {\n        throw new ɵRuntimeError(601 /* ɵRuntimeErrorCode.REQUIRE_SYNC_WITHOUT_SYNC_EMIT */, '`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.');\n    }\n    // Unsubscribe when the current context is destroyed, if requested.\n    cleanupRef?.onDestroy(sub.unsubscribe.bind(sub));\n    // The actual returned signal is a `computed` of the `State` signal, which maps the various states\n    // to either values or errors.\n    return computed(() => {\n        const current = state();\n        switch (current.kind) {\n            case 1 /* StateKind.Value */:\n                return current.value;\n            case 2 /* StateKind.Error */:\n                throw current.error;\n            case 0 /* StateKind.NoValue */:\n                // This shouldn't really happen because the error is thrown on creation.\n                // TODO(alxhub): use a RuntimeError when we finalize the error semantics\n                throw new ɵRuntimeError(601 /* ɵRuntimeErrorCode.REQUIRE_SYNC_WITHOUT_SYNC_EMIT */, '`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.');\n        }\n    });\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { outputFromObservable, outputToObservable, takeUntilDestroyed, toObservable, toSignal };\n"],"x_google_ignoreList":[44]}