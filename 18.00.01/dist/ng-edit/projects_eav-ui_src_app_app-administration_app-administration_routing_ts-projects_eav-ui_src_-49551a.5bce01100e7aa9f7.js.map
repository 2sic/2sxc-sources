{"version":3,"file":"projects_eav-ui_src_app_app-administration_app-administration_routing_ts-projects_eav-ui_src_-49551a.5bce01100e7aa9f7.js","mappings":"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","names":["appAdministrationDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","AppAdminMainComponent","Promise","all","__webpack_require__","e","then","bind","analyzeSettingsDialog","AnalyzeSettingsComponent","settingsItemDetailsDialog","SettingsItemDetailsComponent","editContentTypeDialog","EditContentTypeComponent","importContentTypeDialog","ImportContentTypeComponent","importQueryDialog","ImportQueryComponent","importViewDialog","ImportViewComponent","languagePermissionsDialog","LanguagePermissionsComponent","viewsUsageDialog","ViewsUsageComponent","_c0","_c1","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","TransitionCheckState","Init","Checked","Unchecked","Indeterminate","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatCheckbox","multi","MatCheckboxChange","nextUniqueId","defaults","focus","this","_inputElement","nativeElement","_createChangeEvent","isChecked","event","source","checked","_getAnimationTargetElement","inputId","id","_uniqueId","constructor","_elementRef","_changeDetectorRef","_ngZone","tabIndex","_animationMode","_options","_animationClasses","uncheckedToChecked","uncheckedToIndeterminate","checkedToUnchecked","checkedToIndeterminate","indeterminateToChecked","indeterminateToUnchecked","ariaLabel","ariaLabelledby","labelPosition","change","EventEmitter","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_validatorChangeFn","_checked","_disabled","_indeterminate","parseInt","ngOnChanges","changes","required","ngAfterViewInit","_syncIndeterminate","value","markForCheck","disabled","indeterminate","changed","_transitionCheckState","emit","_isRippleDisabled","disableRipple","_onLabelTextChange","detectChanges","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","validate","control","registerOnValidatorChange","newState","oldState","element","classList","remove","_getAnimationClassForCheckStateTransition","length","add","animationClass","runOutsideAngular","setTimeout","_emitChangeEvent","toggle","_handleInputClick","resolve","_onInteractionEvent","stopPropagation","_onBlur","nativeCheckbox","_onInputClick","_onTouchTargetClick","_preventBubblingFromLabel","target","_labelElement","contains","static","ɵfac","t","i0","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","viewQuery","rf","ctx","MatRipple","_t","first","ripple","hostAttrs","hostVars","hostBindings","inputs","None","ariaDescribedby","HasDecoratorInputTransform","booleanAttribute","undefined","numberAttribute","outputs","exportAs","standalone","features","NG_VALIDATORS","ngContentSelectors","decls","vars","consts","template","_r1","$event","checkbox_r2","dependencies","_MatInternalFormField","styles","encapsulation","changeDetection","MatCheckboxModule","ɵmod","ɵinj","imports","MatCommonModule","ExportAppComponent","exportAppService","transient","ExportAppService","appInfo","signal","includeContentGroups","model","resetAppGuid","assetsAdam","assetsSite","downloadUrl","computed","exportAppUrl","ngOnInit","getAppInfo","subscribe","set","core","VBU","SignalBased","tmp_1_0","Name","tmp_2_0","Guid","tmp_3_0","Version","tmp_4_0","EntitiesCount","tmp_5_0","LanguagesCount","tmp_6_0","TemplatesCount","HasTokenTemplates","HasRazorTemplates","tmp_7_0","TransferableFilesCount","tmp_8_0","FilesCount","i1","FormsModule","i2","MatDialogActions","MatButtonModule","i3","MatIconModule","i4","scopeOption_r3","template_r7","_r6","$implicit","_export","Id","ExportAppPartsComponent_Conditional_0_Conditional_27_For_5_Conditional_5_For_4_Template","contentType_r5","Templates","entity_r9","_r8","Title","ExportAppPartsComponent_Conditional_0_Conditional_27_For_5_Conditional_6_For_4_Template","Entities","_r4","ExportAppPartsComponent_Conditional_0_Conditional_27_For_5_Conditional_5_Template","ExportAppPartsComponent_Conditional_0_Conditional_27_For_5_Conditional_6_Template","template_r11","_r10","ExportAppPartsComponent_Conditional_0_Conditional_27_For_5_Template","ExportAppPartsComponent_Conditional_0_Conditional_27_For_10_Template","ctx_r1","contentInfo","ContentTypes","TemplatesWithoutContentTypes","changeScope","ExportAppPartsComponent_Conditional_0_For_17_Template","unlockScope","ExportAppPartsComponent_Conditional_0_Conditional_27_Template","exportAppParts","exportScope","lockScope","scopeOptions","dropdownInsertValue","vm_r12","loading","isExporting","ExportAppPartsComponent","hostClass","exportAppPartsService","ExportAppPartsService","contentTypesService","ContentTypesService","eavConstants","scopes","default","loading$","BehaviorSubject","isExporting$","viewModel$","combineLatest","pipe","map","fetchScopes","fetchContentInfo","ngOnDestroy","complete","next","contentTypeIds","selectedContentTypes","contentType","templateIds","selectedTemplates","entityIds","selectedEntities","entity","concat","exportParts","newScope","prompt","find","option","unshift","getScopes","getContentInfo","filter","entities","templates","ExportAppPartsComponent_Conditional_0_Template","tmp_0_0","MatFormFieldModule","MatSelectModule","MatOptionModule","i5","i6","i7","AsyncPipe","FieldHintComponent","ClickStopPropagationDirective","TippyDirective","MatDialogModule","file_r4","message_r5","MessageType","FileUploadMessageTypes","Warning","Success","Error","Text","ImportAppPartsComponent_Conditional_0_Conditional_19_Conditional_1_Template","ImportAppPartsComponent_Conditional_0_Conditional_19_Conditional_2_Template","ImportAppPartsComponent_Conditional_0_Conditional_19_For_4_Template","vm_r6","result","Messages","_r7","upload","files","uploading","filesDropped","ImportAppPartsComponent_Conditional_0_Conditional_5_Template","fileInput_r3","click","ImportAppPartsComponent_Conditional_0_Conditional_14_Template","ImportAppPartsComponent_Conditional_0_For_16_Template","filesChanged","ImportAppPartsComponent_Conditional_0_Conditional_19_Template","ImportAppPartsComponent_Conditional_0_Conditional_20_Template","importData","allowedFileTypes","title","description","ImportAppPartsComponent","BaseComponent","snackBar","installSettingsService","installerService","sanitizer","context","changeDetectorRef","super","importAppPartsService","ImportAppPartsService","uploadType","UploadTypes","AppPart","uploading$","files$","result$","showAppCatalog$","showProgress","remoteInstallerUrl","ready","upload$","importAppParts","alreadyProcessing","messages$","fromEvent","window","evt","origin","JSON","parse","data","console","error","Number","moduleId","subscriptions","settings$","settings","bypassSecurityTrustResourceUrl","remoteUrl","showAppCatalog","loadGettingStarted","action","tap","winFrame","installerWindow","specsMsg","installedApps","rules","app","appGuid","guid","mode","url","specsJson","stringify","contentWindow","postMessage","log","Object","values","packages","msg","reduce","c","displayName","confirm","switchMap","installPackages","p","currentPackage","alert","top","location","reload","catchError","Message","message","of","setFiles","Array","from","take","open","duration","multiple","slice","ImportAppPartsComponent_Conditional_0_Template","NgClass","MatProgressSpinnerModule","SafeHtmlPipe","DragAndDropDirective","i8","i9","exportAppXml","resetApp","_r3","AppStateComponent","BaseWithChildDialogComponent","router","route","appDialogConfigService","appStateAdvanced","getCurrent$","dialogSettings","dismiss","withFiles","exportForVersionControl","AppStateComponent_Conditional_13_Template","AppStateComponent_Conditional_14_Template","AppStateComponent_Conditional_15_Template","AppStateComponent_Conditional_16_Template","MatCardModule","MatSlideToggleModule","FeatureTextInfoComponent","appAdministrationRoutes","path","component","DialogEntryComponent","dialog","children","redirectTo","pathMatch","loadComponent","mod","GettingStartedComponent","breadcrumb","DataComponent","loadChildren","m","contentItemsRoutes","EditRoutesSubItems","GoToMetadata","getRoutes","GoToDevRest","contentTypeFieldsRoutes","ContentExportRoutes","contentImportRoutes","GoToPermissions","GoToCopilot","CopilotPageComponent","CopilotSpecs","routeData","DataRestApiComponent","paramTypeName","DevRestDataComponent","QueriesComponent","EditRoutesSubItemsNoHistory","routeQuery","QueriesRestApiComponent","paramQuery","DevRestQueryComponent","ViewsComponent","views","WebApiComponent","webApi","routeWebApi","WebApiRestApiComponent","paramApiPath","DevRestApiComponent","AppConfigurationComponent","intro","heading","teaser","outputType","routeDefinition","part","icon","svgIcon","FeatureDetailService","http","dnnContext","getFeatureDetails","featureNameId","get","$2sxc","apiUrl","webApiRoot","params","nameId","_angular_core__WEBPACK_IMPORTED_MODULE_0__","jDH","id_r3","_r2","ctx_r3","copyToClipboard","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","feature_r5","findOutMore","link","closeDialog","isEnabled","FeatureInfoDialogComponent","dialogData","dialogRef","featureDetailService","text","close","MAT_DIALOG_DATA","FeatureInfoDialogComponent_Conditional_0_Template","TranslateModule","FeatureComponentProviders","FeatureComponentBase","featureNameId$","showIf","showIf$","inject","MatDialog","viewContainerRef","ViewContainerRef","ChangeDetectorRef","featuresService","FeaturesService","feature$","featName","get$","show$","feat","openDialog","openFeatureDialog","FsC","featureId","autoFocus","width","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","NgTemplateOutlet","onClick"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/app-admin-main/app-admin-main.dialog-config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-content-type/import-content-type-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-query/import-query-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/import-view/import-view-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/language-permissions/language-permissions-dialog.config.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-dialog.config.ts","./node_modules/@angular/material/fesm2022/checkbox.mjs","./projects/eav-ui/src/app/app-administration/app-menu/export-app/export-app.component.ts","./projects/eav-ui/src/app/app-administration/app-menu/export-app/export-app.component.html","./projects/eav-ui/src/app/app-administration/app-menu/export-app-parts/export-app-parts.component.html","./projects/eav-ui/src/app/app-administration/app-menu/export-app-parts/export-app-parts.component.ts","./projects/eav-ui/src/app/app-administration/app-menu/import-app-parts/import-app-parts.component.html","./projects/eav-ui/src/app/app-administration/app-menu/import-app-parts/import-app-parts.component.ts","./projects/eav-ui/src/app/app-administration/app-menu/app-state/app-state.component.html","./projects/eav-ui/src/app/app-administration/app-menu/app-state/app-state.component.ts","./projects/eav-ui/src/app/app-administration/app-administration.routing.ts","./projects/eav-ui/src/app/app-administration/copilot/copilot-specs.ts","./projects/eav-ui/src/app/app-administration/copilot/go-to-copilot.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts"],"sourcesContent":["import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appAdministrationDialog: DialogConfig = {\r\n  name: 'APP_ADMINISTRATION_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppAdminMainComponent } = await import('./app-admin-main.component');\r\n    return AppAdminMainComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const analyzeSettingsDialog: DialogConfig = {\r\n  name: 'ANALYZE_SETTINGS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AnalyzeSettingsComponent } = await import('./analyze-settings.component');\r\n    return AnalyzeSettingsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../../shared/models/dialog-config.model';\r\n\r\nexport const settingsItemDetailsDialog: DialogConfig = {\r\n  name: 'SETTINGS_ITEM_DETAILS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { SettingsItemDetailsComponent } = await import('./settings-item-details.component');\r\n    return SettingsItemDetailsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeComponent } = await import('./edit-content-type.component');\r\n    return EditContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importContentTypeDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentTypeComponent } = await import('./import-content-type.component');\r\n    return ImportContentTypeComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importQueryDialog: DialogConfig = {\r\n  name: 'IMPORT_QUERY_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportQueryComponent } = await import('./import-query.component');\r\n    return ImportQueryComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const importViewDialog: DialogConfig = {\r\n  name: 'IMPORT_VIEW_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportViewComponent } = await import('./import-view.component');\r\n    return ImportViewComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const languagePermissionsDialog: DialogConfig = {\r\n  name: 'LANGUAGE_PERMISSIONS',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { LanguagePermissionsComponent } = await import('./language-permissions.component');\r\n    return LanguagePermissionsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../../shared/models/dialog-config.model';\r\n\r\nexport const viewsUsageDialog: DialogConfig = {\r\n  name: 'VIEWS_USAGE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ViewsUsageComponent } = await import('./views-usage.component');\r\n    return ViewsUsageComponent;\r\n  }\r\n};\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n    /** The initial state of the component before any user interaction. */\n    TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n    /** The state representing the component when it's becoming checked. */\n    TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n    /** The state representing the component when it's becoming unchecked. */\n    TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n    /** The state representing the component when it's becoming indeterminate. */\n    TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n}\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n    /** Focuses the checkbox. */\n    focus() {\n        this._inputElement.nativeElement.focus();\n    }\n    /** Creates the change event that will be emitted by the checkbox. */\n    _createChangeEvent(isChecked) {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    /** Gets the element on which to add the animation CSS classes. */\n    _getAnimationTargetElement() {\n        return this._inputElement?.nativeElement;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /** CSS classes to add when transitioning between the different checkbox states. */\n        this._animationClasses = {\n            uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n            uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n            checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n            checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n            indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n            indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked',\n        };\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = TransitionCheckState.Init;\n        this._controlValueAccessorChangeFn = () => { };\n        this._validatorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.id = this._uniqueId = `mat-mdc-checkbox-${++nextUniqueId}`;\n    }\n    ngOnChanges(changes) {\n        if (changes['required']) {\n            this._validatorChangeFn();\n        }\n    }\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the checkbox is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            }\n            else {\n                this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    // Implemented as a part of Validator.\n    validate(control) {\n        return this.required && control.value !== true ? { 'required': true } : null;\n    }\n    // Implemented as a part of Validator.\n    registerOnValidatorChange(fn) {\n        this._validatorChangeFn = fn;\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._getAnimationTargetElement();\n        if (oldState === newState || !element) {\n            return;\n        }\n        if (this._currentAnimationClass) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n        const clickAction = this._options?.clickAction;\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _onBlur() {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        switch (oldState) {\n            case TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === TransitionCheckState.Checked) {\n                    return this._animationClasses.uncheckedToChecked;\n                }\n                else if (newState == TransitionCheckState.Indeterminate) {\n                    return this._checked\n                        ? this._animationClasses.checkedToIndeterminate\n                        : this._animationClasses.uncheckedToIndeterminate;\n                }\n                break;\n            case TransitionCheckState.Unchecked:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.uncheckedToChecked\n                    : this._animationClasses.uncheckedToIndeterminate;\n            case TransitionCheckState.Checked:\n                return newState === TransitionCheckState.Unchecked\n                    ? this._animationClasses.checkedToUnchecked\n                    : this._animationClasses.checkedToIndeterminate;\n            case TransitionCheckState.Indeterminate:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.indeterminateToChecked\n                    : this._animationClasses.indeterminateToUnchecked;\n        }\n        return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n    _onInputClick() {\n        this._handleInputClick();\n    }\n    _onTouchTargetClick() {\n        this._handleInputClick();\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /**\n     *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n     *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n     *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n     *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n     *  bubbles when the label is clicked.\n     */\n    _preventBubblingFromLabel(event) {\n        if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n            event.stopPropagation();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatCheckbox, isStandalone: true, selector: \"mat-checkbox\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], id: \"id\", required: [\"required\", \"required\", booleanAttribute], labelPosition: \"labelPosition\", name: \"name\", value: \"value\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? undefined : numberAttribute(value))], color: \"color\", checked: [\"checked\", \"checked\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], indeterminate: [\"indeterminate\", \"indeterminate\", booleanAttribute] }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, host: { properties: { \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\", \"class.mdc-checkbox--disabled\": \"disabled\", \"id\": \"id\", \"class.mat-mdc-checkbox-disabled\": \"disabled\", \"class.mat-mdc-checkbox-checked\": \"checked\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"mat-accent\\\"\" }, classAttribute: \"mat-mdc-checkbox\" }, providers: [\n            MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR,\n            {\n                provide: NG_VALIDATORS,\n                useExisting: MatCheckbox,\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_labelElement\", first: true, predicate: [\"label\"], descendants: true }, { propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matCheckbox\"], usesOnChanges: true, ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\"\\n         #label\\n         [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', host: {\n                        'class': 'mat-mdc-checkbox',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                        '[class.mdc-checkbox--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Add classes that users can use to more easily target disabled or checked checkboxes.\n                        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n                        '[class.mat-mdc-checkbox-checked]': 'checked',\n                        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"',\n                    }, providers: [\n                        MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR,\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: MatCheckbox,\n                            multi: true,\n                        },\n                    ], exportAs: 'matCheckbox', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\"\\n         #label\\n         [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _labelElement: [{\n                type: ViewChild,\n                args: ['label']\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? undefined : numberAttribute(value)) }]\n            }], color: [{\n                type: Input\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], indeterminate: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatCheckboxRequiredValidator, isStandalone: true, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatCheckboxRequiredValidatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, imports: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCheckboxRequiredValidator],\n                    exports: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule], exports: [MatCheckbox, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCheckbox, MatCommonModule],\n                    exports: [MatCheckbox, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxRequiredValidatorModule };\n","import { Component, computed, HostBinding, model, OnInit, signal } from '@angular/core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { AppInfo } from '../../models/app-info.model';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { transient } from '../../../core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-export-app',\r\n  templateUrl: './export-app.component.html',\r\n  styleUrls: ['./export-app.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class ExportAppComponent implements OnInit {\r\n\r\n  private exportAppService = transient(ExportAppService);\r\n\r\n  appInfo = signal<AppInfo>(null);\r\n\r\n  ngOnInit() {\r\n    this.exportAppService.getAppInfo().subscribe(appInfo => this.appInfo.set(appInfo));\r\n  }\r\n\r\n  // Use Signals\r\n  includeContentGroups = model(false);\r\n  resetAppGuid = model(false);\r\n  assetsAdam = model(true);\r\n  assetsSite = model(true);\r\n\r\n  downloadUrl = computed(() => this.exportAppService.exportAppUrl()\r\n   + `&includeContentGroups=${this.includeContentGroups()}&resetAppGuid=${this.resetAppGuid()}`\r\n   + `&assetsAdam=${this.assetsAdam()}&assetsSite=${this.assetsSite()}`\r\n  );\r\n\r\n}\r\n","<div class=\"outer-container-app\">\r\n  <h3>\r\n    Export app\r\n    {{ appInfo() == null ? '(loading details...)' : '' }}\r\n  </h3>\r\n  <div class=\"form-height\">\r\n    <p>\r\n      Pack the entire app to a <em>zip</em> folder which can be imported again to another site.\r\n      For further help visit <a href=\"https://2sxc.org/en/help?tag=export-app\" target=\"_blank\">2sxc Help</a>.\r\n    </p>\r\n\r\n    <p class=\"eav-app-info__title\">\r\n      Specs\r\n    </p>\r\n    <ul class=\"eav-app-info__content\">\r\n      <li>Name: {{ appInfo()?.Name }}</li>\r\n      <li>Guid: {{ appInfo()?.Guid }}</li>\r\n      <li>Version: {{ appInfo()?.Version }}</li>\r\n    </ul>\r\n\r\n    <p class=\"eav-app-info__title\">\r\n      Contains\r\n    </p>\r\n    <ul class=\"eav-app-info__content\">\r\n      <li>{{ appInfo()?.EntitiesCount }} entities</li>\r\n      <li>{{ appInfo()?.LanguagesCount }} languages</li>\r\n      <li>\r\n        {{ appInfo()?.TemplatesCount }} templates (Token: {{ appInfo()?.HasTokenTemplates }}, Razor:\r\n        {{ appInfo()?.HasRazorTemplates }})\r\n      </li>\r\n      <li>{{ appInfo()?.TransferableFilesCount }} files to export</li>\r\n      <li>{{ appInfo()?.FilesCount }} files in the app folder totally</li>\r\n    </ul>\r\n\r\n    <p class=\"eav-app-info__title\">\r\n      Advanced\r\n    </p>\r\n    <ul class=\"checkboxes\">\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"includeContentGroups\" [disabled]=\"resetAppGuid()\">\r\n          <br>\r\n          Include all content-groups to re-import the app in an exact copy of this site.\r\n          <br>\r\n          Only select this option when you copy an entire DNN site.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"resetAppGuid\" [disabled]=\"includeContentGroups()\">\r\n          <br>\r\n          Reset the app GUID to zero.\r\n          <br>\r\n          You only need this option for special tutorial apps, and usually must not select it.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"assetsAdam\">\r\n          <br>\r\n          Include all ADAM assets.\r\n          <br>\r\n          This will include all App files in the <code>/adam</code> folder in your portal.\r\n        </mat-checkbox>\r\n      </li>\r\n      <li>\r\n        <mat-checkbox [(ngModel)]=\"assetsSite\">\r\n          <br>\r\n          Include all Site assets like images which are not in ADAM.\r\n          <br>\r\n          This will include all files used by your entities (eg. in link fields) which are not in you App-ADAM folder.\r\n        </mat-checkbox>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <a mat-button class=\"eav-button__with-icon\" [href]=\"downloadUrl()\" download>\r\n      <mat-icon class=\"eav-icon\">deployed_code_update</mat-icon>\r\n      <span>Download</span>\r\n    </a>\r\n  </mat-dialog-actions>\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"outer-container-app\">\r\n  <h3>Export Content and Templates from this App</h3>\r\n  <div class=\"form-height\">\r\n    <p>\r\n      To export Content-Types, Queries, Views or Data, use the respective tabs.\r\n    </p>\r\n    <p>\r\n      This is an advanced feature to export parts of the app.\r\n      The export will create an xml file which can be imported into another site or app.\r\n      To export the entire content of the app (for example when duplicating the entire site), go to the app export.\r\n      For further help visit <a href=\"https://2sxc.org/en/help?tag=export\" target=\"_blank\">2sxc Help</a>.\r\n    </p>\r\n    <div class=\"eav-edit-input\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n        <mat-label>Scope</mat-label>\r\n        <mat-select [ngModel]=\"exportScope\" name=\"Scope\" [disabled]=\"lockScope\" (ngModelChange)=\"changeScope($event)\">\r\n          @for (scopeOption of scopeOptions; track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.value\">\r\n            {{ scopeOption.name }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n        </mat-select>\r\n        <button mat-icon-button matTextSuffix [tippy]=\"lockScope ? 'Unlock' : 'Lock'\">\r\n          <mat-icon appClickStopPropagation (click)=\"unlockScope()\">\r\n            {{ lockScope ? 'lock' : 'lock_open' }}\r\n          </mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <app-field-hint>\r\n        The scope should almost never be changed -\r\n        <a appClickStopPropagation href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\">see help</a>\r\n      </app-field-hint>\r\n    </div>\r\n    @if (contentInfo) {\r\n    <div>\r\n      <ul class=\"eav-content-info__list eav-content-info__base\">\r\n        <p class=\"eav-content-info__title\">Content Types</p>\r\n        @for (contentType of contentInfo.ContentTypes; track contentType) {\r\n        <li class=\"eav-content-info__item\">\r\n          <div class=\"eav-option-box\">\r\n            <mat-checkbox [(ngModel)]=\"contentType._export\">\r\n              <span class=\"eav-option-box__text\">{{ contentType.Name }} ({{ contentType.Id }})</span>\r\n            </mat-checkbox>\r\n          </div>\r\n          @if (contentType.Templates.length > 0) {\r\n          <ul class=\"eav-content-info__list\">\r\n            <p class=\"eav-content-info__subtitle\">Templates</p>\r\n            @for (template of contentType.Templates; track template) {\r\n            <li class=\"eav-content-info__item\">\r\n              <div class=\"eav-option-box\">\r\n                <mat-checkbox [(ngModel)]=\"template._export\">\r\n                  <span class=\"eav-option-box__text\">{{ template.Name }} ({{ template.Id }})</span>\r\n                </mat-checkbox>\r\n              </div>\r\n            </li>\r\n            }\r\n          </ul>\r\n          }\r\n          @if (contentType.Entities.length > 0) {\r\n          <ul class=\"eav-content-info__list\">\r\n            <p class=\"eav-content-info__subtitle\">Entities</p>\r\n            @for (entity of contentType.Entities; track entity) {\r\n            <li class=\"eav-content-info__item\">\r\n              <div class=\"eav-option-box\">\r\n                <mat-checkbox [(ngModel)]=\"entity._export\">\r\n                  <span class=\"eav-option-box__text\">{{ entity.Title }} ({{ entity.Id }})</span>\r\n                </mat-checkbox>\r\n              </div>\r\n            </li>\r\n            }\r\n          </ul>\r\n          }\r\n        </li>\r\n        }\r\n      </ul>\r\n      <ul class=\"eav-content-info__list eav-content-info__base\">\r\n        <p class=\"eav-content-info__title\">Templates Without Content Types</p>\r\n        @for (template of contentInfo.TemplatesWithoutContentTypes; track template) {\r\n        <li class=\"eav-content-info__item\">\r\n          <div class=\"eav-option-box\">\r\n            <mat-checkbox [(ngModel)]=\"template._export\">\r\n              <span class=\"eav-option-box__text\">{{ template.Name }} ({{ template.Id }})</span>\r\n            </mat-checkbox>\r\n          </div>\r\n        </li>\r\n        }\r\n      </ul>\r\n    </div>\r\n    }\r\n  </div>\r\n\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Export selected Parts\"\r\n      [disabled]=\"vm.loading || vm.isExporting\" (click)=\"exportAppParts()\">\r\n      <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n      <span>Export Parts</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n}\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MatDialogActions, MatDialogModule } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { dropdownInsertValue } from '../../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ContentInfo, ContentInfoEntity, ContentInfoTemplate } from '../../models/content-info.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\nimport { ExportAppPartsService } from '../../services/export-app-parts.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-export-app-parts',\r\n  templateUrl: './export-app-parts.component.html',\r\n  styleUrls: ['./export-app-parts.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    MatDialogModule,\r\n  ],\r\n})\r\nexport class ExportAppPartsComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  private exportAppPartsService = transient(ExportAppPartsService);\r\n  private contentTypesService = transient(ContentTypesService);\r\n\r\n  contentInfo: ContentInfo;\r\n  exportScope = eavConstants.scopes.default.value;\r\n  scopeOptions: ScopeOption[];\r\n  lockScope = true;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n\r\n  private loading$ = new BehaviorSubject(false);\r\n  private isExporting$ = new BehaviorSubject(false);\r\n  viewModel$ = combineLatest([this.loading$, this.isExporting$]).pipe(\r\n    map(([loading, isExporting]) => ({ loading, isExporting })),\r\n  );\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.fetchScopes();\r\n    this.fetchContentInfo();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n    this.isExporting$.complete();\r\n  }\r\n\r\n\r\n\r\n  exportAppParts() {\r\n    this.isExporting$.next(true);\r\n    // spm TODO: maybe optimize these functions to not loop content types and entities multiple times for no reason\r\n    // spm TODO: figure out how to capture window loading to disable export button\r\n    const contentTypeIds = this.selectedContentTypes().map(contentType => contentType.Id);\r\n    const templateIds = this.selectedTemplates().map(template => template.Id);\r\n    let entityIds = this.selectedEntities().map(entity => entity.Id);\r\n    entityIds = entityIds.concat(templateIds);\r\n\r\n    this.exportAppPartsService.exportParts(contentTypeIds, entityIds, templateIds);\r\n    this.isExporting$.next(false);\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n      if (!this.scopeOptions.find(option => option.value === newScope)) {\r\n        const newScopeOption: ScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        this.scopeOptions.unshift(newScopeOption);\r\n      }\r\n    }\r\n    this.exportScope = newScope;\r\n    this.fetchContentInfo();\r\n  }\r\n\r\n  unlockScope() {\r\n    this.lockScope = !this.lockScope;\r\n    if (this.lockScope) {\r\n      this.exportScope = eavConstants.scopes.default.value;\r\n      this.fetchContentInfo();\r\n    }\r\n  }\r\n\r\n  private fetchScopes() {\r\n    this.loading$.next(true);\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      this.scopeOptions = scopes;\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  private fetchContentInfo() {\r\n    this.loading$.next(true);\r\n    this.exportAppPartsService.getContentInfo(this.exportScope).subscribe(contentInfo => {\r\n      this.contentInfo = contentInfo;\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  private selectedContentTypes() {\r\n    return this.contentInfo.ContentTypes.filter(contentType => contentType._export);\r\n  }\r\n\r\n  private selectedEntities() {\r\n    let entities: ContentInfoEntity[] = [];\r\n    for (const contentType of this.contentInfo.ContentTypes) {\r\n      entities = entities.concat(contentType.Entities.filter(entity => entity._export));\r\n    }\r\n    return entities;\r\n  }\r\n\r\n  private selectedTemplates() {\r\n    let templates: ContentInfoTemplate[] = [];\r\n    // The ones with...\r\n    for (const contentType of this.contentInfo.ContentTypes) {\r\n      templates = templates.concat(contentType.Templates.filter(template => template._export));\r\n    }\r\n    // ...and without content types\r\n    templates = templates.concat(this.contentInfo.TemplatesWithoutContentTypes.filter(template => template._export));\r\n    return templates;\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"outer-container-app\" appDragAndDrop [allowedFileTypes]=\"importData.allowedFileTypes\"\r\n  (filesDropped)=\"filesDropped($event)\">\r\n  <div>\r\n    <h3 [innerHtml]=\"importData.title | safeHtml\"></h3>\r\n  </div>\r\n  <div>\r\n    @if (vm.uploading) {\r\n    <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n    }\r\n    <p>To import Content-Types, Queries, Views or Data, use the respective tabs.</p>\r\n    <p>Create an xml containing parts of the app, e.g. content and templates. Import parts from such an xml into this\r\n      app.\r\n    </p>\r\n    <p [innerHtml]=\"importData.description | safeHtml\"></p>\r\n    <div>\r\n      <button class=\"select-btn\" mat-raised-button tippy=\"Open file browser\" [disabled]=\"vm.uploading\"\r\n        (click)=\"fileInput.click()\">\r\n        @if (!vm.files.length) {\r\n        <div>Select or drop file</div>\r\n        }\r\n        @for (file of vm.files; track file) {\r\n        <div>{{ file.name }}</div>\r\n        }\r\n      </button>\r\n      <input #fileInput type=\"file\" multiple (change)=\"filesChanged($event)\" class=\"hide\" />\r\n    </div>\r\n    @if (vm.result) {\r\n    <div class=\"eav-result-container\">\r\n      @if (vm.result.Success) {\r\n      <div class=\"sxc-message sxc-message-info\">\r\n        Upload succeeded. See the messages below for more information.\r\n      </div>\r\n      }\r\n      @if (!vm.result.Success) {\r\n      <div class=\"sxc-message sxc-message-error\">\r\n        Upload failed. See the messages below for more information.\r\n      </div>\r\n      }\r\n      @for (message of vm.result.Messages; track message) {\r\n      <div class=\"sxc-message\" [ngClass]=\"{\r\n                'sxc-message-warning': message.MessageType === FileUploadMessageTypes.Warning,\r\n                'sxc-message-success': message.MessageType === FileUploadMessageTypes.Success,\r\n                'sxc-message-error': message.MessageType === FileUploadMessageTypes.Error\r\n                }\">\r\n        {{ message.Text }}\r\n      </div>\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  @if (!vm.result?.Success) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Import File\"\r\n      [disabled]=\"!vm.files.length || vm.uploading || !!vm.result\" (click)=\"upload()\">\r\n      <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n      <span>Upload</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n  }\r\n</div>\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, HostBinding, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, FileUploadMessageTypes, FileUploadResult, UploadTypes } from '../../../shared/components/file-upload-dialog';\r\nimport { ImportAppPartsService } from '../../services/import-app-parts.service';\r\nimport { transient } from '../../../core';\r\nimport { BehaviorSubject, catchError, combineLatest, filter, fromEvent, map, Observable, of, switchMap, take, tap } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { InstallPackage, InstallSettings, CrossWindowMessage, SpecsForInstaller } from '../../../shared/models/installer-models';\r\nimport { AppInstallSettingsService } from '../../../shared/services/getting-started.service';\r\nimport { InstallerService } from '../../../shared/services/installer.service';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { Context } from '../../../shared/services/context';\r\nimport { NgClass, AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { DragAndDropDirective } from '../../../shared/directives/drag-and-drop.directive';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n@Component({\r\n  selector: 'app-import-app-parts',\r\n  templateUrl: './import-app-parts.component.html',\r\n  styleUrls: ['./import-app-parts.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FileUploadDialogComponent,\r\n    NgClass,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    SafeHtmlPipe,\r\n    AsyncPipe,\r\n    DragAndDropDirective,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class ImportAppPartsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  // Code are copied from file-upload-dialog\r\n\r\n  private importAppPartsService = transient(ImportAppPartsService);\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @ViewChild('installerWindow') installerWindow: ElementRef;\r\n\r\n  uploadType = UploadTypes.AppPart;\r\n\r\n  uploading$ = new BehaviorSubject<boolean>(false);\r\n  files$ = new BehaviorSubject<File[]>([]);\r\n  result$ = new BehaviorSubject<FileUploadResult>(undefined);\r\n  FileUploadMessageTypes = FileUploadMessageTypes;\r\n  UploadTypes = UploadTypes;\r\n  showAppCatalog$ = new BehaviorSubject<boolean>(false);\r\n\r\n  viewModel$: Observable<FileUploadDialogViewModel>;\r\n\r\n  showProgress: boolean = false;\r\n  currentPackage: InstallPackage;\r\n  remoteInstallerUrl = '';\r\n  ready = false;\r\n  settings: InstallSettings;\r\n\r\n  importData: FileUploadDialogData = {\r\n    title: 'Import Content and Templates into this App',\r\n    description: `\r\n    Import content and templates from a content export (zip) or partial export (xml) to this app.\r\n    The entire content of the selected file will be imported.\r\n    If you want to import an entire app, go to the <em>Apps Management</em>.\r\n    For further help visit <a href=\"https://2sxc.org/en/help?tag=import\" target=\"_blank\">2sxc Help</a>.\r\n    `,\r\n    allowedFileTypes: 'xml',\r\n    upload$: (files: File[]) => this.importAppPartsService.importAppParts(files[0]),\r\n  };\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private installSettingsService: AppInstallSettingsService,\r\n    private installerService: InstallerService,\r\n    private sanitizer: DomSanitizer,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(\r\n      this.installSettingsService.settings$.subscribe(settings => {\r\n        this.settings = settings;\r\n        this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(settings.remoteUrl);\r\n        this.ready = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  private alreadyProcessing = false;\r\n  // copied from 2sxc-ui app/installer\r\n  // Initial Observable to monitor messages\r\n  private messages$ = fromEvent(window, 'message').pipe(\r\n    // Ensure only one installation is processed.\r\n    filter(() => !this.alreadyProcessing),\r\n    filter((evt: MessageEvent) => evt.origin === \"https://2sxc.org\"),\r\n    // Get data from event.\r\n    map((evt: MessageEvent) => {\r\n      try {\r\n        return JSON.parse(evt.data) as CrossWindowMessage;\r\n      } catch (e) {\r\n        console.error('error procesing message. Message was ' + evt.data, e);\r\n        return void 0;\r\n      }\r\n    }),\r\n    // Check if data is valid and the moduleID matches\r\n    filter(data => data && Number(data.moduleId) === this.context.moduleId),\r\n  );\r\n\r\n  ngOnInit(): void {\r\n    this.subscriptions.add(\r\n      this.files$.subscribe(() => {\r\n        if (this.result$.value !== undefined) {\r\n          this.result$.next(undefined);\r\n        }\r\n      }),\r\n    );\r\n\r\n    if (this.importData.files != null) {\r\n      this.filesDropped(this.importData.files);\r\n    }\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.uploading$, this.files$, this.result$, this.showAppCatalog$,\r\n    ]).pipe(map(([uploading, files, result, showAppCatalog]) => ({ uploading, files, result, showAppCatalog })));\r\n\r\n    // copied from 2sxc-ui\r\n    this.installSettingsService.loadGettingStarted(false);//this.isContentApp -> from @Input on 2sxc-ui\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    this.subscriptions.add(this.messages$.pipe(\r\n      // Verify it's for this action\r\n      filter(data => data.action === 'specs'),\r\n      // Send message to iframe\r\n      tap(() => {\r\n        const winFrame = this.installerWindow.nativeElement as HTMLIFrameElement;\r\n        const specsMsg: SpecsForInstaller = {\r\n          action: 'specs',\r\n          data: {\r\n            //currently not used\r\n            installedApps: this.settings.installedApps,//.map(app => ((app as InstalledApp).guid)),\r\n            //currently used to forbid already installed apps\r\n            rules: this.settings.installedApps.map(app => ({ target: 'guid', appGuid: app.guid, mode: 'f', url: '' })),//this.settings.rules,\r\n          },\r\n        };\r\n        const specsJson = JSON.stringify(specsMsg);\r\n        winFrame.contentWindow.postMessage(specsJson, '*');\r\n        console.log('debug: just sent specs message:' + specsJson, specsMsg, winFrame);\r\n      }),\r\n    ).subscribe());\r\n\r\n    // copied from 2sxc-ui app/installer\r\n    // Subscription to listen to 'install' messages\r\n    this.subscriptions.add(this.messages$.pipe(\r\n      filter(data => data.action === 'install'),\r\n      // Get packages from data.\r\n      map(data => Object.values(data.packages)),\r\n      // Show confirm dialog.\r\n      filter(packages => {\r\n        const packagesDisplayNames = packages\r\n          .reduce((t, c) => `${t} - ${c.displayName}\\n`, '');\r\n\r\n        const msg = `Do you want to install these packages?\r\n\r\n${packagesDisplayNames}\r\nThis takes about 10 seconds per package. Don't reload the page while it's installing.`;\r\n        return confirm(msg);\r\n      }),\r\n      // Install the packages one at a time\r\n      switchMap(packages => {\r\n        this.alreadyProcessing = true;\r\n        this.showProgress = true;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not shown\r\n        return this.installerService.installPackages(packages, p => this.currentPackage = p);\r\n      }),\r\n      tap(() => {\r\n        this.showProgress = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed (though window reload will remove it anyway) so maybe unnecessary\r\n        alert('Installation complete 👍');\r\n        window.top.location.reload();\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error: ', error);\r\n        this.showProgress = false;\r\n        this.alreadyProcessing = false;\r\n        this.changeDetectorRef.detectChanges(); //without this spinner is not removed\r\n        const errorMsg = `An error occurred: Package ${this.currentPackage.displayName}\r\n\r\n${error.error?.Message ?? error.error?.message ?? ''}\r\n\r\n${error.message}\r\n\r\nPlease try again later or check how to manually install content-templates: https://azing.org/2sxc/r/0O4OymoA`;\r\n        alert(errorMsg);\r\n        return of(error);\r\n      }),\r\n    ).subscribe());\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.uploading$.complete();\r\n    this.files$.complete();\r\n    this.result$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n\r\n  filesDropped(files: File[]): void {\r\n    this.setFiles(files);\r\n    this.upload();\r\n  }\r\n\r\n  filesChanged(event: Event): void {\r\n    const fileList = (event.target as HTMLInputElement).files;\r\n    const files = Array.from(fileList);\r\n    this.setFiles(files);\r\n  }\r\n\r\n  upload(): void {\r\n    this.uploading$.next(true);\r\n    this.subscriptions.add(\r\n      this.importData.upload$(this.files$.value).pipe(take(1)).subscribe({\r\n        next: (result) => {\r\n          this.uploading$.next(false);\r\n          this.result$.next(result);\r\n        },\r\n        error: () => {\r\n          this.uploading$.next(false);\r\n          this.result$.next(undefined);\r\n          this.snackBar.open('Upload failed. Please check console for more information', undefined, { duration: 3000 });\r\n        },\r\n      }),\r\n    );\r\n  }\r\n\r\n  showAppCatalog(): void {\r\n    this.showAppCatalog$.next(!this.showAppCatalog$.value);\r\n  }\r\n\r\n  private setFiles(files: File[]): void {\r\n    if (!this.importData.multiple) {\r\n      files = files.slice(0, 1);\r\n    }\r\n    this.files$.next(files);\r\n  }\r\n}\r\n\r\ninterface FileUploadDialogViewModel {\r\n  uploading: boolean;\r\n  files: File[];\r\n  result: FileUploadResult;\r\n  showAppCatalog: boolean;\r\n}\r\n\r\n","<div class=\"outer-container-app\">\r\n  <!-- Title -->\r\n  <div>\r\n    <div class=\"title-slider\">\r\n      <h3>App-State Versioning</h3>\r\n      <mat-slide-toggle class=\"eav-card-header-toggle\" [(ngModel)]=\"appStateAdvanced\">{{ appStateAdvanced ? \"advanced\"\r\n        : \"basic\" }}</mat-slide-toggle>\r\n    </div>\r\n  </div>\r\n  <!-- Content -->\r\n  <div>\r\n    <p>\r\n      You can save / restore the app with data and configuration in <code>.data/app.xml</code>.\r\n      This file can then also be versioned using git.\r\n    </p>\r\n    @if (appStateAdvanced) {\r\n    <p>\r\n      <br>\r\n      In Advanced mode you can also sync all the site files used by this app.\r\n      They will be placed in a folder inside <code>App_Data</code> and allow sync/restore with git or another server.\r\n    </p>\r\n    }\r\n    @if (appStateAdvanced) {\r\n    <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n    }\r\n  </div>\r\n  <!-- Button -->\r\n  @if (!appStateAdvanced) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(false)\">\r\n        <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n        <span>Save state</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(false)\">\r\n        <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n        <span>Restore state</span>\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n  }\r\n  @if (appStateAdvanced) {\r\n  <mat-dialog-actions class=\"eav-dialog-actions\" style=\"height: 73px;\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(true)\">\r\n        <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n        <span>Save with Assets</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(true)\">\r\n        <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n        <span>Restore with Assets</span>\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n  }\r\n</div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BaseWithChildDialogComponent } from '../../../shared/components/base-with-child-dialog.component';\r\nimport { DialogSettings } from '../../../shared/models/dialog-settings.model';\r\nimport { ExportAppService } from '../../services/export-app.service';\r\nimport { ImportAppPartsService } from '../../services/import-app-parts.service';\r\nimport { AppDialogConfigService } from '../../services/app-dialog-config.service';\r\nimport { FeatureTextInfoComponent } from '../../../features/feature-text-info/feature-text-info.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { transient } from '../../../core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-app-state',\r\n  templateUrl: './app-state.component.html',\r\n  styleUrls: ['./app-state.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    FeatureTextInfoComponent,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n  ],\r\n})\r\nexport class AppStateComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  dialogSettings: DialogSettings;\r\n\r\n  private importAppPartsService = transient(ImportAppPartsService);\r\n  private exportAppService = transient(ExportAppService);\r\n\r\n  public appStateAdvanced = false;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private appDialogConfigService: AppDialogConfigService\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.appDialogConfigService.getCurrent$().subscribe((dialogSettings) => {\r\n      this.dialogSettings = dialogSettings;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.snackBar.dismiss();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  exportAppXml(withFiles: boolean) {\r\n    this.snackBar.open('Exporting...');\r\n    this.exportAppService.exportForVersionControl({ includeContentGroups: true, resetAppGuid: false, withFiles }).subscribe({\r\n      next: result => {\r\n        this.snackBar.open('Export completed into the \\'App_Data\\' folder.', null, { duration: 3000 });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Export failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  resetApp(withFiles: boolean) {\r\n    if (!confirm('Are you sure? All changes since last xml export will be lost')) { return; }\r\n    this.snackBar.open('Resetting...');\r\n    this.importAppPartsService.resetApp(withFiles).subscribe({\r\n      next: result => {\r\n        this.snackBar.open(\r\n          'Reset worked! Since this is a complex operation, please restart the Website to ensure all caches are correct',\r\n          null,\r\n          { duration: 30000 },\r\n        );\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Reset failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { GoToDevRest } from '../dev-rest';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { appAdministrationDialog } from './app-admin-main/app-admin-main.dialog-config';\r\nimport { analyzeSettingsDialog } from './sub-dialogs/analyze-settings/analyze-settings-dialog.config';\r\nimport { settingsItemDetailsDialog } from './sub-dialogs/analyze-settings/settings-item-details/settings-item-details.config';\r\nimport { editContentTypeDialog } from './sub-dialogs/edit-content-type/edit-content-type-dialog.config';\r\nimport { importContentTypeDialog } from './sub-dialogs/import-content-type/import-content-type-dialog.config';\r\nimport { importQueryDialog } from './sub-dialogs/import-query/import-query-dialog.config';\r\nimport { importViewDialog } from './sub-dialogs/import-view/import-view-dialog.config';\r\nimport { languagePermissionsDialog } from './sub-dialogs/language-permissions/language-permissions-dialog.config';\r\nimport { viewsUsageDialog } from './sub-dialogs/views-usage/views-usage-dialog.config';\r\nimport { GoToCopilot } from './copilot/go-to-copilot';\r\nimport { CopilotSpecs } from './copilot/copilot-specs';\r\nimport { EditRoutesSubItems, EditRoutesSubItemsNoHistory } from '../edit/edit.routing';\r\nimport { ExportAppComponent } from './app-menu/export-app/export-app.component';\r\nimport { ExportAppPartsComponent } from './app-menu/export-app-parts/export-app-parts.component';\r\nimport { ImportAppPartsComponent } from './app-menu/import-app-parts/import-app-parts.component';\r\nimport { AppStateComponent } from './app-menu/app-state/app-state.component';\r\n\r\nexport const appAdministrationRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    // experimental 2dm\r\n    // ...DialogEntryComponent.routeFor(appAdministrationDialog),\r\n    component: DialogEntryComponent,\r\n    data: { dialog: appAdministrationDialog },\r\n    children: [\r\n      {\r\n        path: '', redirectTo: 'home', pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'home',\r\n        loadComponent: () => import('./getting-started/getting-started.component').then(mod => mod.GettingStartedComponent),\r\n        data: { title: 'App Home', breadcrumb: 'Info', }\r\n      },\r\n      {\r\n        path: 'data/:scope',\r\n        loadComponent: () => import('./data/data.component').then(mod => mod.DataComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            // experimental 2dm\r\n            // ...DialogEntryComponent.routeFor(importContentTypeDialog, { title: 'Import Content Type' }),\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importContentTypeDialog, title: 'Import Content Type' },\r\n          },\r\n          {\r\n            path: 'items/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-items/content-items.routing').then(m => m.contentItemsRoutes)\r\n          },\r\n          ...EditRoutesSubItems,\r\n          {\r\n            path: 'add',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Add Content Type' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/edit',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: editContentTypeDialog, title: 'Edit Content Type' },\r\n          },\r\n          ...GoToMetadata.getRoutes(),\r\n          GoToDevRest.route,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            // May change how things are injected, so be careful when evaluating\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.routing').then(m => m.contentTypeFieldsRoutes),\r\n            data: { title: 'Content Type Fields' },\r\n          },\r\n          {\r\n            path: 'export/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes),\r\n            data: { title: 'Export Items' },\r\n          },\r\n          {\r\n            path: ':contentTypeStaticName/import',\r\n            loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n            data: { title: 'Import Items' },\r\n          },\r\n          GoToPermissions.route,\r\n        ],\r\n        data: { title: 'App Data', breadcrumb: \"Data\" },\r\n      },\r\n      {\r\n        path: `data-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.data,\r\n      },\r\n      {\r\n        path: GoToDevRest.routeData,\r\n        loadComponent: () => import('./data-rest-api/data-rest-api.component').then(mod => mod.DataRestApiComponent),\r\n        data: {\r\n          title: 'Rest-Api Data',\r\n          breadcrumb: 'Rest-Api Data'\r\n        },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramTypeName}`,\r\n            loadComponent: () => import('../dev-rest/data/data.component').then(mod => mod.DevRestDataComponent),\r\n            data: {\r\n              breadcrumb: 'Rest-Api Data'\r\n            },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'queries',\r\n        loadComponent: () => import('./queries/queries.component').then(mod => mod.QueriesComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importQueryDialog, title: 'Import Query' }\r\n          },\r\n          ...EditRoutesSubItemsNoHistory,\r\n          ...GoToMetadata.getRoutes(),\r\n          {\r\n            ...GoToPermissions.route,\r\n            data: { title: 'Query Permissions' }\r\n          },\r\n          GoToDevRest.route,\r\n        ],\r\n        data: { title: 'App Queries', breadcrumb: \"Queries\" },\r\n      },\r\n      {\r\n        path: GoToDevRest.routeQuery,\r\n        loadComponent: () => import('./queries-rest-api/queries-rest-api.component').then(mod => mod.QueriesRestApiComponent),\r\n        data: { title: 'Rest-Api Queries', breadcrumb: 'Rest-Api Queries' },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramQuery}`,\r\n            loadComponent: () => import('../dev-rest/query/query.component').then(mod => mod.DevRestQueryComponent),\r\n            data: { breadcrumb: 'Rest-Api Queries', },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'views',\r\n        loadComponent: () => import('./views/views.component').then(mod => mod.ViewsComponent),\r\n        children: [\r\n          {\r\n            path: 'import',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: importViewDialog, title: 'Import View' },\r\n          },\r\n          {\r\n            path: 'usage/:guid',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: viewsUsageDialog }\r\n          },\r\n          ...EditRoutesSubItems,\r\n          { ...GoToPermissions.route, data: { title: 'View Permissions' } },\r\n          ...GoToMetadata.getRoutes(),\r\n        ],\r\n        data: { title: 'App Views', breadcrumb: \"Views\" },\r\n      },\r\n      {\r\n        path: `views-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.views,\r\n      },\r\n      {\r\n        path: 'web-api',\r\n        loadComponent: () => import('./web-api/web-api.component').then(mod => mod.WebApiComponent),\r\n        data: { title: 'App WebApi', breadcrumb: \"WebApi\" },\r\n        children: [\r\n          GoToDevRest.route,\r\n        ],\r\n      },\r\n      {\r\n        path: `web-api-${GoToCopilot.route}`,\r\n        loadComponent: () => import('./copilot/page/copilot-page.component').then(mod => mod.CopilotPageComponent),\r\n        data: CopilotSpecs.webApi,\r\n      },\r\n      {\r\n        path: GoToDevRest.routeWebApi,\r\n        loadComponent: () => import('./web-api-rest-api/web-api-rest-api.component').then(mod => mod.WebApiRestApiComponent),\r\n        data: {\r\n          title: 'Rest-Api Web Api',\r\n          breadcrumb: 'Rest-Api Web Api'\r\n        },\r\n        children: [\r\n          {\r\n            path: `:${GoToDevRest.paramApiPath}`,\r\n            loadComponent: () => import('../dev-rest/api/api.component').then(mod => mod.DevRestApiComponent),\r\n            data: {\r\n              breadcrumb: 'Rest-Api Web Api'\r\n            },\r\n            children: [\r\n              GoToPermissions.route,\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'app',\r\n        loadComponent: () => import('./app-configuration/app-configuration.component').then(mod => mod.AppConfigurationComponent),\r\n        data: { title: 'Manage App', breadcrumb: \"Manage App\" },\r\n        children: [\r\n          ...GoToMetadata.getRoutes(),\r\n          // Edit App Properties / Settings / Resources\r\n          ...EditRoutesSubItems,\r\n          {\r\n            path: 'fields/:contentTypeStaticName',\r\n            loadChildren: () => import('../content-type-fields/content-type-fields.routing').then(m => m.contentTypeFieldsRoutes),\r\n            data: { title: 'Edit Fields of App Settings & Resources' },\r\n          },\r\n          {\r\n            path: 'language-permissions',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: languagePermissionsDialog, title: 'Language Permissions' },\r\n            children: [\r\n              { ...GoToPermissions.route, data: { title: 'Language Permissions' } },\r\n            ],\r\n          },\r\n          { ...GoToPermissions.route, data: { title: 'App Permissions' } },\r\n          {\r\n            path: 'analyze/:part',\r\n            component: DialogEntryComponent,\r\n            data: { dialog: analyzeSettingsDialog, title: 'Analyze Settings / Resources' }, children: [\r\n              {\r\n                path: 'details/:view/:settingsItemKey',\r\n                component: DialogEntryComponent,\r\n                data: { dialog: settingsItemDetailsDialog, title: 'Settings / Resources Item Details' },\r\n              },\r\n            ],\r\n          },\r\n          // New Export etc.\r\n          // {\r\n          //   path: 'export-app',\r\n          //   component: ExportAppComponent,\r\n          //   data: { breadcrumb: 'Export this entire App' },\r\n          // },\r\n          // {\r\n          //   path: 'export-parts',\r\n          //   component: DialogEntryComponent,\r\n          //   data: { breadcrumb: 'Export parts of this App' },\r\n          // },\r\n          // {\r\n          //   path: 'import-parts',\r\n          //   component: DialogEntryComponent,\r\n          //   data: { breadcrumb: 'Import parts of this App' },\r\n          // },\r\n          // {\r\n          //   path: 'app-state',\r\n          //   component: DialogEntryComponent,\r\n          //   data: { breadcrumb: 'App-State Versioning' },\r\n          // },\r\n        ],\r\n      },\r\n      // New Export etc.\r\n      {\r\n        path: 'export-app',\r\n        component: ExportAppComponent,\r\n        data: { breadcrumb: 'Export this entire App' },\r\n      },\r\n      {\r\n        path: 'export-parts',\r\n        component: ExportAppPartsComponent,\r\n        data: { breadcrumb: 'Export parts of this App' },\r\n      },\r\n      {\r\n        path: 'import-parts',\r\n        component: ImportAppPartsComponent,\r\n        data: { breadcrumb: 'Import parts of this App' },\r\n      },\r\n      {\r\n        path: 'app-state',\r\n        component: AppStateComponent,\r\n        data: { breadcrumb: 'App-State Versioning' },\r\n      },\r\n    ]\r\n  },\r\n];\r\n","export interface CopilotSpec {\r\n  /** Title in the menu */\r\n  title: string;\r\n  /** Title in the breadcrumb */\r\n  breadcrumb: string;\r\n\r\n  heading: string,\r\n  intro: string,\r\n  teaser: string;\r\n  outputType: string;\r\n}\r\n\r\nconst intro = `The Copilot provides tools to help you create code.\r\n    It is still in new, so please use it carefully and report any issues.`;\r\n\r\nexport const CopilotSpecs: { [key: string ]: CopilotSpec } = {\r\n  'data': {\r\n    title: 'Data Copilot',\r\n    breadcrumb: '2sxc Data Copilot',\r\n\r\n    heading: '2sxc Data Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate content types',\r\n\r\n    outputType: 'DataModel',\r\n  },\r\n  'views': {\r\n    title: 'Views Copilot',\r\n    breadcrumb: '2sxc View Copilot',\r\n\r\n    heading: '2sxc View Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate Razor Views',\r\n\r\n    outputType: 'RazorView',\r\n  },\r\n  'webApi': {\r\n    title: 'WebApi Copilot',\r\n    breadcrumb: '2sxc WebApi Copilot',\r\n\r\n    heading: '2sxc WebApi Copilot',\r\n    intro,\r\n    teaser: 'Autogenerate WebApi Controllers',\r\n\r\n    outputType: 'WebApi',\r\n  }\r\n};\r\n","export class GoToCopilot {\r\n  static route = 'copilot';\r\n\r\n  static routeDefinition(part: string) {\r\n    return {\r\n      name: 'Copilot',\r\n      icon: 'support_agent',\r\n      svgIcon: false,\r\n      path: `${part}-${GoToCopilot.route}`\r\n    };\r\n  }\r\n}","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as feature) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feature.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feature.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button color=\"accent\"\r\n        class=\"eav-card-action-button\" (click)=\"findOutMore(feature.link)\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </button>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<Feature>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = this.featureDetailService.getFeatureDetails(this.dialogData);\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\nexport const FeatureComponentProviders = [\r\n  FeatureDetailService,\r\n];\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  private dialog = inject(MatDialog);\r\n  private viewContainerRef = inject(ViewContainerRef);\r\n  private changeDetectorRef = inject(ChangeDetectorRef);\r\n  protected featuresService = inject(FeaturesService);\r\n\r\n  constructor() {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n      ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat, showIf]) => showIf == (feat?.isEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef.markForCheck();\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\nconst logThis = false;\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n  constructor() {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.onClick', event);\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[9]}