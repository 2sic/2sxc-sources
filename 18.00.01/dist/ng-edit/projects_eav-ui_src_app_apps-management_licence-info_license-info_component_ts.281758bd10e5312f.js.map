{"version":3,"file":"projects_eav-ui_src_app_apps-management_licence-info_license-info_component_ts.281758bd10e5312f.js","mappings":"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","names":["i0","id_r2","_r1","ctx_r2","copyToClipboard","guid_r5","_r4","ctx","FeatureDetailsDialogComponent","constructor","dialogData","dialogRef","snackBar","this","closeDialog","close","findOutMore","link","window","open","text","duration","static","t","MAT_DIALOG_DATA","i1","i2","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","FeatureDetailsDialogComponent_Conditional_7_Template","FeatureDetailsDialogComponent_Conditional_8_Template","FeatureDetailsDialogComponent_Conditional_9_Template","feature","name","description","tmp_2_0","nameId","tmp_3_0","guid","tmp_4_0","security","Impact","Message","MatCardModule","i3","MatButtonModule","i4","MatIconModule","i5","TippyDirective","SafeHtmlPipe","FeaturesListEnabledReasonComponent","agInit","params","value","data","refresh","enabledReasonDetailed","FeaturesListEnabledComponent","FeaturesStatusComponent","disabled","isDisabled","tooltip","tooltipGetter","toggle","nextValue","onToggle","_c0","MatSlideToggleModule","NgClass","styles","ExpirationExtension","expandFeature","getExpiration","expiration","expandLicense","license","lowestExpiration","Features","map","f","sort","dateString","result","icon","ExpMessage","ExpIcon","ExpWarningIcon","expires","split","startsWith","expDate","Date","toDateString","setDate","getDate","endsWith","ActiveFeaturesCountPipe","transform","filter","isEnabled","length","EJ8","pure","LicensesOrderPipe","licenses","Array","isArray","a","b","Priority","AgGridHeightDirective","elementRef","itemsCount","headerHeight","rowHeight","maxRows","extraHeight","element","nativeElement","ngOnChanges","changes","style","height","FsC","inputs","license_r1","ctx_r1","gridOptions","LicenseInfoComponent_Conditional_0_For_2_Conditional_17_Template","IsEnabled","Name","panel_r3","expanded","Description","LicenseInfoComponent_Conditional_0_For_2_Template","trackLicenses","LicenseInfoComponent","BaseWithChildDialogComponent","router","route","dialog","viewContainerRef","changeDetectorRef","super","disabled$","BehaviorSubject","buildGridOptions","refreshLicenses$","Subject","featuresConfigService","transient","FeaturesConfigService","ModuleRegistry","registerModules","ClientSideRowModelModule","ngOnInit","subscriptions","add","childDialogClosed$","subscribe","next","viewModel$","pipe","startWith","undefined","switchMap","getLicenses","catchError","of","tap","l","share","ngOnDestroy","complete","index","Guid","openRegistration","navigate","url","replace","showFeatureDetails","autoFocus","width","markForCheck","toggleFeature","enabled","forkJoin","saveFeatures","FeatureGuid","Enabled","timer","error","defaultGridOptions","columnDefs","headerName","field","headerClass","sortable","cellClass","cellRenderer","IdFieldComponent","cellRendererParams","ColumnDefinitions","TextWideFlex3","onCellClicked","BooleanFilterComponent","TextNarrow","tooltipValueGetter","ActionsPinnedRight7","isConfigurable","viewQuery","AgGridAngular","LicenseInfoComponent_Conditional_0_Template","tmp_0_0","MatExpansionModule","SxcGridModule","MatDialogActions","i6","RouterOutlet","AsyncPipe","TrueFalseComponent","trueIcon","falseIcon","reverse","_angular_core__WEBPACK_IMPORTED_MODULE_0__","encapsulation","AgBoolCellIconsDefault","states","true","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","showIcon_r2","clickable","AgBoolIconRenderer","allSettings","settings","d","getUrl","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","ActionsPinnedRight1","pinned","ActionsPinnedRight3","ActionsPinnedRight4","ActionsPinnedRight5","ActionsPinnedRight6","IconShow","valueGetter","IsHidden","Items","Fields","Character","Id","Boolean","Boolean2","Boolean3","Number","TextWideType","flex","minWidth","TextWide","TextWideMin100","TextWideActionClass","BaseComponent","log","EavLogger","events","event","NavigationEnd","snapshot","firstChild","pairwise","hadChildBefore","hasChildNow","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","context","node","getValue","toString","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","FormsModule","MatRadioModule","id","align","copy","_angular_core__WEBPACK_IMPORTED_MODULE_1__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.html","./projects/eav-ui/src/app/features/expiration-extension.ts","./projects/eav-ui/src/app/apps-management/licence-info/active-features-count.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/licenses-order.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/ag-grid-height.directive.ts","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.html","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/base-with-child-dialog.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html"],"sourcesContent":["<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{ dialogData.feature.name }}</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p [innerHtml]=\"dialogData.feature.description | safeHtml\"></p>\r\n    @if (dialogData.feature.nameId; as id) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">ID:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n        </div>\r\n      </div>\r\n    }\r\n    @if (dialogData.feature.guid; as guid) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">GUID:</div>\r\n        <div class=\"eav-info-row__value eav_click\">\r\n          <span [tippy]=\"guid\" (click)=\"copyToClipboard(guid)\">{{ guid }}</span>\r\n        </div>\r\n      </div>\r\n    }\r\n    @if ((dialogData.feature.security.Impact + ': ' + dialogData.feature.security.Message); as security) {\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">Security Rating:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ security }}</span>\r\n        </div>\r\n      </div>\r\n    }\r\n  </mat-card-content>\r\n  <mat-card-actions align=\"end\">\r\n    <button mat-raised-button class=\"eav-card-action-button\" color=\"accent\"\r\n      (click)=\"findOutMore(dialogData.feature.link)\">\r\n      <mat-icon>open_in_new</mat-icon>\r\n      Find out more\r\n    </button>\r\n    <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n      Close\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-feature-details-dialog',\r\n  templateUrl: './feature-details-dialog.component.html',\r\n  styleUrls: ['./feature-details-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: FeatureDetailsDialogData,\r\n    private dialogRef: MatDialogRef<FeatureDetailsDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  styleUrls: ['./features-list-enabled-reason.component.scss'],\r\n  standalone: true,\r\n  imports: [TippyDirective],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.enabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { FeaturesStatusParams } from './features-status.models';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-features-status',\r\n  templateUrl: './features-status.component.html',\r\n  styleUrls: ['./features-status.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    NgClass,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeaturesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean | null;\r\n  disabled: boolean;\r\n  tooltip: string;\r\n\r\n  private params: ICellRendererParams & FeaturesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & FeaturesStatusParams & IdFieldParams<Feature>): void {\r\n    this.params = params;\r\n    this.value = params.value;\r\n    this.disabled = params.isDisabled(params.data);\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params: ICellRendererParams & FeaturesStatusParams): boolean {\r\n    this.disabled = this.params.isDisabled(this.params.data);\r\n    return true;\r\n  }\r\n\r\n  toggle(): void {\r\n    const feature: Feature = this.params.data;\r\n    let nextValue: boolean;\r\n    switch (this.value) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.value = nextValue;\r\n    this.params.onToggle(feature, nextValue);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" [tippy]=\"tooltip\" [disabled]=\"disabled\" (change)=\"toggle()\" [ngClass]=\"{\r\n  'toggle-false': value === false,\r\n  'toggle-null': value === null\r\n  }\">\r\n</mat-slide-toggle>\r\n","import { License } from '../apps-management/models/license.model';\r\nimport { Feature } from './models';\r\n\r\n/**\r\n * Helper class used in union with other classes to add expiration hints to features.\r\n * It's implemented as a class, so it's easier to bundle static functions.\r\n */\r\nexport class ExpirationExtension {\r\n\r\n  /** The expiration date as a human readable string. Not from the server; generated on the client */\r\n  ExpMessage?: string;\r\n  ExpIcon?: string;\r\n\r\n  ExpWarningIcon?: string;\r\n\r\n  static expandFeature(feature: Feature): Feature & ExpirationExtension {\r\n    return {\r\n      ...feature,\r\n      ...ExpirationExtension.getExpiration(feature?.expiration)\r\n    };\r\n  }\r\n\r\n  static expandLicense(license: License): License & ExpirationExtension {\r\n    // Wrap in Try-Catch to avoid errors in the UI\r\n    try {\r\n      // find the lowest expiration date on the features\r\n      const lowestExpiration = license?.Features?.map(f => f.expiration).sort()[0];\r\n      // if there is no lowest expiration date, skip the rest\r\n      if (lowestExpiration == null) return license;\r\n\r\n      // debugger;\r\n      const withState = {\r\n        ...license,\r\n        ...ExpirationExtension.getExpiration(lowestExpiration),\r\n      };\r\n\r\n      return withState;\r\n    } catch (error) {\r\n      return license;\r\n    }\r\n  }\r\n\r\n  private static getExpiration(dateString: string): ExpirationExtension {\r\n    // Inner helper to create the final result\r\n    const result = (icon: string, text: string) => ({\r\n      ExpMessage: (icon != null ? icon + ' ' : '') + text,\r\n      ExpIcon: icon,\r\n      ExpWarningIcon: icon != '✅' ? icon : null,\r\n    })\r\n    const expires = dateString?.split('T')[0];\r\n    // no valid expiration date\r\n    if (expires == null) return result(null, null);\r\n    // never expires\r\n    if (expires.startsWith('9999')) return result('✅', 'never');\r\n    const expDate = new Date(expires);\r\n    // show \"expired\" if it's over-due\r\n    if (expDate < new Date()) return result('🛑', 'expired');\r\n    // return \"today\" if it's today\r\n    if (expDate.toDateString() === new Date().toDateString()) return result('⚠️', 'today');\r\n    // return \"tomorrow\" if it's tomorrow\r\n    if (expDate.toDateString() === new Date(new Date().setDate(new Date().getDate() + 1)).toDateString()) return result('⚠️', 'tomorrow');\r\n    // Warn if it's within 30 days\r\n    if (expDate < new Date(new Date().setDate(new Date().getDate() + 30))) return result('⚠️', expires);\r\n    // Show special EOY if it's at the end of the year - the most common expiration\r\n    if (expires.endsWith('12-31')) return result('✅', `EOY ${expires.split('-')[0]}`);\r\n    // otherwise: just show the date\r\n    return result('❓', expires);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({\r\n  name: 'activeFeaturesCount',\r\n  standalone: true\r\n})\r\nexport class ActiveFeaturesCountPipe implements PipeTransform {\r\n\r\n  transform(license: License) {\r\n    return `${license.Features.filter(f => f.isEnabled).length}/${license.Features.length}`;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({\r\n    name: 'licensesOrder',\r\n    standalone: true\r\n})\r\nexport class LicensesOrderPipe implements PipeTransform {\r\n\r\n  transform(licenses: License[]): any {\r\n    if (!Array.isArray(licenses)) { return licenses; }\r\n\r\n    const sorted = [...licenses].sort((a: License, b: License) => {\r\n      if (a.Priority < b.Priority) {\r\n        return -1;\r\n      } else if (a.Priority > b.Priority) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return sorted;\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAgGridHeight]',\r\n  standalone: true\r\n})\r\nexport class AgGridHeightDirective implements OnChanges {\r\n  @Input() itemsCount = 0;\r\n  @Input() headerHeight = 32;\r\n  @Input() rowHeight = 48;\r\n  @Input() maxRows = 100;\r\n\r\n  /** Fixes a bug where scrollbar appears when then is no overflow */\r\n  private extraHeight = 2;\r\n\r\n  private element: HTMLElement;\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.itemsCount != null) {\r\n      const rows = this.itemsCount === 0 ? 2 : this.itemsCount > this.maxRows ? this.maxRows : this.itemsCount;\r\n      this.element.style.height = `${this.headerHeight + rows * this.rowHeight + this.extraHeight}px`;\r\n    }\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<mat-accordion multi>\r\n  @for (license of vm.licenses | licensesOrder; track trackLicenses($index, license)) {\r\n  <mat-expansion-panel #panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <mat-icon class=\"panel-icon\" [tippy]=\"license.IsEnabled ? 'License is active' : 'License is not active'\">{{\r\n          license.IsEnabled ? 'check_circle_outline' : 'cancel' }}</mat-icon>\r\n        <div>\r\n          <div class=\"panel-title\">\r\n            <span>{{ license.Name }}</span>\r\n            <span class=\"active-features-count\">{{ license | activeFeaturesCount }}</span>\r\n            <span> {{ license.ExpWarningIcon }}</span>\r\n          </div>\r\n          <div class=\"panel-description\" [ngClass]=\"{ 'expanded': panel.expanded }\">\r\n            {{ license.Description }}\r\n          </div>\r\n        </div>\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    @if (panel.expanded) {\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"license.Features\" [gridOptions]=\"gridOptions\" appAgGridHeight\r\n      [itemsCount]=\"license.Features?.length\">\r\n    </ag-grid-angular>\r\n    }\r\n  </mat-expansion-panel>\r\n  }\r\n</mat-accordion>\r\n}\r\n\r\n<mat-dialog-actions align=\"start\">\r\n  <button mat-button class=\"eav-button__with-icon\" tippy=\"Registration\" (click)=\"openRegistration()\">\r\n    <mat-icon class=\"eav-icon\">app_registration</mat-icon>\r\n    <span>Registration</span>\r\n  </button>\r\n</mat-dialog-actions>\r\n\r\n<router-outlet></router-outlet>\r\n","import { AgGridAngular } from '@ag-grid-community/angular';\r\nimport { GridOptions } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogActions } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\n// tslint:disable-next-line:max-line-length\r\nimport { BehaviorSubject, catchError, forkJoin, map, Observable, of, share, startWith, Subject, switchMap, tap, timer } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { Feature } from '../../features/models/feature.model';\r\nimport { License } from '../models/license.model';\r\nimport { FeatureDetailsDialogComponent } from './feature-details-dialog/feature-details-dialog.component';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog/feature-details-dialog.models';\r\nimport { FeaturesListEnabledReasonComponent } from './features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from './features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesStatusComponent } from './features-status/features-status.component';\r\nimport { FeaturesStatusParams } from './features-status/features-status.models';\r\nimport { ExpirationExtension } from '../../features/expiration-extension';\r\nimport { ActiveFeaturesCountPipe } from './active-features-count.pipe';\r\nimport { LicensesOrderPipe } from './licenses-order.pipe';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { AgGridHeightDirective } from './ag-grid-height.directive';\r\nimport { NgClass, AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { ModuleRegistry } from '@ag-grid-community/core';\r\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-license-info',\r\n  templateUrl: './license-info.component.html',\r\n  styleUrls: ['./license-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    NgClass,\r\n    SxcGridModule,\r\n    AgGridHeightDirective,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    LicensesOrderPipe,\r\n    ActiveFeaturesCountPipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class LicenseInfoComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  @ViewChild(AgGridAngular) private gridRef?: AgGridAngular;\r\n\r\n  disabled$ = new BehaviorSubject(false);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private refreshLicenses$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<LicenseInfoViewModel>;\r\n\r\n  private featuresConfigService = transient(FeaturesConfigService);\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(router, route);\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => { this.refreshLicenses$.next(); }));\r\n    this.viewModel$ = //combineLatest([\r\n      this.refreshLicenses$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.featuresConfigService.getLicenses().pipe(catchError(() => of(undefined)))),\r\n        tap(() => this.disabled$.next(false)),\r\n\r\n        // Fiddle with the data for development tests\r\n        // 2023-11-16 2dm disabled - causes trouble in production\r\n        // @STV - do you still need this? or is this a forgotten debug code?\r\n        // map(licenses => {\r\n        //   var licTesting = licenses[licenses.length - 2];\r\n        //   licTesting.Features[licTesting.Features.length - 1].Expiration = \"2023-08-25\";\r\n        //   return licenses;\r\n        // }),\r\n\r\n        // Expand the data to have pre-calculated texts/states\r\n        map(licenses => licenses.map(l => {\r\n          // const expandedFeatures = l.Features.map(f => ExpirationExtension.expandFeature(f));\r\n          return ({\r\n            ...ExpirationExtension.expandLicense(l),\r\n            Features: l.Features.map(f => ExpirationExtension.expandFeature(f)),\r\n          });\r\n        })),\r\n\r\n        // Share the resulting stream with all subscribers\r\n        share(),\r\n      )\r\n        //])\r\n        .pipe(\r\n          map((licenses) => ({ licenses })),\r\n        );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.disabled$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  trackLicenses(index: number, license: License): string {\r\n    return license.Guid;\r\n  }\r\n\r\n\r\n  openRegistration(): void {\r\n    this.router.navigate([this.router.url.replace('license', '') + \"/registration\"]);\r\n  }\r\n\r\n  private showFeatureDetails(feature: Feature): void {\r\n    const data: FeatureDetailsDialogData = {\r\n      feature,\r\n    };\r\n    this.dialog.open(FeatureDetailsDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '600px',\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private toggleFeature(feature: Feature, enabled: boolean): void {\r\n    this.disabled$.next(true);\r\n    const state: FeatureState = {\r\n      FeatureGuid: feature.guid,\r\n      Enabled: enabled,\r\n    };\r\n    forkJoin([this.featuresConfigService.saveFeatures([state]), timer(100)]).subscribe({\r\n      error: () => {\r\n        this.refreshLicenses$.next();\r\n      },\r\n      next: () => {\r\n        this.refreshLicenses$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  // Note: @SDV\r\n  // I think this should serve as a good example of how to use the grid\r\n  // 1. eg. with cellDefaults and similar initial objects containing most commonly used options here\r\n  // 2. Also we should probably never add a valueGetter for the simple properties\r\n  // ...not sure why it's even in here, my guess is copy-paste of code which wasn't understood properly\r\n  // 3. I think the header-name should always be the first line, then the field\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'nameId',\r\n          filter: 'agTextColumnFilter',\r\n          width: 200,\r\n          headerClass: 'dense',\r\n          sortable: true,\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Feature> = {\r\n              tooltipGetter: (feature: Feature) => feature.nameId,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideFlex3,\r\n          field: 'Name',\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          onCellClicked: (params) => {\r\n            this.showFeatureDetails(params.data as Feature);\r\n          },\r\n        },\r\n        {\r\n\r\n          headerName: 'Enabled',\r\n          field: 'isEnabled',\r\n          width: 80,\r\n          cellClass: 'no-outline',\r\n          headerClass: 'dense',\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: FeaturesListEnabledComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextNarrow,\r\n          headerName: 'Reason',\r\n          field: 'enabledReason',\r\n          cellRenderer: FeaturesListEnabledReasonComponent,\r\n        },\r\n        {\r\n          headerName: 'Expiration',\r\n          field: 'ExpMessage',\r\n          filter: 'agTextColumnFilter',\r\n          width: 120,\r\n          tooltipValueGetter: (params) => (params.data as Feature & ExpirationExtension)?.expiration,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight7,\r\n          headerName: '',\r\n          field: 'enabledInConfiguration',\r\n          cellRenderer: FeaturesStatusComponent,\r\n          cellRendererParams: (() => {\r\n            const params: FeaturesStatusParams & IdFieldParams<Feature> = {\r\n              isDisabled: (feature) => !feature.isConfigurable || this.disabled$.value,\r\n              onToggle: (feature, enabled) => this.toggleFeature(feature, enabled),\r\n              tooltipGetter: (feature: Feature) => feature.isConfigurable ? \"Toggle off | default | on\" : \"This feature can't be configured\",\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\n\r\ninterface LicenseInfoViewModel {\r\n  licenses: (License & ExpirationExtension)[];\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-true-false',\r\n  templateUrl: './true-false.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    NgClass,\r\n  ],\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = {\r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { TrueFalseParams } from '../../dev-rest/api/true-false/true-false.models';\r\n\r\nexport class ColumnDefinitions {\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight6: ColDef = {\r\n    width: 82,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight7: ColDef = {\r\n    width: 62,\r\n    cellClass: 'secondary-action no-outline no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  static Items: ColDef = {\r\n    width: 102,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Fields: ColDef = {\r\n    width: 94,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Boolean: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n  };\r\n\r\n  static Boolean2: ColDef = {\r\n    width: 100,\r\n    sortable: true,\r\n    cellClass: 'no-outline',\r\n    filter: BooleanFilterComponent,\r\n  };\r\n\r\n  static Boolean3: ColDef = {\r\n    headerClass: 'dense',\r\n    width: 80,\r\n    cellClass: 'no-outline',\r\n    cellRenderer: TrueFalseComponent,\r\n    cellRendererParams: (() => {\r\n      const params: TrueFalseParams = {\r\n        reverse: false,\r\n      };\r\n      return params;\r\n    })(),\r\n  }\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static TextWideType: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action highlight'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideMin100: ColDef = {\r\n    flex: 1,\r\n    minWidth: 100,\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  }\r\n\r\n  static TextWideFlex3: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideActionClass: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n\r\n\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, tap } from 'rxjs';\r\nimport { BaseComponent } from './base.component';\r\nimport { EavLogger } from '../logging/eav-logger';\r\n\r\nconst logThis = false;\r\n\r\n// 2024-06-12 2dm experimental - remove comments if all is good mid of June\r\n// - previously had\r\n// @Directive()   // Needs the @Directive() so the compiler allows OnDestroy to be implemented\r\n// ...then tried this\r\n// @Component({\r\n//   selector: 'app-base-component-with-child',\r\n//   template: ''\r\n// })\r\n// ...but then added abstract, so I think it doesn't actually need all that\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseWithChildDialogComponent extends BaseComponent implements OnDestroy {\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    public log?: EavLogger\r\n  ) {\r\n    super();\r\n    this.log ??= new EavLogger('BaseComponent', logThis);\r\n  }\r\n\r\n  // 2024-06-12 2dm - don't think this is needed since it's already on the base class\r\n  // ngOnDestroy() {\r\n  //   super.ngOnDestroy();\r\n  // }\r\n\r\n  protected childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n      // tap(() => console.log('2dm ' + 'childDialogClosed$'))\r\n    )\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n  ]\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>"],"x_google_ignoreList":[]}