{"version":3,"file":"projects_eav-ui_src_app_apps-management_site-languages_site-languages_component_ts-projects_e-de56ad.9236e5b89521b28e.js","mappings":"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","names":["SiteLanguagesStatusComponent","agInit","params","this","value","refresh","toggleLanguage","event","onToggleLanguage","data","checked","static","t","core","VBU","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","$event","MatSlideToggleModule","i1","styles","languages","ctx_r0","gridOptions","SiteLanguagesComponent","constructor","buildGridOptions","refreshLanguages$","Subject","zoneService","transient","ZoneService","ModuleRegistry","registerModules","ClientSideRowModelModule","ngOnInit","viewModel$","combineLatest","pipe","startWith","undefined","switchMap","getLanguages","catchError","of","share","map","ngOnDestroy","complete","language","enable","Code","subscribe","error","next","defaultGridOptions","columnDefs","ColumnDefinitions","Id","field","filter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","TextWide","headerName","sort","onCellClicked","IsEnabled","width","headerClass","cellClass","split","sortable","BooleanFilterComponent","valueGetter","SiteLanguagesComponent_Conditional_0_Template","tmp_0_0","MatDialogActions","AsyncPipe","SxcGridModule","TrueFalseComponent","trueIcon","falseIcon","reverse","icon","_angular_core__WEBPACK_IMPORTED_MODULE_0__","MatIconModule","encapsulation","webApiAppRoot","ImportAppService","http","context","dnnContext","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","post","$2sxc","apiUrl","zoneId","toString","result","Messages","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_4__","jDH","factory","ɵfac","AgBoolCellIconsDefault","states","true","tooltip","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","url","showIcon_r2","_c0","clickable","AgBoolIconRenderer","allSettings","settings","d","getUrl","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","TippyDirective","NgClass","ActionsPinnedRight1","pinned","ActionsPinnedRight3","ActionsPinnedRight4","ActionsPinnedRight5","ActionsPinnedRight6","ActionsPinnedRight7","IconShow","IsHidden","Items","Fields","Character","Boolean","Boolean2","Boolean3","Number","TextWideType","flex","minWidth","TextWideMin100","TextWideFlex3","TextNarrow","TextWideActionClass","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","node","getValue","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","FormsModule","MatRadioModule","snackBar","id","align","copy","copyToClipboard","open","duration","_angular_core__WEBPACK_IMPORTED_MODULE_1__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages-status',\r\n  templateUrl: './site-languages-status.component.html',\r\n  styleUrls: ['./site-languages-status.component.scss'],\r\n  standalone: true,\r\n  imports: [MatSlideToggleModule],\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private params: ICellRendererParams & SiteLanguagesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & SiteLanguagesStatusParams): void {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage(event: MatSlideToggleChange): void {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onToggleLanguage(language, event.checked);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage($event)\"></mat-slide-toggle>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.languages\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <mat-dialog-actions align=\"end\"></mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { catchError, combineLatest, map, Observable, of, share, startWith, Subject, switchMap } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { SiteLanguagesStatusComponent } from './site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status/site-languages-status.models';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { ModuleRegistry } from '@ag-grid-community/core';\r\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-site-languages',\r\n  templateUrl: './site-languages.component.html',\r\n  styleUrls: ['./site-languages.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class SiteLanguagesComponent implements OnInit, OnDestroy {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private refreshLanguages$ = new Subject<void>();\r\n\r\n  viewModel$: Observable<SiteLanguagesViewModel>;\r\n\r\n  private zoneService = transient(ZoneService);\r\n\r\n  constructor() {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.refreshLanguages$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.zoneService.getLanguages().pipe(catchError(() => of(undefined)))),\r\n        share()\r\n      )\r\n    ]).pipe(\r\n      map(([languages]) => {\r\n        return { languages };\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.refreshLanguages$.complete();\r\n  }\r\n\r\n  private toggleLanguage(language: SiteLanguage, enable: boolean): void {\r\n    this.zoneService.toggleLanguage(language.Code, enable).subscribe({\r\n      error: () => {\r\n        this.refreshLanguages$.next();\r\n      },\r\n      next: () => {\r\n        this.refreshLanguages$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          field: 'Code',\r\n          filter: 'agTextColumnFilter',\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<SiteLanguage> = {\r\n              tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Culture',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            this.toggleLanguage(language, !language.IsEnabled);\r\n          },\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.IsEnabled;\r\n          },\r\n          cellRenderer: SiteLanguagesStatusComponent,\r\n          cellRendererParams: (() => {\r\n            const params: SiteLanguagesStatusParams = {\r\n              onToggleLanguage: (language, enable) => this.toggleLanguage(language, enable),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface SiteLanguagesViewModel {\r\n  languages: SiteLanguage[];\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-true-false',\r\n  templateUrl: './true-false.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    NgClass,\r\n  ],\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = {\r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { TrueFalseParams } from '../../dev-rest/api/true-false/true-false.models';\r\n\r\nexport class ColumnDefinitions {\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight6: ColDef = {\r\n    width: 82,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight7: ColDef = {\r\n    width: 62,\r\n    cellClass: 'secondary-action no-outline no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  static Items: ColDef = {\r\n    width: 102,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Fields: ColDef = {\r\n    width: 94,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Boolean: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n  };\r\n\r\n  static Boolean2: ColDef = {\r\n    width: 100,\r\n    sortable: true,\r\n    cellClass: 'no-outline',\r\n    filter: BooleanFilterComponent,\r\n  };\r\n\r\n  static Boolean3: ColDef = {\r\n    headerClass: 'dense',\r\n    width: 80,\r\n    cellClass: 'no-outline',\r\n    cellRenderer: TrueFalseComponent,\r\n    cellRendererParams: (() => {\r\n      const params: TrueFalseParams = {\r\n        reverse: false,\r\n      };\r\n      return params;\r\n    })(),\r\n  }\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static TextWideType: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action highlight'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideMin100: ColDef = {\r\n    flex: 1,\r\n    minWidth: 100,\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  }\r\n\r\n  static TextWideFlex3: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideActionClass: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n\r\n\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n  ]\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>"],"x_google_ignoreList":[]}