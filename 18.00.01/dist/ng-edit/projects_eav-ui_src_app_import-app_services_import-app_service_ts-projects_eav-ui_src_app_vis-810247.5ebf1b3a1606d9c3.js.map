{"version":3,"file":"projects_eav-ui_src_app_import-app_services_import-app_service_ts-projects_eav-ui_src_app_vis-810247.5ebf1b3a1606d9c3.js","mappings":"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","names":["webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","constructor","http","context","dnnContext","this","getAll","contentType","get","$2sxc","apiUrl","webApiEntityList","params","appId","toString","importQuery","file","from","toBase64","pipe","switchMap","fileBase64","post","AppId","ContentBase64","map","success","Success","Messages","clonePipeline","id","Id","delete","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_6__","jDH","factory","ɵfac","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","formData","FormData","append","zoneId","export","url","window","open","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","webApiAppRoot","ImportAppService","importApp","changedName","retryOnDuplicate","result","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","FieldHintComponent","isError","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","inputs","standalone","features","ngContentSelectors","_c0","decls","vars","consts","template","rf","ctx","_r1","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","MatFormFieldModule","NgClass","NgTemplateOutlet","styles","ClickStopPropagationDirective","onClick","event","stopPropagation","FsC","hostBindings","$event","MousedownStopPropagationDirective","onMousedown","ArrayHelpers","toggleInArray","item","array","index","indexOf","push","splice","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText","mapUntilChanged","fn","distinctUntilChanged","mapUntilObjChanged","isEqual","QueryDefinitionService","fetchPipeline","pipelineEntityId","dataSources","pipelineModel","DataSources","length","buildDefaultModel","fixPipelineDataSources","templateDataSources","eavConstants","pipelineDesigner","defaultPipeline","templateDS","dataSource","find","ds","PartAssemblyAndType","Description","EntityGuid","EntityId","undefined","Name","VisualDesignerData","Pipeline","StreamWiring","streamWiring","pipelineDataSources","some","pipelineDS","outDataSource","outDs","pipelineDataSource","Top","Left","fetchDataSources","appid","ContentType","Difficulty","dataSourceDifficulties","default","DynamicIn","DynamicOut","EnableConfig","HelpLink","Icon","In","Out","PrimaryType","TypeNameForUi","UiHint","typeNameFilter","input","format","globalParts","classFullNameParts","savePipeline","pipeline","newPipelineModel","runPipeline","top","debugStream","source","sourceOut","out","core","ctx_r0","name","sourceName","option_r3","_r2","$implicit","show","QueryResultComponent_For_18_Conditional_2_Template","QueryResultComponent_For_18_Conditional_3_Template","param_r4","QueryResultComponent_Conditional_22_div_1_Template","QueryResultComponent_Conditional_22_For_5_Template","parameters","source_r5","value","Definition","config_r6","key","QueryResultComponent_For_37_Conditional_2_Template","QueryResultComponent_For_37_For_10_Template","Guid","Type","Configuration","Error","stream_r7","Source","SourceOut","Target","TargetIn","Count","QueryResultComponent","dialogData","dialogRef","visualQueryService","ngOnInit","pipelineModel$","Params","filter","el","testParams","TestParameters","concat","timeUsed","QueryTimer","Milliseconds","ticksUsed","Ticks","optionsForTop","Query","sources","Sources","streams","Streams","closeDialog","close","original","MAT_DIALOG_DATA","QueryResultComponent_Conditional_4_Template","QueryResultComponent_div_13_Template","QueryResultComponent_Conditional_15_Template","QueryResultComponent_Conditional_16_Template","QueryResultComponent_For_18_Template","QueryResultComponent_Conditional_22_Template","QueryResultComponent_div_24_Template","QueryResultComponent_For_37_Template","QueryResultComponent_div_40_Template","QueryResultComponent_For_53_Template","MatButtonModule","MatIconModule","i4","MatTabsModule","i5","JsonPipe","KeyValuePipe","StreamErrorResultComponent","errorData","openInsights","MatDialogActions","VisualQueryStateService","BaseWithChildDialogComponent","router","route","snackBar","dialog","viewContainerRef","zone","changeDetectorRef","super","BehaviorSubject","dataSources$","putEntityCountOnConnections$","Subject","dataSourceConfigs$","pipelineId","parseInt","snapshot","paramMap","refreshPipeline","refreshDataSourceConfigs","contentTypesService","transient","ContentTypesService","metadataService","MetadataService","queryDefinitionService","titleService","Title","ngOnDestroy","complete","init","attachKeyboardSave","subscriptions","add","childDialogClosed$","subscribe","editPipelineEntity","formUrl","convertFormToUrl","items","navigate","relativeTo","saveAndRun","save","run","showDataSourceDetails","showDetails","cloneDeep","visualDesignerData","JsonHelpers","tryParse","ShowDataSourceDetails","JSON","stringify","next","addDataSource","removeDataSource","pipelineDataSourceGuid","connections","streamsOut","StreamsOut","renameDataSource","changeDataSourceDescription","description","changeConnections","changeDataSourcePosition","position","calculateDataSourceConfigs","dataSourceConfigs","forEach","Metadata","metadataItem","Object","entries","attributeName","attributeValue","includes","Array","isArray","editDataSource","contentTypeName","getMetadata","metadata","entity","targetType","keyType","Items","retrieveContentType","duration","ContentTypeName","For","target","TargetType","callback","pipelineResult","showQueryResult","console","warn","setTimeout","stream","showStreamErrorResult","streamResult","showSnackBar","setTitle","autoFocus","backdropClass","closeOnNavigation","data","panelClass","markForCheck","ErrorData","runOutsideAngular","fromEvent","firstChild","navigator","platform","match","metaKey","ctrlKey","keyCode","preventDefault","guiTypes","App","Label","Cache","Filter","Logic","Lookup","Modify","Security","Sort","Unknown","Debug","System","calculateTypeInfos","typeInfos","typeInfo","RenameStreamComponent_Conditional_9_Conditional_4_Template","RenameStreamComponent_Conditional_9_Conditional_5_Template","isSource","pipelineResultExists","controls","label","touched","errors","required","scopeOption_r3","RenameStreamComponent_Conditional_10_Conditional_0_For_5_Template","scopeOptions","labelOption_r4","RenameStreamComponent_Conditional_10_Conditional_4_For_2_Template","labelOptions","RenameStreamComponent_Conditional_10_Conditional_0_Template","RenameStreamComponent_Conditional_10_Conditional_4_Template","RenameStreamComponent_Conditional_10_Conditional_5_Template","toggleGuidedLabel","RenameStreamComponent_Conditional_10_Conditional_13_Template","advancedMode","guidedLabel","_r5","toggleAdvancedMode","RenameStreamComponent","BaseComponent","hostClass","buildForm","checked","rename","formValue","form","getRawValue","UntypedFormGroup","UntypedFormControl","Validators","scope","scopes","valueChanges","startWith","values","Scope","patchValue","getScopes","filtered","s","o","hostVars","RenameStreamComponent_Conditional_9_Template","RenameStreamComponent_Conditional_10_Template","RenameStreamComponent_Conditional_13_Template","valid","FormsModule","ReactiveFormsModule","i6","MatInputModule","i7","MatSelectModule","i8","i9","MatOptionModule","MatSlideToggleModule","i10","dataSrcIdPrefix","Plumber","jsPlumbRoot","onConnectionsChanged","onDragend","onDebugStream","log","EavLogger","lineCount","linePaintDefault","stroke","strokeWidth","outlineStroke","outlineWidth","lineColors","maxCols","uuidColorMap","bulkDelete","instance","jsPlumb","getInstance","getInstanceDefaults","batch","initDomDataSources","initWirings","bindEvents","repaintEverything","destroy","reset","unbindContainer","removeEndpointsOnDataSource","elementId","selectEndpoints","element","getAllConnections","connection","From","sourceId","replace","endpoints","getOverlay","To","targetId","getStreamsOut","each","endpoint","join","putEntityCountOnConnections","sourceElementId","targetElementId","fromUuid","toUuid","getEndpoint","getUuid","setLabel","cssClass","events","click","overlay","AllowEdit","nextLinePaintStyle","uuid","assign","container","Container","Connector","curviness","PaintStyle","HoverPaintStyle","l","fnCond","domDataSource","querySelector","draggable","grid","stop","finalPos","outCount","a","addEndpoint","inCount","in","targetEndpointUnlimited","buildTargetEndpoint","maxConnections","makeTarget","makeSource","buildSourceEndpoint","end","wirings","inGroups","groupBy","wire","outGroups","pipeDataSource","connect","uuids","paintStyle","message","to","endpointName","isIn","count","d","connectionList","isDynamic","getEndpointInfo","endpointInfo","style","angled","model","enabled","addClass","fill","radius","anchor","faces","overlays","getEndpointOverlays","endpointOrOverlay","onChangeLabel","isTarget","dropOptions","hoverClass","activeClass","location","width","afterClosed","newLabel","bind","info","targetEndpoint","deleteEndpoint","deleteConnection","fireEvent","endpointLabel","labelPrompt","getLabel","getEndpoints","canvas","classList","contains","Math","floor","random","trimmed","trim","endsWith","substring","arr","reduce","groups","dataSource_r3","ctx_r3","configureDataSource","vm_r6","openHelp","_r7","remove","config_r8","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_For_3_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_5_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_6_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_8_Template","allowEdit","editName","editDescription","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_21_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_24_Template","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Conditional_25_Template","_c2","Width","_c3","isOutDataSource","getTypeName","PlumbEditorComponent_Conditional_0_Conditional_2_For_1_Template","PlumbEditorComponent_Conditional_0_Conditional_2_Template","hardReset","PlumbEditorComponent","scriptLoaded$","loadScripts","test","src","plumber","pipelineDesignerData$","m","viewModel$","combineLatest","pipelineDesignerData","detectChanges","ngAfterViewInit","domDataSourcesLoaded$","domDataSourcesRef","changes","scriptLoaded","domDataSourcesLoaded","domRootRef","nativeElement","partAssemblyAndType","confirm","newName","newDescription","viewQuery","PlumbEditorComponent_Conditional_0_Template","tmp_0_0","NgStyle","AsyncPipe","dataSource_r6","ctx_r1","AddExplorerComponent_Conditional_0_For_6_Conditional_5_For_2_Template","trackDataSources","group_r4","_r3","toggleItem","AddExplorerComponent_Conditional_0_For_6_Conditional_5_Template","tmp_14_0","toggledItems","toggleDifficulty","AddExplorerComponent_Conditional_0_For_6_Template","trackGroups","sorted","AddExplorerComponent","difficulties","difficulty$","difficulty","filterAndSortDataSources","maxDifficulty","sort","b","toLocaleLowerCase","localeCompare","type","advanced","AddExplorerComponent_Conditional_0_Template","TippyDirective","param_r3","RunExplorerComponent_Conditional_0_Conditional_20_For_2_Template","pipelineModel_r4","param_r5","RunExplorerComponent_Conditional_0_Conditional_24_For_2_Template","_r6","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_For_8_Template","warnings_r8","RunExplorerComponent_Conditional_0_Conditional_27_Conditional_0_Template","saveAndRunQuery","editPipeline","openParamsHelp","RunExplorerComponent_Conditional_0_Conditional_20_Template","RunExplorerComponent_Conditional_0_Conditional_24_Template","RunExplorerComponent_Conditional_0_Conditional_25_Template","RunExplorerComponent_Conditional_0_Conditional_27_Template","RunExplorerComponent_Conditional_0_Conditional_29_Template","openRestApi","tmp_4_0","visualDesignerData$","tmp_5_0","warnings$","RunExplorerComponent","asObservable","calculateWarnings","warnings","queryParams","param","midMatch","exec","testMid","urlMid","moduleId","GoToDevRest","getUrlQueryDialog","RunExplorerComponent_Conditional_0_Template","VisualQueryComponent","explorer","activeExplorer","toggleExplorer","RouterOutlet"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/import-app/services/import-app.service.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/directives/mousedown-stop-propagation.directive.ts","./projects/eav-ui/src/app/shared/helpers/array.helpers.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./projects/eav-ui/src/app/shared/rxJs/mapUntilChanged.ts","./projects/eav-ui/src/app/visual-query/services/query-definition.service.ts","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.html","./projects/eav-ui/src/app/visual-query/query-result/query-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.ts","./projects/eav-ui/src/app/visual-query/stream-error-result/stream-error-result.component.html","./projects/eav-ui/src/app/visual-query/services/visual-query.service.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.helpers.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/rename-stream/rename-stream.component.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumber.helper.ts","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.html","./projects/eav-ui/src/app/visual-query/plumb-editor/plumb-editor.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.html","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.component.ts","./projects/eav-ui/src/app/visual-query/add-explorer/add-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.html","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.component.ts","./projects/eav-ui/src/app/visual-query/run-explorer/run-explorer.helpers.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.ts","./projects/eav-ui/src/app/visual-query/visual-query.component.html"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    NgClass,\r\n    NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\nconst logThis = false;\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n  constructor() {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.onClick', event);\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appMousedownStopPropagation]', standalone: true })\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","export class ArrayHelpers {\r\n  /**\r\n   * Toggles an item in an array. If the item is not in the array, it is added. If it is in the array, it is removed.\r\n   * @param item The item to toggle\r\n   * @param array The array to toggle the item in\r\n   */\r\n  static toggleInArray<T>(item: T, array: T[]): void {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { Observable, pipe, UnaryFunction } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\n/**\r\n * Combine map and distinctUntilChanged, as this is a very common pattern.\r\n * @param fn the mapping function\r\n * @returns\r\n */\r\nexport function mapUntilChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(),\r\n  );\r\n}\r\n\r\nexport function mapUntilObjChanged<T, R>(\r\n  fn: (state: T) => R\r\n): UnaryFunction<Observable<T>, Observable<R>> {\r\n  return pipe(\r\n    distinctUntilChanged(),\r\n    map(fn),\r\n    distinctUntilChanged(isEqual),\r\n  );\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { webApiQueryDataSources, webApiQueryDebugStream, webApiQueryGet, webApiQueryRun, webApiQuerySave } from '../../app-administration/services';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult } from '../models';\r\n\r\n@Injectable()\r\nexport class QueryDefinitionService {\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  fetchPipeline(pipelineEntityId: number, dataSources: DataSource[]) {\r\n    return this.http.get<PipelineModel>(webApiQueryGet, {\r\n      params: { appId: this.context.appId.toString(), id: pipelineEntityId.toString() }\r\n    }).pipe(\r\n      map(pipelineModel => {\r\n        // if pipeline is new, populate it with default model\r\n        if (!pipelineModel.DataSources.length) {\r\n          this.buildDefaultModel(pipelineModel, dataSources);\r\n        }\r\n        this.fixPipelineDataSources(pipelineModel.DataSources);\r\n        return pipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private buildDefaultModel(pipelineModel: PipelineModel, dataSources: DataSource[]) {\r\n    const templateDataSources = eavConstants.pipelineDesigner.defaultPipeline.dataSources;\r\n    for (const templateDS of templateDataSources) {\r\n      const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === templateDS.PartAssemblyAndType);\r\n      const pipelineDataSource: PipelineDataSource = {\r\n        Description: '',\r\n        EntityGuid: templateDS.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: dataSource.Name,\r\n        PartAssemblyAndType: templateDS.PartAssemblyAndType,\r\n        VisualDesignerData: templateDS.VisualDesignerData,\r\n      };\r\n      pipelineModel.DataSources.push(pipelineDataSource);\r\n    }\r\n\r\n    pipelineModel.Pipeline.StreamWiring = eavConstants.pipelineDesigner.defaultPipeline.streamWiring;\r\n  }\r\n\r\n  private fixPipelineDataSources(pipelineDataSources: PipelineDataSource[]) {\r\n    const outDataSourceExists = pipelineDataSources.some(\r\n      pipelineDS => pipelineDS.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    );\r\n    if (!outDataSourceExists) {\r\n      const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n      const outDsConst: PipelineDataSource = {\r\n        Description: outDs.Description,\r\n        EntityGuid: outDs.EntityGuid,\r\n        EntityId: undefined,\r\n        Name: outDs.Name,\r\n        PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n        VisualDesignerData: outDs.VisualDesignerData,\r\n      };\r\n      pipelineDataSources.push(outDsConst);\r\n    }\r\n\r\n    for (const pipelineDataSource of pipelineDataSources) {\r\n      pipelineDataSource.VisualDesignerData ??= { Top: 50, Left: 50 };\r\n    }\r\n  }\r\n\r\n  fetchDataSources() {\r\n    return this.http.get<DataSource[]>(webApiQueryDataSources, {\r\n      params: {\r\n        appid: this.context.appId,\r\n        zoneId: this.context.zoneId,\r\n      },\r\n    }).pipe(\r\n      map(dataSources => {\r\n        const outDs = eavConstants.pipelineDesigner.outDataSource;\r\n        const outDsConst: DataSource = {\r\n          ContentType: undefined,\r\n          Difficulty: eavConstants.pipelineDesigner.dataSourceDifficulties.default,\r\n          DynamicIn: true,\r\n          DynamicOut: false,\r\n          EnableConfig: undefined,\r\n          HelpLink: undefined,\r\n          Icon: undefined,\r\n          In: outDs.In,\r\n          Name: outDs.Name,\r\n          Out: undefined,\r\n          PartAssemblyAndType: outDs.PartAssemblyAndType,\r\n          PrimaryType: outDs.PrimaryType,\r\n          TypeNameForUi: undefined,\r\n          UiHint: undefined,\r\n        };\r\n        dataSources.push(outDsConst);\r\n        return dataSources;\r\n      }),\r\n    );\r\n  }\r\n\r\n  typeNameFilter(input: string, format: 'className' | 'classFullName') {\r\n    const globalParts = input.split(', ');\r\n\r\n    switch (format) {\r\n      case 'classFullName':\r\n        const classFullName = globalParts[0];\r\n        return classFullName;\r\n      case 'className':\r\n        const classFullNameParts = globalParts[0].split('.');\r\n        const className = classFullNameParts[classFullNameParts.length - 1];\r\n        return className;\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  /** Save the current query and reload entire definition as returned from server */\r\n  savePipeline(pipelineModel: PipelineModel) {\r\n    const pipeline = pipelineModel.Pipeline;\r\n    const dataSources = pipelineModel.DataSources;\r\n\r\n    return this.http.post<PipelineModel>(\r\n      webApiQuerySave,\r\n      { pipeline, dataSources },\r\n      { params: { appId: this.context.appId.toString(), Id: pipeline.EntityId.toString() } }\r\n    ).pipe(\r\n      map(newPipelineModel => {\r\n        this.fixPipelineDataSources(newPipelineModel.DataSources);\r\n        return newPipelineModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  runPipeline(id: number, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryRun, {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), top: top.toString() }\r\n    });\r\n  }\r\n\r\n  /** `top` - fetch first X items */\r\n  debugStream(id: number, source: string, sourceOut: string, top: number) {\r\n    return this.http.get<PipelineResult>(webApiQueryDebugStream, {\r\n      params: { appId: this.context.appId.toString(), id: id.toString(), from: source, out: sourceOut, top: top.toString() }\r\n    });\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      Query Results\r\n      @if (debugStream) {\r\n        for Stream: \"{{ debugStream.name }}\" on Source: \"{{ debugStream.sourceName }}\"\r\n      }\r\n    </div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>\r\n      The Full result was logged to the Browser Console. Further down you'll find more debug-infos.\r\n      Executed in {{ timeUsed }}ms ({{ ticksUsed }} ticks)\r\n    </p>\r\n    <mat-tab-group dynamicHeight color=\"accent\" class=\"eav-tab-group\">\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Results\">\r\n          <span>Results</span>\r\n        </div>\r\n\r\n        <p class=\"eav-tab-description\">\r\n          @if (top === 0) {\r\n            Showing All results\r\n          }\r\n          @if (top !== 0) {\r\n            Showing top {{ top }} results\r\n          }\r\n          @for (option of optionsForTop; track option) {\r\n            <button mat-button (click)=\"show(option)\">\r\n              Show\r\n              @if (option === 0) {\r\n                All\r\n              }\r\n              @if (option !== 0) {\r\n                {{ option }}\r\n              }\r\n            </button>\r\n          }\r\n        </p>\r\n        <pre>{{ result | json }}</pre>\r\n      </mat-tab>\r\n\r\n      @if (parameters?.length) {\r\n        <mat-tab>\r\n          <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Parameters\">\r\n            <span>Parameters</span>\r\n          </div>\r\n          <br />\r\n          <ul>\r\n            @for (param of parameters; track param) {\r\n              <li>{{ param }}</li>\r\n            }\r\n          </ul>\r\n        </mat-tab>\r\n      }\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Sources\">\r\n          <span>Sources</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Name and Guid</th>\r\n            <th>Type</th>\r\n            <th>Configuration</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (source of sources | keyvalue; track source) {\r\n            <tr>\r\n              <td>\r\n                @if (source.value.Definition?.Name) {\r\n                  <div>{{ source.value.Definition?.Name }}</div>\r\n                }\r\n                <pre>{{ source.value.Guid }}</pre>\r\n              </td>\r\n              <td>{{ source.value.Type }}</td>\r\n              <td>\r\n                <ol>\r\n                  @for (config of source.value.Configuration | keyvalue; track config) {\r\n                    <li>\r\n                      <b>{{ config.key }}</b>=<em>{{ config.value }}</em>\r\n                    </li>\r\n                  }\r\n                </ol>\r\n              </td>\r\n              <td>{{ source.value.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n\r\n      <mat-tab>\r\n        <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Streams\">\r\n          <span>Streams</span>\r\n        </div>\r\n\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Source</th>\r\n            <th>Target</th>\r\n            <th>Items</th>\r\n            <th>Error</th>\r\n          </tr>\r\n          @for (stream of streams; track stream) {\r\n            <tr>\r\n              <td>\r\n                <pre>{{ stream.Source + \":\" + stream.SourceOut }}</pre>\r\n              </td>\r\n              <td>\r\n                <pre>{{ stream.Target + \":\" + stream.TargetIn }}</pre>\r\n              </td>\r\n              <td>{{ stream.Count }}</td>\r\n              <td>{{ stream.Error }}</td>\r\n            </tr>\r\n          }\r\n        </table>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DebugStreamInfo, PipelineResultQuery, PipelineResultSources, PipelineResultStream } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { QueryResultDialogData } from './query-result.models';\r\nimport { JsonPipe, KeyValuePipe } from '@angular/common';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-query-result',\r\n  templateUrl: './query-result.component.html',\r\n  styleUrls: ['./query-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    JsonPipe,\r\n    KeyValuePipe,\r\n  ],\r\n})\r\nexport class QueryResultComponent implements OnInit {\r\n  parameters: string[];\r\n  timeUsed: number;\r\n  ticksUsed: number;\r\n  top: number;\r\n  optionsForTop: number[];\r\n  result: PipelineResultQuery;\r\n  debugStream: DebugStreamInfo;\r\n  sources: PipelineResultSources;\r\n  streams: PipelineResultStream[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: QueryResultDialogData,\r\n    private dialogRef: MatDialogRef<QueryResultComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const pipeline = this.visualQueryService.pipelineModel$.value.Pipeline;\r\n    const params = (pipeline.Params?.split('\\n') ?? []).filter(el => !!el);\r\n    const testParams = (pipeline.TestParameters?.split('\\n') ?? []).filter(el => !!el);\r\n    this.parameters = [].concat(params, testParams);\r\n    this.timeUsed = this.dialogData.result.QueryTimer.Milliseconds;\r\n    this.ticksUsed = this.dialogData.result.QueryTimer.Ticks;\r\n    this.top = this.dialogData.top;\r\n    this.optionsForTop = [25, 100, 1000, 0];\r\n    this.result = this.dialogData.result.Query;\r\n    this.debugStream = this.dialogData.debugStream;\r\n    this.sources = this.dialogData.result.Sources;\r\n    this.streams = this.dialogData.result.Streams;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  show(top: number) {\r\n    if (top === this.top) { return; }\r\n\r\n    if (this.debugStream) {\r\n      this.visualQueryService.debugStream(this.debugStream.original, top);\r\n    } else {\r\n      this.visualQueryService.runPipeline(top);\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { StreamErrorData } from '../models';\r\nimport { StreamErrorResultDialogData } from './stream-error-result.models';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-stream-error-result',\r\n  templateUrl: './stream-error-result.component.html',\r\n  styleUrls: ['./stream-error-result.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    JsonPipe,\r\n  ],\r\n})\r\nexport class StreamErrorResultComponent implements OnInit {\r\n  errorData: StreamErrorData;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: StreamErrorResultDialogData,\r\n    private dialogRef: MatDialogRef<StreamErrorResultComponent>,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.errorData = this.dialogData.errorData;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/logs?key=web-api-query'), '_blank');\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Stream Error Results</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <pre>{{ errorData | json }}</pre>\r\n  </div>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button class=\"eav-button__with-icon\" tippy=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n      <mat-icon class=\"eav-icon\">speed</mat-icon>\r\n      <span>Insights</span>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Injectable, NgZone, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { BehaviorSubject, filter, fromEvent, Subject } from 'rxjs';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { MetadataService } from '../../permissions/services/metadata.service';\r\nimport { QueryDefinitionService } from './query-definition.service';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\n// tslint:disable-next-line:max-line-length\r\nimport { DataSource, DataSourceConfig, DataSourceConfigs, DebugStreamInfo, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { QueryResultComponent } from '../query-result/query-result.component';\r\nimport { QueryResultDialogData } from '../query-result/query-result.models';\r\nimport { StreamErrorResultComponent } from '../stream-error-result/stream-error-result.component';\r\nimport { StreamErrorResultDialogData } from '../stream-error-result/stream-error-result.models';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { transient } from '../../core';\r\n\r\n/**\r\n * Service containing the state for the visual query.\r\n * It's shared, so should not be used with transient(...);\r\n */\r\n@Injectable()\r\nexport class VisualQueryStateService extends BaseWithChildDialogComponent implements OnDestroy {\r\n  pipelineModel$ = new BehaviorSubject<PipelineModel>(null);\r\n  dataSources$ = new BehaviorSubject<DataSource[]>(null);\r\n  putEntityCountOnConnections$ = new Subject<PipelineResult>();\r\n  dataSourceConfigs$ = new BehaviorSubject<DataSourceConfigs>({});\r\n  pipelineResult?: PipelineResult;\r\n\r\n  private pipelineId = parseInt(this.route.snapshot.paramMap.get('pipelineId'), 10);\r\n  private refreshPipeline = false;\r\n  private refreshDataSourceConfigs = false;\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n  \r\n  private metadataService = transient(MetadataService);\r\n\r\n  private queryDefinitionService = transient(QueryDefinitionService);\r\n\r\n  private titleService = transient(Title);\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pipelineModel$.complete();\r\n    this.dataSources$.complete();\r\n    this.putEntityCountOnConnections$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  init() {\r\n    this.fetchDataSources(() => this.fetchPipeline(true, true, false));\r\n    this.attachKeyboardSave();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => {\r\n      if (this.refreshPipeline || this.refreshDataSourceConfigs) {\r\n        this.fetchPipeline(this.refreshPipeline, this.refreshDataSourceConfigs, this.refreshPipeline);\r\n      }\r\n      this.refreshPipeline = false;\r\n      this.refreshDataSourceConfigs = false;\r\n    }));\r\n  }\r\n\r\n  editPipelineEntity() {\r\n    // save Pipeline, then open Edit Dialog\r\n    this.savePipeline(() => {\r\n      const form: EditForm = {\r\n        items: [{ EntityId: this.pipelineModel$.value.Pipeline.EntityId }],\r\n      };\r\n      const formUrl = convertFormToUrl(form);\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n      this.refreshPipeline = true;\r\n    });\r\n  }\r\n\r\n  saveAndRun(save: boolean, run: boolean) {\r\n    if (save && run) {\r\n      this.savePipeline(() => { this.runPipeline(); });\r\n    } else if (save) {\r\n      this.savePipeline();\r\n    } else if (run) {\r\n      this.runPipeline();\r\n    }\r\n  }\r\n\r\n  showDataSourceDetails(showDetails: boolean) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const visualDesignerData: Record<string, any> = JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {};\r\n    visualDesignerData.ShowDataSourceDetails = showDetails;\r\n    pipelineModel.Pipeline.VisualDesignerData = JSON.stringify(visualDesignerData);\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const newPipelineDataSource: PipelineDataSource = {\r\n      Description: '',\r\n      EntityGuid: 'unsaved' + (pipelineModel.DataSources.length + 1),\r\n      EntityId: undefined,\r\n      Name: dataSource.Name,\r\n      PartAssemblyAndType: dataSource.PartAssemblyAndType,\r\n      VisualDesignerData: { Top: 100, Left: 100 },\r\n    };\r\n    pipelineModel.DataSources.push(newPipelineDataSource);\r\n    this.pipelineModel$.next(pipelineModel);\r\n    this.savePipeline();\r\n  }\r\n\r\n  removeDataSource(pipelineDataSourceGuid: string, connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.DataSources = pipelineModel.DataSources.filter(pipelineDS => pipelineDS.EntityGuid !== pipelineDataSourceGuid);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  renameDataSource(pipelineDataSourceGuid: string, name: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Name = name;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourceDescription(pipelineDataSourceGuid: string, description: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    pipelineDataSource.Description = description;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeConnections(connections: StreamWire[], streamsOut: string) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    pipelineModel.Pipeline.StreamWiring = connections;\r\n    pipelineModel.Pipeline.StreamsOut = streamsOut;\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  changeDataSourcePosition(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    const pipelineModel = cloneDeep(this.pipelineModel$.value);\r\n    const pipelineDataSource = pipelineModel.DataSources.find(pipelineDS => pipelineDS.EntityGuid === pipelineDataSourceGuid);\r\n    if (!pipelineDataSource) {\r\n      // spm NOTE: fixes problem where dataSource position can't be updated if dataSource with guid unsavedXX gets saved while dragging.\r\n      // Can happen if dataSource is just added and user drags it and save happens.\r\n      return;\r\n    }\r\n    pipelineDataSource.VisualDesignerData = { ...pipelineDataSource.VisualDesignerData, ...position };\r\n    this.pipelineModel$.next(pipelineModel);\r\n  }\r\n\r\n  private calculateDataSourceConfigs(dataSources: PipelineDataSource[]) {\r\n    const dataSourceConfigs: DataSourceConfigs = {};\r\n    dataSources.forEach(dataSource => {\r\n      if (dataSource.EntityId == null) return;\r\n      dataSourceConfigs[dataSource.EntityId] = [];\r\n      dataSource.Metadata?.forEach(metadataItem => {\r\n        Object.entries(metadataItem).forEach(([attributeName, attributeValue]) => {\r\n          if (attributeValue == null || attributeValue === '') return;\r\n          if (['Created', 'Guid', 'Id', 'Modified', 'Title', '_Type'].includes(attributeName)) return;\r\n          if (Array.isArray(attributeValue) && attributeValue[0]?.Title != null && attributeValue[0]?.Id != null) {\r\n            attributeValue = `${attributeValue[0].Title} (${attributeValue[0].Id})`;\r\n          }\r\n          const dataSourceConfig: DataSourceConfig = {\r\n            name: attributeName,\r\n            value: attributeValue,\r\n          };\r\n          dataSourceConfigs[dataSource.EntityId].push(dataSourceConfig);\r\n        });\r\n      });\r\n    });\r\n    this.dataSourceConfigs$.next(dataSourceConfigs);\r\n  }\r\n\r\n  editDataSource(pipelineDataSource: PipelineDataSource) {\r\n    const dataSource = this.dataSources$.value.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const contentTypeName = dataSource.ContentType;\r\n    const targetType = eavConstants.metadata.entity.targetType;\r\n    const keyType = eavConstants.metadata.entity.keyType;\r\n    const key = pipelineDataSource.EntityGuid;\r\n\r\n    // query for existing Entity\r\n    this.metadataService.getMetadata(targetType, keyType, key, contentTypeName).subscribe(metadata => {\r\n      // edit existing Entity\r\n      if (metadata.Items.length) {\r\n        const form: EditForm = {\r\n          items: [{ EntityId: metadata.Items[0].Id }],\r\n        };\r\n        const formUrl = convertFormToUrl(form);\r\n        this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n        this.refreshDataSourceConfigs = true;\r\n        return;\r\n      }\r\n\r\n      // Check if the type exists, and if yes, create new Entity\r\n      this.contentTypesService.retrieveContentType(contentTypeName).subscribe({\r\n        next: contentType => {\r\n          if (contentType == null) {\r\n            this.snackBar.open('DataSource doesn\\'t have any configuration', undefined, { duration: 3000 });\r\n            return;\r\n          }\r\n          const form: EditForm = {\r\n            items: [{\r\n              ContentTypeName: contentTypeName,\r\n              For: {\r\n                Target: eavConstants.metadata.entity.target,\r\n                TargetType: eavConstants.metadata.entity.targetType,\r\n                Guid: key,\r\n              },\r\n            }],\r\n          };\r\n          const formUrl = convertFormToUrl(form);\r\n          this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n          this.refreshDataSourceConfigs = true;\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          const message = 'Server reports error - this usually means that this DataSource doesn\\'t have any configuration';\r\n          this.snackBar.open(message, undefined, { duration: 3000 });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private savePipeline(callback?: () => void) {\r\n    this.snackBar.open('Saving...');\r\n    this.queryDefinitionService.savePipeline(this.pipelineModel$.value).subscribe({\r\n      next: pipelineModel => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.pipelineModel$.next(pipelineModel);\r\n        if (callback != null) { callback(); }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Save Pipeline failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  runPipeline(top = 25) {\r\n    this.snackBar.open('Running query...');\r\n    this.queryDefinitionService.runPipeline(this.pipelineModel$.value.Pipeline.EntityId, top).subscribe({\r\n      next: pipelineResult => {\r\n        this.snackBar.open('Query worked', null, { duration: 2000 });\r\n        this.pipelineResult = pipelineResult;\r\n        this.showQueryResult(pipelineResult, top);\r\n        console.warn(pipelineResult);\r\n        // push cloned pipelineModel to reset jsPlumb\r\n        this.pipelineModel$.next(cloneDeep(this.pipelineModel$.value));\r\n        setTimeout(() => { this.putEntityCountOnConnections$.next(pipelineResult); });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Query failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  debugStream(stream: PipelineResultStream, top = 25) {\r\n    if (stream.Error) {\r\n      this.showStreamErrorResult(stream);\r\n      return;\r\n    }\r\n\r\n    if (stream.Count === 0) return;\r\n\r\n    this.snackBar.open('Running stream...');\r\n    const pipelineId = this.pipelineModel$.value.Pipeline.EntityId;\r\n    this.queryDefinitionService.debugStream(pipelineId, stream.Source, stream.SourceOut, top).subscribe({\r\n      next: streamResult => {\r\n        this.snackBar.open('Stream worked', null, { duration: 2000 });\r\n        const pipelineDataSource = this.pipelineModel$.value.DataSources.find(ds => ds.EntityGuid === stream.Source);\r\n        const debugStream: DebugStreamInfo = {\r\n          name: stream.SourceOut,\r\n          source: stream.Source,\r\n          sourceName: pipelineDataSource.Name,\r\n          original: stream,\r\n        };\r\n        this.showQueryResult(streamResult, top, debugStream);\r\n        console.warn(streamResult);\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Stream failed', null, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private fetchPipeline(refreshPipeline: boolean, refreshDataSourceConfigs: boolean, showSnackBar: boolean) {\r\n    if (showSnackBar) {\r\n      this.snackBar.open('Reloading query, please wait...');\r\n    }\r\n    this.queryDefinitionService.fetchPipeline(this.pipelineId, this.dataSources$.value).subscribe(pipelineModel => {\r\n      if (showSnackBar) {\r\n        this.snackBar.open('Query reloaded', null, { duration: 2000 });\r\n      }\r\n      this.titleService.setTitle(`${pipelineModel.Pipeline.Name} - Visual Query`);\r\n      if (refreshPipeline) {\r\n        this.pipelineModel$.next(pipelineModel);\r\n      }\r\n      if (refreshDataSourceConfigs) {\r\n        this.calculateDataSourceConfigs(pipelineModel.DataSources);\r\n      }\r\n    });\r\n  }\r\n\r\n  private showQueryResult(result: PipelineResult, top: number, debugStream?: DebugStreamInfo) {\r\n    const dialogData: QueryResultDialogData = {\r\n      result,\r\n      debugStream,\r\n      top,\r\n    };\r\n    this.dialog.open(QueryResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private showStreamErrorResult(stream: PipelineResultStream) {\r\n    const dialogData: StreamErrorResultDialogData = {\r\n      errorData: stream.ErrorData,\r\n    };\r\n    this.dialog.open(StreamErrorResultComponent, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: dialogData,\r\n      panelClass: ['dialog-panel', `dialog-panel-medium`, 'no-scrollbar'],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private fetchDataSources(callback?: () => void) {\r\n    this.queryDefinitionService.fetchDataSources().subscribe(dataSources => {\r\n      this.dataSources$.next(dataSources);\r\n      callback();\r\n    });\r\n  }\r\n\r\n  private attachKeyboardSave() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n          filter(() => !this.route.snapshot.firstChild),\r\n          filter(event => {\r\n            const CTRL_S = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.keyCode === 83;\r\n            return CTRL_S;\r\n          }),\r\n        ).subscribe(event => {\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.savePipeline(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { DataSource, PipelineDataSource } from '../models';\r\nimport { GuiTypes, TypeInfo, TypeInfos } from './plumb-editor.models';\r\n\r\nexport const guiTypes: GuiTypes = {\r\n  App: { Name: 'App', Label: 'App DataSources', Icon: 'star', UiHint: 'DataSources from the current App' },\r\n  Cache: { Name: 'Cache', Icon: 'history', UiHint: 'Caching of data' },\r\n  Filter: { Name: 'Filter', Icon: 'filter_list', UiHint: 'Filter data - usually returning less items than came in' },\r\n  Logic: { Name: 'Logic', Icon: 'share', UiHint: 'Logic operations - usually choosing between different streams' },\r\n  Lookup: { Name: 'Lookup', Icon: 'search', UiHint: 'Lookup operation - usually looking for other data based on a criteria' },\r\n  Modify: { Name: 'Modify', Icon: 'edit_attributes', UiHint: 'Modify data - usually changing, adding or removing values' },\r\n  Security: { Name: 'Security', Icon: 'account_circle', UiHint: 'Security - usually limit what the user sees based on his identity' },\r\n  Sort: { Name: 'Sort', Icon: 'sort', UiHint: 'Sort the items' },\r\n  Source: { Name: 'Source', Icon: 'cloud_upload', UiHint: 'Source of new data - usually SQL, CSV or similar' },\r\n  Target: { Name: 'Target', Icon: 'adjust', UiHint: 'Target - usually just a destination of data' },\r\n  Unknown: { Name: 'Unknown', Icon: 'fiber_manual_record', UiHint: 'Unknown type' },\r\n  Debug: { Name: 'Debug', Icon: 'bug_report', UiHint: 'Debugging Tools'},\r\n  System: { Name: 'System', Icon: 'military_tech', UiHint: 'System Data' },\r\n};\r\n\r\nexport function calculateTypeInfos(pipelineDataSources: PipelineDataSource[], dataSources: DataSource[]) {\r\n  const typeInfos: TypeInfos = {};\r\n\r\n  for (const pipelineDataSource of pipelineDataSources) {\r\n    let typeInfo: TypeInfo;\r\n    const dataSource = dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    if (dataSource) {\r\n      typeInfo = { ...(dataSource.PrimaryType ? guiTypes[dataSource.PrimaryType] : guiTypes.Unknown) };\r\n      if (dataSource.Icon != null) { typeInfo.Icon = dataSource.Icon; }\r\n      if (dataSource.DynamicIn != null) { typeInfo.DynamicIn = dataSource.DynamicIn; }\r\n      if (dataSource.DynamicOut != null) { typeInfo.DynamicOut = dataSource.DynamicOut; }\r\n      if (dataSource.HelpLink != null) { typeInfo.HelpLink = dataSource.HelpLink; }\r\n      if (dataSource.EnableConfig != null) { typeInfo.EnableConfig = dataSource.EnableConfig; }\r\n      if (dataSource.UiHint != null) { typeInfo.UiHint = dataSource.UiHint; }\r\n    }\r\n    if (!typeInfo) { typeInfo = { ...guiTypes.Unknown }; }\r\n    typeInfos[pipelineDataSource.EntityGuid] = typeInfo;\r\n  }\r\n\r\n  return typeInfos;\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Rename stream</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <form [formGroup]=\"form\">\r\n      <!-- Simple form -->\r\n      @if (!isSource || !pipelineResultExists) {\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"label\" required>\r\n        </mat-form-field>\r\n        @if (isSource && !pipelineResultExists) {\r\n          <app-field-hint>\r\n            You will get suggestions for out-streams after you run query\r\n          </app-field-hint>\r\n        }\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n\r\n      <!-- Rich form -->\r\n      @if (isSource && pipelineResultExists) {\r\n        <!-- Scope -->\r\n        @if (advancedMode && guidedLabel) {\r\n          <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n            <mat-label>Scope</mat-label>\r\n            <mat-select formControlName=\"scope\" [placeholder]=\"!scopeOptions.length ? 'No items found' : ''\">\r\n              @for (scopeOption of scopeOptions; track scopeOption) {\r\n                <mat-option [value]=\"scopeOption.value\">\r\n                  {{ scopeOption.name }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <app-field-hint>\r\n            The scope should almost never be changed -\r\n            <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n          </app-field-hint>\r\n        }\r\n        <!-- Label -->\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Label</mat-label>\r\n          @if (guidedLabel) {\r\n            <mat-select formControlName=\"label\" required\r\n              [placeholder]=\"!labelOptions.length ? 'No items found' : ''\">\r\n              @for (labelOption of labelOptions; track labelOption) {\r\n                <mat-option [value]=\"labelOption\">\r\n                  {{ labelOption }}\r\n                </mat-option>\r\n              }\r\n            </mat-select>\r\n          }\r\n          @if (!guidedLabel) {\r\n            <input matInput type=\"text\" formControlName=\"label\" required>\r\n          }\r\n          <div matTextSuffix class=\"eav-selection-suffix\">\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': guidedLabel }\" tippy=\"Pick existing value\"\r\n              (click)=\"toggleGuidedLabel(true)\">\r\n              <mat-icon class=\"eav-icon\">search</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"eav-selection-suffix-button\" type=\"button\" [ngClass]=\"{ 'active': !guidedLabel }\" tippy=\"Manual entry\"\r\n              (click)=\"toggleGuidedLabel(false)\">\r\n              <mat-icon class=\"eav-icon\">text_fields</mat-icon>\r\n            </button>\r\n          </div>\r\n        </mat-form-field>\r\n        @if (controls.label.touched && controls.label.errors?.required) {\r\n          <app-field-hint [isError]=\"true\">\r\n            This field is required\r\n          </app-field-hint>\r\n        }\r\n      }\r\n    </form>\r\n  </div>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <!-- Extra button for rich form -->\r\n    <div>\r\n      @if (isSource && pipelineResultExists) {\r\n        <mat-slide-toggle color=\"accent\" [checked]=\"advancedMode\" (change)=\"toggleAdvancedMode($event)\">\r\n          {{ advancedMode ? 'Advanced' : 'Simple' }}\r\n        </mat-slide-toggle>\r\n      }\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"!form.valid\" (click)=\"rename()\">\r\n        Rename\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { ChangeDetectorRef, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { distinctUntilChanged, startWith } from 'rxjs';\r\nimport { ContentTypesService } from '../../../app-administration/services';\r\nimport { BaseComponent } from '../../../shared/components/base.component';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { VisualQueryStateService } from '../../services/visual-query.service';\r\nimport { RenameStreamDialogControls, RenameStreamDialogData, RenameStreamDialogFormValue } from './rename-stream.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-rename-stream',\r\n  templateUrl: './rename-stream.component.html',\r\n  styleUrls: ['./rename-stream.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    MatDialogActions,\r\n    MatSlideToggleModule,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n  ],\r\n})\r\nexport class RenameStreamComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: UntypedFormGroup;\r\n  controls: RenameStreamDialogControls;\r\n  isSource = this.dialogData.isSource;\r\n  pipelineResultExists = this.visualQueryService.pipelineResult != null;\r\n  scopeOptions: ScopeOption[] = [];\r\n  labelOptions: string[] = [];\r\n  guidedLabel = true;\r\n  advancedMode = false;\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: RenameStreamDialogData,\r\n    private dialogRef: MatDialogRef<RenameStreamComponent>,\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog(label?: string): void {\r\n    this.dialogRef.close(label);\r\n  }\r\n\r\n  toggleGuidedLabel(guidedLabel: boolean): void {\r\n    this.guidedLabel = guidedLabel;\r\n  }\r\n\r\n  toggleAdvancedMode(event: MatSlideToggleChange): void {\r\n    this.advancedMode = event.checked;\r\n  }\r\n\r\n  rename(): void {\r\n    const formValue: RenameStreamDialogFormValue = this.form.getRawValue();\r\n    this.closeDialog(formValue.label);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new UntypedFormGroup({\r\n      label: new UntypedFormControl(this.dialogData.label, Validators.required),\r\n      scope: new UntypedFormControl(eavConstants.scopes.default.value),\r\n    });\r\n    this.controls = this.form.controls as any;\r\n\r\n    if (!this.isSource || !this.pipelineResultExists) { return; }\r\n\r\n    this.subscriptions.add(\r\n      this.controls.scope.valueChanges.pipe(\r\n        startWith<string>(this.controls.scope.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.labelOptions = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n          .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out\r\n          .filter(out => out.Scope === scope)\r\n          .map(out => out.Name);\r\n        if (!this.labelOptions.includes(this.controls.label.value) && this.controls.label.value != null) {\r\n          this.controls.label.patchValue(null);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.contentTypesService.getScopes().subscribe(scopes => {\r\n      const sourceOut = Object.values(this.visualQueryService.pipelineResult.Sources)\r\n        .find(source => source.Guid === this.dialogData.pipelineDataSourceGuid).Out;\r\n      const filtered = scopes.filter(s => sourceOut.some(o => o.Scope === s.value));\r\n      this.scopeOptions = filtered;\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DataSource, PipelineDataSource, PipelineModel, PipelineResult, PipelineResultStream, StreamWire, VisualDesignerData } from '../models';\r\nimport { EndpointInfo, PlumbType } from './plumb-editor.models';\r\nimport { RenameStreamComponent } from './rename-stream/rename-stream.component';\r\nimport { RenameStreamDialogData } from './rename-stream/rename-stream.models';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'Plumber';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const dataSrcIdPrefix = 'dataSource_';\r\n\r\nconst endPointsWhereWeRotate = 3;\r\n\r\nexport class Plumber {\r\n  private log = new EavLogger(nameOfThis, logThis);\r\n  private instance: PlumbType;\r\n  private lineCount = 0;\r\n  private linePaintDefault = {\r\n    stroke: '#61B7CF',\r\n    strokeWidth: 4,\r\n    outlineStroke: 'white',\r\n    outlineWidth: 2,\r\n  };\r\n  private lineColors = [\r\n    '#009688', '#00bcd4', '#3f51b5', '#9c27b0', '#e91e63',\r\n    '#db4437', '#ff9800', '#60a917', '#60a917', '#008a00',\r\n    '#00aba9', '#1ba1e2', '#0050ef', '#6a00ff', '#aa00ff',\r\n    '#f472d0', '#d80073', '#a20025', '#e51400', '#fa6800',\r\n    '#f0a30a', '#e3c800', '#825a2c', '#6d8764', '#647687',\r\n    '#76608a', '#a0522d',\r\n  ];\r\n  private maxCols = this.lineColors.length - 1;\r\n  private uuidColorMap: Record<string, any> = {};\r\n  private bulkDelete = false;\r\n  private dialogRef: MatDialogRef<RenameStreamComponent>;\r\n\r\n  constructor(\r\n    private jsPlumbRoot: HTMLElement,\r\n    private pipelineModel: PipelineModel,\r\n    private dataSources: DataSource[],\r\n    private onConnectionsChanged: () => void,\r\n    private onDragend: (pipelineDataSourceGuid: string, position: VisualDesignerData) => void,\r\n    private onDebugStream: (stream: PipelineResultStream) => void,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    this.instance = window.jsPlumb.getInstance(this.getInstanceDefaults(this.jsPlumbRoot));\r\n    this.instance.batch(() => {\r\n      this.initDomDataSources();\r\n      this.initWirings();\r\n      this.bindEvents();\r\n    });\r\n    // spm NOTE: repaint after initial paint fixes:\r\n    // Error: <svg> attribute width: Expected length, \"-Infinity\".\r\n    this.instance.repaintEverything();\r\n  }\r\n\r\n  destroy() {\r\n    this.dialogRef?.close();\r\n    this.instance.reset();\r\n    this.instance.unbindContainer();\r\n  }\r\n\r\n  removeEndpointsOnDataSource(pipelineDataSourceGuid: string) {\r\n    const elementId = dataSrcIdPrefix + pipelineDataSourceGuid;\r\n    this.bulkDelete = true;\r\n    this.instance.batch(() => {\r\n      this.instance.selectEndpoints({ element: elementId }).delete();\r\n    });\r\n    this.bulkDelete = false;\r\n  }\r\n\r\n  getAllConnections() {\r\n    const connectionInfos: StreamWire[] = this.instance.getAllConnections().map((connection: PlumbType) => {\r\n      const wire: StreamWire = {\r\n        From: connection.sourceId.replace(dataSrcIdPrefix, ''),\r\n        Out: connection.endpoints[0].getOverlay('endpointLabel').label,\r\n        To: connection.targetId.replace(dataSrcIdPrefix, ''),\r\n        In: connection.endpoints[1].getOverlay('endpointLabel').label,\r\n      };\r\n      return wire;\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  getStreamsOut() {\r\n    const streamsOut: string[] = [];\r\n    this.instance.selectEndpoints({ target: dataSrcIdPrefix + 'Out' }).each((endpoint: PlumbType) => {\r\n      streamsOut.push(endpoint.getOverlay('endpointLabel').label);\r\n    });\r\n    const streamsOutStr = streamsOut.join(',');\r\n    return streamsOutStr;\r\n  }\r\n\r\n  putEntityCountOnConnections(result: PipelineResult) {\r\n    result.Streams?.forEach(stream => {\r\n      const sourceElementId = dataSrcIdPrefix + stream.Source;\r\n      const outTargets = ['00000000-0000-0000-0000-000000000000', this.pipelineModel.Pipeline.EntityGuid];\r\n      const targetElementId = outTargets.includes(stream.Target) ? dataSrcIdPrefix + 'Out' : dataSrcIdPrefix + stream.Target;\r\n\r\n      const fromUuid = sourceElementId + '_out_' + stream.SourceOut;\r\n      const toUuid = targetElementId + '_in_' + stream.TargetIn;\r\n\r\n      const sEndp: PlumbType = this.instance.getEndpoint(fromUuid);\r\n      sEndp?.connections\r\n        ?.filter((connection: PlumbType) => connection.endpoints[1].getUuid() === toUuid)\r\n        ?.forEach((connection: PlumbType) => {\r\n          const label = !stream.Error ? stream.Count.toString() : '';\r\n          const cssClass = 'streamEntitiesCount ' + (!stream.Error ? '' : 'streamEntitiesError');\r\n          connection.setLabel({\r\n            label,\r\n            cssClass,\r\n            events: {\r\n              click: (overlay: PlumbType) => {\r\n                if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n                this.onDebugStream(stream);\r\n              },\r\n            },\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  private nextLinePaintStyle(uuid: string) {\r\n    return (\r\n      this.uuidColorMap[uuid] ||\r\n      (this.uuidColorMap[uuid] = Object.assign({}, this.linePaintDefault, { stroke: this.lineColors[this.lineCount++ % this.maxCols] }))\r\n    );\r\n  }\r\n\r\n  private getInstanceDefaults(container: HTMLElement) {\r\n    const defaults = {\r\n      Container: container,\r\n      Connector: ['Bezier', { curviness: 70 }],\r\n      PaintStyle: this.nextLinePaintStyle('dummy'),\r\n      HoverPaintStyle: {\r\n        stroke: '#216477',\r\n        strokeWidth: 4,\r\n        outlineStroke: 'white',\r\n        outlineWidth: 2,\r\n      },\r\n    };\r\n    return defaults;\r\n  }\r\n\r\n  /** Create sources, targets and endpoints */\r\n  private initDomDataSources() {\r\n    const l = this.log.fnCond(false, 'initDomDataSources');\r\n    for (const pipelineDataSource of this.pipelineModel.DataSources) {\r\n      const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + dataSrcIdPrefix + pipelineDataSource.EntityGuid);\r\n      if (!domDataSource) continue;\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      if (!dataSource) continue;\r\n\r\n      if (this.pipelineModel.Pipeline.AllowEdit) {\r\n        // WARNING! Must happen before instance.makeSource()\r\n        this.instance.draggable(domDataSource, {\r\n          grid: [20, 20], stop: (event: PlumbType) => {\r\n            const element: HTMLElement = event.el;\r\n            const pipelineDataSourceGuid: string = element.id.replace(dataSrcIdPrefix, '');\r\n            const position: VisualDesignerData = {\r\n              Top: event.finalPos[1],\r\n              Left: event.finalPos[0],\r\n            };\r\n            setTimeout(() => { this.onDragend(pipelineDataSourceGuid, position); });\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add Out-Endpoints from Definition\r\n      const outCount = dataSource.Out?.length ?? 0;\r\n      l.a('dataSource.Out', { outCount, out: dataSource.Out });\r\n      dataSource.Out?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, false, pipelineDataSource, outCount);\r\n      });\r\n\r\n      // Add In-Endpoints from Definition\r\n      const inCount = dataSource.In?.length ?? 0;\r\n      l.a('dataSource.In', { inCount, in: dataSource.In });\r\n      dataSource.In?.forEach(name => {\r\n        this.addEndpoint(domDataSource, name, true, pipelineDataSource, inCount);\r\n      });\r\n\r\n      // Make DataSource a Target for new Endpoints (if .In is an Array)\r\n      if (dataSource.In) {\r\n        const targetEndpointUnlimited = this.buildTargetEndpoint(pipelineDataSource.EntityGuid);\r\n        targetEndpointUnlimited.maxConnections = -1;\r\n        this.instance.makeTarget(domDataSource, targetEndpointUnlimited);\r\n      }\r\n\r\n      if (dataSource.DynamicOut)\r\n        this.instance.makeSource(domDataSource, this.buildSourceEndpoint(pipelineDataSource.EntityGuid), { filter: '.add-endpoint' });\r\n    }\r\n    l.end();\r\n  }\r\n\r\n  /** Create wires */\r\n  private initWirings() {\r\n    const l = this.log.fn('initWirings');\r\n    const wirings = this.pipelineModel.Pipeline.StreamWiring;\r\n    if (!wirings) return l.end(null, 'no wirings');\r\n\r\n    const inGroups = groupBy(wirings, wire => wire.To);\r\n    const outGroups = groupBy(wirings, wire => wire.From);\r\n\r\n    l.values({ inGroups, outGroups });\r\n\r\n    wirings.forEach(wire => {\r\n      // read connections from Pipeline\r\n      const sourceElementId = dataSrcIdPrefix + wire.From;\r\n      const fromUuid = sourceElementId + '_out_' + wire.Out;\r\n      const targetElementId = dataSrcIdPrefix + wire.To;\r\n      const toUuid = targetElementId + '_in_' + wire.In;\r\n\r\n      // Ensure In-Endpoint exist\r\n      if (!this.instance.getEndpoint(fromUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + sourceElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        this.addEndpoint(domDataSource, wire.Out, false, dataSource, outGroups[wire.From].length);\r\n      }\r\n\r\n      // Ensure Out-Endpoint exist\r\n      if (!this.instance.getEndpoint(toUuid)) {\r\n        const domDataSource = this.jsPlumbRoot.querySelector<HTMLElement>('#' + targetElementId);\r\n        if (!domDataSource) return;\r\n\r\n        const guid: string = domDataSource.id.replace(dataSrcIdPrefix, '');\r\n        const dataSource = this.pipelineModel.DataSources.find(pipeDataSource => pipeDataSource.EntityGuid === guid);\r\n        \r\n        // if (wire.In === \"DEBUG\") debugger;\r\n\r\n        this.addEndpoint(domDataSource, wire.In, true, dataSource, inGroups[wire.To].length);\r\n      }\r\n\r\n      try {\r\n        this.instance.connect({\r\n          uuids: [fromUuid, toUuid],\r\n          paintStyle: this.nextLinePaintStyle(fromUuid),\r\n        });\r\n      } catch (e) {\r\n        console.error({ message: 'Connection failed', from: fromUuid, to: toUuid });\r\n      }\r\n    });\r\n    l.end();\r\n  }\r\n\r\n  private addEndpoint(domDataSource: HTMLElement, endpointName: string, isIn: boolean, pipelineDataSource: PipelineDataSource, count: number = 0) {\r\n    const l = this.log.fnCond(false, 'addEndpoint', { endpointName, isIn, pipelineDataSource });\r\n    const dataSource = this.dataSources.find(d => d.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n    const connectionList = isIn ? dataSource.In : dataSource.Out;\r\n    const isDynamic = connectionList?.some(name => this.getEndpointInfo(name, false));\r\n    // const count = connectionList?.length ?? -1;\r\n    const endpointInfo = this.getEndpointInfo(endpointName, isDynamic);\r\n    \r\n    l.a(`endpointInfo ${count}`, { dataSource, connectionList, isDynamic, count, endpointInfo });\r\n\r\n    // if (endpointName === \"DEBUG\") debugger;\r\n\r\n    let style: string;\r\n    if (isDynamic)\r\n      style = 'dynamic';\r\n    else if (!endpointInfo.required)\r\n      style = '';\r\n    else {\r\n      const wireExists = this.pipelineModel.Pipeline.StreamWiring?.some(wire => {\r\n        const targetElementId = dataSrcIdPrefix + wire.To;\r\n        const targetEndpointName = wire.In;\r\n\r\n        return targetElementId === domDataSource.id && targetEndpointName === endpointInfo.name;\r\n      });\r\n      style = wireExists ? '' : 'required';\r\n    }\r\n\r\n    const uuid = domDataSource.id + (isIn ? '_in_' : '_out_') + endpointInfo.name;\r\n    const angled = count > endPointsWhereWeRotate;\r\n    const model = isIn\r\n      ? this.buildTargetEndpoint(pipelineDataSource.EntityGuid, style)\r\n      : this.buildSourceEndpoint(pipelineDataSource.EntityGuid, style);\r\n    // Endpoints on Out-DataSource must be always enabled\r\n    const params = {\r\n      uuid,\r\n      enabled: this.pipelineModel.Pipeline.AllowEdit\r\n        || pipelineDataSource.EntityGuid === eavConstants.pipelineDesigner.outDataSource.EntityGuid\r\n    };\r\n\r\n    const endpoint: PlumbType = this.instance.addEndpoint(domDataSource, model, params);\r\n    const overlay = endpoint.getOverlay('endpointLabel');\r\n    overlay.setLabel(endpointInfo.name);\r\n    if (angled)\r\n      overlay.addClass('angled');\r\n    l.end({count, angled, overlay}, \"end\");\r\n  }\r\n\r\n  private buildSourceEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = true;\r\n    const sourceEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'sourceEndpoint ' + style ?? '',\r\n      maxConnections: -1,\r\n      isSource,\r\n      anchor: ['Continuous', { faces: ['top'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return sourceEndpoint;\r\n  }\r\n\r\n  private buildTargetEndpoint(pipelineDataSourceGuid: string, style?: string) {\r\n    const isSource = false;\r\n    const targetEndpoint = {\r\n      paintStyle: { fill: 'transparent', radius: 10 },\r\n      cssClass: 'targetEndpoint ' + (style ?? ' '), // + (angled ? 'angled' : ''),\r\n      maxConnections: 1,\r\n      isTarget: !isSource,\r\n      anchor: ['Continuous', { faces: ['bottom'] }],\r\n      overlays: this.getEndpointOverlays(isSource),\r\n      dropOptions: { hoverClass: 'hover', activeClass: 'active' },\r\n      events: {\r\n        click: (endpointOrOverlay: PlumbType) => {\r\n          this.onChangeLabel(endpointOrOverlay, isSource, pipelineDataSourceGuid);\r\n        },\r\n      },\r\n    };\r\n    return targetEndpoint;\r\n  }\r\n\r\n  private getEndpointOverlays(isSource: boolean) {\r\n    return [\r\n      [\r\n        'Label', {\r\n          id: 'endpointLabel',\r\n          location: [0.5, isSource ? 0 : 1],\r\n          label: 'Default',\r\n          cssClass: isSource ? 'endpointSourceLabel' : 'endpointTargetLabel',\r\n        },\r\n      ],\r\n    ];\r\n  }\r\n\r\n  private onChangeLabel(endpointOrOverlay: PlumbType, isSource: boolean, pipelineDataSourceGuid: string) {\r\n    if (!this.pipelineModel.Pipeline.AllowEdit) return;\r\n\r\n    const overlay: PlumbType = endpointOrOverlay.getOverlay ? endpointOrOverlay.getOverlay('endpointLabel') : endpointOrOverlay;\r\n    const data: RenameStreamDialogData = {\r\n      pipelineDataSourceGuid,\r\n      isSource,\r\n      label: overlay.label,\r\n    };\r\n    this.dialogRef = this.dialog.open(RenameStreamComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n    this.dialogRef.afterClosed().subscribe(newLabel => {\r\n      if (!newLabel) return;\r\n      overlay.setLabel(newLabel);\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private bindEvents() {\r\n    this.instance.bind('connectionDetached', (info: PlumbType) => {\r\n      if (this.bulkDelete) return;\r\n      const domDataSource: HTMLElement = info.target;\r\n      const pipelineDataSource = this.pipelineModel.DataSources.find(\r\n        pipelineDS => pipelineDS.EntityGuid === domDataSource.id.replace(dataSrcIdPrefix, '')\r\n      );\r\n      const dataSource = this.dataSources.find(ds => ds.PartAssemblyAndType === pipelineDataSource.PartAssemblyAndType);\r\n      const label: string = info.targetEndpoint.getOverlay('endpointLabel').label;\r\n      const isDynamic = !dataSource.In.some(name => this.getEndpointInfo(name, false).name === label);\r\n      if (isDynamic) {\r\n        this.instance.deleteEndpoint(info.targetEndpoint);\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      } else {\r\n        setTimeout(() => { this.onConnectionsChanged(); });\r\n      }\r\n    });\r\n\r\n    this.instance.bind('connection', (info: PlumbType) => {\r\n      if (info.sourceId === info.targetId) {\r\n        setTimeout(() => {\r\n          this.instance.deleteConnection(info.connection, { fireEvent: false });\r\n          setTimeout(() => { this.onConnectionsChanged(); });\r\n        });\r\n        return;\r\n      }\r\n      const endpointLabel: PlumbType = info.targetEndpoint.getOverlay('endpointLabel');\r\n      const labelPrompt: string = endpointLabel.getLabel();\r\n      const endpoints: PlumbType[] = this.instance.getEndpoints(info.target.id);\r\n      const targetEndpointHasSameLabel = endpoints.some(endpoint => {\r\n        const label: string = endpoint.getOverlay('endpointLabel').getLabel();\r\n        return label === labelPrompt &&\r\n          info.targetEndpoint.id !== endpoint.id &&\r\n          (endpoint.canvas as HTMLCanvasElement).classList.contains('targetEndpoint');\r\n      });\r\n      if (targetEndpointHasSameLabel) {\r\n        endpointLabel.setLabel(`PleaseRename${Math.floor(Math.random() * 99999)}`);\r\n      }\r\n      setTimeout(() => { this.onConnectionsChanged(); });\r\n    });\r\n  }\r\n\r\n  private getEndpointInfo(endpointName: string, isDynamic: boolean): EndpointInfo {\r\n    let name: string;\r\n    let required: boolean;\r\n\r\n    if (isDynamic) {\r\n      name = endpointName;\r\n      required = false;\r\n    } else {\r\n      const trimmed = endpointName.trim();\r\n      required = trimmed.endsWith('*');\r\n      name = !required ? trimmed : trimmed.substring(0, trimmed.length - 1);\r\n    }\r\n\r\n    const endpointInfo: EndpointInfo = {\r\n      name,\r\n      required,\r\n    };\r\n    return endpointInfo;\r\n  }\r\n}\r\n\r\n// https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\r\nconst groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>\r\n  arr.reduce((groups, item) => {\r\n    (groups[key(item)] ||= []).push(item);\r\n    return groups;\r\n  }, {} as Record<K, T[]>);","@if ((viewModel$ | async); as vm) {\r\n<div #domRoot id=\"pipeline-root\">\r\n  <!-- do not use trackBy, jsPlumb drag stops working properly after delete -->\r\n  @if (!hardReset) {\r\n  @for (dataSource of vm.pipelineDataSources; track dataSource) {\r\n  <div #domDataSource [id]=\"dataSrcIdPrefix + dataSource.EntityGuid\" class=\"dataSource\" [ngStyle]=\"{\r\n          'top': dataSource.VisualDesignerData.Top + 'px',\r\n          'left': dataSource.VisualDesignerData.Left + 'px',\r\n          'min-width': dataSource.VisualDesignerData.Width ? dataSource.VisualDesignerData.Width + 'px' : null\r\n          }\" [ngClass]=\"{\r\n          'show-details': vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length\r\n          }\">\r\n    <div class=\"actions left\">\r\n      <mat-icon class=\"type-info\" [title]=\"vm.typeInfos[dataSource.EntityGuid].UiHint\">\r\n        {{ vm.typeInfos[dataSource.EntityGuid].Icon }}\r\n      </mat-icon>\r\n      @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].EnableConfig) {\r\n      <mat-icon class=\"configure\" title=\"Configure data source\" appMousedownStopPropagation\r\n        (click)=\"configureDataSource(dataSource)\">\r\n        settings\r\n      </mat-icon>\r\n      }\r\n      @if (vm.typeInfos[dataSource.EntityGuid].HelpLink) {\r\n      <mat-icon class=\"help\" title=\"Help for this data source\" appMousedownStopPropagation\r\n        (click)=\"openHelp(vm.typeInfos[dataSource.EntityGuid].HelpLink)\">\r\n        help_outline\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"actions right\">\r\n      @if (vm.allowEdit && !isOutDataSource(dataSource)) {\r\n      <mat-icon class=\"delete\" title=\"Delete\" appMousedownStopPropagation (click)=\"remove(dataSource)\">\r\n        delete\r\n      </mat-icon>\r\n      }\r\n    </div>\r\n    <div class=\"name\" title=\"Click to edit name\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editName(dataSource)\">\r\n      <span>{{ dataSource.Name || '(no name)' }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    <div class=\"description\" title=\"Click to edit description\" appMousedownStopPropagation\r\n      (click)=\"vm.allowEdit && editDescription(dataSource)\">\r\n      <span>{{ dataSource.Description }}</span>\r\n      <mat-icon class=\"show-hover-inline\">edit</mat-icon>\r\n    </div>\r\n    <br>\r\n    @if (vm.showDataSourceDetails && vm.dataSourceConfigs[dataSource.EntityId]?.length) {\r\n    <hr style=\"margin: 0\">\r\n    <table class=\"configs\">\r\n      @for (config of vm.dataSourceConfigs[dataSource.EntityId]; track config) {\r\n      <tr class=\"config\">\r\n        <td class=\"config-name\" [title]=\"config.name\">{{ config.name }}</td>\r\n        <td class=\"config-value\" [title]=\"config.value\">{{ config.value }}</td>\r\n      </tr>\r\n      }\r\n    </table>\r\n    }\r\n    <div class=\"typename\" [title]=\"dataSource.PartAssemblyAndType\">\r\n      Type: {{ getTypeName(dataSource.PartAssemblyAndType) }}\r\n    </div>\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicOut) {\r\n    <div class=\"add-endpoint sourceEndpoint dynamic\" title=\"Drag a new Out-Connection\">\r\n    </div>\r\n    }\r\n    @if (vm.allowEdit && vm.typeInfos[dataSource.EntityGuid].DynamicIn) {\r\n    <div class=\"many-in targetEndpoint dynamic\" title=\"This data source supports multiple In-Connections\">\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n  }\r\n</div>\r\n}","// tslint:disable-next-line:max-line-length\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { loadScripts } from '../../shared/helpers/load-scripts.helper';\r\nimport { PipelineDataSource, PipelineResultStream, VisualDesignerData } from '../models';\r\nimport { QueryDefinitionService } from '../services/query-definition.service';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateTypeInfos } from './plumb-editor.helpers';\r\nimport { PlumbEditorViewModel } from './plumb-editor.models';\r\nimport { dataSrcIdPrefix, Plumber } from './plumber.helper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgStyle, NgClass, AsyncPipe } from '@angular/common';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\nimport { MousedownStopPropagationDirective } from '../../shared/directives/mousedown-stop-propagation.directive';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { mapUntilObjChanged } from '../../shared/rxJs/mapUntilChanged';\r\nimport { transient } from '../../core';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'PlumbEditorComponent';\r\n\r\nconst jsPlumbUrl = 'https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.14.5/js/jsplumb.min.js';\r\n\r\n@Component({\r\n  selector: 'app-plumb-editor',\r\n  templateUrl: './plumb-editor.component.html',\r\n  styles: [':host { display: block; width: 100%; height: 100%; }'],\r\n  styleUrls: ['./plumb-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgStyle,\r\n    NgClass,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    MousedownStopPropagationDirective,\r\n  ],\r\n})\r\nexport class PlumbEditorComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('domRoot') private domRootRef: ElementRef<HTMLDivElement>;\r\n  @ViewChildren('domDataSource') private domDataSourcesRef: QueryList<ElementRef<HTMLDivElement>>;\r\n\r\n  dataSrcIdPrefix = dataSrcIdPrefix;\r\n  hardReset = false;\r\n\r\n  private plumber: Plumber;\r\n  private scriptLoaded$ = new BehaviorSubject(false);\r\n\r\n  viewModel$: Observable<PlumbEditorViewModel>;\r\n  \r\n  private queryDefinitionService = transient(QueryDefinitionService);\r\n\r\n  constructor(\r\n    private visualQueryService: VisualQueryStateService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super(new EavLogger(nameOfThis, logThis));\r\n  }\r\n\r\n  ngOnInit() {\r\n    loadScripts([{ test: 'jsPlumb', src: jsPlumbUrl }], () => {\r\n      this.scriptLoaded$.next(true);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      this.visualQueryService.putEntityCountOnConnections$.subscribe(result => {\r\n        this.plumber.putEntityCountOnConnections(result);\r\n      })\r\n    );\r\n\r\n    const pipelineDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel?.Pipeline.VisualDesignerData) ?? {}),\r\n      mapUntilObjChanged(m => m),\r\n      // distinctUntilChanged(RxHelpers.objectsEqual),\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([\r\n      this.visualQueryService.pipelineModel$,\r\n      this.visualQueryService.dataSources$,\r\n      pipelineDesignerData$,\r\n      this.visualQueryService.dataSourceConfigs$,\r\n    ]).pipe(\r\n      map(([pipelineModel, dataSources, pipelineDesignerData, dataSourceConfigs]) => {\r\n        if (pipelineModel == null || dataSources == null) { return; }\r\n\r\n        // workaround for jsPlumb not working with dom elements which it initialized on previously.\r\n        // This wipes dom entirely and gives us new elements\r\n        this.hardReset = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.hardReset = false;\r\n        const viewModel: PlumbEditorViewModel = {\r\n          pipelineDataSources: pipelineModel.DataSources,\r\n          typeInfos: calculateTypeInfos(pipelineModel.DataSources, dataSources),\r\n          allowEdit: pipelineModel.Pipeline.AllowEdit,\r\n          showDataSourceDetails: pipelineDesignerData.ShowDataSourceDetails ?? false,\r\n          dataSourceConfigs,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const l = this.log.fn('ngAfterViewInit');\r\n    // https://stackoverflow.com/questions/37087864/execute-a-function-when-ngfor-finished-in-angular-2/37088348#37088348\r\n    const domDataSourcesLoaded$ = this.domDataSourcesRef.changes.pipe(map(() => true));\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.scriptLoaded$, domDataSourcesLoaded$]).subscribe(([scriptLoaded, domDataSourcesLoaded]) => {\r\n        if (!scriptLoaded || !domDataSourcesLoaded)\r\n          return;\r\n\r\n        this.log.a('scriptLoaded and domDataSourcesLoaded', { scriptLoaded, domDataSourcesLoaded });\r\n\r\n        this.plumber?.destroy();\r\n        this.plumber = new Plumber(\r\n          this.domRootRef.nativeElement,\r\n          this.visualQueryService.pipelineModel$.value,\r\n          this.visualQueryService.dataSources$.value,\r\n          this.onConnectionsChanged.bind(this),\r\n          this.onDragend.bind(this),\r\n          this.onDebugStream.bind(this),\r\n          this.dialog,\r\n          this.viewContainerRef,\r\n          this.changeDetectorRef,\r\n        );\r\n      })\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.plumber?.destroy();\r\n    this.scriptLoaded$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onConnectionsChanged() {\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.changeConnections(connections, streamsOut);\r\n  }\r\n\r\n  onDragend(pipelineDataSourceGuid: string, position: VisualDesignerData) {\r\n    this.visualQueryService.changeDataSourcePosition(pipelineDataSourceGuid, position);\r\n  }\r\n\r\n  onDebugStream(stream: PipelineResultStream) {\r\n    this.visualQueryService.debugStream(stream);\r\n  }\r\n\r\n  configureDataSource(dataSource: PipelineDataSource) {\r\n    // ensure dataSource entity is saved\r\n    if (dataSource.EntityGuid.includes('unsaved')) {\r\n      this.visualQueryService.saveAndRun(true, false);\r\n    } else {\r\n      this.visualQueryService.editDataSource(dataSource);\r\n    }\r\n  }\r\n\r\n  getTypeName(partAssemblyAndType: string) {\r\n    const dataSource = this.visualQueryService.dataSources$.value.find(ds => ds.PartAssemblyAndType === partAssemblyAndType);\r\n    return this.queryDefinitionService.typeNameFilter(dataSource?.TypeNameForUi || partAssemblyAndType, 'className');\r\n  }\r\n\r\n  isOutDataSource(pipelineDataSource: PipelineDataSource) {\r\n    return pipelineDataSource.PartAssemblyAndType === eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType;\r\n  }\r\n\r\n  remove(pipelineDataSource: PipelineDataSource) {\r\n    if (!confirm(`Delete ${pipelineDataSource.Name} data source?`)) { return; }\r\n\r\n    this.plumber.removeEndpointsOnDataSource(pipelineDataSource.EntityGuid);\r\n    const connections = this.plumber.getAllConnections();\r\n    const streamsOut = this.plumber.getStreamsOut();\r\n    this.visualQueryService.removeDataSource(pipelineDataSource.EntityGuid, connections, streamsOut);\r\n  }\r\n\r\n  openHelp(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  editName(dataSource: PipelineDataSource) {\r\n    const newName = prompt('Rename data source', dataSource.Name)?.trim();\r\n    if (newName == null || newName === '') { return; }\r\n\r\n    this.visualQueryService.renameDataSource(dataSource.EntityGuid, newName);\r\n  }\r\n\r\n  editDescription(dataSource: PipelineDataSource) {\r\n    const newDescription = prompt('Edit description', dataSource.Description)?.trim();\r\n    if (newDescription == null) { return; }\r\n\r\n    this.visualQueryService.changeDataSourceDescription(dataSource.EntityGuid, newDescription);\r\n  }\r\n\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"eav-show-advanced\">\r\n      <span class=\"eav-slide-toggle-label\">Show Advanced</span>\r\n      <mat-slide-toggle color=\"primary\" (change)=\"toggleDifficulty($event)\" />\r\n    </div>\r\n    @for (group of vm.sorted | keyvalue; track trackGroups($index, group)) {\r\n      <div class=\"collapsible\" [tippy]=\"guiTypes[group.key].UiHint || group.key\" tippyShowDelay=\"750\"\r\n        (click)=\"toggleItem(group.key)\">\r\n        <mat-icon>{{ guiTypes[group.key].Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n        <span>{{ guiTypes[group.key].Label ?? guiTypes[group.key].Name ?? group.key }}</span>\r\n      </div>\r\n      @if (toggledItems.includes(group.key)) {\r\n        <div class=\"list\">\r\n          @for (dataSource of group.value; track trackDataSources($index, dataSource)) {\r\n            <div class=\"list-item\"\r\n              [tippy]=\"dataSource.UiHint || dataSource.Name\" tippyShowDelay=\"750\" (click)=\"addDataSource(dataSource)\">\r\n              <mat-icon>{{ dataSource.Icon || guiTypes.Unknown.Icon }}</mat-icon>\r\n              <span>{{ dataSource.Name }}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n}\r\n","import { KeyValue, AsyncPipe, KeyValuePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\nimport { guiTypes } from '../plumb-editor/plumb-editor.helpers';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { filterAndSortDataSources } from './add-explorer.helpers';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-add-explorer',\r\n  templateUrl: './add-explorer.component.html',\r\n  styleUrls: ['./add-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    KeyValuePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AddExplorerComponent implements OnInit, OnDestroy {\r\n  toggledItems: string[] = [];\r\n  guiTypes = guiTypes;\r\n\r\n  private difficulties = eavConstants.pipelineDesigner.dataSourceDifficulties;\r\n  private difficulty$ = new BehaviorSubject(this.difficulties.default);\r\n\r\n  viewModel$: Observable<AddExplorerViewModel>;\r\n\r\n  constructor(private visualQueryService: VisualQueryStateService) { }\r\n\r\n  ngOnInit() {\r\n    this.viewModel$ = combineLatest([\r\n      combineLatest([this.visualQueryService.dataSources$, this.difficulty$]).pipe(\r\n        map(([dataSources, difficulty]) => filterAndSortDataSources(dataSources, difficulty)),\r\n      )\r\n    ]).pipe(map(([sorted]) => ({ sorted })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.difficulty$.complete();\r\n  }\r\n\r\n  toggleDifficulty(event: MatSlideToggleChange) {\r\n    const difficulty = event.checked ? this.difficulties.advanced : this.difficulties.default;\r\n    this.difficulty$.next(difficulty);\r\n  }\r\n\r\n  addDataSource(dataSource: DataSource) {\r\n    this.visualQueryService.addDataSource(dataSource);\r\n  }\r\n\r\n  toggleItem(item: string) {\r\n    ArrayHelpers.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  trackGroups(index: number, type: KeyValue<string, DataSource[]>) {\r\n    return type.key;\r\n  }\r\n\r\n  trackDataSources(index: number, dataSource: DataSource) {\r\n    return dataSource.PartAssemblyAndType;\r\n  }\r\n}\r\n\r\ninterface AddExplorerViewModel {\r\n  sorted: SortedDataSources;\r\n}\r\n","import cloneDeep from 'lodash-es/cloneDeep';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { DataSource, SortedDataSources } from '../models';\r\n\r\nexport function filterAndSortDataSources(dataSources: DataSource[], maxDifficulty: number) {\r\n  if (!dataSources) { return; }\r\n\r\n  const cloned = cloneDeep(dataSources);\r\n\r\n  const filtered = cloned.filter(dataSource =>\r\n    dataSource.Difficulty <= maxDifficulty\r\n    && dataSource.PartAssemblyAndType !== eavConstants.pipelineDesigner.outDataSource.PartAssemblyAndType\r\n  );\r\n\r\n  filtered.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n\r\n  const sorted: SortedDataSources = {};\r\n  for (const dataSource of filtered) {\r\n    const type = dataSource.PrimaryType;\r\n    if (sorted[type]) {\r\n      sorted[type].push(dataSource);\r\n    } else {\r\n      sorted[type] = [dataSource];\r\n    }\r\n  }\r\n\r\n  return sorted;\r\n}\r\n","@if ((pipelineModel$ | async); as pipelineModel) {\r\n  <div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"actions\">\r\n        <button mat-raised-button class=\"action\" color=\"accent\" (click)=\"saveAndRunQuery(true, true)\">\r\n          Save and run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(false, true)\">\r\n          Run\r\n        </button>\r\n        <button mat-raised-button class=\"action\" (click)=\"saveAndRunQuery(true, false)\">\r\n          Save\r\n        </button>\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">\r\n          <div>Query Parameters</div>\r\n          <div>\r\n            <button mat-icon-button tippy=\"Edit parameters\" (click)=\"editPipeline()\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button tippy=\"Query Params Docs\" (click)=\"openParamsHelp()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        @if (pipelineModel.Pipeline.Params?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.Params?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      <div class=\"parameters\">\r\n        <div class=\"title\">Test Parameters</div>\r\n        @if (pipelineModel.Pipeline.TestParameters?.length) {\r\n          <ul class=\"values\">\r\n            @for (param of pipelineModel.Pipeline.TestParameters?.split('\\n'); track param) {\r\n              <li>\r\n                {{ param }}\r\n              </li>\r\n            }\r\n          </ul>\r\n        }\r\n      </div>\r\n      @if (visualDesignerData$ | async; as visualDesignerData) {\r\n        <div class=\"parameters\">\r\n          <span class=\"eav-slide-toggle-label\">Show DataSource Params</span>\r\n          <mat-slide-toggle color=\"primary\" [checked]=\"visualDesignerData.ShowDataSourceDetails\"\r\n            (change)=\"showDataSourceDetails($event)\"/>\r\n          </div>\r\n        }\r\n      @if ((warnings$ | async); as warnings) {\r\n        @if (warnings.length) {\r\n          <div class=\"warnings\">\r\n            <div class=\"title\">\r\n              <span>Warnings</span>\r\n              <mat-icon style=\"color: red\">warning</mat-icon>\r\n            </div>\r\n            <ol class=\"values\">\r\n              @for (warning of warnings; track warning) {\r\n                <li [innerHTML]=\"warning\">\r\n                </li>\r\n              }\r\n            </ol>\r\n          </div>\r\n        }\r\n      }\r\n      @if (pipelineModel.Pipeline.Description) {\r\n        <div class=\"description\">\r\n          <div class=\"title\">Query Description</div>\r\n          <div>{{ pipelineModel.Pipeline.Description }}</div>\r\n        </div>\r\n      }\r\n      <div class=\"footer-actions\">\r\n        <button mat-raised-button class=\"action\" (click)=\"openRestApi()\">\r\n          <span>Use in JSON / REST API</span>\r\n          <mat-icon>code_curly</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map, Observable } from 'rxjs';\r\nimport { GoToDevRest } from '../../dev-rest';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\nimport { VisualQueryStateService } from '../services/visual-query.service';\r\nimport { calculateWarnings } from './run-explorer.helpers';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { JsonHelpers } from '../../shared/helpers/json.helpers';\r\n\r\n@Component({\r\n  selector: 'app-run-explorer',\r\n  templateUrl: './run-explorer.component.html',\r\n  styleUrls: ['./run-explorer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    AsyncPipe,\r\n  ],\r\n})\r\nexport class RunExplorerComponent implements OnInit {\r\n  pipelineModel$: Observable<PipelineModel>;\r\n  warnings$: Observable<string[]>;\r\n  visualDesignerData$: Observable<Record<string, any>>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private visualQueryService: VisualQueryStateService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.pipelineModel$ = this.visualQueryService.pipelineModel$.asObservable();\r\n    this.warnings$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => calculateWarnings(pipelineModel, this.context)),\r\n    );\r\n    this.visualDesignerData$ = this.visualQueryService.pipelineModel$.pipe(\r\n      map(pipelineModel => JsonHelpers.tryParse(pipelineModel.Pipeline.VisualDesignerData) ?? {}),\r\n    );\r\n  }\r\n\r\n  editPipeline() {\r\n    this.visualQueryService.editPipelineEntity();\r\n  }\r\n\r\n  openParamsHelp() {\r\n    window.open('https://go.2sxc.org/QueryParams', '_blank');\r\n  }\r\n\r\n  saveAndRunQuery(save: boolean, run: boolean) {\r\n    this.visualQueryService.saveAndRun(save, run);\r\n  }\r\n\r\n  showDataSourceDetails(event: MatSlideToggleChange): void {\r\n    this.visualQueryService.showDataSourceDetails(event.checked);\r\n  }\r\n\r\n  openRestApi() {\r\n    const queryGuid = this.visualQueryService.pipelineModel$.value.Pipeline.EntityGuid;\r\n    this.router.navigate([GoToDevRest.getUrlQueryDialog(queryGuid)], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { Context } from '../../shared/services/context';\r\nimport { PipelineModel } from '../models';\r\n\r\n/**\r\n * Check if there are special warnings the developer should know.\r\n * Typically when the test ModuleId is different from the one we're currently working on\r\n */\r\nexport function calculateWarnings(pipelineModel: PipelineModel, context: Context) {\r\n  const warnings: string[] = [];\r\n\r\n  try {\r\n    const queryParams = pipelineModel.Pipeline.Params?.split(/\\r?\\n/) || [];\r\n    const testParams = pipelineModel.Pipeline.TestParameters?.split(/\\r?\\n/) || [];\r\n\r\n    queryParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Query Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const paramSyntax = /^[a-zA-Z0-9]+=(.*)$/gmi;\r\n      const matched = paramSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Query Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>key=value</code> <br>\r\n          or resolve to a token like: <br>\r\n          <code>key=[source:key]</code>\r\n        `);\r\n      }\r\n    });\r\n\r\n    testParams.forEach(param => {\r\n      param = param?.trim();\r\n      if (!param) { return; }\r\n\r\n      // Check if the syntax on Test Parameters is off.\r\n      // It should contain [...]=...\r\n      // But it's easy to forget the [ and ] brackets\r\n      const testParamSyntax = /^\\[[a-zA-Z]+:[a-zA-Z0-9]+\\]=(.*)$/gmi;\r\n      const matched = testParamSyntax.test(param);\r\n      if (!matched) {\r\n        warnings.push(`\r\n          A <em>Test Parameter</em> seems wrong: <br>\r\n          <code>${param}</code> <br>\r\n          It should use the syntax: <br>\r\n          <code>[source:key]=value</code>\r\n        `);\r\n      }\r\n\r\n      // Check if we should show the warning about the test ModuleId.\r\n      // This is because in the old days, the ModuleId wasn't auto-filled, so people had to add it as a test value.\r\n      // Now it's not necessary any more\r\n      const midRegex = /^\\[module:id\\]=([0-9]*)$/gmi;\r\n      const midMatch = midRegex.exec(param);\r\n      if (midMatch) {\r\n        const testMid = midMatch[1];\r\n        const urlMid = context.moduleId?.toString();\r\n        if (testMid !== urlMid) {\r\n          warnings.push(`\r\n            Your test ModuleId (${testMid}) is different from the current ModuleId (${urlMid}).<br>\r\n            Note that 2sxc automatically provides the ModuleId - so you usually do not need to set it\r\n          `);\r\n        }\r\n      }\r\n\r\n      const oldMidRegex = /^\\[module:moduleid\\]=([0-9]*)$/gmi;\r\n      const oldMidMatch = oldMidRegex.exec(param);\r\n      if (oldMidMatch) {\r\n        warnings.push(`\r\n          You are using deprecated [Module:ModuleId] test parameter.<br>\r\n          Please use [Module:Id]\r\n        `);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Something went wrong in calculateWarnings for params', error);\r\n  }\r\n\r\n  return warnings;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { Context } from '../shared/services/context';\r\nimport { PlumbEditorComponent } from './plumb-editor/plumb-editor.component';\r\nimport { VisualQueryStateService } from './services/visual-query.service';\r\nimport { AddExplorerComponent } from './add-explorer/add-explorer.component';\r\nimport { RunExplorerComponent } from './run-explorer/run-explorer.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-visual-query',\r\n  templateUrl: './visual-query.component.html',\r\n  styleUrls: ['./visual-query.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    RunExplorerComponent,\r\n    AddExplorerComponent,\r\n    PlumbEditorComponent,\r\n  ],\r\n  providers: [\r\n    VisualQueryStateService,  // Shared State for the entire Visual Query, - init run here\r\n  ],\r\n})\r\nexport class VisualQueryComponent implements OnInit {\r\n  @ViewChild(PlumbEditorComponent) plumbEditor: PlumbEditorComponent;\r\n\r\n  explorer = {\r\n    run: 'run',\r\n    add: 'add'\r\n  };\r\n  activeExplorer = this.explorer.run;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private visualQueryService: VisualQueryStateService\r\n  ) {\r\n    this.context.init(this.route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.visualQueryService.init();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    this.activeExplorer = (this.activeExplorer === explorer) ? null : explorer;\r\n  }\r\n\r\n  openHelp() {\r\n    window.open('https://go.2sxc.org/visual-query', '_blank');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<div class=\"editor-root\">\r\n  <div class=\"editor-side-toolbar\">\r\n    <div class=\"button\" tippy=\"Run\" [ngClass]=\"{ 'active': activeExplorer === explorer.run }\"\r\n      (click)=\"toggleExplorer(explorer.run)\">\r\n      <mat-icon>play_arrow</mat-icon>\r\n    </div>\r\n    <div class=\"button\" tippy=\"Add\" [ngClass]=\"{ 'active': activeExplorer === explorer.add }\"\r\n      (click)=\"toggleExplorer(explorer.add)\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"button\" tippy=\"Help\" (click)=\"openHelp()\">\r\n      <mat-icon>help_outline</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-run-explorer [hidden]=\"activeExplorer !== explorer.run\"></app-run-explorer>\r\n\r\n  <app-add-explorer [hidden]=\"activeExplorer !== explorer.add\"></app-add-explorer>\r\n\r\n  <app-plumb-editor></app-plumb-editor>\r\n</div>\r\n"],"x_google_ignoreList":[]}