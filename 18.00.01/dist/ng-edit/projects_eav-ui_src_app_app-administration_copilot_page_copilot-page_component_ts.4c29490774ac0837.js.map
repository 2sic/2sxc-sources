{"version":3,"file":"projects_eav-ui_src_app_app-administration_copilot_page_copilot-page_component_ts.4c29490774ac0837.js","mappings":"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","names":["CopilotService","ServiceBase","static","this","webApiEditions","webApiGeneratedCode","constructor","http","context","super","EavLogger","specs","getCopilotSpecs","getEditions","pipe","map","data","editions","getDefaultEdition","find","e","isDefault","getGenerators","generators","get","params","appId","toString","defaultOrFirst","findDefaultEdition","d","description","label","name","replace","shareReplay","t","i0","i1","i2","core","jDH","factory","ɵfac","generator_r3","version","ctx","descriptionHtml","$event","_r1","ctx_r1","selectedGenerator","CopilotGeneratorComponent_Conditional_9_For_7_Template","CopilotGeneratorComponent_Conditional_9_Conditional_8_Template","sort","tmp_5_0","selectedGenerator$","edition_r5","_r4","selectedEdition","CopilotGeneratorComponent_Conditional_12_For_5_Template","CopilotGeneratorComponent","snackBar","title","copilotSvc","transient","editions$","generators$","gens","filter","g","outputType","ngOnInit","take","subscribe","autoGeneratedCode","edition","generator","console","log","open","message","timeTaken","duration","i3","VBU","selectors","inputs","standalone","features","decls","vars","consts","template","rf","CopilotGeneratorComponent_Conditional_9_Template","CopilotGeneratorComponent_Conditional_12_Template","tmp_1_0","tmp_2_0","MatSelectModule","i4","i5","i6","MatButtonModule","i7","MatCardModule","i8","MatIconModule","i9","CommonModule","i10","encapsulation","CopilotPageComponent","activatedRoute","snapshot","heading","intro","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/copilot/copilot-service.ts","./projects/eav-ui/src/app/app-administration/copilot/copilot-generator.component.html","./projects/eav-ui/src/app/app-administration/copilot/copilot-generator.component.ts","./projects/eav-ui/src/app/app-administration/copilot/page/copilot-page.component.ts","./projects/eav-ui/src/app/app-administration/copilot/page/copilot-page.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Context } from '../../shared/services/context';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { EditionData, EditionDataDto } from './edition-data';\r\nimport { map, shareReplay } from 'rxjs';\r\nimport { Edition, EditionDto } from './edition';\r\nimport { Observable } from 'tinymce';\r\n\r\nconst logThis = false;\r\n\r\n@Injectable()\r\nexport class CopilotService extends ServiceBase {\r\n  static webApiEditions: string = 'admin/code/getEditions';\r\n  static webApiGeneratedCode: string = 'admin/code/generateDataModels';\r\n\r\n  public specs = this.getCopilotSpecs();\r\n\r\n  constructor(private http: HttpClient, private context: Context) {\r\n    super(new EavLogger('CopilotService', logThis));\r\n  }\r\n\r\n  getEditions() {\r\n    return this.specs.pipe(map(data => data.editions));\r\n  }\r\n\r\n  getDefaultEdition() {\r\n    return this.specs.pipe(map(data => data.editions.find(e => e.isDefault)));\r\n  }\r\n\r\n  getGenerators() {\r\n    return this.specs.pipe(map(data => data.generators));\r\n  }\r\n\r\n  private getCopilotSpecs() {\r\n    return this.http.get<EditionDataDto>(CopilotService.webApiEditions, {\r\n      params: {\r\n        appId: this.context.appId.toString()\r\n      }\r\n    }).pipe(\r\n      map((data) => {\r\n        const defaultOrFirst = this.findDefaultEdition(data.editions);\r\n        const editions = data.editions.map(d => {\r\n          const isDefault = d == defaultOrFirst;\r\n          return {\r\n            ...d,\r\n            isDefault,\r\n            description: (d.description || \"no description provided\") + (isDefault ? ' ✅' : ''),\r\n            label: `/${d.name}/AppCode/Data`.replace(/\\/\\//g, '/'),\r\n          } as Edition;\r\n        });\r\n\r\n        return { ...data, editions } as EditionData;\r\n      }),\r\n      shareReplay(1),\r\n    );\r\n  }\r\n\r\n  private findDefaultEdition(editions: EditionDto[]): EditionDto {\r\n    return editions.find(d => d.isDefault) ?? editions.find(d => d.name === '') ?? editions[0];\r\n  }\r\n\r\n}","<div class=\"eav-cards-box\">\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header class=\"eav-card-header\">\r\n      <mat-card-title>{{ title }}</mat-card-title>\r\n      <mat-icon>support_agent</mat-icon>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n\r\n      <br>\r\n      <!-- Generator select -->\r\n      @if (generators$ | async; as generators) {\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Generator</mat-label>\r\n          <mat-select required [(value)]=\"selectedGenerator\">\r\n            <mat-select-trigger>\r\n              {{ selectedGenerator }}\r\n            </mat-select-trigger>\r\n              @for (generator of generators.sort() ; track generator) {\r\n                <mat-option [value]=\"generator.name\">\r\n                  <strong>{{ generator.name }} v{{ generator.version }}</strong><br>\r\n                  {{ generator.description }}\r\n                </mat-option>\r\n              }\r\n          </mat-select>\r\n          @if (selectedGenerator$ | async; as selectedGenerator) {\r\n            <mat-hint [innerHTML]=\"selectedGenerator.descriptionHtml\"></mat-hint>\r\n          }\r\n        </mat-form-field>\r\n        <br>\r\n      }\r\n\r\n      <br>\r\n      <!-- Edition select -->\r\n      @if (editions$ | async; as editions) {\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Select an Edition to generate code for</mat-label>\r\n          <mat-select required [(value)]=\"selectedEdition\">\r\n              @for (edition of editions.sort() ; track edition) {\r\n                <mat-option [value]=\"edition.name\">\r\n                  <strong>{{ edition.label }}</strong> ({{ edition.description }})\r\n                </mat-option>\r\n              }\r\n          </mat-select>\r\n          <mat-hint>\r\n            Editions are managed in the <code>/App_Data/app.json</code> file.\r\n            See <a href=\"https://go.2sxc.org/app-json\" target=\"_blank\">docs</a>.\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      }\r\n\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"autoGeneratedCode()\">\r\n        <mat-icon class=\"eav-icon\">code</mat-icon>\r\n        <span>Generate Code</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { Context } from '../../shared/services/context';\r\nimport { map, take } from 'rxjs';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RichResult } from '../../shared/models/rich-result';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CopilotService } from './copilot-service';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-copilot-generator',\r\n  standalone: true,\r\n\r\n  templateUrl: './copilot-generator.component.html',\r\n  imports: [\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    CommonModule,\r\n  ]\r\n})\r\nexport class CopilotGeneratorComponent {\r\n\r\n  @Input() outputType: string;\r\n  @Input() title?: string = 'Copilot Generator';\r\n\r\n  private copilotSvc = transient(CopilotService);\r\n\r\n  webApiGeneratedCode: string = 'admin/code/generateDataModels';\r\n  editions$ = this.copilotSvc.getEditions();\r\n\r\n  generators$ = this.copilotSvc.getGenerators()\r\n    .pipe(\r\n      map((gens) => gens.filter(g => g.outputType === this.outputType))\r\n    );\r\n\r\n  selectedGenerator$ = this.generators$.pipe(map(gens => gens.find(g => g.name === this.selectedGenerator)));\r\n\r\n  selectedGenerator = '';\r\n  selectedEdition = '';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.generators$.pipe(take(1)).subscribe(gens => {\r\n      this.selectedGenerator = gens[0]?.name ?? '';\r\n    });\r\n    this.copilotSvc.specs.pipe(take(1)).subscribe(specs => {\r\n      // this.selectedGenerator = specs.generators[0]?.name ?? '';\r\n      this.selectedEdition = specs.editions.find(e => e.isDefault)?.name ?? '';\r\n    });\r\n  }\r\n\r\n  autoGeneratedCode() {\r\n    this.http.get<RichResult>(this.webApiGeneratedCode, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        edition: this.selectedEdition,\r\n        generator: this.selectedGenerator,\r\n      }\r\n    }).subscribe(d => {\r\n      console.log(d);\r\n      this.snackBar.open(d.message + `\\n (this took ${d.timeTaken}ms)`, null, { duration: 5000, });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CopilotSpec } from '../copilot-specs';\r\nimport { CopilotGeneratorComponent } from '../copilot-generator.component';\r\n\r\n@Component({\r\n  selector: 'app-data-copilot',\r\n  standalone: true,\r\n  templateUrl: './copilot-page.component.html',\r\n  styleUrl: './copilot-page.component.scss',\r\n  imports: [\r\n    CopilotGeneratorComponent\r\n  ]\r\n})\r\nexport class CopilotPageComponent {\r\n\r\n  data: CopilotSpec;\r\n\r\n  constructor(activatedRoute: ActivatedRoute) {\r\n    this.data = activatedRoute.snapshot.data as CopilotSpec;\r\n  }\r\n\r\n}\r\n","<div class=\"outer-container\">\r\n  <h1>{{data.heading}}</h1>\r\n  <p>\r\n    {{data.intro}}\r\n  </p>\r\n</div>\r\n\r\n<app-copilot-generator [outputType]=\"data.outputType\" [title]=\"data.title\"></app-copilot-generator>\r\n"],"x_google_ignoreList":[]}