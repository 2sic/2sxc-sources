{"version":3,"file":"projects_eav-ui_src_app_app-administration_app-configuration_app-configuration_component_ts-p-0529b1.23516608517287b0.js","mappings":"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","names":["AppInternalsService","constructor","http","context","dnnContext","this","getAppInternals","get","$2sxc","apiUrl","params","appId","toString","static","t","i0","i1","i2","i3","core","jDH","factory","ɵfac","AnalyzeParts","Settings","Resources","vm_r2","_r1","ctx_r2","copyToClipboard","displayName","folder","version","toSxc","dnn","oqt","AppConfigurationCardComponent_Conditional_0_ng_container_44_Template","edit","openMetadata","docsLink_r4","_c0","appConfigurationsCount","appMetadataCount","tmp_7_0","icon_r5","undefined","label_r6","AppConfigurationCardComponent","BaseWithChildDialogComponent","router","route","snackBar","super","appSettingsInternal$","Subject","appInternalsService","transient","contentItemsService","ContentItemsService","viewModel$","combineLatest","getAll","eavConstants","contentTypes","appConfiguration","pipe","map","settings","contentItems","contentItem","EntityLists","ToSxcContentApp","length","MetadataList","Items","DisplayName","Folder","Version","RequiredVersion","RequiredDnnVersion","RequiredOqtaneVersion","ngOnInit","fetchSettings","subscriptions","add","childDialogClosed$","subscribe","ngOnDestroy","dismiss","text","open","duration","staticName","form","Error","items","EntityId","Id","formUrl","convertFormToUrl","navigate","relativeTo","parent","firstChild","url","GoToMetadata","getUrlApp","dialogSettings","Context","App","Name","x","next","VBU","selectors","inputs","standalone","features","decls","vars","consts","template","rf","ctx","AppConfigurationCardComponent_Conditional_0_Template","AppConfigurationCardComponent_ng_template_2_Template","tmp_1_0","MatCardModule","i4","MatIconModule","i5","NgTemplateOutlet","MatButtonModule","i6","MatBadgeModule","i7","AsyncPipe","TippyDirective","styles","AppConfigurationComponent_Conditional_0_Conditional_0_Conditional_1_Template","AppConfigurationComponent_Conditional_0_Conditional_0_Conditional_2_Template","ctx_r1","isGlobal","isPrimary","_r3","systemSettings","SystemSettingsScopes","fixContentType","customSettings","vm_r4","systemSettingsCount","customSettingsCount","customSettingsFieldsCount","_r5","Site","AppConfigurationComponent_Conditional_0_Conditional_23_ng_container_14_Template","goToGlobal_r6","_r7","config","AppConfigurationComponent_Conditional_0_Conditional_24_ng_container_14_Template","AppConfigurationComponent_Conditional_0_Conditional_24_ng_container_15_Template","goToSite_r8","_r9","systemResources","customResources","systemResourcesCount","customResourcesCount","customResourcesFieldsCount","_r10","AppConfigurationComponent_Conditional_0_Conditional_54_ng_container_14_Template","_r11","resources","AppConfigurationComponent_Conditional_0_Conditional_55_ng_container_14_Template","AppConfigurationComponent_Conditional_0_Conditional_55_ng_container_15_Template","_r12","openGlobalSettings","_r13","openSiteSettings","AppConfigurationComponent_Conditional_0_Conditional_118_Conditional_0_Template","AppConfigurationComponent_Conditional_0_Conditional_118_Conditional_1_Template","isApp","AppConfigurationComponent_Conditional_0_Conditional_0_Template","AppConfigurationComponent_Conditional_0_Conditional_22_Template","AppConfigurationComponent_Conditional_0_Conditional_23_Template","AppConfigurationComponent_Conditional_0_Conditional_24_Template","AppConfigurationComponent_Conditional_0_ng_container_27_Template","analyze","AppConfigurationComponent_Conditional_0_Conditional_53_Template","AppConfigurationComponent_Conditional_0_Conditional_54_Template","AppConfigurationComponent_Conditional_0_Conditional_55_Template","AppConfigurationComponent_Conditional_0_ng_container_58_Template","AppConfigurationComponent_Conditional_0_ng_template_64_Template","AppConfigurationComponent_Conditional_0_ng_template_66_Template","AppConfigurationComponent_Conditional_0_ng_container_82_Template","openLightSpeed","AppConfigurationComponent_Conditional_0_ng_container_100_Template","AppConfigurationComponent_Conditional_0_ng_container_112_Template","openPermissions","AppConfigurationComponent_Conditional_0_Conditional_118_Template","AppConfigurationComponent_Conditional_0_ng_container_119_Template","openLanguagePermissions","langPermsEnabled","docsLink_r14","_c1","lightSpeedEnabled","appLightSpeedCount","_c2","_c3","Enable","AppPermissions","Permissions","Count","_c4","icon_r15","label_r16","AppConfigurationComponent","dialog","viewContainerRef","changeDetectorRef","dialogService","DialogService","contentTypesService","ContentTypesService","AppScopes","appStateAdvanced","inject","FeaturesService","isEnabled","FeatureNames","LightSpeed","cspEnabled","ContentSecurityPolicy","PermissionsByLanguage","dialogConfigSvc","AppDialogConfigService","s","filter","i","_Type","appMetadata","ContentTypeName","SettingsSystem","SettingsEntityScope","AppSettings","FieldAll","ResourcesSystem","AppResources","getCurrent$","appScope","SettingsScope","Global","systemSettingsScope","systemSettingsEntities","systemSettingsEntity","Prefill","customSettingsEntity","AppAdminHelpers","getLightSpeedEditParams","sitePrimaryApp","PrimaryApp","openAppAdministration","ZoneId","AppId","globalPrimaryApp","System","GoToPermissions","enabled","openFeatureDialog","part","action","retrieveContentTypes","scopes","configuration","value","some","ct","save","StaticName","Description","Scope","ChangeStaticName","NewStaticName","success","AppConfigurationComponent_Conditional_0_Template","AppConfigurationComponent_ng_template_2_Template","i8","FeatureTextInfoComponent","RouterOutlet","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","contentType","webApiEntityList","importQuery","file","from","toBase64","switchMap","fileBase64","post","ContentBase64","Success","Messages","clonePipeline","id","delete","_angular_core__WEBPACK_IMPORTED_MODULE_6__","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","formData","FormData","append","zoneId","export","window","getPolymorphism","getUsage","guid","_angular_core__WEBPACK_IMPORTED_MODULE_1__","webApiFieldsRoot","webApiFieldsAll","webApiFieldsGetShared","ContentTypesFieldsService","name","typeListRetrieve","appid","getInputTypesList","inputConfigs","dataType","Type","substring","indexOf","inputType","label","Label","description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","contentTypeStaticName","fields","fld","Metadata","md","merged","All","InputType","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","ContentTypeId","SourceType","SourceField","share","inherit","inheritMetadataOf","reOrder","idArray","contentTypeId","order","JSON","stringify","setTitle","item","webApiTypeRoot","rename","fieldId","IsTitle","newField","Index","SortOrder","updateInputType","field","_angular_core__WEBPACK_IMPORTED_MODULE_3__","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","readAsText","nextId","BADGE_CONTENT_CLASS","badgeApps","Set","_MatBadgeStyleLoader","ɵcmp","type","encapsulation","changeDetection","MatBadge","color","_color","_setColor","content","_content","newContent","_updateRenderedContent","_description","newDescription","_updateDescription","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","overlap","position","size","_id","_isInitialized","_interactivityChecker","InteractivityChecker","_document","DOCUMENT","appRef","ApplicationRef","has","componentRef","createComponent","environmentInjector","EnvironmentInjector","onDestroy","destroy","isAbove","isAfter","getBadgeElement","_badgeElement","_clearExistingBadges","_createBadgeElement","destroyNode","_inlineBadgeDescription","remove","removeDescription","nativeElement","_isHostInteractive","isFocusable","ignoreVisibility","badgeElement","createElement","activeClass","setAttribute","classList","appendChild","requestAnimationFrame","runOutsideAngular","newContentNormalized","trim","textContent","_removeInlineDescription","describe","_updateInlineDescription","colorPalette","badges","querySelectorAll","Array","ANIMATION_MODULE_TYPE","ɵdir","hostAttrs","hostVars","hostBindings","hidden","disabled","None","HasDecoratorInputTransform","booleanAttribute","ɵmod","ɵinj","imports","A11yModule","MatCommonModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/app-internals.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.models.ts","./projects/eav-ui/src/app/app-administration/app-configuration/app-configuration-card/app-configuration-card.component.html","./projects/eav-ui/src/app/app-administration/app-configuration/app-configuration-card/app-configuration-card.component.ts","./projects/eav-ui/src/app/app-administration/app-configuration/app-configuration.component.html","./projects/eav-ui/src/app/app-administration/app-configuration/app-configuration.component.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts","./node_modules/@angular/material/fesm2022/badge.mjs"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AppInternals } from '../../app-administration/models/app-internals.model';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/appinternals/get';\r\n\r\n@Injectable()\r\nexport class AppInternalsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches AppInternals for given key\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getAppInternals(): Observable<AppInternals> {\r\n    return this.http.get<AppInternals>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { View } from '../../models';\r\n\r\nexport const AnalyzeParts = {\r\n  Settings: 'Settings',\r\n  Resources: 'Resources',\r\n} as const;\r\nexport type AnalyzePart = typeof AnalyzeParts[keyof typeof AnalyzeParts];\r\n\r\nexport interface AnalyzeSettingsViewModel {\r\n  views: View[];\r\n  selectedView: string;\r\n  stack: SettingsStackItem[];\r\n}\r\n\r\nexport interface SettingsStackItem {\r\n  Path: string;\r\n  Priority: number;\r\n  Source: string;\r\n  TotalResults: number;\r\n  Type: string;\r\n  Value: string;\r\n  _value: string;\r\n}\r\n","<!-- App Config -->\r\n@if (viewModel$ | async; as vm) {\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header class=\"eav-card-header\">\r\n      <mat-card-title>Configuration</mat-card-title>\r\n      <mat-icon>redeem</mat-icon>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p>\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">Name:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span [tippy]=\"'Click to copy to clipboard'\" (click)=\"copyToClipboard(vm.displayName)\">{{vm.displayName}}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">Folder:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span [tippy]=\"'Click to copy to clipboard'\" (click)=\"copyToClipboard(vm.folder)\">{{vm.folder}}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">Version:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span [tippy]=\"'Click to copy to clipboard'\" (click)=\"copyToClipboard(vm.version)\">{{vm.version}}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">For</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <b>2sxc: </b><span [tippy]=\"'Click to copy to clipboard'\" (click)=\"copyToClipboard(vm.toSxc)\"> {{vm.toSxc}} </span>\r\n            <b> DNN: </b><span [tippy]=\"'Click to copy to clipboard'\" (click)=\"copyToClipboard(vm.dnn)\"> {{vm.dnn}} </span>\r\n            <b> Oqt: </b><span [tippy]=\"'Click to copy to clipboard'\" (click)=\"copyToClipboard(vm.oqt)\"> {{vm.oqt}} </span>\r\n          </div>\r\n        </div>\r\n      <!-- </p> -->\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"start\">\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://docs.2sxc.org/basics/app/configuration.html' }\"></ng-container>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"edit()\">\r\n        <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.appConfigurationsCount || null\"\r\n        matBadgePosition=\"below after\" aria-hidden=\"false\" class=\"eav-icon\">edit</mat-icon>\r\n        <span>Edit</span>\r\n      </button>\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"openMetadata()\">\r\n        <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.appMetadataCount || null\"\r\n        matBadgePosition=\"below after\" aria-hidden=\"false\" class=\"eav-icon\">local_offer</mat-icon>\r\n        <span>Metadata</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}\r\n\r\n<ng-template #docsLink let-icon let-label let-link=\"link\">\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{link}}\" target=\"_blank\" [tippy]=\"'online documentation'\">\r\n    <mat-icon class=\"eav-icon\">{{ icon ?? \"menu_book\" }}</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </a>\r\n</ng-template>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContentItemsService } from '../../../content-items/services/content-items.service';\r\nimport { GoToMetadata } from '../../../metadata';\r\nimport { BaseWithChildDialogComponent } from '../../../shared/components/base-with-child-dialog.component';\r\nimport { eavConstants } from '../../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../../shared/helpers/url-prep.helper';\r\nimport { DialogSettings } from '../../../shared/models/dialog-settings.model';\r\nimport { EditForm } from '../../../shared/models/edit-form.model';\r\nimport { Context } from '../../../shared/services/context';\r\nimport { AppInternalsService } from '../../services/app-internals.service';\r\nimport { Subject, Observable, combineLatest, map } from 'rxjs';\r\nimport { AppInternals } from '../../models/app-internals.model';\r\nimport { copyToClipboard } from '../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgTemplateOutlet, AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-app-configuration-card',\r\n  templateUrl: './app-configuration-card.component.html',\r\n  styleUrls: ['./app-configuration-card.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    NgTemplateOutlet,\r\n    MatButtonModule,\r\n    MatBadgeModule,\r\n    AsyncPipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AppConfigurationCardComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  @Input() dialogSettings: DialogSettings;\r\n\r\n  // More proper ViewModel\r\n  appSettingsInternal$ = new Subject<AppInternals>();\r\n  viewModel$: Observable<ViewModel>;\r\n\r\n  private appInternalsService = transient(AppInternalsService);\r\n\r\n  private contentItemsService = transient(ContentItemsService);\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private context: Context,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(router, route);\r\n\r\n    // New with proper ViewModel\r\n    this.viewModel$ = combineLatest([\r\n      this.appSettingsInternal$,\r\n      this.contentItemsService.getAll(eavConstants.contentTypes.appConfiguration),\r\n    ]).pipe(map(([settings, contentItems]) => {\r\n      const contentItem = contentItems[0];\r\n      const result: ViewModel = {\r\n        appConfigurationsCount: settings.EntityLists.ToSxcContentApp.length,\r\n        appMetadataCount: settings.MetadataList.Items.length,\r\n        displayName: contentItem?.DisplayName ?? '-',\r\n        folder: contentItem?.Folder ?? '-',\r\n        version: contentItem?.Version ?? '-',\r\n        toSxc: contentItem?.RequiredVersion ?? '-',\r\n        dnn: contentItem?.RequiredDnnVersion ?? '-',\r\n        oqt: contentItem?.RequiredOqtaneVersion ?? '-',\r\n      }\r\n      return result;\r\n    }));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchSettings();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => { this.fetchSettings(); }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.snackBar.dismiss();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  edit() {\r\n    const staticName = eavConstants.contentTypes.appConfiguration;\r\n    this.contentItemsService.getAll(staticName).subscribe(contentItems => {\r\n      let form: EditForm;\r\n\r\n      if (contentItems.length < 1) throw new Error(`Found no settings for type ${staticName}`);\r\n      if (contentItems.length > 1) throw new Error(`Found too many settings for type ${staticName}`);\r\n      form = {\r\n        items: [{ EntityId: contentItems[0].Id }],\r\n      };\r\n\r\n      const formUrl = convertFormToUrl(form);\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route.parent.firstChild });\r\n    });\r\n  }\r\n\r\n  openMetadata() {\r\n    const url = GoToMetadata.getUrlApp(\r\n      this.context.appId,\r\n      `Metadata for App: ${this.dialogSettings.Context.App.Name} (${this.context.appId})`,\r\n    );\r\n    this.router.navigate([url], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  private fetchSettings() {\r\n    const getObservable = this.appInternalsService.getAppInternals();\r\n    getObservable.subscribe(x => {\r\n      // 2dm - New mode for Reactive UI\r\n      this.appSettingsInternal$.next(x);\r\n    });\r\n  }\r\n}\r\n\r\nclass ViewModel {\r\n  appConfigurationsCount: number;\r\n  appMetadataCount: number;\r\n  displayName: string;\r\n  folder: string;\r\n  version: string;\r\n  toSxc: string;\r\n  dnn: string;\r\n  oqt: string;\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  @if (isGlobal || isPrimary) {\r\n    <div class=\"alert alert-info scope-info\">\r\n      @if (isGlobal) {\r\n        This is the Global App. Anything configured here will affect all Sites and Apps in this installation.\r\n      }\r\n      @if (isPrimary) {\r\n        This is the Primary App of this Site. You can also configure sitewide settings and resources here.\r\n      }\r\n      See <a href=\"https://go.2sxc.org/settings\" target=\"_blank\">docs</a>.\r\n    </div>\r\n  }\r\n  <div class=\"eav-cards-box\">\r\n    <!-- Settings -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Settings</mat-card-title>\r\n        <mat-icon>settings</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          Settings are things like SQL-connection strings, default \"items-to-show\" numbers and similar.\r\n          If necessary, settings like a link to an RSS-Feed could be different in each language.\r\n          <a href=\"https://go.2sxc.org/settings\" target=\"_blank\">docs</a>\r\n        </p>\r\n        <table class=\"eav-settings-and-resources-table\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>System Settings</th>\r\n              <th>Custom Settings</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <!-- Settings for Global App -->\r\n            @if (isGlobal) {\r\n              <tr>\r\n                <th>Global</th>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"edit(eavConstants.contentTypes.systemSettings, SystemSettingsScopes.App)\"\r\n                    tippy=\"Edit global system settings\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.systemSettingsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"fixContentType(eavConstants.contentTypes.customSettings, 'edit')\"\r\n                    tippy=\"Edit custom global settings\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customSettingsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button (click)=\"fixContentType(eavConstants.contentTypes.customSettings, 'config')\"\r\n                    tippy=\"Configure fields of the custom global settings\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customSettingsFieldsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">dns</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            }\r\n            <!-- Settings for Primary App -->\r\n            @if (isPrimary) {\r\n              <tr>\r\n                <th>Site</th>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"edit(eavConstants.contentTypes.systemSettings, SystemSettingsScopes.Site)\"\r\n                    tippy=\"Edit site system settings\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.systemSettingsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"fixContentType(eavConstants.contentTypes.customSettings, 'edit')\"\r\n                    tippy=\"Edit custom site settings\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customSettingsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button (click)=\"fixContentType(eavConstants.contentTypes.customSettings, 'config')\"\r\n                    tippy=\"Configure fields of the custom site settings\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customSettingsFieldsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">dns</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <ng-container *ngTemplateOutlet=\"goToGlobal\"></ng-container>\r\n            }\r\n            <!-- Settings for App and Content -->\r\n            @if (isApp) {\r\n              <tr>\r\n                <th>{{ dialogSettings.Context.App.Name }}</th>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"edit(eavConstants.contentTypes.systemSettings, SystemSettingsScopes.App)\"\r\n                    tippy=\"Edit app system settings\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.systemSettingsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"edit(eavConstants.contentTypes.settings)\" tippy=\"Edit custom app settings\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customSettingsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button (click)=\"config(eavConstants.contentTypes.settings)\"\r\n                    tippy=\"Configure fields of the custom app settings\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customSettingsFieldsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">dns</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <ng-container *ngTemplateOutlet=\"goToSite\"></ng-container>\r\n              <ng-container *ngTemplateOutlet=\"goToGlobal\"></ng-container>\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"analyze(AnalyzeParts.Settings)\" tippy=\"See the result of combining all settings\">\r\n          <mat-icon class=\"eav-icon\">manage_search</mat-icon>\r\n          <span>Analyze Combined Settings</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Resources -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Language Resources (i18n)</mat-card-title>\r\n        <mat-icon>translate</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          Resources are used for labels and things like that in the App.\r\n          They are usually needed to create multi-lingual views and such, and should not be used for App-Settings.\r\n          <a href=\"https://go.2sxc.org/settings\" target=\"_blank\">docs</a>\r\n        </p>\r\n        <table class=\"eav-settings-and-resources-table\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>System Resources</th>\r\n              <th>Custom Resources</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <!-- Resources for Global App -->\r\n            @if (isGlobal) {\r\n              <tr>\r\n                <th>Global</th>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"edit(eavConstants.contentTypes.systemResources, SystemSettingsScopes.App)\"\r\n                    tippy=\"Edit global system resources\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.systemResourcesCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"fixContentType(eavConstants.contentTypes.customResources, 'edit')\"\r\n                    tippy=\"Edit custom global resources\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customResourcesCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button (click)=\"fixContentType(eavConstants.contentTypes.customResources, 'config')\"\r\n                    tippy=\"Configure fields of the custom global resources\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customResourcesFieldsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">dns</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            }\r\n            <!-- Resources for Primary App -->\r\n            @if (isPrimary) {\r\n              <tr>\r\n                <th>Site</th>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"edit(eavConstants.contentTypes.systemResources, SystemSettingsScopes.Site)\"\r\n                    tippy=\"Edit site system resources\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.systemResourcesCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"fixContentType(eavConstants.contentTypes.customResources, 'edit')\"\r\n                    tippy=\"Edit custom site resources\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customResourcesCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button (click)=\"fixContentType(eavConstants.contentTypes.customResources, 'config')\"\r\n                    tippy=\"Configure fields of the custom site resources\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customResourcesFieldsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">dns</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <ng-container *ngTemplateOutlet=\"goToGlobal\"></ng-container>\r\n            }\r\n            <!-- Resources for App and Content -->\r\n            @if (isApp) {\r\n              <tr>\r\n                <th>{{ dialogSettings.Context.App.Name }}</th>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"edit(eavConstants.contentTypes.systemResources, SystemSettingsScopes.App)\"\r\n                    tippy=\"Edit app system resources\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.systemResourcesCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button mat-icon-button (click)=\"edit(eavConstants.contentTypes.resources)\"\r\n                    tippy=\"Edit custom app resources\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customResourcesCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">edit</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button (click)=\"config(eavConstants.contentTypes.resources)\"\r\n                    tippy=\"Configure fields of the custom app resources\">\r\n                    <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.customResourcesFieldsCount || null\"\r\n                    matBadgePosition=\"below after\" aria-hidden=\"false\">dns</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <ng-container *ngTemplateOutlet=\"goToSite\"></ng-container>\r\n              <ng-container *ngTemplateOutlet=\"goToGlobal\"></ng-container>\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"analyze(AnalyzeParts.Resources)\" tippy=\"See the result of combining all resources\">\r\n          <mat-icon class=\"eav-icon\">manage_search</mat-icon>\r\n          <span>Analyze Combined Resources</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Templates which are re-used in the table above -->\r\n    <ng-template #goToGlobal>\r\n      <tr>\r\n        <th>Global</th>\r\n        <td>\r\n          <button mat-icon-button (click)=\"openGlobalSettings()\" tippy=\"Go to global\">\r\n            <mat-icon>open_in_new</mat-icon>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template #goToSite>\r\n      <tr>\r\n        <th>Site</th>\r\n        <td>\r\n          <button mat-icon-button (click)=\"openSiteSettings()\" tippy=\"Go to site\">\r\n            <mat-icon>open_in_new</mat-icon>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"eav-cards-box\">\r\n    <app-app-configuration-card [dialogSettings]=\"dialogSettings\">\r\n    </app-app-configuration-card>\r\n    <!-- LightSpeed -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Performance</mat-card-title>\r\n        <mat-icon>bolt</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          LightSpeed Output Cache to speed up page by 50-90%\r\n        </p>\r\n        <app-feature-text-info [featureNameId]=\"'LightSpeedOutputCache'\" [asInfo]=\"true\"></app-feature-text-info>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/lightspeed' }\"></ng-container>\r\n        <button mat-button  class=\"eav-button__with-icon\" (click)=\"openLightSpeed()\" disabled=\"{{!lightSpeedEnabled()}}\">\r\n          <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" [matBadge]=\"vm.appLightSpeedCount || null\"\r\n          matBadgePosition=\"below after\" aria-hidden=\"false\" class=\"eav-icon\">bolt</mat-icon>\r\n          <span>Edit LightSpeed</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Security / CSP -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Security</mat-card-title>\r\n        <mat-icon>local_police</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          ContentSecurityPolicy (CSP) features in this App - for maximum control.\r\n        </p>\r\n        <app-feature-text-info [featureNameId]=\"'ContentSecurityPolicy'\" [asInfo]=\"true\"></app-feature-text-info>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://go.2sxc.org/csp' }\"></ng-container>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Permissions -->\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Permissions</mat-card-title>\r\n        <mat-icon>person</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          Give access to the entire app (all data). Use with care.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://docs.2sxc.org/basics/app/permissions.html' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" [disabled]=\"!dialogSettings.Context.Enable.AppPermissions\" (click)=\"openPermissions()\">\r\n          <mat-icon matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadgePosition=\"below after\"\r\n          [matBadge]=\"dialogSettings.Context.App.Permissions.Count || null\" aria-hidden=\"false\" class=\"eav-icon\">person</mat-icon>\r\n          <span>\r\n            Edit Permissions\r\n            @if (!dialogSettings.Context.Enable.AppPermissions) {\r\n              @if (isGlobal) {\r\n                (not on Global App)\r\n              }\r\n              @if (isApp) {\r\n                (not on Content)\r\n              }\r\n            }\r\n          </span>\r\n        </button>\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://patrons.2sxc.org/features/feat/PermissionsByLanguage' }\"></ng-container>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"openLanguagePermissions(langPermsEnabled())\">\r\n          <mat-icon [matBadgeHidden]=\"langPermsEnabled()\" matBadgeSize=\"small\" matBadge=\"💎\"\r\n            matBadgePosition=\"below after\" aria-hidden=\"false\" class=\"eav-icon\">\r\n            person\r\n          </mat-icon>\r\n          <span>Language Permissions</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n}\r\n\r\n<ng-template #docsLink let-icon let-label let-link=\"link\">\r\n  <a mat-button class=\"eav-button__with-icon\" href=\"{{link}}\" target=\"_blank\" [tippy]=\"'online documentation'\">\r\n    <mat-icon class=\"eav-icon\">{{ icon ?? \"menu_book\" }}</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </a>\r\n</ng-template>\r\n<router-outlet></router-outlet>\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { ContentItemsService } from '../../content-items/services/content-items.service';\r\nimport { GoToPermissions } from '../../permissions/go-to-permissions';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { eavConstants, SystemSettingsScope, SystemSettingsScopes } from '../../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { AppScopes } from '../../shared/models/dialog-context.models';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { AppAdminHelpers } from '../app-admin-helpers';\r\nimport { ContentTypeEdit } from '../models';\r\nimport { ContentTypesService } from '../services';\r\nimport { AppInternalsService } from '../services/app-internals.service';\r\nimport { AnalyzePart, AnalyzeParts } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\nimport { Subject, Observable, combineLatest, map } from 'rxjs';\r\nimport { AppInternals } from '../models/app-internals.model';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { openFeatureDialog } from '../../features/shared/base-feature.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { AppConfigurationCardComponent } from './app-configuration-card/app-configuration-card.component';\r\nimport { NgTemplateOutlet, AsyncPipe } from '@angular/common';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { transient } from '../../core';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\n\r\n@Component({\r\n  selector: 'app-app-configuration',\r\n  templateUrl: './app-configuration.component.html',\r\n  styleUrls: ['./app-configuration.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatBadgeModule,\r\n    NgTemplateOutlet,\r\n    AppConfigurationCardComponent,\r\n    FeatureTextInfoComponent,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AppConfigurationComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n\r\n  private dialogService = transient(DialogService);\r\n  private contentTypesService = transient(ContentTypesService);\r\n\r\n  dialogSettings: DialogSettings;\r\n\r\n  eavConstants = eavConstants;\r\n  AnalyzeParts = AnalyzeParts;\r\n  SystemSettingsScopes = SystemSettingsScopes;\r\n  AppScopes = AppScopes;\r\n  isGlobal: boolean;\r\n  isPrimary: boolean;\r\n  isApp: boolean;\r\n\r\n  // More proper ViewModel\r\n  appSettingsInternal$ = new Subject<AppInternals>();\r\n  viewModel$: Observable<AppConfigurationViewModel>;\r\n\r\n  public appStateAdvanced = false;\r\n  public features: FeaturesService = inject(FeaturesService);\r\n\r\n  protected lightSpeedEnabled = this.features.isEnabled(FeatureNames.LightSpeed);\r\n  protected cspEnabled = this.features.isEnabled(FeatureNames.ContentSecurityPolicy);\r\n  protected langPermsEnabled = this.features.isEnabled(FeatureNames.PermissionsByLanguage);\r\n\r\n  private appInternalsService = transient(AppInternalsService);\r\n\r\n  private contentItemsService = transient(ContentItemsService);\r\n\r\n  private dialogConfigSvc = transient(AppDialogConfigService);\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private context: Context,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super(router, route);\r\n\r\n    // New with proper ViewModel\r\n    this.viewModel$ = this.appSettingsInternal$.pipe(\r\n      map(s => {\r\n        const result: AppConfigurationViewModel = {\r\n          appLightSpeedCount: s.MetadataList.Items.filter(i => i._Type.Name == eavConstants.appMetadata.LightSpeed.ContentTypeName).length,\r\n          systemSettingsCount: this.isPrimary\r\n            ? s.EntityLists.SettingsSystem.filter(i => i.SettingsEntityScope === SystemSettingsScopes.Site).length\r\n            : s.EntityLists.SettingsSystem.filter(i => !i.SettingsEntityScope).length,\r\n          customSettingsCount: s.EntityLists.AppSettings?.length,\r\n          customSettingsFieldsCount: s.FieldAll.AppSettings?.length,\r\n          systemResourcesCount: this.isPrimary\r\n            ? s.EntityLists.ResourcesSystem.filter(i => i.SettingsEntityScope === SystemSettingsScopes.Site).length\r\n            : s.EntityLists.ResourcesSystem.filter(i => !i.SettingsEntityScope).length,\r\n          customResourcesCount: s.EntityLists.AppResources?.length,\r\n          customResourcesFieldsCount: s.FieldAll.AppResources?.length,\r\n        }\r\n        return result;\r\n      }));\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.fetchSettings();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => { this.fetchSettings(); }));\r\n\r\n    this.dialogConfigSvc.getCurrent$().subscribe((dialogSettings) => {\r\n      this.dialogSettings = dialogSettings;\r\n      const appScope = dialogSettings.Context.App.SettingsScope;\r\n      this.isGlobal = appScope === AppScopes.Global;\r\n      this.isPrimary = appScope === AppScopes.Site;\r\n      this.isApp = appScope === AppScopes.App;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.snackBar.dismiss();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  edit(staticName: string, systemSettingsScope?: SystemSettingsScope) {\r\n    this.contentItemsService.getAll(staticName).subscribe(contentItems => {\r\n      let form: EditForm;\r\n\r\n      switch (staticName) {\r\n        case eavConstants.contentTypes.systemSettings:\r\n        case eavConstants.contentTypes.systemResources:\r\n          const systemSettingsEntities = contentItems.filter(i => systemSettingsScope === SystemSettingsScopes.App\r\n            ? !i.SettingsEntityScope\r\n            : i.SettingsEntityScope === SystemSettingsScopes.Site);\r\n          if (systemSettingsEntities.length > 1) {\r\n            throw new Error(`Found too many settings for type ${staticName}`);\r\n          }\r\n          const systemSettingsEntity = systemSettingsEntities[0];\r\n          form = {\r\n            items: [\r\n              systemSettingsEntity == null\r\n                ? {\r\n                  ContentTypeName: staticName,\r\n                  Prefill: {\r\n                    ...(systemSettingsScope === SystemSettingsScopes.Site && { SettingsEntityScope: SystemSettingsScopes.Site }),\r\n                  }\r\n                }\r\n                : { EntityId: systemSettingsEntity.Id }\r\n            ],\r\n          };\r\n          break;\r\n        case eavConstants.contentTypes.customSettings:\r\n        case eavConstants.contentTypes.customResources:\r\n          if (contentItems.length > 1) {\r\n            throw new Error(`Found too many settings for type ${staticName}`);\r\n          }\r\n          const customSettingsEntity = contentItems[0];\r\n          form = {\r\n            items: [\r\n              customSettingsEntity == null\r\n                ? { ContentTypeName: staticName }\r\n                : { EntityId: customSettingsEntity.Id }\r\n            ],\r\n          };\r\n          break;\r\n        default:\r\n          if (contentItems.length < 1) throw new Error(`Found no settings for type ${staticName}`);\r\n          if (contentItems.length > 1) throw new Error(`Found too many settings for type ${staticName}`);\r\n          form = {\r\n            items: [{ EntityId: contentItems[0].Id }],\r\n          };\r\n      }\r\n\r\n      const formUrl = convertFormToUrl(form);\r\n      this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route.parent.firstChild });\r\n    });\r\n  }\r\n\r\n  openLightSpeed() {\r\n    const form = AppAdminHelpers.getLightSpeedEditParams(this.context.appId);\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  openSiteSettings() {\r\n    const sitePrimaryApp = this.dialogSettings.Context.Site.PrimaryApp;\r\n    this.dialogService.openAppAdministration(sitePrimaryApp.ZoneId, sitePrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openGlobalSettings() {\r\n    const globalPrimaryApp = this.dialogSettings.Context.System.PrimaryApp;\r\n    this.dialogService.openAppAdministration(globalPrimaryApp.ZoneId, globalPrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  config(staticName: string) {\r\n    this.router.navigate([`fields/${staticName}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  openPermissions() {\r\n    this.router.navigate([GoToPermissions.getUrlApp(this.context.appId)], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  openLanguagePermissions(enabled: boolean) {\r\n    if (enabled)\r\n      this.router.navigate(['language-permissions'], { relativeTo: this.route.parent.firstChild });\r\n    else\r\n      openFeatureDialog(this.dialog, FeatureNames.PermissionsByLanguage, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  analyze(part: AnalyzePart) {\r\n    this.router.navigate([`analyze/${part}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  private fetchSettings() {\r\n    const getObservable = this.appInternalsService.getAppInternals();\r\n    getObservable.subscribe(x => {\r\n      // 2dm - New mode for Reactive UI\r\n      this.appSettingsInternal$.next(x);\r\n    });\r\n  }\r\n\r\n  fixContentType(staticName: string, action: 'edit' | 'config') {\r\n    this.contentTypesService.retrieveContentTypes(eavConstants.scopes.configuration.value).subscribe(contentTypes => {\r\n      const contentTypeExists = contentTypes.some(ct => ct.Name === staticName);\r\n      if (contentTypeExists) {\r\n        if (action === 'edit') {\r\n          this.edit(staticName);\r\n        } else if (action === 'config') {\r\n          this.config(staticName);\r\n        }\r\n      } else {\r\n        const newContentType = {\r\n          StaticName: '',\r\n          Name: staticName,\r\n          Description: '',\r\n          Scope: eavConstants.scopes.configuration.value,\r\n          ChangeStaticName: false,\r\n          NewStaticName: '',\r\n        } as ContentTypeEdit;\r\n        this.contentTypesService.save(newContentType).subscribe(success => {\r\n          if (!success) { return; }\r\n\r\n          if (action === 'edit') {\r\n            this.edit(staticName);\r\n          } else if (action === 'config') {\r\n            this.config(staticName);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nclass AppConfigurationViewModel {\r\n  // Lightspeed\r\n  appLightSpeedCount: number;\r\n\r\n  systemSettingsCount: number;\r\n  customSettingsCount: number;\r\n  customSettingsFieldsCount: number;\r\n  systemResourcesCount: number;\r\n  customResourcesCount: number;\r\n  customResourcesFieldsCount: number;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get<Query[]>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get<null>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../services/context';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\nimport { InputTypeStrict } from './input-type-catalog';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputTypeMetadata[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<Record<string, string>>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, inject, ApplicationRef, createComponent, EnvironmentInjector, ANIMATION_MODULE_TYPE, booleanAttribute, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { InteractivityChecker, A11yModule } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\n\nlet nextId = 0;\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/** Keeps track of the apps currently containing badges. */\nconst badgeApps = new Set();\n/**\n * Component used to load the structural styles of the badge.\n * @docs-private\n */\nclass _MatBadgeStyleLoader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: _MatBadgeStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: _MatBadgeStyleLoader, isStandalone: true, selector: \"ng-component\", ngImport: i0, template: '', isInline: true, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color);color:var(--mat-badge-text-color);font-family:var(--mat-badge-text-font);font-weight:var(--mat-badge-text-weight);border-radius:var(--mat-badge-container-shape)}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color)}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, unset);min-height:var(--mat-badge-small-size-container-size, unset);line-height:var(--mat-badge-legacy-small-size-container-size, var(--mat-badge-small-size-container-size));padding:var(--mat-badge-small-size-container-padding);font-size:var(--mat-badge-small-size-text-size);margin:var(--mat-badge-small-size-container-offset)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, unset);min-height:var(--mat-badge-container-size, unset);line-height:var(--mat-badge-legacy-container-size, var(--mat-badge-container-size));padding:var(--mat-badge-container-padding);font-size:var(--mat-badge-text-size);margin:var(--mat-badge-container-offset)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, unset);min-height:var(--mat-badge-large-size-container-size, unset);line-height:var(--mat-badge-legacy-large-size-container-size, var(--mat-badge-large-size-container-size));padding:var(--mat-badge-large-size-container-padding);font-size:var(--mat-badge-large-size-text-size);margin:var(--mat-badge-large-size-container-offset)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset)}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: _MatBadgeStyleLoader, decorators: [{\n            type: Component,\n            args: [{ standalone: true, encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color);color:var(--mat-badge-text-color);font-family:var(--mat-badge-text-font);font-weight:var(--mat-badge-text-weight);border-radius:var(--mat-badge-container-shape)}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color)}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, unset);min-height:var(--mat-badge-small-size-container-size, unset);line-height:var(--mat-badge-legacy-small-size-container-size, var(--mat-badge-small-size-container-size));padding:var(--mat-badge-small-size-container-padding);font-size:var(--mat-badge-small-size-text-size);margin:var(--mat-badge-small-size-container-offset)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, unset);min-height:var(--mat-badge-container-size, unset);line-height:var(--mat-badge-legacy-container-size, var(--mat-badge-container-size));padding:var(--mat-badge-container-padding);font-size:var(--mat-badge-text-size);margin:var(--mat-badge-container-offset)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, unset);min-height:var(--mat-badge-large-size-container-size, unset);line-height:var(--mat-badge-legacy-large-size-container-size, var(--mat-badge-large-size-container-size));padding:var(--mat-badge-large-size-container-padding);font-size:var(--mat-badge-large-size-text-size);margin:var(--mat-badge-large-size-container-offset)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset)}\"] }]\n        }] });\n/** Directive to display a text badge. */\nclass MatBadge {\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateDescription(newDescription);\n    }\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        this._color = 'primary';\n        /** Whether the badge should overlap its contents or not */\n        this.overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        /** Whether the OnInit lifecycle hook has run yet */\n        this._isInitialized = false;\n        /** InteractivityChecker to determine if the badge host is focusable. */\n        this._interactivityChecker = inject(InteractivityChecker);\n        this._document = inject(DOCUMENT);\n        const appRef = inject(ApplicationRef);\n        if (!badgeApps.has(appRef)) {\n            badgeApps.add(appRef);\n            const componentRef = createComponent(_MatBadgeStyleLoader, {\n                environmentInjector: inject(EnvironmentInjector),\n            });\n            appRef.onDestroy(() => {\n                badgeApps.delete(appRef);\n                if (badgeApps.size === 0) {\n                    componentRef.destroy();\n                }\n            });\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n            const matIconTagName = 'mat-icon';\n            // Heads-up for developers to avoid putting matBadge on <mat-icon>\n            // as it is aria-hidden by default docs mention this at:\n            // https://material.angular.io/components/badge/overview#accessibility\n            if (nativeElement.tagName.toLowerCase() === matIconTagName &&\n                nativeElement.getAttribute('aria-hidden') === 'true') {\n                console.warn(`Detected a matBadge on an \"aria-hidden\" \"<mat-icon>\". ` +\n                    `Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.` +\n                    `\\n${nativeElement.outerHTML}`);\n            }\n        }\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n            this._inlineBadgeDescription?.remove();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Gets whether the badge's host element is interactive. */\n    _isHostInteractive() {\n        // Ignore visibility since it requires an expensive style caluclation.\n        return this._interactivityChecker.isFocusable(this._elementRef.nativeElement, {\n            ignoreVisibility: true,\n        });\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent ?? ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateDescription(newDescription) {\n        // Always start by removing the aria-describedby; we will add a new one if necessary.\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        // NOTE: We only check whether the host is interactive here, which happens during\n        // when then badge content changes. It is possible that the host changes\n        // interactivity status separate from one of these. However, watching the interactivity\n        // status of the host would require a `MutationObserver`, which is likely more code + overhead\n        // than it's worth; from usages inside Google, we see that the vats majority of badges either\n        // never change interactivity, or also set `matBadgeHidden` based on the same condition.\n        if (!newDescription || this._isHostInteractive()) {\n            this._removeInlineDescription();\n        }\n        this._description = newDescription;\n        // We don't add `aria-describedby` for non-interactive hosts elements because we\n        // instead insert the description inline.\n        if (this._isHostInteractive()) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        else {\n            this._updateInlineDescription();\n        }\n    }\n    _updateInlineDescription() {\n        // Create the inline description element if it doesn't exist\n        if (!this._inlineBadgeDescription) {\n            this._inlineBadgeDescription = this._document.createElement('span');\n            this._inlineBadgeDescription.classList.add('cdk-visually-hidden');\n        }\n        this._inlineBadgeDescription.textContent = this.description;\n        this._badgeElement?.appendChild(this._inlineBadgeDescription);\n    }\n    _removeInlineDescription() {\n        this._inlineBadgeDescription?.remove();\n        this._inlineBadgeDescription = undefined;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadge, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.AriaDescriber }, { token: i0.Renderer2 }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatBadge, isStandalone: true, selector: \"[matBadge]\", inputs: { color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\", booleanAttribute], disabled: [\"matBadgeDisabled\", \"disabled\", booleanAttribute], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\", booleanAttribute] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.AriaDescriber }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: [{ alias: 'matBadgeOverlap', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matBadgeDisabled', transform: booleanAttribute }]\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: [{ alias: 'matBadgeHidden', transform: booleanAttribute }]\n            }] } });\n\nclass MatBadgeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader], exports: [MatBadge, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    // Note: we _shouldn't_ have to import `_MatBadgeStyleLoader`,\n                    // but it seems to be necessary for tests.\n                    imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader],\n                    exports: [MatBadge, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n"],"x_google_ignoreList":[10]}