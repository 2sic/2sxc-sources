{"version":3,"file":"projects_eav-ui_src_app_edit_dialog_footer_edit-dialog-footer_component_ts.da891261a1818876.js","mappings":"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","names":["DebugTypes","Data","Formulas","Logs","i0","log_r2","_r1","$implicit","ctx_r2","logToConsole","_c0","severity","LogSeverities","Error","Warn","time","label","LogsDumpComponent","constructor","loggingService","this","logs","getLogsSignal","log","Log","console","error","warn","static","t","i1","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","LogsDumpComponent_Conditional_1_Template","LogsDumpComponent_For_3_Template","length","NgClass","ExtendedModule","i2","DatePipe","styles","SelectTargets","Entity","Field","Target","SnippetLabelSizePipe","maxLength","transform","substring","EJ8","pure","entityOption_r3","entityGuid","_c2","hasFormula","fieldOption_r4","fieldName","targetOption_r6","target","$event","_r5","ctx_r1","selectedChanged","FormulaDesignerComponent_Conditional_0_Conditional_16_For_2_Template","state","targetOptions","_r7","snippet_r9","_r8","copyToClipboard","code","snippet_r11","_r10","result","value","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_1_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Conditional_2_Template","undefined","isOnlyPromise","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_0_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Conditional_1_Template","isError","_r12","save","editMode","tmp_3_0","currentFormula","source","tmp_4_0","saving","FormulaDesignerComponent_Conditional_0_For_6_Template","trackEntityOptions","FormulaDesignerComponent_Conditional_0_For_12_Template","trackFieldOptions","FormulaDesignerComponent_Conditional_0_Conditional_16_Template","FormulaDesignerComponent_Conditional_0_Conditional_17_Template","toggleFreeText","formulaChanged","onFocused","onBlurred","FormulaDesignerComponent_Conditional_0_For_32_Template","trackSnippets","FormulaDesignerComponent_Conditional_0_Conditional_33_Template","FormulaDesignerComponent_Conditional_0_For_35_Template","FormulaDesignerComponent_Conditional_0_Conditional_40_Template","toggleEdit","deleteFormula","reset","FormulaDesignerComponent_Conditional_0_Conditional_60_Template","run","entityOptions","fieldsOptions","freeTextTarget","focused","filename","tmp_12_0","v2JsTypings","monacoOptions","_c1","v1DataSnippets","tmp_17_0","v1ContextSnippets","isDeleted","menu_r13","tmp_21_0","sourceId","allowSaveFormula","tmp_23_0","FormulaDesignerComponent","#designerSvc","snackBar","formConfig","itemService","contentTypeService","translate","loadError","config","enableFormulaSave","signal","minimap","enabled","lineHeight","lineNumbers","lineDecorationsWidth","folding","scrollBeyondLastLine","tabSize","fixedOverflowWidgets","formId","entitiesService","transient","EntityEditService","inject","FormulaDesignerService","designerState","formulaResult","currentTargetOptions","computed","Object","values","FormulaListItemTargets","includes","listItemFormulaNow","defaultFormulaNow","EavLogger","ngOnInit","keys","itemSettingsServices","setDesignerOpen","initAfterItemSettingsAreReady","ngOnDestroy","index","entityOption","fieldOption","snippet","newState","selectedSettingsSvc","getFieldsProps","set","formula","designer","cache","updateFormulaFromEditor","text","open","duration","oldState","resetFormula","retriggerFormulas","item","get","atAllFieldSettings","getContentTypeOfItem","Attributes","find","a","Name","Metadata","m","Type","Id","create","eavConstants","contentTypes","formulas","Title","Formula","Enabled","ParentRelationship","Add","EntityId","Index","Parent","Guid","subscribe","savedFormula","updateSaved","update","sourceGuid","confirm","instant","title","id","delete","next","_","i3","i4","i5","FormulaDesignerComponent_Conditional_0_Template","MatFormFieldModule","i6","MatSelectModule","i7","i8","FormsModule","i9","MatOptionModule","i10","MatInputModule","i11","MatButtonModule","i12","MatIconModule","i13","MonacoEditorComponent","MatMenuModule","i14","JsonPipe","TippyDirective","DataDumpComponent","items","getManySignal","itemGuids","EditDialogFooterComponent_Conditional_20_Conditional_1_Template","EditDialogFooterComponent_Conditional_20_Conditional_2_Template","EditDialogFooterComponent_Conditional_20_Conditional_3_Template","ctx_r0","activeDebug","EditDialogFooterComponent","debugInfoOpened","EventEmitter","sxcVer","window","sxcVersion","lastIndexOf","toggleDialog","type","emit","outputs","EditDialogFooterComponent_Conditional_20_Template","MatCardModule","http","context","dnnContext","contentType","entity","post","params","appId","zoneId","entityId","tryForce","$2sxc","apiUrl","webApiEntityRoot","toString","force","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.html","./projects/eav-ui/src/app/edit/dialog/footer/logs-dump/logs-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.models.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/snippet-label-size.pipe.ts","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/formula-designer/formula-designer.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.ts","./projects/eav-ui/src/app/edit/dialog/footer/data-dump/data-dump.component.html","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.html","./projects/eav-ui/src/app/edit/dialog/footer/edit-dialog-footer.component.ts","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts"],"sourcesContent":["export const DebugTypes = {\r\n  Data: 'data',\r\n  Formulas: 'formulas',\r\n  Logs: 'logs',\r\n} as const;\r\n\r\nexport type DebugType = typeof DebugTypes[keyof typeof DebugTypes];\r\n","<div class=\"logs-box fancy-scrollbar-light\">\r\n  @if (logs().length === 0) {\r\n  <div>Logs are empty</div>\r\n  }\r\n  @for (log of logs(); track log) {\r\n  <div class=\"log-entry\" [ngClass]=\"{\r\n        'log-error': log.severity === LogSeverities.Error,\r\n        'log-warn': log.severity === LogSeverities.Warn\r\n        }\">\r\n    <span class=\"log-entry-part log-entry-time\">{{ log.time | date : 'HH:mm:ss' }}:</span>\r\n    <span class=\"log-entry-part log-entry-label\">{{ log.label }}</span>\r\n    <span class=\"log-entry-part log-entry-show\" tippy=\"Log to console\" (click)=\"logToConsole(log)\">\r\n      console\r\n    </span>\r\n  </div>\r\n  }\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgClass, AsyncPipe, DatePipe } from '@angular/common';\r\nimport { LogEntry, LoggingService, LogSeverities } from '../../../shared/services/logging.service';\r\n\r\n@Component({\r\n  selector: 'app-logs-dump',\r\n  templateUrl: './logs-dump.component.html',\r\n  styleUrls: ['./logs-dump.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    ExtendedModule,\r\n    AsyncPipe,\r\n    DatePipe,\r\n  ],\r\n})\r\nexport class LogsDumpComponent {\r\n  LogSeverities = LogSeverities;\r\n\r\n  protected logs = this.loggingService.getLogsSignal();\r\n\r\n  constructor(private loggingService: LoggingService) { }\r\n\r\n  logToConsole(log: LogEntry): void {\r\n    switch (log.severity) {\r\n      case LogSeverities.Log:\r\n        console.log(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Warn:\r\n        console.warn(log.label, log.error);\r\n        break;\r\n      case LogSeverities.Error:\r\n        console.error(log.label, log.error);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { FormulaCacheItem, FormulaTarget } from '../../../formulas/models/formula.models';\r\n\r\nexport interface EntityOption {\r\n  entityGuid: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  label: string;\r\n}\r\n\r\nexport interface FieldOption {\r\n  fieldName: string;\r\n  formulas: FormulaCacheItem[];\r\n  hasFormula: boolean;\r\n  inputType: string;\r\n  label: string;\r\n}\r\n\r\nexport interface TargetOption {\r\n  hasFormula: boolean;\r\n  label: string;\r\n  target: FormulaTarget;\r\n}\r\n\r\nexport interface DesignerSnippet {\r\n  code: string;\r\n  label: string;\r\n}\r\n\r\nexport const SelectTargets = {\r\n  Entity: 'entityGuid',\r\n  Field: 'fieldValue',\r\n  Target: 'formulaTarget',\r\n} as const;\r\n\r\nexport type SelectTarget = typeof SelectTargets[keyof typeof SelectTargets];\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'snippetLabelSize',\r\n    standalone: true\r\n})\r\nexport class SnippetLabelSizePipe implements PipeTransform {\r\n\r\n  private maxLength = 24;\r\n\r\n  transform(label: string): string {\r\n    if (label.length <= this.maxLength) { return label; }\r\n    return `…${label.substring(label.length - this.maxLength)}`;\r\n  }\r\n}\r\n","@if (!loadError) {\r\n  <div class=\"formula-context-box\">\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Entity</mat-label>\r\n      <mat-select [ngModel]=\"state().entityGuid\" (ngModelChange)=\"selectedChanged(SelectTargets.Entity, $event)\">\r\n        @for (entityOption of entityOptions(); track trackEntityOptions($index, entityOption)) {\r\n          <mat-option\r\n            [value]=\"entityOption.entityGuid\">\r\n            <span [ngClass]=\"{ 'has-formula': entityOption.hasFormula }\">\r\n              {{ entityOption.label }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Attribute</mat-label>\r\n      <mat-select [ngModel]=\"state().fieldName\" (ngModelChange)=\"selectedChanged(SelectTargets.Field, $event)\"\r\n        [disabled]=\"state().entityGuid == null\">\r\n        @for (fieldOption of fieldsOptions(); track trackFieldOptions($index, fieldOption)) {\r\n          <mat-option\r\n            [value]=\"fieldOption.fieldName\">\r\n            <span [ngClass]=\"{ 'has-formula': fieldOption.hasFormula }\">\r\n              {{ fieldOption.fieldName }}\r\n            </span>\r\n          </mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n      <mat-label>Target</mat-label>\r\n      @if (!freeTextTarget) {\r\n        <mat-select [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n          @for (targetOption of targetOptions(); track targetOption) {\r\n            <mat-option [value]=\"targetOption.target\">\r\n              <span [ngClass]=\"{ 'has-formula': targetOption.hasFormula }\">\r\n                {{ targetOption.label }}\r\n              </span>\r\n            </mat-option>\r\n          }\r\n        </mat-select>\r\n      }\r\n      @if (freeTextTarget) {\r\n        <input matInput [ngModel]=\"state().target\"\r\n          (ngModelChange)=\"selectedChanged(SelectTargets.Target, $event)\"\r\n          [disabled]=\"state().entityGuid == null || state().fieldName == null\">\r\n      }\r\n    </mat-form-field>\r\n    <button mat-icon-button tippy=\"FreeText Target\" class=\"eav-formula-button\"\r\n      [disabled]=\"state().entityGuid == null || state().fieldName == null\" (click)=\"toggleFreeText()\">\r\n      <mat-icon>text_fields</mat-icon>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n    <a mat-icon-button tippy=\"Help\" class=\"eav-formula-button\" href=\"https://go.2sxc.org/formulas\" target=\"_blank\">\r\n      <mat-icon>help</mat-icon>\r\n    </a>\r\n  </div>\r\n  <div class=\"formula-box\">\r\n    <div class=\"formula-field\" [ngClass]=\"{\r\n      'disabled': !state().editMode || state().entityGuid == null || state().fieldName == null || state().target == null,\r\n      'focused': focused\r\n      }\">\r\n      <mat-label class=\"label\">Function</mat-label>\r\n      <app-monaco-editor class=\"editor\" [filename]=\"filename\" [value]=\"currentFormula()?.source ?? template()\"\r\n        [jsTypings]=\"v2JsTypings()\" (valueChanged)=\"formulaChanged($event)\" [options]=\"monacoOptions\"\r\n        (focused)=\"onFocused()\" (blurred)=\"onBlurred()\">\r\n      </app-monaco-editor>\r\n    </div>\r\n    <div class=\"formula-snippets fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': !state().editMode }\">\r\n      @for (snippet of v1DataSnippets(); track trackSnippets($index, snippet)) {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n      @if (v1DataSnippets()?.length && v1ContextSnippets().length) {\r\n        <div class=\"separator\"></div>\r\n      }\r\n      @for (snippet of v1ContextSnippets(); track trackSnippets($index, snippet)) {\r\n        <div class=\"snippet\" [title]=\"snippet.code\"\r\n          (click)=\"copyToClipboard(snippet.code)\">\r\n          {{ snippet.label | snippetLabelSize }}\r\n        </div>\r\n      }\r\n    </div>\r\n  </div>\r\n  <div class=\"formula-footer-box\">\r\n    <div class=\"formula-result-box hide-scrollbar\">\r\n      <span class=\"label\">Result:&nbsp;</span>\r\n      @if (result() != null && !isDeleted()) {\r\n        @if (!result().isError) {\r\n          @if (result().value !== undefined) {\r\n            <span>{{ result().value | json }}</span>\r\n          }\r\n          @else if (!result().isOnlyPromise) {\r\n            <span class=\"result-undefined\">undefined</span>\r\n          }\r\n          @else {\r\n            <span>promise(🤞🏽)</span>\r\n          }\r\n        }\r\n        @else {\r\n          <span class=\"result-error\">\r\n            Calculation failed. Please check logs for more info\r\n          </span>\r\n        }\r\n      }\r\n    </div>\r\n    <div class=\"formula-actions-box\">\r\n      <button mat-icon-button tippy=\"Edit\" class=\"eav-formula-action-button\" (click)=\"toggleEdit()\">\r\n        <mat-icon>edit</mat-icon>\r\n      </button>\r\n      <button mat-icon-button tippy=\"Menu\" class=\"eav-formula-action-button\" [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"deleteFormula()\"\r\n          [disabled]=\"!currentFormula()?.sourceId\">\r\n          <mat-icon>delete</mat-icon>\r\n          <span>Delete</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"reset()\">\r\n          <mat-icon>history</mat-icon>\r\n          <span>Reset</span>\r\n        </button>\r\n      </mat-menu>\r\n      @if (allowSaveFormula) {\r\n        <button mat-icon-button tippy=\"Save\" class=\"eav-formula-action-button\"\r\n          [tippyDisabled]=\"!state().editMode || !currentFormula()?.source\"\r\n          [disabled]=\"!state().editMode || !currentFormula()?.source || saving()\" (click)=\"save()\">\r\n          <mat-icon>save</mat-icon>\r\n        </button>\r\n      }\r\n      <button mat-icon-button class=\"eav-formula-action-button\" tippy=\"Run\"\r\n        [disabled]=\"!state().editMode || !currentFormula()?.source\" (click)=\"run()\">\r\n        <mat-icon>play_arrow</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { EntityEditService } from '../../../../shared/services/entity-edit.service';\r\nimport { eavConstants } from '../../../../shared/constants/eav.constants';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { FormulaDesignerService } from '../../../formulas/formula-designer.service';\r\nimport { defaultFormulaNow, listItemFormulaNow } from '../../../formulas/formula.constants';\r\nimport { FormulaListItemTargets, FormulaTarget } from '../../../formulas/models/formula.models';\r\nimport { DesignerSnippet, EntityOption, FieldOption, SelectTarget, SelectTargets } from './formula-designer.models';\r\nimport { DesignerState } from '../../../formulas/models/formula-results.models';\r\nimport { SnippetLabelSizePipe } from './snippet-label-size.pipe';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MonacoEditorComponent } from '../../../../monaco-editor/monaco-editor.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgClass, AsyncPipe, JsonPipe } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../../core/transient';\r\nimport { EavLogger } from '../../../../shared/logging/eav-logger';\r\nimport { FormConfigService } from '../../../state/form-config.service';\r\nimport { ItemService } from '../../../shared/store/item.service';\r\nimport { ContentTypeService } from '../../../shared/store/content-type.service';\r\n\r\nconst logThis = false;\r\nconst nameOfThis = 'FormulaDesignerComponent';\r\n\r\n@Component({\r\n  selector: 'app-formula-designer',\r\n  templateUrl: './formula-designer.component.html',\r\n  styleUrls: ['./formula-designer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    ExtendedModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MonacoEditorComponent,\r\n    MatMenuModule,\r\n    AsyncPipe,\r\n    JsonPipe,\r\n    SnippetLabelSizePipe,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FormulaDesignerComponent implements OnInit, OnDestroy {\r\n  SelectTargets = SelectTargets;\r\n  loadError = false;\r\n  freeTextTarget = false;\r\n  allowSaveFormula = this.formConfig.config.enableFormulaSave;\r\n  isDeleted = signal(false);\r\n  saving = signal(false);\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    minimap: {\r\n      enabled: false,\r\n    },\r\n    lineHeight: 19,\r\n    lineNumbers: 'off',\r\n    lineDecorationsWidth: 0,\r\n    folding: false,\r\n    scrollBeyondLastLine: false,\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n  filename = `formula${this.formConfig.config.formId}.js`;\r\n  focused = false;\r\n\r\n  private entitiesService = transient(EntityEditService);\r\n\r\n  #designerSvc = inject(FormulaDesignerService);\r\n  protected state = this.#designerSvc.designerState;\r\n  protected result = this.#designerSvc.formulaResult;\r\n  protected targetOptions = this.#designerSvc.currentTargetOptions;\r\n  \r\n  protected entityOptions = this.#designerSvc.entityOptions;\r\n  protected fieldsOptions = this.#designerSvc.fieldsOptions;\r\n  protected currentFormula = this.#designerSvc.currentFormula;\r\n\r\n  protected v2JsTypings = this.#designerSvc.v2JsTypings;\r\n\r\n  protected v1ContextSnippets = this.#designerSvc.v1ContextSnippets;\r\n  protected v1DataSnippets = this.#designerSvc.v1DataSnippets;\r\n\r\n  protected template = computed(() => {\r\n    return Object.values(FormulaListItemTargets).includes(this.state().target)\r\n    ? listItemFormulaNow\r\n    : defaultFormulaNow;\r\n  });\r\n\r\n  private log = new EavLogger(nameOfThis, logThis);\r\n  \r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private formConfig: FormConfigService,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadError = false;\r\n    if (Object.keys(this.#designerSvc.itemSettingsServices).length < 1) {\r\n      this.loadError = true;\r\n      return;\r\n    }\r\n    \r\n    this.#designerSvc.setDesignerOpen(true);\r\n    this.#designerSvc.initAfterItemSettingsAreReady();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.#designerSvc.setDesignerOpen(false);\r\n  }\r\n\r\n  trackEntityOptions(index: number, entityOption: EntityOption): string {\r\n    return entityOption.entityGuid;\r\n  }\r\n\r\n  trackFieldOptions(index: number, fieldOption: FieldOption): string {\r\n    return fieldOption.fieldName;\r\n  }\r\n\r\n  trackSnippets(index: number, snippet: DesignerSnippet): string {\r\n    return snippet.code;\r\n  }\r\n\r\n  selectedChanged(target: SelectTarget, value: string | FormulaTarget): void {\r\n    const newState: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    switch (target) {\r\n      case SelectTargets.Entity:\r\n        newState.entityGuid = value;\r\n        const selectedSettingsSvc = this.#designerSvc.itemSettingsServices[newState.entityGuid];\r\n        newState.fieldName = Object.keys(selectedSettingsSvc.getFieldsProps())[0];\r\n        break;\r\n      case SelectTargets.Field:\r\n        newState.fieldName = value;\r\n        break;\r\n      case SelectTargets.Target:\r\n        newState.target = value as FormulaTarget;\r\n        break;\r\n    }\r\n\r\n    this.#designerSvc.designerState.set(newState);\r\n  }\r\n\r\n  toggleFreeText(): void {\r\n    this.freeTextTarget = !this.freeTextTarget;\r\n  }\r\n\r\n  formulaChanged(formula: string): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    this.#designerSvc.cache.updateFormulaFromEditor(designer, formula, false);\r\n  }\r\n\r\n  onFocused(): void {\r\n    this.focused = true;\r\n  }\r\n\r\n  onBlurred(): void {\r\n    this.focused = false;\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  toggleEdit(): void {\r\n    const oldState = this.#designerSvc.designerState();\r\n    const designer: DesignerState = {\r\n      ...oldState,\r\n      editMode: !oldState.editMode,\r\n    };\r\n    this.#designerSvc.designerState.set(designer);\r\n    if (designer.editMode) {\r\n      const formula = this.#designerSvc.currentFormula();\r\n      if (formula == null) {\r\n        this.#designerSvc.cache.updateFormulaFromEditor(designer, Object.values(FormulaListItemTargets).includes(designer.target) ? listItemFormulaNow : defaultFormulaNow, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  reset(): void {\r\n    const designer: DesignerState = {\r\n      ...this.#designerSvc.designerState(),\r\n      editMode: false,\r\n    };\r\n    this.#designerSvc.designerState.set(designer);\r\n    this.#designerSvc.cache.resetFormula(designer);\r\n    this.#designerSvc.itemSettingsServices[designer.entityGuid].retriggerFormulas();\r\n  }\r\n\r\n  run(): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    const formula = this.#designerSvc.currentFormula();\r\n    this.#designerSvc.cache.updateFormulaFromEditor(designer, formula.source, true);\r\n    this.#designerSvc.itemSettingsServices[designer.entityGuid].retriggerFormulas();\r\n    this.isDeleted.set(false);\r\n  }\r\n\r\n  save(): void {\r\n    this.saving.set(true);\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    if (formula.sourceId == null) {\r\n      const item = this.itemService.get(formula.entityGuid);\r\n      const contentType = this.contentTypeService.getContentTypeOfItem(item);\r\n      const attributeDef = contentType.Attributes.find(a => a.Name === formula.fieldName);\r\n      const atAllFieldSettings = attributeDef.Metadata.find(m => m.Type.Id === '@All');\r\n      if (!atAllFieldSettings) {\r\n        this.snackBar.open('Field configuration is missing. Please create formula in Administration', undefined, { duration: 3000 });\r\n        this.saving.set(false);\r\n        return;\r\n      }\r\n      this.entitiesService.create(\r\n        eavConstants.contentTypes.formulas,\r\n        {\r\n          Title: formula.target,\r\n          Target: formula.target,\r\n          Formula: formula.source,\r\n          Enabled: true,\r\n          ParentRelationship: {\r\n            Add: null,\r\n            EntityId: null,\r\n            Field: 'Formulas',\r\n            Index: 0,\r\n            Parent: atAllFieldSettings.Guid,\r\n          },\r\n        },\r\n      ).subscribe(savedFormula => {\r\n        this.#designerSvc.cache.updateSaved(formula, savedFormula.Guid, savedFormula.Id);\r\n        this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n        this.saving.set(false);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.entitiesService.update(eavConstants.contentTypes.formulas, formula.sourceId, { Formula: formula.source }).subscribe(() => {\r\n      this.#designerSvc.cache.updateSaved(formula, formula.sourceGuid, formula.sourceId);\r\n      this.snackBar.open('Formula saved', null, { duration: 2000 });\r\n      this.saving.set(false);\r\n    });\r\n  }\r\n\r\n  deleteFormula(): void {\r\n    const designer = this.#designerSvc.designerState();\r\n    const formula = this.#designerSvc.currentFormula();\r\n\r\n    const id = formula.sourceId;\r\n    const title = formula.fieldName + ' - ' + formula.target;\r\n\r\n    const confirmed = confirm(this.translate.instant('Data.Delete.Question', { title, id }));\r\n    if (!confirmed)\r\n      return;\r\n\r\n    this.entitiesService.delete(eavConstants.contentTypes.formulas, formula.sourceId, true).subscribe({\r\n      next: () => {\r\n        this.#designerSvc.cache.delete(formula);\r\n        this.snackBar.open(this.translate.instant('Message.Deleted'), null, { duration: 2000 });\r\n        this.isDeleted.set(true);\r\n        if (designer.editMode)\r\n          this.toggleEdit();\r\n      },\r\n      error: (_: HttpErrorResponse) => {\r\n        this.snackBar.open(this.translate.instant('Message.DeleteError'), null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n}\r\n","import { Component } from '@angular/core';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { FormConfigService } from '../../../state/form-config.service';\r\nimport { ItemService } from '../../../shared/store/item.service';\r\n\r\n@Component({\r\n  selector: 'app-data-dump',\r\n  templateUrl: './data-dump.component.html',\r\n  styleUrls: ['./data-dump.component.scss'],\r\n  standalone: true,\r\n  imports: [JsonPipe],\r\n})\r\nexport class DataDumpComponent {\r\n  protected items = this.itemService.getManySignal(this.formConfig.config.itemGuids);\r\n  constructor(private itemService: ItemService, private formConfig: FormConfigService) { }\r\n}\r\n","  <textarea readonly class=\"fancy-scrollbar-light\">{{ items() | json }}</textarea>\r\n\r\n","<mat-card appearance=\"raised\" class=\"mat-elevation-z4\" [ngClass]=\"{ 'debug-enabled': activeDebug != null }\">\r\n\r\n  <div class=\"debug-buttons-container\">\r\n    <button mat-button tippy=\"Show Data JSON\" (click)=\"toggleDialog(DebugTypes.Data)\">\r\n      <mat-icon>offline_bolt</mat-icon>\r\n      <span>Data</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Formula Designer\" (click)=\"toggleDialog(DebugTypes.Formulas)\">\r\n      <mat-icon>functions</mat-icon>\r\n      <span>Formulas</span>\r\n    </button>\r\n    <button mat-button tippy=\"Show Logs\" (click)=\"toggleDialog(DebugTypes.Logs)\">\r\n      <mat-icon>speed</mat-icon>\r\n      <span>Logs</span>\r\n    </button>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"sxc-version\">2sxc {{ sxcVer }}</div>\r\n  </div>\r\n\r\n  @if (activeDebug != null) {\r\n    <div class=\"debug-info-container\">\r\n      @if (activeDebug === DebugTypes.Data) {\r\n        <app-data-dump></app-data-dump>\r\n      }\r\n      @if (activeDebug === DebugTypes.Formulas) {\r\n        <app-formula-designer>\r\n        </app-formula-designer>\r\n      }\r\n      @if (activeDebug === DebugTypes.Logs) {\r\n        <app-logs-dump></app-logs-dump>\r\n      }\r\n    </div>\r\n  }\r\n</mat-card>","import { Component, EventEmitter, Input, Output, QueryList } from '@angular/core';\r\nimport { EavWindow } from '../../../shared/models/eav-window.model';\r\nimport { EntityFormBuilderComponent } from '../../entity-form/entity-form-builder/form-builder.component';\r\nimport { DebugType, DebugTypes } from './edit-dialog-footer.models';\r\nimport { LogsDumpComponent } from './logs-dump/logs-dump.component';\r\nimport { FormulaDesignerComponent } from './formula-designer/formula-designer.component';\r\nimport { DataDumpComponent } from './data-dump/data-dump.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ExtendedModule } from '@angular/flex-layout/extended';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-edit-dialog-footer',\r\n  templateUrl: './edit-dialog-footer.component.html',\r\n  styleUrls: ['./edit-dialog-footer.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    NgClass,\r\n    ExtendedModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    DataDumpComponent,\r\n    FormulaDesignerComponent,\r\n    LogsDumpComponent,\r\n  ],\r\n})\r\nexport class EditDialogFooterComponent {\r\n  @Output() private debugInfoOpened = new EventEmitter<boolean>();\r\n\r\n  DebugTypes = DebugTypes;\r\n  activeDebug: DebugType;\r\n  sxcVer = window.sxcVersion.substring(0, window.sxcVersion.lastIndexOf('.'));\r\n\r\n  toggleDialog(type: DebugType): void {\r\n    this.activeDebug = type !== this.activeDebug ? type : null;\r\n    this.debugInfoOpened.emit(this.activeDebug != null);\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\nimport { webApiEntityRoot } from './entity.service';\r\n\r\n@Injectable()\r\nexport class EntityEditService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n"],"x_google_ignoreList":[]}