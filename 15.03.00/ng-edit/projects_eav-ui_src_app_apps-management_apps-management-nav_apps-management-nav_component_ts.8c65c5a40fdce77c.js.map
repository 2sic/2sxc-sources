{"version":3,"mappings":"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","names":["i0","ctx_r20","oxw","ctx_r29","ctx_r39","ctx_r41","ctx_r43","ctx_r44","ctx_r45","SystemInfoComponent","BaseComponent","constructor","router","route","zoneService","snackBar","dialogService","sxcInsightsService","featuresService","super","this","ngOnInit","systemInfoSet$","BehaviorSubject","undefined","languages$","loading$","buildTemplateVars","getSystemInfo","getLanguages","subscription","add","refreshOnChildClosedDeep","subscribe","ngOnDestroy","complete","copyToClipboard","text","open","duration","openSiteSettings","sitePrimaryApp","dialogSettings","Context","Site","PrimaryApp","openAppAdministration","ZoneId","AppId","openGlobalSettings","globalPrimaryApp","System","openInsights","window","$2sxc","http","apiUrl","activatePageLog","form","next","pageLogDuration","res","document","activeElement","HTMLElement","blur","resetForm","error","systemInfoSet","languages","systemInfos$","pipe","map","label","value","EavVersion","Platform","PlatformVersion","Zones","toString","Fingerprint","License","Owner","link","url","GoToRegistration","target","siteInfos$","combineLatest","allLanguages","length","activeLanguages","filter","l","IsEnabled","SiteId","Apps","warningIcon$","Messages","WarningsObsolete","WarningsOther","warningInfos$","lsEnabled$","isEnabled$","FeatureNames","cspEnabled$","templateVars$","systemInfos","siteInfos","loading","warningIcon","warningInfos","lsEnabled","cspEnabled","viewModel","console","log","selectors","ctx_r6","ctx_r10","ctx_r12","ctx_r14","AppsListActionsComponent","agInit","params","app","data","lightspeedEnabled","appHasLightSpeed","i","Lightspeed","_a","Id","appLightSpeedEnabled","a","_b","refresh","openLightspeed","onOpenLightspeed","openLightspeedFeatureInfo","flushCache","onFlush","deleteApp","onDelete","AppsListShowComponent","AppsListComponent","appsListService","context","dialog","viewContainerRef","changeDetectorRef","buildGridOptions","Subject","apps$","refreshApps$","startWith","switchMap","getAll","catchError","of","share","isAddFromFolderEnabled$","lightspeedEnabled$","fabOpen$","openChange","browseCatalog","createApp","navigate","relativeTo","firstChild","createInheritedApp","addFromFolder","importApp","files","state","result","prompt","Name","delete","alert","flushApp","confirm","formUrl","convertFormToUrl","AppAdminHelpers","zoneId","openApp","Object","defaultGridOptions","columnDefs","headerName","field","width","headerClass","cellClass","split","sortable","valueGetter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","Guid","BooleanFilterComponent","IsHidden","flex","minWidth","sort","onCellClicked","Thumbnail","Folder","Version","Items","pinned","openLightSpeed","FeatureComponentBase","ctx","SiteLanguagesStatusComponent","toggleLanguage","event","onToggleLanguage","checked","SiteLanguagesComponent","refreshLanguages$","language","enable","Code","Culture","ctx_r5","ctx_r8","FeatureDetailsDialogComponent","dialogData","dialogRef","closeDialog","close","findOutMore","MAT_DIALOG_DATA","FeaturesListEnabledReasonComponent","feature","FeaturesListEnabledComponent","FeaturesStatusComponent","disabled","isDisabled","toggle","nextValue","onToggle","AgGridHeightDirective","elementRef","element","nativeElement","ngOnChanges","changes","itemsCount","style","height","headerHeight","maxRows","rowHeight","extraHeight","LicensesOrderPipe","transform","licenses","Array","isArray","b","Priority","pure","ActiveFeaturesCountPipe","license","Features","f","Enabled","LicenseInfoComponent","featuresConfigService","licenses$","refreshLicenses$","getLicenses","tap","disabled$","trackLicenses","index","openRegistration","showFeatureDetails","autoFocus","markForCheck","toggleFeature","enabled","forkJoin","saveFeatures","FeatureGuid","timer","NameId","EnabledReason","expires","Expires","d","startsWith","EnabledInConfiguration","AgGridAngular","ctx_r11","AppsManagementNavComponent","appDialogConfigService","events","NavigationEnd","tabs","indexOf","snapshot","path","tabIndex","fetchDialogSettings","dialogSettings$","changeTab","getShared$","BaseSubsinkComponent","pairwise","hadChild","hasChild","refreshOnChildClosedShallow","features","FieldHintComponent","toggleIsShort","isShort","id","align","tooltip","copy","accentedSort","animateRows","enableCellTextSelection","suppressScrollOnNewData","valueCache","defaultColDef","filterParams","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","str","el","createElement","setAttribute","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"sources":["./projects/eav-ui/src/app/apps-management/system-info/system-info.component.html","./projects/eav-ui/src/app/apps-management/system-info/system-info.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-show/apps-list-show.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-show/apps-list-show.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.html","./projects/eav-ui/src/app/apps-management/licence-info/ag-grid-height.directive.ts","./projects/eav-ui/src/app/apps-management/licence-info/licenses-order.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/active-features-count.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.html","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.ts","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <!-- Platform Info -->\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon>settings_applications</mat-icon>\r\n      </div>\r\n      <mat-card-title>Platform</mat-card-title>\r\n      <mat-card-subtitle>What you are running</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.systemInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          <ng-container *ngIf=\"info.link\">\r\n            <a class=\"info-row__link\" [routerLink]=\"info.link.url\">{{ info.link.label }}</a>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Global Settings</h4>\r\n      <p>\r\n        This includes both pre-defined SystemSettings as well as custom Settings.\r\n        It will affect the entire Installation.\r\n      </p>\r\n      <div class=\"card-actions\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'http://r.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button (click)=\"openGlobalSettings()\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          <span>Open Global Settings</span>\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <!-- Site Info -->\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon>public</mat-icon>\r\n      </div>\r\n      <mat-card-title>This Site</mat-card-title>\r\n      <mat-card-subtitle>The current Site you're on</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.siteInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          <ng-container *ngIf=\"info.link\">\r\n            <a class=\"info-row__link\" *ngIf=\"info.link.target === 'angular'\" [routerLink]=\"info.link.url\">{{\r\n              info.link.label\r\n              }}</a>\r\n            <a class=\"info-row__link\" *ngIf=\"info.link.target !== 'angular'\" [href]=\"info.link.url\"\r\n              [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Site Settings</h4>\r\n      <p>\r\n        This includes both pre-defined SystemSettings as well as custom Settings.\r\n        It will affect the entire Site / Portal.\r\n      </p>\r\n      <div class=\"card-actions\">\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'http://r.2sxc.org/settings' }\"></ng-container>\r\n        <button mat-button (click)=\"openSiteSettings()\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          <span>Open Site Settings</span>\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <!-- Performance / Lightspeed -->\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon>bolt</mat-icon>\r\n      </div>\r\n      <mat-card-title>Performance</mat-card-title>\r\n      <mat-card-subtitle>Performance Enhancements and Caching</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"'LightSpeedOutputCache'\" [asInfo]=\"true\"></app-feature-text-info>\r\n  \r\n      <div *ngIf=\"data.lsEnabled\">\r\n        LightSpeed is enabled.\r\n        Configure it in each site/app as you need.\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://r.2sxc.org/lightspeed' }\"></ng-container>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <!-- Security -->\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon>local_police</mat-icon>\r\n      </div>\r\n      <mat-card-title>Security</mat-card-title>\r\n      <mat-card-subtitle>System Security Features</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <app-feature-text-info [featureNameId]=\"'ContentSecurityPolicy'\" [asInfo]=\"true\"></app-feature-text-info>\r\n  \r\n      <div *ngIf=\"data.cspEnabled\">\r\n        ContentSecurityPolicy is enabled.\r\n        Configure it in each site/app as you need.\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://r.2sxc.org/csp' }\"></ng-container>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <!-- Insights -->\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon>speed</mat-icon>\r\n      </div>\r\n      <mat-card-title>2sxc Insights</mat-card-title>\r\n      <mat-card-subtitle>See what's happening under the hood</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <h4>2sxc Insights for Super Users</h4>\r\n      <p>\r\n        This is to access a special section to see what is really in the server memory.\r\n        It's intended for extensive debugging - see also\r\n        <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n      </p>\r\n      <mat-card-actions>\r\n      <!-- <div class=\"card-actions\"> -->\r\n        <ng-container *ngTemplateOutlet=\"docsLink; context: { link: 'https://r.2sxc.org/insights' }\"></ng-container>\r\n        <button mat-button (click)=\"openInsights()\">\r\n          <mat-icon>open_in_new</mat-icon>\r\n          <span>Open 2sxc Insights</span>\r\n        </button>\r\n      <!-- </div> -->\r\n      </mat-card-actions>\r\n      <div class=\"card-content-separator\"></div>\r\n      <h4>Activate Page Level Logging</h4>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with ?debug=true in the url.\r\n          It can only be activated for short periods of time.\r\n        </div>\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration=\"ngModel\" [disabled]=\"data.loading\">\r\n        </mat-form-field>\r\n        <ng-container *ngIf=\"duration.touched && duration.errors\">\r\n          <app-field-hint *ngIf=\"duration.errors.pattern\" [isError]=\"true\">\r\n            Only positive whole numbers\r\n          </app-field-hint>\r\n        </ng-container>\r\n        <div class=\"form-actions\">\r\n          <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!activateLogForm.valid || data.loading\">\r\n            Activate\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <!-- Warnings -->\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar>\r\n        <mat-icon>{{ data.warningIcon }}</mat-icon>\r\n      </div>\r\n      <mat-card-title>Warnings</mat-card-title>\r\n      <mat-card-subtitle>System and Code Warnings</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.warningInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">{{ info.value }}</span>\r\n          <ng-container *ngIf=\"info.link\">\r\n            <a class=\"info-row__link\" *ngIf=\"info.link.target === 'angular'\" [routerLink]=\"info.link.url\">{{\r\n              info.link.label\r\n              }}</a>\r\n            <a class=\"info-row__link\" *ngIf=\"info.link.target !== 'angular'\" [href]=\"info.link.url\"\r\n              [target]=\"info.link.target\">{{ info.link.label }}</a>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</ng-container>\r\n\r\n\r\n<ng-template #docsLink let-icon let-label let-link=\"link\">\r\n  <a mat-button href=\"{{link}}\" target=\"_blank\" [tippy]=\"'online documentation'\">\r\n    <mat-icon>{{ icon ?? \"menu_book\" }}</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </a>\r\n</ng-template>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { DialogSettings } from '../../app-administration/models';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { GoToRegistration } from '../sub-dialogs/registration/go-to-registration';\r\nimport { InfoTemplate, SystemInfoTemplateVars } from './system-info.models';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n})\r\nexport class SystemInfoComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @Input() dialogSettings: DialogSettings;\r\n\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  templateVars$: Observable<SystemInfoTemplateVars>;\r\n\r\n  private systemInfoSet$: BehaviorSubject<SystemInfoSet | undefined>;\r\n  private languages$: BehaviorSubject<SiteLanguage[] | undefined>;\r\n  private loading$: BehaviorSubject<boolean>;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private zoneService: ZoneService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n    private sxcInsightsService: SxcInsightsService,\r\n    private featuresService: FeaturesService,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.systemInfoSet$ = new BehaviorSubject<SystemInfoSet | undefined>(undefined);\r\n    this.languages$ = new BehaviorSubject<SiteLanguage[] | undefined>(undefined);\r\n    this.loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    this.buildTemplateVars();\r\n    this.getSystemInfo();\r\n    this.getLanguages();\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => {\r\n      this.buildTemplateVars();\r\n      this.getSystemInfo();\r\n      this.getLanguages();\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.systemInfoSet$.complete();\r\n    this.languages$.complete();\r\n    this.loading$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  openSiteSettings(): void {\r\n    const sitePrimaryApp = this.dialogSettings.Context.Site.PrimaryApp;\r\n    this.dialogService.openAppAdministration(sitePrimaryApp.ZoneId, sitePrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    const globalPrimaryApp = this.dialogSettings.Context.System.PrimaryApp;\r\n    this.dialogService.openAppAdministration(globalPrimaryApp.ZoneId, globalPrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.zoneService.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet$.next(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet$.next(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private getLanguages(): void {\r\n    this.zoneService.getLanguages().subscribe({\r\n      error: () => {\r\n        this.languages$.next(undefined);\r\n      },\r\n      next: (languages) => {\r\n        this.languages$.next(languages);\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const systemInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'CMS', value: `2sxc v.${systemInfoSet.System.EavVersion}` },\r\n          { label: 'Platform', value: `${systemInfoSet.System.Platform} v.${systemInfoSet.System.PlatformVersion}` },\r\n          { label: 'Zones', value: systemInfoSet.System.Zones.toString() },\r\n          { label: 'Fingerprint', value: systemInfoSet.System.Fingerprint },\r\n          {\r\n            label: 'Registered to',\r\n            value: systemInfoSet.License.Owner || '(unregistered)',\r\n            link: systemInfoSet.License.Owner\r\n              ? {\r\n                url: this.router.url + '/' + GoToRegistration.getUrl(),\r\n                label: 'manage',\r\n                target: 'angular',\r\n              }\r\n              : {\r\n                url: this.router.url + '/' + GoToRegistration.getUrl(),\r\n                label: 'register',\r\n                target: 'angular',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const siteInfos$ = combineLatest([this.systemInfoSet$, this.languages$]).pipe(\r\n      map(([systemInfoSet, languages]) => {\r\n        if (systemInfoSet == null || languages == null) { return; }\r\n        const allLanguages = languages.length;\r\n        const activeLanguages = languages.filter(l => l.IsEnabled).length;\r\n        const info: InfoTemplate[] = [\r\n          { label: 'Zone', value: systemInfoSet.Site.ZoneId.toString() },\r\n          { label: 'Site', value: systemInfoSet.Site.SiteId.toString() },\r\n          {\r\n            label: 'Languages',\r\n            value: `${activeLanguages}/${allLanguages}`,\r\n            link: {\r\n              url: 'languages',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n          {\r\n            label: 'Apps',\r\n            value: systemInfoSet.Site.Apps.toString(),\r\n            link: {\r\n              url: 'list',\r\n              label: 'manage',\r\n              target: 'angular',\r\n            },\r\n          },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const warningIcon$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        if (systemInfoSet.Messages.WarningsObsolete || systemInfoSet.Messages.WarningsOther) {\r\n          return 'warning';\r\n        }\r\n        return 'check';\r\n      }),\r\n    );\r\n    const warningInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          {\r\n            label: 'Warnings Obsolete',\r\n            value: systemInfoSet.Messages.WarningsObsolete.toString(),\r\n            link: !systemInfoSet.Messages.WarningsObsolete\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n          {\r\n            label: 'Warnings Other',\r\n            value: systemInfoSet.Messages.WarningsOther.toString(),\r\n            link: !systemInfoSet.Messages.WarningsOther\r\n              ? undefined\r\n              : {\r\n                url: window.$2sxc.http.apiUrl('sys/insights/logs'),\r\n                label: 'review',\r\n                target: '_blank',\r\n              },\r\n          },\r\n        ];\r\n        return info;\r\n      }),\r\n    );\r\n    const lsEnabled$ = this.featuresService.isEnabled$(FeatureNames.LightSpeed);\r\n    const cspEnabled$ = this.featuresService.isEnabled$(FeatureNames.ContentSecurityPolicy);\r\n    this.templateVars$ = combineLatest([systemInfos$, siteInfos$, this.loading$, warningIcon$, warningInfos$, lsEnabled$, cspEnabled$]).pipe(\r\n      map(([systemInfos, siteInfos, loading, warningIcon, warningInfos, lsEnabled, cspEnabled]) => {\r\n        const viewModel: SystemInfoTemplateVars = {\r\n          systemInfos,\r\n          siteInfos,\r\n          loading,\r\n          warningIcon,\r\n          warningInfos,\r\n          lsEnabled,\r\n          cspEnabled\r\n        };\r\n        console.log('2dm VM', viewModel);\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    <mat-icon *ngIf=\"app.IsGlobal\">foundation</mat-icon>\r\n    <mat-icon *ngIf=\"app.IsInherited\">holiday_village</mat-icon>\r\n  </div>\r\n  <div *ngIf=\"!lightspeedEnabled\" class=\"like-button disabled\" tippy=\"Lightspeed is disabled\" (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\">\r\n      bolt\r\n    </mat-icon>\r\n  </div>\r\n\r\n  <div *ngIf=\"lightspeedEnabled\" class=\"like-button {{ appHasLightSpeed ? '' : 'disabled'}}\" matRipple\r\n    [tippy]=\"appHasLightSpeed ? app.Lightspeed.Title : 'App not yet configured for LightSpeed'\"\r\n    (click)=\"openLightspeed()\">\r\n    <mat-icon *ngIf=\"appLightSpeedEnabled\" matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\">bolt</mat-icon>\r\n    <mat-icon *ngIf=\"!appLightSpeedEnabled\" matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\">bolt</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item (click)=\"flushCache()\">\r\n      <mat-icon>cached</mat-icon>\r\n      <span>Flush cache</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"deleteApp()\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss'],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n\r\n  public params: ICellRendererParams & AppsListActionsParams;\r\n  public lightspeedEnabled: boolean;\r\n  public appHasLightSpeed: boolean;\r\n  public appLightSpeedEnabled: boolean;\r\n\r\n  agInit(params: ICellRendererParams & AppsListActionsParams): void {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n    this.lightspeedEnabled = this.params.lightspeedEnabled();\r\n    this.appHasLightSpeed = this.app.Lightspeed?.Id != null; //.IsEnabled == true;\r\n    this.appLightSpeedEnabled = this.app.Lightspeed?.IsEnabled == true;\r\n  }\r\n\r\n//   appLightSpeedExits(): boolean {\r\n// console.log('2dm app ls check', this.app.Lightspeed);\r\n//     return this.app.Lightspeed?.IsEnabled == true;\r\n//   }\r\n\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openLightspeed(): void {\r\n    this.params.onOpenLightspeed(this.app);\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params.openLightspeedFeatureInfo();\r\n  }\r\n\r\n  flushCache(): void {\r\n    this.params.onFlush(this.app);\r\n  }\r\n\r\n  deleteApp(): void {\r\n    this.params.onDelete(this.app);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-show',\r\n  templateUrl: './apps-list-show.component.html',\r\n  styleUrls: ['./apps-list-show.component.scss'],\r\n})\r\nexport class AppsListShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <div class=\"like-button icon\" [tippy]=\"value ? 'Show this app to users' : 'Don\\'t show this app to users'\">\r\n    <mat-icon>{{ value ? 'visibility' : 'visibility_off' }}</mat-icon>\r\n  </div>\r\n</div>","import { GridOptions, ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, catchError, Observable, of, share, startWith, Subject, switchMap } from 'rxjs';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppsListActionsComponent } from './apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from './apps-list-actions/apps-list-actions.models';\r\nimport { AppsListShowComponent } from './apps-list-show/apps-list-show.component';\r\nimport { FeatureComponentBase } from '../../features/shared/base-feature.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AppAdminHelpers } from '../../app-administration/app-admin-helpers';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n})\r\nexport class AppsListComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  apps$: Observable<App[]>;\r\n  fabOpen$ = new BehaviorSubject(false);\r\n  gridOptions = this.buildGridOptions();\r\n  isAddFromFolderEnabled$: Observable<boolean>;\r\n  lightspeedEnabled$ = new BehaviorSubject<boolean>(false);\r\n\r\n  private refreshApps$ = new Subject<void>();\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n    private context: Context,\r\n    // Services for showing features in the menu\r\n    private featuresService: FeaturesService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.apps$ = this.refreshApps$.pipe(\r\n      startWith(undefined),\r\n      switchMap(() => this.appsListService.getAll().pipe(catchError(() => of(undefined)))),\r\n      share(),\r\n    );\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => { this.refreshApps$.next(); }));\r\n    this.isAddFromFolderEnabled$ = this.featuresService.isEnabled$(FeatureNames.AppSyncWithSiteFiles);\r\n    this.subscription.add(this.featuresService.isEnabled$(FeatureNames.LightSpeed).subscribe(this.lightspeedEnabled$));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.fabOpen$.complete();\r\n    this.refreshApps$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  openChange(open: boolean): void {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  browseCatalog(): void {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp(): void {\r\n    this.router.navigate(['create'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.router.navigate(['create-inherited'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  addFromFolder(): void {\r\n    this.router.navigate(['add-app-from-folder'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  importApp(files?: File[]): void {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild, state: dialogData });\r\n  }\r\n\r\n  private deleteApp(app: App): void {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) { return; }\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.appsListService.delete(app.Id).subscribe({\r\n        error: () => {\r\n          this.snackBar.open('Delete failed. Please check console for more information', undefined, { duration: 3000 });\r\n          this.refreshApps$.next();\r\n        },\r\n        next: () => {\r\n          this.snackBar.open('Deleted', undefined, { duration: 2000 });\r\n          this.refreshApps$.next();\r\n        },\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App): void {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open('Flushing cache...');\r\n    this.appsListService.flushCache(app.Id).subscribe({\r\n      error: () => {\r\n        this.snackBar.open('Cache flush failed. Please check console for more information', undefined, { duration: 3000 });\r\n      },\r\n      next: () => {\r\n        this.snackBar.open('Cache flushed', undefined, { duration: 2000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  private openLightspeed(app: App): void {\r\n    const formUrl = convertFormToUrl(AppAdminHelpers.getLightSpeedEditParams(app.Id));\r\n    this.router.navigate([`${this.context.zoneId}/${app.Id}/edit/${formUrl}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private openApp(app: App): void {\r\n    this.router.navigate([app.Id.toString()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Id;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<App> = {\r\n              tooltipGetter: (app) => `ID: ${app.Id}\\nGUID: ${app.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Show',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'icons no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return !app.IsHidden;\r\n          },\r\n          cellRenderer: AppsListShowComponent,\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'apps-list-primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Name;\r\n          },\r\n          onCellClicked: (params) => {\r\n            const app: App = params.data;\r\n            this.openApp(app);\r\n          },\r\n          cellRenderer: (params: ICellRendererParams) => {\r\n            const app: App = params.data;\r\n            return `\r\n            <div class=\"container\">\r\n              ${app.Thumbnail\r\n                ? `<img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>`\r\n                : `<div class=\"image logo\"><span class=\"material-icons-outlined\">star_border</span></div>`\r\n              }\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>\r\n            `;\r\n          },\r\n        },\r\n        {\r\n          field: 'Folder',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Folder;\r\n          },\r\n        },\r\n        {\r\n          field: 'Version',\r\n          width: 78,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Version;\r\n          },\r\n        },\r\n        {\r\n          field: 'Items',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'number-cell no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const app: App = params.data;\r\n            return app.Items;\r\n          },\r\n        },\r\n        {\r\n          width: 122,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: AppsListActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AppsListActionsParams = {\r\n              onDelete: (app) => this.deleteApp(app),\r\n              onFlush: (app) => this.flushApp(app),\r\n              onOpenLightspeed: (app) => this.openLightspeed(app),\r\n              lightspeedEnabled: () => this.lightspeedEnabled$.value,\r\n              openLightspeedFeatureInfo: () => this.openLightSpeed(),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n\r\n  openLightSpeed() {\r\n    FeatureComponentBase.openDialog(this.dialog, FeatureNames.LightSpeed, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps$ | async\" [gridOptions]=\"gridOptions\" appDragAndDrop\r\n    [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\" [ngClass]=\"{ 'fab-opened': (fabOpen$ | async) }\"\r\n    (openChange)=\"openChange($event)\">\r\n    <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">{{ (fabOpen$ | async) ? 'close' : 'add' }}</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n        <mat-icon>holiday_village</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Add from folder\" (click)=\"addFromFolder()\">\r\n        <mat-icon [matBadgeHidden]=\"isAddFromFolderEnabled$ | async\" matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\">\r\n          add\r\n        </mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Import app\" (click)=\"importApp()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create app\" (click)=\"createApp()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages-status',\r\n  templateUrl: './site-languages-status.component.html',\r\n  styleUrls: ['./site-languages-status.component.scss'],\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private params: ICellRendererParams & SiteLanguagesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & SiteLanguagesStatusParams): void {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage(event: MatSlideToggleChange): void {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onToggleLanguage(language, event.checked);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage($event)\"></mat-slide-toggle>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { catchError, Observable, of, share, startWith, Subject, switchMap } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { SiteLanguagesStatusComponent } from './site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status/site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages',\r\n  templateUrl: './site-languages.component.html',\r\n  styleUrls: ['./site-languages.component.scss'],\r\n})\r\nexport class SiteLanguagesComponent implements OnInit, OnDestroy {\r\n  languages$: Observable<SiteLanguage[]>;\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private refreshLanguages$ = new Subject<void>();\r\n\r\n  constructor(private zoneService: ZoneService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.languages$ = this.refreshLanguages$.pipe(\r\n      startWith(undefined),\r\n      switchMap(() => this.zoneService.getLanguages().pipe(catchError(() => of(undefined)))),\r\n      share(),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.refreshLanguages$.complete();\r\n  }\r\n\r\n  private toggleLanguage(language: SiteLanguage, enable: boolean): void {\r\n    this.zoneService.toggleLanguage(language.Code, enable).subscribe({\r\n      error: () => {\r\n        this.refreshLanguages$.next();\r\n      },\r\n      next: () => {\r\n        this.refreshLanguages$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.Code;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<SiteLanguage> = {\r\n              tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight no-outline'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.Culture;\r\n          },\r\n          onCellClicked: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            this.toggleLanguage(language, !language.IsEnabled);\r\n          },\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          valueGetter: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            return language.IsEnabled;\r\n          },\r\n          cellRenderer: SiteLanguagesStatusComponent,\r\n          cellRendererParams: (() => {\r\n            const params: SiteLanguagesStatusParams = {\r\n              onToggleLanguage: (language, enable) => this.toggleLanguage(language, enable),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages$ | async\" [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n</div>\r\n","<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">\r\n    <div>{{ dialogData.feature.Name }}</div>\r\n  </div>\r\n</div>\r\n\r\n<p class=\"dialog-description\" [innerHtml]=\"dialogData.feature.Description | safeHtml\"></p>\r\n\r\n<div class=\"info-box\">\r\n  <div class=\"info-row\" *ngIf=\"dialogData.feature.NameId as id\">\r\n    <div class=\"info-row__label\">ID</div>\r\n    <div class=\"info-row__value click\">\r\n      <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"info-row\" *ngIf=\"dialogData.feature.Guid as guid\">\r\n    <div class=\"info-row__label\">GUID</div>\r\n    <div class=\"info-row__value click\">\r\n      <span [tippy]=\"guid\" (click)=\"copyToClipboard(guid)\">{{ guid }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"info-row\"\r\n    *ngIf=\"(dialogData.feature.Security.Impact + ': ' + dialogData.feature.Security.Message) as security\">\r\n    <div class=\"info-row__label\">Security Rating</div>\r\n    <div class=\"info-row__value\">\r\n      <span>{{ security }}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"dialog-component-actions\">\r\n  <button *ngIf=\"dialogData.feature.Link as link\" mat-raised-button class=\"dialog-component-button\" color=\"accent\"\r\n    (click)=\"findOutMore(link)\">\r\n    <mat-icon>open_in_new</mat-icon>\r\n    Find out more\r\n  </button>\r\n  <button mat-raised-button class=\"dialog-component-button\" (click)=\"closeDialog()\">\r\n    Close\r\n  </button>\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-feature-details-dialog',\r\n  templateUrl: './feature-details-dialog.component.html',\r\n  styleUrls: ['./feature-details-dialog.component.scss']\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: FeatureDetailsDialogData,\r\n    private dialogRef: MatDialogRef<FeatureDetailsDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  styleUrls: ['./features-list-enabled-reason.component.scss'],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.EnabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { FeaturesStatusParams } from './features-status.models';\r\n\r\n@Component({\r\n  selector: 'app-features-status',\r\n  templateUrl: './features-status.component.html',\r\n  styleUrls: ['./features-status.component.scss'],\r\n})\r\nexport class FeaturesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean | null;\r\n  disabled: boolean;\r\n\r\n  private params: ICellRendererParams & FeaturesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & FeaturesStatusParams): void {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n    this.disabled = this.params.isDisabled();\r\n  }\r\n\r\n  refresh(params: ICellRendererParams & FeaturesStatusParams): boolean {\r\n    this.disabled = this.params.isDisabled();\r\n    return true;\r\n  }\r\n\r\n  toggle(): void {\r\n    const feature: Feature = this.params.data;\r\n    let nextValue: boolean;\r\n    switch (this.value) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.value = nextValue;\r\n    this.params.onToggle(feature, nextValue);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" [disabled]=\"disabled\" (change)=\"toggle()\" [ngClass]=\"{\r\n  'toggle-false': value === false,\r\n  'toggle-null': value === null\r\n  }\">\r\n</mat-slide-toggle>\r\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({ selector: '[appAgGridHeight]' })\r\nexport class AgGridHeightDirective implements OnChanges {\r\n  @Input() itemsCount = 0;\r\n  @Input() headerHeight = 32;\r\n  @Input() rowHeight = 48;\r\n  @Input() maxRows = 100;\r\n\r\n  /** Fixes a bug where scrollbar appears when then is no overflow */\r\n  private extraHeight = 2;\r\n\r\n  private element: HTMLElement;\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.itemsCount != null) {\r\n      const rows = this.itemsCount === 0 ? 2 : this.itemsCount > this.maxRows ? this.maxRows : this.itemsCount;\r\n      this.element.style.height = `${this.headerHeight + rows * this.rowHeight + this.extraHeight}px`;\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({ name: 'licensesOrder' })\r\nexport class LicensesOrderPipe implements PipeTransform {\r\n\r\n  transform(licenses: License[]): any {\r\n    if (!Array.isArray(licenses)) { return licenses; }\r\n\r\n    const sorted = [...licenses].sort((a: License, b: License) => {\r\n      if (a.Priority < b.Priority) {\r\n        return -1;\r\n      } else if (a.Priority > b.Priority) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return sorted;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({ name: 'activeFeaturesCount' })\r\nexport class ActiveFeaturesCountPipe implements PipeTransform {\r\n\r\n  transform(license: License) {\r\n    return `${license.Features.filter(f => f.Enabled).length}/${license.Features.length}`;\r\n  }\r\n}\r\n","<mat-accordion multi *ngIf=\"licenses$ | async as licenses\">\r\n  <mat-expansion-panel #panel *ngFor=\"let license of licenses | licensesOrder; trackBy: trackLicenses\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <mat-icon class=\"panel-icon\" [tippy]=\"license.IsEnabled ? 'License is active' : 'License is not active'\">{{\r\n          license.IsEnabled ? 'check_circle_outline' : 'cancel' }}</mat-icon>\r\n        <div>\r\n          <div class=\"panel-title\">\r\n            <span>{{ license.Name }}</span>\r\n            <span class=\"active-features-count\">{{ license | activeFeaturesCount }}</span>\r\n          </div>\r\n          <div class=\"panel-description\" [ngClass]=\"{ 'expanded': panel.expanded }\">\r\n            {{ license.Description }}\r\n          </div>\r\n        </div>\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n\r\n    <ng-container *ngIf=\"panel.expanded\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"license.Features\" [gridOptions]=\"gridOptions\"\r\n        appAgGridHeight [itemsCount]=\"license.Features?.length\">\r\n      </ag-grid-angular>\r\n    </ng-container>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n\r\n<div class=\"spacer\"></div>\r\n\r\n<div class=\"actions-box\">\r\n  <button mat-button tippy=\"Registration\" (click)=\"openRegistration()\">\r\n    <mat-icon>app_registration</mat-icon>\r\n    <span>Registration</span>\r\n  </button>\r\n</div>","import { AgGridAngular } from '@ag-grid-community/angular';\r\nimport { GridOptions } from '@ag-grid-community/core';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\n// tslint:disable-next-line:max-line-length\r\nimport { BehaviorSubject, catchError, filter, forkJoin, map, Observable, of, pairwise, share, startWith, Subject, Subscription, switchMap, tap, timer } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { Feature } from '../../features/models/feature.model';\r\nimport { License } from '../models/license.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { GoToRegistration } from '../sub-dialogs/registration/go-to-registration';\r\nimport { FeatureDetailsDialogComponent } from './feature-details-dialog/feature-details-dialog.component';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog/feature-details-dialog.models';\r\nimport { FeaturesListEnabledReasonComponent } from './features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from './features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesStatusComponent } from './features-status/features-status.component';\r\nimport { FeaturesStatusParams } from './features-status/features-status.models';\r\n\r\n@Component({\r\n  selector: 'app-license-info',\r\n  templateUrl: './license-info.component.html',\r\n  styleUrls: ['./license-info.component.scss'],\r\n})\r\nexport class LicenseInfoComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(AgGridAngular) private gridRef?: AgGridAngular;\r\n\r\n  licenses$: Observable<License[]>;\r\n  disabled$ = new BehaviorSubject(false);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private refreshLicenses$ = new Subject<void>();\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private featuresConfigService: FeaturesConfigService,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.licenses$ = this.refreshLicenses$.pipe(\r\n      startWith(undefined),\r\n      switchMap(() => this.featuresConfigService.getLicenses().pipe(catchError(() => of(undefined)))),\r\n      tap(() => this.disabled$.next(false)),\r\n      share(),\r\n    );\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => { this.refreshLicenses$.next(); }));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.disabled$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  trackLicenses(index: number, license: License): string {\r\n    return license.Guid;\r\n  }\r\n\r\n  openRegistration(): void {\r\n    this.router.navigate([GoToRegistration.getUrl()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private showFeatureDetails(feature: Feature): void {\r\n    const data: FeatureDetailsDialogData = {\r\n      feature,\r\n    };\r\n    this.dialog.open(FeatureDetailsDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '600px',\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private toggleFeature(feature: Feature, enabled: boolean): void {\r\n    this.disabled$.next(true);\r\n    const state: FeatureState = {\r\n      FeatureGuid: feature.Guid,\r\n      Enabled: enabled,\r\n    };\r\n    forkJoin([this.featuresConfigService.saveFeatures([state]), timer(100)]).subscribe({\r\n      error: () => {\r\n        this.refreshLicenses$.next();\r\n      },\r\n      next: () => {\r\n        this.refreshLicenses$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 200,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const feature: Feature = params.data;\r\n            return feature.NameId;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Feature> = {\r\n              tooltipGetter: (feature: Feature) => feature.NameId,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 3,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          onCellClicked: (params) => {\r\n            const feature: Feature = params.data;\r\n            this.showFeatureDetails(feature);\r\n          },\r\n          valueGetter: (params) => {\r\n            const feature: Feature = params.data;\r\n            return feature.Name;\r\n          },\r\n        },\r\n        {\r\n          field: 'Enabled',\r\n          width: 80,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: FeaturesListEnabledComponent,\r\n          valueGetter: (params) => {\r\n            const feature: Feature = params.data;\r\n            return feature.Enabled;\r\n          },\r\n        },\r\n        {\r\n          field: 'EnabledReason',\r\n          headerName: 'Reason',\r\n          flex: 1,\r\n          minWidth: 150,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          cellRenderer: FeaturesListEnabledReasonComponent,\r\n          valueGetter: (params) => {\r\n            const feature: Feature = params.data;\r\n            return feature.EnabledReason;\r\n          },\r\n        },\r\n        {\r\n          field: 'Expires',\r\n          width: 100,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const feature: Feature = params.data;\r\n            const expires = feature.Expires?.split('T')[0];\r\n            return expires?.startsWith('9999') ? 'never' : expires;\r\n          },\r\n        },\r\n        {\r\n          field: 'Status',\r\n          headerName: '',\r\n          width: 62,\r\n          cellClass: 'secondary-action no-outline no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: FeaturesStatusComponent,\r\n          valueGetter: (params) => {\r\n            const feature: Feature = params.data;\r\n            return feature.EnabledInConfiguration;\r\n          },\r\n          cellRendererParams: (() => {\r\n            const params: FeaturesStatusParams = {\r\n              isDisabled: () => this.disabled$.value,\r\n              onToggle: (feature, enabled) => this.toggleFeature(feature, enabled),\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\" appToggleDebug>\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Manage Zone {{ zoneId }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n  <mat-tab-group class=\"mat-tab-group-max-height\" dynamicHeight color=\"accent\"\r\n    *ngIf=\"dialogSettings$ | async as dialogSettings\" (selectedTabChange)=\"changeTab($event)\"\r\n    [selectedIndex]=\"tabIndex$ | async\">\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Info\">\r\n        <mat-icon>settings</mat-icon>\r\n        <span>System</span>\r\n      </div>\r\n      <app-system-info *matTabContent [dialogSettings]=\"dialogSettings\"></app-system-info>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Apps\">\r\n        <mat-icon>star_border</mat-icon>\r\n        <span>Apps</span>\r\n      </div>\r\n      <app-apps-list *matTabContent></app-apps-list>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Languages\">\r\n        <mat-icon>translate</mat-icon>\r\n        <span>Languages</span>\r\n      </div>\r\n      <app-site-languages *matTabContent></app-site-languages>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Extensions and Features\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Extensions / Features</span>\r\n      </div>\r\n      <app-license-info *matTabContent></app-license-info>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, filter, map, startWith } from 'rxjs';\r\nimport { DialogSettings } from '../../app-administration/models';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { BaseComponent } from '../../shared/components/base-component/base.component';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n})\r\nexport class AppsManagementNavComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  zoneId = this.context.zoneId;\r\n  dialogSettings$ = new BehaviorSubject<DialogSettings>(undefined);\r\n\r\n  private tabs = ['system', 'list', 'languages', 'license']; // tabs order has to match template\r\n  tabIndex$ = this.router.events.pipe(\r\n    filter(event => event instanceof NavigationEnd),\r\n    map(() => this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n    filter(tabIndex => tabIndex >= 0),\r\n    startWith(this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n  );\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private context: Context,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n  ) {\r\n    super(router, route);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.fetchDialogSettings();\r\n    this.subscription.add(this.refreshOnChildClosedDeep().subscribe(() => { this.fetchDialogSettings(); }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogSettings$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n\r\n  private fetchDialogSettings() {\r\n    this.appDialogConfigService.getShared$(0)/*.getDialogSettings(0)*/.subscribe(dialogSettings => {\r\n      this.dialogSettings$.next(dialogSettings);\r\n    });\r\n  }\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\nimport { BaseSubsinkComponent } from '../base-subsink-component/base-subsink.component';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent extends BaseSubsinkComponent implements OnDestroy {\r\n  \r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  protected refreshOnChildClosedDeep() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n\r\n  protected refreshOnChildClosedShallow() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_eav-ui_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.8c65c5a40fdce77c.js"}