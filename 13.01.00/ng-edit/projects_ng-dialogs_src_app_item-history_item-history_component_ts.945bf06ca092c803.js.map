{"version":3,"mappings":"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","names":["version","versions","compareWith","currentDataTypes","JSON","parse","Json","Entity","Attributes","previousItem","i","liveVersion","e","VersionNumber","r","findLive","find","v","previousDataTypes","allAttributes","Object","entries","forEach","dataType","m","keys","a","name","attributeName","push","map","currentValues","attribute","_a","previousValues","g","_b","change","calcChangeType","values","calcHistoryValues","allLangKeys","includes","lang","currentValue","t","langKey","previousValue","o","value","oldValue","sortObjectKeys","arguments","sortKeysAlphabetically","stringify","obj","sort","reduce","acc","key","i0","ctx_r7","ctx_r26","ctx_r30","ctx_r34","ctx_r37","ctx_r40","ItemHistoryComponent","dialogRef","route","versionsService","snackBar","this","parseInt","snapshot","paramMap","get","BehaviorSubject","pageSizeOptions","combineLatest","versions$","page$","pageSize$","compareWith$","pipe","page","pageSize","historyItems","filteredVersions","historyItem","changeSetId","ChangeSetId","attributes","calcHistoryAttributes","historyId","HistoryId","timeStamp","TimeStamp","user","User","versionNumber","isLastVersion","some","calcHistoryItems","slice","getHistoryItems","p","historyItems$","length","c","fetchVersions","itemId","subscribe","next","complete","close","newCompareWith","expand","expandedPanels","expandedAttributes","event","newPage","pageIndex","newPageSize","changeId","open","restore","duration","refreshEdit","selectors"],"sources":["./projects/ng-dialogs/src/app/item-history/item-history.helpers.ts","./projects/ng-dialogs/src/app/item-history/item-history.component.html","./projects/ng-dialogs/src/app/item-history/item-history.component.ts"],"sourcesContent":["import { CompareWith } from './models/compare-with.model';\r\nimport { HistoryAttribute, HistoryAttributeValue, HistoryItem } from './models/history-item.model';\r\nimport { Version, VersionEntityAttributeValues, VersionJsonParsed } from './models/version.model';\r\n\r\nexport function getHistoryItems(versions: Version[], page: number, pageSize: number, compareWith: CompareWith) {\r\n  if (versions == null || page == null || pageSize == null || compareWith == null) { return null; }\r\n  const filtered = versions.slice((page - 1) * pageSize, page * pageSize);\r\n\r\n  const historyItems = calcHistoryItems(filtered, versions, compareWith);\r\n  return historyItems;\r\n}\r\n\r\nfunction calcHistoryItems(filteredVersions: Version[], versions: Version[], compareWith: CompareWith) {\r\n  return filteredVersions.map(version => {\r\n    const historyItem: HistoryItem = {\r\n      changeSetId: version.ChangeSetId,\r\n      attributes: calcHistoryAttributes(version, versions, compareWith),\r\n      historyId: version.HistoryId,\r\n      timeStamp: version.TimeStamp,\r\n      user: version.User,\r\n      versionNumber: version.VersionNumber,\r\n      isLastVersion: !versions.some(v => v.VersionNumber === version.VersionNumber + 1),\r\n    };\r\n    return historyItem;\r\n  });\r\n}\r\n\r\nfunction calcHistoryAttributes(version: Version, versions: Version[], compareWith: CompareWith) {\r\n  const currentDataTypes = (JSON.parse(version.Json) as VersionJsonParsed).Entity.Attributes;\r\n  const previousItem = compareWith === 'live' ? findLive(versions) : versions.find(v => v.VersionNumber === version.VersionNumber - 1);\r\n  const previousDataTypes = previousItem ? (JSON.parse(previousItem.Json) as VersionJsonParsed).Entity.Attributes : null;\r\n\r\n  const allAttributes: { name: string, dataType: string }[] = [];\r\n  if (currentDataTypes != null) {\r\n    Object.entries(currentDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null) { return; }\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n  if (previousDataTypes != null) {\r\n    Object.entries(previousDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null) { return; }\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n\r\n  const historyAttributes = allAttributes.map(attribute => {\r\n    const currentValues = currentDataTypes?.[attribute.dataType]?.[attribute.name];\r\n    const previousValues = previousDataTypes?.[attribute.dataType]?.[attribute.name];\r\n\r\n    const historyAttribute: HistoryAttribute = {\r\n      name: attribute.name,\r\n      dataType: attribute.dataType,\r\n      change: calcChangeType(currentValues, previousValues, true),\r\n      values: calcHistoryValues(currentValues, previousValues),\r\n    };\r\n    return historyAttribute;\r\n  });\r\n\r\n  return historyAttributes;\r\n}\r\n\r\nfunction findLive(versions: Version[]) {\r\n  let liveVersion = versions[0];\r\n  for (const version of versions) {\r\n    if (version.VersionNumber <= liveVersion.VersionNumber) { continue; }\r\n    liveVersion = version;\r\n  }\r\n  return liveVersion;\r\n}\r\n\r\nfunction calcHistoryValues(values: VersionEntityAttributeValues, previousValues: VersionEntityAttributeValues) {\r\n  const allLangKeys: string[] = [];\r\n  if (values != null) {\r\n    Object.keys(values).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) { return; }\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n  if (previousValues != null) {\r\n    Object.keys(previousValues).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) { return; }\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n\r\n  const historyValues = allLangKeys.map(langKey => {\r\n    const currentValue = values?.[langKey];\r\n    const previousValue = previousValues?.[langKey];\r\n\r\n    const historyValue: HistoryAttributeValue = {\r\n      langKey,\r\n      value: currentValue,\r\n      oldValue: previousValue,\r\n      change: calcChangeType(currentValue, previousValue),\r\n    };\r\n    return historyValue;\r\n  });\r\n\r\n  return historyValues;\r\n}\r\n\r\nfunction calcChangeType(currentValue: any, previousValue: any, sortObjectKeys = false) {\r\n  let change: 'new' | 'deleted' | 'changed' | 'none';\r\n\r\n  if (sortObjectKeys) {\r\n    if (typeof currentValue === 'object') {\r\n      currentValue = sortKeysAlphabetically(currentValue);\r\n    }\r\n    if (typeof previousValue === 'object') {\r\n      previousValue = sortKeysAlphabetically(previousValue);\r\n    }\r\n  }\r\n\r\n  if (currentValue != null && previousValue != null) {\r\n    if (JSON.stringify(currentValue) !== JSON.stringify(previousValue)) {\r\n      change = 'changed';\r\n    } else {\r\n      change = 'none';\r\n    }\r\n  } else if (currentValue != null) {\r\n    change = 'new';\r\n  } else {\r\n    change = 'deleted';\r\n  }\r\n\r\n  return change;\r\n}\r\n\r\nfunction sortKeysAlphabetically(obj: Record<string, any>): Record<string, any> {\r\n  if (typeof obj !== 'object') { return obj; }\r\n\r\n  return Object.keys(obj).sort().reduce((acc, key) => ({ ...acc, [key]: obj[key] }), {});\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Item History</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"dialog-description\">Check version history for this item and restore the version you need.</p>\r\n\r\n  <div *ngIf=\"data.historyItems?.length > 0\" class=\"compare-box\">\r\n    <mat-form-field appearance=\"standard\" color=\"accent\" class=\"compare-box__dropdown\">\r\n      <mat-select [value]=\"data.compareWith\" name=\"Scope\" (selectionChange)=\"compareChange($event.value)\">\r\n        <mat-option value=\"previous\">Compare with: Previous</mat-option>\r\n        <mat-option value=\"live\">Compare with: Live</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"dialog-component-content fancy-scrollbar-light\">\r\n    <div *ngIf=\"data.historyItems === null\">Loading...</div>\r\n    <div *ngIf=\"data.historyItems?.length === 0\">No previous versions of this item found</div>\r\n\r\n    <mat-accordion multi *ngIf=\"data.historyItems?.length > 0\" class=\"history-tables\">\r\n      <mat-expansion-panel *ngFor=\"let historyItem of data.historyItems\"\r\n        [expanded]=\"expandedPanels[historyItem.versionNumber]\"\r\n        (expandedChange)=\"panelExpandedChange($event, historyItem.versionNumber)\">\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>Version {{ historyItem.versionNumber }}</mat-panel-title>\r\n          <mat-panel-description>{{ historyItem.timeStamp | date:'yyyy-MM-dd hh:mm' }}</mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n\r\n        <ng-container *ngIf=\"expandedPanels[historyItem.versionNumber]\">\r\n          <div class=\"table-row\" *ngFor=\"let attribute of historyItem.attributes\">\r\n            <div class=\"table-row__main row-main\"\r\n              (click)=\"attributeExpandedToggle(historyItem.versionNumber, attribute.name)\">\r\n              <div class=\"row-main__label history-{{ attribute.change }}\">\r\n                {{ attribute.name }}\r\n              </div>\r\n              <div class=\"row-main__value history-{{ attribute.change }}\">\r\n                <ng-container *ngIf=\"!expandedAttributes[historyItem.versionNumber + attribute.name]\">\r\n                  {{ attribute.values[0]?.value }}\r\n                </ng-container>\r\n              </div>\r\n              <div class=\"row-main__type\">\r\n                <i>[{{ attribute.dataType }}]</i>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"table-row__details\" *ngIf=\"expandedAttributes[historyItem.versionNumber + attribute.name]\">\r\n              <div class=\"detail-row\" *ngFor=\"let value of attribute.values\">\r\n                <div class=\"detail-row__label history-{{ value.change }}\">{{ value.langKey }}:</div>\r\n                <div class=\"detail-row__value\">\r\n                  <div class=\"history-{{ value.change }}\" *ngIf=\"value.change !== 'changed'\">\r\n                    {{ value.change === 'deleted' ? value.oldValue : value.value }}\r\n                  </div>\r\n                  <ng-container *ngIf=\"value.change === 'changed'\">\r\n                    <div class=\"history-new\">{{ value.value }}</div>\r\n                    <div class=\"history-deleted history-deleted__value\">{{ value.oldValue }}</div>\r\n                  </ng-container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row-actions\">\r\n            <button mat-raised-button color=\"accent\" *ngIf=\"!historyItem.isLastVersion\"\r\n              (click)=\"restore(historyItem.changeSetId)\">\r\n              Restore\r\n            </button>\r\n          </div>\r\n        </ng-container>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </div>\r\n\r\n  <mat-paginator color=\"accent\" showFirstLastButtons=\"true\" [length]=\"data.length\" [pageSize]=\"data.pageSize\"\r\n    [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" *ngIf=\"data.historyItems?.length > 0\">\r\n  </mat-paginator>\r\n</ng-container>\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { getHistoryItems } from './item-history.helpers';\r\nimport { CompareWith } from './models/compare-with.model';\r\nimport { ItemHistoryResult } from './models/item-history-result.model';\r\nimport { Version } from './models/version.model';\r\nimport { VersionsService } from './services/versions.service';\r\n\r\n@Component({\r\n  selector: 'app-item-history',\r\n  templateUrl: './item-history.component.html',\r\n  styleUrls: ['./item-history.component.scss'],\r\n})\r\nexport class ItemHistoryComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  pageSizeOptions = [10, 20, 50];\r\n  expandedPanels: Record<string, boolean> = {};\r\n  expandedAttributes: Record<string, boolean> = {};\r\n\r\n  private itemId = parseInt(this.route.snapshot.paramMap.get('itemId'), 10);\r\n  private versions$ = new BehaviorSubject<Version[]>(null);\r\n  private page$ = new BehaviorSubject(1);\r\n  private pageSize$ = new BehaviorSubject(this.pageSizeOptions[0]);\r\n  private compareWith$ = new BehaviorSubject<CompareWith>('live');\r\n  private historyItems$ = combineLatest([this.versions$, this.page$, this.pageSize$, this.compareWith$]).pipe(\r\n    map(([versions, page, pageSize, compareWith]) => getHistoryItems(versions, page, pageSize, compareWith)),\r\n  );\r\n  templateVars$ = combineLatest([this.versions$, this.historyItems$, this.pageSize$, this.compareWith$]).pipe(\r\n    map(([versions, historyItems, pageSize, compareWith]) => ({\r\n      length: versions?.length,\r\n      historyItems,\r\n      pageSize,\r\n      compareWith,\r\n    })),\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ItemHistoryComponent>,\r\n    private route: ActivatedRoute,\r\n    private versionsService: VersionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.versionsService.fetchVersions(this.itemId).subscribe(versions => {\r\n      this.versions$.next(versions);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.versions$.complete();\r\n    this.page$.complete();\r\n    this.pageSize$.complete();\r\n    this.compareWith$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  compareChange(newCompareWith: CompareWith) {\r\n    this.compareWith$.next(newCompareWith);\r\n  }\r\n\r\n  panelExpandedChange(expand: boolean, versionNumber: number) {\r\n    this.expandedPanels[versionNumber] = expand;\r\n  }\r\n\r\n  attributeExpandedToggle(versionNumber: number, name: string) {\r\n    this.expandedAttributes[versionNumber + name] = !this.expandedAttributes[versionNumber + name];\r\n  }\r\n\r\n  pageChange(event: PageEvent) {\r\n    const newPage = event.pageIndex + 1;\r\n    if (newPage !== this.page$.value) {\r\n      this.expandedPanels = {};\r\n      this.expandedAttributes = {};\r\n      this.page$.next(newPage);\r\n    }\r\n    const newPageSize = event.pageSize;\r\n    if (newPageSize !== this.pageSize$.value) {\r\n      this.pageSize$.next(newPageSize);\r\n    }\r\n  }\r\n\r\n  restore(changeId: number) {\r\n    this.snackBar.open('Restoring previous version...');\r\n    this.versionsService.restore(this.itemId, changeId).subscribe(res => {\r\n      this.snackBar.open('Previous version restored. Will reload edit dialog', null, { duration: 3000 });\r\n      const result: ItemHistoryResult = {\r\n        refreshEdit: true,\r\n      };\r\n      this.dialogRef.close(result);\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_ng-dialogs_src_app_item-history_item-history_component_ts.945bf06ca092c803.js"}