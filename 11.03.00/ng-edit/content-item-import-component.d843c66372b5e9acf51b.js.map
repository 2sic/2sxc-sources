{"version":3,"sources":["./src/app/content-items/ag-grid-components/content-item-import/content-item-import.component.html","./src/app/content-items/ag-grid-components/content-item-import/content-item-import.component.ts"],"names":["dialogRef","contentItemsService","viewStates","Default","Waiting","Imported","viewState","this","ngOnInit","importContentItem","importItem","importFile","subscribe","next","res","error","fileChange","event","target","files","closeDialog","close","ContentItemImportComponent"],"mappings":"wRAQQ,eAA0B,sBAAW,Q,yBACrC,eAAyB,QAAqB,Q,mBAArB,iC,qCAJ/B,cACE,cACE,mBAAyD,gDAAS,WAChE,uBACA,uBACF,OACA,oBAA8B,kEAA9B,OACF,OAEA,gBACE,mBAA0B,gEAAwB,iBAAM,OACxD,qBAAkE,sEAA8B,kBAAM,OACxG,OACF,O,qBAVY,mCACA,kCAOiC,wC,sBAG7C,cACE,yBACA,gBACE,oBAAmC,iBAAM,OACzC,oBAAkD,iBAAM,OAC1D,OACF,Q,qCACA,cACE,YAAG,4BAAiB,OACpB,gBACE,oBAAyC,gEAAwB,gBAAK,OACxE,OACF,QC1BF,iBAcE,WAAoBA,EAA6DC,GAA7D,KAAAD,YAA6D,KAAAC,sBARzE,KAAAC,WAAa,CACnBC,QAAS,EACTC,QAAS,EACTC,SAAU,GAEZ,KAAAC,UAAYC,KAAKL,WAAWC,Q,OAK5B,YAAAK,SAAA,aAGM,YAAAC,kBAAN,W,yHAEG,OADDF,KAAKD,UAAYC,KAAKL,WAAWE,QAChC,GAAMG,KAAKN,oBAAoBS,WAAWH,KAAKI,a,cAA/C,SAA4DC,UAAU,CACrEC,KAAM,SAAAC,GACJ,EAAKR,UAAY,EAAKJ,WAAWG,UAEnCU,MAAO,WACL,EAAKT,UAAY,EAAKJ,WAAWC,W,YAKvC,YAAAa,WAAA,SAAWC,GACTV,KAAKI,WAAcM,EAAMC,OAA4BC,MAAM,IAG7D,YAAAC,YAAA,WACEb,KAAKP,UAAUqB,S,sCA/BNC,GAA0B,sB,uBAA1BA,EAA0B,0nBDVvC,gBACE,gBAA8B,oCAAyB,OACzD,OAEA,gBACE,uBAcA,sBAOA,sBAMF,Q,MA5BK,qCACE,+BAcA,+BAOA,iC,yDCrBP","file":"content-item-import-component.d843c66372b5e9acf51b.js","sourcesContent":["<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">Import a single JSON Item</div>\r\n</div>\r\n\r\n<div [ngSwitch]=\"viewState\">\r\n  <div *ngSwitchCase=\"1\">\r\n    <div>\r\n      <button mat-raised-button matTooltip=\"Open file browser\" (click)=\"fileInput.click()\">\r\n        <span *ngIf=\"!importFile\">Select file</span>\r\n        <span *ngIf=\"importFile\">{{ importFile.name }}</span>\r\n      </button>\r\n      <input #fileInput type=\"file\" (change)=\"fileChange($event)\" class=\"hide\" />\r\n    </div>\r\n\r\n    <div class=\"dialog-actions-box\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" [disabled]=\"!importFile\" (click)=\"importContentItem()\">Import</button>\r\n    </div>\r\n  </div>\r\n  <div *ngSwitchCase=\"2\">\r\n    <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n    <div class=\"dialog-actions-box\">\r\n      <button mat-raised-button disabled>Cancel</button>\r\n      <button mat-raised-button color=\"accent\" disabled>Import</button>\r\n    </div>\r\n  </div>\r\n  <div *ngSwitchCase=\"3\">\r\n    <p>Import completed!</p>\r\n    <div class=\"dialog-actions-box\">\r\n      <button mat-raised-button color=\"accent\" (click)=\"closeDialog()\">Close</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { ContentItemsService } from '../../services/content-items.service';\r\n\r\n@Component({\r\n  selector: 'app-content-item-import',\r\n  templateUrl: './content-item-import.component.html',\r\n  styleUrls: ['./content-item-import.component.scss']\r\n})\r\nexport class ContentItemImportComponent implements OnInit {\r\n  private viewStates = {\r\n    Default: 1,\r\n    Waiting: 2,\r\n    Imported: 3\r\n  };\r\n  viewState = this.viewStates.Default;\r\n  importFile: File;\r\n\r\n  constructor(private dialogRef: MatDialogRef<ContentItemImportComponent>, private contentItemsService: ContentItemsService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async importContentItem() {\r\n    this.viewState = this.viewStates.Waiting;\r\n    (await this.contentItemsService.importItem(this.importFile)).subscribe({\r\n      next: res => {\r\n        this.viewState = this.viewStates.Imported;\r\n      },\r\n      error: () => {\r\n        this.viewState = this.viewStates.Default;\r\n      }\r\n    });\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    this.importFile = (event.target as HTMLInputElement).files[0];\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}