{"version":3,"sources":["C:/Projects/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm5/card.js","C:/Projects/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm5/tabs.js","C:/Projects/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm5/progress-spinner.js"],"names":["_c0","_c1","_c2","_c3","_c4","_c5","MatCardContent","ɵfac","t","ɵdir","type","selectors","hostAttrs","MatCardTitle","MatCardSubtitle","MatCardActions","this","align","hostVars","hostBindings","rf","ctx","inputs","exportAs","MatCardFooter","MatCardImage","MatCardSmImage","MatCardMdImage","MatCardLgImage","MatCardXlImage","MatCardAvatar","MatCard","_animationMode","ɵcmp","ngContentSelectors","decls","vars","template","styles","encapsulation","changeDetection","MatCardHeader","consts","MatCardTitleGroup","MatCardModule","ɵmod","ɵinj","factory","imports","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","value","params","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r22","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r30","i_r23","index","ctx_r29","_r18","_handleClick","ctx_r19","selectedIndex","_getTabLabelId","disabled","disableRipple","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","MatTabGroup_mat_tab_body_5_Template","_r34","_removeTabBodyWrapperHeight","$event","_setTabBodyWrapperHeight","tab_r31","i_r32","ctx_r21","content","position","origin","_c6","_c7","_c8","_MAT_INK_BAR_POSITIONER","providedIn","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","prototype","alignToElement","_this","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","hide","positions","inkBar","MatTabContent","MatTabLabel","_super","apply","arguments","ɵMatTabLabel_BaseFactory","features","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","call","_contentPortal","_stateChanges","isActive","Object","defineProperty","get","_templateLabel","set","enumerable","configurable","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","contentQueries","dirIndex","_t","first","viewQuery","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","EMPTY","_leavingSub","_beforeCentering","pipe","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBody","elementRef","dir","changeDetectorRef","_portalHost","_onTranslateTabStarted","_translateTabComplete","directives","data","animation","_MatTabBodyBase","_dir","_dirChangeSubscription","_onCentering","_onCentered","change","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","outputs","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","MatTabGroup","defaultConfig","animationMode","_allTabs","_tabBodyWrapper","_tabHeader","dynamicHeight","headerPosition","color","provide","useExisting","_focusChanged","disablePagination","MatTabHeader","MatTabLabelWrapper","_MatTabGroupBase","_changeDetectorRef","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun_1","_createChangeEvent","Promise","resolve","then","forEach","tab","ngAfterContentInit","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","reset","filter","notifyOnChanges","destroy","realignInkBar","_alignInkBarToSelectedTab","map","Math","min","max","tabHeight","wrapper","height","offsetHeight","tabHeader","focusIndex","idx","MatTabLabelWrapperBase","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","passive","viewportRuler","ngZone","platform","_items","_inkBar","_tabListContainer","_tabList","_nextPaginator","_previousPaginator","_showPaginationControls","selectFocusedIndex","indexFocused","_handlePaginatorClick","_handlePaginatorPress","_stopInterval","_handleKeydown","_onContentChanges","_disableScrollBefore","_disableScrollAfter","_MatTabHeaderBase","_disableRipple","_itemSelected","preventDefault","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_stopScrolling","_keyManager","updateActiveItem","ngAfterViewInit","dirChange","resize","realign","updatePagination","withHorizontalOrientation","withWrap","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","setFirstItemActive","setLastItemActive","onKeydown","textContent","_currentTextContent","run","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","scrollLeft","scrollWidth","scrollDistance","translateX","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","viewLength","_a","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","mouseEvent","button","distance","maxScrollDistance","MatTabsModule","MatProgressSpinner__svg_circle_1_Template","ctx_r6","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r7","MatSpinner__svg_circle_1_Template","ctx_r8","MatSpinner__svg_circle_2_Template","ctx_r9","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MatSpinner","document","defaults","mode","_noopAnimations","_viewBox","MatProgressSpinner","_diameter","_value","_fallbackAnimation","trackedDiameters","_diameters","has","head","Set","_forceAnimations","strokeWidth","size","_styleRoot","_attachStyleNode","_strokeWidth","newValue","viewBox","PI","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","createElement","setAttribute","_getAnimationText","appendChild","replace","WeakMap","MatProgressSpinnerModule"],"mappings":"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","file":"default~app-administration-app-administration-module~apps-management-apps-management-module~edit-edit-module.d7d55769bf96c33e77a7.js","sourcesContent":["import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nvar _c0 = [\"*\", [[\"mat-card-footer\"]]];\nvar _c1 = [\"*\", \"mat-card-footer\"];\nvar _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nvar _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nvar _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nvar _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nvar MatCardContent = /** @class */ (function () {\n    function MatCardContent() {\n    }\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardContent;\n}());\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nvar MatCardTitle = /** @class */ (function () {\n    function MatCardTitle() {\n    }\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardTitle;\n}());\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nvar MatCardSubtitle = /** @class */ (function () {\n    function MatCardSubtitle() {\n    }\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardSubtitle;\n}());\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nvar MatCardActions = /** @class */ (function () {\n    function MatCardActions() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n    MatCardActions.propDecorators = {\n        align: [{ type: Input }]\n    };\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n    return MatCardActions;\n}());\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nvar MatCardFooter = /** @class */ (function () {\n    function MatCardFooter() {\n    }\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardFooter;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardImage = /** @class */ (function () {\n    function MatCardImage() {\n    }\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardSmImage = /** @class */ (function () {\n    function MatCardSmImage() {\n    }\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardSmImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardMdImage = /** @class */ (function () {\n    function MatCardMdImage() {\n    }\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardMdImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardLgImage = /** @class */ (function () {\n    function MatCardLgImage() {\n    }\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardLgImage;\n}());\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardXlImage = /** @class */ (function () {\n    function MatCardXlImage() {\n    }\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardXlImage;\n}());\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nvar MatCardAvatar = /** @class */ (function () {\n    function MatCardAvatar() {\n    }\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardAvatar;\n}());\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nvar MatCard = /** @class */ (function () {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    function MatCard(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n    /** @nocollapse */\n    MatCard.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n    return MatCard;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nvar MatCardHeader = /** @class */ (function () {\n    function MatCardHeader() {\n    }\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardHeader;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nvar MatCardTitleGroup = /** @class */ (function () {\n    function MatCardTitleGroup() {\n    }\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardTitleGroup;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatCardModule = /** @class */ (function () {\n    function MatCardModule() {\n    }\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return MatCardModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { __extends, __spread } from 'tslib';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nvar _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nvar _c1 = function (a0) { return { animationDuration: a0 }; };\nvar _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nvar _c3 = [\"tabBodyWrapper\"];\nvar _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    var tab_r22 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r22.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    var tab_r22 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r22.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    var _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); var tab_r22 = ctx.$implicit; var i_r23 = ctx.index; var ctx_r29 = ɵngcc0.ɵɵnextContext(); var _r18 = ɵngcc0.ɵɵreference(1); return ctx_r29._handleClick(tab_r22, _r18, i_r23); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var tab_r22 = ctx.$implicit;\n    var i_r23 = ctx.index;\n    var ctx_r19 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r19.selectedIndex == i_r23);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r19._getTabLabelId(i_r23))(\"disabled\", tab_r22.disabled)(\"matRippleDisabled\", tab_r22.disabled || ctx_r19.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r19._getTabIndex(tab_r22, i_r23))(\"aria-posinset\", i_r23 + 1)(\"aria-setsize\", ctx_r19._tabs.length)(\"aria-controls\", ctx_r19._getTabContentId(i_r23))(\"aria-selected\", ctx_r19.selectedIndex == i_r23)(\"aria-label\", tab_r22.ariaLabel || null)(\"aria-labelledby\", !tab_r22.ariaLabel && tab_r22.ariaLabelledby ? tab_r22.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r22.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r22.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    var _r34 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r34); var ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); var ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var tab_r31 = ctx.$implicit;\n    var i_r32 = ctx.index;\n    var ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r21.selectedIndex == i_r32);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r21._getTabContentId(i_r32))(\"content\", tab_r31.content)(\"position\", tab_r31.position)(\"origin\", tab_r31.origin)(\"animationDuration\", ctx_r21.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r21._getTabLabelId(i_r32));\n} }\nvar _c5 = [\"tabListContainer\"];\nvar _c6 = [\"tabList\"];\nvar _c7 = [\"nextPaginator\"];\nvar _c8 = [\"previousPaginator\"];\nvar _c9 = [\"mat-tab-nav-bar\", \"\"];\nvar _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    var method = function (element) { return ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }); };\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nvar MatInkBar = /** @class */ (function () {\n    function MatInkBar(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    MatInkBar.prototype.alignToElement = function (element) {\n        var _this = this;\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () { return _this._setStyles(element); });\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    };\n    /** Shows the ink bar. */\n    MatInkBar.prototype.show = function () {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    };\n    /** Hides the ink bar. */\n    MatInkBar.prototype.hide = function () {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    };\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    MatInkBar.prototype._setStyles = function (element) {\n        var positions = this._inkBarPositioner(element);\n        var inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    };\n    /** @nocollapse */\n    MatInkBar.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': \"_animationMode === 'NoopAnimations'\"\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n    return MatInkBar;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Decorates the `ng-template` tags and reads out the template from it. */\nvar MatTabContent = /** @class */ (function () {\n    function MatTabContent(template) {\n        this.template = template;\n    }\n    /** @nocollapse */\n    MatTabContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return MatTabContent;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to flag tab labels for use with the portal directive */\nvar MatTabLabel = /** @class */ (function (_super) {\n    __extends(MatTabLabel, _super);\n    function MatTabLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nvar ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n    return MatTabLabel;\n}(CdkPortal));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nvar MatTabBase = /** @class */ (function () {\n    function MatTabBase() {\n    }\n    return MatTabBase;\n}());\nvar _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nvar MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nvar MatTab = /** @class */ (function (_super) {\n    __extends(MatTab, _super);\n    function MatTab(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        var _this = _super.call(this) || this;\n        _this._viewContainerRef = _viewContainerRef;\n        _this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        _this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        _this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        _this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        _this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        _this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        _this.isActive = false;\n        return _this;\n    }\n    Object.defineProperty(MatTab.prototype, \"templateLabel\", {\n        /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n        get: function () { return this._templateLabel; },\n        set: function (value) {\n            // Only update the templateLabel via query if there is actually\n            // a MatTabLabel found. This works around an issue where a user may have\n            // manually set `templateLabel` during creation mode, which would then get clobbered\n            // by `undefined` when this query resolves.\n            if (value) {\n                this._templateLabel = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTab.prototype, \"content\", {\n        /** @docs-private */\n        get: function () {\n            return this._contentPortal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatTab.prototype.ngOnChanges = function (changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    };\n    MatTab.prototype.ngOnDestroy = function () {\n        this._stateChanges.complete();\n    };\n    MatTab.prototype.ngOnInit = function () {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    };\n    /** @nocollapse */\n    MatTab.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n    ]; };\n    MatTab.propDecorators = {\n        templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n        _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n        _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n        textLabel: [{ type: Input, args: ['label',] }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n    };\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], textLabel: [{\n            type: Input,\n            args: ['label']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n    return MatTab;\n}(_MatTabMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nvar matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nvar MatTabBodyPortal = /** @class */ (function (_super) {\n    __extends(MatTabBodyPortal, _super);\n    function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        var _this = _super.call(this, componentFactoryResolver, viewContainerRef, _document) || this;\n        _this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        _this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        _this._leavingSub = Subscription.EMPTY;\n        return _this;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    MatTabBodyPortal.prototype.ngOnInit = function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe(function (isCentering) {\n            if (isCentering && !_this.hasAttached()) {\n                _this.attach(_this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(function () {\n            _this.detach();\n        });\n    };\n    /** Clean up centering subscription. */\n    MatTabBodyPortal.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    };\n    /** @nocollapse */\n    MatTabBodyPortal.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(function () { return MatTabBody; }),] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () { return MatTabBody; })), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(function () { return MatTabBody; })]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return MatTabBodyPortal;\n}(CdkPortalOutlet));\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nvar _MatTabBodyBase = /** @class */ (function () {\n    function _MatTabBodyBase(_elementRef, _dir, changeDetectorRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe(function (dir) {\n                _this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged(function (x, y) {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(function (event) {\n            // If the transition to the center is complete, emit an event.\n            if (_this._isCenterPosition(event.toState) && _this._isCenterPosition(_this._position)) {\n                _this._onCentered.emit();\n            }\n            if (_this._isCenterPosition(event.fromState) && !_this._isCenterPosition(_this._position)) {\n                _this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    Object.defineProperty(_MatTabBodyBase.prototype, \"position\", {\n        /** The shifted index position of the tab body, where zero represents the active center tab. */\n        set: function (position) {\n            this._positionIndex = position;\n            this._computePositionAnimationState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    _MatTabBodyBase.prototype.ngOnInit = function () {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    };\n    _MatTabBodyBase.prototype.ngOnDestroy = function () {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    };\n    _MatTabBodyBase.prototype._onTranslateTabStarted = function (event) {\n        var isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /** The text direction of the containing app. */\n    _MatTabBodyBase.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _MatTabBodyBase.prototype._isCenterPosition = function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _MatTabBodyBase.prototype._computePositionAnimationState = function (dir) {\n        if (dir === void 0) { dir = this._getLayoutDirection(); }\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    };\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _MatTabBodyBase.prototype._computePositionFromOrigin = function (origin) {\n        var dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    };\n    /** @nocollapse */\n    _MatTabBodyBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    _MatTabBodyBase.propDecorators = {\n        _onCentering: [{ type: Output }],\n        _beforeCentering: [{ type: Output }],\n        _afterLeavingCenter: [{ type: Output }],\n        _onCentered: [{ type: Output }],\n        _content: [{ type: Input, args: ['content',] }],\n        origin: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        position: [{ type: Input }]\n    };\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n    return _MatTabBodyBase;\n}());\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nvar MatTabBody = /** @class */ (function (_super) {\n    __extends(MatTabBody, _super);\n    function MatTabBody(elementRef, dir, changeDetectorRef) {\n        return _super.call(this, elementRef, dir, changeDetectorRef) || this;\n    }\n    /** @nocollapse */\n    MatTabBody.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    MatTabBody.propDecorators = {\n        _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n    };\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n    return MatTabBody;\n}(_MatTabBodyBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nvar MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nvar nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nvar MatTabChangeEvent = /** @class */ (function () {\n    function MatTabChangeEvent() {\n    }\n    return MatTabChangeEvent;\n}());\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nvar MatTabGroupMixinBase = /** @class */ (function () {\n    function MatTabGroupMixinBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabGroupMixinBase;\n}());\nvar _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nvar _MatTabGroupBase = /** @class */ (function (_super) {\n    __extends(_MatTabGroupBase, _super);\n    function _MatTabGroupBase(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        _this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        _this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        _this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        _this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        _this._tabLabelSubscription = Subscription.EMPTY;\n        _this._dynamicHeight = false;\n        _this._selectedIndex = null;\n        /** Position of the tab header. */\n        _this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        _this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        _this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        _this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        _this.selectedTabChange = new EventEmitter(true);\n        _this._groupId = nextId++;\n        _this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        _this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        return _this;\n    }\n    Object.defineProperty(_MatTabGroupBase.prototype, \"dynamicHeight\", {\n        /** Whether the tab group should grow to the size of the active tab. */\n        get: function () { return this._dynamicHeight; },\n        set: function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabGroupBase.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: function () { return this._selectedIndex; },\n        set: function (value) {\n            this._indexToSelect = coerceNumberProperty(value, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabGroupBase.prototype, \"animationDuration\", {\n        /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n        get: function () { return this._animationDuration; },\n        set: function (value) {\n            this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabGroupBase.prototype, \"backgroundColor\", {\n        /** Background color of the tab group. */\n        get: function () { return this._backgroundColor; },\n        set: function (value) {\n            var nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    _MatTabGroupBase.prototype.ngAfterContentChecked = function () {\n        var _this = this;\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            var isFirstRun_1 = this._selectedIndex == null;\n            if (!isFirstRun_1) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(function () {\n                _this._tabs.forEach(function (tab, index) { return tab.isActive = index === indexToSelect; });\n                if (!isFirstRun_1) {\n                    _this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach(function (tab, index) {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - _this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    _MatTabGroupBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(function () {\n            var indexToSelect = _this._clampTabIndex(_this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === _this._selectedIndex) {\n                var tabs = _this._tabs.toArray();\n                for (var i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        _this._indexToSelect = _this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /** Listens to changes in all of the tabs. */\n    _MatTabGroupBase.prototype._subscribeToAllTabChanges = function () {\n        var _this = this;\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe(function (tabs) {\n            _this._tabs.reset(tabs.filter(function (tab) {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === _this;\n            }));\n            _this._tabs.notifyOnChanges();\n        });\n    };\n    _MatTabGroupBase.prototype.ngOnDestroy = function () {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    };\n    /** Re-aligns the ink bar to the selected tab element. */\n    _MatTabGroupBase.prototype.realignInkBar = function () {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    };\n    _MatTabGroupBase.prototype._focusChanged = function (index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    };\n    _MatTabGroupBase.prototype._createChangeEvent = function (index) {\n        var event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _MatTabGroupBase.prototype._subscribeToTabLabels = function () {\n        var _this = this;\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge.apply(void 0, __spread(this._tabs.map(function (tab) { return tab._stateChanges; }))).subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n    };\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _MatTabGroupBase.prototype._clampTabIndex = function (index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    };\n    /** Returns a unique id for each tab label element */\n    _MatTabGroupBase.prototype._getTabLabelId = function (i) {\n        return \"mat-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns a unique id for each tab content element */\n    _MatTabGroupBase.prototype._getTabContentId = function (i) {\n        return \"mat-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _MatTabGroupBase.prototype._setTabBodyWrapperHeight = function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    };\n    /** Removes the height of the tab body wrapper. */\n    _MatTabGroupBase.prototype._removeTabBodyWrapperHeight = function () {\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    };\n    /** Handle click events, setting new selected index if appropriate. */\n    _MatTabGroupBase.prototype._handleClick = function (tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    };\n    /** Retrieves the tabindex for the tab. */\n    _MatTabGroupBase.prototype._getTabIndex = function (tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    };\n    /** @nocollapse */\n    _MatTabGroupBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabGroupBase.propDecorators = {\n        dynamicHeight: [{ type: Input }],\n        selectedIndex: [{ type: Input }],\n        headerPosition: [{ type: Input }],\n        animationDuration: [{ type: Input }],\n        disablePagination: [{ type: Input }],\n        backgroundColor: [{ type: Input }],\n        selectedIndexChange: [{ type: Output }],\n        focusChange: [{ type: Output }],\n        animationDone: [{ type: Output }],\n        selectedTabChange: [{ type: Output }]\n    };\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", animationDuration: \"animationDuration\", backgroundColor: \"backgroundColor\", headerPosition: \"headerPosition\", disablePagination: \"disablePagination\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], animationDuration: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], headerPosition: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }] }); })();\n    return _MatTabGroupBase;\n}(_MatTabGroupMixinBase));\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nvar MatTabGroup = /** @class */ (function (_super) {\n    __extends(MatTabGroup, _super);\n    function MatTabGroup(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        return _super.call(this, elementRef, changeDetectorRef, defaultConfig, animationMode) || this;\n    }\n    /** @nocollapse */\n    MatTabGroup.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabGroup.propDecorators = {\n        _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n        _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n        _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n    };\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n    return MatTabGroup;\n}(_MatTabGroupBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nvar MatTabLabelWrapperBase = /** @class */ (function () {\n    function MatTabLabelWrapperBase() {\n    }\n    return MatTabLabelWrapperBase;\n}());\nvar _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nvar MatTabLabelWrapper = /** @class */ (function (_super) {\n    __extends(MatTabLabelWrapper, _super);\n    function MatTabLabelWrapper(elementRef) {\n        var _this = _super.call(this) || this;\n        _this.elementRef = elementRef;\n        return _this;\n    }\n    /** Sets focus on the wrapper element */\n    MatTabLabelWrapper.prototype.focus = function () {\n        this.elementRef.nativeElement.focus();\n    };\n    MatTabLabelWrapper.prototype.getOffsetLeft = function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    MatTabLabelWrapper.prototype.getOffsetWidth = function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    /** @nocollapse */\n    MatTabLabelWrapper.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n    return MatTabLabelWrapper;\n}(_MatTabLabelWrapperMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nvar passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nvar HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nvar HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nvar MatPaginatedTabHeader = /** @class */ (function () {\n    function MatPaginatedTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(function () {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(_this._destroyed))\n                .subscribe(function () {\n                _this._stopInterval();\n            });\n        });\n    }\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: function () { return this._selectedIndex; },\n        set: function (value) {\n            value = coerceNumberProperty(value);\n            if (this._selectedIndex != value) {\n                this._selectedIndexChanged = true;\n                this._selectedIndex = value;\n                if (this._keyManager) {\n                    this._keyManager.updateActiveItem(value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatPaginatedTabHeader.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () {\n            _this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () {\n            _this._handlePaginatorPress('after');\n        });\n    };\n    MatPaginatedTabHeader.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var dirChange = this._dir ? this._dir.change : of(null);\n        var resize = this._viewportRuler.change(150);\n        var realign = function () {\n            _this.updatePagination();\n            _this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(function () {\n            realign();\n            _this._keyManager.withHorizontalOrientation(_this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(function (newFocusIndex) {\n            _this.indexFocused.emit(newFocusIndex);\n            _this._setTabFocus(newFocusIndex);\n        });\n    };\n    MatPaginatedTabHeader.prototype.ngAfterContentChecked = function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    MatPaginatedTabHeader.prototype.ngOnDestroy = function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    };\n    /** Handles keyboard events on the header. */\n    MatPaginatedTabHeader.prototype._handleKeydown = function (event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    MatPaginatedTabHeader.prototype._onContentChanges = function () {\n        var _this = this;\n        var textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(function () {\n                _this.updatePagination();\n                _this._alignInkBarToSelectedTab();\n                _this._changeDetectorRef.markForCheck();\n            });\n        }\n    };\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    MatPaginatedTabHeader.prototype.updatePagination = function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"focusIndex\", {\n        /** Tracks which element has focus; used for keyboard navigation */\n        get: function () {\n            return this._keyManager ? this._keyManager.activeItemIndex : 0;\n        },\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set: function (value) {\n            if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n                return;\n            }\n            this._keyManager.setActiveItem(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    MatPaginatedTabHeader.prototype._isValidIndex = function (index) {\n        if (!this._items) {\n            return true;\n        }\n        var tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    MatPaginatedTabHeader.prototype._setTabFocus = function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            var containerEl = this._tabListContainer.nativeElement;\n            var dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /** The layout direction of the containing app. */\n    MatPaginatedTabHeader.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    MatPaginatedTabHeader.prototype._updateTabScrollPosition = function () {\n        if (this.disablePagination) {\n            return;\n        }\n        var scrollDistance = this.scrollDistance;\n        var platform = this._platform;\n        var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = \"translateX(\" + Math.round(translateX) + \"px)\";\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    };\n    Object.defineProperty(MatPaginatedTabHeader.prototype, \"scrollDistance\", {\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        get: function () { return this._scrollDistance; },\n        set: function (value) {\n            this._scrollTo(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._scrollHeader = function (direction) {\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        var scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    };\n    /** Handles click events on the pagination arrows. */\n    MatPaginatedTabHeader.prototype._handlePaginatorClick = function (direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._scrollToLabel = function (labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        var selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        var _a = selectedLabel.elementRef.nativeElement, offsetLeft = _a.offsetLeft, offsetWidth = _a.offsetWidth;\n        var labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        var beforeVisiblePos = this.scrollDistance;\n        var afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._checkPaginationEnabled = function () {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._checkScrollingControls = function () {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    MatPaginatedTabHeader.prototype._getMaxScrollDistance = function () {\n        var lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    };\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    MatPaginatedTabHeader.prototype._alignInkBarToSelectedTab = function () {\n        var selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        var selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    };\n    /** Stops the currently-running paginator interval.  */\n    MatPaginatedTabHeader.prototype._stopInterval = function () {\n        this._stopScrolling.next();\n    };\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    MatPaginatedTabHeader.prototype._handlePaginatorPress = function (direction, mouseEvent) {\n        var _this = this;\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(function () {\n            var _a = _this._scrollHeader(direction), maxScrollDistance = _a.maxScrollDistance, distance = _a.distance;\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                _this._stopInterval();\n            }\n        });\n    };\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    MatPaginatedTabHeader.prototype._scrollTo = function (position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        var maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance: maxScrollDistance, distance: this._scrollDistance };\n    };\n    /** @nocollapse */\n    MatPaginatedTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatPaginatedTabHeader.propDecorators = {\n        disablePagination: [{ type: Input }]\n    };\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n    return MatPaginatedTabHeader;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nvar _MatTabHeaderBase = /** @class */ (function (_super) {\n    __extends(_MatTabHeaderBase, _super);\n    function _MatTabHeaderBase(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n        _this._disableRipple = false;\n        return _this;\n    }\n    Object.defineProperty(_MatTabHeaderBase.prototype, \"disableRipple\", {\n        /** Whether the ripple effect is disabled or not. */\n        get: function () { return this._disableRipple; },\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    _MatTabHeaderBase.prototype._itemSelected = function (event) {\n        event.preventDefault();\n    };\n    /** @nocollapse */\n    _MatTabHeaderBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabHeaderBase.propDecorators = {\n        disableRipple: [{ type: Input }]\n    };\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n    return _MatTabHeaderBase;\n}(MatPaginatedTabHeader));\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nvar MatTabHeader = /** @class */ (function (_super) {\n    __extends(MatTabHeader, _super);\n    function MatTabHeader(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        return _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n    }\n    /** @nocollapse */\n    MatTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: Platform },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabHeader.propDecorators = {\n        _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n    };\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n    return MatTabHeader;\n}(_MatTabHeaderBase));\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nvar _MatTabNavBase = /** @class */ (function (_super) {\n    __extends(_MatTabNavBase, _super);\n    function _MatTabNavBase(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n        _this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        _this.color = 'primary';\n        return _this;\n    }\n    Object.defineProperty(_MatTabNavBase.prototype, \"backgroundColor\", {\n        /** Background color of the tab nav. */\n        get: function () { return this._backgroundColor; },\n        set: function (value) {\n            var classList = this._elementRef.nativeElement.classList;\n            classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabNavBase.prototype, \"disableRipple\", {\n        /** Whether the ripple effect is disabled or not. */\n        get: function () { return this._disableRipple; },\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    _MatTabNavBase.prototype._itemSelected = function () {\n        // noop\n    };\n    _MatTabNavBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(function () {\n            _this.updateActiveLink();\n        });\n        _super.prototype.ngAfterContentInit.call(this);\n    };\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    _MatTabNavBase.prototype.updateActiveLink = function (_element) {\n        if (!this._items) {\n            return;\n        }\n        var items = this._items.toArray();\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    };\n    /** @nocollapse */\n    _MatTabNavBase.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabNavBase.propDecorators = {\n        backgroundColor: [{ type: Input }],\n        disableRipple: [{ type: Input }],\n        color: [{ type: Input }]\n    };\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n    return _MatTabNavBase;\n}(MatPaginatedTabHeader));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MatTabNav = /** @class */ (function (_super) {\n    __extends(MatTabNav, _super);\n    function MatTabNav(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        return _super.call(this, elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) || this;\n    }\n    /** @nocollapse */\n    MatTabNav.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatTabNav.propDecorators = {\n        _items: [{ type: ContentChildren, args: [forwardRef(function () { return MatTabLink; }), { descendants: true },] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n        _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n        _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n        _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n    };\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 6, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(10);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(function () { return MatTabLink; }), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n    return MatTabNav;\n}(_MatTabNavBase));\n// Boilerplate for applying mixins to MatTabLink.\nvar MatTabLinkMixinBase = /** @class */ (function () {\n    function MatTabLinkMixinBase() {\n    }\n    return MatTabLinkMixinBase;\n}());\nvar _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nvar _MatTabLinkBase = /** @class */ (function (_super) {\n    __extends(_MatTabLinkBase, _super);\n    function _MatTabLinkBase(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        var _this = _super.call(this) || this;\n        _this._tabNavBar = _tabNavBar;\n        _this.elementRef = elementRef;\n        _this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        _this._isActive = false;\n        _this.rippleConfig = globalRippleOptions || {};\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            _this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n        return _this;\n    }\n    Object.defineProperty(_MatTabLinkBase.prototype, \"active\", {\n        /** Whether the link is active. */\n        get: function () { return this._isActive; },\n        set: function (value) {\n            if (value !== this._isActive) {\n                this._isActive = value;\n                this._tabNavBar.updateActiveLink(this.elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_MatTabLinkBase.prototype, \"rippleDisabled\", {\n        /**\n         * Whether ripples are disabled on interaction.\n         * @docs-private\n         */\n        get: function () {\n            return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n                !!this.rippleConfig.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _MatTabLinkBase.prototype.focus = function () {\n        this.elementRef.nativeElement.focus();\n    };\n    _MatTabLinkBase.prototype.ngOnDestroy = function () {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    };\n    /** @nocollapse */\n    _MatTabLinkBase.ctorParameters = function () { return [\n        { type: _MatTabNavBase },\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    _MatTabLinkBase.propDecorators = {\n        active: [{ type: Input }]\n    };\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n    return _MatTabLinkBase;\n}(_MatTabLinkMixinBase));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nvar MatTabLink = /** @class */ (function (_super) {\n    __extends(MatTabLink, _super);\n    function MatTabLink(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        var _this = _super.call(this, tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode) || this;\n        _this._tabLinkRipple = new RippleRenderer(_this, ngZone, elementRef, platform);\n        _this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n        return _this;\n    }\n    MatTabLink.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._tabLinkRipple._removeTriggerEvents();\n    };\n    /** @nocollapse */\n    MatTabLink.ctorParameters = function () { return [\n        { type: MatTabNav },\n        { type: ElementRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n    return MatTabLink;\n}(_MatTabLinkBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatTabsModule = /** @class */ (function () {\n    function MatTabsModule() {\n    }\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return MatTabsModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n//# sourceMappingURL=tabs.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r6.diameter)(\"stroke-dashoffset\", ctx_r6._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r6._strokeCircumference, \"px\")(\"stroke-width\", ctx_r6._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r6._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r7._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r7._strokeCircumference, \"px\")(\"stroke-width\", ctx_r7._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r7._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r8.diameter)(\"stroke-dashoffset\", ctx_r8._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r8._strokeCircumference, \"px\")(\"stroke-width\", ctx_r8._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r8._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r9._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r9._strokeCircumference, \"px\")(\"stroke-width\", ctx_r9._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r9._circleRadius);\n} }\nvar BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nvar BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nvar MatProgressSpinnerBase = /** @class */ (function () {\n    function MatProgressSpinnerBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatProgressSpinnerBase;\n}());\nvar _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nvar MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nvar INDETERMINATE_ANIMATION_TEMPLATE = \"\\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\\n\\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\\n\\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\\n\\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\\n  }\\n\";\n/**\n * `<mat-progress-spinner>` component.\n */\nvar MatProgressSpinner = /** @class */ (function (_super) {\n    __extends(MatProgressSpinner, _super);\n    function MatProgressSpinner(_elementRef, platform, _document, animationMode, defaults) {\n        var _this = _super.call(this, _elementRef) || this;\n        _this._elementRef = _elementRef;\n        _this._document = _document;\n        _this._diameter = BASE_SIZE;\n        _this._value = 0;\n        _this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        _this.mode = 'determinate';\n        var trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        _this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        _this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                _this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                _this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(MatProgressSpinner.prototype, \"diameter\", {\n        /** The diameter of the progress spinner (will set width and height of svg). */\n        get: function () { return this._diameter; },\n        set: function (size) {\n            this._diameter = coerceNumberProperty(size);\n            // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n            if (!this._fallbackAnimation && this._styleRoot) {\n                this._attachStyleNode();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"strokeWidth\", {\n        /** Stroke width of the progress spinner. */\n        get: function () {\n            return this._strokeWidth || this.diameter / 10;\n        },\n        set: function (value) {\n            this._strokeWidth = coerceNumberProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"value\", {\n        /** Value of the progress circle. */\n        get: function () {\n            return this.mode === 'determinate' ? this._value : 0;\n        },\n        set: function (newValue) {\n            this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatProgressSpinner.prototype.ngOnInit = function () {\n        var element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        var animationClass = \"mat-progress-spinner-indeterminate\" + (this._fallbackAnimation ? '-fallback' : '') + \"-animation\";\n        element.classList.add(animationClass);\n    };\n    Object.defineProperty(MatProgressSpinner.prototype, \"_circleRadius\", {\n        /** The radius of the spinner, adjusted for stroke width. */\n        get: function () {\n            return (this.diameter - BASE_STROKE_WIDTH) / 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_viewBox\", {\n        /** The view box of the spinner's svg element. */\n        get: function () {\n            var viewBox = this._circleRadius * 2 + this.strokeWidth;\n            return \"0 0 \" + viewBox + \" \" + viewBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_strokeCircumference\", {\n        /** The stroke circumference of the svg circle. */\n        get: function () {\n            return 2 * Math.PI * this._circleRadius;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_strokeDashOffset\", {\n        /** The dash offset of the svg circle. */\n        get: function () {\n            if (this.mode === 'determinate') {\n                return this._strokeCircumference * (100 - this._value) / 100;\n            }\n            // In fallback mode set the circle to 80% and rotate it with CSS.\n            if (this._fallbackAnimation && this.mode === 'indeterminate') {\n                return this._strokeCircumference * 0.2;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_circleStrokeWidth\", {\n        /** Stroke width of the circle in percent. */\n        get: function () {\n            return this.strokeWidth / this.diameter * 100;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    MatProgressSpinner.prototype._attachStyleNode = function () {\n        var styleRoot = this._styleRoot;\n        var currentDiameter = this._diameter;\n        var diameters = MatProgressSpinner._diameters;\n        var diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            var styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    };\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    MatProgressSpinner.prototype._getAnimationText = function () {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, \"\" + 0.95 * this._strokeCircumference)\n            .replace(/END_VALUE/g, \"\" + 0.2 * this._strokeCircumference)\n            .replace(/DIAMETER/g, \"\" + this.diameter);\n    };\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     */\n    MatProgressSpinner._diameters = new WeakMap();\n    /** @nocollapse */\n    MatProgressSpinner.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n    ]; };\n    MatProgressSpinner.propDecorators = {\n        diameter: [{ type: Input }],\n        strokeWidth: [{ type: Input }],\n        mode: [{ type: Input }],\n        value: [{ type: Input }]\n    };\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\", mode: \"mode\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': \"_noopAnimations\",\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }] }); })();\n    return MatProgressSpinner;\n}(_MatProgressSpinnerMixinBase));\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nvar MatSpinner = /** @class */ (function (_super) {\n    __extends(MatSpinner, _super);\n    function MatSpinner(elementRef, platform, document, animationMode, defaults) {\n        var _this = _super.call(this, elementRef, platform, document, animationMode, defaults) || this;\n        _this.mode = 'indeterminate';\n        return _this;\n    }\n    /** @nocollapse */\n    MatSpinner.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n    ]; };\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': \"_noopAnimations\",\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n    return MatSpinner;\n}(MatProgressSpinner));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatProgressSpinnerModule = /** @class */ (function () {\n    function MatProgressSpinnerModule() {\n    }\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return MatProgressSpinnerModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map"],"sourceRoot":"webpack:///"}