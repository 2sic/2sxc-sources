{"version":3,"sources":["../edit/shared/services/global-configuration.service.ts","./src/app/apps-management/services/apps-list.service.ts","./src/app/content-items/services/content-items.service.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@ngx-translate/http-loader/__ivy_ngcc__/fesm5/ngx-translate-http-loader.js","./src/app/shared/components/boolean-filter/boolean-filter.component.ts","./src/app/shared/components/boolean-filter/boolean-filter.component.html","./src/app/content-type-fields/constants/data-type.constants.ts","./src/app/content-type-fields/content-type-fields.helpers.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm5/slide-toggle.js","./src/app/content-items/services/entities.service.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/components/id-field/id-field.component.ts","./src/app/shared/components/id-field/id-field.component.html","./src/app/shared/pipes/safe-html.pipe.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/@ecodev/fab-speed-dial/__ivy_ngcc__/fesm5/ecodev-fab-speed-dial.js","./src/app/app-administration/services/app-dialog-config.service.ts","./src/app/manage-content-list/services/content-group.service.ts","./src/app/shared/constants/file-names.constants.ts","./src/app/app-administration/services/content-types.service.ts","./src/app/shared/components/field-hint/field-hint.component.html","./src/app/shared/components/field-hint/field-hint.component.ts","./src/app/app-administration/services/content-export.service.ts","./src/app/shared/helpers/file-to-base64.helper.ts","./src/app/app-administration/constants/field-name.patterns.ts","./src/app/shared/directives/click-stop-propagation.directive.ts","./src/app/shared/helpers/copy-to-clipboard.helper.ts","./src/app/shared/directives/mousedown-stop-propagation.directive.ts","./src/app/shared/components/empty-route/empty-route.component.ts","./src/app/shared/components/empty-route/empty-route.component.html","./src/app/content-type-fields/constants/input-type.constants.ts","./src/app/permissions/services/metadata.service.ts"],"names":["store","snackBar","loadDebugEnabled","debugEnabled","this","dispatch","toggleDebugEnabled","select","pipe","subscribe","enabled","open","duration","getDebugEnabled","GlobalConfigurationService","http","context","dnnContext","getAll","get","$2sxc","apiUrl","params","zoneId","toString","create","name","post","delete","appId","flushCache","AppsListService","contentTypeStaticName","contentType","getColumns","staticName","importItem","file","AppId","ContentBase64","ContentItemsService","TranslateHttpLoader","prefix","suffix","prototype","getTranslation","lang","filter","agInit","isFilterActive","doesFilterPass","value","valueGetter","node","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","BooleanFilterComponent","String","Entity","Boolean","Number","Custom","DateTime","Hyperlink","Empty","calculateTypeIcon","typeName","_c0","_c1","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","MatSlideToggle","multi","MatSlideToggleChange","source","checked","MatSlideToggleBase","_elementRef","_super","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","_ngZone","defaults","_animationMode","_dir","_this","call","_onChange","_","_onTouched","_uniqueId","_required","_checked","id","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","dragChange","parseInt","Object","defineProperty","set","enumerable","configurable","markForCheck","ngAfterContentInit","monitor","focusOrigin","_inputElement","nativeElement","focus","Promise","resolve","then","ngOnDestroy","stopMonitoring","_onChangeEvent","event","stopPropagation","emit","_emitChangeEvent","_onInputClick","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","options","focusVia","toggle","_onLabelTextChange","detectChanges","ɵfac","t","ɵcmp","type","selectors","viewQuery","rf","ctx","_t","_thumbEl","first","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","required","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","$event","_r10","_r14","inputId","textContent","trim","directives","styles","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","tryForce","force","EntitiesService","openCodeFile","path","dialog","Develop","form","items","Path","oldHref","sessionStorage","getItem","oldUrl","URL","newHref","origin","pathname","search","newHash","buildHashParam","replace","tabId","moduleId","contentBlockId","JSON","stringify","window","openQueryDesigner","queryId","PipelineDesigner","EntityId","key","rawKey","valueTemp","encodeURIComponent","DialogService","tooltip","data","Id","Code","refresh","copy","IdFieldComponent","sanitizer","transform","html","bypassSecurityTrustHtml","SafeHtmlPipe","EcoFabSpeedDialActionsComponent_0_Template","_c5","EcoFabSpeedDialActionsComponent","injector","renderer","miniFabVisible","_parent","EcoFabSpeedDialComponent","_buttons","changes","initButtonStates","setActionsVisibility","forEach","button","i","addClass","_getHostElement","changeElementStyle","show","resetAnimationState","showMiniFabAnimation","setTimeout","transitionDelay","animationMode","getTranslateFunction","hostElement","clearTimeout","hideMiniFab","unsubscribe","hide","obs","map","opacity","dir","direction","elem","style","setStyle","contentQueries","dirIndex","undefined","document","isInitialized","_direction","_open","_fixed","_documentClickUnlistener","openChange","fixed","_processOutsideClickState","previousOpen","previousDirection","_setElementClass","previousAnimationMode","_unsetDocumentClickListener","_onClick","_childActions","elemClass","isAdd","finalClass","removeClass","_setDocumentClickListener","listen","EcoFabSpeedDialTriggerComponent","spin","sp","EcoFabSpeedDialModule","getDialogSettings","appid","AppDialogConfigService","getItems","item","guid","part","index","saveItem","entityId","add","getList","contentGroup","saveList","resortedList","getHeader","ContentGroupService","defaultControllerName","defaultTemplateName","defaultTokenName","retrieveContentType","contentTypeId","retrieveContentTypes","scope","getScopes","scopes","keys","save","StaticName","createGhost","sourceStaticName","getDetails","contentTypeName","config","ContentTypesService","isError","isShort","toggleIsShort","FieldHintComponent","exportContent","values","selectedIds","selectedIdsString","join","url","language","defaultLanguage","recordExport","resourcesReferences","languageReferences","exportJson","exportEntity","metadata","ContentExportService","toBase64","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","fieldNamePattern","fieldNameError","onClick","ClickStopPropagationDirective","copyToClipboard","str","el","createElement","setAttribute","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","execCommand","removeChild","removeAllRanges","addRange","onMousedown","MousedownStopPropagationDirective","EmptyRouteComponent","StringDefault","StringUrlPath","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringTemplatePicker","StringWysiwyg","BooleanDefault","DatetimeDefault","EmptyDefault","NumberDefault","EntityDefault","EntityQuery","EntityContentBlocks","HyperlinkDefault","HyperlinkLibrary","ExternalWebComponent","CustomGPS","CustomDefault","OldTypeDropdown","OldTypeWysiwyg","OldTypeDefault","StringWysiwygTinymce","StringWysiwygAdv","StringWysiwygDnn","DefaultSuffix","getMetadata","typeId","keyType","targetType","MetadataService"],"mappings":"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","file":"common.be32b976dd7407a21c73.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport * as fromStore from '../store';\r\nimport * as GlobalConfigurationActions from '../store/actions/global-configuration.actions';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalConfigurationService {\r\n\r\n  constructor(private store: Store<fromStore.EavState>, private snackBar: MatSnackBar) { }\r\n\r\n  public loadDebugEnabled(debugEnabled: boolean) {\r\n    this.store.dispatch(GlobalConfigurationActions.loadDebugEnabled({ debugEnabled }));\r\n  }\r\n\r\n  public toggleDebugEnabled() {\r\n    this.store.dispatch(GlobalConfigurationActions.toggleDebugEnabled());\r\n    let debugEnabled: boolean;\r\n    this.store.select(fromStore.selectDebugEnabled).pipe(take(1)).subscribe(enabled => {\r\n      debugEnabled = enabled;\r\n    });\r\n    if (debugEnabled) {\r\n      this.snackBar.open('debug mode enabled', null, {\r\n        duration: 3000,\r\n      });\r\n    } else {\r\n      this.snackBar.open('debug mode disabled', null, {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  public getDebugEnabled(): Observable<boolean> {\r\n    return this.store.select(fromStore.selectDebugEnabled);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\n\r\n@Injectable()\r\nexport class AppsListService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('app-sys/system/apps'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<App[]>;\r\n  }\r\n\r\n  create(name: string) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl('app-sys/system/app'), {}, {\r\n      params: { zoneId: this.context.zoneId.toString(), name }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('app-sys/system/deleteapp'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('app-sys/system/flushcache'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\n\r\n@Injectable()\r\nexport class ContentItemsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/entities/GetAllOfTypeForAdmin'), {\r\n      params: { appId: this.context.appId.toString(), contentType: contentTypeStaticName }\r\n    }) as Observable<ContentItem[]>;\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/getfields'), {\r\n      params: { appId: this.context.appId.toString(), staticName: contentTypeStaticName }\r\n    }) as Observable<Field[]>;\r\n  }\r\n\r\n  async importItem(file: File) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl('eav/contentimport/import'), {\r\n      AppId: this.context.appId.toString(),\r\n      ContentBase64: await toBase64(file),\r\n    }) as Observable<boolean>;\r\n  }\r\n}\r\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TranslateHttpLoader = /** @class */ (function () {\n    function TranslateHttpLoader(http, prefix, suffix) {\n        if (prefix === void 0) { prefix = \"/assets/i18n/\"; }\n        if (suffix === void 0) { suffix = \".json\"; }\n        this.http = http;\n        this.prefix = prefix;\n        this.suffix = suffix;\n    }\n    /**\n     * Gets the translations from the server\n     */\n    /**\n     * Gets the translations from the server\n     * @param {?} lang\n     * @return {?}\n     */\n    TranslateHttpLoader.prototype.getTranslation = /**\n     * Gets the translations from the server\n     * @param {?} lang\n     * @return {?}\n     */\n    function (lang) {\n        return this.http.get(\"\" + this.prefix + lang + this.suffix);\n    };\n    return TranslateHttpLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\nexport { TranslateHttpLoader };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0ZS1odHRwLWxvYWRlci5qcyIsInNvdXJjZXMiOlsibmc6L0BuZ3gtdHJhbnNsYXRlL2h0dHAtbG9hZGVyL2xpYi9odHRwLWxvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUE7SUFDRSw2QkFBb0IsSUFBZ0IsRUFBUyxNQUFnQyxFQUFTLE1BQXdCO1FBQWpFLHVCQUFBLEVBQUEsd0JBQWdDO1FBQVMsdUJBQUEsRUFBQSxnQkFBd0I7UUFBMUYsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUFTLFdBQU0sR0FBTixNQUFNLENBQTBCO1FBQVMsV0FBTSxHQUFOLE1BQU0sQ0FBa0I7S0FBSTs7Ozs7Ozs7O0lBSzNHLDRDQUFjOzs7OztJQUFyQixVQUFzQixJQUFZO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsTUFBUSxDQUFDLENBQUM7S0FDN0Q7SUFDSCwwQkFBQztDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtIdHRwQ2xpZW50fSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uL2h0dHBcIjtcbmltcG9ydCB7VHJhbnNsYXRlTG9hZGVyfSBmcm9tIFwiQG5neC10cmFuc2xhdGUvY29yZVwiO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGNsYXNzIFRyYW5zbGF0ZUh0dHBMb2FkZXIgaW1wbGVtZW50cyBUcmFuc2xhdGVMb2FkZXIge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQsIHB1YmxpYyBwcmVmaXg6IHN0cmluZyA9IFwiL2Fzc2V0cy9pMThuL1wiLCBwdWJsaWMgc3VmZml4OiBzdHJpbmcgPSBcIi5qc29uXCIpIHt9XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIHRyYW5zbGF0aW9ucyBmcm9tIHRoZSBzZXJ2ZXJcbiAgICovXG4gIHB1YmxpYyBnZXRUcmFuc2xhdGlvbihsYW5nOiBzdHJpbmcpOiBPYnNlcnZhYmxlPE9iamVjdD4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KGAke3RoaXMucHJlZml4fSR7bGFuZ30ke3RoaXMuc3VmZml4fWApO1xuICB9XG59XG4iXX0=","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams } from '@ag-grid-community/all-modules';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private params: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const value: boolean = this.params.valueGetter(params.node);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.params.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","export class DataTypeConstants {\r\n  public static readonly String = 'String';\r\n  public static readonly Entity = 'Entity';\r\n  public static readonly Boolean = 'Boolean';\r\n  public static readonly Number = 'Number';\r\n  public static readonly Custom = 'Custom';\r\n  public static readonly DateTime = 'DateTime';\r\n  public static readonly Hyperlink = 'Hyperlink';\r\n  public static readonly Empty = 'Empty';\r\n}\r\n","import { DataTypeConstants } from './constants/data-type.constants';\r\n\r\nexport function calculateTypeIcon(typeName: string): string {\r\n  switch (typeName) {\r\n    case DataTypeConstants.String:\r\n      return 'text_fields';\r\n    case DataTypeConstants.Entity:\r\n      return 'share';\r\n    case DataTypeConstants.Boolean:\r\n      return 'toggle_on';\r\n    case DataTypeConstants.Number:\r\n      return 'dialpad';\r\n    case DataTypeConstants.Custom:\r\n      return 'extension';\r\n    case DataTypeConstants.DateTime:\r\n      return 'today';\r\n    case DataTypeConstants.Hyperlink:\r\n      return 'link';\r\n    case DataTypeConstants.Empty:\r\n      return 'crop_free';\r\n    default:\r\n      return 'device_unknown';\r\n  }\r\n}\r\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, NgZone, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nvar _c0 = [\"thumbContainer\"];\nvar _c1 = [\"toggleBar\"];\nvar _c2 = [\"input\"];\nvar _c3 = function () { return { enterDuration: 150 }; };\nvar _c4 = [\"*\"];\nvar MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: function () { return ({ disableToggleValue: false }); }\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nvar nextUniqueId = 0;\n/** @docs-private */\nvar MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatSlideToggle; }),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nvar MatSlideToggleChange = /** @class */ (function () {\n    function MatSlideToggleChange(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n    return MatSlideToggleChange;\n}());\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nvar MatSlideToggleBase = /** @class */ (function () {\n    function MatSlideToggleBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatSlideToggleBase;\n}());\nvar _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nvar MatSlideToggle = /** @class */ (function (_super) {\n    __extends(MatSlideToggle, _super);\n    function MatSlideToggle(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, \n    /**\n     * @deprecated `_ngZone` and `_dir` parameters to be removed.\n     * @breaking-change 10.0.0\n     */\n    _ngZone, defaults, _animationMode, _dir) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._focusMonitor = _focusMonitor;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this.defaults = defaults;\n        _this._animationMode = _animationMode;\n        _this._onChange = function (_) { };\n        _this._onTouched = function () { };\n        _this._uniqueId = \"mat-slide-toggle-\" + ++nextUniqueId;\n        _this._required = false;\n        _this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        _this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        _this.id = _this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        _this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        _this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        _this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        _this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        _this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 10.0.0\n         */\n        _this.dragChange = new EventEmitter();\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        return _this;\n    }\n    Object.defineProperty(MatSlideToggle.prototype, \"required\", {\n        /** Whether the slide-toggle is required. */\n        get: function () { return this._required; },\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlideToggle.prototype, \"checked\", {\n        /** Whether the slide-toggle element is checked or not. */\n        get: function () { return this._checked; },\n        set: function (value) {\n            this._checked = coerceBooleanProperty(value);\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlideToggle.prototype, \"inputId\", {\n        /** Returns the unique id for the visual hidden input. */\n        get: function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    MatSlideToggle.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(function (focusOrigin) {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                _this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(function () { return _this._onTouched(); });\n            }\n        });\n    };\n    MatSlideToggle.prototype.ngOnDestroy = function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    };\n    /** Method being called whenever the underlying input emits a change event. */\n    MatSlideToggle.prototype._onChangeEvent = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    };\n    /** Method being called whenever the slide-toggle has been clicked. */\n    MatSlideToggle.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    MatSlideToggle.prototype.writeValue = function (value) {\n        this.checked = !!value;\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    MatSlideToggle.prototype.registerOnChange = function (fn) {\n        this._onChange = fn;\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    MatSlideToggle.prototype.registerOnTouched = function (fn) {\n        this._onTouched = fn;\n    };\n    /** Implemented as a part of ControlValueAccessor. */\n    MatSlideToggle.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Focuses the slide-toggle. */\n    MatSlideToggle.prototype.focus = function (options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    };\n    /** Toggles the checked state of the slide-toggle. */\n    MatSlideToggle.prototype.toggle = function () {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    };\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    MatSlideToggle.prototype._emitChangeEvent = function () {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    };\n    /** Method being called whenever the label text changes. */\n    MatSlideToggle.prototype._onLabelTextChange = function () {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    };\n    /** @nocollapse */\n    MatSlideToggle.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FocusMonitor },\n        { type: ChangeDetectorRef },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    MatSlideToggle.propDecorators = {\n        _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n        _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n        name: [{ type: Input }],\n        id: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        required: [{ type: Input }],\n        checked: [{ type: Input }],\n        change: [{ type: Output }],\n        toggleChange: [{ type: Output }],\n        dragChange: [{ type: Output }],\n        _inputElement: [{ type: ViewChild, args: ['input',] }]\n    };\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", required: \"required\", checked: \"checked\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, outputs: { change: \"change\", toggleChange: \"toggleChange\", dragChange: \"dragChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var _r10 = ɵngcc0.ɵɵreference(1);\n        var _r14 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r14.textContent || !_r14.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r10)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc4.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], dragChange: [{\n            type: Output\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n    return MatSlideToggle;\n}(_MatSlideToggleMixinBase));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MatSlideToggleRequiredValidator; }),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nvar MatSlideToggleRequiredValidator = /** @class */ (function (_super) {\n    __extends(MatSlideToggleRequiredValidator, _super);\n    function MatSlideToggleRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nvar ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: \"mat-slide-toggle[required][formControlName],\\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]\",\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n    return MatSlideToggleRequiredValidator;\n}(CheckboxRequiredValidator));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nvar _MatSlideToggleRequiredValidatorModule = /** @class */ (function () {\n    function _MatSlideToggleRequiredValidatorModule() {\n    }\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], function () { return []; }, null); })();\n    return _MatSlideToggleRequiredValidatorModule;\n}());\nvar MatSlideToggleModule = /** @class */ (function () {\n    function MatSlideToggleModule() {\n    }\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        _MatSlideToggleRequiredValidatorModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatSlideToggle,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], function () { return []; }, null); })();\n    return MatSlideToggleModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/entities/delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Context } from './context';\r\nimport { EditForm } from '../models/edit-form.model';\r\nimport { DialogTypeConstants } from '../constants/dialog-types.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyZoneId, keyAppId, keyTabId, keyModuleId, keyContentBlockId, keyPortalRoot, keyPartOfPage, keyRequestToken, keyDebug, keyUrl, prefix, keyDialog, keyItems, keyPipelineId } from '../constants/session.constants';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCodeFile(path: string) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form: EditForm = {\r\n      items: [{ Path: path }]\r\n    };\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: queryId }],\r\n    };\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyPipelineId, queryId.toString()) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam = `&${rawKey}=${rawValue}`;\r\n    return hashParam;\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  tooltip: string;\r\n  id: number;\r\n  private params: ICellRendererParams;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.params = params;\r\n    this.tooltip = this.params.value;\r\n    const data: any = this.params.data;\r\n    if (data.Id != null) {\r\n      this.id = data.Id;\r\n    } else if (data.id != null) {\r\n      this.id = data.id;\r\n    } else if (data.Code != null) {\r\n      this.id = data.Code;\r\n    }\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [matTooltip]=\"tooltip\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import { __decorate, __param } from 'tslib';\nimport { Injector, Renderer2, ContentChildren, Component, EventEmitter, ElementRef, Inject, Input, HostBinding, Output, ContentChild, HostListener, ViewEncapsulation, NgModule } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { fromEvent, forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction EcoFabSpeedDialActionsComponent_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"miniFabVisible\"]);\n} }\nvar _c0 = [[[\"\", \"mat-mini-fab\", \"\"]]];\nvar _c1 = [\"[mat-mini-fab]\"];\nvar _c2 = [[[\"eco-fab-speed-dial-trigger\"]], [[\"eco-fab-speed-dial-actions\"]]];\nvar _c3 = [\"eco-fab-speed-dial-trigger\", \"eco-fab-speed-dial-actions\"];\nvar _c4 = [[[\"\", \"mat-fab\", \"\"]]];\nvar _c5 = [\"[mat-fab]\"];\nvar Z_INDEX_ITEM = 23;\nvar EcoFabSpeedDialActionsComponent = /** @class */ (function () {\n    function EcoFabSpeedDialActionsComponent(injector, renderer) {\n        this.renderer = renderer;\n        /**\n         * Whether the min-fab button exist in DOM\n         */\n        this.miniFabVisible = false;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    EcoFabSpeedDialActionsComponent.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._buttons.changes.subscribe(function () {\n            _this.initButtonStates();\n            _this._parent.setActionsVisibility();\n        });\n        this.initButtonStates();\n    };\n    EcoFabSpeedDialActionsComponent.prototype.initButtonStates = function () {\n        var _this = this;\n        this._buttons.forEach(function (button, i) {\n            _this.renderer.addClass(button._getHostElement(), 'eco-fab-action-item');\n            _this.changeElementStyle(button._getHostElement(), 'z-index', '' + (Z_INDEX_ITEM - i));\n        });\n    };\n    EcoFabSpeedDialActionsComponent.prototype.show = function () {\n        var _this = this;\n        if (!this._buttons) {\n            return;\n        }\n        this.resetAnimationState();\n        this.miniFabVisible = true;\n        this.showMiniFabAnimation = setTimeout(function () {\n            _this._buttons.forEach(function (button, i) {\n                var transitionDelay = 0;\n                var transform;\n                if (_this._parent.animationMode === 'scale') {\n                    // Incremental transition delay of 65ms for each action button\n                    transitionDelay = 3 + (65 * i);\n                    transform = 'scale(1)';\n                }\n                else {\n                    transform = _this.getTranslateFunction('0');\n                }\n                var hostElement = button._getHostElement();\n                _this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n                _this.changeElementStyle(hostElement, 'opacity', '1');\n                _this.changeElementStyle(hostElement, 'transform', transform);\n            });\n        }, 50); // Be sure that *ngIf can show elements before trying to animate them\n    };\n    EcoFabSpeedDialActionsComponent.prototype.resetAnimationState = function () {\n        clearTimeout(this.showMiniFabAnimation);\n        if (this.hideMiniFab) {\n            this.hideMiniFab.unsubscribe();\n            this.hideMiniFab = null;\n        }\n    };\n    EcoFabSpeedDialActionsComponent.prototype.hide = function () {\n        var _this = this;\n        if (!this._buttons) {\n            return;\n        }\n        this.resetAnimationState();\n        var obs = this._buttons.map(function (button, i) {\n            var opacity = '1';\n            var transitionDelay = 0;\n            var transform;\n            if (_this._parent.animationMode === 'scale') {\n                transitionDelay = 3 - (65 * i);\n                transform = 'scale(0)';\n                opacity = '0';\n            }\n            else {\n                transform = _this.getTranslateFunction((55 * (i + 1) - (i * 5)) + 'px');\n            }\n            var hostElement = button._getHostElement();\n            _this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n            _this.changeElementStyle(hostElement, 'opacity', opacity);\n            _this.changeElementStyle(hostElement, 'transform', transform);\n            return fromEvent(hostElement, 'transitionend').pipe(take(1));\n        });\n        // Wait for all animation to finish, then destroy their elements\n        this.hideMiniFab = forkJoin(obs).subscribe(function () { return _this.miniFabVisible = false; });\n    };\n    EcoFabSpeedDialActionsComponent.prototype.getTranslateFunction = function (value) {\n        var dir = this._parent.direction;\n        var translateFn = (dir === 'up' || dir === 'down') ? 'translateY' : 'translateX';\n        var sign = (dir === 'down' || dir === 'right') ? '-' : '';\n        return translateFn + '(' + sign + value + ')';\n    };\n    EcoFabSpeedDialActionsComponent.prototype.changeElementStyle = function (elem, style, value) {\n        // FIXME - Find a way to create a \"wrapper\" around the action button(s) provided by the user, so we don't change it's style tag\n        this.renderer.setStyle(elem, style, value);\n    };\n    EcoFabSpeedDialActionsComponent.ctorParameters = function () { return [\n        { type: Injector },\n        { type: Renderer2 }\n    ]; };\n    __decorate([\n        ContentChildren(MatButton)\n    ], EcoFabSpeedDialActionsComponent.prototype, \"_buttons\", void 0);\nEcoFabSpeedDialActionsComponent.ɵfac = function EcoFabSpeedDialActionsComponent_Factory(t) { return new (t || EcoFabSpeedDialActionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nEcoFabSpeedDialActionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EcoFabSpeedDialActionsComponent, selectors: [[\"eco-fab-speed-dial-actions\"]], contentQueries: function EcoFabSpeedDialActionsComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatButton, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttons = _t);\n    } }, ngContentSelectors: _c1, decls: 1, vars: 1, consts: [[4, \"ngIf\"]], template: function EcoFabSpeedDialActionsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵtemplate(0, EcoFabSpeedDialActionsComponent_0_Template, 1, 0, undefined, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.miniFabVisible);\n    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialActionsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'eco-fab-speed-dial-actions',\n                template: \"\\n        <ng-content select=\\\"[mat-mini-fab]\\\" *ngIf=\\\"miniFabVisible\\\"></ng-content>\"\n            }]\n    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc0.Renderer2 }]; }, { _buttons: [{\n            type: ContentChildren,\n            args: [MatButton]\n        }] }); })();\n    return EcoFabSpeedDialActionsComponent;\n}());\n/** @dynamic @see https://github.com/angular/angular/issues/20351#issuecomment-344009887 */\nvar EcoFabSpeedDialComponent = /** @class */ (function () {\n    function EcoFabSpeedDialComponent(elementRef, renderer, document) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.document = document;\n        this.isInitialized = false;\n        this._direction = 'up';\n        this._open = false;\n        this._animationMode = 'fling';\n        this._fixed = false;\n        this._documentClickUnlistener = null;\n        this.openChange = new EventEmitter();\n    }\n    Object.defineProperty(EcoFabSpeedDialComponent.prototype, \"fixed\", {\n        /**\n         * Whether this speed dial is fixed on screen (user cannot change it by clicking)\n         */\n        get: function () {\n            return this._fixed;\n        },\n        set: function (fixed) {\n            this._fixed = fixed;\n            this._processOutsideClickState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EcoFabSpeedDialComponent.prototype, \"open\", {\n        /**\n         * Whether this speed dial is opened\n         */\n        get: function () {\n            return this._open;\n        },\n        set: function (open) {\n            var previousOpen = this._open;\n            this._open = open;\n            if (previousOpen !== this._open) {\n                this.openChange.emit(this._open);\n                if (this.isInitialized) {\n                    this.setActionsVisibility();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EcoFabSpeedDialComponent.prototype, \"direction\", {\n        /**\n         * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'\n         */\n        get: function () {\n            return this._direction;\n        },\n        set: function (direction) {\n            var previousDirection = this._direction;\n            this._direction = direction;\n            if (previousDirection !== this.direction) {\n                this._setElementClass(previousDirection, false);\n                this._setElementClass(this.direction, true);\n                if (this.isInitialized) {\n                    this.setActionsVisibility();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EcoFabSpeedDialComponent.prototype, \"animationMode\", {\n        /**\n         * The animation mode to open the speed dial. Can be 'fling' or 'scale'\n         */\n        get: function () {\n            return this._animationMode;\n        },\n        set: function (animationMode) {\n            var _this = this;\n            var previousAnimationMode = this._animationMode;\n            this._animationMode = animationMode;\n            if (previousAnimationMode !== this._animationMode) {\n                this._setElementClass(previousAnimationMode, false);\n                this._setElementClass(this.animationMode, true);\n                if (this.isInitialized) {\n                    // To start another detect lifecycle and force the \"close\" on the action buttons\n                    Promise.resolve(null).then(function () { return _this.open = false; });\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EcoFabSpeedDialComponent.prototype.ngAfterContentInit = function () {\n        this.isInitialized = true;\n        this.setActionsVisibility();\n        this._setElementClass(this.direction, true);\n        this._setElementClass(this.animationMode, true);\n    };\n    EcoFabSpeedDialComponent.prototype.ngOnDestroy = function () {\n        this._unsetDocumentClickListener();\n    };\n    /**\n     * Toggle the open state of this speed dial\n     */\n    EcoFabSpeedDialComponent.prototype.toggle = function () {\n        this.open = !this.open;\n    };\n    EcoFabSpeedDialComponent.prototype._onClick = function () {\n        if (!this.fixed && this.open) {\n            this.open = false;\n        }\n    };\n    EcoFabSpeedDialComponent.prototype.setActionsVisibility = function () {\n        if (!this._childActions) {\n            return;\n        }\n        if (this.open) {\n            this._childActions.show();\n        }\n        else {\n            this._childActions.hide();\n        }\n        this._processOutsideClickState();\n    };\n    EcoFabSpeedDialComponent.prototype._setElementClass = function (elemClass, isAdd) {\n        var finalClass = \"eco-\" + elemClass;\n        if (isAdd) {\n            this.renderer.addClass(this.elementRef.nativeElement, finalClass);\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, finalClass);\n        }\n    };\n    EcoFabSpeedDialComponent.prototype._processOutsideClickState = function () {\n        if (!this.fixed && this.open) {\n            this._setDocumentClickListener();\n        }\n        else {\n            this._unsetDocumentClickListener();\n        }\n    };\n    EcoFabSpeedDialComponent.prototype._setDocumentClickListener = function () {\n        var _this = this;\n        if (!this._documentClickUnlistener) {\n            this._documentClickUnlistener = this.renderer.listen(this.document, 'click', function () {\n                _this.open = false;\n            });\n        }\n    };\n    EcoFabSpeedDialComponent.prototype._unsetDocumentClickListener = function () {\n        if (this._documentClickUnlistener) {\n            this._documentClickUnlistener();\n            this._documentClickUnlistener = null;\n        }\n    };\n    EcoFabSpeedDialComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 },\n        { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    __decorate([\n        Input()\n    ], EcoFabSpeedDialComponent.prototype, \"fixed\", null);\n    __decorate([\n        HostBinding('class.eco-opened'),\n        Input()\n    ], EcoFabSpeedDialComponent.prototype, \"open\", null);\n    __decorate([\n        Input()\n    ], EcoFabSpeedDialComponent.prototype, \"direction\", null);\n    __decorate([\n        Input()\n    ], EcoFabSpeedDialComponent.prototype, \"animationMode\", null);\n    __decorate([\n        Output()\n    ], EcoFabSpeedDialComponent.prototype, \"openChange\", void 0);\n    __decorate([\n        ContentChild(EcoFabSpeedDialActionsComponent)\n    ], EcoFabSpeedDialComponent.prototype, \"_childActions\", void 0);\n    __decorate([\n        HostListener('click')\n    ], EcoFabSpeedDialComponent.prototype, \"_onClick\", null);\n    EcoFabSpeedDialComponent = __decorate([ __param(2, Inject(DOCUMENT))\n    ], EcoFabSpeedDialComponent);\nEcoFabSpeedDialComponent.ɵfac = function EcoFabSpeedDialComponent_Factory(t) { return new (t || EcoFabSpeedDialComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nEcoFabSpeedDialComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EcoFabSpeedDialComponent, selectors: [[\"eco-fab-speed-dial\"]], contentQueries: function EcoFabSpeedDialComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, EcoFabSpeedDialActionsComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._childActions = _t.first);\n    } }, hostVars: 2, hostBindings: function EcoFabSpeedDialComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function EcoFabSpeedDialComponent_click_HostBindingHandler() { return ctx._onClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"eco-opened\", ctx.open);\n    } }, inputs: { fixed: \"fixed\", open: \"open\", direction: \"direction\", animationMode: \"animationMode\" }, outputs: { openChange: \"openChange\" }, ngContentSelectors: _c3, decls: 3, vars: 0, consts: [[1, \"eco-fab-speed-dial-container\"]], template: function EcoFabSpeedDialComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:.6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:.3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:.3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialComponent, [{\n        type: Component,\n        args: [{\n                selector: 'eco-fab-speed-dial',\n                template: \"\\n        <div class=\\\"eco-fab-speed-dial-container\\\">\\n            <ng-content select=\\\"eco-fab-speed-dial-trigger\\\"></ng-content>\\n            <ng-content select=\\\"eco-fab-speed-dial-actions\\\"></ng-content>\\n        </div>\\n    \",\n                encapsulation: ViewEncapsulation.None,\n                styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:.6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:.3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:.3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: Document, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { openChange: [{\n            type: Output\n        }], fixed: [{\n            type: Input\n        }], open: [{\n            type: HostBinding,\n            args: ['class.eco-opened']\n        }, {\n            type: Input\n        }], direction: [{\n            type: Input\n        }], animationMode: [{\n            type: Input\n        }], _onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], _childActions: [{\n            type: ContentChild,\n            args: [EcoFabSpeedDialActionsComponent]\n        }] }); })();\n    return EcoFabSpeedDialComponent;\n}());\nvar EcoFabSpeedDialTriggerComponent = /** @class */ (function () {\n    function EcoFabSpeedDialTriggerComponent(injector) {\n        this.spin = false;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    Object.defineProperty(EcoFabSpeedDialTriggerComponent.prototype, \"sp\", {\n        /**\n         * Whether this trigger should spin (360dg) while opening the speed dial\n         */\n        get: function () {\n            return this.spin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EcoFabSpeedDialTriggerComponent.prototype._onClick = function (event) {\n        if (!this._parent.fixed) {\n            this._parent.toggle();\n            event.stopPropagation();\n        }\n    };\n    EcoFabSpeedDialTriggerComponent.ctorParameters = function () { return [\n        { type: Injector }\n    ]; };\n    __decorate([\n        HostBinding('class.eco-spin')\n    ], EcoFabSpeedDialTriggerComponent.prototype, \"sp\", null);\n    __decorate([\n        Input()\n    ], EcoFabSpeedDialTriggerComponent.prototype, \"spin\", void 0);\n    __decorate([\n        HostListener('click', ['$event'])\n    ], EcoFabSpeedDialTriggerComponent.prototype, \"_onClick\", null);\nEcoFabSpeedDialTriggerComponent.ɵfac = function EcoFabSpeedDialTriggerComponent_Factory(t) { return new (t || EcoFabSpeedDialTriggerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nEcoFabSpeedDialTriggerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EcoFabSpeedDialTriggerComponent, selectors: [[\"eco-fab-speed-dial-trigger\"]], hostVars: 2, hostBindings: function EcoFabSpeedDialTriggerComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function EcoFabSpeedDialTriggerComponent_click_HostBindingHandler($event) { return ctx._onClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"eco-spin\", ctx.sp);\n    } }, inputs: { spin: \"spin\" }, ngContentSelectors: _c5, decls: 1, vars: 0, template: function EcoFabSpeedDialTriggerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialTriggerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'eco-fab-speed-dial-trigger',\n                template: \"\\n        <ng-content select=\\\"[mat-fab]\\\"></ng-content>\"\n            }]\n    }], function () { return [{ type: ɵngcc0.Injector }]; }, { spin: [{\n            type: Input\n        }], sp: [{\n            type: HostBinding,\n            args: ['class.eco-spin']\n        }], _onClick: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\n    return EcoFabSpeedDialTriggerComponent;\n}());\n\nvar EcoFabSpeedDialModule = /** @class */ (function () {\n    function EcoFabSpeedDialModule() {\n    }\nEcoFabSpeedDialModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: EcoFabSpeedDialModule });\nEcoFabSpeedDialModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function EcoFabSpeedDialModule_Factory(t) { return new (t || EcoFabSpeedDialModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EcoFabSpeedDialModule, { declarations: function () { return [EcoFabSpeedDialActionsComponent,\n        EcoFabSpeedDialComponent,\n        EcoFabSpeedDialTriggerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [EcoFabSpeedDialActionsComponent,\n        EcoFabSpeedDialComponent,\n        EcoFabSpeedDialTriggerComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [\n                    EcoFabSpeedDialActionsComponent,\n                    EcoFabSpeedDialComponent,\n                    EcoFabSpeedDialTriggerComponent,\n                ],\n                exports: [\n                    EcoFabSpeedDialActionsComponent,\n                    EcoFabSpeedDialComponent,\n                    EcoFabSpeedDialTriggerComponent,\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return EcoFabSpeedDialModule;\n}());\n\n/*\n * Public API Surface of fab-speed-dial\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialModule, EcoFabSpeedDialTriggerComponent };\n\n//# sourceMappingURL=ecodev-fab-speed-dial.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from '../../shared/services/context';\r\nimport { DialogSettings } from '../models/dialog-settings.model';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getDialogSettings() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('app-sys/system/dialogsettings'), {\r\n      params: { appid: this.context.appId.toString() },\r\n    }) as Observable<DialogSettings>;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { ReplaceConfig } from '../../replace-content/models/replace-config.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\n@Injectable()\r\nexport class ContentGroupService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('app-sys/contentgroup/replace'), {\r\n      params: { appId: this.context.appId.toString(), guid: item.guid, part: item.part, index: item.index.toString() }\r\n    }) as Observable<ReplaceConfig>;\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl('app-sys/contentgroup/replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('app-sys/contentgroup/itemlist'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    }) as Observable<GroupHeader[]>;\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl('app-sys/contentgroup/itemlist'), resortedList, {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('app-sys/contentgroup/header'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid }\r\n    }) as Observable<GroupHeader>;\r\n  }\r\n\r\n}\r\n","export const defaultControllerName = 'MyController.cs';\r\nexport const defaultTemplateName = '_MyFile.cshtml';\r\nexport const defaultTokenName = 'MyFile.html';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { EavScopeOption } from '../../shared/constants/eav.constants';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    }) as Observable<ContentType>;\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/get'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    }) as Observable<ContentType[]>;\r\n  }\r\n\r\n  getScopes() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/scopes'), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map((scopes: { [key: string]: string }) => {\r\n        const scopeOptions: EavScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/createghost'), {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  getDetails(contentTypeName: string, config: { [key: string]: string }) {\r\n    return this.http.get(\r\n      this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/GetSingle'),\r\n      { params: { ...config, appid: this.context.appId.toString(), contentTypeStaticName: contentTypeName } }\r\n    ) as Observable<ContentType>;\r\n  }\r\n\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { ContentExport } from '../models/content-export.model';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class ContentExportService {\r\n  constructor(private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.dnnContext.$2sxc.http.apiUrl('eav/ContentExport/ExportContent')\r\n      + '?appId=' + this.context.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl('eav/ContentExport/DownloadTypeAsJson')\r\n      + '?appId=' + this.context.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl('eav/ContentExport/DownloadEntityAsJson')\r\n      + '?appId=' + this.context.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve((reader.result as string).split(',')[1]);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n","export const fieldNamePattern = /^[A-Za-z][A-Za-z0-9-]+$/;\r\nexport const fieldNameError = 'Standard letters, numbers and hyphens are allowed. Must start with a letter.';\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appMousedownStopPropagation]' })\r\nexport class MousedownStopPropagationDirective {\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-empty-route',\r\n  templateUrl: './empty-route.component.html',\r\n})\r\nexport class EmptyRouteComponent {\r\n  constructor() { }\r\n}\r\n","<router-outlet></router-outlet>\r\n","export class InputTypeConstants {\r\n    // String\r\n    public static readonly StringDefault = 'string-default';\r\n    public static readonly StringUrlPath = 'string-url-path';\r\n    public static readonly StringDropdown = 'string-dropdown';\r\n    public static readonly StringDropdownQuery = 'string-dropdown-query';\r\n    public static readonly StringFontIconPicker = 'string-font-icon-picker';\r\n    public static readonly StringTemplatePicker = 'string-template-picker';\r\n    public static readonly StringWysiwyg = 'string-wysiwyg';\r\n    // Boolean\r\n    public static readonly BooleanDefault = 'boolean-default';\r\n    // DateTime\r\n    public static readonly DatetimeDefault = 'datetime-default';\r\n    // Empty\r\n    public static readonly EmptyDefault = 'empty-default';\r\n    // Number\r\n    public static readonly NumberDefault = 'number-default';\r\n    // Entity\r\n    public static readonly EntityDefault = 'entity-default';\r\n    public static readonly EntityQuery = 'entity-query';\r\n    public static readonly EntityContentBlocks = 'entity-content-blocks';\r\n    // Hyperlink\r\n    public static readonly HyperlinkDefault = 'hyperlink-default';\r\n    public static readonly HyperlinkLibrary = 'hyperlink-library';\r\n    // Custom\r\n    public static readonly ExternalWebComponent = 'external-web-component';\r\n    public static readonly CustomGPS = 'custom-gps';\r\n    public static readonly CustomDefault = 'custom-default';\r\n    // Old\r\n    public static readonly OldTypeDropdown = 'dropdown';\r\n    public static readonly OldTypeWysiwyg = 'wysiwyg';\r\n    public static readonly OldTypeDefault = 'default';\r\n    public static readonly StringWysiwygTinymce = 'string-wysiwyg-tinymce';\r\n    public static readonly StringWysiwygAdv = 'string-wysiwyg-adv';\r\n    public static readonly StringWysiwygDnn = 'string-wysiwyg-dnn';\r\n    // Default\r\n    public static readonly DefaultSuffix = '-default';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param typeId metadataOf something. For more info checkout out eavConstants file\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of content type for which we search for permissions. Key is connected with keyType\r\n   * @param contentTypeName name of content type where permissions are stored\r\n   */\r\n  getMetadata(typeId: number, keyType: string, key: string, contentTypeName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/metadata/get'), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: typeId.toString(),\r\n        keyType,\r\n        key,\r\n        contentType: contentTypeName,\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}