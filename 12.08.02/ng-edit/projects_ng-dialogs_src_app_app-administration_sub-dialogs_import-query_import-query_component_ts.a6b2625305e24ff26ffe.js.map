{"version":3,"sources":["./projects/ng-dialogs/src/app/app-administration/sub-dialogs/import-query/import-query.component.html","./projects/ng-dialogs/src/app/app-administration/sub-dialogs/import-query/import-query.component.ts"],"names":["dialogData","dialogRef","pipelinesService","snackBar","hostClass","isImporting$","importFile$","importResult$","templateVars$","this","pipe","isImporting","importFile","importResult","ngOnInit","files","next","importQuery","ngOnDestroy","complete","closeDialog","close","filesDropped","fileChange","event","target","value","subscribe","result","Success","Messages","error","open","duration","ImportQueryComponent"],"mappings":"0ZAOE,0B,sBAYE,kBACE,oFACF,S,sBACA,kBACE,6EACF,S,8HACA,kBAKE,SACF,S,uBAN4E,kFAK1E,gC,yBAZJ,kBACE,wBAGA,wBAGA,wBAOF,S,wBAbQ,8CAGA,+CAGmB,mD,sCAUzB,SACE,qBAA0B,kEAAwB,kBAAM,QACxD,qBACE,kEACA,oBACF,QACF,Q,2BAJ2C,2E,sCAK3C,SACE,qBAAyC,kEAAwB,iBAAK,QACxE,S,sCA5CJ,iBAAgD,2EAG9C,iBACE,iBAA8B,wBAAY,QAC5C,QAEA,+BAEA,eAA8B,oEAAwD,QAEtF,eACE,oBAAkF,mDAAS,UACzF,gBAAM,UAAoE,QAC5E,QACA,sBAA8B,mEAA9B,QACF,QAEA,wBAgBA,mBACE,kCAOA,kCAGF,QACF,Q,qBA9CoB,iCAOJ,qCAKwC,yCAC5C,qEAKqE,sCAiB9D,uEAOA,yEChCnB,iBAeE,WACmCA,EACzBC,EACAC,EACAC,GAHyB,KAAAH,aACzB,KAAAC,YACA,KAAAC,mBACA,KAAAC,WAbgB,KAAAC,UAAY,mBAE9B,KAAAC,aAAe,IAAI,KAAgB,GACnC,KAAAC,YAAc,IAAI,IAAsB,MACxC,KAAAC,cAAgB,IAAI,IAAiC,MAC7D,KAAAC,eAAgB,QAAc,CAACC,KAAKJ,aAAcI,KAAKH,YAAaG,KAAKF,gBAAgBG,MACvF,OAAI,SAAC,G,IAAA,gBAA4C,OAAGC,YAAnC,KAAgDC,WAApC,KAAgDC,aAAlC,S,OAU7C,YAAAC,SAAA,WAC+B,MAAzBL,KAAKT,WAAWe,QAClBN,KAAKH,YAAYU,KAAKP,KAAKT,WAAWe,MAAM,IAC5CN,KAAKQ,gBAIT,YAAAC,YAAA,WACET,KAAKJ,aAAac,WAClBV,KAAKH,YAAYa,WACjBV,KAAKF,cAAcY,YAGrB,YAAAC,YAAA,WACEX,KAAKR,UAAUoB,SAGjB,YAAAC,aAAA,SAAaP,GAEXN,KAAKH,YAAYU,KADED,EAAM,IAEzBN,KAAKF,cAAcS,KAAK,MACxBP,KAAKQ,eAGP,YAAAM,WAAA,SAAWC,GAETf,KAAKH,YAAYU,KADGQ,EAAMC,OAA4BV,MAAM,IAE5DN,KAAKF,cAAcS,KAAK,OAG1B,YAAAC,YAAA,sBACER,KAAKJ,aAAaW,MAAK,GACvBP,KAAKP,iBAAiBe,YAAYR,KAAKH,YAAYoB,OAAOC,UAAU,CAClEX,KAAM,SAAAY,GACJ,EAAKvB,aAAaW,MAAK,GACvB,EAAKT,cAAcS,KAAK,CACtBa,SAAS,EACTC,SAAU,MAGdC,MAAO,SAACA,GACN,EAAK1B,aAAaW,MAAK,GACvB,EAAKT,cAAcS,KAAK,MACxB,EAAKb,SAAS6B,KAAK,2DAA4D,KAAM,CAAEC,SAAU,U,sCA5D5FC,GAAoB,MAWrB,MAAe,sC,wBAXdA,EAAoB,4E,6nCDfjC,wB,uBACG,0C,sICSH","file":"projects_ng-dialogs_src_app_app-administration_sub-dialogs_import-query_import-query_component_ts.a6b2625305e24ff26ffe.js","sourcesContent":["<div appDragAndDrop [allowedFileTypes]=\"'json'\" (filesDropped)=\"filesDropped($event)\"\r\n  *ngIf=\"(templateVars$ | async) as data\">\r\n\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">Import Query</div>\r\n  </div>\r\n\r\n  <mat-spinner *ngIf=\"data.isImporting\" mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n\r\n  <p class=\"dialog-description\">Select a query file (json) from your computer to import.</p>\r\n\r\n  <div>\r\n    <button mat-raised-button tippy=\"Open file browser\" [disabled]=\"data.isImporting\" (click)=\"fileInput.click()\">\r\n      <span>{{ data.importFile ? data.importFile.name : 'Select or drop file' }}</span>\r\n    </button>\r\n    <input #fileInput type=\"file\" (change)=\"fileChange($event)\" class=\"hide\" />\r\n  </div>\r\n\r\n  <div class=\"dialog-component-content fancy-scrollbar-light import-result-box\" *ngIf=\"data.importResult\">\r\n    <div *ngIf=\"data.importResult.Success\" class=\"sxc-message sxc-message-info\">\r\n      The import has been done. See the messages below for more information.\r\n    </div>\r\n    <div *ngIf=\"!data.importResult.Success\" class=\"sxc-message sxc-message-error\">\r\n      The import failed. See the messages below for more information.\r\n    </div>\r\n    <div *ngFor=\"let message of data.importResult.Messages\" class=\"sxc-message\" [ngClass]=\"{\r\n      'sxc-message-warning': message.MessageType === 0,\r\n      'sxc-message-success': message.MessageType === 1,\r\n      'sxc-message-error': message.MessageType === 2\r\n    }\">\r\n      {{ message.Text }}\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"dialog-component-actions\">\r\n    <ng-container *ngIf=\"!data.importResult?.Success\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button color=\"accent\" [disabled]=\"!data.importFile || data.isImporting || !!data.importResult\"\r\n        (click)=\"importQuery()\">\r\n        Import\r\n      </button>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"data.importResult?.Success\">\r\n      <button mat-raised-button color=\"accent\" (click)=\"closeDialog()\">Close</button>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImportAppResult } from '../../../import-app/models/import-app-result.model';\r\nimport { PipelinesService } from '../../services/pipelines.service';\r\nimport { ImportQueryDialogData } from './import-query-dialog.config';\r\n\r\n@Component({\r\n  selector: 'app-import-query',\r\n  templateUrl: './import-query.component.html',\r\n  styleUrls: ['./import-query.component.scss'],\r\n})\r\nexport class ImportQueryComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  private isImporting$ = new BehaviorSubject(false);\r\n  private importFile$ = new BehaviorSubject<File>(null);\r\n  private importResult$ = new BehaviorSubject<ImportAppResult>(null);\r\n  templateVars$ = combineLatest([this.isImporting$, this.importFile$, this.importResult$]).pipe(\r\n    map(([isImporting, importFile, importResult]) => ({ isImporting, importFile, importResult })),\r\n  );\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: ImportQueryDialogData,\r\n    private dialogRef: MatDialogRef<ImportQueryComponent>,\r\n    private pipelinesService: PipelinesService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.dialogData.files != null) {\r\n      this.importFile$.next(this.dialogData.files[0]);\r\n      this.importQuery();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.isImporting$.complete();\r\n    this.importFile$.complete();\r\n    this.importResult$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    this.importFile$.next(importFile);\r\n    this.importResult$.next(null);\r\n    this.importQuery();\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    const importFile = (event.target as HTMLInputElement).files[0];\r\n    this.importFile$.next(importFile);\r\n    this.importResult$.next(null);\r\n  }\r\n\r\n  importQuery() {\r\n    this.isImporting$.next(true);\r\n    this.pipelinesService.importQuery(this.importFile$.value).subscribe({\r\n      next: result => {\r\n        this.isImporting$.next(false);\r\n        this.importResult$.next({\r\n          Success: true,\r\n          Messages: [],\r\n        });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.isImporting$.next(false);\r\n        this.importResult$.next(null);\r\n        this.snackBar.open('Import failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}