{"version":3,"file":"default-projects_eav-ui_src_app_shared_shared-components_module_ts.48e47ecdf0685120.js","mappings":"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","names":["SharedComponentsModule","static","this","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","a4G","s3X","provide","MAT_FORM_FIELD_DEFAULT_OPTIONS","useValue","subscriptSizing","imports","RouterModule","CommonModule","MatFormFieldModule","FormsModule","MatRadioModule","MatRippleModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatButtonModule","MatDialogModule","BreadcrumbModule","_c0","MatProgressSpinner_ng_template_0_Template","rf","ctx","i0","ctx_r0","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","_MatProgressSpinnerBase","mixinColor","constructor","_elementRef","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","MatProgressSpinner","elementRef","animationMode","defaults","super","mode","nativeElement","nodeName","toLowerCase","_value","_diameter","_noopAnimations","_forceAnimations","color","defaultColor","strokeWidth","value","v","Math","max","min","coerceNumberProperty","size","_strokeWidth","viewBox","PI","_strokeDashOffset","ɵfac","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","viewQuery","_t","_determinateCircle","first","hostAttrs","hostVars","hostBindings","inputs","exportAs","features","decls","vars","consts","template","_r1","dependencies","i1","styles","encapsulation","changeDetection","ɵmod","ɵinj","MatCommonModule","_c1","nextUniqueId","MatRadioChange","source","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatRadioGroup","multi","MAT_RADIO_GROUP","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","name","_name","_updateRadioButtonNames","labelPosition","_labelPosition","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","_selected","checked","selected","disabled","_disabled","coerceBooleanProperty","required","_required","_changeDetector","_isInitialized","_controlValueAccessorChangeFn","onTouched","change","EventEmitter","ngAfterContentInit","_buttonChanges","_radios","changes","subscribe","find","radio","ngOnDestroy","unsubscribe","_touch","forEach","_markForCheck","_emitChangeEvent","emit","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ɵdir","contentQueries","dirIndex","MatRadioButton","outputs","MatRadioButtonBase","_MatRadioButtonMixinBase","mixinDisableRipple","mixinTabIndex","_checked","newCheckedState","radioGroup","_radioDispatcher","notify","id","_setDisabled","_color","_providerOverride","inputId","_uniqueId","_focusMonitor","tabIndex","_removeUniqueSelectionListener","focus","options","origin","focusVia","_inputElement","ngOnInit","listen","ngDoCheck","_updateTabIndex","ngAfterViewInit","monitor","focusOrigin","stopMonitoring","_isRippleDisabled","disableRipple","_onInputClick","event","stopPropagation","_onInputInteraction","groupValueChanged","_onTouchTargetClick","group","_previousTabIndex","input","setAttribute","i2","ariaLabel","ariaLabelledby","ariaDescribedby","ngContentSelectors","$event","_r0","i3","BreadcrumbComponent_ng_container_2_a_2_ng_container_1_Template","BreadcrumbComponent_ng_container_2_a_2_ng_container_2_Template","breadcrumb_r1","$implicit","label","a0","a1","a2","a3","a4","a5","info","last","index","count","BreadcrumbComponent_ng_container_2_a_2_Template","ctx_r12","isLast_r2","isFirst_r3","index_r4","count_r5","ctx_r6","disable","routeInterceptor","routeLink","preserveQueryParams","queryParams","undefined","preserveFragment","fragment","anchorTarget","itemTemplate","BreadcrumbComponent_ng_container_2_label_3_ng_container_1_Template","BreadcrumbComponent_ng_container_2_label_3_ng_container_2_Template","BreadcrumbComponent_ng_container_2_label_3_Template","ctx_r16","ctx_r7","BreadcrumbComponent_ng_container_2_li_4_ng_container_1_Template","BreadcrumbComponent_ng_container_2_li_4_ng_container_2_Template","ctx_r18","separator","BreadcrumbComponent_ng_container_2_li_4_Template","ctx_r8","separatorTemplate","BreadcrumbComponent_ng_container_2_Template","BreadcrumbItemDirective","isNonEmpty","obj","Object","keys","length","BreadcrumbService","activatedRoute","router","baseHref","dynamicBreadcrumbStore","currentBreadcrumbs","previousBreadcrumbs","breadcrumbs","BehaviorSubject","breadcrumbs$","asObservable","detectRouteChanges","setupBreadcrumbs","snapshot","events","pipe","filter","GuardsCheckEnd","shouldActivate","state","root","activatedRouteSnapshot","rootBreadcrumb","getRootBreadcrumb","prepareBreadcrumbList","rootConfig","config","path","extractObject","data","breadcrumb","storeItem","getFromStore","alias","getQueryParamsFromPreviousList","prepareBreadcrumbItem","routeLinkPrefix","parseRouteData","routeConfig","resolvedSegment","resolvePathSegment","extractLabel","isAutoGeneratedLabel","autoGeneratedLabel","breadcrumbItem","push","firstChild","setQueryParamsForActiveBreadcrumb","breadcrumbsToShow","item","skip","next","matchRegex","routeRegex","match","RegExp","segment","includes","entries","params","key","replace","lastItem","mergeWithBaseChildData","baseChild","loadChildren","_loadedRoutes","route","children","childConfig","set","breadcrumbObject","updateArgs","startsWith","slice","buildRegex","ensureLeadingSlash","updateStore","updateCurrentBreadcrumbs","storeItemIndex","findIndex","itemIndex","resolvedParam","ɵprov","token","BreadcrumbComponent","breadcrumbService","activateRoute","_separator","autoGenerate","class","setupMessage","someParameterValue","setupComponent","someParam","TemplateRef","Date","map"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/shared-components.module.ts","./node_modules/@angular/material/fesm2022/progress-spinner.mjs","./node_modules/@angular/material/fesm2022/radio.mjs","./node_modules/xng-breadcrumb/fesm2020/xng-breadcrumb.mjs"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BooleanFilterComponent } from './components/boolean-filter/boolean-filter.component';\r\nimport { DialogEntryComponent } from './components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from './components/empty-route/empty-route.component';\r\nimport { EntityFilterComponent } from './components/entity-filter/entity-filter.component';\r\nimport { FieldHintComponent } from './components/field-hint/field-hint.component';\r\nimport { FileUploadDialogComponent } from './components/file-upload-dialog/file-upload-dialog.component';\r\nimport { IdFieldComponent } from './components/id-field/id-field.component';\r\nimport { ClickStopPropagationDirective } from './directives/click-stop-propagation.directive';\r\nimport { DragAndDropDirective } from './directives/drag-and-drop.directive';\r\nimport { MatFormFieldTextareaDirective } from './directives/mat-form-field-textarea.directive';\r\nimport { MatInputAutofocusDirective } from './directives/mat-input-autofocus.directive';\r\nimport { MousedownStopPropagationDirective } from './directives/mousedown-stop-propagation.directive';\r\nimport { TippyDirective } from './directives/tippy.directive';\r\nimport { ToggleDebugDirective } from './directives/toggle-debug.directive';\r\nimport { SafeHtmlPipe } from './pipes/safe-html.pipe';\r\nimport { SafeResourceUrlPipe } from './pipes/safe-resource-url';\r\nimport { AgBoolIconRenderer } from './ag-grid/apps-list-show/ag-bool-icon-renderer.component';\r\nimport { BreadcrumbModule } from 'xng-breadcrumb';\r\nimport { NavItemListComponent } from './components/nav-item-list/nav-item-list.component';\r\n\r\n\r\n\r\n/** Stuff that is shared and only has to be initialized once */\r\n@NgModule({\r\n  declarations: [\r\n    // AG Grid Components - started creation by 2dm to be more generic / less code 2023-06-19\r\n    AgBoolIconRenderer,\r\n\r\n\r\n    EmptyRouteComponent,\r\n    DialogEntryComponent,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n    DragAndDropDirective,\r\n    MousedownStopPropagationDirective,\r\n    BooleanFilterComponent,\r\n    IdFieldComponent,\r\n    SafeHtmlPipe,\r\n    SafeResourceUrlPipe,\r\n    ToggleDebugDirective,\r\n    MatFormFieldTextareaDirective,\r\n    TippyDirective,\r\n    EntityFilterComponent,\r\n    MatInputAutofocusDirective,\r\n    FileUploadDialogComponent,\r\n    NavItemListComponent\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    BreadcrumbModule,\r\n\r\n\r\n  ],\r\n  providers: [\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { subscriptSizing: 'dynamic' } }\r\n  ],\r\n  exports: [\r\n    EmptyRouteComponent,\r\n    DialogEntryComponent,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n    DragAndDropDirective,\r\n    MousedownStopPropagationDirective,\r\n    BooleanFilterComponent,\r\n    SafeHtmlPipe,\r\n    SafeResourceUrlPipe,\r\n    ToggleDebugDirective,\r\n    MatFormFieldTextareaDirective,\r\n    TippyDirective,\r\n    EntityFilterComponent,\r\n    MatInputAutofocusDirective,\r\n    FileUploadDialogComponent,\r\n    BreadcrumbModule,\r\n    NavItemListComponent\r\n  ],\r\n})\r\nexport class SharedComponentsModule { }\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// Boilerplate for applying mixins to MatProgressBar.\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, animationMode, defaults) {\n        super(elementRef);\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = this._elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n            ? 'indeterminate'\n            : 'determinate';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this.defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(v)));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatProgressSpinner, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: \"value\", diameter: \"diameter\", strokeWidth: \"strokeWidth\" }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], usesInheritance: true, ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"], dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }], propDecorators: { _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], diameter: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatProgressSpinnerModule, declarations: [MatProgressSpinner, MatSpinner], imports: [CommonModule], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                    declarations: [MatProgressSpinner, MatSpinner],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import * as i0 from '@angular/core';\nimport { forwardRef, InjectionToken, EventEmitter, Directive, Output, ContentChildren, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, ViewChild, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/collections';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/** Change event object emitted by radio button and radio group. */\nclass MatRadioChange {\n    constructor(\n    /** The radio button that emits the change event. */\n    source, \n    /** The value of the radio button. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true,\n};\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY,\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n    };\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() {\n        return this._selected;\n    }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n        // Clear the `selected` button when it's destroyed since the tabindex of the rest of the\n        // buttons depends on it. Note that we don't clear the `value`, because the radio button\n        // may be swapped out with a similar one and there are some internal apps that depend on\n        // that behavior.\n        this._buttonChanges = this._radios.changes.subscribe(() => {\n            if (this.selected && !this._radios.find(radio => radio === this.selected)) {\n                this._selected = null;\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._buttonChanges?.unsubscribe();\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatRadioGroup, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatRadioGroup, selector: \"mat-radio-group\", inputs: { color: \"color\", name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\" }, outputs: { change: \"change\" }, host: { attributes: { \"role\": \"radiogroup\" }, classAttribute: \"mat-mdc-radio-group\" }, providers: [\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ], queries: [{ propertyName: \"_radios\", predicate: i0.forwardRef(() => MatRadioButton), descendants: true }], exportAs: [\"matRadioGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatRadioGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [\n                        MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                        { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                    ],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-mdc-radio-group',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { change: [{\n                type: Output\n            }], _radios: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatRadioButton), { descendants: true }]\n            }], color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }] } });\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\nclass MatRadioButton extends _MatRadioButtonMixinBase {\n    /** Whether this radio button is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        // As per Material design specifications the selection control radio should use the accent color\n        // palette by default. https://material.io/guidelines/components/selection-controls.html\n        return (this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            (this._providerOverride && this._providerOverride.color) ||\n            'accent');\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n    }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n        this._removeUniqueSelectionListener = this._radioDispatcher.listen((id, name) => {\n            if (id !== this.id && name === this.name) {\n                this.checked = false;\n            }\n        });\n    }\n    ngDoCheck() {\n        this._updateTabIndex();\n    }\n    ngAfterViewInit() {\n        this._updateTabIndex();\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        if (!this.checked && !this.disabled) {\n            const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n            this.checked = true;\n            this._emitChangeEvent();\n            if (this.radioGroup) {\n                this.radioGroup._controlValueAccessorChangeFn(this.value);\n                if (groupValueChanged) {\n                    this.radioGroup._emitChangeEvent();\n                }\n            }\n        }\n    }\n    /** Triggered when the user clicks on the touch target. */\n    _onTouchTargetClick(event) {\n        this._onInputInteraction(event);\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Gets the tabindex for the underlying input element. */\n    _updateTabIndex() {\n        const group = this.radioGroup;\n        let value;\n        // Implement a roving tabindex if the button is inside a group. For most cases this isn't\n        // necessary, because the browser handles the tab order for inputs inside a group automatically,\n        // but we need an explicitly higher tabindex for the selected button in order for things like\n        // the focus trap to pick it up correctly.\n        if (!group || !group.selected || this.disabled) {\n            value = this.tabIndex;\n        }\n        else {\n            value = group.selected === this ? this.tabIndex : -1;\n        }\n        if (value !== this._previousTabIndex) {\n            // We have to set the tabindex directly on the DOM node, because it depends on\n            // the selected state which is prone to \"changed after checked errors\".\n            const input = this._inputElement?.nativeElement;\n            if (input) {\n                input.setAttribute('tabindex', value + '');\n                this._previousTabIndex = value;\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatRadioButton, deps: [{ token: MAT_RADIO_GROUP, optional: true }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i2.UniqueSelectionDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RADIO_DEFAULT_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.4\", type: MatRadioButton, selector: \"mat-radio-button\", inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"_inputElement.nativeElement.focus()\" }, properties: { \"attr.id\": \"id\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.mat-mdc-radio-checked\": \"checked\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" }, classAttribute: \"mat-mdc-radio-button\" }, viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }], exportAs: [\"matRadioButton\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-form-field\\\" #formField\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\">\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-radio-touch-target\\\" (click)=\\\"_onTouchTargetClick($event)\\\"></div>\\n    <input #input class=\\\"mdc-radio__native-control\\\" type=\\\"radio\\\"\\n           [id]=\\\"inputId\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [required]=\\\"required\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInputInteraction($event)\\\">\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-mdc-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"formField\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\">\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n  <label class=\\\"mdc-label\\\" [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color}.mdc-radio[hidden]{display:none}.mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1}.mdc-radio--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-radio--touch .mdc-radio__native-control{top:calc((40px - 48px) / 2);right:calc((40px - 48px) / 2);left:calc((40px - 48px) / 2);width:48px;height:48px}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{border-color:CanvasText}}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{border-color:CanvasText}}.mdc-radio__native-control:checked+.mdc-radio__background,.mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio--disabled{cursor:default;pointer-events:none}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:disabled+.mdc-radio__background,[aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background{cursor:default}.mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{padding:calc((var(--mdc-radio-state-layer-size) - 20px) / 2)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{top:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);left:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control{top:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);right:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);left:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color)}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple .mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, black)}.mat-mdc-radio-button.cdk-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}[dir=rtl] .mat-mdc-radio-touch-target{left:0;right:50%;transform:translate(50%, -50%)}\"], dependencies: [{ kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatRadioButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-radio-button', host: {\n                        'class': 'mat-mdc-radio-button',\n                        '[attr.id]': 'id',\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.mat-mdc-radio-checked]': 'checked',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    }, inputs: ['disableRipple', 'tabIndex'], exportAs: 'matRadioButton', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mdc-form-field\\\" #formField\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\">\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-radio-touch-target\\\" (click)=\\\"_onTouchTargetClick($event)\\\"></div>\\n    <input #input class=\\\"mdc-radio__native-control\\\" type=\\\"radio\\\"\\n           [id]=\\\"inputId\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [required]=\\\"required\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInputInteraction($event)\\\">\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-mdc-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"formField\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\">\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n  <label class=\\\"mdc-label\\\" [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color}.mdc-radio[hidden]{display:none}.mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1}.mdc-radio--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-radio--touch .mdc-radio__native-control{top:calc((40px - 48px) / 2);right:calc((40px - 48px) / 2);left:calc((40px - 48px) / 2);width:48px;height:48px}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{border-color:CanvasText}}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{border-color:CanvasText}}.mdc-radio__native-control:checked+.mdc-radio__background,.mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio--disabled{cursor:default;pointer-events:none}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:disabled+.mdc-radio__background,[aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background{cursor:default}.mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{padding:calc((var(--mdc-radio-state-layer-size) - 20px) / 2)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{top:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);left:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control{top:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);right:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);left:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color)}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple .mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, black)}.mat-mdc-radio-button.cdk-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}[dir=rtl] .mat-mdc-radio-touch-target{left:0;right:50%;transform:translate(50%, -50%)}\"] }]\n        }], ctorParameters: () => [{ type: MatRadioGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RADIO_GROUP]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.UniqueSelectionDispatcher }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RADIO_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], checked: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }] } });\n\nclass MatRadioModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatRadioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: MatRadioModule, declarations: [MatRadioGroup, MatRadioButton], imports: [MatCommonModule, CommonModule, MatRippleModule], exports: [MatCommonModule, MatRadioGroup, MatRadioButton] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatRadioModule, imports: [MatCommonModule, CommonModule, MatRippleModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MatRadioModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule, MatRippleModule],\n                    exports: [MatCommonModule, MatRadioGroup, MatRadioButton],\n                    declarations: [MatRadioGroup, MatRadioButton],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule };\n","import * as i0 from '@angular/core';\nimport { Directive, Injectable, TemplateRef, Component, ViewEncapsulation, ContentChild, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { GuardsCheckEnd, RouterModule } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * This directive is used to customize the breadcrumb label behavior\n * *xngBreadcrumbItem directive can be used in the child element of xng-breadcrumb\n * Usage: refer to the demo - app.component.html\n */\nclass BreadcrumbItemDirective {\n}\nBreadcrumbItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbItemDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nBreadcrumbItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: BreadcrumbItemDirective, selector: \"[xngBreadcrumbItem]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbItemDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[xngBreadcrumbItem]',\n                }]\n        }] });\n\nconst PATH_PARAM = {\n    PREFIX: ':',\n    REGEX_IDENTIFIER: '/:[^/]+',\n    REGEX_REPLACER: '/[^/]+',\n};\nconst ALIAS_PREFIX = '@';\nconst isNonEmpty = (obj) => {\n    return obj && Object.keys(obj).length > 0;\n};\nclass BreadcrumbService {\n    constructor(activatedRoute, router) {\n        this.activatedRoute = activatedRoute;\n        this.router = router;\n        this.baseHref = '/';\n        /**\n         * dynamicBreadcrumbStore holds information about dynamically updated breadcrumbs.\n         * Breadcrumbs can be set from anywhere (component, service) in the app.\n         * On every breadcrumb update check this store and use the info if available.\n         */\n        this.dynamicBreadcrumbStore = [];\n        /**\n         * breadcrumbList for the current route\n         * When breadcrumb info is changed dynamically, check if the currentBreadcrumbs is effected\n         * If effected, update the change and emit a new stream\n         */\n        this.currentBreadcrumbs = [];\n        this.previousBreadcrumbs = [];\n        /**\n         * Breadcrumbs observable to be subscribed by BreadcrumbComponent\n         * Emits on every route change OR dynamic update of breadcrumb\n         */\n        this.breadcrumbs = new BehaviorSubject([]);\n        this.breadcrumbs$ = this.breadcrumbs.asObservable();\n        this.detectRouteChanges();\n    }\n    /**\n     * Whenever route changes build breadcrumb list again\n     */\n    detectRouteChanges() {\n        // Special case where breadcrumb service & component instantiates after a route is navigated.\n        // Ex: put breadcrumbs within *ngIf and this.router.events would be empty\n        // This check is also required where  { initialNavigation: 'enabledBlocking' } is applied to routes\n        this.setupBreadcrumbs(this.activatedRoute.snapshot);\n        this.router.events\n            .pipe(filter((event) => event instanceof GuardsCheckEnd))\n            .subscribe((event) => {\n            // activatedRoute doesn't carry data when shouldReuseRoute returns false\n            // use the event data with GuardsCheckEnd as workaround\n            // Check for shouldActivate in case where the authGuard returns false the breadcrumbs shouldn't be changed\n            if (event.shouldActivate) {\n                this.setupBreadcrumbs(event.state.root);\n            }\n        });\n    }\n    setupBreadcrumbs(activatedRouteSnapshot) {\n        this.previousBreadcrumbs = this.currentBreadcrumbs;\n        // breadcrumb label for base OR root path. Usually, this can be set as 'Home'\n        const rootBreadcrumb = this.getRootBreadcrumb();\n        this.currentBreadcrumbs = rootBreadcrumb ? [rootBreadcrumb] : [];\n        this.prepareBreadcrumbList(activatedRouteSnapshot, this.baseHref);\n    }\n    getRootBreadcrumb() {\n        const rootConfig = this.router.config.find((config) => config.path === '');\n        const rootBreadcrumb = this.extractObject(rootConfig?.data?.breadcrumb);\n        const storeItem = this.getFromStore(rootBreadcrumb.alias, '/');\n        if (isNonEmpty(rootBreadcrumb) || isNonEmpty(storeItem)) {\n            return {\n                ...storeItem,\n                ...rootBreadcrumb,\n                routeLink: this.baseHref,\n                ...this.getQueryParamsFromPreviousList('/'),\n            };\n        }\n    }\n    prepareBreadcrumbItem(activatedRouteSnapshot, routeLinkPrefix) {\n        const { path, breadcrumb } = this.parseRouteData(activatedRouteSnapshot.routeConfig);\n        const resolvedSegment = this.resolvePathSegment(path, activatedRouteSnapshot);\n        const routeLink = `${routeLinkPrefix}${resolvedSegment}`;\n        const storeItem = this.getFromStore(breadcrumb.alias, routeLink);\n        const label = this.extractLabel(storeItem?.label || breadcrumb?.label, resolvedSegment);\n        let isAutoGeneratedLabel = false;\n        let autoGeneratedLabel = '';\n        if (!label) {\n            isAutoGeneratedLabel = true;\n            autoGeneratedLabel = resolvedSegment;\n        }\n        return {\n            ...storeItem,\n            ...breadcrumb,\n            label: isAutoGeneratedLabel ? autoGeneratedLabel : label,\n            routeLink,\n            isAutoGeneratedLabel,\n            ...this.getQueryParamsFromPreviousList(routeLink),\n        };\n    }\n    prepareBreadcrumbList(activatedRouteSnapshot, routeLinkPrefix) {\n        if (activatedRouteSnapshot.routeConfig?.path) {\n            const breadcrumbItem = this.prepareBreadcrumbItem(activatedRouteSnapshot, routeLinkPrefix);\n            this.currentBreadcrumbs.push(breadcrumbItem);\n            if (activatedRouteSnapshot.firstChild) {\n                return this.prepareBreadcrumbList(activatedRouteSnapshot.firstChild, breadcrumbItem.routeLink + '/');\n            }\n        }\n        else if (activatedRouteSnapshot.firstChild) {\n            return this.prepareBreadcrumbList(activatedRouteSnapshot.firstChild, routeLinkPrefix);\n        }\n        const lastCrumb = this.currentBreadcrumbs[this.currentBreadcrumbs.length - 1];\n        this.setQueryParamsForActiveBreadcrumb(lastCrumb, activatedRouteSnapshot);\n        // remove breadcrumb items that needs to be hidden\n        const breadcrumbsToShow = this.currentBreadcrumbs.filter((item) => !item.skip);\n        this.breadcrumbs.next(breadcrumbsToShow);\n    }\n    getFromStore(alias, routeLink) {\n        return this.dynamicBreadcrumbStore.find((item) => {\n            return ((alias && alias === item.alias) ||\n                (routeLink && routeLink === item.routeLink) ||\n                this.matchRegex(routeLink, item.routeRegex));\n        });\n    }\n    /**\n     * use exact match instead of regexp.test\n     * for /mentor/[^/]+ we should match '/mentor/12' but not '/mentor/12/abc'\n     */\n    matchRegex(routeLink, routeRegex) {\n        const match = routeLink.match(new RegExp(routeRegex));\n        return match?.[0] === routeLink;\n    }\n    /**\n     * if the path segment has route params, read the param value from url\n     * for each segment of route this gets called\n     *\n     * for mentor/:id/view - it gets called with mentor, :id, view 3 times\n     */\n    resolvePathSegment(segment, activatedRouteSnapshot) {\n        //quirk -segment can be defined as view/:id in route config in which case you need to make it view/<resolved-param>\n        if (segment.includes(PATH_PARAM.PREFIX)) {\n            Object.entries(activatedRouteSnapshot.params).forEach(([key, value]) => {\n                segment = segment.replace(`:${key}`, `${value}`);\n            });\n        }\n        return segment;\n    }\n    /**\n     * queryParams & fragments for previous breadcrumb path are copied over to new list\n     */\n    getQueryParamsFromPreviousList(routeLink) {\n        const { queryParams, fragment } = this.previousBreadcrumbs.find((item) => item.routeLink === routeLink) ||\n            {};\n        return { queryParams, fragment };\n    }\n    /**\n     * set current activated route query params to the last breadcrumb item\n     */\n    setQueryParamsForActiveBreadcrumb(lastItem, activatedRouteSnapshot) {\n        if (lastItem) {\n            const { queryParams, fragment } = activatedRouteSnapshot;\n            lastItem.queryParams = queryParams ? { ...queryParams } : undefined;\n            lastItem.fragment = fragment;\n        }\n    }\n    /**\n     * For a specific route, breadcrumb can be defined either on parent OR it's child(which has empty path)\n     * When both are defined, child takes precedence\n     *\n     * Ex: Below we are setting breadcrumb on both parent and child.\n     * So, child takes precedence and \"Defined On Child\" is displayed for the route 'home'\n     * { path: 'home', loadChildren: () => import('./home/home.module').then((m) => m.HomeModule) , data: {breadcrumb: \"Defined On Module\"}}\n     *                                                AND\n     * children: [\n     *   { path: '', component: ShowUserComponent, data: {breadcrumb: \"Defined On Child\" }\n     * ]\n     */\n    parseRouteData(routeConfig) {\n        const { path, data } = routeConfig;\n        const breadcrumb = this.mergeWithBaseChildData(routeConfig, data?.breadcrumb);\n        return { path, breadcrumb };\n    }\n    /**\n     * get empty children of a module or Component. Empty child is the one with path: ''\n     * When parent and it's children (that has empty route path) define data merge them both with child taking precedence\n     */\n    mergeWithBaseChildData(routeConfig, config) {\n        if (!routeConfig) {\n            return this.extractObject(config);\n        }\n        let baseChild;\n        if (routeConfig.loadChildren) {\n            // To handle a module with empty child route\n            baseChild = routeConfig._loadedRoutes.find((route) => route.path === '');\n        }\n        else if (routeConfig.children) {\n            // To handle a component with empty child route\n            baseChild = routeConfig.children.find((route) => route.path === '');\n        }\n        const childConfig = baseChild?.data?.breadcrumb;\n        return childConfig\n            ? this.mergeWithBaseChildData(baseChild, {\n                ...this.extractObject(config),\n                ...this.extractObject(childConfig),\n            })\n            : this.extractObject(config);\n    }\n    /**\n     * Update breadcrumb dynamically\n     *\n     * key can be a path | alias\n     *\n     * 1) Using complete route path. route can be passed the same way you define angular routes\n     * - path can be passed as 'exact path(routeLink)' or 'path with params(routeRegex)'\n     * - update label Ex: set('/mentor', 'Mentor'), set('/mentor/:id', 'Mentor Details')\n     * - change visibility Ex: set('/mentor/:id/edit', { skip: true })\n     * ------------------------------------------ OR ------------------------------------------\n     * 2) Using route alias (prefixed with '@'). alias should be unique for a route\n     * - update label Ex: set('@mentor', 'Enabler')\n     * - change visibility Ex: set('@mentorEdit', { skip: true })\n     *\n     *\n     * value can be string | BreadcrumbObject | BreadcrumbFunction\n     */\n    set(key, breadcrumb) {\n        const breadcrumbObject = this.extractObject(breadcrumb);\n        let updateArgs;\n        if (key.startsWith(ALIAS_PREFIX)) {\n            updateArgs = ['alias', { ...breadcrumbObject, alias: key.slice(1) }];\n        }\n        else if (key.includes(PATH_PARAM.PREFIX)) {\n            updateArgs = [\n                'routeRegex',\n                { ...breadcrumbObject, routeRegex: this.buildRegex(key) },\n            ];\n        }\n        else {\n            updateArgs = [\n                'routeLink',\n                { ...breadcrumbObject, routeLink: this.ensureLeadingSlash(key) },\n            ];\n        }\n        // For this route if previously a breadcrumb is not defined that sets isAutoGeneratedLabel: true\n        // change it to false since this is user supplied value\n        updateArgs[1].isAutoGeneratedLabel = false;\n        this.updateStore(...updateArgs);\n        this.updateCurrentBreadcrumbs(...updateArgs);\n    }\n    /**\n     * Update the store to reuse for dynamic declarations\n     * If the store already has this route definition update it, else add\n     */\n    updateStore(key, breadcrumb) {\n        const storeItemIndex = this.dynamicBreadcrumbStore.findIndex((item) => {\n            return breadcrumb[key] === item[key];\n        });\n        if (storeItemIndex > -1) {\n            this.dynamicBreadcrumbStore[storeItemIndex] = {\n                ...this.dynamicBreadcrumbStore[storeItemIndex],\n                ...breadcrumb,\n            };\n        }\n        else {\n            this.dynamicBreadcrumbStore.push({ ...breadcrumb });\n        }\n    }\n    /**\n     * If breadcrumb is present in current breadcrumbs update it and emit new stream\n     */\n    updateCurrentBreadcrumbs(key, breadcrumb) {\n        const itemIndex = this.currentBreadcrumbs.findIndex((item) => {\n            return key === 'routeRegex'\n                ? this.matchRegex(item.routeLink, breadcrumb[key])\n                : breadcrumb[key] === item[key];\n        });\n        if (itemIndex > -1) {\n            this.currentBreadcrumbs[itemIndex] = {\n                ...this.currentBreadcrumbs[itemIndex],\n                ...breadcrumb,\n            };\n            const breadcrumbsToShow = this.currentBreadcrumbs.filter((item) => !item.skip);\n            this.breadcrumbs.next([...breadcrumbsToShow]);\n        }\n    }\n    /**\n     * For a route with path param, we create regex dynamically from angular route syntax\n     * '/mentor/:id' becomes '/mentor/[^/]',\n     * breadcrumbService.set('/mentor/:id', 'Uday') should update 'Uday' as label for '/mentor/2' OR 'mentor/ada'\n     */\n    buildRegex(path) {\n        return this.ensureLeadingSlash(path).replace(new RegExp(PATH_PARAM.REGEX_IDENTIFIER, 'g'), PATH_PARAM.REGEX_REPLACER);\n    }\n    ensureLeadingSlash(path) {\n        return path.startsWith('/') ? path : `/${path}`;\n    }\n    /**\n     * In App's RouteConfig, breadcrumb can be defined as a string OR a function OR an object\n     *\n     * string: simple static breadcrumb label for a path\n     * function: callback that gets invoked with resolved path param\n     * object: additional data defined along with breadcrumb label that gets passed to *xngBreadcrumbItem directive\n     */\n    extractLabel(config, resolvedParam) {\n        const label = typeof config === 'object' ? config.label : config;\n        if (typeof label === 'function') {\n            return label(resolvedParam);\n        }\n        return label;\n    }\n    extractObject(config) {\n        // don't include {label} if config is undefined. This is important since we merge the configs\n        if (config &&\n            (typeof config === 'string' || typeof config === 'function')) {\n            return { label: config };\n        }\n        return config || {};\n    }\n}\nBreadcrumbService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbService, deps: [{ token: i1.ActivatedRoute }, { token: i1.Router }], target: i0.ɵɵFactoryTarget.Injectable });\nBreadcrumbService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i1.Router }]; } });\n\nclass BreadcrumbComponent {\n    constructor(breadcrumbService, activateRoute) {\n        this.breadcrumbService = breadcrumbService;\n        this._separator = '/';\n        /**\n         * If true, breadcrumb is auto generated even without any mapping label\n         * Default label is same as route segment\n         */\n        this.autoGenerate = true;\n        /**\n         * By default query params will be preserved with breadcrumbs\n         */\n        this.preserveQueryParams = true;\n        /**\n         * By default query fragments will be preserved with breadcrumbs\n         */\n        this.preserveFragment = true;\n        /**\n         * custom class provided by consumer to increase specificity\n         * This will benefit to override styles that are conflicting\n         */\n        this.class = '';\n        this.setupMessage = 'not set up yet';\n        this.someParameterValue = null;\n        // breadcrumb inside ngIf works only this way\n        activateRoute.params.subscribe((params) => {\n            this.setupComponent(params['someParam']);\n        });\n    }\n    /**\n     * separator between breadcrumbs, defaults to '/'.\n     * User can customize separator either by passing a String or Template\n     *\n     * String --> Ex: <xng-breadcrumb separator=\"-\"> </xng-breadcrumb>\n     *\n     * Template --> Ex: <xng-breadcrumb [separator]=\"separatorTemplate\"> </xng-breadcrumb>\n     * <ng-template #separatorTemplate><mat-icon>arrow_right</mat-icon></ng-template>\n     */\n    set separator(value) {\n        if (value instanceof TemplateRef) {\n            this.separatorTemplate = value;\n            this._separator = undefined;\n        }\n        else {\n            this.separatorTemplate = undefined;\n            this._separator = value || '/';\n        }\n    }\n    get separator() {\n        return this._separator;\n    }\n    setupComponent(someParam) {\n        this.setupMessage = 'set up at ' + new Date();\n        this.someParameterValue = someParam;\n    }\n    ngOnInit() {\n        this.breadcrumbs$ = this.breadcrumbService.breadcrumbs$.pipe(map((breadcrumbs) => {\n            return breadcrumbs\n                .filter((breadcrumb) => {\n                // Usually, breadcrumb list can contain a combination of auto generated and user specified labels\n                // this filters autogenerated labels in case of \"[autoGenerate]: false\"\n                if (this.autoGenerate) {\n                    return true;\n                }\n                return !breadcrumb.isAutoGeneratedLabel;\n            })\n                .map((breadcrumb) => {\n                // Do not mutate breadcrumb as its source of truth.\n                // There can be scenarios where we can have multiple xng-breadcrumb instances in page\n                const { routeInterceptor, routeLink } = breadcrumb;\n                return {\n                    ...breadcrumb,\n                    routeLink: routeInterceptor?.(routeLink, breadcrumb) || routeLink,\n                };\n            });\n        }));\n    }\n}\nBreadcrumbComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbComponent, deps: [{ token: BreadcrumbService }, { token: i1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\nBreadcrumbComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: BreadcrumbComponent, selector: \"xng-breadcrumb\", inputs: { autoGenerate: \"autoGenerate\", preserveQueryParams: \"preserveQueryParams\", preserveFragment: \"preserveFragment\", class: \"class\", anchorTarget: \"anchorTarget\", separator: \"separator\" }, queries: [{ propertyName: \"itemTemplate\", first: true, predicate: BreadcrumbItemDirective, descendants: true, read: TemplateRef }], ngImport: i0, template: \"<nav aria-label=\\\"breadcrumb\\\" class=\\\"xng-breadcrumb-root\\\" [ngClass]=\\\"class\\\">\\n  <ol class=\\\"xng-breadcrumb-list\\\">\\n    <ng-container\\n      *ngFor=\\\"\\n        let breadcrumb of breadcrumbs$ | async;\\n        last as isLast;\\n        first as isFirst;\\n        index as index;\\n        count as count\\n      \\\"\\n    >\\n      <li class=\\\"xng-breadcrumb-item\\\">\\n        <a\\n          *ngIf=\\\"!isLast\\\"\\n          class=\\\"xng-breadcrumb-link\\\"\\n          [ngClass]=\\\"{ 'xng-breadcrumb-link-disabled': breadcrumb.disable }\\\"\\n          [attr.aria-disabled]=\\\"breadcrumb.disable\\\"\\n          [attr.tabIndex]=\\\"breadcrumb.disable ? -1 : 0\\\"\\n          role=\\\"button\\\"\\n          rel=\\\"noopener noreferrer\\\"\\n          [routerLink]=\\\"\\n            breadcrumb.routeInterceptor\\n              ? breadcrumb.routeInterceptor(breadcrumb.routeLink, breadcrumb)\\n              : breadcrumb.routeLink\\n          \\\"\\n          [queryParams]=\\\"\\n            preserveQueryParams ? breadcrumb.queryParams : undefined\\n          \\\"\\n          [fragment]=\\\"preserveFragment ? breadcrumb.fragment : undefined\\\"\\n          [target]=\\\"anchorTarget ? anchorTarget : '_self'\\\"\\n        >\\n          <ng-container\\n            *ngTemplateOutlet=\\\"\\n              itemTemplate;\\n              context: {\\n                $implicit: breadcrumb.label,\\n                info: breadcrumb.info,\\n                last: isLast,\\n                first: isFirst,\\n                index: index,\\n                count: count\\n              }\\n            \\\"\\n          ></ng-container>\\n          <ng-container *ngIf=\\\"!itemTemplate\\\">{{\\n            breadcrumb.label\\n          }}</ng-container>\\n        </a>\\n\\n        <label *ngIf=\\\"isLast\\\" class=\\\"xng-breadcrumb-trail\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"\\n              itemTemplate;\\n              context: {\\n                $implicit: breadcrumb.label,\\n                info: breadcrumb.info,\\n                last: isLast,\\n                first: isFirst,\\n                index: index,\\n                count: count\\n              }\\n            \\\"\\n          ></ng-container>\\n          <ng-container *ngIf=\\\"!itemTemplate\\\">{{\\n            breadcrumb.label\\n          }}</ng-container>\\n        </label>\\n      </li>\\n\\n      <li *ngIf=\\\"!isLast\\\" class=\\\"xng-breadcrumb-separator\\\" aria-hidden=\\\"true\\\">\\n        <ng-container *ngTemplateOutlet=\\\"separatorTemplate\\\"></ng-container>\\n        <ng-container *ngIf=\\\"!separatorTemplate\\\">{{ separator }}</ng-container>\\n      </li>\\n    </ng-container>\\n  </ol>\\n</nav>\\n\", styles: [\".xng-breadcrumb-root{margin:0;color:#0009}.xng-breadcrumb-list{display:flex;align-items:center;flex-wrap:wrap;margin:0;padding:0}.xng-breadcrumb-item{list-style:none}.xng-breadcrumb-trail{display:flex;align-items:center;color:#000000e6}.xng-breadcrumb-link{display:flex;align-items:center;white-space:nowrap;color:inherit;text-decoration:none;transition:-webkit-text-decoration .3s;transition:text-decoration .3s;transition:text-decoration .3s,-webkit-text-decoration .3s;cursor:pointer}.xng-breadcrumb-link:hover{text-decoration:underline}.xng-breadcrumb-link-disabled{pointer-events:none;cursor:disabled}.xng-breadcrumb-separator{display:flex;-webkit-user-select:none;user-select:none;margin-left:8px;margin-right:8px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'xng-breadcrumb', encapsulation: ViewEncapsulation.None, template: \"<nav aria-label=\\\"breadcrumb\\\" class=\\\"xng-breadcrumb-root\\\" [ngClass]=\\\"class\\\">\\n  <ol class=\\\"xng-breadcrumb-list\\\">\\n    <ng-container\\n      *ngFor=\\\"\\n        let breadcrumb of breadcrumbs$ | async;\\n        last as isLast;\\n        first as isFirst;\\n        index as index;\\n        count as count\\n      \\\"\\n    >\\n      <li class=\\\"xng-breadcrumb-item\\\">\\n        <a\\n          *ngIf=\\\"!isLast\\\"\\n          class=\\\"xng-breadcrumb-link\\\"\\n          [ngClass]=\\\"{ 'xng-breadcrumb-link-disabled': breadcrumb.disable }\\\"\\n          [attr.aria-disabled]=\\\"breadcrumb.disable\\\"\\n          [attr.tabIndex]=\\\"breadcrumb.disable ? -1 : 0\\\"\\n          role=\\\"button\\\"\\n          rel=\\\"noopener noreferrer\\\"\\n          [routerLink]=\\\"\\n            breadcrumb.routeInterceptor\\n              ? breadcrumb.routeInterceptor(breadcrumb.routeLink, breadcrumb)\\n              : breadcrumb.routeLink\\n          \\\"\\n          [queryParams]=\\\"\\n            preserveQueryParams ? breadcrumb.queryParams : undefined\\n          \\\"\\n          [fragment]=\\\"preserveFragment ? breadcrumb.fragment : undefined\\\"\\n          [target]=\\\"anchorTarget ? anchorTarget : '_self'\\\"\\n        >\\n          <ng-container\\n            *ngTemplateOutlet=\\\"\\n              itemTemplate;\\n              context: {\\n                $implicit: breadcrumb.label,\\n                info: breadcrumb.info,\\n                last: isLast,\\n                first: isFirst,\\n                index: index,\\n                count: count\\n              }\\n            \\\"\\n          ></ng-container>\\n          <ng-container *ngIf=\\\"!itemTemplate\\\">{{\\n            breadcrumb.label\\n          }}</ng-container>\\n        </a>\\n\\n        <label *ngIf=\\\"isLast\\\" class=\\\"xng-breadcrumb-trail\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"\\n              itemTemplate;\\n              context: {\\n                $implicit: breadcrumb.label,\\n                info: breadcrumb.info,\\n                last: isLast,\\n                first: isFirst,\\n                index: index,\\n                count: count\\n              }\\n            \\\"\\n          ></ng-container>\\n          <ng-container *ngIf=\\\"!itemTemplate\\\">{{\\n            breadcrumb.label\\n          }}</ng-container>\\n        </label>\\n      </li>\\n\\n      <li *ngIf=\\\"!isLast\\\" class=\\\"xng-breadcrumb-separator\\\" aria-hidden=\\\"true\\\">\\n        <ng-container *ngTemplateOutlet=\\\"separatorTemplate\\\"></ng-container>\\n        <ng-container *ngIf=\\\"!separatorTemplate\\\">{{ separator }}</ng-container>\\n      </li>\\n    </ng-container>\\n  </ol>\\n</nav>\\n\", styles: [\".xng-breadcrumb-root{margin:0;color:#0009}.xng-breadcrumb-list{display:flex;align-items:center;flex-wrap:wrap;margin:0;padding:0}.xng-breadcrumb-item{list-style:none}.xng-breadcrumb-trail{display:flex;align-items:center;color:#000000e6}.xng-breadcrumb-link{display:flex;align-items:center;white-space:nowrap;color:inherit;text-decoration:none;transition:-webkit-text-decoration .3s;transition:text-decoration .3s;transition:text-decoration .3s,-webkit-text-decoration .3s;cursor:pointer}.xng-breadcrumb-link:hover{text-decoration:underline}.xng-breadcrumb-link-disabled{pointer-events:none;cursor:disabled}.xng-breadcrumb-separator{display:flex;-webkit-user-select:none;user-select:none;margin-left:8px;margin-right:8px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: BreadcrumbService }, { type: i1.ActivatedRoute }]; }, propDecorators: { itemTemplate: [{\n                type: ContentChild,\n                args: [BreadcrumbItemDirective, { static: false, read: TemplateRef }]\n            }], autoGenerate: [{\n                type: Input\n            }], preserveQueryParams: [{\n                type: Input\n            }], preserveFragment: [{\n                type: Input\n            }], class: [{\n                type: Input\n            }], anchorTarget: [{\n                type: Input\n            }], separator: [{\n                type: Input,\n                args: ['separator']\n            }] } });\n\nclass BreadcrumbModule {\n}\nBreadcrumbModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBreadcrumbModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbModule, declarations: [BreadcrumbComponent, BreadcrumbItemDirective], imports: [CommonModule, RouterModule], exports: [BreadcrumbComponent, BreadcrumbItemDirective] });\nBreadcrumbModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbModule, imports: [CommonModule, RouterModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: BreadcrumbModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [BreadcrumbComponent, BreadcrumbItemDirective],\n                    imports: [CommonModule, RouterModule],\n                    exports: [BreadcrumbComponent, BreadcrumbItemDirective],\n                }]\n        }] });\n\n/*\n * Public API Surface of xng-breadcrumb\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreadcrumbComponent, BreadcrumbItemDirective, BreadcrumbModule, BreadcrumbService };\n"],"x_google_ignoreList":[1,2,3]}