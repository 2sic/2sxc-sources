{"version":3,"sources":["./src/app/item-history/item-history-routing.module.ts","./src/app/item-history/item-history.module.ts","./src/app/item-history/item-history.component.scss","../../../../../../src/material/paginator/paginator-intl.ts","../../../../../../src/material/paginator/paginator.ts","../../../../../../src/material/paginator/paginator-module.ts","../../../../../../src/material/paginator/public-api.ts","../../../../../../src/material/paginator/index.ts","./src/app/item-history/item-history.helpers.ts","./src/app/item-history/services/versions.service.ts","./src/app/item-history/item-history-dialog.config.ts","./src/app/item-history/item-history.component.html","./src/app/item-history/item-history.component.ts"],"names":[],"mappings":"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","file":"default~item-history-item-history-module~ng-dialogs-src-app-item-history-item-history-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { itemHistoryDialog } from './item-history-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: itemHistoryDialog, title: 'Item History' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ItemHistoryRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ItemHistoryRoutingModule } from './item-history-routing.module';\r\nimport { ItemHistoryComponent } from './item-history.component';\r\nimport { VersionsService } from './services/versions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ItemHistoryComponent,\r\n  ],\r\n  entryComponents: [\r\n    ItemHistoryComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ItemHistoryRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatDividerModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    VersionsService,\r\n  ]\r\n})\r\nexport class ItemHistoryModule { }\r\n","export default \".compare-box {\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: flex-end;\\n  height: 40px;\\n}\\n.compare-box__dropdown {\\n  width: 192px;\\n  margin-top: -14px;\\n  font-size: 14px;\\n  height: auto;\\n}\\n.mat-accordion {\\n  display: block;\\n  padding: 4px 0;\\n}\\n.mat-expansion-panel-header {\\n  font-size: 14px;\\n}\\n.table-row {\\n  font-size: 14px;\\n}\\n.table-row__main {\\n  display: flex;\\n}\\n.table-row__details {\\n  display: block;\\n}\\n.row-main {\\n  cursor: pointer;\\n  padding: 4px 0;\\n}\\n.row-main__label {\\n  width: 160px;\\n  flex: 0 0 auto;\\n}\\n.row-main__value {\\n  flex: 1 1 auto;\\n}\\n.row-main__type {\\n  flex: 0 0 auto;\\n  font-size: 12px;\\n}\\n.row-main__type i:not(:last-of-type) {\\n  margin-right: 2px;\\n}\\n.detail-row {\\n  display: flex;\\n  padding-bottom: 4px;\\n  cursor: default;\\n}\\n.detail-row__label {\\n  width: 160px;\\n  flex: 0 0 auto;\\n}\\n.detail-row__value {\\n  flex: 1 1 auto;\\n}\\n.row-actions {\\n  margin-top: 16px;\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL25nLWRpYWxvZ3Mvc3JjL2FwcC9pdGVtLWhpc3RvcnkvaXRlbS1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHlCQUFBO0VBQ0EscUJBQUE7RUFDQSxZQUFBO0FBQ0Y7QUFDRTtFQUNFLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0FBQ0o7QUFHQTtFQUNFLGNBQUE7RUFDQSxjQUFBO0FBQUY7QUFHQTtFQUNFLGVBQUE7QUFBRjtBQUdBO0VBQ0UsZUFBQTtBQUFGO0FBRUU7RUFDRSxhQUFBO0FBQUo7QUFHRTtFQUNFLGNBQUE7QUFESjtBQUtBO0VBQ0UsZUFBQTtFQUNBLGNBQUE7QUFGRjtBQUlFO0VBQ0UsWUFBQTtFQUNBLGNBQUE7QUFGSjtBQUtFO0VBQ0UsY0FBQTtBQUhKO0FBTUU7RUFDRSxjQUFBO0VBQ0EsZUFBQTtBQUpKO0FBTUk7RUFDRSxpQkFBQTtBQUpOO0FBU0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0FBTkY7QUFRRTtFQUNFLFlBQUE7RUFDQSxjQUFBO0FBTko7QUFTRTtFQUNFLGNBQUE7QUFQSjtBQVdBO0VBQ0UsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7QUFSRiIsImZpbGUiOiJwcm9qZWN0cy9uZy1kaWFsb2dzL3NyYy9hcHAvaXRlbS1oaXN0b3J5L2l0ZW0taGlzdG9yeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb21wYXJlLWJveCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICBoZWlnaHQ6IDQwcHg7XHJcblxyXG4gICZfX2Ryb3Bkb3duIHtcclxuICAgIHdpZHRoOiAxOTJweDtcclxuICAgIG1hcmdpbi10b3A6IC0xNHB4O1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gIH1cclxufVxyXG5cclxuLm1hdC1hY2NvcmRpb24ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBhZGRpbmc6IDRweCAwO1xyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLnRhYmxlLXJvdyB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG5cclxuICAmX19tYWluIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG5cclxuICAmX19kZXRhaWxzIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxufVxyXG5cclxuLnJvdy1tYWluIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgcGFkZGluZzogNHB4IDA7XHJcblxyXG4gICZfX2xhYmVsIHtcclxuICAgIHdpZHRoOiAxNjBweDtcclxuICAgIGZsZXg6IDAgMCBhdXRvO1xyXG4gIH1cclxuXHJcbiAgJl9fdmFsdWUge1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbiAgfVxyXG5cclxuICAmX190eXBlIHtcclxuICAgIGZsZXg6IDAgMCBhdXRvO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG5cclxuICAgIGk6bm90KDpsYXN0LW9mLXR5cGUpIHtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAycHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uZGV0YWlsLXJvdyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwYWRkaW5nLWJvdHRvbTogNHB4O1xyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxuXHJcbiAgJl9fbGFiZWwge1xyXG4gICAgd2lkdGg6IDE2MHB4O1xyXG4gICAgZmxleDogMCAwIGF1dG87XHJcbiAgfVxyXG5cclxuICAmX192YWx1ZSB7XHJcbiAgICBmbGV4OiAxIDEgYXV0bztcclxuICB9XHJcbn1cclxuXHJcbi5yb3ctYWN0aW9ucyB7XHJcbiAgbWFyZ2luLXRvcDogMTZweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn1cclxuIl19 */\";","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\n@Injectable({providedIn: 'root'})\nexport class MatPaginatorIntl {\n  /**\n   * Stream to emit from when labels are changed. Use this to notify components when the labels have\n   * changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the page size selector. */\n  itemsPerPageLabel: string = 'Items per page:';\n\n  /** A label for the button that increments the current page. */\n  nextPageLabel: string = 'Next page';\n\n  /** A label for the button that decrements the current page. */\n  previousPageLabel: string = 'Previous page';\n\n  /** A label for the button that moves to the first page. */\n  firstPageLabel: string = 'First page';\n\n  /** A label for the button that moves to the last page. */\n  lastPageLabel: string = 'Last page';\n\n  /** A label for the range of items within the current page and the length of the whole list. */\n  getRangeLabel: (page: number, pageSize: number, length: number) => string =\n    (page: number, pageSize: number, length: number) => {\n      if (length == 0 || pageSize == 0) { return `0 of ${length}`; }\n\n      length = Math.max(length, 0);\n\n      const startIndex = page * pageSize;\n\n      // If the start index exceeds the list length, do not try and fix the end index to the end.\n      const endIndex = startIndex < length ?\n          Math.min(startIndex + pageSize, length) :\n          startIndex + pageSize;\n\n      return `${startIndex + 1} â ${endIndex} of ${length}`;\n    }\n}\n\n/** @docs-private */\nexport function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n\n/** @docs-private */\nexport const MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  coerceNumberProperty,\n  coerceBooleanProperty,\n  BooleanInput,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatPaginatorIntl} from './paginator-intl';\nimport {\n  HasInitialized,\n  HasInitializedCtor,\n  mixinInitialized,\n  ThemePalette,\n  mixinDisabled,\n  CanDisableCtor,\n  CanDisable,\n} from '@angular/material/core';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nexport class PageEvent {\n  /** The current page index. */\n  pageIndex: number;\n\n  /**\n   * Index of the page that was selected previously.\n   * @breaking-change 8.0.0 To be made into a required property.\n   */\n  previousPageIndex?: number;\n\n  /** The current page size */\n  pageSize: number;\n\n  /** The current total number of items being paged */\n  length: number;\n}\n\n\n/** Object that can be used to configure the default options for the paginator module. */\nexport interface MatPaginatorDefaultOptions {\n  /** Number of items to display on a page. By default set to 50. */\n  pageSize?: number;\n\n  /** The set of provided page size options to display to the user. */\n  pageSizeOptions?: number[];\n\n  /** Whether to hide the page size selection UI from the user. */\n  hidePageSize?: boolean;\n\n  /** Whether to show the first/last buttons UI to the user. */\n  showFirstLastButtons?: boolean;\n\n  /** The default form-field appearance to apply to the page size options selector. */\n  formFieldAppearance?: MatFormFieldAppearance;\n}\n\n/** Injection token that can be used to provide the default options for the paginator module. */\nexport const MAT_PAGINATOR_DEFAULT_OPTIONS =\n    new InjectionToken<MatPaginatorDefaultOptions>('MAT_PAGINATOR_DEFAULT_OPTIONS');\n\n// Boilerplate for applying mixins to MatPaginator.\n/** @docs-private */\nclass MatPaginatorBase {}\nconst _MatPaginatorBase: CanDisableCtor & HasInitializedCtor & typeof MatPaginatorBase =\n    mixinDisabled(mixinInitialized(MatPaginatorBase));\n\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\n@Component({\n  selector: 'mat-paginator',\n  exportAs: 'matPaginator',\n  templateUrl: 'paginator.html',\n  styleUrls: ['paginator.css'],\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatPaginator extends _MatPaginatorBase implements OnInit, OnDestroy, CanDisable,\n  HasInitialized {\n  private _initialized: boolean;\n  private _intlChanges: Subscription;\n\n  /** Theme color to be used for the underlying form controls. */\n  @Input() color: ThemePalette;\n\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  @Input()\n  get pageIndex(): number { return this._pageIndex; }\n  set pageIndex(value: number) {\n    this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _pageIndex = 0;\n\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  @Input()\n  get length(): number { return this._length; }\n  set length(value: number) {\n    this._length = coerceNumberProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _length = 0;\n\n  /** Number of items to display on a page. By default set to 50. */\n  @Input()\n  get pageSize(): number { return this._pageSize; }\n  set pageSize(value: number) {\n    this._pageSize = Math.max(coerceNumberProperty(value), 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSize: number;\n\n  /** The set of provided page size options to display to the user. */\n  @Input()\n  get pageSizeOptions(): number[] { return this._pageSizeOptions; }\n  set pageSizeOptions(value: number[]) {\n    this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSizeOptions: number[] = [];\n\n  /** Whether to hide the page size selection UI from the user. */\n  @Input()\n  get hidePageSize(): boolean { return this._hidePageSize; }\n  set hidePageSize(value: boolean) {\n    this._hidePageSize = coerceBooleanProperty(value);\n  }\n  private _hidePageSize = false;\n\n\n  /** Whether to show the first/last buttons UI to the user. */\n  @Input()\n  get showFirstLastButtons(): boolean { return this._showFirstLastButtons; }\n  set showFirstLastButtons(value: boolean) {\n    this._showFirstLastButtons = coerceBooleanProperty(value);\n  }\n  private _showFirstLastButtons = false;\n\n  /** Event emitted when the paginator changes the page size or page index. */\n  @Output() readonly page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n\n  /** Displayed set of page size options. Will be sorted and include current page size. */\n  _displayedPageSizeOptions: number[];\n\n  /** If set, styles the \"page size\" form field with the designated style. */\n  _formFieldAppearance?: MatFormFieldAppearance;\n\n  constructor(public _intl: MatPaginatorIntl,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_PAGINATOR_DEFAULT_OPTIONS)\n                  defaults?: MatPaginatorDefaultOptions) {\n    super();\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n\n    if (defaults) {\n      const {\n        pageSize,\n        pageSizeOptions,\n        hidePageSize,\n        showFirstLastButtons,\n        formFieldAppearance,\n      } = defaults;\n\n      if (pageSize != null) {\n        this._pageSize = pageSize;\n      }\n\n      if (pageSizeOptions != null) {\n        this._pageSizeOptions = pageSizeOptions;\n      }\n\n      if (hidePageSize != null) {\n        this._hidePageSize = hidePageSize;\n      }\n\n      if (showFirstLastButtons != null) {\n        this._showFirstLastButtons = showFirstLastButtons;\n      }\n\n      if (formFieldAppearance != null) {\n        this._formFieldAppearance = formFieldAppearance;\n      }\n    }\n  }\n\n  ngOnInit() {\n    this._initialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._markInitialized();\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n\n  /** Advances to the next page if it exists. */\n  nextPage(): void {\n    if (!this.hasNextPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex++;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move back to the previous page if it exists. */\n  previousPage(): void {\n    if (!this.hasPreviousPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex--;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the first page if not already there. */\n  firstPage(): void {\n    // hasPreviousPage being false implies at the start\n    if (!this.hasPreviousPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the last page if not already there. */\n  lastPage(): void {\n    // hasNextPage being false implies at the end\n    if (!this.hasNextPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.getNumberOfPages() - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Whether there is a previous page. */\n  hasPreviousPage(): boolean {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n\n  /** Whether there is a next page. */\n  hasNextPage(): boolean {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n\n  /** Calculate the number of pages */\n  getNumberOfPages(): number {\n    if (!this.pageSize) {\n      return 0;\n    }\n\n    return Math.ceil(this.length / this.pageSize);\n  }\n\n\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize: number) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  private _updateDisplayedPageSizeOptions() {\n    if (!this._initialized) { return; }\n\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ?\n          this.pageSizeOptions[0] :\n          DEFAULT_PAGE_SIZE;\n    }\n\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  private _emitPageEvent(previousPageIndex: number) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\n\n  static ngAcceptInputType_pageIndex: NumberInput;\n  static ngAcceptInputType_length: NumberInput;\n  static ngAcceptInputType_pageSize: NumberInput;\n  static ngAcceptInputType_hidePageSize: BooleanInput;\n  static ngAcceptInputType_showFirstLastButtons: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatPaginator} from './paginator';\nimport {MAT_PAGINATOR_INTL_PROVIDER} from './paginator-intl';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatTooltipModule,\n  ],\n  exports: [MatPaginator],\n  declarations: [MatPaginator],\n  providers: [MAT_PAGINATOR_INTL_PROVIDER],\n})\nexport class MatPaginatorModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './paginator-module';\nexport * from './paginator';\nexport * from './paginator-intl';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { CompareWith } from './models/compare-with.model';\r\nimport { HistoryAttribute, HistoryAttributeValue, HistoryItem } from './models/history-item.model';\r\nimport { Version, VersionEntityAttributeValues, VersionJsonParsed } from './models/version.model';\r\n\r\nexport function getHistoryItems(versions: Version[], page: number, pageSize: number, compareWith: CompareWith) {\r\n  if (versions == null || page == null || pageSize == null || compareWith == null) { return null; }\r\n  const filtered = versions.slice((page - 1) * pageSize, page * pageSize);\r\n\r\n  const historyItems = calcHistoryItems(filtered, versions, compareWith);\r\n  return historyItems;\r\n}\r\n\r\nfunction calcHistoryItems(filteredVersions: Version[], versions: Version[], compareWith: CompareWith) {\r\n  return filteredVersions.map(version => {\r\n    const historyItem: HistoryItem = {\r\n      changeSetId: version.ChangeSetId,\r\n      attributes: calcHistoryAttributes(version, versions, compareWith),\r\n      historyId: version.HistoryId,\r\n      timeStamp: version.TimeStamp,\r\n      user: version.User,\r\n      versionNumber: version.VersionNumber,\r\n      isLastVersion: !versions.some(v => v.VersionNumber === version.VersionNumber + 1),\r\n    };\r\n    return historyItem;\r\n  });\r\n}\r\n\r\nfunction calcHistoryAttributes(version: Version, versions: Version[], compareWith: CompareWith) {\r\n  const currentDataTypes = (JSON.parse(version.Json) as VersionJsonParsed).Entity.Attributes;\r\n  const previousItem = compareWith === 'live' ? findLive(versions) : versions.find(v => v.VersionNumber === version.VersionNumber - 1);\r\n  const previousDataTypes = previousItem ? (JSON.parse(previousItem.Json) as VersionJsonParsed).Entity.Attributes : null;\r\n\r\n  const allAttributes: { name: string, dataType: string }[] = [];\r\n  if (currentDataTypes != null) {\r\n    Object.entries(currentDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null) { return; }\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n  if (previousDataTypes != null) {\r\n    Object.entries(previousDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null) { return; }\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n\r\n  const historyAttributes = allAttributes.map(attribute => {\r\n    const currentValues = currentDataTypes?.[attribute.dataType]?.[attribute.name];\r\n    const previousValues = previousDataTypes?.[attribute.dataType]?.[attribute.name];\r\n\r\n    const historyAttribute: HistoryAttribute = {\r\n      name: attribute.name,\r\n      dataType: attribute.dataType,\r\n      change: calcChangeType(currentValues, previousValues, true),\r\n      values: calcHistoryValues(currentValues, previousValues),\r\n    };\r\n    return historyAttribute;\r\n  });\r\n\r\n  return historyAttributes;\r\n}\r\n\r\nfunction findLive(versions: Version[]) {\r\n  let liveVersion = versions[0];\r\n  for (const version of versions) {\r\n    if (version.VersionNumber <= liveVersion.VersionNumber) { continue; }\r\n    liveVersion = version;\r\n  }\r\n  return liveVersion;\r\n}\r\n\r\nfunction calcHistoryValues(values: VersionEntityAttributeValues, previousValues: VersionEntityAttributeValues) {\r\n  const allLangKeys: string[] = [];\r\n  if (values != null) {\r\n    Object.keys(values).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) { return; }\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n  if (previousValues != null) {\r\n    Object.keys(previousValues).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) { return; }\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n\r\n  const historyValues = allLangKeys.map(langKey => {\r\n    const currentValue = values?.[langKey];\r\n    const previousValue = previousValues?.[langKey];\r\n\r\n    const historyValue: HistoryAttributeValue = {\r\n      langKey,\r\n      value: currentValue,\r\n      oldValue: previousValue,\r\n      change: calcChangeType(currentValue, previousValue),\r\n    };\r\n    return historyValue;\r\n  });\r\n\r\n  return historyValues;\r\n}\r\n\r\nfunction calcChangeType(currentValue: any, previousValue: any, sortObjectKeys = false) {\r\n  let change: 'new' | 'deleted' | 'changed' | 'none';\r\n\r\n  if (sortObjectKeys) {\r\n    if (typeof currentValue === 'object') {\r\n      currentValue = sortKeysAlphabetically(currentValue);\r\n    }\r\n    if (typeof previousValue === 'object') {\r\n      previousValue = sortKeysAlphabetically(previousValue);\r\n    }\r\n  }\r\n\r\n  if (currentValue != null && previousValue != null) {\r\n    if (JSON.stringify(currentValue) !== JSON.stringify(previousValue)) {\r\n      change = 'changed';\r\n    } else {\r\n      change = 'none';\r\n    }\r\n  } else if (currentValue != null) {\r\n    change = 'new';\r\n  } else {\r\n    change = 'deleted';\r\n  }\r\n\r\n  return change;\r\n}\r\n\r\nfunction sortKeysAlphabetically(obj: object) {\r\n  if (typeof obj !== 'object') { return obj; }\r\n\r\n  return Object.keys(obj)\r\n    .sort()\r\n    .reduce(\r\n      (acc, key) => ({\r\n        ...acc,\r\n        [key]: (obj as any)[key],\r\n      }),\r\n      {},\r\n    );\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Version } from '../models/version.model';\r\n\r\nconst webApiVersions = 'cms/history/';\r\n\r\n@Injectable()\r\nexport class VersionsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  fetchVersions(entityId: number) {\r\n    return this.http.post<Version[]>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'get'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString() },\r\n      },\r\n    );\r\n  }\r\n\r\n  restore(entityId: number, changeId: number) {\r\n    return this.http.post<boolean>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'restore'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString(), changeId: changeId.toString() },\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const itemHistoryDialog: DialogConfig = {\r\n  name: 'ITEM_HISTORY_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ItemHistoryComponent } = await import('./item-history.component');\r\n    return ItemHistoryComponent;\r\n  }\r\n};\r\n","export default \"<ng-container *ngIf=\\\"templateVars$ | async as data\\\">\\r\\n  <div mat-dialog-title>\\r\\n    <div class=\\\"dialog-title-box\\\">\\r\\n      <div>Item History</div>\\r\\n      <button mat-icon-button matTooltip=\\\"Close dialog\\\" (click)=\\\"closeDialog()\\\">\\r\\n        <mat-icon>close</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <p class=\\\"dialog-description\\\">Check version history for this item and restore the version you need.</p>\\r\\n\\r\\n  <div *ngIf=\\\"data.historyItems?.length > 0\\\" class=\\\"compare-box\\\">\\r\\n    <mat-form-field appearance=\\\"standard\\\" color=\\\"accent\\\" class=\\\"compare-box__dropdown\\\">\\r\\n      <mat-select [value]=\\\"data.compareWith\\\" name=\\\"Scope\\\" (selectionChange)=\\\"compareChange($event.value)\\\">\\r\\n        <mat-option value=\\\"previous\\\">Compare with: Previous</mat-option>\\r\\n        <mat-option value=\\\"live\\\">Compare with: Live</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"dialog-component-content fancy-scrollbar-light\\\">\\r\\n    <div *ngIf=\\\"data.historyItems === null\\\">Loading...</div>\\r\\n    <div *ngIf=\\\"data.historyItems?.length === 0\\\">No previous versions of this item found</div>\\r\\n\\r\\n    <mat-accordion multi *ngIf=\\\"data.historyItems?.length > 0\\\" class=\\\"history-tables\\\">\\r\\n      <mat-expansion-panel *ngFor=\\\"let historyItem of data.historyItems\\\"\\r\\n        [expanded]=\\\"expandedPanels[historyItem.versionNumber]\\\"\\r\\n        (expandedChange)=\\\"panelExpandedChange($event, historyItem.versionNumber)\\\">\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Version {{ historyItem.versionNumber }}</mat-panel-title>\\r\\n          <mat-panel-description>{{ historyItem.timeStamp | date:'yyyy-MM-dd hh:mm' }}</mat-panel-description>\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n        <ng-container *ngIf=\\\"expandedPanels[historyItem.versionNumber]\\\">\\r\\n          <div class=\\\"table-row\\\" *ngFor=\\\"let attribute of historyItem.attributes\\\">\\r\\n            <div class=\\\"table-row__main row-main\\\"\\r\\n              (click)=\\\"attributeExpandedToggle(historyItem.versionNumber, attribute.name)\\\">\\r\\n              <div class=\\\"row-main__label history-{{ attribute.change }}\\\">\\r\\n                {{ attribute.name }}\\r\\n              </div>\\r\\n              <div class=\\\"row-main__value history-{{ attribute.change }}\\\">\\r\\n                <ng-container *ngIf=\\\"!expandedAttributes[historyItem.versionNumber + attribute.name]\\\">\\r\\n                  {{ attribute.values[0]?.value }}\\r\\n                </ng-container>\\r\\n              </div>\\r\\n              <div class=\\\"row-main__type\\\">\\r\\n                <i>[{{ attribute.dataType }}]</i>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"table-row__details\\\" *ngIf=\\\"expandedAttributes[historyItem.versionNumber + attribute.name]\\\">\\r\\n              <div class=\\\"detail-row\\\" *ngFor=\\\"let value of attribute.values\\\">\\r\\n                <div class=\\\"detail-row__label history-{{ value.change }}\\\">{{ value.langKey }}:</div>\\r\\n                <div class=\\\"detail-row__value\\\">\\r\\n                  <div class=\\\"history-{{ value.change }}\\\" *ngIf=\\\"value.change !== 'changed'\\\">\\r\\n                    {{ value.change === 'deleted' ? value.oldValue : value.value }}\\r\\n                  </div>\\r\\n                  <ng-container *ngIf=\\\"value.change === 'changed'\\\">\\r\\n                    <div class=\\\"history-new\\\">{{ value.value }}</div>\\r\\n                    <div class=\\\"history-deleted history-deleted__value\\\">{{ value.oldValue }}</div>\\r\\n                  </ng-container>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row-actions\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" *ngIf=\\\"!historyItem.isLastVersion\\\"\\r\\n              (click)=\\\"restore(historyItem.changeSetId)\\\">\\r\\n              Restore\\r\\n            </button>\\r\\n          </div>\\r\\n        </ng-container>\\r\\n      </mat-expansion-panel>\\r\\n    </mat-accordion>\\r\\n  </div>\\r\\n\\r\\n  <mat-paginator color=\\\"accent\\\" showFirstLastButtons=\\\"true\\\" [length]=\\\"data.length\\\" [pageSize]=\\\"data.pageSize\\\"\\r\\n    [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageChange($event)\\\" *ngIf=\\\"data.historyItems?.length > 0\\\">\\r\\n  </mat-paginator>\\r\\n</ng-container>\\r\\n\";","import { ChangeDetectionStrategy, Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { getHistoryItems } from './item-history.helpers';\r\nimport { CompareWith } from './models/compare-with.model';\r\nimport { ExpandedPanels } from './models/expanded-panels.model';\r\nimport { ItemHistoryResult } from './models/item-history-result.model';\r\nimport { Version } from './models/version.model';\r\nimport { VersionsService } from './services/versions.service';\r\n\r\n@Component({\r\n  selector: 'app-item-history',\r\n  templateUrl: './item-history.component.html',\r\n  styleUrls: ['./item-history.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ItemHistoryComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  pageSizeOptions = [10, 20, 50];\r\n  expandedPanels: ExpandedPanels = {};\r\n  expandedAttributes: ExpandedPanels = {};\r\n\r\n  private itemId = parseInt(this.route.snapshot.paramMap.get('itemId'), 10);\r\n  private versions$ = new BehaviorSubject<Version[]>(null);\r\n  private page$ = new BehaviorSubject(1);\r\n  private pageSize$ = new BehaviorSubject(this.pageSizeOptions[0]);\r\n  private compareWith$ = new BehaviorSubject<CompareWith>('live');\r\n  private historyItems$ = combineLatest([this.versions$, this.page$, this.pageSize$, this.compareWith$]).pipe(\r\n    map(([versions, page, pageSize, compareWith]) => getHistoryItems(versions, page, pageSize, compareWith)),\r\n  );\r\n  templateVars$ = combineLatest([this.versions$, this.historyItems$, this.pageSize$, this.compareWith$]).pipe(\r\n    map(([versions, historyItems, pageSize, compareWith]) => ({\r\n      length: versions?.length,\r\n      historyItems,\r\n      pageSize,\r\n      compareWith,\r\n    })),\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ItemHistoryComponent>,\r\n    private route: ActivatedRoute,\r\n    private versionsService: VersionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.versionsService.fetchVersions(this.itemId).subscribe(this.versions$);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.versions$.complete();\r\n    this.page$.complete();\r\n    this.pageSize$.complete();\r\n    this.compareWith$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  compareChange(newCompareWith: CompareWith) {\r\n    this.compareWith$.next(newCompareWith);\r\n  }\r\n\r\n  panelExpandedChange(expand: boolean, versionNumber: number) {\r\n    this.expandedPanels[versionNumber] = expand;\r\n  }\r\n\r\n  attributeExpandedToggle(versionNumber: number, name: string) {\r\n    this.expandedAttributes[versionNumber + name] = !this.expandedAttributes[versionNumber + name];\r\n  }\r\n\r\n  pageChange(event: PageEvent) {\r\n    const newPage = event.pageIndex + 1;\r\n    if (newPage !== this.page$.value) {\r\n      this.expandedPanels = {};\r\n      this.expandedAttributes = {};\r\n      this.page$.next(newPage);\r\n    }\r\n    const newPageSize = event.pageSize;\r\n    if (newPageSize !== this.pageSize$.value) {\r\n      this.pageSize$.next(newPageSize);\r\n    }\r\n  }\r\n\r\n  restore(changeId: number) {\r\n    this.snackBar.open('Restoring previous version...');\r\n    this.versionsService.restore(this.itemId, changeId).subscribe(res => {\r\n      this.snackBar.open('Previous version restored. Will reload edit dialog', null, { duration: 3000 });\r\n      const result: ItemHistoryResult = {\r\n        refreshEdit: true,\r\n      };\r\n      this.dialogRef.close(result);\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}