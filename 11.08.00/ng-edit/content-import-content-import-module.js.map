{"version":3,"sources":["./src/app/content-import/services/content-import.service.ts","../edit/shared/services/eav.service.ts","./src/app/content-import/content-import-dialog.config.ts","./src/app/content-import/content-import.component.html","./src/app/app-administration/services/content-types.service.ts","./src/app/content-import/content-import.component.ts","./src/app/content-import/content-import.module.ts","../edit/shared/services/entity.service.ts","../edit/shared/store/actions/item.actions.ts","./src/app/content-import/content-import-routing.module.ts","./src/app/content-import/content-import.component.scss"],"names":[],"mappings":"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","file":"content-import-content-import-module.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { webApiEntityRoot } from '../../../../../edit/shared/services/entity.service';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentImport, EvaluateContentResult, ImportContentRequest, ImportContentResult } from '../models/content-import.model';\r\n\r\n@Injectable()\r\nexport class ContentImportService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  evaluateContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      mergeMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.context.appId.toString(),\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return (\r\n          this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'XmlPreview'), requestData)\r\n        ) as Observable<EvaluateContentResult>;\r\n      })\r\n    );\r\n  }\r\n\r\n  importContent(formValues: ContentImport) {\r\n    return from(toBase64(formValues.file)).pipe(\r\n      mergeMap(fileBase64 => {\r\n        const requestData: ImportContentRequest = {\r\n          AppId: this.context.appId.toString(),\r\n          DefaultLanguage: formValues.defaultLanguage,\r\n          ContentType: formValues.contentType,\r\n          ContentBase64: fileBase64,\r\n          ResourcesReferences: formValues.resourcesReferences,\r\n          ClearEntities: formValues.clearEntities,\r\n        };\r\n        return (\r\n          this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'XmlUpload'), requestData)\r\n        ) as Observable<ImportContentResult>;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { FormDisabledSet, FormValueSet } from '../../../edit-types';\r\nimport { keyPartOfPage, keyPortalRoot, keyPublishing } from '../../../ng-dialogs/src/app/shared/constants/session.constants';\r\nimport { Context } from '../../../ng-dialogs/src/app/shared/services/context';\r\nimport { EavFormData, EditDialogContext } from '../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.models';\r\nimport { EavConfig } from '../models/eav-config';\r\nimport { Item } from '../models/eav/item';\r\nimport { SaveResult } from '../models/eav/save-result.model';\r\nimport { VersioningOptions } from '../models/eav/versioning-options';\r\nimport * as fromStore from '../store';\r\nimport * as itemActions from '../store/actions/item.actions';\r\n\r\nexport const webApiEditRoot = 'cms/edit/';\r\n\r\n@Injectable()\r\nexport class EavService implements OnDestroy {\r\n  /**\r\n   * Tells subscribed custom components that they should submit their values,\r\n   * e.g. form is going to be saved and we don't want to miss any values.\r\n   * Custom components run outside Angular zone and we have to wait for their values to update.\r\n   */\r\n  forceConnectorSave$ = new Subject<null>();\r\n  /** Temporary solution to circumvent value not being emitted on language change. Fix language change!  */\r\n  formValueChange$ = new Subject<FormValueSet>();\r\n  /** Temporary solution to circumvent disabled not being emitted on language change. Fix language change!  */\r\n  formDisabledChange$ = new Subject<FormDisabledSet>();\r\n\r\n  eavConfig: EavConfig;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private store: Store<fromStore.EavState>,\r\n    private dnnContext: DnnContext,\r\n    /** Used to fetch form data and fill up eavConfig. Do not use anywhere else */\r\n    private context: Context,\r\n  ) { }\r\n\r\n  // spm TODO: ngOnDestroy only fires in services provided in component\r\n  ngOnDestroy() {\r\n    this.forceConnectorSave$.complete();\r\n    this.formValueChange$.complete();\r\n    this.formDisabledChange$.complete();\r\n  }\r\n\r\n  /** Create EavConfiguration from sessionStorage */\r\n  setEavConfig(editDialogContext: EditDialogContext) {\r\n    this.eavConfig = {\r\n      zoneId: this.context.zoneId.toString(),\r\n      appId: this.context.appId.toString(),\r\n      appRoot: editDialogContext.App.Url,\r\n      lang: editDialogContext.Language.Current,\r\n      langPri: editDialogContext.Language.Primary,\r\n      langs: editDialogContext.Language.All,\r\n      moduleId: this.context.moduleId.toString(),\r\n      partOfPage: sessionStorage.getItem(keyPartOfPage),\r\n      portalRoot: sessionStorage.getItem(keyPortalRoot),\r\n      tabId: this.context.tabId.toString(),\r\n      systemRoot: window.location.pathname.split('/dist/')[0] + '/',\r\n      versioningOptions: this.getVersioningOptions(\r\n        sessionStorage.getItem(keyPartOfPage) === 'true',\r\n        sessionStorage.getItem(keyPublishing),\r\n      ),\r\n    };\r\n  }\r\n\r\n  fetchFormData(items: string) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'load'), items, {\r\n      params: { appId: this.context.appId.toString() }\r\n    }) as Observable<EavFormData>;\r\n  }\r\n\r\n  saveItem(item: Item) {\r\n    this.store.dispatch(new itemActions.SaveItemAttributesValuesAction(item));\r\n  }\r\n\r\n  saveItemSuccess(data: SaveResult) {\r\n    this.store.dispatch(new itemActions.SaveItemAttributesValuesSuccessAction(data));\r\n  }\r\n\r\n  saveItemError(error: any) {\r\n    this.store.dispatch(new itemActions.SaveItemAttributesValuesErrorAction(error));\r\n  }\r\n\r\n  saveFormData(body: string) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'save'), body, {\r\n      params: { appId: this.eavConfig.appId.toString(), partOfPage: this.eavConfig.partOfPage }\r\n    }) as Observable<SaveResult>;\r\n  }\r\n\r\n  private getVersioningOptions(partOfPage: boolean, publishing: string): VersioningOptions {\r\n    if (!partOfPage) {\r\n      return { show: true, hide: true, branch: true };\r\n    }\r\n\r\n    const publish = publishing || '';\r\n    switch (publish) {\r\n      case '':\r\n      case 'DraftOptional':\r\n        return { show: true, hide: true, branch: true };\r\n      case 'DraftRequired':\r\n        return { branch: true, hide: true };\r\n      default: {\r\n        console.error('invalid versioning requiremenets: ' + publish);\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentImportDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentImportComponent } = await import('./content-import.component');\r\n    return ContentImportComponent;\r\n  }\r\n};\r\n\r\nexport interface ContentImportDialogData {\r\n  files?: File[];\r\n}\r\n","export default \"<div class=\\\"dialog-form-wrapper\\\" appDragAndDrop [allowedFileTypes]=\\\"'xml'\\\" (filesDropped)=\\\"filesDropped($event)\\\"\\r\\n  *ngIf=\\\"(templateVars$ | async) as data\\\">\\r\\n\\r\\n  <div mat-dialog-title>\\r\\n    <div class=\\\"dialog-title-box\\\">{{ data.contentType?.Name }} Import Data</div>\\r\\n  </div>\\r\\n\\r\\n  <p class=\\\"dialog-description\\\">\\r\\n    This will import content-items into 2sxc. It requires that you already defined the content-type before you try\\r\\n    importing, and that you created the import-file using the template provided by the Export. Please visit\\r\\n    <a href=\\\"https://2sxc.org/help\\\" target=\\\"_blank\\\">https://2sxc.org/help</a> for more instructions.\\r\\n  </p>\\r\\n\\r\\n  <ng-container *ngIf=\\\"formValues != null\\\">\\r\\n    <ng-container [ngSwitch]=\\\"data.viewStateSelected\\\">\\r\\n\\r\\n      <!-- FORM -->\\r\\n      <form #ngForm=\\\"ngForm\\\" class=\\\"dialog-form\\\" *ngSwitchCase=\\\"1\\\">\\r\\n        <div class=\\\"dialog-form-content fancy-scrollbar-light\\\">\\r\\n          <div>\\r\\n            <button mat-raised-button matTooltip=\\\"Open file browser\\\" (click)=\\\"fileInput.click()\\\">\\r\\n              <span>{{ formValues.file ? formValues.file.name : 'Select or drop file' }}</span>\\r\\n            </button>\\r\\n            <input #fileInput type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" class=\\\"hide\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <p class=\\\"field-label\\\">References to pages / files</p>\\r\\n            <mat-radio-group [(ngModel)]=\\\"formValues.resourcesReferences\\\" name=\\\"ResourcesReferences\\\">\\r\\n              <mat-radio-button value=\\\"Keep\\\">\\r\\n                Import links as written in the file (for example /Portals/...)\\r\\n              </mat-radio-button>\\r\\n              <mat-radio-button value=\\\"Resolve\\\">\\r\\n                Try to resolve paths to references\\r\\n              </mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <p class=\\\"field-label\\\">Clear all other entities</p>\\r\\n            <mat-radio-group [(ngModel)]=\\\"formValues.clearEntities\\\" name=\\\"ClearEntities\\\">\\r\\n              <mat-radio-button value=\\\"None\\\">\\r\\n                Keep all entities not found in import\\r\\n              </mat-radio-button>\\r\\n              <mat-radio-button value=\\\"All\\\">\\r\\n                Remove all entities not found in import\\r\\n              </mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n          </div>\\r\\n\\r\\n          <p class=\\\"hint\\\">Remember to backup your DNN first!</p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"dialog-form-actions\\\">\\r\\n          <button mat-raised-button (click)=\\\"closeDialog()\\\">Cancel</button>\\r\\n          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!formValues.file || !formValues.file.name\\\"\\r\\n            (click)=\\\"evaluateContent()\\\">\\r\\n            Preview Import\\r\\n          </button>\\r\\n        </div>\\r\\n      </form>\\r\\n      <!-- END FORM -->\\r\\n\\r\\n      <!-- WAITING -->\\r\\n      <p *ngSwitchCase=\\\"0\\\" class=\\\"progress-message\\\">Please wait while processing...</p>\\r\\n      <!-- END WAITING -->\\r\\n\\r\\n      <!-- EVALUATION RESULT -->\\r\\n      <ng-container *ngSwitchCase=\\\"2\\\">\\r\\n        <ng-container *ngIf=\\\"data.evaluationResult\\\">\\r\\n          <!-- DETAILS / STATISTICS -->\\r\\n          <div *ngIf=\\\"data.evaluationResult.Success\\\" class=\\\"dialog-component-content fancy-scrollbar-light\\\">\\r\\n            <p class=\\\"evaluation__title\\\">Try to import file '{{ formValues.file.name }}'</p>\\r\\n            <p class=\\\"evaluation__title\\\">File contains:</p>\\r\\n            <ul class=\\\"evaluation__content\\\">\\r\\n              <li>{{ data.evaluationResult.Detail.DocumentElementsCount }} content-items (records/entities)</li>\\r\\n              <li>{{ data.evaluationResult.Detail.LanguagesInDocumentCount }} languages</li>\\r\\n              <li>{{ data.evaluationResult.Detail.AttributeNamesInDocument.length }} columns:\\r\\n                {{ data.evaluationResult.Detail.AttributeNamesInDocument.join(', ') }}</li>\\r\\n            </ul>\\r\\n            <p class=\\\"evaluation__title\\\">If you press Import, it will:</p>\\r\\n            <ul class=\\\"evaluation__content\\\">\\r\\n              <li>Create {{ data.evaluationResult.Detail.AmountOfEntitiesCreated }} content-items</li>\\r\\n              <li>Update {{ data.evaluationResult.Detail.AmountOfEntitiesUpdated }} content-items</li>\\r\\n              <li>Delete {{ data.evaluationResult.Detail.AmountOfEntitiesDeleted }} content-items</li>\\r\\n              <li>Ignore {{ data.evaluationResult.Detail.AttributeNamesNotImported.length }} columns:\\r\\n                {{ data.evaluationResult.Detail.AttributeNamesNotImported.join(', ') }}</li>\\r\\n            </ul>\\r\\n            <p class=\\\"hint\\\">Note: The import validates much data and may take several minutes.</p>\\r\\n          </div>\\r\\n          <!-- END DETAILS / STATISTICS -->\\r\\n          <!-- ERRORS -->\\r\\n          <div *ngIf=\\\"!data.evaluationResult.Success\\\" class=\\\"dialog-component-content fancy-scrollbar-light\\\">\\r\\n            <p class=\\\"evaluation__title\\\">Try to import file '{{ formValues.file.name }}'</p>\\r\\n            <ul class=\\\"evaluation__content\\\">\\r\\n              <li *ngFor=\\\"let error of data.evaluationResult.Detail\\\">\\r\\n                <div>{{ errors[error.ErrorCode] }}</div>\\r\\n                <div *ngIf=\\\"error.ErrorDetail\\\"><i>Details: {{ error.ErrorDetail }}</i></div>\\r\\n                <div *ngIf=\\\"error.LineNumber\\\"><i>Line-no: {{ error.LineNumber }}</i></div>\\r\\n                <div *ngIf=\\\"error.LineDetail\\\"><i>Line-details: {{ error.LineDetail }}</i></div>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n          <!-- END ERRORS -->\\r\\n          <div class=\\\"dialog-component-actions\\\">\\r\\n            <button mat-raised-button (click)=\\\"back()\\\">Back</button>\\r\\n            <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!data.evaluationResult.Success\\\"\\r\\n              (click)=\\\"importContent()\\\">\\r\\n              Import\\r\\n            </button>\\r\\n          </div>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n      <!-- END EVALUATION RESULT -->\\r\\n\\r\\n      <!-- IMPORT RESULT -->\\r\\n      <div *ngSwitchCase=\\\"3\\\">\\r\\n        <div *ngIf=\\\"data.importResult\\\" class=\\\"progress-message\\\">\\r\\n          <p *ngIf=\\\"data.importResult.Success\\\">Import done.</p>\\r\\n          <p *ngIf=\\\"!data.importResult.Success\\\">Import failed.</p>\\r\\n        </div>\\r\\n        <div class=\\\"dialog-component-actions\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"closeDialog()\\\">Close</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- END IMPORT RESULT -->\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\";","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImportAppResult } from '../../import-app/models/import-app-result.model';\r\nimport { EavScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\n\r\nexport const webApiTypeRoot = 'admin/type/';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get(this.apiUrl(webApiTypeRoot + 'get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    }) as Observable<ContentType>;\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get(this.apiUrl(webApiTypeRoot + 'list'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    }) as Observable<ContentType[]>;\r\n  }\r\n\r\n  getScopes() {\r\n    return this.http.get(this.apiUrl(webApiTypeRoot + 'scopes'), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map((scopes: { [key: string]: string }) => {\r\n        const scopeOptions: EavScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post(this.apiUrl(webApiTypeRoot + 'save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete(this.apiUrl(webApiTypeRoot + 'delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post(this.apiUrl(webApiTypeRoot + 'import'), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<ImportAppResult>;\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post(this.apiUrl(webApiTypeRoot + 'addghost'), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { ContentImportDialogData } from './content-import-dialog.config';\r\nimport { ContentImport, EvaluateContentResult, ImportContentResult } from './models/content-import.model';\r\nimport { ContentImportService } from './services/content-import.service';\r\n\r\n@Component({\r\n  selector: 'app-content-import',\r\n  templateUrl: './content-import.component.html',\r\n  styleUrls: ['./content-import.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContentImportComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  formValues: ContentImport;\r\n  private contentType$ = new BehaviorSubject<ContentType>(null);\r\n  private loading$ = new BehaviorSubject(false);\r\n  private viewStates = {\r\n    waiting: 0,\r\n    default: 1,\r\n    evaluated: 2,\r\n    imported: 3,\r\n  };\r\n  private viewStateSelected$ = new BehaviorSubject<number>(this.viewStates.default);\r\n  private evaluationResult$ = new BehaviorSubject<EvaluateContentResult>(null);\r\n  private importResult$ = new BehaviorSubject<ImportContentResult>(null);\r\n  templateVars$ = combineLatest([\r\n    this.contentType$, this.loading$, this.viewStateSelected$, this.evaluationResult$, this.importResult$,\r\n  ]).pipe(\r\n    map(([contentType, loading, viewStateSelected, evaluationResult, importResult]) =>\r\n      ({ contentType, loading, viewStateSelected, evaluationResult, importResult })),\r\n  );\r\n  errors: { [key: string]: string } = {\r\n    0: 'Unknown error occured.',\r\n    1: 'Selected content-type does not exist.',\r\n    2: 'Document is not a valid XML file.',\r\n    3: 'Selected content-type does not match the content-type in the XML file.',\r\n    4: 'The language is not supported.',\r\n    5: 'The document does not specify all languages for all entities.',\r\n    6: 'Language reference cannot be parsed, the language is not supported.',\r\n    7: 'Language reference cannot be parsed, the read-write protection is not supported.',\r\n    8: 'Value cannot be read, because of it has an invalid format.'\r\n  };\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: ContentImportDialogData,\r\n    private dialogRef: MatDialogRef<ContentImportComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentImportService: ContentImportService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private contentTypesService: ContentTypesService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loading$.next(true);\r\n    const contentType$ = this.contentTypesService.retrieveContentType(this.contentTypeStaticName);\r\n    const dialogSettings$ = this.appDialogConfigService.getDialogSettings();\r\n    forkJoin([contentType$, dialogSettings$]).subscribe(([contentType, dialogSettings]) => {\r\n      this.contentType$.next(contentType);\r\n      this.formValues = {\r\n        defaultLanguage: dialogSettings.Context.Language.Primary,\r\n        contentType: this.contentTypeStaticName,\r\n        file: this.dialogData.files != null ? this.dialogData.files[0] : null,\r\n        resourcesReferences: 'Keep',\r\n        clearEntities: 'None',\r\n      };\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.loading$.complete();\r\n    this.viewStateSelected$.complete();\r\n    this.evaluationResult$.complete();\r\n    this.importResult$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  evaluateContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.evaluateContent(this.formValues).subscribe(result => {\r\n      this.evaluationResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.evaluated);\r\n    });\r\n  }\r\n\r\n  importContent() {\r\n    this.viewStateSelected$.next(this.viewStates.waiting);\r\n    this.contentImportService.importContent(this.formValues).subscribe(result => {\r\n      this.importResult$.next(result);\r\n      this.viewStateSelected$.next(this.viewStates.imported);\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.viewStateSelected$.next(this.viewStates.default);\r\n    this.evaluationResult$.next(null);\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    this.formValues.file = (event.target as HTMLInputElement).files[0];\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    this.formValues.file = importFile;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ContentImportRoutingModule } from './content-import-routing.module';\r\nimport { ContentImportComponent } from './content-import.component';\r\nimport { ContentImportService } from './services/content-import.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContentImportComponent,\r\n  ],\r\n  entryComponents: [\r\n    ContentImportComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ContentImportRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentImportService,\r\n    AppDialogConfigService,\r\n    ContentTypesService,\r\n  ]\r\n})\r\nexport class ContentImportModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EntityInfo } from '../models/eav/entity-info';\r\nimport { EavService, webApiEditRoot } from './eav.service';\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = webApiEntityRoot + 'list';\r\n\r\n@Injectable()\r\nexport class EntityService {\r\n  constructor(private http: HttpClient, private eavService: EavService, private dnnContext: DnnContext) { }\r\n\r\n  getAvailableEntities(filter: string, contentTypeName: string) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiEditRoot + 'EntityPicker'), filter, {\r\n      params: { contentTypeName, appId: this.eavService.eavConfig.appId.toString() },\r\n    }) as Observable<EntityInfo[]>;\r\n  }\r\n\r\n  delete(contentType: string, entityId: string, force: boolean) {\r\n    return this.http.delete(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType, id: entityId, appId: this.eavService.eavConfig.appId.toString(), force: force.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { Item } from '../../models/eav/item';\r\nimport { SaveResult } from '../../models/eav/save-result.model';\r\n\r\n// Item Attributes\r\nexport const SAVE_ITEM_ATTRIBUTES_VALUES = '[Item] SAVE_ITEM_ATTRIBUTES_VALUES';\r\nexport const SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS = '[Item] SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS';\r\nexport const SAVE_ITEM_ATTRIBUTES_VALUES_ERROR = '[Item] SAVE_ITEM_ATTRIBUTES_VALUES_ERROR';\r\n\r\n/** Save (submit) */\r\nexport class SaveItemAttributesValuesAction implements Action {\r\n  readonly type = SAVE_ITEM_ATTRIBUTES_VALUES;\r\n  constructor(public item: Item) { }\r\n}\r\n\r\nexport class SaveItemAttributesValuesSuccessAction implements Action {\r\n  readonly type = SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS;\r\n  constructor(public data: SaveResult) { }\r\n}\r\n\r\nexport class SaveItemAttributesValuesErrorAction implements Action {\r\n  readonly type = SAVE_ITEM_ATTRIBUTES_VALUES_ERROR;\r\n  constructor(public error: any) { }\r\n}\r\n\r\nexport type Actions\r\n  = SaveItemAttributesValuesAction\r\n  | SaveItemAttributesValuesSuccessAction\r\n  | SaveItemAttributesValuesErrorAction;\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentImportDialog } from './content-import-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: contentImportDialog } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContentImportRoutingModule { }\r\n","export default \".field-label {\\n  font-size: 18px;\\n  margin: 24px 0 0;\\n}\\n\\n.mat-radio-group {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 8px 0;\\n}\\n\\n.mat-radio-button {\\n  margin: 5px;\\n  font-size: 14px;\\n}\\n\\n.hint {\\n  font-size: 18px;\\n  margin-top: 24px;\\n  margin-bottom: 16px;\\n}\\n\\n.progress-message {\\n  font-size: 18px;\\n}\\n\\n.evaluation__title {\\n  font-size: 18px;\\n  margin: 24px 0 0;\\n  font-weight: bold;\\n}\\n\\n.evaluation__content {\\n  font-size: 14px;\\n}\\n\\n.evaluation__content li {\\n  padding: 2px 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL25nLWRpYWxvZ3Mvc3JjL2FwcC9jb250ZW50LWltcG9ydC9jb250ZW50LWltcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0FBQ0Y7O0FBR0U7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQUFKOztBQUdFO0VBQ0UsZUFBQTtBQURKOztBQUdJO0VBQ0UsY0FBQTtBQUROIiwiZmlsZSI6InByb2plY3RzL25nLWRpYWxvZ3Mvc3JjL2FwcC9jb250ZW50LWltcG9ydC9jb250ZW50LWltcG9ydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWVsZC1sYWJlbCB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIG1hcmdpbjogMjRweCAwIDA7XHJcbn1cclxuXHJcbi5tYXQtcmFkaW8tZ3JvdXAge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBtYXJnaW46IDhweCAwO1xyXG59XHJcblxyXG4ubWF0LXJhZGlvLWJ1dHRvbiB7XHJcbiAgbWFyZ2luOiA1cHg7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4uaGludCB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIG1hcmdpbi10b3A6IDI0cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxufVxyXG5cclxuLnByb2dyZXNzLW1lc3NhZ2Uge1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxufVxyXG5cclxuLmV2YWx1YXRpb24ge1xyXG4gICZfX3RpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIG1hcmdpbjogMjRweCAwIDA7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcblxyXG4gICZfX2NvbnRlbnQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG5cclxuICAgIGxpIHtcclxuICAgICAgcGFkZGluZzogMnB4IDA7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\";"],"sourceRoot":"webpack:///"}