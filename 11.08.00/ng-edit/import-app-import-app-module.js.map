{"version":3,"sources":["./src/app/import-app/import-app.component.scss","./src/app/import-app/import-app-dialog.config.ts","./src/app/import-app/import-app.component.ts","./src/app/import-app/import-app-routing.module.ts","./src/app/import-app/import-app.module.ts","./src/app/import-app/import-app.component.html"],"names":[],"mappings":"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","file":"import-app-import-app-module.js","sourcesContent":["export default \".import-result-box {\\n  margin-top: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL25nLWRpYWxvZ3Mvc3JjL2FwcC9pbXBvcnQtYXBwL2ltcG9ydC1hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQUNGIiwiZmlsZSI6InByb2plY3RzL25nLWRpYWxvZ3Mvc3JjL2FwcC9pbXBvcnQtYXBwL2ltcG9ydC1hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1wb3J0LXJlc3VsdC1ib3gge1xyXG4gIG1hcmdpbi10b3A6IDE2cHg7XHJcbn1cclxuIl19 */\";","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const importAppDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppComponent } = await import('./import-app.component');\r\n    return ImportAppComponent;\r\n  }\r\n};\r\n\r\nexport interface ImportAppDialogData {\r\n  files?: File[];\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImportAppDialogData } from './import-app-dialog.config';\r\nimport { ImportAppResult } from './models/import-app-result.model';\r\nimport { ImportAppService } from './services/import-app.service';\r\n\r\n@Component({\r\n  selector: 'app-import-app',\r\n  templateUrl: './import-app.component.html',\r\n  styleUrls: ['./import-app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImportAppComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  private isImporting$ = new BehaviorSubject(false);\r\n  private importFile$ = new BehaviorSubject<File>(null);\r\n  private importResult$ = new BehaviorSubject<ImportAppResult>(null);\r\n  templateVars$ = combineLatest([this.isImporting$, this.importFile$, this.importResult$]).pipe(\r\n    map(([isImporting, importFile, importResult]) => ({ isImporting, importFile, importResult })),\r\n  );\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: ImportAppDialogData,\r\n    private dialogRef: MatDialogRef<ImportAppComponent>,\r\n    private importAppService: ImportAppService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.dialogData.files != null) {\r\n      this.importFile$.next(this.dialogData.files[0]);\r\n      this.importApp();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.isImporting$.complete();\r\n    this.importFile$.complete();\r\n    this.importResult$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    this.importFile$.next(importFile);\r\n    this.importResult$.next(null);\r\n    this.importApp();\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    const importFile = (event.target as HTMLInputElement).files[0];\r\n    this.importFile$.next(importFile);\r\n    this.importResult$.next(null);\r\n  }\r\n\r\n  importApp(changedName?: string) {\r\n    this.isImporting$.next(true);\r\n    this.importAppService.importApp(this.importFile$.value, changedName).subscribe({\r\n      next: result => {\r\n        this.isImporting$.next(false);\r\n        this.importResult$.next(result);\r\n        // The app could not be installed because the app-folder already exists. Install app in a different folder?\r\n        if (this.importResult$.value?.Messages?.[0]?.MessageType === 0) {\r\n          const folderName = prompt(this.importResult$.value.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (!folderName) { return; }\r\n          this.importApp(folderName);\r\n        }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.isImporting$.next(false);\r\n        this.importResult$.next(null);\r\n        this.snackBar.open('Import failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importAppDialog } from './import-app-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: importAppDialog } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ImportAppRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ImportAppRoutingModule } from './import-app-routing.module';\r\nimport { ImportAppComponent } from './import-app.component';\r\nimport { ImportAppService } from './services/import-app.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImportAppComponent,\r\n  ],\r\n  entryComponents: [\r\n    ImportAppComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ImportAppRoutingModule,\r\n    SharedComponentsModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ImportAppService,\r\n  ]\r\n})\r\nexport class ImportAppModule { }\r\n","export default \"<div appDragAndDrop [allowedFileTypes]=\\\"'zip'\\\" (filesDropped)=\\\"filesDropped($event)\\\"\\r\\n  *ngIf=\\\"(templateVars$ | async) as data\\\">\\r\\n\\r\\n  <div mat-dialog-title>\\r\\n    <div class=\\\"dialog-title-box\\\">Import App</div>\\r\\n  </div>\\r\\n\\r\\n  <mat-spinner *ngIf=\\\"data.isImporting\\\" mode=\\\"indeterminate\\\" diameter=\\\"20\\\" color=\\\"accent\\\"></mat-spinner>\\r\\n\\r\\n  <p class=\\\"dialog-description\\\">\\r\\n    Select an app package (zip) from your computer to import an app. New apps can be downloaded on\\r\\n    <a href=\\\"https://2sxc.org/apps\\\">https://2sxc.org/apps</a>.\\r\\n    For further help visit <a href=\\\"https://2sxc.org/en/help?tag=import-app\\\" target=\\\"_blank\\\">2sxc Help</a>.\\r\\n  </p>\\r\\n\\r\\n  <div>\\r\\n    <button mat-raised-button matTooltip=\\\"Open file browser\\\" [disabled]=\\\"data.isImporting\\\" (click)=\\\"fileInput.click()\\\">\\r\\n      <span>{{ data.importFile ? data.importFile.name : 'Select or drop file' }}</span>\\r\\n    </button>\\r\\n    <input #fileInput type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" class=\\\"hide\\\" />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"dialog-component-content fancy-scrollbar-light import-result-box\\\" *ngIf=\\\"data.importResult\\\">\\r\\n    <div *ngIf=\\\"data.importResult.Success\\\" class=\\\"sxc-message sxc-message-info\\\">\\r\\n      The import has been done. See the messages below for more information.\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!data.importResult.Success\\\" class=\\\"sxc-message sxc-message-error\\\">\\r\\n      The import failed. See the messages below for more information.\\r\\n    </div>\\r\\n    <div *ngFor=\\\"let message of data.importResult.Messages\\\" class=\\\"sxc-message\\\" [ngClass]=\\\"{\\r\\n      'sxc-message-warning': message.MessageType === 0,\\r\\n      'sxc-message-success': message.MessageType === 1,\\r\\n      'sxc-message-error': message.MessageType === 2\\r\\n    }\\\">\\r\\n      {{ message.Text }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"dialog-component-actions\\\">\\r\\n    <ng-container *ngIf=\\\"!data.importResult?.Success\\\">\\r\\n      <button mat-raised-button (click)=\\\"closeDialog()\\\">Cancel</button>\\r\\n      <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!data.importFile || data.isImporting || data.importResult\\\"\\r\\n        (click)=\\\"importApp()\\\">\\r\\n        Import\\r\\n      </button>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"data.importResult?.Success\\\">\\r\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"closeDialog()\\\">Close</button>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\";"],"sourceRoot":"webpack:///"}