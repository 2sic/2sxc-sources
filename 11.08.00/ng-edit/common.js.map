{"version":3,"sources":["./src/app/apps-management/services/apps-list.service.ts","./src/app/content-items/services/content-items.service.ts","./src/app/content-export/services/content-export.service.ts","./src/app/content-type-fields/constants/data-type.constants.ts","./src/app/content-items/services/entities.service.ts","./src/app/shared/services/dialog.service.ts","./src/app/app-administration/services/app-dialog-config.service.ts","./src/app/manage-content-list/services/content-group.service.ts","./src/app/shared/helpers/file-to-base64.helper.ts","./src/app/import-app/services/import-app.service.ts","./src/app/app-administration/services/pipelines.service.ts","../../../../projects/ngx-translate/http-loader/src/lib/http-loader.ts","../../../../projects/ngx-translate/http-loader/src/ngx-translate-http-loader.ts","./src/app/content-type-fields/constants/input-type.constants.ts","../edit/refresh-edit.module.ts","./src/app/permissions/services/metadata.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\n\r\n@Injectable()\r\nexport class AppsListService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<App[]>;\r\n  }\r\n\r\n  create(name: string) {\r\n    return this.http.post(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: { zoneId: this.context.zoneId.toString(), name }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityList } from 'projects/edit';\r\nimport { from, Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { webApiEntityRoot } from '../../../../../edit/shared/services/entity.service';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentItem } from '../models/content-item.model';\r\n\r\n@Injectable()\r\nexport class ContentItemsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentTypeStaticName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType: contentTypeStaticName }\r\n    }) as Observable<ContentItem[]>;\r\n  }\r\n\r\n  getColumns(contentTypeStaticName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appId: this.context.appId.toString(), staticName: contentTypeStaticName }\r\n    }) as Observable<Field[]>;\r\n  }\r\n\r\n  importItem(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      mergeMap(fileBase64 => {\r\n        return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'upload'), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        }) as Observable<boolean>;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityRoot } from '../../../../../edit/shared/services/entity.service';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentExport } from '../models/content-export.model';\r\n\r\n@Injectable()\r\nexport class ContentExportService {\r\n  constructor(private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Download')\r\n      + '?appId=' + this.context.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiTypeRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'Json')\r\n      + '?appId=' + this.context.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","export class DataTypeConstants {\r\n  public static readonly String = 'String';\r\n  public static readonly Entity = 'Entity';\r\n  public static readonly Boolean = 'Boolean';\r\n  public static readonly Number = 'Number';\r\n  public static readonly Custom = 'Custom';\r\n  public static readonly DateTime = 'DateTime';\r\n  public static readonly Hyperlink = 'Hyperlink';\r\n  public static readonly Empty = 'Empty';\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityRoot } from 'projects/edit';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    }) as Observable<null>;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-types.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyPortalRoot, keyRequestToken, keyTabId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { EditForm } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCodeFile(path: string) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form: EditForm = {\r\n      items: [{ Path: path }]\r\n    };\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: queryId }],\r\n    };\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyPipelineId, queryId.toString()) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam = `&${rawKey}=${rawValue}`;\r\n    return hashParam;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\nimport { DialogSettings } from '../models/dialog-settings.model';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getDialogSettings() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appid: this.context.appId.toString() },\r\n    }) as Observable<DialogSettings>;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ReplaceConfig } from '../../replace-content/models/replace-config.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {\r\n      params: { appId: this.context.appId.toString(), guid: item.guid, part: item.part, index: item.index.toString() }\r\n    }) as Observable<ReplaceConfig>;\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    }) as Observable<GroupHeader[]>;\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid, part: contentGroup.part }\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiContentGroup + 'header'), {\r\n      params: { appId: this.context.appId.toString(), guid: contentGroup.guid }\r\n    }) as Observable<GroupHeader>;\r\n  }\r\n\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ImportAppResult } from '../models/import-app-result.model';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ? changedName : '');\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    }) as Observable<ImportAppResult>;\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiEntityList } from 'projects/edit';\r\nimport { from, Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryRoot = 'admin/query/';\r\nconst webApiQueryImport = webApiQueryRoot + 'import';\r\nconst webApiQueryClone = webApiQueryRoot + 'Clone';\r\nconst webApiQueryDelete = webApiQueryRoot + 'Delete';\r\nexport const webApiQueryRun = webApiQueryRoot + 'Run';\r\nexport const webApiQuerySave = webApiQueryRoot + 'Save';\r\nexport const webApiQueryGet = webApiQueryRoot + 'Get';\r\nexport const webApiQueryDataSources = webApiQueryRoot + 'DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll(contentType: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiEntityList), {\r\n      params: { appId: this.context.appId.toString(), contentType }\r\n    }) as Observable<Query[]>;\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      mergeMap(fileBase64 => {\r\n        return this.http.post(this.dnnContext.$2sxc.http.apiUrl(webApiQueryImport), {\r\n          AppId: this.context.appId.toString(),\r\n          ContentBase64: fileBase64,\r\n        }) as Observable<boolean>;\r\n      })\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiQueryClone), {\r\n      params: { Id: id.toString(), appId: this.context.appId.toString() }\r\n    }) as Observable<null>;\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete(this.dnnContext.$2sxc.http.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    }) as Observable<boolean>;\r\n  }\r\n}\r\n","import {HttpClient} from \"@angular/common/http\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {Observable} from 'rxjs';\n\nexport class TranslateHttpLoader implements TranslateLoader {\n  constructor(private http: HttpClient, public prefix: string = \"/assets/i18n/\", public suffix: string = \".json\") {}\n\n  /**\n   * Gets the translations from the server\n   */\n  public getTranslation(lang: string): Observable<Object> {\n    return this.http.get(`${this.prefix}${lang}${this.suffix}`);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","export class InputTypeConstants {\r\n    // String\r\n    public static readonly StringDefault = 'string-default';\r\n    public static readonly StringUrlPath = 'string-url-path';\r\n    public static readonly StringDropdown = 'string-dropdown';\r\n    public static readonly StringDropdownQuery = 'string-dropdown-query';\r\n    public static readonly StringFontIconPicker = 'string-font-icon-picker';\r\n    public static readonly StringTemplatePicker = 'string-template-picker';\r\n    public static readonly StringWysiwyg = 'string-wysiwyg';\r\n    // Boolean\r\n    public static readonly BooleanDefault = 'boolean-default';\r\n    // DateTime\r\n    public static readonly DatetimeDefault = 'datetime-default';\r\n    // Empty\r\n    public static readonly EmptyDefault = 'empty-default';\r\n    // Number\r\n    public static readonly NumberDefault = 'number-default';\r\n    // Entity\r\n    public static readonly EntityDefault = 'entity-default';\r\n    public static readonly EntityQuery = 'entity-query';\r\n    public static readonly EntityContentBlocks = 'entity-content-blocks';\r\n    // Hyperlink\r\n    public static readonly HyperlinkDefault = 'hyperlink-default';\r\n    public static readonly HyperlinkLibrary = 'hyperlink-library';\r\n    // Custom\r\n    public static readonly ExternalWebComponent = 'external-web-component';\r\n    public static readonly CustomGPS = 'custom-gps';\r\n    public static readonly CustomDefault = 'custom-default';\r\n    // Old\r\n    public static readonly OldTypeDropdown = 'dropdown';\r\n    public static readonly OldTypeWysiwyg = 'wysiwyg';\r\n    public static readonly OldTypeDefault = 'default';\r\n    public static readonly StringWysiwygTinymce = 'string-wysiwyg-tinymce';\r\n    public static readonly StringWysiwygAdv = 'string-wysiwyg-adv';\r\n    public static readonly StringWysiwygDnn = 'string-wysiwyg-dnn';\r\n    // Default\r\n    public static readonly DefaultSuffix = '-default';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EditParams } from './edit-matcher.models';\r\nimport { calculatePathFromRoot } from './shared/services/edit-routing.helpers';\r\n\r\n@Component({\r\n  template: '',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RefreshEditComponent {\r\n  constructor(router: Router, route: ActivatedRoute) {\r\n    const params = route.snapshot.params as EditParams;\r\n    const oldEditUrl = `edit/refresh/${params.items}`;\r\n    const newEditUrl = `edit/${params.items}`;\r\n\r\n    const currentUrl = calculatePathFromRoot(route);\r\n    const lastIndex = currentUrl.lastIndexOf(oldEditUrl);\r\n    if (lastIndex <= 0) { return; }\r\n    const newUrl = currentUrl.substring(0, lastIndex) + currentUrl.substring(lastIndex).replace(oldEditUrl, newEditUrl);\r\n    router.navigate([newUrl]);\r\n  }\r\n}\r\n\r\nconst editRefreshRoutes: Routes = [\r\n  {\r\n    path: '', component: RefreshEditComponent, data: { title: 'Refreshing Edit Dialog' }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RefreshEditComponent,\r\n  ],\r\n  entryComponents: [\r\n    RefreshEditComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(editRefreshRoutes),\r\n  ],\r\n})\r\nexport class RefreshEditModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param typeId metadataOf something. For more info checkout out eavConstants file\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of content type for which we search for permissions. Key is connected with keyType\r\n   * @param contentTypeName name of content type where permissions are stored\r\n   */\r\n  getMetadata(typeId: number, keyType: string, key: string, contentTypeName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: typeId.toString(),\r\n        keyType,\r\n        key,\r\n        contentType: contentTypeName,\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}