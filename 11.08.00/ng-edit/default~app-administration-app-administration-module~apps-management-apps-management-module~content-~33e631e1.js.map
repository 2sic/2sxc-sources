{"version":3,"sources":["../../../projects/fab-speed-dial/src/lib/fab-speed-dial.ts","../../../projects/fab-speed-dial/src/lib/fab-speed-dial.module.ts","../../../projects/fab-speed-dial/src/public-api.ts"],"names":[],"mappings":"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","file":"default~app-administration-app-administration-module~apps-management-apps-management-module~content-~33e631e1.js","sourcesContent":["import {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Inject,\n    Injector,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    Renderer2,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { DOCUMENT } from '@angular/common';\nimport { forkJoin, fromEvent, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nconst Z_INDEX_ITEM = 23;\n\nexport type Direction = 'up' | 'down' | 'left' | 'right';\nexport type AnimationMode = 'fling' | 'scale';\n\n@Component({\n    selector: 'eco-fab-speed-dial-actions',\n    template: `\n        <ng-content select=\"[mat-mini-fab]\" *ngIf=\"miniFabVisible\"></ng-content>`,\n})\nexport class EcoFabSpeedDialActionsComponent implements AfterContentInit {\n    private _parent: EcoFabSpeedDialComponent;\n\n    @ContentChildren(MatButton) _buttons: QueryList<MatButton>;\n\n    /**\n     * Whether the min-fab button exist in DOM\n     */\n    public miniFabVisible = false;\n\n    /**\n     * The timeout ID for the callback to show the mini-fab buttons\n     */\n    private showMiniFabAnimation: ReturnType<typeof setTimeout>;\n\n    /**\n     * When we will remove mini-fab buttons from DOM, after the animation is complete\n     */\n    private hideMiniFab: Subscription | null;\n\n    constructor(injector: Injector, private renderer: Renderer2) {\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n\n    ngAfterContentInit(): void {\n        this._buttons.changes.subscribe(() => {\n            this.initButtonStates();\n            this._parent.setActionsVisibility();\n        });\n\n        this.initButtonStates();\n    }\n\n    private initButtonStates(): void {\n        this._buttons.forEach((button, i) => {\n            this.renderer.addClass(button._getHostElement(), 'eco-fab-action-item');\n            this.changeElementStyle(button._getHostElement(), 'z-index', '' + (Z_INDEX_ITEM - i));\n        });\n    }\n\n    show(): void {\n        if (!this._buttons) {\n            return;\n        }\n\n        this.resetAnimationState();\n        this.miniFabVisible = true;\n\n        this.showMiniFabAnimation = setTimeout(() => {\n            this._buttons.forEach((button, i) => {\n                let transitionDelay = 0;\n                let transform;\n                if (this._parent.animationMode === 'scale') {\n                    // Incremental transition delay of 65ms for each action button\n                    transitionDelay = 3 + (65 * i);\n                    transform = 'scale(1)';\n                } else {\n                    transform = this.getTranslateFunction('0');\n                }\n\n                const hostElement = button._getHostElement();\n                this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n                this.changeElementStyle(hostElement, 'opacity', '1');\n                this.changeElementStyle(hostElement, 'transform', transform);\n            });\n        }, 50); // Be sure that *ngIf can show elements before trying to animate them\n    }\n\n    private resetAnimationState(): void {\n        clearTimeout(this.showMiniFabAnimation);\n        if (this.hideMiniFab) {\n            this.hideMiniFab.unsubscribe();\n            this.hideMiniFab = null;\n        }\n    }\n\n    hide(): void {\n        if (!this._buttons) {\n            return;\n        }\n\n        this.resetAnimationState();\n\n        const obs = this._buttons.map((button, i) => {\n            let opacity = '1';\n            let transitionDelay = 0;\n            let transform;\n\n            if (this._parent.animationMode === 'scale') {\n                transitionDelay = 3 - (65 * i);\n                transform = 'scale(0)';\n                opacity = '0';\n            } else {\n                transform = this.getTranslateFunction((55 * (i + 1) - (i * 5)) + 'px');\n            }\n\n            const hostElement = button._getHostElement();\n\n            this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n            this.changeElementStyle(hostElement, 'opacity', opacity);\n            this.changeElementStyle(hostElement, 'transform', transform);\n\n            return fromEvent(hostElement, 'transitionend').pipe(take(1));\n        });\n\n        // Wait for all animation to finish, then destroy their elements\n        this.hideMiniFab = forkJoin(obs).subscribe(() => this.miniFabVisible = false);\n\n    }\n\n    private getTranslateFunction(value: string): string {\n        const dir = this._parent.direction;\n        const translateFn = (dir === 'up' || dir === 'down') ? 'translateY' : 'translateX';\n        const sign = (dir === 'down' || dir === 'right') ? '-' : '';\n\n        return translateFn + '(' + sign + value + ')';\n    }\n\n    private changeElementStyle(elem: any, style: string, value: string) {\n        // FIXME - Find a way to create a \"wrapper\" around the action button(s) provided by the user, so we don't change it's style tag\n        this.renderer.setStyle(elem, style, value);\n    }\n}\n\n/** @dynamic @see https://github.com/angular/angular/issues/20351#issuecomment-344009887 */\n@Component({\n    selector: 'eco-fab-speed-dial',\n    template: `\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\"></ng-content>\n            <ng-content select=\"eco-fab-speed-dial-actions\"></ng-content>\n        </div>\n    `,\n    styleUrls: ['fab-speed-dial.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class EcoFabSpeedDialComponent implements OnDestroy, AfterContentInit {\n    private isInitialized = false;\n    private _direction: Direction = 'up';\n    private _open = false;\n    private _animationMode: AnimationMode = 'fling';\n    private _fixed = false;\n    private _documentClickUnlistener: (() => void) | null = null;\n\n    /**\n     * Whether this speed dial is fixed on screen (user cannot change it by clicking)\n     */\n    @Input() get fixed(): boolean {\n        return this._fixed;\n    }\n\n    set fixed(fixed: boolean) {\n        this._fixed = fixed;\n        this._processOutsideClickState();\n    }\n\n    /**\n     * Whether this speed dial is opened\n     */\n    @HostBinding('class.eco-opened')\n    @Input() get open(): boolean {\n        return this._open;\n    }\n\n    set open(open: boolean) {\n        const previousOpen = this._open;\n        this._open = open;\n        if (previousOpen !== this._open) {\n            this.openChange.emit(this._open);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n\n    /**\n     * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'\n     */\n    @Input() get direction(): Direction {\n        return this._direction;\n    }\n\n    set direction(direction: Direction) {\n        const previousDirection = this._direction;\n        this._direction = direction;\n        if (previousDirection !== this.direction) {\n            this._setElementClass(previousDirection, false);\n            this._setElementClass(this.direction, true);\n\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n\n    /**\n     * The animation mode to open the speed dial. Can be 'fling' or 'scale'\n     */\n    @Input() get animationMode(): AnimationMode {\n        return this._animationMode;\n    }\n\n    set animationMode(animationMode: AnimationMode) {\n        const previousAnimationMode = this._animationMode;\n        this._animationMode = animationMode;\n        if (previousAnimationMode !== this._animationMode) {\n            this._setElementClass(previousAnimationMode, false);\n            this._setElementClass(this.animationMode, true);\n\n            if (this.isInitialized) {\n                // To start another detect lifecycle and force the \"close\" on the action buttons\n                Promise.resolve(null).then(() => this.open = false);\n            }\n        }\n    }\n\n    @Output() openChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    @ContentChild(EcoFabSpeedDialActionsComponent) _childActions: EcoFabSpeedDialActionsComponent;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2, @Inject(DOCUMENT) private document: Document) {\n    }\n\n    ngAfterContentInit(): void {\n        this.isInitialized = true;\n        this.setActionsVisibility();\n        this._setElementClass(this.direction, true);\n        this._setElementClass(this.animationMode, true);\n    }\n\n    ngOnDestroy() {\n        this._unsetDocumentClickListener();\n    }\n\n    /**\n     * Toggle the open state of this speed dial\n     */\n    public toggle(): void {\n        this.open = !this.open;\n    }\n\n    @HostListener('click')\n    _onClick(): void {\n        if (!this.fixed && this.open) {\n            this.open = false;\n        }\n    }\n\n    setActionsVisibility(): void {\n        if (!this._childActions) {\n            return;\n        }\n\n        if (this.open) {\n            this._childActions.show();\n        } else {\n            this._childActions.hide();\n        }\n        this._processOutsideClickState();\n    }\n\n    private _setElementClass(elemClass: string, isAdd: boolean): void {\n        const finalClass = `eco-${elemClass}`;\n        if (isAdd) {\n            this.renderer.addClass(this.elementRef.nativeElement, finalClass);\n        } else {\n            this.renderer.removeClass(this.elementRef.nativeElement, finalClass);\n        }\n    }\n\n    private _processOutsideClickState() {\n        if (!this.fixed && this.open) {\n            this._setDocumentClickListener();\n        } else {\n            this._unsetDocumentClickListener();\n        }\n    }\n\n    private _setDocumentClickListener() {\n        if (!this._documentClickUnlistener) {\n            this._documentClickUnlistener = this.renderer.listen(this.document, 'click', () => {\n                this.open = false;\n            });\n        }\n    }\n\n    private _unsetDocumentClickListener() {\n        if (this._documentClickUnlistener) {\n            this._documentClickUnlistener();\n            this._documentClickUnlistener = null;\n        }\n    }\n\n}\n\n@Component({\n    selector: 'eco-fab-speed-dial-trigger',\n    template: `\n        <ng-content select=\"[mat-fab]\"></ng-content>`,\n})\nexport class EcoFabSpeedDialTriggerComponent {\n    private _parent: EcoFabSpeedDialComponent;\n\n    /**\n     * Whether this trigger should spin (360dg) while opening the speed dial\n     */\n    @HostBinding('class.eco-spin') get sp() {\n        return this.spin;\n    }\n\n    @Input() spin = false;\n\n    constructor(injector: Injector) {\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n\n    @HostListener('click', ['$event'])\n    _onClick(event: Event): void {\n        if (!this._parent.fixed) {\n            this._parent.toggle();\n            event.stopPropagation();\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n    EcoFabSpeedDialActionsComponent,\n    EcoFabSpeedDialComponent,\n    EcoFabSpeedDialTriggerComponent,\n} from './fab-speed-dial';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        EcoFabSpeedDialActionsComponent,\n        EcoFabSpeedDialComponent,\n        EcoFabSpeedDialTriggerComponent,\n    ],\n    exports: [\n        EcoFabSpeedDialActionsComponent,\n        EcoFabSpeedDialComponent,\n        EcoFabSpeedDialTriggerComponent,\n    ],\n})\nexport class EcoFabSpeedDialModule {\n}\n","/*\n * Public API Surface of fab-speed-dial\n */\nexport {\n    EcoFabSpeedDialActionsComponent,\n    EcoFabSpeedDialComponent,\n    EcoFabSpeedDialTriggerComponent,\n} from './lib/fab-speed-dial';\n\nexport {\n    EcoFabSpeedDialModule,\n} from './lib/fab-speed-dial.module';\n"],"sourceRoot":"webpack:///"}