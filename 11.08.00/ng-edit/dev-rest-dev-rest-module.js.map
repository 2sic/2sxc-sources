{"version":3,"sources":["./src/app/dev-rest/dev-rest-dialog.config.ts","./src/app/dev-rest/help-popup/help-popup.component.ts","./src/app/dev-rest/selector-with-help/selector-with-help.component.ts","./src/app/dev-rest/selector-with-help/selector-with-help.component.html","./src/app/dev-rest/index.ts","./src/app/dev-rest/help-popup/help-popup.component.html","./src/app/dev-rest/scenarios/all-scenarios.ts","./src/app/dev-rest/dev-rest.component.ts","./src/app/dev-rest/dev-rest.component.scss","./src/app/dev-rest/scenarios/index.ts","./src/app/dev-rest/examples/generate-samples.ts","./src/app/dev-rest/examples/api-call.ts","./src/app/dev-rest/examples/code-sample.ts","./src/app/dev-rest/examples/index.ts","./src/app/dev-rest/dev-rest.component.html","./src/app/dev-rest/dev-rest.module.ts","./src/app/dev-rest/dev-rest-routing.module.ts"],"names":[],"mappings":"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","file":"dev-rest-dev-rest-module.js","sourcesContent":["import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const devRestDialog: DialogConfig = {\r\n  name: 'DEV_REST_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { DevRestComponent } = await import('./dev-rest.component');\r\n    return DevRestComponent;\r\n  }\r\n};\r\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HelpPopupData } from './help-popup.models';\r\n\r\n@Component({\r\n  selector: 'app-help-popup',\r\n  templateUrl: './help-popup.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HelpPopupComponent implements OnInit {\r\n\r\n  constructor(private dialogRef: MatDialogRef<HelpPopupComponent>, @Inject(MAT_DIALOG_DATA) public dialogData: HelpPopupData) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HelpPopupComponent } from '..';\r\nimport { HelpPopupData } from '../help-popup/help-popup.models';\r\nimport { Scenario } from '../scenarios';\r\n\r\n@Component({\r\n  selector: 'app-selector-with-help',\r\n  templateUrl: './selector-with-help.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SelectorWithHelpComponent implements OnInit {\r\n  @Input() label: string;\r\n  @Input() items: Scenario[];\r\n  @Input() value: string;\r\n  @Output() private valueChange = new EventEmitter<Scenario>();\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectionChange(key: string) {\r\n    this.value = key;\r\n    const scenario = this.items.find(item => item.key === this.value);\r\n    this.valueChange.emit(scenario);\r\n  }\r\n\r\n  showHelp() {\r\n    const scenario = this.items.find(item => item.key === this.value);\r\n    const data: HelpPopupData = {\r\n      name: scenario.name,\r\n      body: scenario.description,\r\n      notes: scenario.notes,\r\n    };\r\n\r\n    this.dialog.open(HelpPopupComponent, {\r\n      width: '500px',\r\n      data,\r\n      autoFocus: false,\r\n    });\r\n  }\r\n}\r\n","export default \"<mat-form-field color=\\\"accent\\\" style=\\\"width: 400px;\\\">\\r\\n  <mat-label>{{ label }}</mat-label>\\r\\n  <mat-select [value]=\\\"value\\\" (selectionChange)=\\\"selectionChange($event.value)\\\">\\r\\n    <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.key\\\">{{ item.name }}</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n<button mat-icon-button (click)=\\\"showHelp()\\\">\\r\\n  <mat-icon>help_outline</mat-icon>\\r\\n</button>\\r\\n\";","\r\nexport * from './scenarios';\r\nexport * from './examples';\r\n\r\nexport * from './help-popup/help-popup.component';\r\nexport * from './selector-with-help/selector-with-help.component';\r\n","export default \"<div mat-dialog-title>\\r\\n  <div class=\\\"dialog-title-box\\\">\\r\\n    <div>{{ dialogData.name }}</div>\\r\\n    <button mat-icon-button matTooltip=\\\"Close dialog\\\" (click)=\\\"closeDialog()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"dialog-component-content fancy-scrollbar-light\\\">\\r\\n  <p class=\\\"dialog-description\\\">\\r\\n    {{ dialogData.body }}\\r\\n  </p>\\r\\n\\r\\n  <p class=\\\"dialog-description\\\" *ngIf=\\\"dialogData.notes\\\">\\r\\n    <em>{{ dialogData.notes }}</em>\\r\\n  </p>\\r\\n</div>\\r\\n\";","import { Scenario } from './scenario';\r\n\r\nexport const AllScenarios: Array<Scenario> = [\r\n  {\r\n    key: 'internal',\r\n    in2sxc: true,\r\n    useVirtual: true,\r\n    inSameSite: true,\r\n    inSameContext: true,\r\n    name: 'JS in this App on a page (easiest)',\r\n    description: `Internal access means that your JS code is running in a 2sxc-module on a DNN-page.\r\n    This is the default access.\r\n    In this scenario, various headers are included in the request,\r\n    incl. the module it\\'s coming from, which allows various automatic things to happen.\r\n    This results in simpler REST requests.`,\r\n    notes: `This mode makes it easy to re-distribute your app, as you can perform API calls relative to the module that\\'s hosting it.\r\n    This means, that even if you export/import the app to another system, the API-calls stay the same.`,\r\n  },\r\n  {\r\n    key: 'internal2',\r\n    in2sxc: true,\r\n    useVirtual: true,\r\n    inSameSite: true,\r\n    inSameContext: false,\r\n    name: 'JS in a DIFFERENT 2sxc App on the SAME site',\r\n    description: `When using JS from another app, you cannot auto-detect of the app, so the path is slightly different.`,\r\n    notes: '',\r\n  },\r\n  // {\r\n  //   key: 'external1',\r\n  //   in2sxc: false,\r\n  //   useVirtual: false,\r\n  //   inSameSite: false,\r\n  //   inSameContext: false,\r\n  //   name: 'JS from a DIFFERENT site',\r\n  //   description: `When coding from another site, the path needs to be complete (not virtual), since auto-detection of site etc. can't work.\r\n  //   In addition, most DNN-headers cause trouble because they tell the server a context which isn't actually true. `,\r\n  //   notes: '',\r\n  // },\r\n  {\r\n    key: 'external',\r\n    in2sxc: false,\r\n    useVirtual: false,\r\n    inSameSite: false,\r\n    inSameContext: false,\r\n    name: 'External (other website, mobile device, etc.)',\r\n    description: `External access means that the JS code could be on another page / module in DNN (which is not the same app),\r\n    or it could be coming from a mobile App, or another website altogether.\r\n    In this case, automatic app-detection can\\'t work, as various headers are missing, and you must access the endpoint more explicitly.`,\r\n    notes: `This mode requires you to define the exact, full URL, so if you create copies of this app on another system,\r\n    the URL must be updated to access that system specifically.\r\n    Note that our samples are in JS, you'll have to figure it out yourself for other programming languages.`,\r\n  },\r\n];\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EntityService } from 'projects/edit';\r\nimport { EntityInfo } from 'projects/edit/shared/models/eav/entity-info';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { AllScenarios, ApiCall, generateApiCalls, Scenario } from '.';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { DialogSettings } from '../app-administration/models/dialog-settings.model';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { Context } from '../shared/services/context';\r\n\r\nconst pathToContent = 'app/{appname}/content/{typename}';\r\n\r\n@Component({\r\n  selector: 'app-dev-rest',\r\n  templateUrl: './dev-rest.component.html',\r\n  styleUrls: ['./dev-rest.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // we need preserve whitespace, as many conditional parts are put together, and then spaces are missing between them\r\n  preserveWhitespaces: true,\r\n})\r\nexport class DevRestComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component dialog-component--no-actions';\r\n\r\n  /** List of scenarios */\r\n  scenarios = AllScenarios;\r\n\r\n  templateVars$: Observable<{\r\n    contentType: ContentType;\r\n    scenario: Scenario;\r\n    modeInternal: boolean;\r\n    root: string;\r\n    itemId: number,\r\n    itemGuid: string,\r\n    apiCalls: ApiCall[],\r\n    folder: string,\r\n    moduleId: number,\r\n  }>;\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  /** Content Type to show REST infos about */\r\n  private contentType$: BehaviorSubject<ContentType>;\r\n\r\n  /** App, language, etc. */\r\n  private dialogSettings$: BehaviorSubject<DialogSettings>;\r\n\r\n  /** Currently selected scenario */\r\n  private scenario$: BehaviorSubject<Scenario>;\r\n\r\n  private modeInternal$: Observable<boolean>;\r\n\r\n  private itemOfThisType$: Observable<EntityInfo>;\r\n\r\n  /** The root path for the current request */\r\n  private root$: Observable<string>;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DevRestComponent>,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private http: HttpClient,\r\n    private contentTypesService: ContentTypesService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private entityService: EntityService,\r\n    /** Context for this dialog. Used for appId, zoneId, tabId, etc. */\r\n    private context: Context,\r\n    /** dnn-sxc-angular context. Used to resolve urls */\r\n    private dnnContext: DnnContext,\r\n  ) {\r\n    this.contentType$ = new BehaviorSubject<ContentType>(null);\r\n    this.dialogSettings$ = new BehaviorSubject<DialogSettings>(null);\r\n    this.scenario$ = new BehaviorSubject<Scenario>(this.scenarios[0]);\r\n    this.modeInternal$ = this.scenario$.pipe(map(scenario => scenario.key === 'internal'));\r\n\r\n    this.root$ = combineLatest([this.contentType$, this.scenario$, this.dialogSettings$]).pipe(\r\n      map(([contentType, scenario, dialogSettings]) => {\r\n        if (contentType == null || dialogSettings == null) { return ''; }\r\n\r\n        // const internal = scenario === AllScenarios[0];\r\n        const resolved = pathToContent\r\n          .replace('{typename}', contentType.Name)\r\n          .replace('{appname}', scenario.inSameContext ? 'auto' : encodeURI(dialogSettings.Context.App.Folder));\r\n        const domainPrefix = document.location.protocol + '//' + document.location.host;\r\n        return scenario.useVirtual\r\n          ? resolved\r\n          : (scenario.inSameSite ? '' : domainPrefix) + dnnContext.$2sxc.http.apiUrl(resolved);\r\n      }),\r\n    );\r\n\r\n    // Get an item of this type for building urls\r\n    this.itemOfThisType$ = entityService.reactiveEntities(\r\n      this.contentType$.pipe(filter(ct => !!ct), map(ct => ({ contentTypeName: ct.StaticName, filter: ''}))))\r\n      .pipe(map(list => list.length ? list[0] : null), filter(i => !!i));\r\n\r\n    // we need to mix 2 combineLatest, because a combinelatest can only take 6 streams\r\n    this.templateVars$ = combineLatest([\r\n      combineLatest([this.contentType$, this.scenario$, this.modeInternal$]),\r\n      combineLatest([this.root$, this.itemOfThisType$, this.dialogSettings$.pipe(filter(d => !!d))]),\r\n    ]).pipe(\r\n      map(([[contentType, scenario, modeInternal], [root, item, diag]]) => ({\r\n        contentType,\r\n        currentScenario: scenario,\r\n        modeInternal,\r\n        root,\r\n        itemId: item.Id,\r\n        itemGuid: item.Value,\r\n        apiCalls: generateApiCalls(dnnContext.$2sxc, scenario, context.moduleId, root, item.Id),\r\n        folder: encodeURI(diag.Context.App.Folder),\r\n        moduleId: context.moduleId,\r\n        scenario,\r\n      })),\r\n    );\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contentTypesService.retrieveContentType(this.contentTypeStaticName).subscribe(this.contentType$);\r\n    this.appDialogConfigService.getDialogSettings().subscribe(this.dialogSettings$);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.dialogSettings$.complete();\r\n    this.scenario$.complete();\r\n  }\r\n\r\n  changeScenario(scenario: Scenario) {\r\n    this.scenario$.next(scenario);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // todo: 2dm - probably open a dialog showing the results etc.\r\n  callApiGet(url: string) {\r\n    this.http.get<any>(url).subscribe(res => {\r\n      console.log(`Called ${url} and got this:`, res);\r\n      this.openSnackBar(`Called ${url}. You can see the full result in the F12 console`, 'API call returned');\r\n    });\r\n    this.openSnackBar(`Calling ${url}. You can see the full result in the F12 console`, 'API call sent');\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","export default \".tab-icon {\\n  margin-right: 8px;\\n}\\n\\ncode, pre {\\n  padding-left: 2px;\\n  padding-right: 2px;\\n  background-color: #eeeeee;\\n}\\n\\npre {\\n  white-space: pre-wrap;\\n  word-break: keep-all;\\n}\\n\\ncode.route-in-title {\\n  max-width: 50%;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\np.warning {\\n  background-color: lightcoral;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL25nLWRpYWxvZ3Mvc3JjL2FwcC9kZXYtcmVzdC9kZXYtcmVzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLGlCQUFBO0FBQUY7O0FBR0E7RUFDRSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7QUFBRjs7QUFHQTtFQUNFLHFCQUFBO0VBQ0Esb0JBQUE7QUFBRjs7QUFHQTtFQUVFLGNBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsdUJBQUE7QUFERjs7QUFJQTtFQUNFLDRCQUFBO0FBREYiLCJmaWxlIjoicHJvamVjdHMvbmctZGlhbG9ncy9zcmMvYXBwL2Rldi1yZXN0L2Rldi1yZXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi50YWItaWNvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbn1cclxuXHJcbmNvZGUsIHByZSB7XHJcbiAgcGFkZGluZy1sZWZ0OiAycHg7XHJcbiAgcGFkZGluZy1yaWdodDogMnB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7XHJcbn1cclxuXHJcbnByZSB7XHJcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xyXG4gIHdvcmQtYnJlYWs6IGtlZXAtYWxsXHJcbn1cclxuXHJcbmNvZGUucm91dGUtaW4tdGl0bGUge1xyXG4gIC8vIHRvZG86IFNQTSBwcm9iYWJseSBjb3JyZWN0IHRoaXMgdmFsdWUgbGF0ZXIgb24gd2hlbiBzY3JvbGxpbmcgaXMgZml4ZWRcclxuICBtYXgtd2lkdGg6IDUwJTtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbn1cclxuXHJcbnAud2FybmluZyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRjb3JhbDtcclxufVxyXG5cclxuLy8gVE9ETzogU1BNXHJcbi8vIFBscyBoZWxwIHNvIGFsbCBQIC8gVUwvT0wgLyBMSSBldGMuIGhhdmUgdGhlIHJpZ2h0IGZvbnQgc2l6ZSBldGMuXHJcbi8vIHVzaW5nIHZhcmlhYmxlcywgbm90IHJlcGVhdGluZyB0aGUgZGVmaW5pdGlvbiBoZXJlXHJcbiJdfQ== */\";","\r\nexport * from './all-scenarios';\r\nexport * from './scenario';\r\n","import { SxcRoot } from '@2sic.com/2sxc-typings';\r\nimport { ApiCall, CodeSample, Scenario } from '..';\r\n    // tslint:disable: curly\r\n\r\nexport function generateApiCalls($2sxc: SxcRoot, scenario: Scenario, moduleId: number, root: string, id: number) {\r\n  const virtual = root[0] !== '/';\r\n  root = root + '/';\r\n  const withId = root + id;\r\n  return [\r\n    new ApiCall(virtual, 'GET', root, 'read all', 'Read list of all items', true, snippetsGet($2sxc, scenario, root, moduleId),\r\n      $2sxc.http.apiUrl(root)),\r\n    new ApiCall(virtual, 'GET', withId, 'read one', 'Read a single item #' + id, true, snippetsGet($2sxc, scenario, withId, moduleId),\r\n      $2sxc.http.apiUrl(withId)),\r\n    new ApiCall(virtual, 'POST', root, 'create', 'Create an item', false, snippetsCreate(scenario, root, moduleId)),\r\n    new ApiCall(virtual, 'POST', withId, 'update', 'Update the item #' + id, false, snippetsUpdate(scenario, withId, moduleId)),\r\n    new ApiCall(virtual, 'DELETE', withId, 'delete', 'Delete item #' + id, false, snippetsDelete(scenario, withId, moduleId)),\r\n  ];\r\n}\r\n\r\nfunction snippetsGet($2sxc: SxcRoot, scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const virtual = path[0] !== '/';\r\n  const list: CodeSample[] = [];\r\n  if (scenario.inSameContext)\r\n    list.push(new CodeSample('Example with global $2sxc and event-context',\r\n      'This example finds the context information from the HTML where an action started.',\r\n      `\r\n<button onclick=\"$2sxc(this).webApi.get('${path}').then(data => console.log(data))\">\r\n  get it\r\n</button>`));\r\n\r\n  if (scenario.in2sxc)\r\n      list.push(new CodeSample(`Example with global $2sxc and a Module-Id ${moduleId}`,\r\n        `This is how you get the context when your code doesn't start with a DOM context, so you need the moduleId.`,\r\n        `\r\n// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n// now get the data in the promise\r\nsxc.webApi.get('${path}')\r\n  .then(data => {\r\n    console.log(data)\r\n  });`),\r\n    new CodeSample(`Same example as one-liner`,\r\n      'This is the same as above, but as a one-liner so you can run it directly in the F12 console right now.',\r\n      `$2sxc(${moduleId}).webApi.get('${path}').then(data => console.log('just got:', data));`, true));\r\n\r\n  if (scenario.in2sxc && scenario.inSameContext)\r\n    list.push(new CodeSample('Example where you get the Module-Id from Razor',\r\n      `This example doesn't use a fixed moduleId but let's the Razor add the current moduleId when the page is rendered.`,\r\n      `\r\n// this will be replaced on the server with the ID\r\nvar moduleId = @Dnn.Module.ModuleID;\r\nvar sxc = $2sxc(moduleId);\r\nvar data = sxc.webApi.get('${path}');`));\r\n\r\n  // jquery examples, they differ based on the scenario\r\n  const endPointGetter = virtual ? `$2sxc.http.apiUrl('${path}')` : `'${path}'`;\r\n  if (scenario.inSameSite) {\r\n    list.push(new CodeSample('Using jQuery inside DNN',\r\n      `This example uses jQuery instead of the $2sxc to do the AJAX call.\r\n      It shows you how to resolve the virtual path for use in other ways.`,\r\n      `\r\nvar endpoint = ${endPointGetter};\r\n$.ajax({\r\n  url:endpoint,\r\n  beforeSend: $.dnnSF(${moduleId}).setModuleHeaders\r\n})}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`));\r\n    list.push(new CodeSample('Using jQuery as single-liner',\r\n      `The same example as above, just as single-liner so you can test it directly in the F12 console.\r\n      This will only work if you're on a DNN page with this module.`,\r\n      `$.ajax({url: ${endPointGetter}, beforeSend: $.dnnSF(${moduleId}).setModuleHeaders }).then(data => console.log(data))`));\r\n  } else {\r\n    list.push(new CodeSample('Using jQuery in another Site or External',\r\n      `This example uses jQuery and doesn't use $2sxc or the DNN ServicesFramework,\r\n      because they would be either missing, or give wrong context-headers.\r\n      IMPORTANT: This will only work if you set anonymous permissions on the content-type.`,\r\n      `\r\nvar endpoint = '${path}';\r\n$.ajax({\r\nurl:endpoint,\r\n})}).then(data => {\r\n  console.log('Got this data:', data);\r\n})`));\r\n\r\n  }\r\n  // return generated snippets\r\n  return list;\r\n}\r\n\r\n/** Snippets for basic Post-Create */\r\nfunction snippetsCreate(scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const showWarning = !scenario.inSameContext;\r\n  return [\r\n    new CodeSample('Basic Example',\r\n      `This example uses the ModuleId to get the context information.\r\nTo see other ways to get the context and headers, check out the GET examples.\r\nNote that this snippet doesn't use real names of properties to add.`,\r\n`// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n\r\n// The object we'll send to get created. It's just a simple object with properties\r\nvar newThing = {\r\n  property1: 17,\r\n  property2: 'Some Text',\r\n  // related items like tags can be assigned with IDs\r\n  // which you would usually get from somewhere first\r\n  propertyPointingToOtherIds: [74,50203],\r\n};\r\n\r\n// now create it and get the id back\r\nsxc.webApi.post('${path}', newThing)\r\n  .then(data => {\r\n    console.log('Got this ID information: ', data)\r\n  });`,\r\n  false,\r\n  showWarning ? `WARNING: We only prepared the basic example running in the same app. You can of course also run this elsewhere,\r\n  but you'll have to compare it with the GET examples to be sure you have the right headers etc. ` : ''),\r\n  ];\r\n}\r\n\r\n/** Snippets for basic Post-Update */\r\nfunction snippetsUpdate(scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const showWarning = !scenario.inSameContext;\r\n  return [\r\n    new CodeSample('Basic Example',\r\n    `This example uses the ModuleId to get the context information.\r\nTo see other ways to get the context and headers, check out the GET examples.\r\nNote that this snippet doesn't use real names of properties to add.`,\r\n`// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n\r\n// The object we'll send to update the data. It's just a simple object with properties\r\nvar updateProperty1And2 = {\r\n  property1: 2742,\r\n  property2: 'Changed Text',\r\n};\r\n\r\n// now update the item\r\nsxc.webApi.post('${path}', updateProperty1And2)\r\n  .then(data => {\r\n    console.log('Update completed', data)\r\n  });`,\r\n  false,\r\n  showWarning ? `WARNING: We only prepared the basic example running in the same app. You can of course also run this elsewhere,\r\n  but you'll have to compare it with the GET examples to be sure you have the right headers etc. ` : ''),\r\n  ];\r\n}\r\n\r\n/** Snippets for basic Post-Update */\r\nfunction snippetsDelete(scenario: Scenario, path: string, moduleId: number): CodeSample[] {\r\n  const showWarning = !scenario.inSameContext;\r\n  return [\r\n    new CodeSample('Basic Example',\r\n    `This example uses the ModuleId to get the context information.\r\nTo see other ways to get the context and headers, check out the GET examples.\r\nNote that this snippet doesn't use real names of properties to add.`,\r\n`// get the sxc-controller for this module\r\nvar sxc = $2sxc(${moduleId});\r\n\r\n// delete the item\r\nsxc.webApi.delete('${path}')\r\n  .then(data => {\r\n    console.log('Delete completed', data)\r\n  });`,\r\n  false,\r\n  showWarning ? `WARNING: We only prepared the basic example running in the same app. You can of course also run this elsewhere,\r\n  but you'll have to compare it with the GET examples to be sure you have the right headers etc. ` : ''),\r\n  ];\r\n}\r\n","import { CodeSample } from './code-sample';\r\n\r\nexport class ApiCall {\r\n  constructor(\r\n    public virtual: boolean,\r\n    public verb: 'GET' | 'POST' | 'DELETE',\r\n    public url: string,\r\n    public teaser: string,\r\n    public instructions: string,\r\n    public enableButton: boolean,\r\n    public code: CodeSample[] = [],\r\n    public browseUrl: string = null,\r\n    ) {}\r\n}\r\n","export class CodeSample {\r\n  constructor(\r\n    public title: string,\r\n    public description: string,\r\n    public code: string,\r\n    // public wrap = false,\r\n    public runInConsole = false,\r\n    public warning = '') {\r\n\r\n      // the code often has a leading new-line - so we'll trim this\r\n      this.code = this.code.trim();\r\n  }\r\n}\r\n","export * from './api-call';\r\nexport * from './code-sample';\r\nexport * from './generate-samples';\r\n","export default \"<ng-container *ngIf=\\\"templateVars$ | async as data\\\">\\r\\n  <div mat-dialog-title>\\r\\n    <div class=\\\"dialog-title-box\\\">\\r\\n      <div>Using REST with {{ data.contentType?.Name }}</div>\\r\\n      <button mat-icon-button matTooltip=\\\"Close dialog\\\" (click)=\\\"closeDialog()\\\">\\r\\n        <mat-icon>close</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <mat-dialog-content class=\\\"dialog-component-content fancy-scrollbar-light\\\" style=\\\"height: 100%\\\">\\r\\n    <!-- TODO: SPM - pls help so scrolling works correctly -->\\r\\n    <app-selector-with-help label=\\\"Choose Scenario\\\" [items]=\\\"scenarios\\\" [value]=\\\"data.scenario.key\\\"\\r\\n      (valueChange)=\\\"changeScenario($event)\\\">\\r\\n    </app-selector-with-help>\\r\\n\\r\\n    <ng-container *ngTemplateOutlet=\\\"restTabs\\\"></ng-container>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <ng-template #restTabs>\\r\\n    <mat-tab-group color=\\\"accent\\\">\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <mat-icon class=\\\"tab-icon\\\">emoji_objects</mat-icon>\\r\\n          Introduction\\r\\n        </ng-template>\\r\\n        <p class=\\\"dialog-description\\\">\\r\\n          All data can be used in JavaScript, SPAs or anywhere with the REST API\\r\\n          (see <a href=\\\"https://docs.2sxc.org/specs/web-api/intro.html\\\" target=\\\"_blank\\\">docs</a>).\\r\\n          Use this for things like:\\r\\n        </p>\\r\\n        <ul>\\r\\n          <li>Creating SPAs in DNN/2sxc</li>\\r\\n          <li>Getting data for mobile apps</li>\\r\\n          <li>Sharing data to other platforms</li>\\r\\n          <li>Using DNN/2sxc as a headless CMS</li>\\r\\n        </ul>\\r\\n        <p class=\\\"dialog-description\\\">\\r\\n          Just set off HTTP <code>GET</code> requests or similar\\r\\n          to the endpoint like <code>{{ data.root }}</code>. You can find the full list with example code\\r\\n          in the next tabs.\\r\\n          Make sure you also read about permissions and HTTP headers.\\r\\n        </p>\\r\\n        <h3>Scenarios</h3>\\r\\n        <ng-container *ngFor=\\\"let scenario of scenarios\\\">\\r\\n          <h4>Scenario: {{ scenario.name }}</h4>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            {{ scenario.description }}\\r\\n          </p>\\r\\n          <p class=\\\"dialog-description\\\" *ngIf=\\\"scenario.notes\\\">\\r\\n            <em>\\r\\n              {{ scenario.notes }}\\r\\n            </em>\\r\\n          </p>\\r\\n        </ng-container>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <mat-icon class=\\\"tab-icon\\\">code</mat-icon>\\r\\n          {{ data.scenario.useVirtual ? \\\"Virtual \\\" : \\\"Absolute \\\"}} REST URLs\\r\\n        </ng-template>\\r\\n          <p class=\\\"dialog-description\\\" *ngIf=\\\"data.scenario.useVirtual\\\">\\r\\n            Virtual REST URLs are short. They will be resolved internally\\r\\n            to the full length (based on the dnn-version, current portal, etc.)\\r\\n            thanks to $2sxc JS API. This happens when you use the\\r\\n            <a href=\\\"https://docs.2sxc.org/specs/js/sxcewebapi.html\\\" target=\\\"_blank\\\">\\r\\n              $2sxc(<em>id-or-htmlnode</em>).webApi.get(...)\\r\\n            </a>\\r\\n            or if you use\\r\\n            <a href=\\\"https://https://www.npmjs.com/package/@2sic.com/dnn-sxc-angular\\\" target=\\\"_blank\\\">\\r\\n              dnn-sxc-angular (npm package)\\r\\n            </a>\\r\\n            (which also passes url-resolving through $2sxc).\\r\\n          </p>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            The examples below use real values to make it easier to get started.\\r\\n            The values used are the current content-type <code>{{ data.contentType.Name }}</code>,\\r\\n            the current Module ID <code>{{ data.moduleId }}</code>\\r\\n            and the folder of the current App folder <code>{{ data.folder }}</code> (where needed).\\r\\n            The code also looked up an item of this type and will use it's ID <code>{{data.itemId}}</code> in the examples.\\r\\n          </p>\\r\\n\\r\\n          <ng-container *ngTemplateOutlet=\\\"restUrls\\\"></ng-container>\\r\\n      </mat-tab>\\r\\n\\r\\n      <!-- Permissions explained -->\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <mat-icon class=\\\"tab-icon\\\">person</mat-icon>\\r\\n          Permissions ({{ data.contentType.Permissions.Count }})\\r\\n          <mat-icon *ngIf=\\\"data.contentType.Permissions.Count === 0\\\">warning</mat-icon>\\r\\n        </ng-template>\\r\\n          <h3>Permissions ({{ data.contentType.Permissions.Count }})</h3>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            This content-type ({{ data.contentType.Name }}) has {{ data.contentType.Permissions.Count }} permissions configured.\\r\\n          </p>\\r\\n          <p class=\\\"dialog-description warning\\\" *ngIf=\\\"data.contentType.Permissions.Count === 0\\\">\\r\\n            <mat-icon>warning</mat-icon>\\r\\n            Warning: you don't have any permissions configured. So only Super-Users (Host) will be able to use the API endpoints.\\r\\n          </p>\\r\\n\\r\\n\\r\\n          <h4>Super-Users (Host) can use all Endpoints</h4>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            As a super-user you can always access these REST endpoints, so this will make development easy.\\r\\n            Just remember to change the content-type permissions when you publish your work to public pages.\\r\\n          </p>\\r\\n\\r\\n          <h4>Set permissions for visitors to use this</h4>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            To let JavaScript access the REST endpoints for normal users, you must set the permissions of the content-type.\\r\\n            Usually you will just want to set it like <em>if user has view-permissions, let him read this content-type</em>.\\r\\n            In rare cases (eg. JS based forms) you may also want to give it some write permissions. Just be careful.\\r\\n            If you give write permissions, you will usually <em>only</em> want to give create, but not edit.\\r\\n          </p>\\r\\n\\r\\n          <h4>Setting permissions for use outside of DNN</h4>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            When calling API endpoints from a DNN page you will usually use the <code>$2sxc</code> or the DNN Services-Framework.\\r\\n            These automatically add some HTTP-Headers (see tab about HTTP Headers) which let DNN determine that the API-Call\\r\\n            was made on a specific page/module - and DNN uses this to check the permissions.\\r\\n          </p>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            IF you are calling the endpoint from outside of DNN then these headers will be missing.\\r\\n            Because of this, permissions saying \\\"If has VIEW permissions, allow read\\\" will fail - because DNN cannot determine\\r\\n            if the user has view permissions.\\r\\n          </p>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            So to enable use from external, the condition must be \\\"If has ANONYMOUS permissions, allow ...\\\".\\r\\n            Because the ANONYMOUS check passes even if DNN doesn't know what page the module is on.\\r\\n          </p>\\r\\n      </mat-tab>\\r\\n\\r\\n      <!-- HTTP Headers Explained -->\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <mat-icon class=\\\"tab-icon\\\">perm_device_information</mat-icon>\\r\\n          HTTP headers and &nbsp;<code>auto</code>\\r\\n        </ng-template>\\r\\n          <h3>Background</h3>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            It's important that you know that DNN includes special headers in HTTP requests.\\r\\n            This is to include context, so it can find what page/module you were on.\\r\\n            The platform needs this because it usually needs to know things like:\\r\\n          </p>\\r\\n          <ul>\\r\\n            <li>What website / language am I on</li>\\r\\n            <li>What module am I on, and what App is being shown (this is used to resolve the <code>/auto/</code> in the path</li>\\r\\n            <li>Does the user have VIEW / EDIT / etc. permissions</li>\\r\\n          </ul>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            When accessing an API from external, there is no real <em>context</em> for the call, which is why you have to replace\\r\\n            <code>/auto/</code> in the path with <code>/{{ data.folder }}/</code> instead.\\r\\n          </p>\\r\\n          <h3>Common Headers when using the API from JS on a DNN Page</h3>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            These are the headers which are needed in DNN by default:\\r\\n          </p>\\r\\n          <ol>\\r\\n            <li><code>TabId</code>: this is the page id, a number</li>\\r\\n            <li><code>ModuleId</code>: this is the module id, a number</li>\\r\\n            <li><code>RequestVerificationToken</code>: this is a crypto key to prove that the request originated from the same site. It's only included in POST/PUT/DELETE requests. </li>\\r\\n          </ol>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            These are the headers which 2sxc sometimes adds:\\r\\n          </p>\\r\\n          <ol>\\r\\n            <li><code>ContentBlockId</code>: the unit of content we're editing/changing or</li>\\r\\n            <li><code>PageId</code>: we're trying to use this new header instead of TabId, which is just an odd name. Still WIP</li>\\r\\n          </ol>\\r\\n          <h3>Usually this happens automatically</h3>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            When you use an helper object of 2sxc (like <code>$2sxc</code> or <code>dnn-sxc-angular</code>).\\r\\n          </p>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n  <!-- REST Tab showing the urls and code snippets -->\\r\\n  <ng-template #restUrls>\\r\\n    <mat-accordion multi=\\\"true\\\">\\r\\n      <mat-expansion-panel *ngFor=\\\"let apiCall of data.apiCalls\\\">\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n            <code>{{apiCall.verb}}</code>: <code class=\\\"route-in-title\\\">{{ apiCall.url }}</code>\\r\\n            <span> &nbsp;to {{ apiCall.teaser }} </span>\\r\\n          </mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <mat-panel-description style=\\\"display: block;\\\">\\r\\n          <h4>{{ apiCall.instructions }}</h4>\\r\\n          <p class=\\\"dialog-description\\\">\\r\\n            HTTP Verb: <code>{{apiCall.verb}}</code> <br>\\r\\n            {{ data.scenario.useVirtual ? 'Virtual' : 'Absolute'}} Url: <code>{{ apiCall.url }}</code>\\r\\n          </p>\\r\\n          <p class=\\\"dialog-description\\\" *ngIf=\\\"apiCall.enableButton\\\">\\r\\n            <button mat-raised-button (click)=\\\"callApiGet(apiCall.url)\\\">Call and Output to Console</button>\\r\\n            <a *ngIf=\\\"!data.scenario.useVirtual && apiCall.browseUrl\\\" [href]=\\\"apiCall.browseUrl\\\" target=\\\"_blank\\\">Open in Browser</a>\\r\\n          </p>\\r\\n\\r\\n          <ng-container *ngFor=\\\"let code of apiCall.code\\\">\\r\\n            <h4>{{ code.title }}</h4>\\r\\n            <p>{{ code.description }}</p>\\r\\n            <pre style=\\\"word-wrap: pre-wrap\\\">{{ code.code }}</pre>\\r\\n            <p *ngIf=\\\"code.warning\\\" class=\\\"warning\\\">\\r\\n              <mat-icon>warning</mat-icon>\\r\\n              {{ code.warning }}\\r\\n            </p>\\r\\n          </ng-container>\\r\\n\\r\\n        </mat-panel-description>\\r\\n      </mat-expansion-panel>\\r\\n    </mat-accordion>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ng-container>\\r\\n\";","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EavService, EntityService } from 'projects/edit';\r\nimport { HelpPopupComponent, SelectorWithHelpComponent } from '.';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { DevRestRoutingModule } from './dev-rest-routing.module';\r\nimport { DevRestComponent } from './dev-rest.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DevRestComponent,\r\n    SelectorWithHelpComponent,\r\n    HelpPopupComponent,\r\n  ],\r\n  entryComponents: [\r\n    DevRestComponent,\r\n    SelectorWithHelpComponent,\r\n    HelpPopupComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DevRestRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentTypesService,\r\n    AppDialogConfigService,\r\n    // ?\r\n    EntityService,\r\n    EavService,\r\n  ]\r\n})\r\nexport class DevRestModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { devRestDialog } from './dev-rest-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: devRestDialog, title: 'REST API' } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DevRestRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}