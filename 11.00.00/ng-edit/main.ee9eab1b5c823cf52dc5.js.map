{"version":3,"sources":["./src/app/shared/helpers/angular-console-log.ts","../edit/shared/models/eav-configuration.ts","../edit/shared/helpers/url-helper.ts","./src/environments/environment.ts","./src/app/shared/services/context.ts","./src/app/shared/constants/sessions-keys.ts","../edit/edit.matcher.ts","../edit/shared/store/reducers/global-configuration.reducer.ts","../edit/shared/store/reducers/index.ts","../edit/shared/store/selectors/global-configuration.selectors.ts","../edit/shared/store/index.ts","../edit/shared/store/actions/global-configuration.actions.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/params-init.factory.ts","../edit/shared/store/ngrx-data/entity-metadata.ts","./src/app/shared/interceptors/set-headers.interceptor.ts","./src/app/shared/interceptors/handle-errors.interceptor.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":["angularConsoleLog","message","production","console","groupCollapsed","optionalParams","trace","groupEnd","zoneId","appId","approot","cbid","debug","dialog","items","lang","langpri","langs","mid","mode","partOfPage","portalroot","publishing","tid","rvt","websiteroot","versioningOptions","this","systemroot","readQueryStringParameters","url","queryParams","split","forEach","f","length","decodeURIComponent","replace","getEavConfiguration","route","context","editFormData","JSON","parse","snapshot","params","EavConfiguration","toString","sessionStorage","getItem","contentBlockId","stringify","moduleId","tabId","requestToken","UrlHelper","getVersioningOptions","show","hide","branch","req","error","replaceUrlParam","paramName","paramValue","pattern","RegExp","search","indexOf","getUrlPrefix","area","eavConfig","result","endsWith","substring","environment","parentContext","ready","parent","globalWindow","window","contextId","id","_zoneId","routeNum","_appId","_rvt","_tabId","_contentBlockId","_moduleId","init","routeSnapshot","clearCachedValues","initRoot","sessionNumber","Error","name","num","parseInt","isNaN","paramMap","get","Context","prefix","keyZoneId","keyRequestToken","keyTabId","keyContentBlockId","keyModuleId","keyAppId","keyAppRoot","keyDebug","keyDialog","keyContentType","keyFa","keyItems","keyLang","keyLangPri","keyLangs","keyMode","keyPartOfPage","keyPortalRoot","keyPublishing","keyWebsiteRoot","keyFilters","keyUserCanDesign","keyUserCanDevelop","keyPipelineId","keyUrl","editRoot","path","hasExpandedFieldId","consumed","slice","posParams","expandedFieldId","edit","initialState","debugEnabled","globalConfigurationReducer","state","metaReducers","reducer","action","reducers","globalConfiguration","selectDebugEnabled","loadDebugEnabled","toggleDebugEnabled","appRoutes","loadChildren","then","m","AppsManagementModule","ImportAppModule","AppAdministrationModule","CodeEditorModule","VisualQueryModule","ReplaceContentModule","ManageContentListModule","ContentItemsModule","ContentTypeFieldsModule","matcher","EditModule","ContentExportModule","PermissionsModule","AppRoutingModule","forRoot","el","dnnContext","matIconRegistry","preConfigure","setDefaultFontSetClass","AppComponent","paramsInitFactory","injector","log","eavKeys","Object","keys","filter","key","startsWith","location","hash","alert","href","removeItem","setItem","urlHash","queryParametersFromUrl","paramKeys","value","router","contentType","navigate","editItems","pipelineId","replaceItems","Group","Guid","Part","Index","groupItems","$2sxc","totalPopup","close","env","load","page","root","api","entityConfig","entityMetadata","Item","selectId","entity","undefined","guid","Feature","Language","LanguageInstance","formId","ContentType","InputType","Type","pluralNames","intercept","next","modified","body","FormData","handle","clone","setHeaders","SetHeadersInterceptor","pipe","catchError","showDetailedHttpError","throwError","infoText","status","srvResp","msg","Message","msgDet","MessageDetail","ExceptionMessage","HandleErrorsInterceptor","AppModule","provide","useFactory","deps","multi","useClass","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","bootstrapModule","catch","err","webpackEmptyAsyncContext","Promise","resolve","e","code","module","exports"],"mappings":"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","file":"main.ee9eab1b5c823cf52dc5.js","sourcesContent":["import { environment } from '../../../environments/environment';\r\n\r\nexport function angularConsoleLog(message?: any, ...optionalParams: any[]) {\r\n  if (environment.production) { return; }\r\n\r\n  console.groupCollapsed(message, ...optionalParams);\r\n  // tslint:disable-next-line:no-console\r\n  console.trace();\r\n  console.groupEnd();\r\n}\r\n","import { VersioningOptions } from './eav/versioning-options';\r\n\r\nexport class EavConfiguration {\r\n  public systemroot: string;\r\n\r\n  constructor(\r\n    public zoneId: string,\r\n    public appId: string,\r\n    public approot: string,\r\n    public cbid: string,\r\n    public debug: string,\r\n    public dialog: string,\r\n    public items: string,\r\n    public lang: string,\r\n    public langpri: string,\r\n    public langs: string,\r\n    public mid: string,\r\n    public mode: string,\r\n    public partOfPage: string,\r\n    public portalroot: string,\r\n    public publishing: string,\r\n    public tid: string,\r\n    public rvt: string,\r\n    public websiteroot: string,\r\n    public versioningOptions: VersioningOptions,\r\n  ) {\r\n    this.systemroot = websiteroot + 'desktopmodules/tosic_sexycontent/';\r\n  }\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\n\r\nimport { EavConfiguration } from '../models/eav-configuration';\r\nimport { VersioningOptions } from '../models/eav/versioning-options';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppRoot, keyDebug, keyDialog, keyLang, keyLangPri, keyLangs, keyMode, keyPartOfPage, keyPortalRoot, keyPublishing, keyWebsiteRoot } from '../../../ng-dialogs/src/app/shared/constants/sessions-keys';\r\nimport { Context } from '../../../ng-dialogs/src/app/shared/services/context';\r\nimport { EditForm } from '../../../ng-dialogs/src/app/app-administration/shared/models/edit-form.model';\r\n\r\nexport class UrlHelper {\r\n\r\n  static readQueryStringParameters(url: string): { [key: string]: string } {\r\n    const queryParams: { [key: string]: string } = {};\r\n    url.split('&').forEach(f => {\r\n      if (f.split('=').length === 2) {\r\n        queryParams[f.split('=')[0]] = decodeURIComponent(f.split('=')[1].replace(/\\+/g, ' '));\r\n      }\r\n    });\r\n    return queryParams;\r\n  }\r\n\r\n  /** Create EavConfiguration from sessionStorage */\r\n  static getEavConfiguration(route: ActivatedRoute, context: Context) {\r\n    const editFormData: EditForm = JSON.parse(decodeURIComponent(route.snapshot.params.items));\r\n    return new EavConfiguration(\r\n      context.zoneId.toString(),\r\n      context.appId.toString(),\r\n      sessionStorage.getItem(keyAppRoot),\r\n      context.contentBlockId.toString(),\r\n      sessionStorage.getItem(keyDebug),\r\n      sessionStorage.getItem(keyDialog),\r\n      JSON.stringify(editFormData.items),\r\n      sessionStorage.getItem(keyLang),\r\n      sessionStorage.getItem(keyLangPri),\r\n      sessionStorage.getItem(keyLangs),\r\n      context.moduleId.toString(),\r\n      sessionStorage.getItem(keyMode),\r\n      sessionStorage.getItem(keyPartOfPage),\r\n      sessionStorage.getItem(keyPortalRoot),\r\n      sessionStorage.getItem(keyPublishing),\r\n      context.tabId.toString(),\r\n      context.requestToken.toString(),\r\n      sessionStorage.getItem(keyWebsiteRoot),\r\n      UrlHelper.getVersioningOptions(sessionStorage.getItem(keyPartOfPage) === 'true', sessionStorage.getItem(keyPublishing))\r\n    );\r\n  }\r\n\r\n  private static getVersioningOptions(partOfPage: boolean, publishing: string): VersioningOptions {\r\n    if (!partOfPage) { return { show: true, hide: true, branch: true }; }\r\n\r\n    const req = publishing || '';\r\n    switch (req) {\r\n      case '':\r\n      case 'DraftOptional': return { show: true, hide: true, branch: true };\r\n      case 'DraftRequired': return { branch: true, hide: true };\r\n      default: {\r\n        console.error('invalid versioning requiremenets: ' + req.toString());\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n  static replaceUrlParam(url: string, paramName: string, paramValue: string) {\r\n    if (paramValue === null) { paramValue = ''; }\r\n\r\n    const pattern = new RegExp('\\\\b(' + paramName + '=).*?(&|#|$)');\r\n    if (url.search(pattern) >= 0) { return url.replace(pattern, '$1' + paramValue + '$2'); }\r\n\r\n    url = url.replace(/[?#]$/, '');\r\n    return url + (url.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;\r\n  }\r\n\r\n  static getUrlPrefix(area: string, eavConfig: EavConfiguration) {\r\n    let result = '';\r\n\r\n    if (area === 'system') { result = eavConfig.systemroot; }                    // used to link to JS-stuff and similar\r\n    if (area === 'zone') { result = eavConfig.portalroot; }                      // used to link to the site-root (like an image)\r\n    if (area === 'app') { result = eavConfig.approot; }                          // used to find the app-root of something inside an app\r\n    if (result.endsWith('/')) { result = result.substring(0, result.length - 1); }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","import { Injectable, SkipSelf, Optional } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { keyZoneId, keyAppId, keyTabId, keyContentBlockId, keyModuleId, keyRequestToken, prefix } from '../constants/sessions-keys';\r\nimport { angularConsoleLog } from '../helpers/angular-console-log';\r\n\r\n/** The context provides information */\r\n@Injectable()\r\nexport class Context {\r\n\r\n  /** Id of current context */\r\n  public id: number;\r\n\r\n  /** Determines if the context is ready to use, and everything is initialized */\r\n  public ready = false;\r\n\r\n  /** The parent, for hierarchical lookup */\r\n  private parent: Context;\r\n\r\n  private routeSnapshot: ActivatedRouteSnapshot;\r\n\r\n  /** The current Zone ID */\r\n  get zoneId(): number {\r\n    return this._zoneId || (this._zoneId = this.routeNum(keyZoneId) || this.parent.zoneId);\r\n  }\r\n  private _zoneId: number;\r\n\r\n  /** The current App ID */\r\n  get appId(): number {\r\n    return (this._appId != null) ? this._appId : (this._appId = this.routeNum(keyAppId) || this.parent.appId);\r\n  }\r\n  private _appId: number;\r\n\r\n\r\n  /**\r\n   * The request verification token for http requests.\r\n   * It's only loaded from the root, never from sub-contexts\r\n   */\r\n  get requestToken(): string { return this._rvt || (this._rvt = this.parent.requestToken); }\r\n  private _rvt: string;\r\n\r\n  /** Tab Id is global */\r\n  get tabId(): number {\r\n    return this._tabId || (this._tabId = this.routeNum(keyTabId) || this.parent.tabId);\r\n  }\r\n  private _tabId: number;\r\n\r\n  /** Content Block Id is global */\r\n  get contentBlockId(): number {\r\n    return this._contentBlockId || (this._contentBlockId = this.routeNum(keyContentBlockId) || this.parent.contentBlockId);\r\n  }\r\n  private _contentBlockId: number;\r\n\r\n  /** Module Id is global */\r\n  get moduleId(): number {\r\n    return this._moduleId || (this._moduleId = this.routeNum(keyModuleId) || this.parent.moduleId);\r\n  }\r\n  private _moduleId: number;\r\n\r\n  constructor(@Optional() @SkipSelf() parentContext: Context) {\r\n    angularConsoleLog('Context.constructor');\r\n    this.parent = parentContext;\r\n\r\n    // spm NOTE: I've given id to every context to make it easier to follow how things work\r\n    const globalWindow = window as any;\r\n    if (!globalWindow.contextId) { globalWindow.contextId = 0; }\r\n    this.id = globalWindow.contextId++;\r\n  }\r\n\r\n\r\n  /**\r\n   * This is the initializer at entry-componets of modules.\r\n   * It ensures that within that module, the context has the values given by the route\r\n   */\r\n  init(route: ActivatedRoute) {\r\n    angularConsoleLog('Context.init', route);\r\n    this.routeSnapshot = route && route.snapshot;\r\n    this.clearCachedValues();\r\n    this.ready = route != null;\r\n  }\r\n\r\n  initRoot() {\r\n    angularConsoleLog('Context.initRoot');\r\n\r\n    // required, global things\r\n    this._rvt = sessionStorage.getItem(keyRequestToken);\r\n    this._zoneId = this.sessionNumber(keyZoneId);\r\n    this._tabId = this.sessionNumber(keyTabId);\r\n    this._contentBlockId = this.sessionNumber(keyContentBlockId);\r\n    this._moduleId = this.sessionNumber(keyModuleId);\r\n\r\n    if (!this._rvt || !this._zoneId || !this._tabId || !this._contentBlockId || !this._moduleId) {\r\n      throw new Error('Context is missing some of the required parameters');\r\n    }\r\n\r\n    // optional global things\r\n    this._appId = this.sessionNumber(keyAppId);\r\n\r\n    this.ready = true;\r\n  }\r\n\r\n  private sessionNumber(name: string): number {\r\n    const result = sessionStorage.getItem(name);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get a number from the route, or optionally its parents.\r\n   * Returns value in route or null\r\n   */\r\n  private routeNum(name: string): number {\r\n    // catch case where state is null, like when the recursive parent is in use\r\n    if (this.routeSnapshot == null) { return null; }\r\n\r\n    const paramName = name.substring(prefix.length);\r\n    const result = this.routeSnapshot.paramMap.get(paramName);\r\n    if (result !== null) {\r\n      const num = parseInt(result, 10);\r\n      return isNaN(num) ? null : num;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears cached values. Required when one module instance is opened multiple times,\r\n   * e.g. Apps Management -> App Admin for appId 2 -> back -> App Admin for appId 17.\r\n   * Module is reused, and so is context and it contains values for previous appId.\r\n   */\r\n  private clearCachedValues() {\r\n    this._zoneId = null;\r\n    this._appId = null;\r\n    this._rvt = null;\r\n    this._tabId = null;\r\n    this._contentBlockId = null;\r\n    this._moduleId = null;\r\n  }\r\n}\r\n","export const prefix = 'eav-';\r\nexport const keyZoneId = prefix + 'zoneId';\r\nexport const keyRequestToken = prefix + 'rvt';\r\nexport const keyTabId = prefix + 'tid';\r\nexport const keyContentBlockId = prefix + 'cbid';\r\nexport const keyModuleId = prefix + 'mid';\r\nexport const keyAppId = prefix + 'appId';\r\nexport const keyAppRoot = prefix + 'approot';\r\nexport const keyDebug = prefix + 'debug';\r\nexport const keyDialog = prefix + 'dialog';\r\nexport const keyContentType = prefix + 'contentType';\r\nexport const keyFa = prefix + 'fa';\r\nexport const keyItems = prefix + 'items';\r\nexport const keyLang = prefix + 'lang';\r\nexport const keyLangPri = prefix + 'langpri';\r\nexport const keyLangs = prefix + 'langs';\r\nexport const keyMode = prefix + 'mode';\r\nexport const keyPartOfPage = prefix + 'partOfPage';\r\nexport const keyPortalRoot = prefix + 'portalroot';\r\nexport const keyPublishing = prefix + 'publishing';\r\nexport const keyWebsiteRoot = prefix + 'websiteroot';\r\nexport const keyFilters = prefix + 'filters';\r\nexport const keyUserCanDesign = prefix + 'user%5BcanDesign%5D';\r\nexport const keyUserCanDevelop = prefix + 'user%5BcanDevelop%5D';\r\nexport const keyPipelineId = prefix + 'pipelineId';\r\n/** Url which opened the dialog. Used for debugging */\r\nexport const keyUrl = prefix + 'url';\r\n","import { UrlSegment, UrlMatchResult } from '@angular/router';\r\n\r\n/** ':zoneId/:appId/edit/:items' or ':zoneId/:appId/edit/:items/details/:expandedFieldId' */\r\nexport function editRoot(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 4) { return null; }\r\n  if (url[2].path !== 'edit') { return null; }\r\n  const hasExpandedFieldId = !!url[4] && url[4].path === 'details' && !!url[5];\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, hasExpandedFieldId ? 6 : 4),\r\n    posParams: {\r\n      zoneId: url[0],\r\n      appId: url[1],\r\n      items: url[3],\r\n      ...(hasExpandedFieldId && { expandedFieldId: url[5] }),\r\n    }\r\n  };\r\n  return match;\r\n}\r\n\r\n/** 'edit/:items' or 'edit/:items/details/:expandedFieldId' */\r\nexport function edit(url: UrlSegment[]): UrlMatchResult {\r\n  if (url.length < 2) { return null; }\r\n  if (url[0].path !== 'edit') { return null; }\r\n  const hasExpandedFieldId = !!url[2] && url[2].path === 'details' && !!url[3];\r\n  const match: UrlMatchResult = {\r\n    consumed: url.slice(0, hasExpandedFieldId ? 4 : 2),\r\n    posParams: {\r\n      items: url[1],\r\n      ...(hasExpandedFieldId && { expandedFieldId: url[3] }),\r\n    }\r\n  };\r\n  return match;\r\n}\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\n\r\nimport { keyDebug } from '../../../../ng-dialogs/src/app/shared/constants/sessions-keys';\r\nimport * as GlobalConfigurationActions from '../actions/global-configuration.actions';\r\n\r\nexport interface GlobalConfigurationState {\r\n  debugEnabled: boolean;\r\n}\r\n\r\nexport const initialState: GlobalConfigurationState = {\r\n  debugEnabled: sessionStorage.getItem(keyDebug) === 'true',\r\n};\r\n\r\nconst globalConfigurationReducer = createReducer(\r\n  initialState,\r\n  on(GlobalConfigurationActions.loadDebugEnabled, (state, { debugEnabled }) => ({ ...state, debugEnabled })),\r\n  on(GlobalConfigurationActions.toggleDebugEnabled, (state) => ({ ...state, debugEnabled: !state.debugEnabled })),\r\n);\r\n\r\nexport function reducer(state: GlobalConfigurationState | undefined, action: Action) {\r\n  return globalConfigurationReducer(state, action);\r\n}\r\n","import { ActionReducerMap, ActionReducer, MetaReducer, } from '@ngrx/store';\r\n\r\nimport { environment } from '../../../../ng-dialogs/src/environments/environment';\r\nimport * as fromGlobalConfiguration from './global-configuration.reducer';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log';\r\n\r\nexport interface EavState {\r\n  globalConfiguration: fromGlobalConfiguration.GlobalConfigurationState;\r\n}\r\n\r\n/** Console log all actions */\r\nexport function logger(reducer: ActionReducer<EavState>): ActionReducer<EavState> {\r\n  return (state: EavState, action: any): EavState => {\r\n    angularConsoleLog('[STORE] state', state);\r\n    angularConsoleLog('[STORE] action', action);\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\n/**\r\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\r\n * the root meta-reducer. To add more meta-reducers, provide an array of meta-reducers\r\n * that will be composed to form the root meta-reducer.\r\n */\r\nexport const metaReducers: MetaReducer<any>[] = !environment.production\r\n  ? [logger]\r\n  : [];\r\n\r\nexport const reducers: ActionReducerMap<EavState> = {\r\n  globalConfiguration: fromGlobalConfiguration.reducer,\r\n};\r\n","import { createSelector } from '@ngrx/store';\r\nimport { GlobalConfigurationState } from '../reducers/global-configuration.reducer';\r\nimport { EavState } from '../reducers';\r\n\r\nexport const selectGlobalConfiguration = (state: EavState) => state.globalConfiguration;\r\n\r\nexport const selectDebugEnabled = createSelector(\r\n  selectGlobalConfiguration,\r\n  (state: GlobalConfigurationState) => state.debugEnabled\r\n);\r\n","export * from './reducers';\r\nexport * from './selectors';\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { GlobalConfigurationState } from '../reducers/global-configuration.reducer';\r\n\r\nexport const loadDebugEnabled = createAction(\r\n  '[GlobalConfiguration] LOAD_DEBUG_ENABLED',\r\n  props<GlobalConfigurationState>()\r\n);\r\n\r\nexport const toggleDebugEnabled = createAction('[GlobalConfiguration] TOGGLE_DEBUG_ENABLED');\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { editRoot } from '../../../edit/edit.matcher';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: ':zoneId/apps',\r\n    loadChildren: () => import('./apps-management/apps-management.module').then(m => m.AppsManagementModule)\r\n  },\r\n  {\r\n    path: ':zoneId/import',\r\n    loadChildren: () => import('./import-app/import-app.module').then(m => m.ImportAppModule)\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/app',\r\n    loadChildren: () => import('./app-administration/app-administration.module').then(m => m.AppAdministrationModule)\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/code',\r\n    loadChildren: () => import('./code-editor/code-editor.module').then(m => m.CodeEditorModule)\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/query/:pipelineId',\r\n    loadChildren: () => import('./visual-query/visual-query.module').then(m => m.VisualQueryModule)\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/replace',\r\n    loadChildren: () => import('./replace-content/replace-content.module').then(m => m.ReplaceContentModule)\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/:guid/:part/:index/reorder',\r\n    loadChildren: () => import('./manage-content-list/manage-content-list.module').then(m => m.ManageContentListModule)\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/items/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-items/content-items.module').then(m => m.ContentItemsModule)\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/fields/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-type-fields/content-type-fields.module').then(m => m.ContentTypeFieldsModule)\r\n  },\r\n  {\r\n    matcher: editRoot,\r\n    loadChildren: () => import('../../../edit/edit.module').then(m => m.EditModule)\r\n  },\r\n  // routes below are not linked directly from the initializer and are used for testing\r\n  // to make sure each module contains enough data to be self sustainable\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule)\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/export/:contentTypeStaticName/:selectedIds',\r\n    loadChildren: () => import('./content-export/content-export.module').then(m => m.ContentExportModule)\r\n  },\r\n  {\r\n    path: ':zoneId/:appId/permissions/:type/:keyType/:key',\r\n    loadChildren: () => import('./permissions/permissions.module').then(m => m.PermissionsModule)\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, ElementRef } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DnnAppComponent, Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from './shared/services/context';\r\nimport { keyModuleId, keyContentBlockId } from './shared/constants/sessions-keys';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent extends DnnAppComponent {\r\n  constructor(el: ElementRef, dnnContext: DnnContext, private context: Context, private matIconRegistry: MatIconRegistry) {\r\n    super(\r\n      el,\r\n      dnnContext.preConfigure({\r\n        moduleId: parseInt(sessionStorage.getItem(keyModuleId), 10),\r\n        contentBlockId: parseInt(sessionStorage.getItem(keyContentBlockId), 10),\r\n      }),\r\n    );\r\n    this.context.initRoot();\r\n    this.matIconRegistry.setDefaultFontSetClass('material-icons-outlined');\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SxcRoot } from '@2sic.com/2sxc-typings';\r\n\r\nimport { UrlHelper } from '../../../edit/shared/helpers/url-helper';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyZoneId, keyAppId, keyDialog, keyTabId, keyRequestToken, keyPortalRoot, keyItems, keyContentType, keyUrl, prefix, keyPipelineId } from './shared/constants/sessions-keys';\r\nimport { EditForm, EditItem, GroupItem } from './app-administration/shared/models/edit-form.model';\r\ndeclare const $2sxc: SxcRoot;\r\n\r\nexport function paramsInitFactory(injector: Injector) {\r\n  return () => {\r\n    console.log('Setting parameters config and clearing route');\r\n    const eavKeys = Object.keys(sessionStorage).filter(key => key.startsWith(prefix));\r\n    const isParamsRoute = !window.location.hash.startsWith('#/');\r\n    if (isParamsRoute) {\r\n      console.log('Initial route:', window.location.href);\r\n      // clear our part of the session\r\n      for (const key of eavKeys) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n      sessionStorage.setItem(keyUrl, window.location.href); // save url which opened the dialog\r\n      sessionStorage.setItem(keyDialog, 'edit'); // set edit dialog as the default\r\n\r\n      // save params\r\n      const urlHash = window.location.hash.substring(1); // substring removes first # char\r\n      const queryParametersFromUrl = UrlHelper.readQueryStringParameters(urlHash);\r\n      const paramKeys = Object.keys(queryParametersFromUrl);\r\n      for (const key of paramKeys) {\r\n        const value = queryParametersFromUrl[key];\r\n        if (value === undefined || value === null) { continue; }\r\n        sessionStorage.setItem(prefix + key, value);\r\n      }\r\n\r\n      // redirect\r\n      const router = injector.get(Router);\r\n      const zoneId = sessionStorage.getItem(keyZoneId);\r\n      const appId = sessionStorage.getItem(keyAppId);\r\n      const dialog = sessionStorage.getItem(keyDialog);\r\n      const contentType = sessionStorage.getItem(keyContentType);\r\n      const items = sessionStorage.getItem(keyItems);\r\n      switch (dialog) {\r\n        case 'zone':\r\n          router.navigate([`${zoneId}/apps`]);\r\n          break;\r\n        case 'app-import':\r\n          router.navigate([`${zoneId}/import`]);\r\n          break;\r\n        case 'app':\r\n          router.navigate([`${zoneId}/${appId}/app`]);\r\n          break;\r\n        case 'contenttype':\r\n          router.navigate([`${zoneId}/${appId}/fields/${contentType}`]);\r\n          break;\r\n        case 'contentitems':\r\n          router.navigate([`${zoneId}/${appId}/items/${contentType}`]);\r\n          break;\r\n        case 'edit':\r\n          const editItems: EditItem[] = JSON.parse(items);\r\n          const form: EditForm = { items: editItems };\r\n          router.navigate([`${zoneId}/${appId}/edit/${JSON.stringify(form)}`]);\r\n          break;\r\n        case 'develop':\r\n          router.navigate([`${zoneId}/${appId}/code`]);\r\n          break;\r\n        case 'pipeline-designer':\r\n          const pipelineId = sessionStorage.getItem(keyPipelineId);\r\n          router.navigate([`${zoneId}/${appId}/query/${pipelineId}`]);\r\n          break;\r\n        case 'replace':\r\n          const replaceItems: GroupItem[] = JSON.parse(items);\r\n          const rGuid = replaceItems[0].Group.Guid;\r\n          const rPart = replaceItems[0].Group.Part;\r\n          const rIndex = replaceItems[0].Group.Index;\r\n          router.navigate([`${zoneId}/${appId}/${rGuid}/${rPart}/${rIndex}/replace`]);\r\n          break;\r\n        case 'instance-list':\r\n          const groupItems: GroupItem[] = JSON.parse(items);\r\n          const gGuid = groupItems[0].Group.Guid;\r\n          const gPart = groupItems[0].Group.Part;\r\n          const gIndex = groupItems[0].Group.Index;\r\n          router.navigate([`${zoneId}/${appId}/${gGuid}/${gPart}/${gIndex}/reorder`]);\r\n          break;\r\n        default:\r\n          alert(`Cannot open unknown dialog \"${dialog}\"`);\r\n          try {\r\n            (window.parent as any).$2sxc.totalPopup.close();\r\n          } catch (error) { }\r\n      }\r\n    } else if (eavKeys.length === 0) {\r\n      // if not params route and no params are saved, e.g. browser was reopened, throw error\r\n      alert('Missing required url parameters. Please reopen dialog.');\r\n      throw new Error('Missing required url parameters. Please reopen dialog.');\r\n    } else {\r\n      console.log('Initial route:', sessionStorage.getItem(keyUrl));\r\n    }\r\n\r\n    loadEnvironment();\r\n  };\r\n}\r\n\r\nfunction loadEnvironment() {\r\n  $2sxc.env.load({\r\n    page: parseInt(sessionStorage.getItem(keyTabId), 10),\r\n    rvt: sessionStorage.getItem(keyRequestToken),\r\n    root: sessionStorage.getItem(keyPortalRoot),\r\n    api: sessionStorage.getItem(keyPortalRoot) + 'desktopmodules/2sxc/api/',\r\n  });\r\n}\r\n","import { EntityMetadataMap } from '@ngrx/data';\r\n\r\nexport const entityMetadata: EntityMetadataMap = {\r\n  Item: {\r\n    selectId: itemSelectId,\r\n  },\r\n  Feature: {},\r\n  Language: {\r\n    selectId: languageSelectId,\r\n  },\r\n  LanguageInstance: {\r\n    selectId: languageInstanceSelectId,\r\n  },\r\n  ContentType: {\r\n    selectId: contentTypeSelectId,\r\n  },\r\n  InputType: {\r\n    selectId: InputTypeSelectId,\r\n  },\r\n};\r\n\r\nexport const pluralNames = {\r\n  Feature: 'Features', // example\r\n};\r\n\r\nexport const entityConfig = {\r\n  entityMetadata,\r\n  pluralNames,\r\n};\r\n\r\nexport function itemSelectId<T extends { entity: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.entity.guid;\r\n}\r\n\r\nexport function languageSelectId<T extends { key: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.key;\r\n}\r\n\r\nexport function languageInstanceSelectId<T extends { formId: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.formId;\r\n}\r\n\r\nexport function contentTypeSelectId<T extends { contentType: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.contentType.id;\r\n}\r\n\r\nexport function InputTypeSelectId<T extends { Type: any }>(entity: T) {\r\n  return entity === null ? undefined : entity.Type;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SetHeadersInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let modified: HttpRequest<any>;\r\n    if (req.body instanceof FormData) {\r\n      // sending files. Do not set content type so browser can add delimiter boundary automatically\r\n      return next.handle(req);\r\n    } else {\r\n      modified = req.clone({\r\n        setHeaders: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n        }\r\n      });\r\n      return next.handle(modified);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HandleErrorsInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.showDetailedHttpError(error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private showDetailedHttpError(error: HttpErrorResponse) {\r\n    let infoText = 'Had an error talking to the server (status ' + error.status + ').';\r\n    const srvResp = error.error;\r\n    if (srvResp) {\r\n      const msg = srvResp.Message;\r\n      if (msg) { infoText += '\\nMessage: ' + msg; }\r\n      const msgDet = srvResp.MessageDetail || srvResp.ExceptionMessage;\r\n      if (msgDet) { infoText += '\\nDetail: ' + msgDet; }\r\n\r\n      if (msgDet && msgDet.indexOf('No action was found') === 0) {\r\n        if (msgDet.indexOf('that matches the name') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: you probably got the action-name wrong in your JS.';\r\n        } else if (msgDet.indexOf('that matches the request.') > 0) {\r\n          infoText += '\\n\\nTip from 2sxc: Seems like the parameters are the wrong amount or type.';\r\n        }\r\n      }\r\n\r\n      if (msg && msg.indexOf('Controller') === 0 && msg.indexOf('not found') > 0) {\r\n        // tslint:disable-next-line:max-line-length\r\n        infoText += '\\n\\nTip from 2sxc: you probably spelled the controller name wrong or forgot to remove the word \\'controller\\' from the call in JS. To call a controller called \\'DemoController\\' only use \\'Demo\\'.';\r\n      }\r\n      infoText += '\\n\\nif you are an advanced user you can learn more about what went wrong - discover how on 2sxc.org/help?tag=debug';\r\n    }\r\n\r\n    alert(infoText);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { EntityDataModule } from '@ngrx/data';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { DnnInterceptor } from '@2sic.com/dnn-sxc-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { Context } from './shared/services/context';\r\nimport { paramsInitFactory } from './params-init.factory';\r\nimport { entityConfig } from '../../../edit/shared/store/ngrx-data/entity-metadata';\r\nimport { metaReducers, reducers } from '../../../edit/shared/store';\r\nimport { SetHeadersInterceptor } from './shared/interceptors/set-headers.interceptor';\r\nimport { HandleErrorsInterceptor } from './shared/interceptors/handle-errors.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    StoreModule.forRoot(reducers, { metaReducers, runtimeChecks: { strictStateImmutability: true, strictActionImmutability: true } }),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    EntityDataModule.forRoot(entityConfig),\r\n    TranslateModule.forRoot(),\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    { provide: APP_INITIALIZER, useFactory: paramsInitFactory, deps: [Injector], multi: true },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    DnnInterceptor,\r\n    { provide: HTTP_INTERCEPTORS, useClass: SetHeadersInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HandleErrorsInterceptor, multi: true },\r\n    Context,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}