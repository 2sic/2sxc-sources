{"version":3,"sources":["./src/app/content-export/content-export.component.html","./src/app/content-export/content-export-dialog.config.ts","./src/app/content-export/content-export-routing.module.ts","./src/app/content-export/content-export.component.scss","./src/app/content-export/content-export.component.ts","./src/app/content-export/content-export.module.ts"],"names":[],"mappings":"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","file":"content-export-content-export-module.js","sourcesContent":["export default \"<div mat-dialog-title>\\r\\n  <div class=\\\"dialog-title-box\\\">Export Content / Data</div>\\r\\n</div>\\r\\n\\r\\n<p class=\\\"dialog-description\\\">\\r\\n  This will generate an XML file which you can edit in Excel. If you just want to import new data, use this to\\r\\n  export the schema that you can then fill in using Excel. Please visit\\r\\n  <a href=\\\"http://2sxc.org/help\\\" target=\\\"_blank\\\">http://2sxc.org/help</a> for more instructions.\\r\\n</p>\\r\\n\\r\\n<form #ngForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <mat-form-field appearance=\\\"standard\\\" color=\\\"accent\\\">\\r\\n      <mat-label>Languages</mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"formValues.language\\\" name=\\\"Language\\\">\\r\\n        <mat-option value=\\\"\\\">All</mat-option>\\r\\n        <mat-option *ngFor=\\\"let lang of languages\\\" [value]=\\\"lang.key\\\">{{ lang.key }}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <p class=\\\"field-label\\\">Export data</p>\\r\\n    <mat-radio-group [(ngModel)]=\\\"formValues.recordExport\\\" name=\\\"RecordExport\\\">\\r\\n      <mat-radio-button value=\\\"Blank\\\">No, just export blank data schema (for new data import)\\r\\n      </mat-radio-button>\\r\\n      <mat-radio-button value=\\\"All\\\">Yes, export all content-items</mat-radio-button>\\r\\n      <mat-radio-button *ngIf=\\\"hasIdList\\\" value=\\\"Selection\\\">Export selected {{itemIds.length}}\\r\\n        items</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <p class=\\\"field-label\\\">Value references to other languages</p>\\r\\n    <mat-radio-group [(ngModel)]=\\\"formValues.languageReferences\\\" name=\\\"LanguageReferences\\\"\\r\\n      [disabled]=\\\"formValues.recordExport === 'Blank'\\\">\\r\\n      <mat-radio-button value=\\\"Link\\\">Keep references to other languages (for re-import)\\r\\n      </mat-radio-button>\\r\\n      <mat-radio-button value=\\\"Resolve\\\">Replace references with values</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <p class=\\\"field-label\\\">File / page references</p>\\r\\n    <mat-radio-group [(ngModel)]=\\\"formValues.resourcesReferences\\\" name=\\\"ResourcesReferences\\\"\\r\\n      [disabled]=\\\"formValues.recordExport === 'Blank'\\\">\\r\\n      <mat-radio-button value=\\\"Link\\\">Keep references (for re-import, for example Page:4711)\\r\\n      </mat-radio-button>\\r\\n      <mat-radio-button value=\\\"Resolve\\\">Replace references with real URLs (for example\\r\\n        /Portals/0...)\\r\\n      </mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"dialog-actions-box\\\">\\r\\n    <button mat-raised-button type=\\\"button\\\" (click)=\\\"closeDialog()\\\">Cancel</button>\\r\\n    <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"!ngForm.form.valid\\\" (click)=\\\"exportJson()\\\">\\r\\n      Export Type Definition as Json (for developers)\\r\\n    </button>\\r\\n    <button mat-raised-button type=\\\"button\\\" color=\\\"accent\\\" [disabled]=\\\"!ngForm.form.valid\\\" (click)=\\\"exportContent()\\\">\\r\\n      Export\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentExportDialog: DialogConfig = {\r\n  name: 'EXPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentExportComponent } = await import('./content-export.component');\r\n    return ContentExportComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentExportDialog } from './content-export-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: contentExportDialog } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContentExportRoutingModule { }\r\n","export default \".field-label {\\n  font-size: 18px;\\n  margin: 24px 0 0;\\n}\\n\\n.mat-radio-group {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 8px 0;\\n}\\n\\n.mat-radio-button {\\n  margin: 5px;\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL25nLWRpYWxvZ3Mvc3JjL2FwcC9jb250ZW50LWV4cG9ydC9DOlxcUHJvamVjdHNcXGVhdi1pdGVtLWRpYWxvZy1hbmd1bGFyL3Byb2plY3RzXFxuZy1kaWFsb2dzXFxzcmNcXGFwcFxcY29udGVudC1leHBvcnRcXGNvbnRlbnQtZXhwb3J0LmNvbXBvbmVudC5zY3NzIiwicHJvamVjdHMvbmctZGlhbG9ncy9zcmMvYXBwL2NvbnRlbnQtZXhwb3J0L2NvbnRlbnQtZXhwb3J0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxhQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0VBQ0EsZUFBQTtBQ0NGIiwiZmlsZSI6InByb2plY3RzL25nLWRpYWxvZ3Mvc3JjL2FwcC9jb250ZW50LWV4cG9ydC9jb250ZW50LWV4cG9ydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWVsZC1sYWJlbCB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIG1hcmdpbjogMjRweCAwIDA7XHJcbn1cclxuXHJcbi5tYXQtcmFkaW8tZ3JvdXAge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBtYXJnaW46IDhweCAwO1xyXG59XHJcblxyXG4ubWF0LXJhZGlvLWJ1dHRvbiB7XHJcbiAgbWFyZ2luOiA1cHg7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbiIsIi5maWVsZC1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbWFyZ2luOiAyNHB4IDAgMDtcbn1cblxuLm1hdC1yYWRpby1ncm91cCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbjogOHB4IDA7XG59XG5cbi5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgbWFyZ2luOiA1cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ContentExport } from '../app-administration/shared/models/content-export.model';\r\nimport { ContentExportService } from '../app-administration/shared/services/content-export.service';\r\nimport { Language } from '../../../../edit/shared/models/eav/language';\r\nimport { keyLangs, keyLangPri } from '../shared/constants/sessions-keys';\r\n\r\n@Component({\r\n  selector: 'app-content-export',\r\n  templateUrl: './content-export.component.html',\r\n  styleUrls: ['./content-export.component.scss']\r\n})\r\nexport class ContentExportComponent implements OnInit {\r\n  formValues: ContentExport;\r\n  languages: Language[] = JSON.parse(sessionStorage.getItem(keyLangs));\r\n  itemIds: number[];\r\n  hasIdList = false;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ContentExportComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentExportService: ContentExportService,\r\n  ) {\r\n    const selectedIds = this.route.snapshot.paramMap.get('selectedIds');\r\n    this.hasIdList = !!selectedIds;\r\n    if (this.hasIdList) {\r\n      this.itemIds = selectedIds.split(',').map(id => parseInt(id, 10));\r\n    }\r\n    this.formValues = {\r\n      defaultLanguage: sessionStorage.getItem(keyLangPri),\r\n      contentTypeStaticName: this.route.snapshot.paramMap.get('contentTypeStaticName'),\r\n      language: '',\r\n      recordExport: this.hasIdList ? 'Selection' : 'All',\r\n      languageReferences: 'Link',\r\n      resourcesReferences: 'Link',\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  exportContent() {\r\n    this.contentExportService.exportContent(this.formValues,\r\n      this.hasIdList && this.formValues.recordExport === 'Selection' ? this.itemIds : null);\r\n  }\r\n\r\n  exportJson() {\r\n    this.contentExportService.exportJson(this.formValues.contentTypeStaticName);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\nimport { ContentExportRoutingModule } from './content-export-routing.module';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ContentExportComponent } from './content-export.component';\r\nimport { ContentExportService } from '../app-administration/shared/services/content-export.service';\r\nimport { Context } from '../shared/services/context';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContentExportComponent,\r\n  ],\r\n  entryComponents: [\r\n    ContentExportComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ContentExportRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ContentExportService,\r\n  ]\r\n})\r\nexport class ContentExportModule { }\r\n"],"sourceRoot":"webpack:///"}