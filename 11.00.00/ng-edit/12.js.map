{"version":3,"sources":["C:/Projects/eav-item-dialog-angular/node_modules/@ecodev/fab-speed-dial/__ivy_ngcc__/fesm5/ecodev-fab-speed-dial.js","C:/Projects/eav-item-dialog-angular/node_modules/@angular/material/__ivy_ngcc__/fesm5/progress-spinner.js"],"names":["EcoFabSpeedDialActionsComponent_0_Template","rf","ctx","_c0","_c1","_c2","_c3","_c4","_c5","EcoFabSpeedDialActionsComponent","injector","renderer","this","miniFabVisible","_parent","get","EcoFabSpeedDialComponent","prototype","ngAfterContentInit","_this","_buttons","changes","subscribe","initButtonStates","setActionsVisibility","forEach","button","i","addClass","_getHostElement","changeElementStyle","show","resetAnimationState","showMiniFabAnimation","setTimeout","transform","transitionDelay","animationMode","getTranslateFunction","hostElement","clearTimeout","hideMiniFab","unsubscribe","hide","obs","map","opacity","pipe","value","dir","direction","elem","style","setStyle","ɵfac","t","ɵcmp","type","selectors","contentQueries","dirIndex","_t","ngContentSelectors","decls","vars","consts","template","undefined","directives","encapsulation","elementRef","document","isInitialized","_direction","_open","_animationMode","_fixed","_documentClickUnlistener","openChange","Object","defineProperty","set","fixed","_processOutsideClickState","enumerable","configurable","open","previousOpen","emit","previousDirection","_setElementClass","previousAnimationMode","Promise","resolve","then","ngOnDestroy","_unsetDocumentClickListener","toggle","_onClick","_childActions","elemClass","isAdd","finalClass","nativeElement","removeClass","_setDocumentClickListener","listen","first","hostVars","hostBindings","inputs","outputs","styles","EcoFabSpeedDialTriggerComponent","spin","event","stopPropagation","$event","sp","EcoFabSpeedDialModule","ɵmod","ɵinj","factory","imports","MatProgressSpinner__svg_circle_1_Template","ctx_r6","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r7","MatSpinner__svg_circle_1_Template","ctx_r8","MatSpinner__svg_circle_2_Template","ctx_r9","MatProgressSpinnerBase","_elementRef","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","providedIn","MatProgressSpinner","_super","platform","_document","defaults","call","_diameter","_value","_fallbackAnimation","mode","trackedDiameters","_diameters","has","head","Set","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","size","_styleRoot","_attachStyleNode","_strokeWidth","newValue","Math","max","min","ngOnInit","element","classList","add","viewBox","PI","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","createElement","setAttribute","textContent","_getAnimationText","appendChild","replace","WeakMap","hostAttrs","color","exportAs","features","_viewBox","changeDetection","MatSpinner","MatProgressSpinnerModule"],"mappings":"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","file":"12.js","sourcesContent":["import { __decorate, __param } from 'tslib';\nimport { Injector, Renderer2, ContentChildren, Component, EventEmitter, ElementRef, Inject, Input, HostBinding, Output, ContentChild, HostListener, ViewEncapsulation, NgModule } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { fromEvent, forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction EcoFabSpeedDialActionsComponent_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"miniFabVisible\"]);\n} }\nvar _c0 = [[[\"\", \"mat-mini-fab\", \"\"]]];\nvar _c1 = [\"[mat-mini-fab]\"];\nvar _c2 = [[[\"eco-fab-speed-dial-trigger\"]], [[\"eco-fab-speed-dial-actions\"]]];\nvar _c3 = [\"eco-fab-speed-dial-trigger\", \"eco-fab-speed-dial-actions\"];\nvar _c4 = [[[\"\", \"mat-fab\", \"\"]]];\nvar _c5 = [\"[mat-fab]\"];\nvar Z_INDEX_ITEM = 23;\nvar EcoFabSpeedDialActionsComponent = /** @class */ (function () {\n    function EcoFabSpeedDialActionsComponent(injector, renderer) {\n        this.renderer = renderer;\n        /**\n         * Whether the min-fab button exist in DOM\n         */\n        this.miniFabVisible = false;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    EcoFabSpeedDialActionsComponent.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._buttons.changes.subscribe(function () {\n            _this.initButtonStates();\n            _this._parent.setActionsVisibility();\n        });\n        this.initButtonStates();\n    };\n    EcoFabSpeedDialActionsComponent.prototype.initButtonStates = function () {\n        var _this = this;\n        this._buttons.forEach(function (button, i) {\n            _this.renderer.addClass(button._getHostElement(), 'eco-fab-action-item');\n            _this.changeElementStyle(button._getHostElement(), 'z-index', '' + (Z_INDEX_ITEM - i));\n        });\n    };\n    EcoFabSpeedDialActionsComponent.prototype.show = function () {\n        var _this = this;\n        if (!this._buttons) {\n            return;\n        }\n        this.resetAnimationState();\n        this.miniFabVisible = true;\n        this.showMiniFabAnimation = setTimeout(function () {\n            _this._buttons.forEach(function (button, i) {\n                var transitionDelay = 0;\n                var transform;\n                if (_this._parent.animationMode === 'scale') {\n                    // Incremental transition delay of 65ms for each action button\n                    transitionDelay = 3 + (65 * i);\n                    transform = 'scale(1)';\n                }\n                else {\n                    transform = _this.getTranslateFunction('0');\n                }\n                var hostElement = button._getHostElement();\n                _this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n                _this.changeElementStyle(hostElement, 'opacity', '1');\n                _this.changeElementStyle(hostElement, 'transform', transform);\n            });\n        }, 50); // Be sure that *ngIf can show elements before trying to animate them\n    };\n    EcoFabSpeedDialActionsComponent.prototype.resetAnimationState = function () {\n        clearTimeout(this.showMiniFabAnimation);\n        if (this.hideMiniFab) {\n            this.hideMiniFab.unsubscribe();\n            this.hideMiniFab = null;\n        }\n    };\n    EcoFabSpeedDialActionsComponent.prototype.hide = function () {\n        var _this = this;\n        if (!this._buttons) {\n            return;\n        }\n        this.resetAnimationState();\n        var obs = this._buttons.map(function (button, i) {\n            var opacity = '1';\n            var transitionDelay = 0;\n            var transform;\n            if (_this._parent.animationMode === 'scale') {\n                transitionDelay = 3 - (65 * i);\n                transform = 'scale(0)';\n                opacity = '0';\n            }\n            else {\n                transform = _this.getTranslateFunction((55 * (i + 1) - (i * 5)) + 'px');\n            }\n            var hostElement = button._getHostElement();\n            _this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');\n            _this.changeElementStyle(hostElement, 'opacity', opacity);\n            _this.changeElementStyle(hostElement, 'transform', transform);\n            return fromEvent(hostElement, 'transitionend').pipe(take(1));\n        });\n        // Wait for all animation to finish, then destroy their elements\n        this.hideMiniFab = forkJoin(obs).subscribe(function () { return _this.miniFabVisible = false; });\n    };\n    EcoFabSpeedDialActionsComponent.prototype.getTranslateFunction = function (value) {\n        var dir = this._parent.direction;\n        var translateFn = (dir === 'up' || dir === 'down') ? 'translateY' : 'translateX';\n        var sign = (dir === 'down' || dir === 'right') ? '-' : '';\n        return translateFn + '(' + sign + value + ')';\n    };\n    EcoFabSpeedDialActionsComponent.prototype.changeElementStyle = function (elem, style, value) {\n        // FIXME - Find a way to create a \"wrapper\" around the action button(s) provided by the user, so we don't change it's style tag\n        this.renderer.setStyle(elem, style, value);\n    };\n    EcoFabSpeedDialActionsComponent.ctorParameters = function () { return [\n        { type: Injector },\n        { type: Renderer2 }\n    ]; };\n    __decorate([\n        ContentChildren(MatButton)\n    ], EcoFabSpeedDialActionsComponent.prototype, \"_buttons\", void 0);\nEcoFabSpeedDialActionsComponent.ɵfac = function EcoFabSpeedDialActionsComponent_Factory(t) { return new (t || EcoFabSpeedDialActionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nEcoFabSpeedDialActionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EcoFabSpeedDialActionsComponent, selectors: [[\"eco-fab-speed-dial-actions\"]], contentQueries: function EcoFabSpeedDialActionsComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatButton, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttons = _t);\n    } }, ngContentSelectors: _c1, decls: 1, vars: 1, consts: [[4, \"ngIf\"]], template: function EcoFabSpeedDialActionsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵtemplate(0, EcoFabSpeedDialActionsComponent_0_Template, 1, 0, undefined, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.miniFabVisible);\n    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialActionsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'eco-fab-speed-dial-actions',\n                template: \"\\n        <ng-content select=\\\"[mat-mini-fab]\\\" *ngIf=\\\"miniFabVisible\\\"></ng-content>\"\n            }]\n    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc0.Renderer2 }]; }, { _buttons: [{\n            type: ContentChildren,\n            args: [MatButton]\n        }] }); })();\n    return EcoFabSpeedDialActionsComponent;\n}());\n/** @dynamic @see https://github.com/angular/angular/issues/20351#issuecomment-344009887 */\nvar EcoFabSpeedDialComponent = /** @class */ (function () {\n    function EcoFabSpeedDialComponent(elementRef, renderer, document) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.document = document;\n        this.isInitialized = false;\n        this._direction = 'up';\n        this._open = false;\n        this._animationMode = 'fling';\n        this._fixed = false;\n        this._documentClickUnlistener = null;\n        this.openChange = new EventEmitter();\n    }\n    Object.defineProperty(EcoFabSpeedDialComponent.prototype, \"fixed\", {\n        /**\n         * Whether this speed dial is fixed on screen (user cannot change it by clicking)\n         */\n        get: function () {\n            return this._fixed;\n        },\n        set: function (fixed) {\n            this._fixed = fixed;\n            this._processOutsideClickState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EcoFabSpeedDialComponent.prototype, \"open\", {\n        /**\n         * Whether this speed dial is opened\n         */\n        get: function () {\n            return this._open;\n        },\n        set: function (open) {\n            var previousOpen = this._open;\n            this._open = open;\n            if (previousOpen !== this._open) {\n                this.openChange.emit(this._open);\n                if (this.isInitialized) {\n                    this.setActionsVisibility();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EcoFabSpeedDialComponent.prototype, \"direction\", {\n        /**\n         * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'\n         */\n        get: function () {\n            return this._direction;\n        },\n        set: function (direction) {\n            var previousDirection = this._direction;\n            this._direction = direction;\n            if (previousDirection !== this.direction) {\n                this._setElementClass(previousDirection, false);\n                this._setElementClass(this.direction, true);\n                if (this.isInitialized) {\n                    this.setActionsVisibility();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EcoFabSpeedDialComponent.prototype, \"animationMode\", {\n        /**\n         * The animation mode to open the speed dial. Can be 'fling' or 'scale'\n         */\n        get: function () {\n            return this._animationMode;\n        },\n        set: function (animationMode) {\n            var _this = this;\n            var previousAnimationMode = this._animationMode;\n            this._animationMode = animationMode;\n            if (previousAnimationMode !== this._animationMode) {\n                this._setElementClass(previousAnimationMode, false);\n                this._setElementClass(this.animationMode, true);\n                if (this.isInitialized) {\n                    // To start another detect lifecycle and force the \"close\" on the action buttons\n                    Promise.resolve(null).then(function () { return _this.open = false; });\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EcoFabSpeedDialComponent.prototype.ngAfterContentInit = function () {\n        this.isInitialized = true;\n        this.setActionsVisibility();\n        this._setElementClass(this.direction, true);\n        this._setElementClass(this.animationMode, true);\n    };\n    EcoFabSpeedDialComponent.prototype.ngOnDestroy = function () {\n        this._unsetDocumentClickListener();\n    };\n    /**\n     * Toggle the open state of this speed dial\n     */\n    EcoFabSpeedDialComponent.prototype.toggle = function () {\n        this.open = !this.open;\n    };\n    EcoFabSpeedDialComponent.prototype._onClick = function () {\n        if (!this.fixed && this.open) {\n            this.open = false;\n        }\n    };\n    EcoFabSpeedDialComponent.prototype.setActionsVisibility = function () {\n        if (!this._childActions) {\n            return;\n        }\n        if (this.open) {\n            this._childActions.show();\n        }\n        else {\n            this._childActions.hide();\n        }\n        this._processOutsideClickState();\n    };\n    EcoFabSpeedDialComponent.prototype._setElementClass = function (elemClass, isAdd) {\n        var finalClass = \"eco-\" + elemClass;\n        if (isAdd) {\n            this.renderer.addClass(this.elementRef.nativeElement, finalClass);\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, finalClass);\n        }\n    };\n    EcoFabSpeedDialComponent.prototype._processOutsideClickState = function () {\n        if (!this.fixed && this.open) {\n            this._setDocumentClickListener();\n        }\n        else {\n            this._unsetDocumentClickListener();\n        }\n    };\n    EcoFabSpeedDialComponent.prototype._setDocumentClickListener = function () {\n        var _this = this;\n        if (!this._documentClickUnlistener) {\n            this._documentClickUnlistener = this.renderer.listen(this.document, 'click', function () {\n                _this.open = false;\n            });\n        }\n    };\n    EcoFabSpeedDialComponent.prototype._unsetDocumentClickListener = function () {\n        if (this._documentClickUnlistener) {\n            this._documentClickUnlistener();\n            this._documentClickUnlistener = null;\n        }\n    };\n    EcoFabSpeedDialComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 },\n        { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    __decorate([\n        Input()\n    ], EcoFabSpeedDialComponent.prototype, \"fixed\", null);\n    __decorate([\n        HostBinding('class.eco-opened'),\n        Input()\n    ], EcoFabSpeedDialComponent.prototype, \"open\", null);\n    __decorate([\n        Input()\n    ], EcoFabSpeedDialComponent.prototype, \"direction\", null);\n    __decorate([\n        Input()\n    ], EcoFabSpeedDialComponent.prototype, \"animationMode\", null);\n    __decorate([\n        Output()\n    ], EcoFabSpeedDialComponent.prototype, \"openChange\", void 0);\n    __decorate([\n        ContentChild(EcoFabSpeedDialActionsComponent)\n    ], EcoFabSpeedDialComponent.prototype, \"_childActions\", void 0);\n    __decorate([\n        HostListener('click')\n    ], EcoFabSpeedDialComponent.prototype, \"_onClick\", null);\n    EcoFabSpeedDialComponent = __decorate([ __param(2, Inject(DOCUMENT))\n    ], EcoFabSpeedDialComponent);\nEcoFabSpeedDialComponent.ɵfac = function EcoFabSpeedDialComponent_Factory(t) { return new (t || EcoFabSpeedDialComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nEcoFabSpeedDialComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EcoFabSpeedDialComponent, selectors: [[\"eco-fab-speed-dial\"]], contentQueries: function EcoFabSpeedDialComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, EcoFabSpeedDialActionsComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._childActions = _t.first);\n    } }, hostVars: 2, hostBindings: function EcoFabSpeedDialComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function EcoFabSpeedDialComponent_click_HostBindingHandler() { return ctx._onClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"eco-opened\", ctx.open);\n    } }, inputs: { fixed: \"fixed\", open: \"open\", direction: \"direction\", animationMode: \"animationMode\" }, outputs: { openChange: \"openChange\" }, ngContentSelectors: _c3, decls: 3, vars: 0, consts: [[1, \"eco-fab-speed-dial-container\"]], template: function EcoFabSpeedDialComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:.6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:.3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:.3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialComponent, [{\n        type: Component,\n        args: [{\n                selector: 'eco-fab-speed-dial',\n                template: \"\\n        <div class=\\\"eco-fab-speed-dial-container\\\">\\n            <ng-content select=\\\"eco-fab-speed-dial-trigger\\\"></ng-content>\\n            <ng-content select=\\\"eco-fab-speed-dial-actions\\\"></ng-content>\\n        </div>\\n    \",\n                encapsulation: ViewEncapsulation.None,\n                styles: [\"eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:.6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:.3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:.3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: Document, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { openChange: [{\n            type: Output\n        }], fixed: [{\n            type: Input\n        }], open: [{\n            type: HostBinding,\n            args: ['class.eco-opened']\n        }, {\n            type: Input\n        }], direction: [{\n            type: Input\n        }], animationMode: [{\n            type: Input\n        }], _onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], _childActions: [{\n            type: ContentChild,\n            args: [EcoFabSpeedDialActionsComponent]\n        }] }); })();\n    return EcoFabSpeedDialComponent;\n}());\nvar EcoFabSpeedDialTriggerComponent = /** @class */ (function () {\n    function EcoFabSpeedDialTriggerComponent(injector) {\n        this.spin = false;\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n    Object.defineProperty(EcoFabSpeedDialTriggerComponent.prototype, \"sp\", {\n        /**\n         * Whether this trigger should spin (360dg) while opening the speed dial\n         */\n        get: function () {\n            return this.spin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EcoFabSpeedDialTriggerComponent.prototype._onClick = function (event) {\n        if (!this._parent.fixed) {\n            this._parent.toggle();\n            event.stopPropagation();\n        }\n    };\n    EcoFabSpeedDialTriggerComponent.ctorParameters = function () { return [\n        { type: Injector }\n    ]; };\n    __decorate([\n        HostBinding('class.eco-spin')\n    ], EcoFabSpeedDialTriggerComponent.prototype, \"sp\", null);\n    __decorate([\n        Input()\n    ], EcoFabSpeedDialTriggerComponent.prototype, \"spin\", void 0);\n    __decorate([\n        HostListener('click', ['$event'])\n    ], EcoFabSpeedDialTriggerComponent.prototype, \"_onClick\", null);\nEcoFabSpeedDialTriggerComponent.ɵfac = function EcoFabSpeedDialTriggerComponent_Factory(t) { return new (t || EcoFabSpeedDialTriggerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nEcoFabSpeedDialTriggerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EcoFabSpeedDialTriggerComponent, selectors: [[\"eco-fab-speed-dial-trigger\"]], hostVars: 2, hostBindings: function EcoFabSpeedDialTriggerComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function EcoFabSpeedDialTriggerComponent_click_HostBindingHandler($event) { return ctx._onClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"eco-spin\", ctx.sp);\n    } }, inputs: { spin: \"spin\" }, ngContentSelectors: _c5, decls: 1, vars: 0, template: function EcoFabSpeedDialTriggerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialTriggerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'eco-fab-speed-dial-trigger',\n                template: \"\\n        <ng-content select=\\\"[mat-fab]\\\"></ng-content>\"\n            }]\n    }], function () { return [{ type: ɵngcc0.Injector }]; }, { spin: [{\n            type: Input\n        }], sp: [{\n            type: HostBinding,\n            args: ['class.eco-spin']\n        }], _onClick: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\n    return EcoFabSpeedDialTriggerComponent;\n}());\n\nvar EcoFabSpeedDialModule = /** @class */ (function () {\n    function EcoFabSpeedDialModule() {\n    }\nEcoFabSpeedDialModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: EcoFabSpeedDialModule });\nEcoFabSpeedDialModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function EcoFabSpeedDialModule_Factory(t) { return new (t || EcoFabSpeedDialModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EcoFabSpeedDialModule, { declarations: function () { return [EcoFabSpeedDialActionsComponent,\n        EcoFabSpeedDialComponent,\n        EcoFabSpeedDialTriggerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [EcoFabSpeedDialActionsComponent,\n        EcoFabSpeedDialComponent,\n        EcoFabSpeedDialTriggerComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EcoFabSpeedDialModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [\n                    EcoFabSpeedDialActionsComponent,\n                    EcoFabSpeedDialComponent,\n                    EcoFabSpeedDialTriggerComponent,\n                ],\n                exports: [\n                    EcoFabSpeedDialActionsComponent,\n                    EcoFabSpeedDialComponent,\n                    EcoFabSpeedDialTriggerComponent,\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return EcoFabSpeedDialModule;\n}());\n\n/*\n * Public API Surface of fab-speed-dial\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialModule, EcoFabSpeedDialTriggerComponent };\n\n//# sourceMappingURL=ecodev-fab-speed-dial.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r6.diameter)(\"stroke-dashoffset\", ctx_r6._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r6._strokeCircumference, \"px\")(\"stroke-width\", ctx_r6._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r6._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r7._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r7._strokeCircumference, \"px\")(\"stroke-width\", ctx_r7._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r7._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r8.diameter)(\"stroke-dashoffset\", ctx_r8._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r8._strokeCircumference, \"px\")(\"stroke-width\", ctx_r8._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r8._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r9._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r9._strokeCircumference, \"px\")(\"stroke-width\", ctx_r9._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r9._circleRadius);\n} }\nvar BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nvar BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nvar MatProgressSpinnerBase = /** @class */ (function () {\n    function MatProgressSpinnerBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatProgressSpinnerBase;\n}());\nvar _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nvar MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nvar INDETERMINATE_ANIMATION_TEMPLATE = \"\\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\\n\\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\\n\\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\\n\\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\\n  }\\n\";\n/**\n * `<mat-progress-spinner>` component.\n */\nvar MatProgressSpinner = /** @class */ (function (_super) {\n    __extends(MatProgressSpinner, _super);\n    function MatProgressSpinner(_elementRef, platform, _document, animationMode, defaults) {\n        var _this = _super.call(this, _elementRef) || this;\n        _this._elementRef = _elementRef;\n        _this._document = _document;\n        _this._diameter = BASE_SIZE;\n        _this._value = 0;\n        _this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        _this.mode = 'determinate';\n        var trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        _this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        _this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                _this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                _this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(MatProgressSpinner.prototype, \"diameter\", {\n        /** The diameter of the progress spinner (will set width and height of svg). */\n        get: function () { return this._diameter; },\n        set: function (size) {\n            this._diameter = coerceNumberProperty(size);\n            // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n            if (!this._fallbackAnimation && this._styleRoot) {\n                this._attachStyleNode();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"strokeWidth\", {\n        /** Stroke width of the progress spinner. */\n        get: function () {\n            return this._strokeWidth || this.diameter / 10;\n        },\n        set: function (value) {\n            this._strokeWidth = coerceNumberProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"value\", {\n        /** Value of the progress circle. */\n        get: function () {\n            return this.mode === 'determinate' ? this._value : 0;\n        },\n        set: function (newValue) {\n            this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatProgressSpinner.prototype.ngOnInit = function () {\n        var element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        var animationClass = \"mat-progress-spinner-indeterminate\" + (this._fallbackAnimation ? '-fallback' : '') + \"-animation\";\n        element.classList.add(animationClass);\n    };\n    Object.defineProperty(MatProgressSpinner.prototype, \"_circleRadius\", {\n        /** The radius of the spinner, adjusted for stroke width. */\n        get: function () {\n            return (this.diameter - BASE_STROKE_WIDTH) / 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_viewBox\", {\n        /** The view box of the spinner's svg element. */\n        get: function () {\n            var viewBox = this._circleRadius * 2 + this.strokeWidth;\n            return \"0 0 \" + viewBox + \" \" + viewBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_strokeCircumference\", {\n        /** The stroke circumference of the svg circle. */\n        get: function () {\n            return 2 * Math.PI * this._circleRadius;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_strokeDashOffset\", {\n        /** The dash offset of the svg circle. */\n        get: function () {\n            if (this.mode === 'determinate') {\n                return this._strokeCircumference * (100 - this._value) / 100;\n            }\n            // In fallback mode set the circle to 80% and rotate it with CSS.\n            if (this._fallbackAnimation && this.mode === 'indeterminate') {\n                return this._strokeCircumference * 0.2;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_circleStrokeWidth\", {\n        /** Stroke width of the circle in percent. */\n        get: function () {\n            return this.strokeWidth / this.diameter * 100;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    MatProgressSpinner.prototype._attachStyleNode = function () {\n        var styleRoot = this._styleRoot;\n        var currentDiameter = this._diameter;\n        var diameters = MatProgressSpinner._diameters;\n        var diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            var styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    };\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    MatProgressSpinner.prototype._getAnimationText = function () {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, \"\" + 0.95 * this._strokeCircumference)\n            .replace(/END_VALUE/g, \"\" + 0.2 * this._strokeCircumference)\n            .replace(/DIAMETER/g, \"\" + this.diameter);\n    };\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     */\n    MatProgressSpinner._diameters = new WeakMap();\n    /** @nocollapse */\n    MatProgressSpinner.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n    ]; };\n    MatProgressSpinner.propDecorators = {\n        diameter: [{ type: Input }],\n        strokeWidth: [{ type: Input }],\n        mode: [{ type: Input }],\n        value: [{ type: Input }]\n    };\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\", mode: \"mode\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': \"_noopAnimations\",\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }] }); })();\n    return MatProgressSpinner;\n}(_MatProgressSpinnerMixinBase));\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nvar MatSpinner = /** @class */ (function (_super) {\n    __extends(MatSpinner, _super);\n    function MatSpinner(elementRef, platform, document, animationMode, defaults) {\n        var _this = _super.call(this, elementRef, platform, document, animationMode, defaults) || this;\n        _this.mode = 'indeterminate';\n        return _this;\n    }\n    /** @nocollapse */\n    MatSpinner.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n    ]; };\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': \"_noopAnimations\",\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n    return MatSpinner;\n}(MatProgressSpinner));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatProgressSpinnerModule = /** @class */ (function () {\n    function MatProgressSpinnerModule() {\n    }\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return MatProgressSpinnerModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map"],"sourceRoot":"webpack:///"}