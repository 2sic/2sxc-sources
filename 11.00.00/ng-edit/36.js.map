{"version":3,"sources":["./src/app/app-administration/shared/services/content-types.service.ts"],"names":["http","context","dnnContext","retrieveContentType","staticName","this","get","$2sxc","apiUrl","params","appId","toString","contentTypeId","retrieveContentTypes","scope","save","contentType","post","appid","delete","StaticName","createGhost","sourceStaticName","ContentTypesService"],"mappings":"oLAQA,aAEE,WAAoBA,EAA0BC,EAA0BC,GAApD,KAAAF,OAA0B,KAAAC,UAA0B,KAAAC,a,OAExE,YAAAC,oBAAA,SAAoBC,GAClB,OAAOC,KAAKL,KAAKM,IAAID,KAAKH,WAAWK,MAAMP,KAAKQ,OAAO,uBAAwB,CAC7EC,OAAQ,CAAEC,MAAOL,KAAKJ,QAAQS,MAAMC,WAAYC,cAAeR,MAInE,YAAAS,qBAAA,SAAqBC,GACnB,OAAOT,KAAKL,KAAKM,IAAID,KAAKH,WAAWK,MAAMP,KAAKQ,OAAO,uBAAwB,CAC7EC,OAAQ,CAAEC,MAAOL,KAAKJ,QAAQS,MAAMC,WAAYG,MAAK,MAIzD,YAAAC,KAAA,SAAKC,GACH,OAAOX,KAAKL,KAAKiB,KAAKZ,KAAKH,WAAWK,MAAMP,KAAKQ,OAAO,wBAAyBQ,EAAa,CAC5FP,OAAQ,CAAES,MAAOb,KAAKJ,QAAQS,MAAMC,eAIxC,YAAAQ,OAAA,SAAOH,GACL,OAAOX,KAAKL,KAAKM,IAAID,KAAKH,WAAWK,MAAMP,KAAKQ,OAAO,0BAA2B,CAChFC,OAAQ,CAAES,MAAOb,KAAKJ,QAAQS,MAAMC,WAAYP,WAAYY,EAAYI,eAI5E,YAAAC,YAAA,SAAYC,GACV,OAAOjB,KAAKL,KAAKM,IAAID,KAAKH,WAAWK,MAAMP,KAAKQ,OAAO,+BAAgC,CACrFC,OAAQ,CAAES,MAAOb,KAAKJ,QAAQS,MAAMC,WAAYW,iBAAgB,M,sCA7BzDC,GAAmB,gC,yBAAnBA,EAAmB,QAAnBA,EAAmB,Y,EADhC","file":"36.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { Context } from '../../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/get'), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    }) as Observable<ContentType>;\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/get'), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    }) as Observable<ContentType[]>;\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/save'), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/delete'), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/createghost'), {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    }) as Observable<boolean>;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}