{"version":3,"sources":["../edit/shared/services/global-configuration.service.ts","./src/app/shared/components/boolean-filter/boolean-filter.component.ts","./src/app/shared/components/boolean-filter/boolean-filter.component.html","./src/app/app-administration/getting-started/getting-started.component.ts","./src/app/app-administration/getting-started/getting-started.component.html","./src/app/app-administration/shared/ag-grid-components/data-items/data-items.component.ts","./src/app/app-administration/shared/ag-grid-components/data-items/data-items.component.html","./src/app/app-administration/shared/ag-grid-components/data-fields/data-fields.component.html","./src/app/app-administration/shared/ag-grid-components/data-fields/data-fields.component.ts","./src/app/app-administration/shared/ag-grid-components/data-actions/data-actions.component.html","./src/app/app-administration/shared/ag-grid-components/data-actions/data-actions.component.ts","./src/app/app-administration/data/data.component.html","./src/app/app-administration/data/data.component.ts","./src/app/app-administration/shared/ag-grid-components/queries-actions/queries-actions.component.ts","./src/app/app-administration/shared/ag-grid-components/queries-actions/queries-actions.component.html","./src/app/app-administration/queries/queries.component.ts","./src/app/app-administration/queries/queries.component.html","./src/app/app-administration/views/views.helpers.ts","./src/app/app-administration/shared/ag-grid-components/views-type/views-type.component.ts","./src/app/app-administration/shared/ag-grid-components/views-type/views-type.component.html","./src/app/app-administration/shared/ag-grid-components/views-show/views-show.component.html","./src/app/app-administration/shared/ag-grid-components/views-show/views-show.component.ts","./src/app/app-administration/shared/ag-grid-components/views-actions/views-actions.component.ts","./src/app/app-administration/shared/ag-grid-components/views-actions/views-actions.component.html","./src/app/app-administration/views/views.component.ts","./src/app/app-administration/views/views.component.html","./src/app/app-administration/shared/ag-grid-components/web-api-actions/web-api-actions.component.ts","./src/app/app-administration/shared/ag-grid-components/web-api-actions/web-api-actions.component.html","./src/app/app-administration/web-api/web-api.component.ts","./src/app/app-administration/web-api/web-api.component.html","./src/app/app-administration/app-configuration/app-configuration.component.html","./src/app/app-administration/app-configuration/app-configuration.component.ts","./src/app/app-administration/app-administration-nav/app-administration-nav.component.html","./src/app/app-administration/app-administration-nav/app-administration-nav.component.ts"],"names":["store","snackBar","loadDebugEnabled","debugEnabled","this","dispatch","toggleDebugEnabled","select","subscribe","enabled","open","duration","getDebugEnabled","GlobalConfigurationService","filter","agInit","params","isFilterActive","doesFilterPass","value","valueGetter","node","toString","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","BooleanFilterComponent","sanitizer","ngOnInit","gettingStartedSafe","bypassSecurityTrustResourceUrl","gettingStartedUrl","GettingStartedComponent","refresh","DataItemsComponent","contentType","data","DataFieldsComponent","enableAppFeatures","enableAppFeaturesGetter","showPermissions","isGuid","StaticName","editContentType","onEdit","createOrEditMetadata","onCreateOrEditMetadata","openExport","onOpenExport","openImport","onOpenImport","openPermissions","onOpenPermissions","deleteContentType","onDelete","txtToTest","RegExp","test","DataActionsComponent","router","route","contentTypesService","globalConfigurationService","appDialogConfigService","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","idValueGetter","flex","minWidth","onCellClicked","showContentItems","bind","nameValueGetter","addItem","editFields","cellRendererParams","frameworkComponents","idFieldComponent","dataItemsComponent","dataFieldsComponent","dataActionsComponent","modules","subscription","Subscription","hasChild","snapshot","firstChild","scope","scopes","default","defaultScope","scopeOptions","Object","keys","map","key","getDialogSettings","toPromise","dialogSettings","IsContent","fetchContentTypes","refreshOnChildClosed","add","ngOnDestroy","unsubscribe","navigate","relativeTo","Id","retrieveContentTypes","contentTypes","createGhost","sourceName","window","prompt","res","changeScope","event","newScope","find","option","push","name","Name","Label","JSON","stringify","items","ContentTypeName","UsesSharedDef","form","Metadata","EntityId","For","Target","metadata","target","String","Prefill","Description","entity","type","keyTypes","guid","confirm","delete","result","events","pipe","hadChild","DataComponent","editQuery","onEditQuery","cloneQuery","onCloneQuery","exportQuery","onExportQuery","deleteQuery","QueriesActionsComponent","pipelinesService","contentExportService","dialogService","openVisualQueryDesigner","queriesActionsComponent","fetchQueries","getAll","query","queries","importQuery","TestParameters","pipelineDesigner","testParameters","Guid","openQueryDesigner","clonePipeline","exportEntity","QueriesComponent","calculateViewType","view","icon","HasQuery","List","ContentType","ViewsTypeComponent","ViewsShowComponent","openCode","onOpenCode","deleteView","ViewsActionsComponent","templatesService","showValueGetter","editView","typeValueGetter","contentDemoValueGetter","presentationDemoValueGetter","headerDemoValueGetter","headerPresDemoValueGetter","booleanFilterComponent","viewsTypeComponent","viewsShowComponent","viewsActionsComponent","fetchTemplates","fetchPolymorph","views","polymorphism","pl","template","editPolymorphisms","TypeName","IsHidden","DemoId","DemoTitle","PresentationType","ListContentType","ListPresentationType","Path","TemplatePath","ViewsComponent","deleteApi","WebApiActionsComponent","webApisService","sanitizeService","webApiActions","fetchWebApis","addController","length","nameLower","sanitizeName","replace","toLocaleLowerCase","extIndex","lastIndexOf","substring","typeIndex","charAt","toLocaleUpperCase","create","paths","webApis","path","splitIndex","fileExtIndex","folder","api","alert","WebApiComponent","contentItemsService","context","eavConstants","edit","staticName","contentItems","Error","config","app","number","appId","exportApp","exportParts","importParts","AppConfigurationComponent","dialogRef","tabs","tab","tabIndex","indexOf","url","closeDialog","close","changeTab","index","navigator","platform","match","metaKey","ctrlKey","shiftKey","altKey","AppAdministrationNavComponent"],"mappings":"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","file":"21.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport * as fromStore from '../store';\r\nimport * as GlobalConfigurationActions from '../store/actions/global-configuration.actions';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalConfigurationService {\r\n\r\n  constructor(private store: Store<fromStore.EavState>, private snackBar: MatSnackBar) { }\r\n\r\n  public loadDebugEnabled(debugEnabled: boolean) {\r\n    this.store.dispatch(GlobalConfigurationActions.loadDebugEnabled({ debugEnabled }));\r\n  }\r\n\r\n  public toggleDebugEnabled() {\r\n    this.store.dispatch(GlobalConfigurationActions.toggleDebugEnabled());\r\n    let debugEnabled: boolean;\r\n    this.store.select(fromStore.selectDebugEnabled).subscribe(enabled => {\r\n      debugEnabled = enabled;\r\n    });\r\n    if (debugEnabled) {\r\n      this.snackBar.open('debug mode enabled', null, {\r\n        duration: 3000,\r\n      });\r\n    } else {\r\n      this.snackBar.open('debug mode disabled', null, {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  public getDebugEnabled(): Observable<boolean> {\r\n    return this.store.select(fromStore.selectDebugEnabled);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams } from '@ag-grid-community/all-modules';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss']\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private params: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const value: boolean = this.params.valueGetter(params.node);\r\n    if (value === null || value === undefined) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.params.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SafeUrl, DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-getting-started',\r\n  templateUrl: './getting-started.component.html',\r\n  styleUrls: ['./getting-started.component.scss']\r\n})\r\nexport class GettingStartedComponent implements OnInit {\r\n  @Input() gettingStartedUrl: string;\r\n  gettingStartedSafe: SafeUrl;\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit() {\r\n    this.gettingStartedSafe = this.sanitizer.bypassSecurityTrustResourceUrl(this.gettingStartedUrl);\r\n  }\r\n\r\n}\r\n","<iframe class=\"iframe\" [src]=\"gettingStartedSafe\"></iframe>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\n@Component({\r\n  selector: 'app-data-items',\r\n  templateUrl: './data-items.component.html',\r\n  styleUrls: ['./data-items.component.scss']\r\n})\r\nexport class DataItemsComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div matRipple class=\"chip-component highlight\" matTooltip=\"Add item\">\r\n  <div class=\"chip-box\">\r\n    <span class=\"chip\">{{ value }}</span>\r\n  </div>\r\n  <div class=\"like-button\">\r\n    <mat-icon>add</mat-icon>\r\n  </div>\r\n</div>\r\n","<div matRipple class=\"chip-component highlight\" matTooltip=\"Edit fields\" *ngIf=\"!contentType.UsesSharedDef\">\r\n  <div class=\"chip-box\">\r\n    <span class=\"chip\">{{ value }}</span>\r\n  </div>\r\n  <div class=\"like-button\">\r\n    <mat-icon>dns</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"chip-component disabled\" *ngIf=\"contentType.UsesSharedDef\"\r\n  matTooltip=\"This content-type shares the definition of #{{contentType.SharedDefId}} so you can't edit it here. Read 2sxc.org/help?tag=shared-types\">\r\n  <div class=\"chip-box\">\r\n    <span class=\"chip\">{{ value }}</span>\r\n  </div>\r\n  <div class=\"like-button disabled\">\r\n    <mat-icon>share</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\nimport { ContentType } from '../../models/content-type.model';\r\n\r\n@Component({\r\n  selector: 'app-data-fields',\r\n  templateUrl: './data-fields.component.html',\r\n  styleUrls: ['./data-fields.component.scss']\r\n})\r\nexport class DataFieldsComponent implements ICellRendererAngularComp {\r\n  contentType: ContentType;\r\n  value: number;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.contentType = params.data;\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"!contentType.UsesSharedDef\" matTooltip=\"Metadata\"\r\n    (click)=\"createOrEditMetadata()\">\r\n    <mat-icon>edit</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"contentType.UsesSharedDef\">\r\n    <mat-icon>edit</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Export\" (click)=\"openExport()\">\r\n    <mat-icon>cloud_download</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Import\" (click)=\"openImport()\">\r\n    <mat-icon>cloud_upload</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"showPermissions\" matTooltip=\"Permissions\"\r\n    (click)=\"openPermissions()\">\r\n    <mat-icon>person</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"!showPermissions\">\r\n    <mat-icon>person</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"!contentType.UsesSharedDef\" (click)=\"editContentType()\"\r\n    matTooltip=\"Settings\">\r\n    <mat-icon>settings</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"contentType.UsesSharedDef\">\r\n    <mat-icon>settings</mat-icon>\r\n  </div>\r\n\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"!contentType.UsesSharedDef\" matTooltip=\"Delete\"\r\n    (click)=\"deleteContentType()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"contentType.UsesSharedDef\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { ContentType } from '../../models/content-type.model';\r\nimport { DataActionsParams } from '../../models/data-actions-params';\r\n\r\n@Component({\r\n  selector: 'app-data-actions',\r\n  templateUrl: './data-actions.component.html',\r\n  styleUrls: ['./data-actions.component.scss']\r\n})\r\nexport class DataActionsComponent implements ICellRendererAngularComp {\r\n  private params: DataActionsParams;\r\n  contentType: ContentType;\r\n  showPermissions: boolean;\r\n\r\n  agInit(params: DataActionsParams) {\r\n    this.params = params;\r\n    this.contentType = this.params.data;\r\n    const enableAppFeatures = this.params.enableAppFeaturesGetter();\r\n    this.showPermissions = enableAppFeatures && this.isGuid(this.contentType.StaticName);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  editContentType() {\r\n    this.params.onEdit(this.contentType);\r\n  }\r\n\r\n  createOrEditMetadata() {\r\n    this.params.onCreateOrEditMetadata(this.contentType);\r\n  }\r\n\r\n  openExport() {\r\n    this.params.onOpenExport(this.contentType);\r\n  }\r\n\r\n  openImport() {\r\n    this.params.onOpenImport(this.contentType);\r\n  }\r\n\r\n  openPermissions() {\r\n    this.params.onOpenPermissions(this.contentType);\r\n  }\r\n\r\n  deleteContentType() {\r\n    this.params.onDelete(this.contentType);\r\n  }\r\n\r\n  private isGuid(txtToTest: string) {\r\n    const patt = new RegExp(/[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/i);\r\n    return patt.test(txtToTest); // note: can't use the txtToTest.match because it causes infinite digest cycles\r\n  }\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"contentTypes\" [columnDefs]=\"columnDefs\" [modules]=\"modules\"\r\n    [frameworkComponents]=\"frameworkComponents\" [enableCellTextSelection]=\"true\" [suppressScrollOnNewData]=\"true\"\r\n    [animateRows]=\"true\" [accentedSort]=\"true\" [valueCache]=\"true\" [headerHeight]=\"32\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"scope-box\">\r\n    <button mat-icon-button color=\"accent\" matTooltip=\"Create a ghost content type\" *ngIf=\"debugEnabled\"\r\n      (click)=\"createGhost()\">\r\n      <mat-icon>share</mat-icon>\r\n    </button>\r\n    <mat-form-field appearance=\"standard\" color=\"accent\" class=\"scope-box__dropdown\">\r\n      <mat-select [ngModel]=\"scope\" name=\"Scope\" (selectionChange)=\"changeScope($event)\">\r\n        <mat-option *ngFor=\"let scopeOption of scopeOptions\" [value]=\"scopeOption.value\">\r\n          {{ 'Scope: ' + scopeOption.name }}\r\n        </mat-option>\r\n        <mat-option value=\"Other\">Scope: Other...</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Create a new content type\"\r\n    (click)=\"editContentType(null)\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ColDef, AllCommunityModules, CellClickedEvent, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { ContentType } from '../shared/models/content-type.model';\r\nimport { ContentTypesService } from '../shared/services/content-types.service';\r\nimport { DataItemsComponent } from '../shared/ag-grid-components/data-items/data-items.component';\r\nimport { DataFieldsComponent } from '../shared/ag-grid-components/data-fields/data-fields.component';\r\nimport { DataActionsComponent } from '../shared/ag-grid-components/data-actions/data-actions.component';\r\nimport { eavConstants, EavScopesKey, EavScopeOption } from '../../shared/constants/eav-constants';\r\nimport { DataActionsParams } from '../shared/models/data-actions-params';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { GlobalConfigurationService } from '../../../../../edit/shared/services/global-configuration.service';\r\nimport { AppDialogConfigService } from '../shared/services/app-dialog-config.service';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\n\r\n@Component({\r\n  selector: 'app-data',\r\n  templateUrl: './data.component.html',\r\n  styleUrls: ['./data.component.scss']\r\n})\r\nexport class DataComponent implements OnInit, OnDestroy {\r\n  contentTypes: ContentType[];\r\n  scope: string;\r\n  defaultScope: string;\r\n  scopeOptions: EavScopeOption[];\r\n  debugEnabled = false;\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n      cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Content Type', field: 'Name', flex: 2, minWidth: 250, cellClass: 'primary-action highlight', sortable: true, filter: 'agTextColumnFilter',\r\n      onCellClicked: this.showContentItems.bind(this), valueGetter: this.nameValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Items', field: 'Items', width: 102, headerClass: 'dense', cellClass: 'secondary-action no-padding',\r\n      sortable: true, filter: 'agNumberColumnFilter', cellRenderer: 'dataItemsComponent', onCellClicked: this.addItem.bind(this),\r\n    },\r\n    {\r\n      headerName: 'Fields', field: 'Fields', width: 94, headerClass: 'dense', cellClass: 'secondary-action no-padding',\r\n      sortable: true, filter: 'agNumberColumnFilter', cellRenderer: 'dataFieldsComponent', onCellClicked: this.editFields.bind(this),\r\n    },\r\n    {\r\n      width: 240, cellClass: 'secondary-action no-padding', cellRenderer: 'dataActionsComponent',\r\n      cellRendererParams: {\r\n        enableAppFeaturesGetter: this.enableAppFeaturesGetter.bind(this),\r\n        onEdit: this.editContentType.bind(this),\r\n        onCreateOrEditMetadata: this.createOrEditMetadata.bind(this),\r\n        onOpenExport: this.openExport.bind(this),\r\n        onOpenImport: this.openImport.bind(this),\r\n        onOpenPermissions: this.openPermissions.bind(this),\r\n        onDelete: this.deleteContentType.bind(this),\r\n      } as DataActionsParams,\r\n    },\r\n    {\r\n      headerName: 'Description', field: 'Description', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    idFieldComponent: IdFieldComponent,\r\n    dataItemsComponent: DataItemsComponent,\r\n    dataFieldsComponent: DataFieldsComponent,\r\n    dataActionsComponent: DataActionsComponent,\r\n  };\r\n  modules = AllCommunityModules;\r\n\r\n  private enableAppFeatures = false;\r\n  private subscription = new Subscription();\r\n  private hasChild: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private contentTypesService: ContentTypesService,\r\n    private globalConfigurationService: GlobalConfigurationService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n    this.scope = eavConstants.scopes.default.value;\r\n    this.defaultScope = eavConstants.scopes.default.value;\r\n    this.scopeOptions = Object.keys(eavConstants.scopes).map((key: EavScopesKey) => eavConstants.scopes[key]);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    const dialogSettings = await this.appDialogConfigService.getDialogSettings().toPromise();\r\n    this.enableAppFeatures = !dialogSettings.IsContent;\r\n    this.fetchContentTypes();\r\n    this.refreshOnChildClosed();\r\n    this.subscription.add(\r\n      this.globalConfigurationService.getDebugEnabled().subscribe(debugEnabled => {\r\n        this.debugEnabled = debugEnabled;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  private showContentItems(params: CellClickedEvent) {\r\n    const contentType = params.data as ContentType;\r\n    this.router.navigate([`items/${contentType.StaticName}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  editContentType(contentType: ContentType) {\r\n    if (!contentType) {\r\n      this.router.navigate([`${this.scope}/add`], { relativeTo: this.route.firstChild });\r\n    } else {\r\n      this.router.navigate([`${this.scope}/${contentType.Id}/edit`], { relativeTo: this.route.firstChild });\r\n    }\r\n  }\r\n\r\n  private fetchContentTypes() {\r\n    this.contentTypesService.retrieveContentTypes(this.scope).subscribe(contentTypes => {\r\n      this.contentTypes = contentTypes;\r\n    });\r\n  }\r\n\r\n  createGhost() {\r\n    // tslint:disable-next-line:max-line-length\r\n    const sourceName = window.prompt('To create a ghost content-type enter source static name / id - this is a very advanced operation - read more about it on 2sxc.org/help?tag=ghost');\r\n    if (!sourceName) { return; }\r\n    this.contentTypesService.createGhost(sourceName).subscribe(res => {\r\n      this.fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  changeScope(event: MatSelectChange) {\r\n    let newScope: string = event.value;\r\n    if (newScope === 'Other') {\r\n      // tslint:disable-next-line:max-line-length\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.');\r\n      if (!newScope) {\r\n        newScope = eavConstants.scopes.default.value;\r\n      } else if (!this.scopeOptions.find(option => option.value === newScope)) {\r\n        const newScopeOption: EavScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        this.scopeOptions.push(newScopeOption);\r\n      }\r\n    }\r\n    this.scope = newScope;\r\n    this.fetchContentTypes();\r\n    if (this.scope !== this.defaultScope) {\r\n      this.snackBar.open(\r\n        'Warning! You are in a special scope. Changing things here could easily break functionality',\r\n        null,\r\n        { duration: 2000 }\r\n      );\r\n    }\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const contentType: ContentType = params.data;\r\n    return `ID: ${contentType.Id}\\nGUID: ${contentType.StaticName}`;\r\n  }\r\n\r\n  private nameValueGetter(params: ValueGetterParams) {\r\n    const contentType: ContentType = params.data;\r\n    if (contentType.Name !== contentType.Label) {\r\n      return `${contentType.Label} (${contentType.Name})`;\r\n    } else {\r\n      return contentType.Name;\r\n    }\r\n  }\r\n\r\n  private enableAppFeaturesGetter() {\r\n    return this.enableAppFeatures;\r\n  }\r\n\r\n  private addItem(params: CellClickedEvent) {\r\n    const contentType = params.data as ContentType;\r\n    const form: EditForm = {\r\n      items: [{ ContentTypeName: contentType.StaticName }],\r\n    };\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private editFields(params: CellClickedEvent) {\r\n    const contentType = params.data as ContentType;\r\n    if (contentType.UsesSharedDef) { return; }\r\n    this.router.navigate([`fields/${contentType.StaticName}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private createOrEditMetadata(contentType: ContentType) {\r\n    const form: EditForm = {\r\n      items: !contentType.Metadata\r\n        ? [{\r\n          ContentTypeName: eavConstants.contentTypes.contentType,\r\n          For: {\r\n            Target: eavConstants.metadata.contentType.target,\r\n            String: contentType.StaticName,\r\n          },\r\n          Prefill: { Label: contentType.Name, Description: contentType.Description },\r\n        }]\r\n        : [{ EntityId: contentType.Metadata.Id.toString() }],\r\n    };\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private openExport(contentType: ContentType) {\r\n    this.router.navigate([`export/${contentType.StaticName}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private openImport(contentType: ContentType) {\r\n    this.router.navigate([`${contentType.StaticName}/import`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private openPermissions(contentType: ContentType) {\r\n    this.router.navigate(\r\n      [`permissions/${eavConstants.metadata.entity.type}/${eavConstants.keyTypes.guid}/${contentType.StaticName}`],\r\n      { relativeTo: this.route.firstChild }\r\n    );\r\n  }\r\n\r\n  private deleteContentType(contentType: ContentType) {\r\n    if (!confirm(`Are you sure you want to delete '${contentType.Name}' (${contentType.Id})?`)) { return; }\r\n    this.snackBar.open(`Deleting...`);\r\n    this.contentTypesService.delete(contentType).subscribe(result => {\r\n      this.snackBar.open(`Deleted`, null, { duration: 2000 });\r\n      this.fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        const hadChild = this.hasChild;\r\n        this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n        if (!this.hasChild && hadChild) {\r\n          this.fetchContentTypes();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { Query } from '../../models/query.model';\r\nimport { PipelinesActionsParams } from '../../models/pipeline-actions-params';\r\n\r\n@Component({\r\n  selector: 'app-queries-actions',\r\n  templateUrl: './queries-actions.component.html',\r\n  styleUrls: ['./queries-actions.component.scss']\r\n})\r\nexport class QueriesActionsComponent implements ICellRendererAngularComp {\r\n  private params: PipelinesActionsParams;\r\n\r\n  agInit(params: PipelinesActionsParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  editQuery() {\r\n    const query: Query = this.params.data;\r\n    this.params.onEditQuery(query);\r\n  }\r\n\r\n  cloneQuery() {\r\n    const query: Query = this.params.data;\r\n    this.params.onCloneQuery(query);\r\n  }\r\n\r\n  exportQuery() {\r\n    const query: Query = this.params.data;\r\n    this.params.onExportQuery(query);\r\n  }\r\n\r\n  openPermissions() {\r\n    const query: Query = this.params.data;\r\n    this.params.onOpenPermissions(query);\r\n  }\r\n\r\n  deleteQuery() {\r\n    const query: Query = this.params.data;\r\n    this.params.onDelete(query);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Edit\" (click)=\"editQuery()\">\r\n    <mat-icon>edit</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Copy\" (click)=\"cloneQuery()\">\r\n    <mat-icon>file_copy</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Export\" (click)=\"exportQuery()\">\r\n    <mat-icon>cloud_download</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Permissions\" (click)=\"openPermissions()\">\r\n    <mat-icon>person</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Delete\" (click)=\"deleteQuery()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ColDef, AllCommunityModules, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { Query } from '../shared/models/query.model';\r\nimport { QueriesActionsComponent } from '../shared/ag-grid-components/queries-actions/queries-actions.component';\r\nimport { PipelinesService } from '../shared/services/pipelines.service';\r\nimport { ContentExportService } from '../shared/services/content-export.service';\r\nimport { PipelinesActionsParams } from '../shared/models/pipeline-actions-params';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { eavConstants } from '../../shared/constants/eav-constants';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-queries',\r\n  templateUrl: './queries.component.html',\r\n  styleUrls: ['./queries.component.scss']\r\n})\r\nexport class QueriesComponent implements OnInit, OnDestroy {\r\n  queries: Query[];\r\n\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n      cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n      filter: 'agTextColumnFilter', onCellClicked: this.openVisualQueryDesigner.bind(this),\r\n    },\r\n    {\r\n      width: 200, cellClass: 'secondary-action no-padding',\r\n      cellRenderer: 'queriesActionsComponent', cellRendererParams: {\r\n        onEditQuery: this.editQuery.bind(this),\r\n        onCloneQuery: this.cloneQuery.bind(this),\r\n        onOpenPermissions: this.openPermissions.bind(this),\r\n        onExportQuery: this.exportQuery.bind(this),\r\n        onDelete: this.deleteQuery.bind(this),\r\n      } as PipelinesActionsParams,\r\n    },\r\n    {\r\n      headerName: 'Description', field: 'Description', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n      filter: 'agTextColumnFilter',\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    idFieldComponent: IdFieldComponent,\r\n    queriesActionsComponent: QueriesActionsComponent,\r\n  };\r\n  modules = AllCommunityModules;\r\n\r\n  private subscription = new Subscription();\r\n  private hasChild: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private pipelinesService: PipelinesService,\r\n    private contentExportService: ContentExportService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n  ) {\r\n    this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchQueries();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  private fetchQueries() {\r\n    this.pipelinesService.getAll(eavConstants.contentTypes.query).subscribe((queries: Query[]) => {\r\n      this.queries = queries;\r\n    });\r\n  }\r\n\r\n  importQuery() {\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  editQuery(query: Query) {\r\n    const form: EditForm = {\r\n      items: (query === null)\r\n        ? [{ ContentTypeName: eavConstants.contentTypes.query, Prefill: { TestParameters: eavConstants.pipelineDesigner.testParameters } }]\r\n        : [{ EntityId: query.Id.toString() }],\r\n    };\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const query: Query = params.data;\r\n    return `ID: ${query.Id}\\nGUID: ${query.Guid}`;\r\n  }\r\n\r\n  private openVisualQueryDesigner(params: ValueGetterParams) {\r\n    const query: Query = params.data;\r\n    const form: EditForm = {\r\n      items: [{ EntityId: query.Id.toString() }],\r\n    };\r\n    this.dialogService.openQueryDesigner(form, query.Id);\r\n  }\r\n\r\n  private cloneQuery(query: Query) {\r\n    this.snackBar.open(`Copying...`);\r\n    this.pipelinesService.clonePipeline(query.Id).subscribe(() => {\r\n      this.snackBar.open(`Copied`, null, { duration: 2000 });\r\n      this.fetchQueries();\r\n    });\r\n  }\r\n\r\n  private openPermissions(query: Query) {\r\n    this.router.navigate(\r\n      [`permissions/${eavConstants.metadata.entity.type}/${eavConstants.keyTypes.guid}/${query.Guid}`],\r\n      { relativeTo: this.route.firstChild }\r\n    );\r\n  }\r\n\r\n  private exportQuery(query: Query) {\r\n    this.contentExportService.exportEntity(query.Id, 'Query', true);\r\n  }\r\n\r\n  private deleteQuery(query: Query) {\r\n    if (!confirm(`Delete Pipeline '${query.Name}' (${query.Id})?`)) { return; }\r\n    this.snackBar.open(`Deleting...`);\r\n    this.pipelinesService.delete(query.Id).subscribe(res => {\r\n      this.snackBar.open(`Deleted`, null, { duration: 2000 });\r\n      this.fetchQueries();\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        const hadChild = this.hasChild;\r\n        this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n        if (!this.hasChild && hadChild) {\r\n          this.fetchQueries();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"queries\" [columnDefs]=\"columnDefs\" [modules]=\"modules\"\r\n    [frameworkComponents]=\"frameworkComponents\" [enableCellTextSelection]=\"true\" [suppressScrollOnNewData]=\"true\"\r\n    [animateRows]=\"true\" [accentedSort]=\"true\" [valueCache]=\"true\" [headerHeight]=\"32\">\r\n  </ag-grid-angular>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\">\r\n    <eco-fab-speed-dial-trigger spin=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab matTooltip=\"Import query\" (click)=\"importQuery()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab matTooltip=\"Create a new query\" (click)=\"editQuery(null)\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>\r\n","import { View } from '../shared/models/view.model';\r\n\r\nexport function calculateViewType(view: View) {\r\n  let value = '';\r\n  let icon = '';\r\n  if (view.HasQuery) {\r\n    value = 'Data (from query)';\r\n    icon = 'filter';\r\n  } else if (view.List) {\r\n    value = 'Items (list)';\r\n    icon = 'menu';\r\n  } else if (!view.ContentType && !view.HasQuery) {\r\n    value = 'Code';\r\n    icon = 'check_box_outline_blank';\r\n  } else if (!view.List) {\r\n    value = 'Item (one)';\r\n    icon = 'looks_one';\r\n  }\r\n  return { value, icon };\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\nimport { calculateViewType } from '../../../views/views.helpers';\r\n\r\n@Component({\r\n  selector: 'app-views-type',\r\n  templateUrl: './views-type.component.html',\r\n  styleUrls: ['./views-type.component.scss']\r\n})\r\nexport class ViewsTypeComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  icon: string;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    const view = params.data;\r\n    const type = calculateViewType(view);\r\n    this.icon = type.icon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\" matTooltip=\"{{ value }}\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">visibility_off</mat-icon>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\n@Component({\r\n  selector: 'app-views-show',\r\n  templateUrl: './views-show.component.html',\r\n  styleUrls: ['./views-show.component.scss']\r\n})\r\nexport class ViewsShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { View } from '../../models/view.model';\r\nimport { ViewActionsParams } from '../../models/view-actions-params';\r\n\r\n@Component({\r\n  selector: 'app-views-actions',\r\n  templateUrl: './views-actions.component.html',\r\n  styleUrls: ['./views-actions.component.scss']\r\n})\r\nexport class ViewsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ViewActionsParams;\r\n\r\n  agInit(params: ViewActionsParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openCode() {\r\n    const view: View = this.params.data;\r\n    this.params.onOpenCode(view);\r\n  }\r\n\r\n  openPermissions() {\r\n    const view: View = this.params.data;\r\n    this.params.onOpenPermissions(view);\r\n  }\r\n\r\n  deleteView() {\r\n    const view: View = this.params.data;\r\n    this.params.onDelete(view);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Code\" (click)=\"openCode()\">\r\n    <mat-icon>code</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Permissions\" (click)=\"openPermissions()\">\r\n    <mat-icon>person</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Delete\" (click)=\"deleteView()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColDef, CellClickedEvent, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { View } from '../shared/models/view.model';\r\nimport { calculateViewType } from './views.helpers';\r\nimport { ViewsTypeComponent } from '../shared/ag-grid-components/views-type/views-type.component';\r\nimport { ViewsShowComponent } from '../shared/ag-grid-components/views-show/views-show.component';\r\nimport { ViewsActionsComponent } from '../shared/ag-grid-components/views-actions/views-actions.component';\r\nimport { TemplatesService } from '../shared/services/templates.service';\r\nimport { ViewActionsParams } from '../shared/models/view-actions-params';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { eavConstants } from '../../shared/constants/eav-constants';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { Polymorphism } from '../shared/models/polymorphism';\r\n\r\n@Component({\r\n  selector: 'app-views',\r\n  templateUrl: './views.component.html',\r\n  styleUrls: ['./views.component.scss']\r\n})\r\nexport class ViewsComponent implements OnInit, OnDestroy {\r\n  views: View[];\r\n\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n      cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Show', field: 'IsHidden', width: 70, headerClass: 'dense', cellRenderer: 'viewsShowComponent',\r\n      sortable: true, filter: 'booleanFilterComponent', valueGetter: this.showValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'primary-action highlight',\r\n      sortable: true, filter: 'agTextColumnFilter', onCellClicked: this.editView.bind(this),\r\n    },\r\n    {\r\n      headerName: 'Type', field: 'Type', width: 70, headerClass: 'dense', cellClass: 'no-padding',\r\n      sortable: true, filter: 'agTextColumnFilter', cellRenderer: 'viewsTypeComponent', valueGetter: this.typeValueGetter,\r\n    },\r\n    {\r\n      width: 120, cellClass: 'secondary-action no-padding', cellRenderer: 'viewsActionsComponent',\r\n      cellRendererParams: {\r\n        onOpenCode: this.openCode.bind(this),\r\n        onOpenPermissions: this.openPermissions.bind(this),\r\n        onDelete: this.deleteView.bind(this),\r\n      } as ViewActionsParams,\r\n    },\r\n    {\r\n      headerName: 'Url Key', field: 'ViewNameInUrl', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Path', field: 'TemplatePath', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Content', field: 'ContentType.Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Default', field: 'ContentType.DemoId', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter', valueGetter: this.contentDemoValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Presentation', field: 'PresentationType.Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Default', field: 'PresentationType.DemoId', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter', valueGetter: this.presentationDemoValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Header', field: 'ListContentType.Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Default', field: 'ListContentType.DemoId', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter', valueGetter: this.headerDemoValueGetter,\r\n    },\r\n    {\r\n      headerName: 'Header Presentation', field: 'ListPresentationType.Name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Default', field: 'ListPresentationType.DemoId', flex: 1, minWidth: 150, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter', valueGetter: this.headerPresDemoValueGetter,\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    idFieldComponent: IdFieldComponent,\r\n    booleanFilterComponent: BooleanFilterComponent,\r\n    viewsTypeComponent: ViewsTypeComponent,\r\n    viewsShowComponent: ViewsShowComponent,\r\n    viewsActionsComponent: ViewsActionsComponent,\r\n  };\r\n  modules = AllCommunityModules;\r\n\r\n  private subscription = new Subscription();\r\n  private hasChild: boolean;\r\n\r\n  polymorphism: Polymorphism;\r\n\r\n  constructor(\r\n    private templatesService: TemplatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n  ) {\r\n    this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchTemplates();\r\n    this.fetchPolymorph();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  private fetchTemplates() {\r\n    this.templatesService.getAll().subscribe(views => {\r\n      this.views = views;\r\n    });\r\n  }\r\n\r\n  private fetchPolymorph() {\r\n    // TODO: SPM - do we need to keep a reference to this subscription?\r\n    this.templatesService.polymorphism().subscribe(pl => this.polymorphism = pl);\r\n  }\r\n\r\n  editView(params: CellClickedEvent) {\r\n    let form: EditForm;\r\n    if (params === null) {\r\n      form = {\r\n        items: [{ ContentTypeName: eavConstants.contentTypes.template }],\r\n      };\r\n    } else {\r\n      const view: View = params.data;\r\n      form = {\r\n        items: [{ EntityId: view.Id.toString() }],\r\n      };\r\n    }\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  editPolymorphisms() {\r\n    // this must already be loaded - cheap check\r\n    if (!this.polymorphism) { return; }\r\n\r\n    const form: EditForm = {\r\n      items: [\r\n        this.polymorphism.Id\r\n        ? { EntityId: this.polymorphism.Id.toString() }\r\n        : { ContentTypeName: this.polymorphism.TypeName }\r\n      ]\r\n    };\r\n    this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `ID: ${view.Id}\\nGUID: ${view.Guid}`;\r\n  }\r\n\r\n  private showValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return !view.IsHidden;\r\n  }\r\n\r\n  private typeValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    const type = calculateViewType(view);\r\n    return type.value;\r\n  }\r\n\r\n  private contentDemoValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `${view.ContentType.DemoId} ${view.ContentType.DemoTitle}`;\r\n  }\r\n\r\n  private presentationDemoValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `${view.PresentationType.DemoId} ${view.PresentationType.DemoTitle}`;\r\n  }\r\n\r\n  private headerDemoValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `${view.ListContentType.DemoId} ${view.ListContentType.DemoTitle}`;\r\n  }\r\n\r\n  private headerPresDemoValueGetter(params: ValueGetterParams) {\r\n    const view: View = params.data;\r\n    return `${view.ListPresentationType.DemoId} ${view.ListPresentationType.DemoTitle}`;\r\n  }\r\n\r\n  private openCode(view: View) {\r\n    const form: EditForm = {\r\n      items: [\r\n        { Path: view.TemplatePath }\r\n      ]\r\n    };\r\n    this.dialogService.openCode(form);\r\n  }\r\n\r\n  private openPermissions(view: View) {\r\n    this.router.navigate(\r\n      [`permissions/${eavConstants.metadata.entity.type}/${eavConstants.keyTypes.guid}/${view.Guid}`],\r\n      { relativeTo: this.route.firstChild }\r\n    );\r\n  }\r\n\r\n  private deleteView(view: View) {\r\n    if (!confirm(`Delete '${view.Name}' (${view.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.templatesService.delete(view.Id).subscribe(res => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchTemplates();\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        const hadChild = this.hasChild;\r\n        this.hasChild = !!this.route.snapshot.firstChild.firstChild;\r\n        if (!this.hasChild && hadChild) {\r\n          this.fetchTemplates();\r\n          this.fetchPolymorph();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"views\" [columnDefs]=\"columnDefs\" [modules]=\"modules\"\r\n    [frameworkComponents]=\"frameworkComponents\" [enableCellTextSelection]=\"true\" [suppressScrollOnNewData]=\"true\"\r\n    [animateRows]=\"true\" [accentedSort]=\"true\" [valueCache]=\"true\" [headerHeight]=\"32\">\r\n  </ag-grid-angular>\r\n\r\n  <div>\r\n    <button mat-icon-button color=\"accent\" matTooltip=\"Configure Polymorphism\" (click)=\"editPolymorphisms()\">\r\n      <!-- todo: would be nice if we had a raw-loader to include the right logo <img src=\"polymorph-logo.png\"> -->\r\n      <mat-icon>layers</mat-icon>\r\n      Polymorphism\r\n      {{ polymorphism?.Id === null\r\n        ? \"not configured\"\r\n        : ( polymorphism.Resolver === null ? \"disabled\" : \"using \" + polymorphism.Resolver )\r\n      }}\r\n    </button>\r\n  </div>\r\n\r\n  <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Create a new view\" (click)=\"editView(null)\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { WebApiActionsParams } from '../../models/web-api-actions-params';\r\nimport { WebApi } from '../../models/web-api.model';\r\n\r\n@Component({\r\n  selector: 'app-web-api-actions',\r\n  templateUrl: './web-api-actions.component.html',\r\n  styleUrls: ['./web-api-actions.component.scss']\r\n})\r\nexport class WebApiActionsComponent implements ICellRendererAngularComp {\r\n  private params: WebApiActionsParams;\r\n\r\n  agInit(params: WebApiActionsParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openCode() {\r\n    const api: WebApi = this.params.data;\r\n    this.params.onOpenCode(api);\r\n  }\r\n\r\n  deleteApi() {\r\n    const api: WebApi = this.params.data;\r\n    this.params.onDelete(api);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple matTooltip=\"Code\" (click)=\"openCode()\">\r\n    <mat-icon>code</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight not-implemented\" style=\"display: none;\" matRipple matTooltip=\"Delete\"\r\n    (click)=\"deleteApi()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ColDef, AllCommunityModules } from '@ag-grid-community/all-modules';\r\n\r\nimport { WebApisService } from '../shared/services/web-apis.service';\r\nimport { WebApi } from '../shared/models/web-api.model';\r\nimport { WebApiActionsComponent } from '../shared/ag-grid-components/web-api-actions/web-api-actions.component';\r\nimport { WebApiActionsParams } from '../shared/models/web-api-actions-params';\r\nimport { SanitizeService } from '../../../../../edit/eav-material-controls/adam/sanitize.service';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\n\r\n@Component({\r\n  selector: 'app-web-api',\r\n  templateUrl: './web-api.component.html',\r\n  styleUrls: ['./web-api.component.scss']\r\n})\r\nexport class WebApiComponent implements OnInit {\r\n  webApis: WebApi[];\r\n\r\n  columnDefs: ColDef[] = [\r\n    {\r\n      headerName: 'Folder', field: 'folder', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      headerName: 'Name', field: 'name', flex: 2, minWidth: 250, cellClass: 'no-outline',\r\n      sortable: true, filter: 'agTextColumnFilter',\r\n    },\r\n    {\r\n      width: 80, cellClass: 'secondary-action no-padding', cellRenderer: 'webApiActions', cellRendererParams: {\r\n        onOpenCode: this.openCode.bind(this),\r\n        onDelete: this.deleteApi.bind(this),\r\n      } as WebApiActionsParams,\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    webApiActions: WebApiActionsComponent,\r\n  };\r\n  modules = AllCommunityModules;\r\n\r\n  constructor(\r\n    private webApisService: WebApisService,\r\n    private sanitizeService: SanitizeService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchWebApis();\r\n  }\r\n\r\n  addController() {\r\n    let name = prompt('Controller name:', 'TestController.cs');\r\n    if (name === null || name.length === 0) { return; }\r\n\r\n    name = this.sanitizeService.sanitizeName(name);\r\n    name = name.replace(/\\s/g, ''); // remove all whitespaces\r\n    // find name without extension\r\n    let nameLower = name.toLocaleLowerCase();\r\n    const extIndex = nameLower.lastIndexOf('.cs');\r\n    if (extIndex > 0) {\r\n      nameLower = nameLower.substring(0, extIndex);\r\n    }\r\n    const typeIndex = nameLower.lastIndexOf('controller');\r\n    if (typeIndex > 0) {\r\n      nameLower = nameLower.substring(0, typeIndex);\r\n    }\r\n    // uppercase first letter, take other letters as is and append extension\r\n    name = name.charAt(0).toLocaleUpperCase() + name.substring(1, nameLower.length) + 'Controller.cs';\r\n\r\n    this.snackBar.open('Saving...');\r\n    this.webApisService.create(name).subscribe(res => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.fetchWebApis();\r\n    });\r\n  }\r\n\r\n  private fetchWebApis() {\r\n    this.webApisService.getAll().subscribe(paths => {\r\n      this.webApis = paths.map(path => {\r\n        const splitIndex = path.lastIndexOf('/');\r\n        const fileExtIndex = path.lastIndexOf('.');\r\n        const folder = path.substring(0, splitIndex);\r\n        const name = path.substring(splitIndex + 1, fileExtIndex);\r\n        return {\r\n          folder,\r\n          name,\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  private openCode(api: WebApi) {\r\n    const form: EditForm = {\r\n      items: [\r\n        { Path: `${api.folder}/${api.name}.cs` }\r\n      ]\r\n    };\r\n    this.dialogService.openCode(form);\r\n  }\r\n\r\n  private deleteApi(api: WebApi) {\r\n    alert('Delete api');\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper-nav\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"webApis\" [columnDefs]=\"columnDefs\" [modules]=\"modules\"\r\n    [frameworkComponents]=\"frameworkComponents\" [enableCellTextSelection]=\"true\" [suppressScrollOnNewData]=\"true\"\r\n    [animateRows]=\"true\" [accentedSort]=\"true\" [valueCache]=\"true\" [headerHeight]=\"32\">\r\n  </ag-grid-angular>\r\n\r\n  <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Create a new controller\" (click)=\"addController()\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>App Settings</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Edit app settings\" (click)=\"edit(eavConstants.contentTypes.settings)\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button matTooltip=\"Configure app settings\"\r\n          (click)=\"config(eavConstants.contentTypes.settings)\">\r\n          <mat-icon>settings</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Settings are configurations used by the app - like SQL-connection strings, default \"items-to-show\" numbers and\r\n      things like that. They can also be multi-language, so that a setting (like default RSS-Feed) could be different in\r\n      each language.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>App Resources</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Edit app resources\" (click)=\"edit(eavConstants.contentTypes.resources)\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button matTooltip=\"Configure app resources\"\r\n          (click)=\"config(eavConstants.contentTypes.resources)\">\r\n          <mat-icon>settings</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Resources are used for labels and things like that in the App. They are usually needed to create multi-lingual\r\n      views and such, and should not be used for App-Settings.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>App Package Definition</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Edit app definition\" (click)=\"edit(eavConstants.scopes.app.value)\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      The app-package definition is important when exporting/importing this app.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card *ngIf=\"showPermissions\" class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>App Permissions</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Edit permissions\" (click)=\"openPermissions()\">\r\n          <mat-icon>person</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Permissions give access to people to the entire app (all content-types / data), so use with care.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Export this entire App</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Export\" (click)=\"exportApp()\">\r\n          <mat-icon>cloud_download</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Create an app-package (zip) which can be installed in another portal.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Export or Import parts of this App</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Export\" (click)=\"exportParts()\">\r\n          <mat-icon>cloud_download</mat-icon>\r\n        </button>\r\n        <button mat-icon-button matTooltip=\"Import\" (click)=\"importParts()\">\r\n          <mat-icon>cloud_upload</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      Create an xml containing parts of the app, e.g. content and templates.\r\n      Import parts from such an xml into this app.\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { eavConstants } from '../../shared/constants/eav-constants';\r\nimport { ContentItemsService } from '../../content-items/services/content-items.service';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { AppDialogConfigService } from '../shared/services/app-dialog-config.service';\r\n\r\n@Component({\r\n  selector: 'app-app-configuration',\r\n  templateUrl: './app-configuration.component.html',\r\n  styleUrls: ['./app-configuration.component.scss']\r\n})\r\nexport class AppConfigurationComponent implements OnInit {\r\n  eavConstants = eavConstants;\r\n  showPermissions = false;\r\n\r\n  constructor(\r\n    private contentItemsService: ContentItemsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.appDialogConfigService.getDialogSettings().subscribe(dialogSettings => {\r\n      this.showPermissions = !dialogSettings.IsContent;\r\n    });\r\n  }\r\n\r\n  edit(staticName: string) {\r\n    this.contentItemsService.getAll(staticName).subscribe(contentItems => {\r\n      if (contentItems.length !== 1) { throw new Error(`Found too many settings for the type ${staticName}`); }\r\n      const item = contentItems[0];\r\n      const form: EditForm = {\r\n        items: [{ EntityId: item.Id.toString() }],\r\n      };\r\n      this.router.navigate([`edit/${JSON.stringify(form)}`], { relativeTo: this.route.firstChild });\r\n    });\r\n  }\r\n\r\n  config(staticName: string) {\r\n    this.router.navigate([`fields/${staticName}`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  openPermissions() {\r\n    this.router.navigate(\r\n      [`permissions/${eavConstants.metadata.app.type}/${eavConstants.keyTypes.number}/${this.context.appId}`],\r\n      { relativeTo: this.route.firstChild }\r\n    );\r\n  }\r\n\r\n  exportApp() {\r\n    this.router.navigate([`export`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  exportParts() {\r\n    this.router.navigate([`export/parts`], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  importParts() {\r\n    this.router.navigate([`import/parts`], { relativeTo: this.route.firstChild });\r\n  }\r\n}\r\n","<div (click)=\"toggleDebugEnabled($event)\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Administration</div>\r\n      <button mat-icon-button matTooltip=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n  <mat-tab-group dynamicHeight color=\"accent\" *ngIf=\"dialogSettings\" (selectedTabChange)=\"changeTab($event)\"\r\n    [selectedIndex]=\"tabIndex\">\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Getting Started\">\r\n        <mat-icon>info</mat-icon>\r\n        <span>Info</span>\r\n      </div>\r\n      <app-getting-started [gettingStartedUrl]=\"dialogSettings.GettingStartedUrl\">\r\n      </app-getting-started>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Content\">\r\n        <mat-icon>menu</mat-icon>\r\n        <span>Data</span>\r\n      </div>\r\n      <app-data *matTabContent></app-data>\r\n    </mat-tab>\r\n\r\n    <mat-tab *ngIf=\"!dialogSettings.IsContent\">\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Query Designer\">\r\n        <mat-icon>filter_list</mat-icon>\r\n        <span>Queries</span>\r\n      </div>\r\n      <app-queries *matTabContent></app-queries>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Views / Templates\">\r\n        <mat-icon>layers</mat-icon>\r\n        <span>Views</span>\r\n      </div>\r\n      <app-views *matTabContent></app-views>\r\n    </mat-tab>\r\n\r\n    <mat-tab *ngIf=\"!dialogSettings.IsContent\">\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"WebApi / Data\">\r\n        <mat-icon>offline_bolt</mat-icon>\r\n        <span>WebApi</span>\r\n      </div>\r\n      <app-web-api *matTabContent></app-web-api>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"App Settings\">\r\n        <mat-icon>settings_applications</mat-icon>\r\n        <span>App</span>\r\n      </div>\r\n      <app-app-configuration *matTabContent></app-app-configuration>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { DialogSettings } from '../shared/models/dialog-settings.model';\r\nimport { AppDialogConfigService } from '../shared/services/app-dialog-config.service';\r\nimport { GlobalConfigurationService } from '../../../../../edit/shared/services/global-configuration.service';\r\n\r\n@Component({\r\n  selector: 'app-app-administration-nav',\r\n  templateUrl: './app-administration-nav.component.html',\r\n  styleUrls: ['./app-administration-nav.component.scss']\r\n})\r\nexport class AppAdministrationNavComponent implements OnInit, OnDestroy {\r\n  tabs = ['home', 'data', 'queries', 'views', 'web-api', 'app']; // tabs have to match template and filter below\r\n  tabIndex: number;\r\n  dialogSettings: DialogSettings;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AppAdministrationNavComponent>,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private globalConfigurationService: GlobalConfigurationService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.appDialogConfigService.getDialogSettings().subscribe(dialogSettings => {\r\n        if (dialogSettings.IsContent) {\r\n          this.tabs = this.tabs.filter(tab => !(tab === 'queries' || tab === 'web-api'));\r\n        }\r\n        this.tabIndex = this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path); // set tab initially\r\n        this.dialogSettings = dialogSettings; // needed to filter tabs\r\n      })\r\n    );\r\n    this.subscription.add(\r\n      // change tab when route changed\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\r\n        this.tabIndex = this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n\r\n  toggleDebugEnabled(event: MouseEvent) {\r\n    const enableDebugEvent = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (enableDebugEvent) { this.globalConfigurationService.toggleDebugEnabled(); }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}