{"version":3,"sources":["./src/app/app-administration/shared/models/content-type.model.ts","./src/app/app-administration/shared/modals/edit-content-type/edit-content-type.component.html","./src/app/app-administration/shared/modals/edit-content-type/edit-content-type.component.ts","./src/app/shared/constants/eav-constants.ts"],"names":["dialogRef","route","contentTypesService","snackBar","lockScope","contentTypeNamePattern","contentTypeNameError","disableAnimation","this","scope","snapshot","paramMap","get","getScopes","subscribe","contentTypes","scopeOptions","id","parseInt","ngAfterViewInit","setTimeout","ngOnInit","fetchContentType","contentType","StaticName","Name","Description","Scope","ChangeStaticName","NewStaticName","changeScope","event","newScope","value","prompt","find","option","push","name","scopes","default","unlockScope","stopPropagation","onSubmit","open","save","result","duration","closeDialog","close","retrieveContentTypes","ct","Id","EditContentTypeComponent","eavConstants","metadata","attribute","type","target","app","entity","zone","cmsObject","keyTypes","guid","string","number","cmsSystem","system","template","permissions","query","settings","resources","pipelineDesigner","outDataSource","className","in","description","visualDesignerData","Top","Left","Width","defaultPipeline","dataSources","entityGuid","partAssemblyAndType","streamWiring","From","Out","To","In","testParameters"],"mappings":"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","file":"edit-content-type-component.164f9d58cc682005318a.js","sourcesContent":["export class ContentType {\r\n  Description: string;\r\n  Fields: number;\r\n  I18nKey: string;\r\n  Id: number;\r\n  Items: number;\r\n  Label: string;\r\n  Metadata: ContentTypeMetadata;\r\n  Name: string;\r\n  Scope: string;\r\n  SharedDefId: number;\r\n  StaticName: string;\r\n  UsesSharedDef: boolean;\r\n}\r\n\r\nexport class ContentTypeMetadata {\r\n  Description: string;\r\n  EditInstructions: string;\r\n  Icon: string;\r\n  Id: number;\r\n  Label: string;\r\n  Link: string;\r\n  ListInstructions: any; // spm TODO: figure out the type\r\n  Notes: string;\r\n  Title: string;\r\n}\r\n\r\nexport class ContentTypeEdit extends ContentType {\r\n  ChangeStaticName: boolean;\r\n  NewStaticName: string;\r\n}\r\n","<div mat-dialog-title>\r\n  <div class=\"dialog-title-box\">{{ id ? 'Edit Content Type' : 'New Content Type' }}</div>\r\n</div>\r\n\r\n<form *ngIf=\"contentType\" (ngSubmit)=\"onSubmit()\" #ngForm=\"ngForm\">\r\n  <div class=\"edit-input\">\r\n    <mat-form-field appearance=\"standard\" color=\"accent\">\r\n      <mat-label>Name</mat-label>\r\n      <input matInput type=\"text\" [pattern]=\"contentTypeNamePattern\" [(ngModel)]=\"contentType.Name\" name=\"Name\" required\r\n        #name='ngModel'>\r\n    </mat-form-field>\r\n    <ng-container *ngIf=\"name.touched && name.errors\">\r\n      <app-field-hint *ngIf=\"name.errors.required\" [isError]=\"true\">This field is required</app-field-hint>\r\n      <app-field-hint *ngIf=\"name.errors.pattern\" [isError]=\"true\">{{ contentTypeNameError }}</app-field-hint>\r\n    </ng-container>\r\n  </div>\r\n  <mat-accordion [@.disabled]=\"disableAnimation\">\r\n    <mat-expansion-panel expanded=\"false\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>Advanced</mat-panel-title>\r\n        <mat-panel-description></mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n\r\n      <div class=\"edit-input\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput type=\"text\" [(ngModel)]=\"contentType.Description\" name=\"Description\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"edit-input\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Scope</mat-label>\r\n          <mat-select [ngModel]=\"contentType.Scope\" name=\"Scope\" (selectionChange)=\"changeScope($event)\"\r\n            [disabled]=\"lockScope\">\r\n            <mat-option *ngFor=\"let scopeOption of scopeOptions\" [value]=\"scopeOption.value\">{{ scopeOption.name }}\r\n            </mat-option>\r\n            <mat-option value=\"Other\">Other...</mat-option>\r\n          </mat-select>\r\n          <button mat-icon-button type=\"button\" matSuffix [matTooltip]=\"lockScope ? 'Unlock' : 'Lock'\">\r\n            <mat-icon *ngIf=\"lockScope\" (click)=\"unlockScope($event)\">lock</mat-icon>\r\n            <mat-icon *ngIf=\"!lockScope\" (click)=\"unlockScope($event)\">lock_open</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n        <app-field-hint>\r\n          The scope should almost never be changed -\r\n          <a href=\"http://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n        </app-field-hint>\r\n      </div>\r\n\r\n      <div class=\"edit-input\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Static Name</mat-label>\r\n          <input matInput type=\"text\" [ngModel]=\"contentType.StaticName\" name=\"StaticName\" disabled>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div *ngIf=\"contentType.SharedDefId\" class=\"edit-input\">\r\n        <h3>Shared Content Type (Ghost)</h3>\r\n        <p>Note: this can't be edited in the UI, for now if you really know what you're doing, do it in the DB</p>\r\n        <p>Uses Type Definition of: {{ contentType.SharedDefId }}</p>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n\r\n  <div class=\"dialog-actions-box\">\r\n    <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n    <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!ngForm.form.valid\">Save</button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { ContentTypeEdit } from '../../models/content-type.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\nimport { eavConstants, EavScopesKey, EavScopeOption } from '../../../../shared/constants/eav-constants';\r\nimport { contentTypeNamePattern, contentTypeNameError } from '../../constants/content-type';\r\n\r\n@Component({\r\n  selector: 'app-edit-content-type',\r\n  templateUrl: './edit-content-type.component.html',\r\n  styleUrls: ['./edit-content-type.component.scss']\r\n})\r\nexport class EditContentTypeComponent implements OnInit, AfterViewInit {\r\n  scope: string;\r\n  id: number;\r\n  contentType: ContentTypeEdit;\r\n  lockScope = true;\r\n  scopeOptions: EavScopeOption[];\r\n  contentTypeNamePattern = contentTypeNamePattern;\r\n  contentTypeNameError = contentTypeNameError;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditContentTypeComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentTypesService: ContentTypesService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.scope = this.route.snapshot.paramMap.get('scope');\r\n    // this.scopeOptions = Object.keys(eavConstants.scopes).map((key: EavScopesKey) => eavConstants.scopes[key]);\r\n    this.contentTypesService.getScopes().subscribe(contentTypes => {\r\n      this.scopeOptions = contentTypes;\r\n    });\r\n    this.id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\r\n  }\r\n\r\n  // Workaround for angular component issue #13870\r\n  disableAnimation = true;\r\n  ngAfterViewInit() {\r\n    // timeout required to avoid the dreaded 'ExpressionChangedAfterItHasBeenCheckedError'\r\n    setTimeout(() => this.disableAnimation = false);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.id) {\r\n      this.contentType = {\r\n        ...(new ContentTypeEdit()),\r\n        StaticName: '',\r\n        Name: '',\r\n        Description: '',\r\n        Scope: this.scope,\r\n        ChangeStaticName: false,\r\n        NewStaticName: '',\r\n      };\r\n    } else {\r\n      this.fetchContentType();\r\n    }\r\n  }\r\n\r\n  changeScope(event: MatSelectChange) {\r\n    let newScope: string = event.value;\r\n    if (newScope === 'Other') {\r\n      // tslint:disable-next-line:max-line-length\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.');\r\n      if (!newScope) {\r\n        newScope = eavConstants.scopes.default.value;\r\n      } else if (!this.scopeOptions.find(option => option.value === newScope)) {\r\n        const newScopeOption: EavScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        this.scopeOptions.push(newScopeOption);\r\n      }\r\n    }\r\n    this.contentType.Scope = newScope;\r\n  }\r\n\r\n  unlockScope(event: Event) {\r\n    event.stopPropagation();\r\n    this.lockScope = !this.lockScope;\r\n    if (this.lockScope) {\r\n      this.contentType.Scope = this.scope;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.snackBar.open('Saving...');\r\n    this.contentTypesService.save(this.contentType).subscribe(result => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchContentType() {\r\n    this.contentTypesService.retrieveContentTypes(this.scope).subscribe(contentTypes => {\r\n      const contentType = contentTypes.find(ct => ct.Id === this.id);\r\n      this.contentType = {\r\n        ...contentType,\r\n        ChangeStaticName: false,\r\n        NewStaticName: contentType.StaticName,\r\n      };\r\n    });\r\n  }\r\n}\r\n","export type EavMetadataKey = 'attribute' | 'app' | 'entity' | 'contentType' | 'zone' | 'cmsObject';\r\nexport type EavKeyTypeKey = 'guid' | 'string' | 'number';\r\nexport type EavScopesKey = 'default' | 'app' | 'cmsSystem' | 'system';\r\nexport interface EavScopeOption { name: string; value: string; }\r\n\r\nexport const eavConstants = {\r\n  metadata: {\r\n    /** metadataOfAttribute */\r\n    attribute: { type: 2, target: 'EAV Field Properties' },\r\n    /** metadataOfApp */\r\n    app: { type: 3, target: 'App' },\r\n    /** metadataOfEntity */\r\n    entity: { type: 4, target: 'Entity' },\r\n    /** metadataOfContentType */\r\n    contentType: { type: 5, target: 'ContentType' },\r\n    /** metadataOfZone */\r\n    zone: { type: 6, target: 'Zone' },\r\n    /** metadataOfCmsObject */\r\n    cmsObject: { type: 10, target: 'CmsObject' },\r\n  },\r\n\r\n  /** Loopup type for the metadata, e.g. key=80adb152-efad-4aa4-855e-74c5ef230e1f is keyType=guid */\r\n  keyTypes: {\r\n    guid: 'guid',\r\n    string: 'string',\r\n    number: 'number',\r\n  },\r\n\r\n  /** Scopes */\r\n  scopes: {\r\n    /** This is the main schema and the data you usually see is from here */\r\n    default: { name: 'Default', value: '2SexyContent' },\r\n    /** This contains content-types for configuration, settings and resources of the app */\r\n    app: { name: 'App', value: '2SexyContent-App' },\r\n    /** This contains view-definitions, content-types etc. */\r\n    cmsSystem: { name: 'CMS System', value: '2SexyContent-System' },\r\n    /** This contains core EAV data like input-field configurations and similar */\r\n    system: { name: 'System', value: 'System' },\r\n  },\r\n\r\n  /** Content types where templates, permissions, etc. are stored */\r\n  contentTypes: {\r\n    /** Content type containing app templates (views) */\r\n    template: '2SexyContent-Template',\r\n    /** Content type containing permissions */\r\n    permissions: 'PermissionConfiguration',\r\n    /** Content type containing queries */\r\n    query: 'DataPipeline',\r\n    /** Content type containing content type metadata (app administration > data > metadata) */\r\n    contentType: 'ContentType',\r\n    /** Content type containing app settings */\r\n    settings: 'App-Settings',\r\n    /** Content type containing app resources */\r\n    resources: 'App-Resources',\r\n  },\r\n\r\n  pipelineDesigner: {\r\n    outDataSource: {\r\n      className: 'SexyContentTemplate',\r\n      in: ['ListContent', 'Default'],\r\n      name: '2sxc Target (View or API)',\r\n      description: 'The template/script which will show this data',\r\n      visualDesignerData: { Top: 20, Left: 200, Width: 700 }\r\n    },\r\n    defaultPipeline: {\r\n      dataSources: [\r\n        {\r\n          entityGuid: 'unsaved1',\r\n          partAssemblyAndType: 'ToSic.Eav.DataSources.Caches.ICache, ToSic.Eav.DataSources',\r\n          visualDesignerData: { Top: 440, Left: 440 }\r\n        }, {\r\n          entityGuid: 'unsaved2',\r\n          partAssemblyAndType: 'ToSic.Eav.DataSources.PublishingFilter, ToSic.Eav.DataSources',\r\n          visualDesignerData: { Top: 300, Left: 440 }\r\n        }, {\r\n          entityGuid: 'unsaved3',\r\n          partAssemblyAndType: 'ToSic.SexyContent.DataSources.ModuleDataSource, ToSic.SexyContent',\r\n          visualDesignerData: { Top: 170, Left: 440 }\r\n        }\r\n      ],\r\n      streamWiring: [\r\n        { From: 'unsaved1', Out: 'Default', To: 'unsaved2', In: 'Default' },\r\n        { From: 'unsaved1', Out: 'Drafts', To: 'unsaved2', In: 'Drafts' },\r\n        { From: 'unsaved1', Out: 'Published', To: 'unsaved2', In: 'Published' },\r\n        { From: 'unsaved2', Out: 'Default', To: 'unsaved3', In: 'Default' },\r\n        { From: 'unsaved3', Out: 'ListContent', To: 'Out', In: 'ListContent' },\r\n        { From: 'unsaved3', Out: 'Default', To: 'Out', In: 'Default' }\r\n      ]\r\n    },\r\n    testParameters: '[Demo:Demo]=true',\r\n  },\r\n};\r\n"],"sourceRoot":"webpack:///"}