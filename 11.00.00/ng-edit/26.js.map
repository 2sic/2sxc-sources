{"version":3,"sources":["C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_cloneBuffer.js","./src/app/shared/services/dialog.service.ts","./src/app/code-editor/services/source.service.ts","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_defineProperty.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_baseAssignValue.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_assignValue.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_copyObject.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_baseKeysIn.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/keysIn.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_nativeKeysIn.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_getPrototype.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_getSymbolsIn.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_getAllKeysIn.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_initCloneArray.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_cloneArrayBuffer.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_cloneRegExp.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_cloneSymbol.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_baseCreate.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/isMap.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_baseIsMap.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/isSet.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_baseIsSet.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_baseClone.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_copyArray.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_initCloneObject.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_copySymbolsIn.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_baseAssignIn.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_copySymbols.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_baseAssign.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_initCloneByTag.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_cloneDataView.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_cloneTypedArray.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/_arrayEach.js","C:/Projects/eav-item-dialog-angular/node_modules/lodash-es/cloneDeep.js","./src/app/code-editor/services/snippets.service.ts","./src/app/code-editor/code-templates/code-templates.helpers.ts","./src/app/code-editor/code-templates/code-templates.component.html","./src/app/code-editor/code-templates/code-templates.component.ts","./src/app/code-editor/code-snippets/toarray.pipe.ts","./src/app/code-editor/code-snippets/code-snippets.component.html","./src/app/code-editor/code-snippets/code-snippets.component.ts","./src/app/code-editor/ace-editor/ace-options.ts","./src/app/code-editor/ace-editor/ace-editor.component.ts","./src/app/code-editor/ace-editor/ace-editor.helpers.ts","./src/app/code-editor/code-editor.component.html","./src/app/code-editor/code-editor-routing.module.ts","./src/app/code-editor/code-editor.component.ts","./src/app/code-editor/code-editor.module.ts"],"names":["freeExports","exports","nodeType","freeModule","module","Buffer","undefined","allocUnsafe","buffer","isDeep","slice","length","result","constructor","copy","context","openCode","form","oldHref","sessionStorage","getItem","oldUrl","URL","newHref","origin","pathname","search","newHash","this","buildHashParam","zoneId","toString","replace","appId","tabId","moduleId","contentBlockId","JSON","stringify","items","window","open","openQueryDesigner","queryId","key","value","rawKey","valueTemp","encodeURIComponent","DialogService","http","dnnContext","get","$2sxc","apiUrl","params","calcParams","pipe","map","view","Type","toLowerCase","Extension","save","post","getTemplates","global","withSubfolders","templateId","path","SourceService","func","Object","e","object","prototype","hasOwnProperty","objValue","call","eq","source","props","customizer","isNew","index","newValue","isArrayLike","isObject","push","isProto","getPrototypeOf","getOwnPropertySymbols","stubArray","arrayBuffer","byteLength","set","reFlags","symbolProto","symbolValueOf","valueOf","objectCreate","create","proto","nodeIsMap","isMap","isObjectLike","nodeIsSet","isSet","cloneableTags","baseClone","bitmask","stack","isFlat","isFull","isArr","isArray","array","input","Array","tag","isFunc","isBuffer","keys","regexp","Ctor","dataView","byteOffset","typedArray","exec","lastIndex","stacked","forEach","subValue","add","keysFunc","keysIn","iteratee","keyPrefixes","keyPrefixIndex","indexOf","getSnippets","toPromise","res","relevant","filterAwayNotNeededSnippetsList","snippets","standAndInputSnips","extractInputTypeSnippets","sets","initSnippetsWithConfig","standardArray","inputTypeSnippets","list","newList","itm","setHasPrefix","substr","inputTypeArray","catalogInputTypeSnippets","inputTypeList","subset","templateConfiguration","makeTree","Content","assign","Fields","PresentationFields","TypeContent","loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","tree","o","reformatted","name","label","snip","content","help","links","linksList","getHelpKey","addition","linksString","llist","split","pair","trim","url","target","type","prefix","getFields","AppId","then","fields","fieldname","StaticName","valuePlaceholder","Metadata","merged","Notes","snipDefaults","attachSnippets","InputType","std","i","obj","val","staticName","appid","fld","md","allMd","All","typeMd","inputMd","inputType","genericSnippet","fieldType","typeSnips","concat","more","fieldSnips","g","localizeGenericSnippet","collapse","objName","fieldName","SnippetsService","calculateOpenItems","filename","openItems","paths","parent","existing","find","item","children","dialogService","toggledItems","ngOnInit","ngOnChanges","changes","templates","currentValue","template","last","pathFromRoot","calculateTree","FileName","openTemplate","Path","toggleItem","splice","toggleInArray","CodeTemplatesComponent","transform","ToArrayPipe","insertSnippet","selected","toggledInfos","activeSet","onSetChange","event","addSnippet","snippet","emit","toggleInfo","info","CodeSnippetsComponent","aceOptions","mode","wrap","useSoftTabs","theme","fontSize","fontFamily","showGutter","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","zone","propagateChange","propagateTouched","loadScripts","scriptObjects","callback","iteration","newCallback","bind","scrObj","globalVar","scriptInDom","document","querySelector","src","addEventListener","once","scriptEl","createElement","head","appendChild","aceLoaded","updateValues","editor","toggleResize","previousValue","runOutsideAngular","setTimeout","resize","ace","require","snippetManager","focus","writeValue","p","getCursorPosition","setValue","moveCursorToPosition","registerOnChange","fn","registerOnTouched","ngOnDestroy","destroy","container","remove","config","edit","editorRef","nativeElement","$blockScrolling","Infinity","session","on","onEditorValueChange","onEditorBlurred","run","getValue","getModeForPath","setMode","register","AceEditorComponent","provide","useExisting","multi","routes","component","route","snackBar","sourceService","snippetsService","titleService","explorer","eventListeners","init","calculateViewKey","attachListeners","viewKey","subscribe","savedCode","Code","setTitle","explorerSnipps","editorSnipps","detachListeners","toggleExplorer","activeExplorer","changeInsertSnipp","insertSnipp","codeToSave","next","duration","error","itemsRaw","parse","EntityId","closing","stopClose","keyboardSave","element","listener","removeEventListener","preventDefault","returnValue","keyCode","navigator","platform","match","metaKey","ctrlKey","CodeEditorComponent","CodeEditorRoutingModule","forChild","CodeEditorModule"],"mappings":"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","file":"26.js","sourcesContent":["import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Context } from './context';\r\nimport { EditForm } from '../../app-administration/shared/models/edit-form.model';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyZoneId, keyAppId, keyTabId, keyModuleId, keyContentBlockId, keyLang, keyLangPri, keyLangs, keyPortalRoot, keyWebsiteRoot, keyPartOfPage, keyAppRoot, keyFa, keyRequestToken, keyDebug, keyUserCanDesign, keyUserCanDevelop, keyUrl, prefix, keyDialog, keyItems, keyPipelineId } from '../constants/sessions-keys';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n  constructor(private context: Context) { }\r\n\r\n  openCode(form: EditForm) {\r\n    const dialog = 'develop';\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyLang) +\r\n      this.buildHashParam(keyLangPri) +\r\n      this.buildHashParam(keyLangs) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyWebsiteRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyUserCanDesign) +\r\n      this.buildHashParam(keyUserCanDevelop) +\r\n      this.buildHashParam(keyAppRoot) +\r\n      this.buildHashParam(keyFa) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(form: EditForm, queryId: number) {\r\n    const dialog = 'pipeline-designer';\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n    const newHash =\r\n      this.buildHashParam(keyZoneId, this.context.zoneId.toString()).replace('&', '#') +\r\n      this.buildHashParam(keyAppId, this.context.appId.toString()) +\r\n      this.buildHashParam(keyTabId, this.context.tabId.toString()) +\r\n      this.buildHashParam(keyModuleId, this.context.moduleId.toString()) +\r\n      this.buildHashParam(keyContentBlockId, this.context.contentBlockId.toString()) +\r\n      this.buildHashParam(keyLang) +\r\n      this.buildHashParam(keyLangPri) +\r\n      this.buildHashParam(keyLangs) +\r\n      this.buildHashParam(keyPortalRoot) +\r\n      this.buildHashParam(keyWebsiteRoot) +\r\n      this.buildHashParam(keyPartOfPage) +\r\n      this.buildHashParam(keyUserCanDesign) +\r\n      this.buildHashParam(keyUserCanDevelop) +\r\n      this.buildHashParam(keyAppRoot) +\r\n      this.buildHashParam(keyFa) +\r\n      this.buildHashParam(keyRequestToken) +\r\n      this.buildHashParam(keyDialog, dialog) +\r\n      this.buildHashParam(keyPipelineId, queryId.toString()) +\r\n      this.buildHashParam(keyItems, JSON.stringify(form.items)) +\r\n      (sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : '') +\r\n      '';\r\n\r\n    const url = newHref + newHash;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value !== undefined) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam = `&${rawKey}=${rawValue}`;\r\n    return hashParam;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from '../../shared/services/context';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** Key is templateId or path */\r\n  get(key: number | string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('app-sys/appassets/asset'), {\r\n      params: this.calcParams(key)\r\n    }).pipe(\r\n      map((view: SourceView) => {\r\n        if (view.Type.toLowerCase() === 'auto') {\r\n          switch (view.Extension.toLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    ) as Observable<SourceView>;\r\n  }\r\n\r\n  /** Key is templateId or path */\r\n  save(key: number | string, view: SourceView) {\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl('app-sys/appassets/asset'), view, {\r\n      params: this.calcParams(key),\r\n    }) as Observable<boolean>;\r\n  }\r\n\r\n  getTemplates() {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('app-sys/appassets/list'), {\r\n      params: { appId: this.context.appId.toString(), global: 'false', withSubfolders: 'true' },\r\n    }) as Observable<string[]>;\r\n  }\r\n\r\n  private calcParams(key: number | string) {\r\n    if (typeof key === typeof 0) {\r\n      return { templateId: key.toString() };\r\n    } else {\r\n      return { path: key as string };\r\n    }\r\n  }\r\n}\r\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { Snippet } from '../models/snippet.model';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\n\r\n@Injectable()\r\nexport class SnippetsService {\r\n  private keyPrefixes = ['@', '['];\r\n  private keyPrefixIndex = (view: SourceView) => (view.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext,\r\n  ) { }\r\n\r\n  async getSnippets(view: SourceView) {\r\n    const res: any = await this.http.get('../sxc-develop/snippets.json.js').toPromise();\r\n    const snippets: Snippet[] = res.snippets;\r\n    const relevant = this.filterAwayNotNeededSnippetsList(snippets, view);\r\n    const standAndInputSnips = this.extractInputTypeSnippets(relevant);\r\n    const sets = this.initSnippetsWithConfig(standAndInputSnips.standardArray, view, standAndInputSnips.inputTypeSnippets);\r\n    return { sets, list: standAndInputSnips.standardArray };\r\n  }\r\n\r\n  // scan the list for sets starting with @ or [ and filter if not needed right now\r\n  private filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView) {\r\n    const newList = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = this.keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === this.keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === this.keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substr(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  private extractInputTypeSnippets(list: Snippet[]) {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substr(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.catalogInputTypeSnippets(inputTypeArray);\r\n    return {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n  }\r\n\r\n  private catalogInputTypeSnippets(list: Snippet[]) {\r\n    const inputTypeList: any = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  private initSnippetsWithConfig(sets: any, templateConfiguration: SourceView, inputTypeSnippets: any) {\r\n    sets = this.makeTree(sets);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.loadContentType(sets.Content.Fields, templateConfiguration.TypeContent, 'Content', templateConfiguration, inputTypeSnippets);\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.loadContentType(\r\n        sets.Content.PresentationFields, templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation', templateConfiguration, inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.loadContentType(sets.List.Fields, templateConfiguration.TypeList, 'ListContent', templateConfiguration, inputTypeSnippets);\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.loadContentType(\r\n          sets.List.PresentationFields, templateConfiguration.TypeListPresentation,\r\n          'ListContent.Presentation', templateConfiguration, inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  // Convert the list into a tree with set/subset/item\r\n  private makeTree(list: Snippet[]) {\r\n    const tree: any = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted = {\r\n        key: o.name,\r\n        label: this.label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.help(o.set, o.subset, o.name),\r\n        links: this.linksList(o.links)\r\n      };\r\n\r\n      tree[o.set][o.subset].push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  private label(set: any, subset: any, snip: any) {\r\n    const key = this.getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result = key;\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getHelpKey(set: any, subset: any, snip: any, addition: any) {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  private help(set: any, subset: any, snip: any) {\r\n    const key = this.getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result = key;\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private linksList(linksString: any) {\r\n    if (!linksString) {\r\n      return null;\r\n    }\r\n    const links = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        links.push({ name: pair[0].trim(), url: pair[1].trim() + ':' + pair[2].trim() });\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  // get fields in content types\r\n  private loadContentType(target: any, type: any, prefix: any, templateConfiguration: SourceView, inputTypeSnippets: any) {\r\n    this.getFields(templateConfiguration.AppId, type)\r\n      .then(fields => {\r\n        // first add common items if the content-type actually exists\r\n        for (const value of fields) {\r\n          const fieldname = value.StaticName;\r\n          target[fieldname] = {\r\n            key: fieldname,\r\n            label: fieldname,\r\n            snip: this.valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n            help: value.Metadata.merged.Notes || '' + ' (' + value.Type.toLowerCase() + ') '\r\n          };\r\n          // try to add generic snippets specific to this input-type\r\n          const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n\r\n          this.attachSnippets(target, prefix, fieldname, value.InputType, snipDefaults, inputTypeSnippets);\r\n        }\r\n\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        if (fields.length) {\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 0; i < std.length; i++) {\r\n            target[std[i]] = {\r\n              key: std[i],\r\n              label: std[i],\r\n              snip: this.valuePlaceholder(prefix, std[i], templateConfiguration),\r\n              help: 'SourceEditorSnippets.StandardFields.' + std[i] + '.Help'\r\n            };\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  private valuePlaceholder(obj: any, val: any, templateConfiguration: any) {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n  private getFields(appId: number, staticName: string) {\r\n    return this.http.get(this.dnnContext.$2sxc.http.apiUrl('eav/contenttype/getfields'), {\r\n      params: { appid: appId.toString(), staticName },\r\n    })\r\n      .toPromise()\r\n      .then((fields: Field[]) => {\r\n        if (fields) {\r\n          for (const fld of fields) {\r\n            if (!fld.Metadata) { continue; }\r\n            const md = fld.Metadata;\r\n            const allMd = md.All;\r\n            const typeMd = md[fld.Type];\r\n            const inputMd = md[fld.InputType];\r\n            md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n          }\r\n        }\r\n        return fields;\r\n      });\r\n  }\r\n\r\n  private attachSnippets(target: any, prefix: any, fieldname: any, inputType: any, snipDefaults: any, inputTypeSnippets: any) {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) {   // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substr(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) {\r\n      return;\r\n    }\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = [];\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true\r\n        });\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  private localizeGenericSnippet(snip: any, objName: any, fieldName: any) {\r\n    snip = snip.replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","import { TreeItem } from '../models/tree-item.model';\r\n\r\nexport function calculateTree(templates: string[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.split('/');\r\n    const last = paths[paths.length - 1];\r\n    for (const path of paths) {\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          name: path,\r\n          children: (path !== last) ? [] : null,\r\n          pathFromRoot: template,\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n\r\nexport function calculateOpenItems(filename: string, tree: TreeItem[]): TreeItem[] {\r\n  if (!filename || !tree) { return []; }\r\n\r\n  const openItems: TreeItem[] = [];\r\n  const paths = filename.split('/');\r\n  let parent = tree;\r\n  for (const path of paths) {\r\n    const existing = parent.find(item => item.name === path);\r\n    if (!existing) { break; }\r\n    openItems.push(existing);\r\n    if (!existing.children) { break; }\r\n    parent = existing.children;\r\n  }\r\n\r\n  return openItems;\r\n}\r\n\r\nexport function toggleInArray(item: TreeItem, array: TreeItem[]) {\r\n  const index = array.indexOf(item);\r\n  if (index === -1) {\r\n    array.push(item);\r\n  } else {\r\n    array.splice(index, 1);\r\n  }\r\n}\r\n","<div class=\"active-explorer fancy-scrollbar\">\r\n\r\n  <ng-container *ngFor=\"let item of tree\">\r\n    <ng-container *ngTemplateOutlet=\"collapsible; context: {item: item}\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-template #collapsible let-item=\"item\">\r\n\r\n    <div class=\"template-option\" [ngClass]=\"{'active': toggledItems.includes(item) }\" *ngIf=\"!item.children\"\r\n      matTooltipShowDelay=\"750\" [matTooltip]=\"item.name\" (click)=\"openTemplate(item.pathFromRoot)\">\r\n      {{ item.name }}\r\n    </div>\r\n\r\n    <div class=\"collapsible\" *ngIf=\"item.children\" matTooltipShowDelay=\"750\" [matTooltip]=\"item.name\"\r\n      (click)=\"toggleItem(item)\">\r\n      <mat-icon>{{ toggledItems.includes(item) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}</mat-icon>\r\n      <span>{{ item.name }}</span>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"toggledItems.includes(item)\">\r\n      <div class=\"list\" *ngFor=\"let item1 of item.children\">\r\n        <ng-container *ngTemplateOutlet=\"collapsible; context: {item: item1}\"></ng-container>\r\n      </div>\r\n    </ng-container>\r\n\r\n  </ng-template>\r\n\r\n</div>\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { EditForm } from '../../app-administration/shared/models/edit-form.model';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { calculateTree, toggleInArray, calculateOpenItems } from './code-templates.helpers';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n@Component({\r\n  selector: 'app-code-templates',\r\n  templateUrl: './code-templates.component.html',\r\n  styleUrls: ['./code-templates.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CodeTemplatesComponent implements OnInit, OnChanges {\r\n  @Input() view: SourceView;\r\n  @Input() templates: string[];\r\n  tree: TreeItem[];\r\n  toggledItems: TreeItem[] = [];\r\n\r\n  constructor(private dialogService: DialogService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.templates?.currentValue) {\r\n      this.tree = calculateTree(this.templates);\r\n      this.toggledItems = calculateOpenItems(this.view?.FileName, this.tree);\r\n    }\r\n    if (changes.view?.currentValue) {\r\n      this.toggledItems = calculateOpenItems(this.view?.FileName, this.tree);\r\n    }\r\n  }\r\n\r\n  openTemplate(path: string) {\r\n    const form: EditForm = {\r\n      items: [\r\n        { Path: path }\r\n      ]\r\n    };\r\n    this.dialogService.openCode(form);\r\n  }\r\n\r\n  toggleItem(item: TreeItem) {\r\n    toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'toarray' })\r\nexport class ToArrayPipe implements PipeTransform {\r\n  transform(obj: object | Array<any>): Array<any> {\r\n    if (typeof obj !== typeof {}) { return obj as Array<any>; }\r\n    return Object.keys(obj).map(key => {\r\n      return (obj as any)[key];\r\n    });\r\n  }\r\n}\r\n","<div class=\"active-explorer fancy-scrollbar\">\r\n\r\n  <div class=\"edit-input\">\r\n    <mat-form-field appearance=\"standard\" color=\"accent\" class=\"set-dropdown\">\r\n      <mat-select [ngModel]=\"selected\" name=\"selected\" (selectionChange)=\"onSetChange($event)\">\r\n        <mat-option *ngFor=\"let set of sets\" [value]=\"set\">{{ set }}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <ng-container *ngFor=\"let item of activeSet | keyvalue\">\r\n\r\n    <div class=\"collapsible\" [matTooltip]=\"item.key\" matTooltipShowDelay=\"750\" (click)=\"toggleItem(item)\">\r\n      <mat-icon>{{ toggledItems.includes(item) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}</mat-icon>\r\n      <span>{{ item.key }}</span>\r\n    </div>\r\n\r\n    <ul class=\"list\" *ngIf=\"toggledItems.includes(item)\">\r\n      <li class=\"list-item\" *ngFor=\"let value of (item.value | toarray)\">\r\n\r\n        <div class=\"list-item__label-wrapper\">\r\n          <div matRipple class=\"label\" [matTooltip]=\"value.snip\" matTooltipShowDelay=\"750\"\r\n            (click)=\"addSnippet(value.snip)\">{{ value.label }}\r\n          </div>\r\n          <mat-icon matTooltip=\"Show Help\" matTooltipShowDelay=\"750\" appClickStopPropagation\r\n            (click)=\"toggleInfo(value)\">\r\n            info\r\n          </mat-icon>\r\n        </div>\r\n\r\n        <div class=\"list-item__help-wrapper\" *ngIf=\"toggledInfos.includes(value)\">\r\n          <div class=\"text\">{{ value.help }}</div>\r\n          <div *ngFor=\"let link of value.links\">\r\n            <a href=\"{{ link.url }}\" target=\"_blank\">{{ link.name }}</a>\r\n          </div>\r\n        </div>\r\n\r\n      </li>\r\n    </ul>\r\n\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\nimport { MatSelectChange } from '@angular/material/select';\r\n\r\n@Component({\r\n  selector: 'app-code-snippets',\r\n  templateUrl: './code-snippets.component.html',\r\n  styleUrls: ['./code-snippets.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CodeSnippetsComponent implements OnInit, OnChanges {\r\n  @Input() snippets: any;\r\n  @Output() insertSnippet: EventEmitter<any> = new EventEmitter();\r\n  selected = 'Content';\r\n  sets: string[];\r\n  activeSet: any;\r\n  toggledItems: any[] = [];\r\n  toggledInfos: any[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const snippets = changes.snippets?.currentValue;\r\n    if (snippets) {\r\n      this.sets = Object.keys(snippets);\r\n      this.activeSet = this.snippets[this.selected];\r\n    } else {\r\n      this.sets = null;\r\n      this.activeSet = null;\r\n    }\r\n  }\r\n\r\n  onSetChange(event: MatSelectChange) {\r\n    this.selected = event.value;\r\n    this.activeSet = this.snippets[this.selected];\r\n    this.toggledItems = [];\r\n    this.toggledInfos = [];\r\n  }\r\n\r\n  addSnippet(snippet: string) {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleItem(item: any) {\r\n    this.toggleInArray(item, this.toggledItems);\r\n  }\r\n\r\n  toggleInfo(info: any) {\r\n    this.toggleInArray(info, this.toggledInfos);\r\n  }\r\n\r\n  private toggleInArray(item: any, array: any[]) {\r\n    const index = array.indexOf(item);\r\n    if (index === -1) {\r\n      array.push(item);\r\n    } else {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n}\r\n","import { EditorOptions } from './ace.model';\r\n\r\nexport const aceOptions: Partial<EditorOptions> & EditorPluginsOptions = {\r\n  mode: 'ace/mode/razor',\r\n  wrap: true,\r\n  useSoftTabs: true,\r\n  theme: 'ace/theme/sqlserver',\r\n  fontSize: 14,\r\n  fontFamily: 'Consolas, Courier New, monospace',\r\n  showGutter: true,\r\n  enableBasicAutocompletion: true,\r\n  enableLiveAutocompletion: true,\r\n  enableSnippets: true,\r\n};\r\n\r\ninterface EditorPluginsOptions {\r\n  enableBasicAutocompletion: boolean;\r\n  enableLiveAutocompletion: boolean;\r\n  enableSnippets: boolean;\r\n}\r\n","// tslint:disable-next-line:max-line-length\r\nimport { Component, OnInit, Input, ElementRef, NgZone, OnChanges, SimpleChanges, ChangeDetectionStrategy, OnDestroy, forwardRef, ViewChild } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { loadScripts } from './ace-editor.helpers';\r\nimport { aceOptions } from './ace-options';\r\nimport { Ace, Editor } from './ace.model';\r\ndeclare const ace: Ace;\r\n\r\n@Component({\r\n  selector: 'app-ace-editor',\r\n  template: `<div style=\"width: 100%; height: 100%;\" #editor></div>`,\r\n  styles: [':host {display: block; width: 100%; height: 100%}'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => AceEditorComponent),\r\n    multi: true\r\n  }],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AceEditorComponent implements OnInit, OnChanges, OnDestroy {\r\n  @ViewChild('editor') editorRef: ElementRef;\r\n  @Input() filename: string;\r\n  @Input() snippets: any[];\r\n  @Input() insertSnippet: any;\r\n  /** If value changes editor will be resized */\r\n  @Input() toggleResize: boolean;\r\n\r\n  private value = '';\r\n  private editor: Editor;\r\n\r\n  propagateChange: (_: any) => void = () => { };\r\n  propagateTouched: (_: any) => void = () => { };\r\n\r\n  constructor(private zone: NgZone) { }\r\n\r\n  ngOnInit() {\r\n    loadScripts(\r\n      [\r\n        { globalVar: 'ace', src: 'https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.11/ace.min.js' },\r\n        { globalVar: null, src: 'https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.11/ext-modelist.min.js' },\r\n        { globalVar: null, src: 'https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.11/ext-language_tools.min.js' },\r\n      ],\r\n      this.aceLoaded.bind(this)\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const filename = changes.filename?.currentValue;\r\n    const snippets = changes.snippets?.currentValue;\r\n    this.updateValues(filename, snippets);\r\n\r\n    if (!this.editor) { return; }\r\n    const resize = changes.toggleResize?.currentValue !== changes.toggleResize?.previousValue;\r\n    if (resize) {\r\n      this.zone.runOutsideAngular(() => {\r\n        // wait for Angular to update DOM to be able to get proper size of the container\r\n        setTimeout(() => { this.editor.resize(); }, 50);\r\n      });\r\n    }\r\n    const snippet = changes.insertSnippet?.currentValue;\r\n    if (snippet) {\r\n      this.zone.runOutsideAngular(() => {\r\n        const snippetManager = ace.require('ace/snippets').snippetManager;\r\n        snippetManager.insertSnippet(this.editor, snippet);\r\n        this.editor.focus();\r\n      });\r\n    }\r\n  }\r\n\r\n  writeValue(value: string) {\r\n    this.value = value || '';\r\n    if (!this.editor) { return; }\r\n    this.zone.runOutsideAngular(() => {\r\n      const p = this.editor.getCursorPosition();\r\n      this.editor.setValue(this.value, -1);\r\n      this.editor.moveCursorToPosition(p);\r\n    });\r\n  }\r\n\r\n  registerOnChange(fn: (_: any) => void) {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: (_: any) => void) {\r\n    this.propagateTouched = fn;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.editor.destroy();\r\n      this.editor.container.remove();\r\n      this.editor = null;\r\n    });\r\n  }\r\n\r\n  private aceLoaded() {\r\n    this.zone.runOutsideAngular(() => {\r\n      ace.config.set('basePath', 'https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.11');\r\n      this.editor = ace.edit(this.editorRef.nativeElement, aceOptions);\r\n      (this.editor as any).$blockScrolling = Infinity;\r\n      this.editor.session.setValue(this.value); // set value and reset undo history\r\n      this.updateValues(this.filename, this.snippets);\r\n      this.editor.on('change', this.onEditorValueChange.bind(this));\r\n      this.editor.on('blur', this.onEditorBlurred.bind(this));\r\n      this.editor.focus();\r\n    });\r\n  }\r\n\r\n  private onEditorValueChange() {\r\n    this.zone.run(() => {\r\n      this.propagateChange(this.editor.getValue());\r\n    });\r\n  }\r\n\r\n  private onEditorBlurred() {\r\n    this.zone.run(() => {\r\n      this.propagateTouched(this.editor.getValue());\r\n    });\r\n  }\r\n\r\n  private updateValues(filename: string, snippets: any[]) {\r\n    if (!this.editor) { return; }\r\n    this.zone.runOutsideAngular(() => {\r\n      if (filename) {\r\n        const modelist = ace.require('ace/ext/modelist');\r\n        const mode = modelist.getModeForPath(filename).mode;\r\n        this.editor.session.setMode(mode);\r\n      }\r\n      if (snippets) {\r\n        const snippetManager = ace.require('ace/snippets').snippetManager;\r\n        snippetManager.register(this.snippets);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export function loadScripts(scriptObjects: ScriptObject[], callback: (...args: any[]) => any, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  if (!!(window as any)[scrObj.globalVar]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  const scriptInDom: HTMLScriptElement = document.querySelector(`script[src=\"${scrObj.src}\"]`);\r\n  if (scriptInDom) {\r\n    scriptInDom.addEventListener('load', newCallback, { once: true });\r\n    return;\r\n  }\r\n\r\n  const scriptEl = document.createElement('script');\r\n  scriptEl.src = scrObj.src;\r\n  scriptEl.addEventListener('load', newCallback, { once: true });\r\n  document.head.appendChild(scriptEl);\r\n}\r\n\r\nexport class ScriptObject {\r\n  globalVar: string;\r\n  src: string;\r\n}\r\n","<div class=\"editor-root\">\r\n  <div class=\"toolbar\">\r\n    <div class=\"toolbar-button\" [ngClass]=\"{'active': activeExplorer === explorer.templates}\" matTooltip=\"Templates\"\r\n      (click)=\"toggleExplorer(explorer.templates)\">\r\n      <mat-icon>file_copy</mat-icon>\r\n    </div>\r\n    <div class=\"toolbar-button\" [ngClass]=\"{'active': activeExplorer === explorer.snippets}\" matTooltip=\"Snippets\"\r\n      (click)=\"toggleExplorer(explorer.snippets)\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <app-code-templates [hidden]=\"activeExplorer !== explorer.templates\" [view]=\"view\" [templates]=\"templates\">\r\n  </app-code-templates>\r\n  <app-code-snippets [hidden]=\"activeExplorer !== explorer.snippets\" [snippets]=\"explorerSnipps\"\r\n    (insertSnippet)=\"changeInsertSnipp($event)\">\r\n  </app-code-snippets>\r\n\r\n  <app-ace-editor *ngIf=\"view\" [filename]=\"view.FileName\" [(ngModel)]=\"view.Code\" [snippets]=\"editorSnipps\"\r\n    [insertSnippet]=\"insertSnipp\" [toggleResize]=\"!this.activeExplorer\">\r\n  </app-ace-editor>\r\n\r\n  <button mat-fab mat-elevation-z24 matTooltip=\"Click to save or CTRL + S\" (click)=\"save()\">\r\n    <mat-icon>done</mat-icon>\r\n  </button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CodeEditorComponent } from './code-editor.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CodeEditorComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CodeEditorRoutingModule { }\r\n","import { Component, OnInit, OnDestroy, NgZone } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { Context } from '../shared/services/context';\r\nimport { keyItems } from '../shared/constants/sessions-keys';\r\nimport { SourceService } from './services/source.service';\r\nimport { EditItem, SourceItem, } from '../app-administration/shared/models/edit-form.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { ElementEventListener } from '../../../../shared/element-event-listener-model';\r\nimport { SnippetsService } from './services/snippets.service';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss']\r\n})\r\nexport class CodeEditorComponent implements OnInit, OnDestroy {\r\n  explorer = {\r\n    templates: 'templates',\r\n    snippets: 'snippets'\r\n  };\r\n  activeExplorer: string;\r\n  view: SourceView;\r\n  templates: string[];\r\n  explorerSnipps: any;\r\n  editorSnipps: any;\r\n  insertSnipp: any;\r\n\r\n  private viewKey: number | string; // templateId or path\r\n  private eventListeners: ElementEventListener[] = [];\r\n  private savedCode: string;\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private sourceService: SourceService,\r\n    private snippetsService: SnippetsService,\r\n    private zone: NgZone,\r\n    private titleService: Title,\r\n  ) {\r\n    this.context.init(this.route);\r\n    this.calculateViewKey();\r\n    this.attachListeners();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sourceService.get(this.viewKey).subscribe(view => {\r\n      this.view = view;\r\n      this.savedCode = this.view.Code;\r\n      this.titleService.setTitle(`Code Editor - ${this.view.FileName}`);\r\n\r\n      this.snippetsService.getSnippets(this.view).then((res: any) => {\r\n        this.explorerSnipps = res.sets;\r\n        this.editorSnipps = res.list;\r\n      });\r\n    });\r\n    this.sourceService.getTemplates().subscribe(templates => {\r\n      this.templates = templates;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.detachListeners();\r\n  }\r\n\r\n  toggleExplorer(explorer: string) {\r\n    if (this.activeExplorer === explorer) {\r\n      this.activeExplorer = null;\r\n    } else {\r\n      this.activeExplorer = explorer;\r\n    }\r\n  }\r\n\r\n  changeInsertSnipp(snippet: any) {\r\n    this.insertSnipp = snippet;\r\n  }\r\n\r\n  save() {\r\n    this.snackBar.open('Saving...');\r\n    let codeToSave = this.view.Code;\r\n    this.sourceService.save(this.viewKey, this.view).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n        this.savedCode = codeToSave;\r\n        codeToSave = null;\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  private calculateViewKey() {\r\n    const itemsRaw = sessionStorage.getItem(keyItems);\r\n    const editItems: EditItem[] | SourceItem[] = JSON.parse(itemsRaw);\r\n    const item = editItems[0];\r\n    this.viewKey = (item as EditItem).EntityId || (item as SourceItem).Path;\r\n  }\r\n\r\n  private attachListeners() {\r\n    this.zone.runOutsideAngular(() => {\r\n      const closing = this.stopClose.bind(this);\r\n      const save = this.keyboardSave.bind(this);\r\n      window.addEventListener('beforeunload', closing);\r\n      window.addEventListener('keydown', save);\r\n      this.eventListeners.push({ element: window, type: 'beforeunload', listener: closing });\r\n      this.eventListeners.push({ element: window, type: 'keydown', listener: save });\r\n    });\r\n  }\r\n\r\n  private detachListeners() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(listener => {\r\n        listener.element.removeEventListener(listener.type, listener.listener);\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n  }\r\n\r\n  private stopClose(e: BeforeUnloadEvent) {\r\n    if (this.savedCode === this.view.Code) { return; }\r\n    e.preventDefault(); // Cancel the event\r\n    e.returnValue = ''; // Chrome requires returnValue to be set\r\n  }\r\n\r\n  private keyboardSave(e: KeyboardEvent) {\r\n    const CTRL_S = e.keyCode === 83 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey);\r\n    if (!CTRL_S) { return; }\r\n    e.preventDefault();\r\n    this.zone.run(() => { this.save(); });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\nimport { CodeEditorRoutingModule } from './code-editor-routing.module';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { CodeEditorComponent } from './code-editor.component';\r\nimport { Context } from '../shared/services/context';\r\nimport { SourceService } from './services/source.service';\r\nimport { DialogService } from '../shared/services/dialog.service';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { ToArrayPipe } from './code-snippets/toarray.pipe';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { AceEditorComponent } from './ace-editor/ace-editor.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CodeEditorComponent,\r\n    CodeSnippetsComponent,\r\n    ToArrayPipe,\r\n    CodeTemplatesComponent,\r\n    AceEditorComponent,\r\n  ],\r\n  entryComponents: [\r\n    CodeEditorComponent,\r\n    CodeSnippetsComponent,\r\n    CodeTemplatesComponent,\r\n    AceEditorComponent,\r\n  ],\r\n  imports: [\r\n    CodeEditorRoutingModule,\r\n    SharedComponentsModule,\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    FormsModule,\r\n    MatSelectModule,\r\n    MatRippleModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n    DialogService,\r\n    SnippetsService,\r\n  ]\r\n})\r\nexport class CodeEditorModule { }\r\n"],"sourceRoot":"webpack:///"}