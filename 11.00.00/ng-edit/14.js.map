{"version":3,"sources":["./src/app/app-administration/shared/services/content-export.service.ts","./src/app/shared/components/dialog-entry/dialog-entry.component.ts"],"names":["context","dnnContext","exportContent","values","selectedIds","selectedIdsString","join","url","this","$2sxc","http","apiUrl","appId","language","defaultLanguage","contentTypeStaticName","recordExport","resourcesReferences","languageReferences","window","open","exportJson","typeName","exportEntity","id","prefix","metadata","ContentExportService","dialog","viewContainerRef","router","route","subscription","dialogConfig","snapshot","data","Error","ngOnInit","console","log","name","getComponent","component","initContext","init","dialogRef","backdropClass","panelClass","panelSize","showScrollbar","autoFocus","closeOnNavigation","position","top","add","afterClosed","subscribe","pathFromRoot","length","parent","totalPopup","close","error","navigate","relativeTo","state","ngOnDestroy","unsubscribe","DialogEntryComponent"],"mappings":"sKAMA,aAEE,WAAoBA,EAA0BC,GAA1B,KAAAD,UAA0B,KAAAC,a,OAE9C,YAAAC,cAAA,SAAcC,EAAuBC,GACnC,IAAMC,EAAoBD,EAAc,gBAAkBA,EAAYE,OAAS,GACzEC,EAAMC,KAAKP,WAAWQ,MAAMC,KAAKC,OAAO,mCAC1C,UAAYH,KAAKR,QAAQY,MACzB,aAAeT,EAAOU,SACtB,oBAAsBV,EAAOW,gBAC7B,gBAAkBX,EAAOY,sBACzB,iBAAmBZ,EAAOa,aAC1B,wBAA0Bb,EAAOc,oBACjC,uBAAyBd,EAAOe,mBAChCb,EAEJc,OAAOC,KAAKb,EAAK,SAAU,KAG7B,YAAAc,WAAA,SAAWC,GACT,IAAMf,EAAMC,KAAKP,WAAWQ,MAAMC,KAAKC,OAAO,wCAC1C,UAAYH,KAAKR,QAAQY,MACzB,SAAWU,EAEfH,OAAOC,KAAKb,EAAK,SAAU,KAG7B,YAAAgB,aAAA,SAAaC,EAAYC,EAAgBC,GACvC,IAAMnB,EAAMC,KAAKP,WAAWQ,MAAMC,KAAKC,OAAO,0CAC1C,UAAYH,KAAKR,QAAQY,MACzB,OAASY,EACT,WAAaC,EACb,iBAAmBC,EAEvBP,OAAOC,KAAKb,EAAK,SAAU,K,sCAjClBoB,GAAoB,sB,yBAApBA,EAAoB,QAApBA,EAAoB,Y,EADjC,I,gJCEA,aAWE,WACUC,EACAC,EACAC,EACAC,EACA/B,GAGR,GAPQ,KAAA4B,SACA,KAAAC,mBACA,KAAAC,SACA,KAAAC,QACA,KAAA/B,UAVF,KAAAgC,aAAe,IAAI,IAYzBxB,KAAKyB,aAAezB,KAAKuB,MAAMG,SAASC,KAAKP,QACxCpB,KAAKyB,aACR,MAAM,IAAIG,MAAM,uF,OAId,YAAAC,SAAN,W,2HAEmB,OADjBC,QAAQC,IAAI,eAAgB/B,KAAKyB,aAAaO,KAAM,cAAehC,KAAKR,QAAQwB,GAAI,WAAYhB,KAAKR,SACrG,EAAAQ,KAAiB,GAAMA,KAAKyB,aAAaQ,gB,cAAzC,EAAKC,UAAY,SACblC,KAAKyB,aAAaU,aACpBnC,KAAKR,QAAQ4C,KAAKpC,KAAKuB,OAGzBvB,KAAKqC,UAAYrC,KAAKoB,OAAOR,KAAKZ,KAAKkC,UAAW,CAChDI,cAAe,kBACfC,WAAY,YAAF,CACR,eACA,gBAAgBvC,KAAKyB,aAAae,UAClCxC,KAAKyB,aAAagB,cAAgB,iBAAmB,gBACjDzC,KAAKyB,aAAac,WAAavC,KAAKyB,aAAac,WAAa,IAEpElB,iBAAkBrB,KAAKqB,iBACvBqB,WAAW,EACXC,mBAAmB,EAGnBC,SAAU,CAAEC,IAAK,OAGnB7C,KAAKwB,aAAasB,IAChB9C,KAAKqC,UAAUU,cAAcC,WAAU,SAACrB,GAGtC,GAFAG,QAAQC,IAAI,qBAAsB,EAAKN,aAAaO,KAAM,QAASL,GAE/D,EAAKJ,MAAM0B,aAAaC,QAAU,EACpC,IACGvC,OAAOwC,OAAelD,MAAMmD,WAAWC,QACxC,MAAOC,SAKT,EAAKhC,OAAOiC,SAAS,CAAC,MADpB,EAAKhC,MAAMG,SAAS3B,IAAImD,OAAS,EACN,CAAEM,WAAY,EAAKjC,MAAM4B,OAAQM,MAAO9B,GAExC,CAAE6B,WAAY,EAAKjC,MAAM4B,OAAOA,OAAQM,MAAO9B,Q,YAMpF,YAAA+B,YAAA,WACE1D,KAAKwB,aAAamC,cAClB3D,KAAKwB,aAAe,KACpBxB,KAAKyB,aAAe,KACpBzB,KAAKkC,UAAY,KACjBlC,KAAKqC,UAAUgB,QACfrD,KAAKqC,UAAY,M,sCApERuB,GAAoB,oD,uBAApBA,EAAoB,uF,EALjC","file":"14.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { ContentExport } from '../models/content-export.model';\r\nimport { Context } from '../../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class ContentExportService {\r\n  constructor(private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.dnnContext.$2sxc.http.apiUrl('eav/ContentExport/ExportContent')\r\n      + '?appId=' + this.context.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl('eav/ContentExport/DownloadTypeAsJson')\r\n      + '?appId=' + this.context.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl('eav/ContentExport/DownloadEntityAsJson')\r\n      + '?appId=' + this.context.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, ViewContainerRef, Type } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Context } from '../../services/context';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss']\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  private subscription = new Subscription();\r\n  private dialogRef: MatDialogRef<any, any>;\r\n  private dialogConfig: DialogConfig;\r\n  private component: Type<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n  ) {\r\n    this.dialogConfig = this.route.snapshot.data.dialog;\r\n    if (!this.dialogConfig) {\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n    }\r\n  }\r\n\r\n  async ngOnInit() {\r\n    console.log('Open dialog:', this.dialogConfig.name, 'Context id:', this.context.id, 'Context:', this.context);\r\n    this.component = await this.dialogConfig.getComponent();\r\n    if (this.dialogConfig.initContext) {\r\n      this.context.init(this.route);\r\n    }\r\n\r\n    this.dialogRef = this.dialog.open(this.component, {\r\n      backdropClass: 'dialog-backdrop',\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${this.dialogConfig.panelSize}`,\r\n        this.dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(this.dialogConfig.panelClass ? this.dialogConfig.panelClass : []),\r\n      ],\r\n      viewContainerRef: this.viewContainerRef,\r\n      autoFocus: false,\r\n      closeOnNavigation: false,\r\n      // spm NOTE: used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' }\r\n    });\r\n\r\n    this.subscription.add(\r\n      this.dialogRef.afterClosed().subscribe((data: any) => {\r\n        console.log('Dialog was closed:', this.dialogConfig.name, 'Data:', data);\r\n\r\n        if (this.route.pathFromRoot.length <= 3) {\r\n          try {\r\n            (window.parent as any).$2sxc.totalPopup.close();\r\n          } catch (error) { }\r\n          return;\r\n        }\r\n\r\n        if (this.route.snapshot.url.length > 0) {\r\n          this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n        } else {\r\n          this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = null;\r\n    this.dialogConfig = null;\r\n    this.component = null;\r\n    this.dialogRef.close();\r\n    this.dialogRef = null;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}