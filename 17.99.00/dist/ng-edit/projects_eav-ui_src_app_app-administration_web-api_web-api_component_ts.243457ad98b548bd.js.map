{"version":3,"file":"projects_eav-ui_src_app_app-administration_web-api_web-api_component_ts.243457ad98b548bd.js","mappings":"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","names":["i0","_r1","ctx_r1","openCode","_r3","openRestApi","WebApiActionsComponent","constructor","router","route","this","agInit","params","enableCode","enableCodeGetter","refresh","onOpenCode","data","api","urlSegments","url","split","length","GoToDevRest","routeWebApi","push","encodeURIComponent","path","apiUrl","join","navigate","static","t","i1","fesm2022_core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","WebApiActionsComponent_Conditional_1_Template","WebApiActionsComponent_Conditional_2_Template","WebApiActionsComponent_ng_template_8_Template","menu_r4","MatRippleModule","i2","MatIconModule","i3","MatMenuModule","i4","createController","webApis","gridOptions","menu_r3","WebApiComponent","snackBar","dialog","viewContainerRef","dialogConfigSvc","dialogService","transient","DialogService","sourceService","SourceService","webApis$","BehaviorSubject","undefined","buildGridOptions","ngOnInit","fetchWebApis","viewModel$","combineLatest","pipe","map","getCurrent$","subscribe","settings","Context","Enable","CodeEditor","ngOnDestroy","complete","global","open","CreateFileDialogComponent","autoFocus","folder","purpose","width","afterClosed","result","name","endsWith","fileName","substring","lastIndexOf","test","duration","create","templateKey","getWebApis","next","openCodeFile","isShared","defaultGridOptions","columnDefs","headerName","field","flex","minWidth","cellClass","sortable","filter","ColumnDefinitions","TextWideMin100","sort","TextWide","Boolean2","cellRenderer","TrueFalseComponent","ActionsPinnedRight6","cellRendererParams","WebApiComponent_Conditional_0_Template","tmp_0_0","SxcGridModule","MatDialogActions","MatButtonModule","i5","i6","i7","RouterOutlet","AsyncPipe"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/web-api/web-api-actions/web-api-actions.component.html","./projects/eav-ui/src/app/app-administration/web-api/web-api-actions/web-api-actions.component.ts","./projects/eav-ui/src/app/app-administration/web-api/web-api.component.html","./projects/eav-ui/src/app/app-administration/web-api/web-api.component.ts"],"sourcesContent":["<div class=\"actions-component\">\r\n  @if (enableCode) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Code\" (click)=\"openCode()\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  }\r\n  @if (!enableCode) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>code</mat-icon>\r\n    </div>\r\n  }\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item (click)=\"openRestApi()\">\r\n      <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n      <span>REST API</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { WebApi } from '../../models/web-api.model';\r\nimport { WebApiActionsParams } from './web-api-actions.models';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GoToDevRest } from '../../../dev-rest/go-to-dev-rest';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-web-api-actions',\r\n  templateUrl: './web-api-actions.component.html',\r\n  styleUrls: ['./web-api-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n  ],\r\n})\r\nexport class WebApiActionsComponent implements ICellRendererAngularComp {\r\n  enableCode: boolean;\r\n  private params: ICellRendererParams & WebApiActionsParams;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) { }\r\n\r\n\r\n  agInit(params: ICellRendererParams & WebApiActionsParams): void {\r\n    this.params = params;\r\n    this.enableCode = this.params.enableCodeGetter();\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openCode(): void {\r\n    const api: WebApi = this.params.data;\r\n    this.params.onOpenCode(api);\r\n  }\r\n\r\n  openRestApi(): void {\r\n    const api: WebApi = this.params.data;\r\n    // Get the current URL and split it into segments\r\n    const urlSegments = this.router.url.split('/');\r\n    // Replace the last segment with the GoToDevRest.routeWebApi (restapiwebapi)\r\n    urlSegments[urlSegments.length - 1] = GoToDevRest.routeWebApi;\r\n    // Add the path of the api to the url segments\r\n    urlSegments.push(encodeURIComponent(api.path));\r\n    // Join the segments back together to form the new URL\r\n    const apiUrl = urlSegments.join('/');\r\n\r\n    this.router.navigate([apiUrl]);\r\n\r\n    // this.params.onOpenRestApi(api);\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\" >\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.webApis\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-fab mat-elevation-z24 [matMenuTriggerFor]=\"menu\" class=\"grid-fab\" tippy=\"Create a new controller\" tippyPlacement=\"left\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"createController(false)\">\r\n          <span>App</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"createController(true)\">\r\n          <span>Shared (global)</span>\r\n        </button>\r\n      </mat-menu>\r\n    </mat-dialog-actions>\r\n  </div>\r\n}\r\n<router-outlet></router-outlet>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { SourceService } from '../../code-editor/services/source.service';\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult } from '../../create-file-dialog';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { WebApi } from '../models/web-api.model';\r\nimport { WebApiActionsComponent } from './web-api-actions/web-api-actions.component';\r\nimport { WebApiActionsParams } from './web-api-actions/web-api-actions.models';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-web-api',\r\n  templateUrl: './web-api.component.html',\r\n  styleUrls: ['./web-api.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    SxcGridModule,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n  ]\r\n})\r\nexport class WebApiComponent implements OnInit, OnDestroy {\r\n\r\n  private dialogService = transient(DialogService);\r\n  private sourceService = transient(SourceService);\r\n\r\n  enableCode!: boolean;\r\n\r\n  webApis$ = new BehaviorSubject<WebApi[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  viewModel$: Observable<WebApiViewModel>;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private dialogConfigSvc: AppDialogConfigService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchWebApis();\r\n    this.viewModel$ = combineLatest([this.webApis$]).pipe(\r\n      map(([webApis]) => ({ webApis }))\r\n    );\r\n\r\n    this.dialogConfigSvc.getCurrent$().subscribe(settings => {\r\n      this.enableCode = settings.Context.Enable.CodeEditor;\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.webApis$.complete();\r\n  }\r\n\r\n  createController(global?: boolean): void {\r\n    // This FileLocationDialogComponent dialog is currently never going to be opened because it has been replaced by mat-menu\r\n    // in the web-api.component.html template. If you want to use the dialog instead of the menu, you need to remove the\r\n    // mat-menu and replace it with a button that opens the dialog with empty parameters.\r\n    // Dialog has been replaced by menu because from update to Angular 16 CreateFileDialogComponent wasn't opening anymore if\r\n    // FileLocationDialogComponent dialog was used.\r\n    // if (global == null) {\r\n    //   const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n    //     autoFocus: false,\r\n    //     viewContainerRef: this.viewContainerRef,\r\n    //     width: '650px',\r\n    //   });\r\n    //   fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n    //     if (isShared == null) { return; }\r\n    //     this.createController(isShared);\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: 'api',\r\n      global,\r\n      purpose: 'Api',\r\n    };\r\n    const createFileDialogRef = this.dialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) { return; }\r\n\r\n      if (result.name.endsWith('Controller.cs')) {\r\n        const fileName = result.name.substring(result.name.lastIndexOf('/') + 1);\r\n        if (!/^[A-Z][a-zA-Z0-9]*Controller\\.cs$/g.test(fileName)) {\r\n          const message = `\"${fileName}\" is invalid controller name. Should be something like \"MyController.cs\"`;\r\n          this.snackBar.open(message, null, { duration: 5000 });\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.snackBar.open('Saving...');\r\n      this.sourceService.create(result.name, global, result.templateKey).subscribe(() => {\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.fetchWebApis();\r\n      });\r\n    });\r\n  }\r\n\r\n  private fetchWebApis() {\r\n    this.sourceService.getWebApis().subscribe(webApis => {\r\n      this.webApis$.next(webApis);\r\n    });\r\n  }\r\n\r\n  private enableCodeGetter() {\r\n    return this.enableCode;\r\n  }\r\n\r\n  private openCode(api: WebApi) {\r\n    this.dialogService.openCodeFile(api.path, api.isShared);\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'Endpoint',\r\n          field: 'endpointPath',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideMin100,\r\n          headerName: 'Edition',\r\n          field: 'edition',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideMin100,\r\n          headerName: 'Forder2',\r\n          field: 'folder',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'name',\r\n        },\r\n        // {\r\n        //   field: 'Type',\r\n        //   flex: 1,\r\n        //   minWidth: 100,\r\n        //   cellClass: 'no-outline',\r\n        //   sortable: true,\r\n        //   filter: BooleanFilterComponent,\r\n        //   valueGetter: (params) => {\r\n        //     const api: WebApi = params.data;\r\n        //     return api.isShared;\r\n        //   },\r\n        //   cellRenderer: WebApiTypeComponent,\r\n        // },\r\n        {\r\n          headerName: 'Compiled',\r\n          field: 'isCompiled',\r\n          ...ColumnDefinitions.Boolean2,\r\n          cellRenderer: TrueFalseComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight6,\r\n          cellRenderer: WebApiActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: WebApiActionsParams = {\r\n              enableCodeGetter: () => this.enableCodeGetter(),\r\n              onOpenCode: (api) => this.openCode(api),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface WebApiViewModel {\r\n  webApis: WebApi[];\r\n}\r\n"],"x_google_ignoreList":[]}