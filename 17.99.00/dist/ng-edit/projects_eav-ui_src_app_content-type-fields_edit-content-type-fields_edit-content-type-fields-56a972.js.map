{"version":3,"file":"projects_eav-ui_src_app_content-type-fields_edit-content-type-fields_edit-content-type-fields-56a972.js","mappings":";;;;;;;;;;;;;;AAAO,MAAMA,gBAAgB,GAAG,wBAAwB;AACjD,MAAMC,cAAc,GAAG,qEAAqE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDuC;AACnE;AAC+B;AAEjB;AACR;AACnB;AACyB;AAEuB;AAErD;AACoB;AACb;AACqB;AAC3B;AACV;AAC2D;AAC9C;AACS;AACP;AACJ;AACgE;AAC1B;AACP;;;;;;;;;;;;;;;ICZnCkC,6DAAvC,aAAsC,QAAI;IAAAA,qDAAA,mBAAY;IAAKA,2DAAL,EAAI,EAAM;;;;;IAChEA,6DAAA,aAA4D;IAACA,qDAAA,GAA2B;IAAAA,2DAAA,EAAK;;;;IAAhCA,wDAAA,EAA2B;IAA3BA,iEAAA,MAAAM,QAAA,CAAAC,WAAA,CAAAC,IAAA,MAA2B;;;;;IAIjDR,6DAAvC,aAAsC,QAAI;IAAAA,qDAAA,WAAI;IAAKA,2DAAL,EAAI,EAAM;;;;;IACxDA,6DAAA,aAA4D;IAACA,qDAAA,GAAqB;IAAAA,2DAAA,EAAK;;;;IAA1BA,wDAAA,EAAqB;IAArBA,iEAAA,MAAAS,QAAA,CAAAC,UAAA,MAAqB;;;;;IAI3CV,6DAAvC,aAAsC,QAAI;IAAAA,qDAAA,WAAI;IAAKA,2DAAL,EAAI,EAAM;;;;;IACxDA,6DAAA,aAA4D;IAACA,qDAAA,GAAe;IAAAA,2DAAA,EAAK;;;;IAApBA,wDAAA,EAAe;IAAfA,iEAAA,MAAAW,QAAA,CAAAC,IAAA,MAAe;;;;;IAIrCZ,6DAAvC,aAAsC,QAAI;IAAAA,qDAAA,YAAK;IAAKA,2DAAL,EAAI,EAAM;;;;;;IACIA,6DAA7D,aAA4D,iBAC3B;IAA7BA,yDAAA,mBAAAc,iEAAA;MAAA,MAAAC,QAAA,GAAAf,4DAAA,CAAAiB,GAAA,EAAAC,SAAA;MAAA,MAAAC,MAAA,GAAAnB,4DAAA;MAAA,OAAAA,0DAAA,CAASmB,MAAA,CAAAG,WAAA,CAAAP,QAAA,CAAkB;IAAA,EAAC;IAACf,qDAAA,aAAM;IAAUA,2DAAV,EAAS,EAAM;;;;;IAGxDA,wDAAA,aAA2E;;;;;IAC3EA,wDAAA,aAAiF;;;;;IAQtCA,6DAAvC,aAAsC,QAAI;IAAAA,qDAAA,eAAQ;IAAKA,2DAAL,EAAI,EAAM;;;;;IAStDA,6DAAA,yBAAiC;IAAAA,qDAAA,GAAoB;IAAAA,2DAAA,EAAiB;;;;IAAtDA,yDAAA,iBAAgB;IAACA,wDAAA,EAAoB;IAApBA,gEAAA,CAAAmB,MAAA,CAAArD,cAAA,CAAoB;;;;;IAGrDkC,6DAAA,yBAAiC;IAC/BA,qDAAA,GACF;IAAAA,2DAAA,EAAiB;;;;;IAFDA,yDAAA,iBAAgB;IAC9BA,wDAAA,EACF;IADEA,iEAAA,MAAA0B,WAAA,CAAAC,MAAA,CAAAC,aAAA,MACF;;;;;IAHF5B,yDAHA,IAAA8B,oEAAA,6BAA8B,IAAAC,oEAAA,6BAGM;;;;;IAHpC/B,4DAAA,IAAA0B,WAAA,CAAAC,MAAA,CAAAM,OAAA,UAEC;IACDjC,wDAAA,EAIC;IAJDA,4DAAA,IAAA0B,WAAA,CAAAC,MAAA,CAAAC,aAAA,UAIC;;;;;;IAZD5B,6DAFJ,aAAuE,yBACX,gBAC7C;IAAAA,qDAAA,eAAQ;IAAAA,2DAAA,EAAY;IAC/BA,6DAAA,mBACwD;IADXA,+DAAA,2BAAAmC,wEAAAC,MAAA;MAAA,MAAAC,OAAA,GAAArC,4DAAA,CAAAsC,GAAA,EAAApB,SAAA;MAAAlB,iEAAA,CAAAqC,OAAA,CAAAG,OAAA,EAAAJ,MAAA,MAAAC,OAAA,CAAAG,OAAA,GAAAJ,MAAA;MAAA,OAAApC,0DAAA,CAAAoC,MAAA;IAAA,EAA0B;IAEzEpC,2DAFE,EACwD,EACzC;IACjBA,yDAAA,IAAAyC,sDAAA,OAAsB;IAUxBzC,2DAAA,EAAK;;;;;;;IAbeA,wDAAA,GAA4B;IAA5BA,yDAAA,YAAAmB,MAAA,CAAAtD,gBAAA,CAA4B;IAACmC,+DAAA,YAAAqC,OAAA,CAAAG,OAAA,CAA0B;IAClDxC,yDADmD,wBAAA2C,KAAA,CAAyB,qBAAAxB,MAAA,CAAAS,aAAA,CAC1C;IAEzD5B,wDAAA,GASC;IATDA,4DAAA,IAAA0B,WAAA,CAAAC,MAAA,UASC;;;;;IAKoC3B,6DAAvC,aAAsC,QAAI;IAAAA,qDAAA,aAAM;IAAKA,2DAAL,EAAI,EAAM;;;;;IAC1DA,6DAAA,aAAyF;IAACA,qDAAA,GACL;IAAAA,2DAAA,EAAK;;;;IADAA,wDAAA,EACL;IADKA,iEAAA,MAAA6C,QAAA,CAAAC,KAAA,CAAAvC,WAAA,CAAAC,IAAA,OAAAqC,QAAA,CAAAC,KAAA,CAAApC,UAAA,QAAAmC,QAAA,CAAAC,KAAA,CAAAlC,IAAA,OACL;;;;;IAI9CZ,6DAAvC,aAAsC,QAAI;IAAAA,qDAAA,aAAM;IAAKA,2DAAL,EAAI,EAAM;;;;;;IACEA,6DAA5D,aAA2D,iBAC3B;IAA5BA,yDAAA,mBAAA+C,iEAAA;MAAA,MAAAC,QAAA,GAAAhD,4DAAA,CAAAiD,IAAA,EAAA/B,SAAA;MAAA,MAAAC,MAAA,GAAAnB,4DAAA;MAAA,OAAAA,0DAAA,CAASmB,MAAA,CAAA+B,WAAA,CAAAF,QAAA,CAAiB;IAAA,EAAC;IAAChD,qDAAA,aAAM;IAAUA,2DAAV,EAAS,EAAM;;;;;IAGvDA,wDAAA,aAA0E;;;;;IAC1EA,wDAAA,aAAgF;;;ADzBtF,MAAOmD,yBAA0B,SAAQjF,4EAAa;EAkB1DkF,YACkCC,UAAiE,EACzFC,SAAkD,EAClDC,yBAAoD,EACpDC,QAAqB;EAC7B;EACQC,MAAiB,EACjBC,gBAAkC,EAClCC,iBAAoC;IAE5C,KAAK,EAAE;IATyB,KAAAN,UAAU,GAAVA,UAAU;IAClC,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,yBAAyB,GAAzBA,yBAAyB;IACzB,KAAAC,QAAQ,GAARA,QAAQ;IAER,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAzBD,KAAAC,SAAS,GAAG,kBAAkB;IAGxD,KAAAC,+BAA+B,GAAa,CAAC,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;IACpF,KAAAC,8BAA8B,GAAa,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAE1E,KAAAC,eAAe,GAAG,IAAIvF,wEAAkB,CAAQ,EAAE,CAAC;IACnD,KAAAwF,cAAc,GAAG,IAAIxF,wEAAkB,CAAe,EAAE,CAAC;IACzD,KAAAX,gBAAgB,GAAGA,+FAAgB;IACnC,KAAAC,cAAc,GAAGA,6FAAc;IAG/B,KAAAmG,OAAO,GAAG,IAAItF,kDAAe,CAAC,KAAK,CAAC;IAE7B,KAAAuF,QAAQ,GAAoBjG,sDAAM,CAACkB,8EAAe,CAAC;IAClD,KAAAgF,0BAA0B,GAAG,IAAI,CAACD,QAAQ,CAACE,SAAS,CAAChF,iEAAY,CAACiF,0BAA0B,CAAC;IAanG,IAAI,CAACf,SAAS,CAACgB,YAAY,GAAG,IAAI;IAClC,IAAI,CAACC,aAAa,CAACC,GAAG,CACpB,IAAI,CAAClB,SAAS,CAACmB,aAAa,EAAE,CAACC,SAAS,CAAC,MAAK;MAC5C,IAAI,IAAI,CAACC,IAAI,CAACC,KAAK,IAAI,IAAI,CAACZ,cAAc,CAACa,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC1D,MAAMC,SAAS,GAAGC,OAAO,CAAC,uEAAuE,CAAC;QAClG,IAAI,CAACD,SAAS,EAAE;UAAE;;;MAEpB,IAAI,CAACE,WAAW,EAAE;IACpB,CAAC,CAAC,CACH;EACH;EAEAC,QAAQA,CAAA;IACN;IACA,IAAI,CAACX,aAAa,CAACC,GAAG,CAAC,IAAI,CAACjB,yBAAyB,CAAC4B,kBAAkB,EAAE,CAACT,SAAS,CAACX,eAAe,IAAG;MACrG,IAAI,CAACA,eAAe,CAACc,IAAI,GAAGd,eAAe;IAC7C,CAAC,CAAC,CAAC;IACH,IAAI,CAACQ,aAAa,CAACC,GAAG,CAAC,IAAI,CAACjB,yBAAyB,CAAC6B,gBAAgB,EAAE,CAACV,SAAS,CAAC9C,aAAa,IAAG;MACjG,MAAMyD,cAAc,GAAkB,EAAE;MACxC,IAAI,CAAChC,UAAU,CAACgC,cAAc,CAACC,OAAO,CAACxC,KAAK,IAAG;QAC7CuC,cAAc,CAACvC,KAAK,CAACpC,UAAU,CAAC,GAAG,qCAAqC;MAC1E,CAAC,CAAC;MACF,IAAI,CAACkB,aAAa,GAAG;QACnB,GAAGA,aAAa;QAChB,GAAGyD;OACJ;IACH,CAAC,CAAC,CAAC;EACL;EAEAE,WAAWA,CAAA;IACT,IAAI,CAACtB,OAAO,CAACuB,QAAQ,EAAE;IACvB,KAAK,CAACD,WAAW,EAAE;EACrB;EAEA;EACAjE,WAAWA,CAACwB,KAAY;IACtB,MAAMkB,cAAc,GAAG,IAAI,CAACA,cAAc,CAACa,IAAI;IAC/Cb,cAAc,CAACyB,IAAI,CAAC;MAAEjD,OAAO,EAAEM,KAAK,CAACpC,UAAU;MAAEoC;IAAK,CAAE,CAAC;IACzD,IAAI,CAACkB,cAAc,CAACa,IAAI,GAAGb,cAAc;EAE3C;EAEA;EACAd,WAAWA,CAACJ,KAAmB;IAC7B,MAAMkB,cAAc,GAAG,IAAI,CAACA,cAAc,CAACa,IAAI;IAC/Cb,cAAc,CAAC0B,MAAM,CAAC1B,cAAc,CAAC2B,OAAO,CAAC7C,KAAK,CAAC,EAAE,CAAC,CAAC;IACvD,IAAI,CAACkB,cAAc,CAACa,IAAI,GAAGb,cAAc;EAC3C;EAEA;EACA4B,IAAIA,CAAA;IACF,IAAI,CAAC,IAAI,CAACzB,0BAA0B,EAAE,EAAE;MACtC9E,0FAAiB,CAAC,IAAI,CAACoE,MAAM,EAAErE,iEAAY,CAACiF,0BAA0B,EAAE,IAAI,CAACX,gBAAgB,EAAE,IAAI,CAACC,iBAAiB,CAAC;KACvH,MAAM;MACL,IAAI,CAACM,OAAO,CAAC4B,IAAI,CAAC,IAAI,CAAC;MACvB,IAAI,CAACrC,QAAQ,CAACsC,IAAI,CAAC,WAAW,CAAC;MAC/B/G,yCAAE,CAAC,GAAG,IAAI,CAACiF,cAAc,CAACa,IAAI,CAAC,CAACkB,IAAI,CAClCjH,6CAAM,CAACkH,YAAY,IAAI,CAAC,CAACA,YAAY,CAACxD,OAAO,CAAC,EAC9C3D,gDAAS,CAACmH,YAAY,IACpB,IAAI,CAACzC,yBAAyB,CAAC0C,iBAAiB,CAC9C,IAAI,CAAC5C,UAAU,CAAC6C,WAAW,CAACC,EAAE,EAC9BH,YAAY,CAAClD,KAAK,CAACvC,WAAW,CAAC4F,EAAE,EACjCH,YAAY,CAAClD,KAAK,CAACsD,IAAI,EACvBJ,YAAY,CAACxD,OAAO,CACrB,CAACuD,IAAI,CAACnH,iDAAU,CAACyH,KAAK,IAAItH,yCAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CACtC,EACDC,8CAAO,EAAE,CACV,CAAC0F,SAAS,CAAC4B,SAAS,IAAG;QACtB,IAAI,CAACrC,OAAO,CAAC4B,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAACrC,QAAQ,CAACsC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;UAAES,QAAQ,EAAE;QAAI,CAAE,CAAC;QACrD,IAAI,CAACtB,WAAW,EAAE;MACpB,CAAC,CAAC;;EAEN;EAEAA,WAAWA,CAAA;IACT,IAAI,CAAC3B,SAAS,CAACkD,KAAK,EAAE;EACxB;EAAC,QAAAC,CAAA;qBA1GUtD,yBAAyB,EAAAnD,gEAAA,CAmB1B7B,sEAAe,GAAA6B,gEAAA,CAAA2G,mEAAA,GAAA3G,gEAAA,CAAA4G,6FAAA,GAAA5G,gEAAA,CAAA6G,qEAAA,GAAA7G,gEAAA,CAAA2G,gEAAA,GAAA3G,gEAAA,CAAAA,4DAAA,GAAAA,gEAAA,CAAAA,6DAAA;EAAA;EAAA,QAAA8G,EAAA;UAnBd3D,yBAAyB;IAAA4D,SAAA;IAAAC,SAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;2EAEPjI,mDAAM;;;;;;;;;;QAFxBe,6DAAA,cAAAmH,GAAA,CAAAvD,SAAA,CAAyB;;;;iFAJzB,CACT7D,2FAAoB,CACrB,GAAAC,yEAAA,EAAAA,kEAAA;IAAAuH,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAT,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QC7CClH,6DAFJ,aAAyC,aACR,aACS;QACpCA,qDAAA,GACF;;QACFA,2DADE,EAAM,EACF;QAEJA,6DADF,aAAgC,WACxB;QAAAA,qDAAA,GAA+D;;QAAAA,2DAAA,EAAO;QAGxEA,6DAFJ,aAA4B,mBACW,gBACsC;QACvEA,sEAAA,OAAyC;QAEvCA,yDADA,KAAA6H,wCAAA,iBAAsC,KAAAC,wCAAA,iBACsB;;QAG9D9H,sEAAA,QAAkC;QAEhCA,yDADA,KAAA+H,wCAAA,iBAAsC,KAAAC,wCAAA,iBACsB;;QAG9DhI,sEAAA,QAAkC;QAEhCA,yDADA,KAAAiI,wCAAA,iBAAsC,KAAAC,wCAAA,iBACsB;;QAG9DlI,sEAAA,QAAmC;QAEjCA,yDADA,KAAAmI,wCAAA,iBAAsC,KAAAC,wCAAA,iBACsB;;QAK9DpI,yDADA,KAAAqI,wCAAA,iBAAsE,KAAAC,wCAAA,iBACM;QAEhFtI,2DADE,EAAQ,EACC;QAIPA,6DAFJ,oBAAsC,qBACb,gBACmD;QACtEA,sEAAA,QAAqC;QAEnCA,yDADA,KAAAuI,wCAAA,iBAAsC,KAAAC,wCAAA,iBACiC;;QAmBzExI,sEAAA,QAAoC;QAElCA,yDADA,KAAAyI,wCAAA,iBAAsC,KAAAC,wCAAA,iBACmD;;QAI3F1I,sEAAA,QAAoC;QAElCA,yDADA,KAAA2I,wCAAA,iBAAsC,KAAAC,wCAAA,iBACqB;;QAK7D5I,yDADA,KAAA6I,wCAAA,iBAAqE,KAAAC,wCAAA,iBACM;QAInF9I,2DAHM,EAAQ,EACH,EACE,EACP;QAEJA,6DADF,8BAAgC,kBACkC;QAAxBA,yDAAA,mBAAA+I,4DAAA;UAAA/I,4DAAA,CAAAgJ,GAAA;UAAA,OAAAhJ,0DAAA,CAASmH,GAAA,CAAAlC,WAAA,EAAa;QAAA,EAAC;QAACjF,qDAAA,cAAM;QAAAA,2DAAA,EAAS;QAC/EA,6DAAA,kBAC2G;;QAAjBA,yDAAA,mBAAAiJ,4DAAA;UAAAjJ,4DAAA,CAAAgJ,GAAA;UAAA,OAAAhJ,0DAAA,CAASmH,GAAA,CAAAvB,IAAA,EAAM;QAAA,EAAC;QAEtG5F,6DADF,eAAgC,YACxB;QAAAA,qDAAA,YAAI;QAAAA,2DAAA,EAAO;QACjBA,wDAAA,sCAC8E;QAItFA,2DAHM,EAAM,EACC,EACU,EACjB,EA1FiC;;;;QAGnCA,wDAAA,GACF;QADEA,iEAAA,MAAAA,0DAAA,+DACF;QAGMA,wDAAA,GAA+D;QAA/DA,gEAAA,CAAAA,0DAAA,uDAA+D;QAGhDA,wDAAA,GAA8B;QAA9BA,yDAAA,eAAAmH,GAAA,CAAApD,eAAA,CAA8B;QAsBzB/D,wDAAA,IAAgD;QAAhDA,yDAAA,oBAAAmH,GAAA,CAAAtD,+BAAA,CAAgD;QACnC7D,wDAAA,EAAyC;QAAzCA,yDAAA,qBAAAmH,GAAA,CAAAtD,+BAAA,CAAyC;QAMzD7D,wDAAA,GAA6B;QAA7BA,yDAAA,eAAAmH,GAAA,CAAAnD,cAAA,CAA6B;QAkCxBhE,wDAAA,IAA+C;QAA/CA,yDAAA,oBAAAmH,GAAA,CAAArD,8BAAA,CAA+C;QAClC9D,wDAAA,EAAwC;QAAxCA,yDAAA,qBAAAmH,GAAA,CAAArD,8BAAA,CAAwC;QAQ7E9D,wDAAA,GAAuF;QAAvFA,yDAAA,cAAAmJ,UAAA,CAAAxE,IAAA,CAAAyE,KAAA,IAAAjC,GAAA,CAAAnD,cAAA,CAAAa,IAAA,CAAAC,MAAA,SAAA9E,0DAAA,SAAAmH,GAAA,CAAAlD,OAAA,EAAuF;QAInFjE,wDAAA,GAA8C;QAA9CA,yDAAA,+CAA8C;;;mBDtDtDJ,kEAAa,EAAAyJ,4DAAA,EACb5K,oEAAc,EAAA8K,8DAAA,EAAAA,sEAAA,EAAAA,qEAAA,EAAAA,kEAAA,EAAAA,gEAAA,EAAAA,+DAAA,EAAAA,mEAAA,EAAAA,6DAAA,EAAAA,kEAAA,EAAAA,4DAAA,EACd5J,sEAAe,EAAAuK,gEAAA,EACfhL,wDAAW,EAAAkL,6DAAA,EAAAA,iEAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAAA,6DAAA,EAAAA,oDAAA,EAAAA,mDAAA,EACX1K,6EAAkB,EAAAiL,uEAAA,EAAAA,mEAAA,EAClBlL,oEAAc,EAAAqL,8DAAA,EACdtL,+GAA+B,EAC/BlB,uEAAgB,EAChBiB,uDAAS,EACTD,iEAAe,EAAA0L,+DAAA,EACfnL,4HAA6B,EAC7BC,kGAAkB;IAAAoL,MAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1C+B;AACgC;AAC3B;AACT;AACiF;AACxB;AAEZ;AACvB;AACF;AACmB;AACD;AAGF;AACH;AACV;AACuB;AACzC;AACK;AACN;AACI;AACF;AACI;AACkB;AACpB;AACS;AAC2B;AACP;;;;;;;;;;;;;;;;;;;;;;ICzB9ElL,qDAAA,eACF;;;;;IAEEA,qDAAA,mBACF;;;;;IAEEA,qDAAA,mBACF;;;;;IAgBcA,6DAAA,yBAAiC;IAAAA,qDAAA,GAAoB;IAAAA,2DAAA,EAAiB;;;;IAAtDA,yDAAA,iBAAgB;IAACA,wDAAA,EAAoB;IAApBA,gEAAA,CAAAoM,MAAA,CAAAtO,cAAA,CAAoB;;;;;IAGrDkC,6DAAA,yBAAiC;IAC/BA,qDAAA,GACF;IAAAA,2DAAA,EAAiB;;;;;IAFDA,yDAAA,iBAAgB;IAC9BA,wDAAA,EACF;IADEA,iEAAA,MAAAqM,aAAA,CAAA1K,MAAA,CAAAC,aAAA,MACF;;;;;IAHF5B,yDAHA,IAAAsM,uFAAA,6BAAiC,IAAAC,uFAAA,6BAGM;;;;;IAHvCvM,4DAAA,IAAAqM,aAAA,CAAA1K,MAAA,CAAAM,OAAA,UAEC;IACDjC,wDAAA,EAIC;IAJDA,4DAAA,IAAAqM,aAAA,CAAA1K,MAAA,CAAAC,aAAA,UAIC;;;;;IAcK5B,6DADF,qBAAoC,mBACF;IAAAA,qDAAA,GAAmB;IAAAA,2DAAA,EAAW;IAC9DA,6DAAA,WAAM;IAAAA,qDAAA,GAAoB;IAC5BA,2DAD4B,EAAO,EACtB;;;;IAHDA,yDAAA,UAAAwM,WAAA,CAAAC,IAAA,CAAuB;IACDzM,wDAAA,GAAmB;IAAnBA,gEAAA,CAAAwM,WAAA,CAAAE,IAAA,CAAmB;IAC7C1M,wDAAA,GAAoB;IAApBA,gEAAA,CAAAwM,WAAA,CAAAG,KAAA,CAAoB;;;;;IAuBtB3M,6DAAA,mBAAiC;IAAAA,qDAAA,GAAiB;IAAAA,2DAAA,EAAW;;;;IAA5BA,wDAAA,EAAiB;IAAjBA,gEAAA,CAAA4M,SAAA,CAAAF,IAAA,CAAiB;;;;;IAFpD1M,6DAJJ,qBAC0D,UAEnD,WACG;IAAAA,qDAAA,GAAkB;IAAAA,2DAAA,EAAO;IAC/BA,yDAAA,IAAA6M,gFAAA,uBAAmB;IAIvB7M,2DADE,EAAM,EACK;;;;IARXA,yDADU,UAAA4M,SAAA,CAAAE,SAAA,CAA0B,YAAA9M,8DAAA,IAAAgN,GAAA,EAAAJ,SAAA,CAAAK,UAAA,EACmB;IAG/CjN,wDAAA,GAAkB;IAAlBA,gEAAA,CAAA4M,SAAA,CAAAD,KAAA,CAAkB;IACxB3M,wDAAA,EAEC;IAFDA,4DAAA,IAAA4M,SAAA,CAAAF,IAAA,UAEC;;;;;;IAnDX1M,6DAHN,aAA+B,cACD,yBACgC,gBAC7C;IAAAA,qDAAA,WAAI;IAAAA,2DAAA,EAAY;IAC3BA,6DAAA,mBACwF;IADRA,+DAAA,2BAAAkN,2FAAA9K,MAAA;MAAA,MAAAzB,QAAA,GAAAX,4DAAA,CAAAmN,GAAA,EAAAjM,SAAA;MAAAlB,iEAAA,CAAAW,QAAA,CAAAD,UAAA,EAAA0B,MAAA,MAAAzB,QAAA,CAAAD,UAAA,GAAA0B,MAAA;MAAA,OAAApC,0DAAA,CAAAoC,MAAA;IAAA,EAA8B;IAE9GpC,2DAFA,EACwF,EACvE;IACjBA,yDAAA,IAAAoN,yEAAA,OAA+C;IAUjDpN,2DAAA,EAAM;IAGFA,6DAFJ,cAA4B,yBACgC,iBAC7C;IAAAA,qDAAA,iBAAS;IAAAA,2DAAA,EAAY;IAChCA,6DAAA,sBAC6E;IADjEA,yDAAA,6BAAAqN,mGAAA;MAAA,MAAAC,IAAA,GAAAtN,4DAAA,CAAAmN,GAAA,EAAAI,MAAA;MAAA,MAAAnB,MAAA,GAAApM,4DAAA;MAAmBoM,MAAA,CAAAoB,sBAAA,CAAAF,IAAA,CAAyB;MAAElB,MAAA,CAAAqB,cAAA,CAAAH,IAAA,CAAiB;MAAA,OAAAtN,0DAAA,CAAEoM,MAAA,CAAAsB,cAAA,CAAAJ,IAAA,CAAiB;IAAA,EAAC;IAC7FtN,+DAAA,2BAAA2N,iGAAAvL,MAAA;MAAA,MAAAzB,QAAA,GAAAX,4DAAA,CAAAmN,GAAA,EAAAjM,SAAA;MAAAlB,iEAAA,CAAAW,QAAA,CAAAC,IAAA,EAAAwB,MAAA,MAAAzB,QAAA,CAAAC,IAAA,GAAAwB,MAAA;MAAA,OAAApC,0DAAA,CAAAoC,MAAA;IAAA,EAAwB;IAEtBpC,6DADF,0BAAoB,oBACc;IAAAA,qDAAA,IAA0B;IAAAA,2DAAA,EAAW;IACrEA,6DAAA,YAAM;IAAAA,qDAAA,IAA2B;IACnCA,2DADmC,EAAO,EACrB;IACrBA,+DAAA,KAAA6N,kEAAA,0BAAA7N,wEAAA,CAKC;IAELA,2DADE,EAAa,EACE;IACjBA,6DAAA,sBAAgB;IAAAA,qDAAA,IAAsB;IACxCA,2DADwC,EAAiB,EACnD;IAGFA,6DAFJ,eAA4B,0BACgC,iBAC7C;IAAAA,qDAAA,kBAAU;IAAAA,2DAAA,EAAY;IACjCA,6DAAA,sBACmC;IADvBA,yDAAA,6BAAA+N,mGAAA;MAAA,MAAAT,IAAA,GAAAtN,4DAAA,CAAAmN,GAAA,EAAAI,MAAA;MAAA,MAAAnB,MAAA,GAAApM,4DAAA;MAAA,OAAAA,0DAAA,CAAmBoM,MAAA,CAAAsB,cAAA,CAAAJ,IAAA,CAAiB;IAAA,EAAC;IAACtN,+DAAA,2BAAAgO,iGAAA5L,MAAA;MAAA,MAAAzB,QAAA,GAAAX,4DAAA,CAAAmN,GAAA,EAAAjM,SAAA;MAAAlB,iEAAA,CAAAW,QAAA,CAAAsN,SAAA,EAAA7L,MAAA,MAAAzB,QAAA,CAAAsN,SAAA,GAAA7L,MAAA;MAAA,OAAApC,0DAAA,CAAAoC,MAAA;IAAA,EAA6B;IAG3EpC,6DADF,0BAAoB,YACZ;IAAAA,qDAAA,IAAgD;IAAAA,2DAAA,EAAO;IAC7DA,6DAAA,oBAAiC;IAAAA,qDAAA,IAA+C;IAClFA,2DADkF,EAAW,EACxE;IACrBA,+DAAA,KAAAkO,kEAAA,0BAAAlO,wEAAA,CAWC;IAELA,2DADE,EAAa,EACE;IACjBA,6DAAA,sBAAgB;IAAAA,qDAAA,IAAuB;IAE3CA,2DAF2C,EAAiB,EACpD,EACF;;;;;;;;;IA1DcA,wDAAA,GAA4B;IAACA,yDAA7B,YAAAoM,MAAA,CAAAvO,gBAAA,CAA4B,qBAAAuO,MAAA,CAAAxK,aAAA,CAAmC;IAAC5B,+DAAA,YAAAW,QAAA,CAAAD,UAAA,CAA8B;IAC5DV,yDAAhD,wBAAAsN,IAAA,CAAyB,aAAAlB,MAAA,CAAA+B,QAAA,iBAA4D;IAEvFnO,wDAAA,GASC;IATDA,4DAAA,IAAAqM,aAAA,CAAA+B,OAAA,IAAA/B,aAAA,CAAA1K,MAAA,UASC;IAMG3B,wDAAA,GAAwB;IAAxBA,+DAAA,YAAAW,QAAA,CAAAC,IAAA,CAAwB;IAAqBZ,yDAApB,kBAAAsN,IAAA,CAAmB,aAAAlB,MAAA,CAAA+B,QAAA,SAA8B;IAExCnO,wDAAA,GAA0B;IAA1BA,gEAAA,CAAAoM,MAAA,CAAAiC,QAAA,CAAA1N,QAAA,CAAAC,IAAA,EAA0B;IACpDZ,wDAAA,GAA2B;IAA3BA,gEAAA,CAAAoM,MAAA,CAAAkC,SAAA,CAAA3N,QAAA,CAAAC,IAAA,EAA2B;IAEnCZ,wDAAA,EAKC;IALDA,yDAAA,CAAAoM,MAAA,CAAAoC,SAAA,CAKC;IAGWxO,wDAAA,GAAsB;IAAtBA,gEAAA,CAAAoM,MAAA,CAAAqC,aAAA,CAAAnB,IAAA,EAAsB;IAKctN,wDAAA,GAA6B;IAA7BA,+DAAA,YAAAW,QAAA,CAAAsN,SAAA,CAA6B;IAC7EjO,yDAD8E,uBAAAsN,IAAA,CAAwB,aAAAlB,MAAA,CAAA+B,QAAA,YACtE;IAExBnO,wDAAA,GAAgD;IAAhDA,gEAAA,EAAA0O,QAAA,GAAAtC,MAAA,CAAAuC,kBAAA,CAAAhO,QAAA,CAAAsN,SAAA,oBAAAS,QAAA,CAAA/B,KAAA,CAAgD;IACrB3M,wDAAA,GAA+C;IAA/CA,gEAAA,EAAA4O,QAAA,GAAAxC,MAAA,CAAAuC,kBAAA,CAAAhO,QAAA,CAAAsN,SAAA,oBAAAW,QAAA,CAAAlC,IAAA,CAA+C;IAElF1M,wDAAA,EAWC;IAXDA,yDAAA,CAAAoM,MAAA,CAAAyC,wBAAA,CAAAvB,IAAA,EAWC;IAGWtN,wDAAA,GAAuB;IAAvBA,gEAAA,CAAAoM,MAAA,CAAA0C,cAAA,CAAAxB,IAAA,EAAuB;;;;;;IA8B3CtN,6DAAA,iBAAmE;IAA3BA,yDAAA,mBAAA+O,4FAAA;MAAA/O,4DAAA,CAAAgP,GAAA;MAAA,MAAA5C,MAAA,GAAApM,4DAAA;MAAA,OAAAA,0DAAA,CAASoM,MAAA,CAAA6C,cAAA,EAAgB;IAAA,EAAC;IAACjP,qDAAA,GAAsD;;IAAAA,2DAAA,EAAS;;;IAA/DA,wDAAA,EAAsD;IAAtDA,gEAAA,CAAAA,0DAAA,6CAAsD;;;;;;IA7FjIA,6DAAA,iBAA2C;IAApBA,yDAAA,sBAAAkP,+EAAA;MAAAlP,4DAAA,CAAAgJ,GAAA;MAAA,MAAAoD,MAAA,GAAApM,4DAAA;MAAA,OAAAA,0DAAA,CAAYoM,MAAA,CAAAxG,IAAA,EAAM;IAAA,EAAC;IACxC5F,6DAAA,aAAgC;IAC9BA,+DAAA,IAAAmP,2DAAA,oBAAAnP,wEAAA,CAgEG;IACHA,2DAAA,EAAM;IAwBNA,6DAAA,yBAAoB;IAClBA,yDAAA,IAAAoP,mEAAA,oBAA+B;;IAG/BpP,wDAAA,aAA0B;IAC1BA,6DAAA,iBAAgE;IAAxBA,yDAAA,mBAAAqP,8EAAA;MAAArP,4DAAA,CAAAgJ,GAAA;MAAA,MAAAoD,MAAA,GAAApM,4DAAA;MAAA,OAAAA,0DAAA,CAASoM,MAAA,CAAAnH,WAAA,EAAa;IAAA,EAAC;IAACjF,qDAAA,cAAM;IAAAA,2DAAA,EAAS;IAC/EA,6DAAA,kBAA4G;;IAC1GA,qDAAA,cACF;IAEJA,2DAFI,EAAS,EACU,EAChB;;;;;IAnGLA,wDAAA,GAgEG;IAhEHA,yDAAA,CAAAoM,MAAA,CAAAkD,MAAA,CAgEG;IA0BDtP,wDAAA,GAEC;IAFDA,4DAAA,IAAAA,0DAAA,OAAAoM,MAAA,CAAAmD,aAAA,WAEC;IAGsDvP,wDAAA,GAAoD;IAApDA,yDAAA,cAAAwP,UAAA,CAAA7K,IAAA,CAAAyE,KAAA,IAAApJ,0DAAA,QAAAoM,MAAA,CAAAnI,OAAA,EAAoD;;;AD3D/G,MAAOwL,8BAA+B,SAAQvR,4EAAa;EAuB/DkF,YACUE,SAAuD,EACvDoM,KAAqB,EACrBC,mBAAwC,EACxCpM,yBAAoD,EACpDqM,mBAAwC,EACxCpM,QAAqB,EACrBC,MAAiB;IAEzB,KAAK,EAAE;IARC,KAAAH,SAAS,GAATA,SAAS;IACT,KAAAoM,KAAK,GAALA,KAAK;IACL,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAApM,yBAAyB,GAAzBA,yBAAyB;IACzB,KAAAqM,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAApM,QAAQ,GAARA,QAAQ;IACR,KAAAC,MAAM,GAANA,MAAM;IA7BU,KAAAG,SAAS,GAAG,kBAAkB;IAGxD,KAAA0L,MAAM,GAAqB,EAAE;IAC7B,KAAAjK,cAAc,GAAY,EAAE;IAI5B,KAAAwJ,wBAAwB,GAA6B,EAAE;IACvD,KAAAJ,aAAa,GAAa,EAAE;IAC5B,KAAAK,cAAc,GAAa,EAAE;IAC7B,KAAAjR,gBAAgB,GAAGA,+FAAgB;IACnC,KAAAC,cAAc,GAAGA,6FAAc;IAC/B,KAAAuQ,QAAQ,GAAG1C,2EAAiB;IAC5B,KAAA2C,SAAS,GAAG1C,4EAAkB;IAC9B,KAAAiE,QAAQ,GAAG,IAAIlR,kDAAe,CAAC,IAAI,CAAC;IACpC,KAAAsF,OAAO,GAAG,IAAItF,kDAAe,CAAC,KAAK,CAAC;IACpC,KAAA4Q,aAAa,GAAG,IAAI,CAACK,mBAAmB,CAACE,gBAAgB,EAAE;IAezD,IAAI,CAACxM,SAAS,CAACgB,YAAY,GAAG,IAAI;IAClC,IAAI,CAACC,aAAa,CAACC,GAAG,CACpB,IAAI,CAAClB,SAAS,CAACmB,aAAa,EAAE,CAACC,SAAS,CAACqL,KAAK,IAAG;MAC/C,IAAI,IAAI,CAACpL,IAAI,CAACC,KAAK,EAAE;QACnB,MAAMG,SAAS,GAAGC,OAAO,CAAC,uEAAuE,CAAC;QAClG,IAAI,CAACD,SAAS,EAAE;;MAElB,IAAI,CAACE,WAAW,EAAE;IACpB,CAAC,CAAC,CACH;EACH;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACiJ,QAAQ,GAAG,IAAI,CAACuB,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAyB;IAEpF,MAAMC,qBAAqB,GAAG,IAAI,CAACT,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACvF,MAAME,YAAY,GAAG,IAAI,CAACT,mBAAmB,CAACU,mBAAmB,CAACF,qBAAqB,CAAC,CAACpK,IAAI,CAACuF,4CAAK,EAAE,CAAC;IACtG,MAAMgF,OAAO,GAAGF,YAAY,CAACrK,IAAI,CAACwF,gDAAS,CAACrF,WAAW,IAAI,IAAI,CAAC3C,yBAAyB,CAACgN,SAAS,CAACrK,WAAW,CAACxF,UAAU,CAAC,CAAC,CAAC;IAC7H,MAAM8P,UAAU,GAAG,IAAI,CAACjN,yBAAyB,CAACkN,gBAAgB,EAAE,CAAC1K,IAAI,CAACsF,0CAAG,CAACqF,YAAY,IAAI7E,qFAAkB,CAAC6E,YAAY,CAAC,CAAC,CAAC;IAChI,MAAMC,WAAW,GAAG,IAAI,CAACpN,yBAAyB,CAACqN,iBAAiB,EAAE;IACtE,MAAMC,cAAc,GAAG,IAAI,CAACtN,yBAAyB,CAAC6B,gBAAgB,EAAE;IAExEgG,+CAAQ,CAAC,CAACgF,YAAY,EAAEE,OAAO,EAAEE,UAAU,EAAEG,WAAW,EAAEE,cAAc,CAAC,CAAC,CAACnM,SAAS,CAClF,CAAC,CAACwB,WAAW,EAAEoJ,MAAM,EAAEd,SAAS,EAAEsC,UAAU,EAAElP,aAAa,CAAC,KAAI;MAC9D,IAAI,CAACsE,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACsI,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACuC,gBAAgB,GAAGD,UAAU;MAClC,IAAI,CAACzL,cAAc,GAAGiK,MAAM;MAE5B,MAAMjK,cAAc,GAAkB,EAAE;MACxCiK,MAAM,CAAChK,OAAO,CAACxC,KAAK,IAAG;QACrBuC,cAAc,CAACvC,KAAK,CAACpC,UAAU,CAAC,GAAG,qCAAqC;MAC1E,CAAC,CAAC;MAEF,IAAI,CAACkB,aAAa,GAAG;QACnB,GAAGA,aAAa;QAChB,GAAGyD;OACJ;MAED,IAAI,IAAI,CAAC8I,QAAQ,IAAI,IAAI,EAAE;QACzB,MAAM6C,WAAW,GAAG,IAAI,CAACtB,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,GAAGe,QAAQ,CAAC,IAAI,CAACvB,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;QACxH,MAAMgB,SAAS,GAAG5B,MAAM,CAAC6B,IAAI,CAACrO,KAAK,IAAIA,KAAK,CAACqD,EAAE,KAAK6K,WAAW,CAAC;QAChE,IAAI,IAAI,CAAC7C,QAAQ,KAAK,MAAM,EAC1B,OAAO,IAAI,CAACvM,aAAa,CAACsP,SAAS,CAACxQ,UAAU,CAAC;QACjD,IAAI,CAAC4O,MAAM,CAAC7J,IAAI,CAACyL,SAAS,CAAC;OAC5B,MAAM;QACL,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC3B,IAAI,CAAC9B,MAAM,CAAC7J,IAAI,CAAC;YACfU,EAAE,EAAE,CAAC;YACLvF,IAAI,EAAE6K,6EAAiB,CAAC4F,MAAM;YAC9BpD,SAAS,EAAEvC,+EAAkB,CAAC4F,aAAa;YAC3C5Q,UAAU,EAAE,EAAE;YACd6Q,OAAO,EAAEjC,MAAM,CAACxK,MAAM,KAAK,CAAC;YAC5B0M,SAAS,EAAElC,MAAM,CAACxK,MAAM,GAAGsM;WAC5B,CAAC;;;MAIN,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC9B,MAAM,CAACxK,MAAM,EAAEsM,CAAC,EAAE,EAAE;QAC3C,IAAI,CAAC5D,sBAAsB,CAAC4D,CAAC,CAAC;QAC9B,IAAI,CAAC1D,cAAc,CAAC0D,CAAC,CAAC;;MAGxB,IAAI,CAACvB,QAAQ,CAAChK,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC,CACF;EACH;EAEAN,WAAWA,CAAA;IACT,IAAI,CAACsK,QAAQ,CAACrK,QAAQ,EAAE;IACxB,IAAI,CAACvB,OAAO,CAACuB,QAAQ,EAAE;IACvB,KAAK,CAACD,WAAW,EAAE;EACrB;EAEAN,WAAWA,CAAA;IACT,IAAI,CAAC3B,SAAS,CAACkD,KAAK,EAAE;EACxB;EAEAgH,sBAAsBA,CAACiE,KAAa;IAClC,IAAI,CAAC5C,wBAAwB,CAAC4C,KAAK,CAAC,GAAG,IAAI,CAACV,gBAAgB,CAACjS,MAAM,CACjE4S,MAAM,IAAIA,MAAM,CAACC,QAAQ,KAAK,IAAI,CAACrC,MAAM,CAACmC,KAAK,CAAC,CAAC7Q,IAAI,CAACgR,iBAAiB,EAAE,CAC1E;EACH;EAEAnE,cAAcA,CAACgE,KAAa;IAC1B,IAAII,gBAAgB,GAAG,IAAI,CAACvC,MAAM,CAACmC,KAAK,CAAC,CAAC7Q,IAAI,CAACgR,iBAAiB,EAAE,GAAGlG,+EAAkB,CAACoG,aAAgC;IACxH,MAAMC,aAAa,GAAG,IAAI,CAAClD,wBAAwB,CAAC4C,KAAK,CAAC,CAACO,IAAI,CAACN,MAAM,IAAIA,MAAM,CAAC5E,SAAS,KAAK+E,gBAAgB,CAAC;IAChH,IAAI,CAACE,aAAa,EAChBF,gBAAgB,GAAG,IAAI,CAAChD,wBAAwB,CAAC4C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC3E,SAAS;IACtE,IAAI,CAACwC,MAAM,CAACmC,KAAK,CAAC,CAACxD,SAAS,GAAG4D,gBAAgB;EACjD;EAEAnE,cAAcA,CAAC+D,KAAa;IAC1B,MAAMQ,gBAAgB,GAAG,IAAI,CAACzD,SAAS,CAAC2C,IAAI,CAACQ,QAAQ,IAAIA,QAAQ,CAAClF,IAAI,KAAK,IAAI,CAAC6C,MAAM,CAACmC,KAAK,CAAC,CAAC7Q,IAAI,CAAC;IACnG,MAAMsR,iBAAiB,GAAG,IAAI,CAACnB,gBAAgB,CAACI,IAAI,CAACgB,eAAe,IAAIA,eAAe,CAACrF,SAAS,KAAK,IAAI,CAACwC,MAAM,CAACmC,KAAK,CAAC,CAACxD,SAAS,CAAC;IACnI,IAAI,CAACQ,aAAa,CAACgD,KAAK,CAAC,GAAGQ,gBAAgB,EAAEG,WAAW,IAAI,EAAE;IAC/D,IAAI,CAACtD,cAAc,CAAC2C,KAAK,CAAC,GAAGS,iBAAiB,EAAEjF,UAAU,GACtD,cAAciF,iBAAiB,CAACG,eAAe,EAAE,GACjDH,iBAAiB,EAAEE,WAAW,IAAI,EAAE;EAC1C;EAEAzD,kBAAkBA,CAAC2D,SAAiB;IAClC,OAAO,IAAI,CAACvB,gBAAgB,CAACI,IAAI,CAACO,MAAM,IAAIA,MAAM,CAAC5E,SAAS,KAAKwF,SAAS,CAAC;EAC7E;EAEArD,cAAcA,CAAA;IACZ,IAAI,CAACxL,MAAM,CAACqC,IAAI,CAAC3C,uGAAyB,EAAE;MAC1CoP,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,QAAQ;MACf3N,IAAI,EAAE;QAAEqB,WAAW,EAAE,IAAI,CAACA,WAAW;QAAEb,cAAc,EAAE,IAAI,CAACA;MAAc;KAC3E,CAAC;EACJ;EAEAO,IAAIA,CAAA;IACF,IAAI,CAAC3B,OAAO,CAAC4B,IAAI,CAAC,IAAI,CAAC;IACvB,IAAI,CAACrC,QAAQ,CAACsC,IAAI,CAAC,WAAW,CAAC;IAC/B,IAAI,IAAI,CAACqI,QAAQ,IAAI,IAAI,EAAE;MACzB,MAAMrL,KAAK,GAAG,IAAI,CAACwM,MAAM,CAAC,CAAC,CAAC;MAC5B,IAAI,IAAI,CAACnB,QAAQ,KAAK,MAAM,EAAE;QAC5B,IAAI,CAAC5K,yBAAyB,CAACkP,MAAM,CAAC3P,KAAK,CAACqD,EAAE,EAAE,IAAI,CAACD,WAAW,CAACC,EAAE,EAAErD,KAAK,CAACpC,UAAU,CAAC,CAACgE,SAAS,CAAC,MAAK;UACpG,IAAI,CAACT,OAAO,CAAC4B,IAAI,CAAC,KAAK,CAAC;UACxB,IAAI,CAACrC,QAAQ,CAACsC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;YAAES,QAAQ,EAAE;UAAI,CAAE,CAAC;UACrD,IAAI,CAACtB,WAAW,EAAE;QACpB,CAAC,CAAC;OACH,MAAM,IAAI,IAAI,CAACkJ,QAAQ,KAAK,WAAW,EAAE;QACxC,IAAI,CAAC5K,yBAAyB,CAACmP,eAAe,CAAC5P,KAAK,CAACqD,EAAE,EAAErD,KAAK,CAACpC,UAAU,EAAEoC,KAAK,CAACmL,SAAS,CAAC,CAACvJ,SAAS,CAAC,MAAK;UACzG,IAAI,CAACT,OAAO,CAAC4B,IAAI,CAAC,KAAK,CAAC;UACxB,IAAI,CAACrC,QAAQ,CAACsC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;YAAES,QAAQ,EAAE;UAAI,CAAE,CAAC;UACrD,IAAI,CAACtB,WAAW,EAAE;QACpB,CAAC,CAAC;;KAEL,MAAM;MACLlG,yCAAE,CAAC,GAAG,IAAI,CAACuQ,MAAM,CAAC,CAACvJ,IAAI,CACrBjH,6CAAM,CAACgE,KAAK,IAAI,CAAC,CAACA,KAAK,CAACpC,UAAU,CAAC,EACnC7B,gDAAS,CAACiE,KAAK,IACb,IAAI,CAACS,yBAAyB,CAACiB,GAAG,CAAC1B,KAAK,EAAE,IAAI,CAACoD,WAAW,CAACC,EAAE,CAAC,CAACJ,IAAI,CAACnH,iDAAU,CAACyH,KAAK,IAAItH,yCAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CACnG,EACDC,8CAAO,EAAE,CACV,CAAC0F,SAAS,CAAC+B,CAAC,IAAG;QACd,IAAI,CAACxC,OAAO,CAAC4B,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAACrC,QAAQ,CAACsC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;UAAES,QAAQ,EAAE;QAAI,CAAE,CAAC;QACrD,IAAI,CAACtB,WAAW,EAAE;MACpB,CAAC,CAAC;;EAEN;EAAC,QAAAwB,CAAA;qBAjLUgJ,8BAA8B,EAAAzP,gEAAA,CAAA2G,mEAAA,GAAA3G,gEAAA,CAAA4G,4DAAA,GAAA5G,gEAAA,CAAA6G,mGAAA,GAAA7G,gEAAA,CAAAqJ,6FAAA,GAAArJ,gEAAA,CAAAuJ,6EAAA,GAAAvJ,gEAAA,CAAAkK,qEAAA,GAAAlK,gEAAA,CAAA2G,gEAAA;EAAA;EAAA,QAAAG,EAAA;UAA9B2I,8BAA8B;IAAA1I,SAAA;IAAAC,SAAA,WAAA2L,qCAAAzL,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;2EAEZjI,mDAAM;;;;;;;;;;QAFxBe,6DAAA,cAAAmH,GAAA,CAAAvD,SAAA,CAA8B;;;;;;;;;;QCnDvC5D,6DAFJ,aAAwD,aACvB,aACS;QAOpCA,yDANA,IAAA4S,qDAAA,OAA8B,IAAAC,qDAAA,OAGL,IAAAC,qDAAA,OAGD;QAI5B9S,2DADE,EAAM,EACF;QACNA,yDAAA,IAAA+S,qDAAA,gBAAoC;;QAwGpC/S,2DAAA,EAAM;;;QAnHFA,wDAAA,GAEC;QAFDA,4DAAA,IAAAmH,GAAA,CAAAgH,QAAA,KAAA6E,SAAA,UAEC;QACDhT,wDAAA,EAEC;QAFDA,4DAAA,IAAAmH,GAAA,CAAAgH,QAAA,mBAEC;QACDnO,wDAAA,EAEC;QAFDA,4DAAA,IAAAmH,GAAA,CAAAgH,QAAA,kBAEC;QAGLnO,wDAAA,EAuGG;QAvGHA,4DAAA,IAAAA,0DAAA,OAAAmH,GAAA,CAAA0I,QAAA,qBAuGG;;;mBDhFD3Q,wDAAW,EAAAkL,6DAAA,EAAAA,iEAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAAA,6DAAA,EAAAA,oDAAA,EAAAA,mDAAA,EACX1K,6EAAkB,EAAAiL,uEAAA,EAAAA,mEAAA,EAClBlL,oEAAc,EAAAqL,8DAAA,EACdtL,uFAA+B,EAC/B0M,sEAAe,EAAAlB,gEAAA,EAAAA,uEAAA,EAAAmI,8DAAA,EACflH,kEAAa,EAAAoH,4DAAA,EACbrH,oEAAe,EACfD,qDAAO,EACPzN,uEAAgB,EAChBqB,sEAAe,EAAA4T,gEAAA,EACfhU,uDAAS,EACTD,iEAAe,EAAAkU,+DAAA,EACf1T,mGAAkB,EAClBqM,4FAAoB;IAAAjB,MAAA;EAAA;;;;;;;;;;;;;;;;;AElD6C;AACkB;AAEvF,MAAMuI,cAAc,GAA2D;EAC7EC,OAAO,EAAE;IAAE/G,KAAK,EAAEf,gFAAkB,CAACH,6EAAiB,CAACiI,OAAO,CAAC;IAAEtB,WAAW,EAAE;EAA6B,CAAE;EAC7GuB,MAAM,EAAE;IAAEhH,KAAK,EAAEf,gFAAkB,CAACH,6EAAiB,CAACkI,MAAM,CAAC;IAAEvB,WAAW,EAAE;EAA+K,CAAE;EAC7PwB,QAAQ,EAAE;IAAEjH,KAAK,EAAEf,gFAAkB,CAACH,6EAAiB,CAACmI,QAAQ,CAAC;IAAExB,WAAW,EAAE;EAAmC,CAAE;EACrHyB,KAAK,EAAE;IAAElH,KAAK,EAAEf,gFAAkB,CAACH,6EAAiB,CAACoI,KAAK,CAAC;IAAEzB,WAAW,EAAE;EAA4B,CAAE;EACxG0B,MAAM,EAAE;IAAEnH,KAAK,EAAEf,gFAAkB,CAACH,6EAAiB,CAACqI,MAAM,CAAC;IAAE1B,WAAW,EAAE;EAAiC,CAAE;EAC/G2B,SAAS,EAAE;IAAEpH,KAAK,EAAEf,gFAAkB,CAACH,6EAAiB,CAACsI,SAAS,CAAC;IAAE3B,WAAW,EAAE;EAA4C,CAAE;EAChI4B,MAAM,EAAE;IAAErH,KAAK,EAAEf,gFAAkB,CAACH,6EAAiB,CAACuI,MAAM,CAAC;IAAE5B,WAAW,EAAE;EAAoB,CAAE;EAClGf,MAAM,EAAE;IAAE1E,KAAK,EAAEf,gFAAkB,CAACH,6EAAiB,CAAC4F,MAAM,CAAC;IAAEe,WAAW,EAAE;EAAkB;CAC/F;AASK,SAAUvG,kBAAkBA,CAAC6E,YAAsB;EACvD,MAAMlC,SAAS,GAAe,EAAE;EAChC,KAAK,MAAMyF,WAAW,IAAIvD,YAAY,EAAE;IACtClC,SAAS,CAAC/I,IAAI,CAAC;MACbgH,IAAI,EAAEwH,WAAW;MACjBtH,KAAK,EAAE8G,cAAc,CAACQ,WAAW,CAAC,CAACtH,KAAK;MACxCD,IAAI,EAAEf,+EAAiB,CAACsI,WAAW,CAAC;MACpC7B,WAAW,EAAEqB,cAAc,CAACQ,WAAW,CAAC,CAAC7B;KAC1C,CAAC;;EAEJ,OAAO5D,SAAS;AAClB;;;;;;;;;;;;;;;;AC/B6F;;AAUvF,MAAOhP,+BAA+B;EAP5C4D,YAAA;IAQ6B,KAAAxB,aAAa,GAAkB,EAAE;;EAE5DyS,QAAQA,CAACC,OAAwB;IAC/B,IAAI,CAACA,OAAO,CAACC,KAAK,EAAE;MAAE,OAAO,IAAI;;IAEjC,MAAMC,YAAY,GAAIF,OAAO,CAACC,KAAgB,CAAC3C,iBAAiB,EAAE;IAClE,MAAM6C,YAAY,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC/S,aAAa,CAAC,CAACuP,IAAI,CAAC1E,IAAI,IAAIA,IAAI,CAACmF,iBAAiB,EAAE,KAAK4C,YAAY,CAAC;IAC5G,OAAOC,YAAY,GAAG;MAAE7S,aAAa,EAAE,IAAI,CAACA,aAAa,CAAC6S,YAAY;IAAC,CAAE,GAAG,IAAI;EAClF;EAAC,QAAAhO,CAAA;qBATUjH,+BAA+B;EAAA;EAAA,QAAAsH,EAAA;UAA/BtH,+BAA+B;IAAAuH,SAAA;IAAA6N,MAAA;MAAAhT,aAAA,GAAA5B,0DAAA,CAAA8U,IAAA;IAAA;IAAAC,UAAA;IAAA7Q,QAAA,GAAAlE,gEAAA,CAL7B,CACT;MAAEiV,OAAO,EAAEd,yDAAa;MAAEe,WAAW,EAAE1V,+BAA+B;MAAE2V,KAAK,EAAE;IAAI,CAAE,CACtF;EAAA;;;;;;;;;;;;;;;;;;ACRuD;AAEM;;;;;;;;;ICE1DnV,gEAAA,GAAyD;;;;;IAD3DA,4DAAA,eAAU;IACRA,wDAAA,IAAAsV,iDAAA,0BAA0C;IAC5CtV,0DAAA,EAAW;;;;;IADMA,uDAAA,EAAyB;IAAzBA,wDAAA,qBAAAuV,UAAA,CAAyB;;;;;IAKxCvV,gEAAA,GAAyD;;;;;IAD3DA,4DAAA,gBAAW;IACTA,wDAAA,IAAAwV,iDAAA,0BAA0C;IAC5CxV,0DAAA,EAAY;;;;;IADKA,uDAAA,EAAyB;IAAzBA,wDAAA,qBAAAuV,UAAA,CAAyB;;;;;IAO9CvV,0DAAA,GAAyB;;;ADHrB,MAAOF,kBAAkB;EAI7BsD,YAAA;IAHS,KAAAsS,OAAO,GAAG,KAAK;IACxB,KAAAC,OAAO,GAAG,IAAI;EAEE;EAEhBC,aAAaA,CAAA;IACX,IAAI,CAACD,OAAO,GAAG,CAAC,IAAI,CAACA,OAAO;EAC9B;EAAC,QAAAlP,CAAA;qBARU3G,kBAAkB;EAAA;EAAA,QAAAgH,EAAA;UAAlBhH,kBAAkB;IAAAiH,SAAA;IAAA6N,MAAA;MAAAc,OAAA;IAAA;IAAAX,UAAA;IAAA7Q,QAAA,GAAAlE,iEAAA;IAAA6V,kBAAA,EAAAC,GAAA;IAAAvO,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAqO,4BAAA7O,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;QCb/BlH,4DAAA,aAA2F;QAArEA,wDAAA,mBAAAgW,iDAAA;UAAAhW,2DAAA,CAAAgJ,GAAA;UAAA,OAAAhJ,yDAAA,CAASmH,GAAA,CAAAyO,aAAA,EAAe;QAAA,EAAC;QAO3C5V,wDALA,IAAAiW,kCAAA,OAAe,IAAAC,kCAAA,OAKD;QAMlBlW,0DAAA,EAAM;QAENA,wDAAA,IAAAmW,yCAAA,gCAAAnW,oEAAA,CAAsB;;;;QAf0BA,wDAAA,YAAAA,6DAAA,IAAAgN,GAAA,EAAA7F,GAAA,CAAAwO,OAAA,EAA0C;QACxF3V,uDAAA,EAWC;QAXDA,2DAAA,KAAAqW,OAAA,GAAAlP,GAAA,CAAAuO,OAAA,WAAK,OAAAW,OAAA,KAAL,IAAI,UAWH;;;mBDFC3W,4EAAkB,EAAAiH,iEAAA,EAAAA,kEAAA,EAAEoF,oDAAO,EAAEqJ,6DAAgB;IAAAlK,MAAA;EAAA;;;;;;;;;;;;;;;AEVjD;AACM,SAAUsL,eAAeA,CAACC,GAAW;EACzC,MAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAE;EAChDF,EAAE,CAACnC,KAAK,GAAGkC,GAAG,CAAC,CAAiC;EAChDC,EAAE,CAACG,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAgB;EAChDH,EAAE,CAACI,KAAK,CAACC,QAAQ,GAAG,UAAU;EAC9BL,EAAE,CAACI,KAAK,CAACE,IAAI,GAAG,SAAS,CAAC,CAAsB;EAChDL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,EAAE,CAAC,CAAC,CAAkB;EAChD,MAAMS,QAAQ,GACZR,QAAQ,CAACS,YAAY,EAAE,CAACC,UAAU,GAAG,CAAC,CAAQ;EAAA,EAC1CV,QAAQ,CAACS,YAAY,EAAE,CAACE,UAAU,CAAC,CAAC,CAAC,CAAK;EAAA,EAC1C,KAAK,CAAC,CAAoC;EAChDZ,EAAE,CAACa,MAAM,EAAE,CAAC,CAAoC;EAChDZ,QAAQ,CAACa,WAAW,CAAC,MAAM,CAAC,CAAC,CAAmB;EAChDb,QAAQ,CAACM,IAAI,CAACQ,WAAW,CAACf,EAAE,CAAC,CAAC,CAAkB;EAChD,IAAIS,QAAQ,EAAE;IAAkC;IAC9CR,QAAQ,CAACS,YAAY,EAAE,CAACM,eAAe,EAAE,CAAC,CAAI;IAC9Cf,QAAQ,CAACS,YAAY,EAAE,CAACO,QAAQ,CAACR,QAAQ,CAAC,CAAC,CAAG;;AAElD;;;;;;;;;;;;;;;;ACnBgD;AACT;AAChC,SAASW,MAAMA,CAACC,WAAW,EAAEC,IAAI,EAAE;EACtC,OAAOH,mDAAO,CAACD,6DAAa,CAACG,WAAW,EAAEC,IAAI,EAAEC,SAAS,CAACnT,MAAM,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACxF;;;;;;;;;;;;;;;;ACJkC;AACK;AACvC,MAAMoT,UAAU,GAAGA,CAACC,GAAG,EAAE5D,KAAK,MAAM4D,GAAG,CAAC1S,IAAI,CAAC8O,KAAK,CAAC,EAAE4D,GAAG,CAAC;AAClD,SAASnZ,OAAOA,CAAA,EAAG;EACtB,OAAO6Y,mDAAO,CAAC,CAACO,MAAM,EAAEC,UAAU,KAAK;IACnCP,+CAAM,CAACI,UAAU,EAAE,EAAE,CAAC,CAACE,MAAM,CAAC,CAAC1T,SAAS,CAAC2T,UAAU,CAAC;EACxD,CAAC,CAAC;AACN","sources":["./projects/eav-ui/src/app/app-administration/constants/field-name.patterns.ts","./projects/eav-ui/src/app/content-type-fields/add-sharing-fields/add-sharing-fields.component.ts","./projects/eav-ui/src/app/content-type-fields/add-sharing-fields/add-sharing-fields.component.html","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields.component.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields.component.html","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields.helpers.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/reserved-names.directive.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts","./node_modules/rxjs/dist/esm/internal/operators/reduce.js","./node_modules/rxjs/dist/esm/internal/operators/toArray.js"],"sourcesContent":["export const fieldNamePattern = /^[A-Za-z][A-Za-z0-9]+$/;\r\nexport const fieldNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n","import { ChangeDetectorRef, Component, HostBinding, Inject, OnDestroy, OnInit, ViewChild, ViewContainerRef, inject } from '@angular/core';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { Field } from '../models/field.model';\r\nimport { ContentTypesFieldsService } from '../services/content-types-fields.service';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, catchError, concatMap, filter, of, toArray } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models';\r\nimport { fieldNameError, fieldNamePattern } from '../../app-administration/constants/field-name.patterns';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\nimport { NgForm, FormsModule } from '@angular/forms';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { openFeatureDialog } from '../../features/shared/base-feature.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { ReservedNamesValidatorDirective } from '../edit-content-type-fields/reserved-names.directive';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FeatureIconIndicatorComponent } from '../../features/feature-icon-indicator/feature-icon-indicator.component';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { FeatureDetailService } from '../../features/services/feature-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-add-sharing-fields',\r\n  templateUrl: './add-sharing-fields.component.html',\r\n  styleUrls: ['./add-sharing-fields.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReservedNamesValidatorDirective,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    FeatureIconIndicatorComponent,\r\n    FieldHintComponent,\r\n  ],\r\n  providers: [\r\n    FeatureDetailService,\r\n  ],\r\n})\r\nexport class AddSharingFieldsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @ViewChild('ngForm', { read: NgForm }) private form: NgForm;\r\n\r\n  displayedShareableFieldsColumns: string[] = ['contentType', 'name', 'type', 'share'];\r\n  displayedSelectedFieldsColumns: string[] = ['newName', 'source', 'remove'];\r\n\r\n  shareableFields = new MatTableDataSource<Field>([]);\r\n  selectedFields = new MatTableDataSource<NewNameField>([]);\r\n  fieldNamePattern = fieldNamePattern;\r\n  fieldNameError = fieldNameError;\r\n  reservedNames: ReservedNames;\r\n\r\n  saving$ = new BehaviorSubject(false);\r\n\r\n  public features: FeaturesService = inject(FeaturesService);\r\n  private fieldShareConfigManagement = this.features.isEnabled(FeatureNames.FieldShareConfigManagement);\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: { contentType: ContentType, existingFields: Field[] },\r\n    private dialogRef: MatDialogRef<AddSharingFieldsComponent>,\r\n    private contentTypesFieldsService: ContentTypesFieldsService,\r\n    private snackBar: MatSnackBar,\r\n    // All this is just for the feature dialog\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    super();\r\n    this.dialogRef.disableClose = true;\r\n    this.subscriptions.add(\r\n      this.dialogRef.backdropClick().subscribe(() => {\r\n        if (this.form.dirty || this.selectedFields.data.length > 0) {\r\n          const confirmed = confirm('You have unsaved changes. Are you sure you want to close this dialog?');\r\n          if (!confirmed) { return; }\r\n        }\r\n        this.closeDialog();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    // TODO: @SDV Try to find a better way to do this\r\n    this.subscriptions.add(this.contentTypesFieldsService.getShareableFields().subscribe(shareableFields => {\r\n      this.shareableFields.data = shareableFields;\r\n    }));\r\n    this.subscriptions.add(this.contentTypesFieldsService.getReservedNames().subscribe(reservedNames => {\r\n      const existingFields: ReservedNames = {};\r\n      this.dialogData.existingFields.forEach(field => {\r\n        existingFields[field.StaticName] = 'Field with this name already exists';\r\n      });\r\n      this.reservedNames = {\r\n        ...reservedNames,\r\n        ...existingFields,\r\n      };\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.saving$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  // TODO: @SDV Try to find a better way to do this\r\n  selectField(field: Field) {\r\n    const selectedFields = this.selectedFields.data;\r\n    selectedFields.push({ newName: field.StaticName, field });\r\n    this.selectedFields.data = selectedFields;\r\n\r\n  }\r\n\r\n  // TODO: @SDV Try to find a better way to do this\r\n  removeField(field: NewNameField) {\r\n    const selectedFields = this.selectedFields.data;\r\n    selectedFields.splice(selectedFields.indexOf(field), 1);\r\n    this.selectedFields.data = selectedFields;\r\n  }\r\n\r\n  // When API gets created we will need to send the selected fields to the API\r\n  save() {\r\n    if (!this.fieldShareConfigManagement()) {\r\n      openFeatureDialog(this.dialog, FeatureNames.FieldShareConfigManagement, this.viewContainerRef, this.changeDetectorRef);\r\n    } else {\r\n      this.saving$.next(true);\r\n      this.snackBar.open('Saving...');\r\n      of(...this.selectedFields.data).pipe(\r\n        filter(inheritField => !!inheritField.newName),\r\n        concatMap(inheritField =>\r\n          this.contentTypesFieldsService.addInheritedField(\r\n            this.dialogData.contentType.Id,\r\n            inheritField.field.ContentType.Id,\r\n            inheritField.field.Guid,\r\n            inheritField.newName\r\n          ).pipe(catchError(error => of(null)))\r\n        ),\r\n        toArray(),\r\n      ).subscribe(responses => {\r\n        this.saving$.next(false);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.closeDialog();\r\n      });\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\nexport interface AppSharingFieldsViewModel {\r\n  shareableFields: Field[];\r\n  selectedFields: Field[];\r\n}\r\n\r\ninterface NewNameField {\r\n  newName: string;\r\n  field: Field;\r\n}\r\n","<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      {{ \"SharingOrInheriting.TitleAddFieldsWhichInherit\" | translate}}\r\n    </div>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <span>{{ \"SharingOrInheriting.PickFieldsToInheritFrom\" | translate }}</span>\r\n    <div class=\"eav-tables-div\">\r\n      <mat-card class=\"eav-table-div-left\">\r\n        <table mat-table [dataSource]=\"shareableFields\" class=\"eav-fields-table\">\r\n          <ng-container matColumnDef=\"contentType\">\r\n            <th mat-header-cell *matHeaderCellDef> <b>Content Type</b> </th>\r\n            <td mat-cell *matCellDef=\"let field\" class=\"eav-table-cell\"> {{field.ContentType.Name}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> <b>Name</b> </th>\r\n            <td mat-cell *matCellDef=\"let field\" class=\"eav-table-cell\"> {{field.StaticName}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"type\">\r\n            <th mat-header-cell *matHeaderCellDef> <b>Type</b> </th>\r\n            <td mat-cell *matCellDef=\"let field\" class=\"eav-table-cell\"> {{field.Type}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"share\">\r\n            <th mat-header-cell *matHeaderCellDef> <b>Share</b> </th>\r\n            <td mat-cell *matCellDef=\"let field\" class=\"eav-table-cell\"> <button mat-raised-button type=\"button\"\r\n                (click)=\"selectField(field)\">Select</button> </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedShareableFieldsColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedShareableFieldsColumns;\"></tr>\r\n        </table>\r\n      </mat-card>\r\n\r\n      <mat-card class=\"eav-table-div-right\">\r\n        <form #ngForm=\"ngForm\">\r\n          <table mat-table [dataSource]=\"selectedFields\" class=\"eav-fields-table\">\r\n            <ng-container matColumnDef=\"newName\">\r\n              <th mat-header-cell *matHeaderCellDef> <b>New Name</b> </th>\r\n              <td mat-cell *matCellDef=\"let item; index as i\" class=\"eav-table-cell\">\r\n                <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                  <mat-label>New Name</mat-label>\r\n                  <input matInput [pattern]=\"fieldNamePattern\" [(ngModel)]=\"item.newName\" [name]=\"'StaticName' + i\"\r\n                    #newName=\"ngModel\" [appReservedNames]=\"reservedNames\">\r\n                </mat-form-field>\r\n                @if (newName.errors) {\r\n                  @if (newName.errors.pattern) {\r\n                    <app-field-hint [isError]=\"true\">{{ fieldNameError }}</app-field-hint>\r\n                  }\r\n                  @if (newName.errors.reservedNames) {\r\n                    <app-field-hint [isError]=\"true\">\r\n                      {{ newName.errors.reservedNames }}\r\n                    </app-field-hint>\r\n                  }\r\n                }\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"source\">\r\n              <th mat-header-cell *matHeaderCellDef> <b>Source</b> </th>\r\n              <td mat-cell *matCellDef=\"let item\" style=\"word-break:break-all;\" class=\"eav-table-cell\"> {{\r\n                item.field.ContentType.Name }}/{{ item.field.StaticName }} ({{ item.field.Type }}) </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"remove\">\r\n              <th mat-header-cell *matHeaderCellDef> <b>Remove</b> </th>\r\n              <td mat-cell *matCellDef=\"let item\" class=\"eav-table-cell\"> <button mat-raised-button type=\"button\"\r\n                  (click)=\"removeField(item)\">Remove</button> </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedSelectedFieldsColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedSelectedFieldsColumns;\"></tr>\r\n          </table>\r\n        </form>\r\n      </mat-card>\r\n    </div>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"submit\" color=\"accent\"\r\n        [disabled]=\"!ngForm.form.valid || selectedFields.data.length == 0 || (saving$ | async)\" (click)=\"save()\">\r\n        <div class=\"eav-button-feature\">\r\n          <span>Save</span>\r\n          <app-feature-icon-indicator class=\"eav-button-feature-icon\"\r\n            [featureNameId]=\"'FieldShareConfigManagement'\"></app-feature-icon-indicator>\r\n        </div>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n","import { Component, HostBinding, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, FormsModule } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, catchError, concatMap, filter, forkJoin, map, of, share, Subscription, switchMap, toArray } from 'rxjs';\r\nimport { fieldNameError, fieldNamePattern } from '../../app-administration/constants/field-name.patterns';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { DataTypeConstants } from '../constants/data-type.constants';\r\nimport { InputTypeStrict, InputTypeConstants } from '../constants/input-type.constants';\r\nimport { calculateTypeIcon, calculateTypeLabel } from '../content-type-fields.helpers';\r\nimport { Field, FieldInputTypeOption } from '../models/field.model';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\nimport { ContentTypesFieldsService } from '../services/content-types-fields.service';\r\nimport { calculateDataTypes, DataType } from './edit-content-type-fields.helpers';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { AddSharingFieldsComponent } from '../add-sharing-fields/add-sharing-fields.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgClass, AsyncPipe } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ReservedNamesValidatorDirective } from './reserved-names.directive';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { ToggleDebugDirective } from '../../shared/directives/toggle-debug.directive';\r\n\r\n@Component({\r\n  selector: 'app-edit-content-type-fields',\r\n  templateUrl: './edit-content-type-fields.component.html',\r\n  styleUrls: ['./edit-content-type-fields.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReservedNamesValidatorDirective,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatOptionModule,\r\n    NgClass,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    FieldHintComponent,\r\n    ToggleDebugDirective,\r\n  ],\r\n})\r\nexport class EditContentTypeFieldsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @ViewChild('ngForm', { read: NgForm }) private form: NgForm;\r\n\r\n  fields: Partial<Field>[] = [];\r\n  existingFields: Field[] = [];\r\n  reservedNames: ReservedNames;\r\n  editMode: 'name' | 'inputType';\r\n  dataTypes: DataType[];\r\n  filteredInputTypeOptions: FieldInputTypeOption[][] = [];\r\n  dataTypeHints: string[] = [];\r\n  inputTypeHints: string[] = [];\r\n  fieldNamePattern = fieldNamePattern;\r\n  fieldNameError = fieldNameError;\r\n  findIcon = calculateTypeIcon;\r\n  findLabel = calculateTypeLabel;\r\n  loading$ = new BehaviorSubject(true);\r\n  saving$ = new BehaviorSubject(false);\r\n  debugEnabled$ = this.globalConfigService.getDebugEnabled$();\r\n\r\n  private contentType: ContentType;\r\n  private inputTypeOptions: FieldInputTypeOption[];\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditContentTypeFieldsComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentTypesService: ContentTypesService,\r\n    private contentTypesFieldsService: ContentTypesFieldsService,\r\n    private globalConfigService: GlobalConfigService,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    super();\r\n    this.dialogRef.disableClose = true;\r\n    this.subscriptions.add(\r\n      this.dialogRef.backdropClick().subscribe(event => {\r\n        if (this.form.dirty) {\r\n          const confirmed = confirm('You have unsaved changes. Are you sure you want to close this dialog?');\r\n          if (!confirmed) return;\r\n        }\r\n        this.closeDialog();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editMode = this.route.snapshot.paramMap.get('editMode') as 'name' | 'inputType';\r\n\r\n    const contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n    const contentType$ = this.contentTypesService.retrieveContentType(contentTypeStaticName).pipe(share());\r\n    const fields$ = contentType$.pipe(switchMap(contentType => this.contentTypesFieldsService.getFields(contentType.StaticName)));\r\n    const dataTypes$ = this.contentTypesFieldsService.typeListRetrieve().pipe(map(rawDataTypes => calculateDataTypes(rawDataTypes)));\r\n    const inputTypes$ = this.contentTypesFieldsService.getInputTypesList();\r\n    const reservedNames$ = this.contentTypesFieldsService.getReservedNames();\r\n\r\n    forkJoin([contentType$, fields$, dataTypes$, inputTypes$, reservedNames$]).subscribe(\r\n      ([contentType, fields, dataTypes, inputTypes, reservedNames]) => {\r\n        this.contentType = contentType;\r\n        this.dataTypes = dataTypes;\r\n        this.inputTypeOptions = inputTypes;\r\n        this.existingFields = fields;\r\n\r\n        const existingFields: ReservedNames = {};\r\n        fields.forEach(field => {\r\n          existingFields[field.StaticName] = 'Field with this name already exists';\r\n        });\r\n\r\n        this.reservedNames = {\r\n          ...reservedNames,\r\n          ...existingFields,\r\n        };\r\n\r\n        if (this.editMode != null) {\r\n          const editFieldId = this.route.snapshot.paramMap.get('id') ? parseInt(this.route.snapshot.paramMap.get('id'), 10) : null;\r\n          const editField = fields.find(field => field.Id === editFieldId);\r\n          if (this.editMode === 'name')\r\n            delete this.reservedNames[editField.StaticName];\r\n          this.fields.push(editField);\r\n        } else {\r\n          for (let i = 1; i <= 8; i++) {\r\n            this.fields.push({\r\n              Id: 0,\r\n              Type: DataTypeConstants.String,\r\n              InputType: InputTypeConstants.StringDefault,\r\n              StaticName: '',\r\n              IsTitle: fields.length === 0,\r\n              SortOrder: fields.length + i,\r\n            });\r\n          }\r\n        }\r\n\r\n        for (let i = 0; i < this.fields.length; i++) {\r\n          this.filterInputTypeOptions(i);\r\n          this.calculateHints(i);\r\n        }\r\n\r\n        this.loading$.next(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n    this.saving$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  filterInputTypeOptions(index: number) {\r\n    this.filteredInputTypeOptions[index] = this.inputTypeOptions.filter(\r\n      option => option.dataType === this.fields[index].Type.toLocaleLowerCase()\r\n    );\r\n  }\r\n\r\n  resetInputType(index: number) {\r\n    let defaultInputType = this.fields[index].Type.toLocaleLowerCase() + InputTypeConstants.DefaultSuffix as InputTypeStrict;\r\n    const defaultExists = this.filteredInputTypeOptions[index].some(option => option.inputType === defaultInputType);\r\n    if (!defaultExists)\r\n      defaultInputType = this.filteredInputTypeOptions[index][0].inputType;\r\n    this.fields[index].InputType = defaultInputType;\r\n  }\r\n\r\n  calculateHints(index: number) {\r\n    const selectedDataType = this.dataTypes.find(dataType => dataType.name === this.fields[index].Type);\r\n    const selectedInputType = this.inputTypeOptions.find(inputTypeOption => inputTypeOption.inputType === this.fields[index].InputType);\r\n    this.dataTypeHints[index] = selectedDataType?.description ?? '';\r\n    this.inputTypeHints[index] = selectedInputType?.isObsolete\r\n      ? `OBSOLETE - ${selectedInputType.obsoleteMessage}`\r\n      : selectedInputType?.description ?? '';\r\n  }\r\n\r\n  getInputTypeOption(inputName: string) {\r\n    return this.inputTypeOptions.find(option => option.inputType === inputName);\r\n  }\r\n\r\n  addSharedField() {\r\n    this.dialog.open(AddSharingFieldsComponent, {\r\n      autoFocus: false,\r\n      width: '1600px',\r\n      data: { contentType: this.contentType, existingFields: this.existingFields }\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.saving$.next(true);\r\n    this.snackBar.open('Saving...');\r\n    if (this.editMode != null) {\r\n      const field = this.fields[0];\r\n      if (this.editMode === 'name') {\r\n        this.contentTypesFieldsService.rename(field.Id, this.contentType.Id, field.StaticName).subscribe(() => {\r\n          this.saving$.next(false);\r\n          this.snackBar.open('Saved', null, { duration: 2000 });\r\n          this.closeDialog();\r\n        });\r\n      } else if (this.editMode === 'inputType') {\r\n        this.contentTypesFieldsService.updateInputType(field.Id, field.StaticName, field.InputType).subscribe(() => {\r\n          this.saving$.next(false);\r\n          this.snackBar.open('Saved', null, { duration: 2000 });\r\n          this.closeDialog();\r\n        });\r\n      }\r\n    } else {\r\n      of(...this.fields).pipe(\r\n        filter(field => !!field.StaticName),\r\n        concatMap(field =>\r\n          this.contentTypesFieldsService.add(field, this.contentType.Id).pipe(catchError(error => of(null)))\r\n        ),\r\n        toArray(),\r\n      ).subscribe(_ => {\r\n        this.saving$.next(false);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n        this.closeDialog();\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"eav-dialog eav-no-scrollbar\" appToggleDebug>\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      @if (editMode === undefined) {\r\n        Fields\r\n      }\r\n      @if (editMode === null) {\r\n        Add Fields\r\n      }\r\n      @if (editMode != null) {\r\n        Edit Field\r\n      }\r\n    </div>\r\n  </div>\r\n  @if ((loading$ | async) === false) {\r\n    <form #ngForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n      <div class=\"eav-dialog-content\">\r\n        @for (field of fields; track field; let i = $index) {\r\n          <div class=\"eav-row-container\">\r\n            <div class=\"eav-edit-input\">\r\n              <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                <mat-label>Name</mat-label>\r\n                <input matInput [pattern]=\"fieldNamePattern\" [appReservedNames]=\"reservedNames\" [(ngModel)]=\"field.StaticName\"\r\n                  [name]=\"'StaticName' + i\" #staticName=\"ngModel\" [disabled]=\"editMode === 'inputType'\">\r\n                </mat-form-field>\r\n                @if (staticName.touched && staticName.errors) {\r\n                  @if (staticName.errors.pattern) {\r\n                    <app-field-hint [isError]=\"true\">{{ fieldNameError }}</app-field-hint>\r\n                  }\r\n                  @if (staticName.errors.reservedNames) {\r\n                    <app-field-hint [isError]=\"true\">\r\n                      {{ staticName.errors.reservedNames }}\r\n                    </app-field-hint>\r\n                  }\r\n                }\r\n              </div>\r\n              <div class=\"eav-edit-input\">\r\n                <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                  <mat-label>Data Type</mat-label>\r\n                  <mat-select (selectionChange)=\"filterInputTypeOptions(i); resetInputType(i); calculateHints(i)\"\r\n                    [(ngModel)]=\"field.Type\" [name]=\"'Type' + i\" [disabled]=\"editMode != null\">\r\n                    <mat-select-trigger>\r\n                      <mat-icon class=\"eav-type-icon\">{{ findIcon(field.Type) }}</mat-icon>\r\n                      <span>{{ findLabel(field.Type) }}</span>\r\n                    </mat-select-trigger>\r\n                    @for (dataType of dataTypes; track dataType) {\r\n                      <mat-option [value]=\"dataType.name\">\r\n                        <mat-icon class=\"eav-type-icon\">{{ dataType.icon }}</mat-icon>\r\n                        <span>{{ dataType.label }}</span>\r\n                      </mat-option>\r\n                    }\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <app-field-hint>{{ dataTypeHints[i] }}</app-field-hint>\r\n              </div>\r\n              <div class=\"eav-edit-input\">\r\n                <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                  <mat-label>Input Type</mat-label>\r\n                  <mat-select (selectionChange)=\"calculateHints(i)\" [(ngModel)]=\"field.InputType\" [name]=\"'InputType' + i\"\r\n                    [disabled]=\"editMode === 'name'\">\r\n                    <mat-select-trigger>\r\n                      <span>{{ getInputTypeOption(field.InputType)?.label }}</span>\r\n                      <mat-icon class=\"eav-input-icon\">{{ getInputTypeOption(field.InputType)?.icon }}</mat-icon>\r\n                    </mat-select-trigger>\r\n                    @for (option of filteredInputTypeOptions[i]; track option) {\r\n                      <mat-option [value]=\"option.inputType\"\r\n                        [ngClass]=\"{ 'eav-input-obsolete': option.isObsolete }\">\r\n                        <!-- div is needed here because <mat-option> by default puts mat-icon on the first place if it exists -->\r\n                        <div>\r\n                          <span>{{ option.label }}</span>\r\n                          @if (option.icon) {\r\n                            <mat-icon class=\"eav-input-icon\">{{ option.icon }}</mat-icon>\r\n                          }\r\n                        </div>\r\n                      </mat-option>\r\n                    }\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <app-field-hint>{{ inputTypeHints[i] }}</app-field-hint>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n        <!--\r\n        TODO: @SDV\r\n        - create a button to the left which is only visible in debug mode!\r\n        - Label: Add Shared Field (BETA) - put it in i18n\r\n      - on click, open a dialog\r\n        - Title: \"Add Fields which Inherits Configuration\" (i18n)\r\n        - Content: \"Pick original fields which we'll inherit from\" (i18n)\r\n        - The screen should now be split into 2 columns. Both columns should scroll independently\r\n          - Left column: a list of all content-types/fields can be selected\r\n            - get from the api fields/GetSharedFields\r\n            - show a table with these columns\r\n              - Content Type (from the new Field.ContentType.Name)\r\n              - Field (Field.Name)\r\n              - Type (Field.Type)\r\n            - On click, an entry is added to the table in the right column\r\n          - Right column: a list of all fields which were selected, and should be added\r\n            - show a table with these columns\r\n              - Name (input field - initial value is Field.Name, but editable)\r\n              - Source (basically [ContentType.Name]/[Field.Name]([Field.Type]))\r\n              - Remove button\r\n        - At the end the Cancel / Ok button\r\n        - When OK is pressed, nothing happens yet\r\n        -->\r\n        <mat-dialog-actions>\r\n          @if ((debugEnabled$ | async)) {\r\n            <button mat-raised-button type=\"button\" (click)=\"addSharedField()\">{{ \"SharingOrInheriting.AddSharedField\" | translate }}</button>\r\n          }\r\n          <div class=\"spacer\"></div>\r\n          <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n          <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!ngForm.form.valid || (saving$ | async)\">\r\n            Save\r\n          </button>\r\n        </mat-dialog-actions>\r\n      </form>\r\n    }\r\n  </div>\r\n\r\n","import { DataTypeConstants } from '../constants/data-type.constants';\r\nimport { calculateTypeIcon, calculateTypeLabel } from '../content-type-fields.helpers';\r\n\r\nconst dataTypeLabels: Record<string, { label: string, description: string }> = {\r\n  Boolean: { label: calculateTypeLabel(DataTypeConstants.Boolean), description: 'Yes/no or true/false values' },\r\n  Custom: { label: calculateTypeLabel(DataTypeConstants.Custom), description: 'Use for things like gps-pickers (which writes into multiple fields) or for custom-data which serializes something exotic into the db like an array, a custom json or anything' },\r\n  DateTime: { label: calculateTypeLabel(DataTypeConstants.DateTime), description: 'For date, time or combined values' },\r\n  Empty: { label: calculateTypeLabel(DataTypeConstants.Empty), description: 'Use to structure your form' },\r\n  Entity: { label: calculateTypeLabel(DataTypeConstants.Entity), description: 'One or more other content-items' },\r\n  Hyperlink: { label: calculateTypeLabel(DataTypeConstants.Hyperlink), description: 'Hyperlink or reference to a picture / file' },\r\n  Number: { label: calculateTypeLabel(DataTypeConstants.Number), description: 'Any kind of number' },\r\n  String: { label: calculateTypeLabel(DataTypeConstants.String), description: 'Any kind of text' },\r\n};\r\n\r\nexport interface DataType {\r\n  name: string;\r\n  label: string;\r\n  icon: string;\r\n  description: string;\r\n}\r\n\r\nexport function calculateDataTypes(rawDataTypes: string[]): DataType[] {\r\n  const dataTypes: DataType[] = [];\r\n  for (const rawDataType of rawDataTypes) {\r\n    dataTypes.push({\r\n      name: rawDataType,\r\n      label: dataTypeLabels[rawDataType].label,\r\n      icon: calculateTypeIcon(rawDataType),\r\n      description: dataTypeLabels[rawDataType].description,\r\n    });\r\n  }\r\n  return dataTypes;\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\n\r\n@Directive({\r\n    selector: '[appReservedNames]',\r\n    providers: [\r\n      { provide: NG_VALIDATORS, useExisting: ReservedNamesValidatorDirective, multi: true },\r\n    ],\r\n    standalone: true,\r\n})\r\nexport class ReservedNamesValidatorDirective implements Validator {\r\n  @Input('appReservedNames') reservedNames: ReservedNames = {};\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    if (!control.value) { return null; }\r\n\r\n    const controlValue = (control.value as string).toLocaleLowerCase();\r\n    const reservedName = Object.keys(this.reservedNames).find(name => name.toLocaleLowerCase() === controlValue);\r\n    return reservedName ? { reservedNames: this.reservedNames[reservedName] } : null;\r\n  }\r\n}\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule, NgClass, NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n","import { scanInternals } from './scanInternals';\nimport { operate } from '../util/lift';\nexport function reduce(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n","import { reduce } from './reduce';\nimport { operate } from '../util/lift';\nconst arrReducer = (arr, value) => (arr.push(value), arr);\nexport function toArray() {\n    return operate((source, subscriber) => {\n        reduce(arrReducer, [])(source).subscribe(subscriber);\n    });\n}\n"],"names":["fieldNamePattern","fieldNameError","ChangeDetectorRef","ViewContainerRef","inject","BaseComponent","MAT_DIALOG_DATA","MatDialog","MatDialogRef","MatDialogActions","ContentTypesFieldsService","MatTableDataSource","MatTableModule","MatSnackBar","BehaviorSubject","catchError","concatMap","filter","of","toArray","NgForm","FormsModule","FeaturesService","FeatureNames","openFeatureDialog","TranslateModule","AsyncPipe","ReservedNamesValidatorDirective","MatInputModule","MatFormFieldModule","MatButtonModule","MatCardModule","FeatureIconIndicatorComponent","FieldHintComponent","FeatureDetailService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","field_r2","ContentType","Name","field_r3","StaticName","field_r4","Type","ɵɵlistener","AddSharingFieldsComponent_td_23_Template_button_click_1_listener","field_r6","ɵɵrestoreView","_r5","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","selectField","ɵɵelement","ɵɵproperty","ɵɵtextInterpolate","newName_r10","errors","reservedNames","ɵɵtemplate","AddSharingFieldsComponent_td_32_Conditional_6_Conditional_0_Template","AddSharingFieldsComponent_td_32_Conditional_6_Conditional_1_Template","ɵɵconditional","pattern","ɵɵtwoWayListener","AddSharingFieldsComponent_td_32_Template_input_ngModelChange_4_listener","$event","item_r9","_r8","ɵɵtwoWayBindingSet","newName","AddSharingFieldsComponent_td_32_Conditional_6_Template","ɵɵtwoWayProperty","i_r11","ɵɵtextInterpolate3","item_r12","field","AddSharingFieldsComponent_td_38_Template_button_click_1_listener","item_r14","_r13","removeField","AddSharingFieldsComponent","constructor","dialogData","dialogRef","contentTypesFieldsService","snackBar","dialog","viewContainerRef","changeDetectorRef","hostClass","displayedShareableFieldsColumns","displayedSelectedFieldsColumns","shareableFields","selectedFields","saving$","features","fieldShareConfigManagement","isEnabled","FieldShareConfigManagement","disableClose","subscriptions","add","backdropClick","subscribe","form","dirty","data","length","confirmed","confirm","closeDialog","ngOnInit","getShareableFields","getReservedNames","existingFields","forEach","ngOnDestroy","complete","push","splice","indexOf","save","next","open","pipe","inheritField","addInheritedField","contentType","Id","Guid","error","responses","duration","close","_","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","viewQuery","AddSharingFieldsComponent_Query","rf","ctx","ɵɵhostProperty","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","AddSharingFieldsComponent_Template","ɵɵelementContainerStart","AddSharingFieldsComponent_th_13_Template","AddSharingFieldsComponent_td_14_Template","AddSharingFieldsComponent_th_16_Template","AddSharingFieldsComponent_td_17_Template","AddSharingFieldsComponent_th_19_Template","AddSharingFieldsComponent_td_20_Template","AddSharingFieldsComponent_th_22_Template","AddSharingFieldsComponent_td_23_Template","AddSharingFieldsComponent_tr_24_Template","AddSharingFieldsComponent_tr_25_Template","AddSharingFieldsComponent_th_31_Template","AddSharingFieldsComponent_td_32_Template","AddSharingFieldsComponent_th_34_Template","AddSharingFieldsComponent_td_35_Template","AddSharingFieldsComponent_th_37_Template","AddSharingFieldsComponent_td_38_Template","AddSharingFieldsComponent_tr_39_Template","AddSharingFieldsComponent_tr_40_Template","AddSharingFieldsComponent_Template_button_click_42_listener","_r1","AddSharingFieldsComponent_Template_button_click_44_listener","ɵɵpipeBind1","ngForm_r15","valid","i4","MatCard","i5","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i6","MatButton","i7","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","PatternValidator","NgModel","i8","MatFormField","MatLabel","i9","MatInput","i10","TranslatePipe","styles","ActivatedRoute","forkJoin","map","share","switchMap","ContentTypesService","DataTypeConstants","InputTypeConstants","calculateTypeIcon","calculateTypeLabel","calculateDataTypes","GlobalConfigService","NgClass","MatOptionModule","MatIconModule","MatSelectModule","ToggleDebugDirective","ctx_r1","staticName_r5","EditContentTypeFieldsComponent_Conditional_6_For_4_Conditional_7_Conditional_0_Template","EditContentTypeFieldsComponent_Conditional_6_For_4_Conditional_7_Conditional_1_Template","dataType_r7","name","icon","label","option_r8","EditContentTypeFieldsComponent_Conditional_6_For_4_For_33_Conditional_4_Template","inputType","ɵɵpureFunction1","_c1","isObsolete","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_input_ngModelChange_5_listener","_r3","EditContentTypeFieldsComponent_Conditional_6_For_4_Conditional_7_Template","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_selectionChange_12_listener","i_r6","$index","filterInputTypeOptions","resetInputType","calculateHints","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_ngModelChange_12_listener","ɵɵrepeaterCreate","EditContentTypeFieldsComponent_Conditional_6_For_4_For_19_Template","ɵɵrepeaterTrackByIdentity","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_selectionChange_26_listener","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_ngModelChange_26_listener","InputType","EditContentTypeFieldsComponent_Conditional_6_For_4_For_33_Template","editMode","touched","findIcon","findLabel","ɵɵrepeater","dataTypes","dataTypeHints","tmp_29_0","getInputTypeOption","tmp_30_0","filteredInputTypeOptions","inputTypeHints","EditContentTypeFieldsComponent_Conditional_6_Conditional_6_Template_button_click_0_listener","_r9","addSharedField","EditContentTypeFieldsComponent_Conditional_6_Template_form_ngSubmit_0_listener","EditContentTypeFieldsComponent_Conditional_6_For_4_Template","EditContentTypeFieldsComponent_Conditional_6_Conditional_6_Template","EditContentTypeFieldsComponent_Conditional_6_Template_button_click_9_listener","fields","debugEnabled$","ngForm_r10","EditContentTypeFieldsComponent","route","contentTypesService","globalConfigService","loading$","getDebugEnabled$","event","snapshot","paramMap","get","contentTypeStaticName","contentType$","retrieveContentType","fields$","getFields","dataTypes$","typeListRetrieve","rawDataTypes","inputTypes$","getInputTypesList","reservedNames$","inputTypes","inputTypeOptions","editFieldId","parseInt","editField","find","i","String","StringDefault","IsTitle","SortOrder","index","option","dataType","toLocaleLowerCase","defaultInputType","DefaultSuffix","defaultExists","some","selectedDataType","selectedInputType","inputTypeOption","description","obsoleteMessage","inputName","autoFocus","width","rename","updateInputType","EditContentTypeFieldsComponent_Query","EditContentTypeFieldsComponent_Conditional_3_Template","EditContentTypeFieldsComponent_Conditional_4_Template","EditContentTypeFieldsComponent_Conditional_5_Template","EditContentTypeFieldsComponent_Conditional_6_Template","undefined","MatSelect","MatSelectTrigger","i11","MatOption","i12","MatIcon","i13","i14","dataTypeLabels","Boolean","Custom","DateTime","Empty","Entity","Hyperlink","Number","rawDataType","AbstractControl","NG_VALIDATORS","ValidationErrors","validate","control","value","controlValue","reservedName","Object","keys","inputs","ɵɵInputFlags","None","standalone","ɵɵProvidersFeature","provide","useExisting","multi","NgTemplateOutlet","ɵɵelementContainer","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","ɵɵprojection","isError","isShort","toggleIsShort","ngContentSelectors","_c0","FieldHintComponent_Template","FieldHintComponent_Template_div_click_0_listener","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","tmp_2_0","MatHint","MatError","copyToClipboard","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","scanInternals","operate","reduce","accumulator","seed","arguments","arrReducer","arr","source","subscriber"],"sourceRoot":"webpack:///","x_google_ignoreList":[10,11]}