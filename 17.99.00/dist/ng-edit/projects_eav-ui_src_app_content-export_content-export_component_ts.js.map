{"version":3,"file":"projects_eav-ui_src_app_content-export_content-export_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts","./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/content-export/content-export.component.ts","./projects/eav-ui/src/app/content-export/content-export.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { ServiceBase } from '../../shared/services/service-base';\r\nimport { EavLogger } from '../../shared/logging/eav-logger';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\n\r\nconst logThis = false;\r\n\r\nconst webApiSettings = 'admin/dialog/settings';\r\n\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService extends ServiceBase implements OnDestroy {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    // private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n    featuresService: FeaturesService,\r\n  ) {\r\n    super(new EavLogger('AppDialogConfigService', logThis));\r\n    this.log.a(`using context #${this.context.log.svcId}`);\r\n    featuresService.loadFromService(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.destroy();\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions in dialogSettings$ are killed\r\n  }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getCurrent$(): Observable<DialogSettings> {\r\n    const appId = this.context.appId;\r\n    this.log.a(`getCurrent\\$ - appId:${appId}`);\r\n    return this.getShared$(appId);\r\n  }\r\n\r\n    // new 2dg\r\n    getSitePrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.Site.PrimaryApp));\r\n    }\r\n\r\n    getGlobalPrimaryApp$(): Observable<DialogContextSiteApp> {\r\n      return this.getCurrent$().pipe(map(dc => dc?.Context.System.PrimaryApp));\r\n    }\r\n\r\n\r\n  getShared$(appId: number): Observable<DialogSettings> {\r\n    this.log.a('getShared$ appId: ' + appId);\r\n    // if (!this.dialogSettings$[appIdToUse])\r\n    this.dialogSettings$[appId] ??= this.getDialogSettings(appId, 'getShared$').pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n  }\r\n\r\n  getDialogSettings(appId?: number, reqBy?: string): Observable<DialogSettings> {\r\n    this.log.a('getDialogSettings', {appId, reqBy});\r\n    return this.http.get<DialogSettings>(webApiSettings, {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dlgSettings => {\r\n        dlgSettings.Context.Language.List = dlgSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dlgSettings;\r\n      }),\r\n      tap(dlgSettings => {\r\n        this.globalConfigService.allowDebug(dlgSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { ContentType } from '../app-administration/models/content-type.model';\r\nimport { AppDialogConfigService } from '../app-administration/services/app-dialog-config.service';\r\nimport { ContentTypesService } from '../app-administration/services/content-types.service';\r\nimport { Language } from '../edit/shared/models';\r\nimport { ContentExport } from './models/content-export.model';\r\nimport { ContentExportService } from './services/content-export.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-content-export',\r\n    templateUrl: './content-export.component.html',\r\n    styleUrls: ['./content-export.component.scss'],\r\n    standalone: true,\r\n    imports: [\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatRadioModule,\r\n        MatDialogActions,\r\n        MatButtonModule,\r\n        AsyncPipe,\r\n    ],\r\n    providers: [\r\n        ContentExportService,\r\n        ContentTypesService,\r\n        AppDialogConfigService,\r\n    ],\r\n})\r\nexport class ContentExportComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  formValues: ContentExport;\r\n  languages: Language[];\r\n  itemIds: number[];\r\n  hasIdList = false;\r\n  loading$ = new BehaviorSubject(false);\r\n  contentType$ = new BehaviorSubject<ContentType>(null);\r\n\r\n  private contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ContentExportComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentExportService: ContentExportService,\r\n    private appDialogConfigService: AppDialogConfigService,\r\n    private contentTypesService: ContentTypesService,\r\n  ) {\r\n    const selectedIds = this.route.snapshot.paramMap.get('selectedIds');\r\n    this.hasIdList = !!selectedIds;\r\n    if (this.hasIdList) {\r\n      this.itemIds = selectedIds.split(',').map(id => parseInt(id, 10));\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading$.next(true);\r\n    const contentType$ = this.contentTypesService.retrieveContentType(this.contentTypeStaticName);\r\n    const dialogSettings$ = this.appDialogConfigService.getCurrent$();\r\n    forkJoin([contentType$, dialogSettings$]).subscribe(([contentType, dialogSettings]) => {\r\n      this.contentType$.next(contentType);\r\n      this.languages = dialogSettings.Context.Language.List;\r\n\r\n      this.formValues = {\r\n        defaultLanguage: dialogSettings.Context.Language.Primary,\r\n        contentTypeStaticName: this.contentTypeStaticName,\r\n        language: '',\r\n        recordExport: this.hasIdList ? 'Selection' : 'All',\r\n        languageReferences: 'Link',\r\n        resourcesReferences: 'Link',\r\n      };\r\n      this.loading$.next(false);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.loading$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  exportContent() {\r\n    this.contentExportService.exportContent(this.formValues,\r\n      this.hasIdList && this.formValues.recordExport === 'Selection' ? this.itemIds : null);\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Export {{ (contentType$ | async)?.Name }}</div>\r\n  </div>\r\n  @if ((loading$ | async) === false) {\r\n    <form #ngForm=\"ngForm\">\r\n      <div class=\"eav-dialog-content\">\r\n        <p>\r\n          This will generate an XML file which you can edit in Excel. If you just want to import new data, use this to\r\n          export the schema that you can then fill in using Excel. Please visit\r\n          <a href=\"https://2sxc.org/help\" target=\"_blank\">https://2sxc.org/help</a> for more instructions.\r\n        </p>\r\n        <div class=\"dialog-form-content fancy-scrollbar-light\">\r\n          <div>\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Languages</mat-label>\r\n              <mat-select [(ngModel)]=\"formValues.language\" name=\"Language\">\r\n                <mat-option value=\"\">All</mat-option>\r\n                @for (lang of languages; track lang) {\r\n                  <mat-option [value]=\"lang.NameId\">{{ lang.NameId }}</mat-option>\r\n                }\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div>\r\n            <p class=\"eav-radio-group-label\">Export data</p>\r\n            <mat-radio-group [(ngModel)]=\"formValues.recordExport\" name=\"RecordExport\" class=\"eav-radio-group\">\r\n              <mat-radio-button value=\"Blank\">No, just export blank data schema (for new data import)\r\n              </mat-radio-button>\r\n              <mat-radio-button value=\"All\">Yes, export all content-items</mat-radio-button>\r\n              @if (hasIdList) {\r\n                <mat-radio-button value=\"Selection\">\r\n                  Export selected {{ itemIds.length }} items\r\n                </mat-radio-button>\r\n              }\r\n            </mat-radio-group>\r\n          </div>\r\n          <div>\r\n            <p class=\"eav-radio-group-label\">Value references to other languages</p>\r\n            <mat-radio-group [(ngModel)]=\"formValues.languageReferences\" name=\"LanguageReferences\"\r\n              [disabled]=\"formValues.recordExport === 'Blank'\" class=\"eav-radio-group\">\r\n              <mat-radio-button value=\"Link\">Keep references to other languages (for re-import)\r\n              </mat-radio-button>\r\n              <mat-radio-button value=\"Resolve\">Replace references with values</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div>\r\n            <p class=\"eav-radio-group-label\">File / page references</p>\r\n            <mat-radio-group [(ngModel)]=\"formValues.resourcesReferences\" name=\"ResourcesReferences\"\r\n              [disabled]=\"formValues.recordExport === 'Blank'\" class=\"eav-radio-group\">\r\n              <mat-radio-button value=\"Link\">Keep references (for re-import, for example Page:4711)\r\n              </mat-radio-button>\r\n              <mat-radio-button value=\"Resolve\">Replace references with real URLs (for example\r\n                /Portals/0...)\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!ngForm.form.valid\" (click)=\"exportContent()\">\r\n          Export Data\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  }\r\n</div>\r\n"],"names":["HttpClient","map","shareReplay","tap","GlobalConfigService","Context","FeaturesService","ServiceBase","EavLogger","logThis","webApiSettings","AppDialogConfigService","constructor","http","context","globalConfigService","featuresService","dialogSettings$","log","a","svcId","loadFromService","ngOnDestroy","destroy","getCurrent$","appId","getShared$","getSitePrimaryApp$","pipe","dc","Site","PrimaryApp","getGlobalPrimaryApp$","System","getDialogSettings","refCount","reqBy","get","params","toString","dlgSettings","Language","List","filter","language","IsEnabled","allowDebug","Enable","DebugMode","_","i0","ɵɵinject","i1","i2","i3","i4","_2","factory","ɵfac","DnnContext","webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","webApiTypeSave","webApiTypeDelete","webApiTypeImport","webApiTypeAddGhost","ContentTypesService","dnnContext","apiUrl","name","$2sxc","retrieveContentType","staticName","contentTypeId","retrieveContentTypes","scope","getScopes","scopesData","scopes","old","scopeOptions","Object","keys","key","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","MatDialogRef","MatDialogActions","ActivatedRoute","BehaviorSubject","forkJoin","ContentExportService","AsyncPipe","MatButtonModule","MatRadioModule","MatOptionModule","MatSelectModule","MatFormFieldModule","FormsModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","lang_r3","NameId","ɵɵadvance","ɵɵtextInterpolate","ɵɵtextInterpolate1","ctx_r1","itemIds","length","ɵɵtwoWayListener","ContentExportComponent_Conditional_5_Template_mat_select_ngModelChange_13_listener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","formValues","ɵɵresetView","ɵɵrepeaterCreate","ContentExportComponent_Conditional_5_For_17_Template","ɵɵrepeaterTrackByIdentity","ContentExportComponent_Conditional_5_Template_mat_radio_group_ngModelChange_21_listener","recordExport","ɵɵtemplate","ContentExportComponent_Conditional_5_Conditional_26_Template","ContentExportComponent_Conditional_5_Template_mat_radio_group_ngModelChange_30_listener","languageReferences","ContentExportComponent_Conditional_5_Template_mat_radio_group_ngModelChange_38_listener","resourcesReferences","ɵɵlistener","ContentExportComponent_Conditional_5_Template_button_click_44_listener","closeDialog","ContentExportComponent_Conditional_5_Template_button_click_46_listener","exportContent","ɵɵtwoWayProperty","ɵɵrepeater","languages","ɵɵconditional","hasIdList","ngForm_r4","form","valid","ContentExportComponent","dialogRef","route","contentExportService","appDialogConfigService","contentTypesService","hostClass","loading$","contentType$","contentTypeStaticName","snapshot","paramMap","selectedIds","split","id","parseInt","ngOnInit","next","subscribe","dialogSettings","defaultLanguage","Primary","complete","close","ɵɵdirectiveInject","i5","selectors","hostVars","hostBindings","ContentExportComponent_HostBindings","rf","ctx","ɵɵhostProperty","ɵɵStandaloneFeature","decls","vars","consts","template","ContentExportComponent_Template","ContentExportComponent_Conditional_5_Template","tmp_0_0","ɵɵpipeBind1","Name","i6","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","NgModel","NgForm","i7","MatFormField","MatLabel","i8","MatSelect","i9","MatOption","i10","MatRadioGroup","MatRadioButton","i11","MatButton","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}