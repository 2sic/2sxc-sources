{"version":3,"file":"projects_eav-ui_src_app_app-administration_sync-configuration_sync-configuration_component_ts-0e6134.127bb89ffda9bc05.js","mappings":"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","names":["i0","_r1","ctx_r1","exportAppXml","resetApp","_r3","SyncConfigurationComponent","BaseWithChildDialogComponent","constructor","router","route","snackBar","appDialogConfigService","super","this","importAppPartsService","transient","ImportAppPartsService","exportAppService","ExportAppService","appStateAdvanced","ngOnInit","getCurrent$","subscribe","dialogSettings","ngOnDestroy","dismiss","exportApp","navigate","relativeTo","parent","firstChild","exportParts","importParts","withFiles","open","exportForVersionControl","includeContentGroups","resetAppGuid","next","result","duration","error","confirm","static","t","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_5__","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","$event","SyncConfigurationComponent_Conditional_67_Template","SyncConfigurationComponent_Conditional_68_Template","SyncConfigurationComponent_Conditional_71_Template","SyncConfigurationComponent_Conditional_72_Template","MatCardModule","i4","MatIconModule","i5","MatButtonModule","i6","MatSlideToggleModule","i7","FormsModule","i8","FeatureTextInfoComponent","RouterOutlet","styles","FeatureDetailService","http","dnnContext","getFeatureDetails","featureNameId","get","$2sxc","apiUrl","webApiRoot","params","nameId","_angular_core__WEBPACK_IMPORTED_MODULE_0__","jDH","factory","Éµfac","id_r3","_r2","ctx_r3","copyToClipboard","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","feature_r5","findOutMore","link","closeDialog","name","description","isEnabled","tmp_6_0","FeatureInfoDialogComponent","dialogData","dialogRef","featureDetailService","viewModel$","text","window","close","MAT_DIALOG_DATA","core","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","AsyncPipe","TranslateModule","TippyDirective","SafeHtmlPipe","FeatureComponentProviders","FeatureComponentBase","value","featureNameId$","showIf","showIf$","BehaviorSubject","dialog","inject","MatDialog","viewContainerRef","ViewContainerRef","changeDetectorRef","ChangeDetectorRef","featuresService","FeaturesService","feature$","pipe","switchMap","featName","get$","show$","combineLatest","map","feat","openDialog","openFeatureDialog","FsC","inputs","featureId","autoFocus","data","width","markForCheck"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sync-configuration/sync-configuration.component.html","./projects/eav-ui/src/app/app-administration/sync-configuration/sync-configuration.component.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts"],"sourcesContent":["<ng-container>\r\n  <div class=\"eav-cards-box\">\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Instructions for Sync or Export/Import</mat-card-title>\r\n        <mat-icon>info</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          This section is for export/import of the entire App,\r\n          for synchronizing with the file storage (eg. for Git)\r\n          or to export parts of the App for re-import in another App.\r\n        </p>\r\n        <p>\r\n          To export/import Content-Types, Queries, Views or Data, use the respective tabs.\r\n        </p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"eav-cards-box\">\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Export this entire App</mat-card-title>\r\n        <mat-icon>cloud_download</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          Create an package (zip) which can be installed in another site.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"exportApp()\">\r\n          <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n          <span>Export App</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <mat-card-title>Export or Import parts of this App</mat-card-title>\r\n        <mat-icon>import_export</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          Create an xml containing parts of the app, e.g. content and templates.\r\n          Import parts from such an xml into this app.\r\n        </p>\r\n      </mat-card-content>\r\n      <div class=\"eav-card-space-div\"></div>\r\n      <mat-card-actions align=\"start\">\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"exportParts()\">\r\n          <mat-icon class=\"eav-icon\">cloud_download</mat-icon>\r\n          <span>Export Parts</span>\r\n        </button>\r\n        <button mat-button class=\"eav-button__with-icon\" (click)=\"importParts()\">\r\n          <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n          <span>Import Parts</span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"eav-cards-box\">\r\n    <mat-card class=\"eav-card\">\r\n      <mat-card-header class=\"eav-card-header\">\r\n        <div class=\"eav-card-header-title-toggle\">\r\n          <mat-card-title>App-State Versioning</mat-card-title>\r\n          <mat-slide-toggle class=\"eav-card-header-toggle\" [(ngModel)]=\"appStateAdvanced\">{{ appStateAdvanced ? \"advanced\" : \"basic\" }}</mat-slide-toggle>\r\n        </div>\r\n        <mat-icon>history_toggle_off</mat-icon>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>\r\n          You can save / restore the app with data and configuration in <code>.data/app.xml</code>.\r\n          This file can then also be versioned using git.\r\n        </p>\r\n        @if (appStateAdvanced) {\r\n          <p>\r\n            <br>\r\n              In Advanced mode you can also sync all the site files used by this app.\r\n              They will be placed in a folder inside <code>App_Data</code> and allow sync/restore with git or another server.\r\n            </p>\r\n          }\r\n        </mat-card-content>\r\n        @if (appStateAdvanced) {\r\n          <app-feature-text-info [featureNameId]=\"'AppSyncWithSiteFiles'\"></app-feature-text-info>\r\n        }\r\n        <div class=\"eav-card-space-div\"></div>\r\n        <mat-card-actions align=\"start\">\r\n          @if (!appStateAdvanced) {\r\n            <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(false)\">\r\n              <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n              <span>Save state</span>\r\n            </button>\r\n            <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(false)\">\r\n              <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n              <span>Restore state</span>\r\n            </button>\r\n          }\r\n          @if (appStateAdvanced) {\r\n            <button mat-button class=\"eav-button__with-icon\" (click)=\"exportAppXml(true)\">\r\n              <mat-icon class=\"eav-icon\">more_time</mat-icon>\r\n              <span>Save with Assets</span>\r\n            </button>\r\n            <button mat-button class=\"eav-button__with-icon\" (click)=\"resetApp(true)\">\r\n              <mat-icon class=\"eav-icon\">restore</mat-icon>\r\n              <span>Restore with Assets</span>\r\n            </button>\r\n          }\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </ng-container>\r\n<router-outlet></router-outlet>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { ExportAppService } from '../services/export-app.service';\r\nimport { ImportAppPartsService } from '../services/import-app-parts.service';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\nimport { FeatureTextInfoComponent } from '../../features/feature-text-info/feature-text-info.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-sync-configuration',\r\n  templateUrl: './sync-configuration.component.html',\r\n  styleUrls: ['./sync-configuration.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    FeatureTextInfoComponent,\r\n    RouterOutlet,\r\n  ],\r\n})\r\nexport class SyncConfigurationComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  dialogSettings: DialogSettings;\r\n\r\n  private importAppPartsService = transient(ImportAppPartsService);\r\n  private exportAppService = transient(ExportAppService);\r\n\r\n  public appStateAdvanced = false;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private appDialogConfigService: AppDialogConfigService\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.appDialogConfigService.getCurrent$().subscribe((dialogSettings) => {\r\n      this.dialogSettings = dialogSettings;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.snackBar.dismiss();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  exportApp() {\r\n    this.router.navigate([`export`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  exportParts() {\r\n    this.router.navigate([`export/parts`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  importParts() {\r\n    this.router.navigate([`import/parts`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  exportAppXml(withFiles: boolean) {\r\n    this.snackBar.open('Exporting...');\r\n    this.exportAppService.exportForVersionControl({ includeContentGroups: true, resetAppGuid: false, withFiles }).subscribe({\r\n      next: result => {\r\n        this.snackBar.open('Export completed into the \\'App_Data\\' folder.', null, { duration: 3000 });\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Export failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n\r\n  resetApp(withFiles: boolean) {\r\n    if (!confirm('Are you sure? All changes since last xml export will be lost')) { return; }\r\n    this.snackBar.open('Resetting...');\r\n    this.importAppPartsService.resetApp(withFiles).subscribe({\r\n      next: result => {\r\n        this.snackBar.open(\r\n          'Reset worked! Since this is a complex operation, please restart the Website to ensure all caches are correct',\r\n          null,\r\n          { duration: 30000 },\r\n        );\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.snackBar.open('Reset failed. Please check console for more information', null, { duration: 3000 });\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","@if (viewModel$ | async; as feature) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feature.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feature.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button color=\"accent\"\r\n        class=\"eav-card-action-button\" (click)=\"findOutMore(feature.link)\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </button>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<Feature>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = this.featureDetailService.getFeatureDetails(this.dialogData);\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\nexport const FeatureComponentProviders = [\r\n  FeatureDetailService,\r\n];\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  private dialog = inject(MatDialog);\r\n  private viewContainerRef = inject(ViewContainerRef);\r\n  private changeDetectorRef = inject(ChangeDetectorRef);\r\n  protected featuresService = inject(FeaturesService);\r\n\r\n  constructor() {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.isEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef.markForCheck();\r\n}"],"x_google_ignoreList":[]}