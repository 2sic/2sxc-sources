{"version":3,"file":"projects_eav-ui_src_app_content-items_import-content-item_import-content-item_component_ts-pr-3ed00c.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item.component.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item.component.html","./projects/eav-ui/src/app/content-type-fields/services/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, UploadTypes } from '../../shared/components/file-upload-dialog';\r\nimport { ContentItemsService } from '../services/content-items.service';\r\n\r\n@Component({\r\n  selector: 'app-import-content-item',\r\n  templateUrl: './import-content-item.component.html',\r\n  styleUrls: ['./import-content-item.component.scss'],\r\n  standalone: true,\r\n  imports: [FileUploadDialogComponent,],\r\n})\r\nexport class ImportContentItemComponent {\r\n\r\n  uploadType = UploadTypes.ContentItem;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) dialogData: FileUploadDialogData, contentItemsService: ContentItemsService) {\r\n    dialogData.title ??= `Import Single Item`;\r\n    dialogData.description ??= `Select an item file (json) from your computer to import.`;\r\n    dialogData.allowedFileTypes ??= 'json';\r\n    dialogData.upload$ ??= (files) => contentItemsService.importItem(files[0]);\r\n  }\r\n\r\n}\r\n","<app-file-upload-dialog [uploadType]=\"uploadType\"></app-file-upload-dialog>","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Field, FieldInputTypeOption } from '../models/field.model';\r\nimport { InputType } from '../models/input-type.model';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\nimport { InputTypeStrict } from '../constants/input-type.constants';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputType[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<ReservedNames>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["Context","DnnContext","HttpClient","map","webApiTypeRoot","webApiTypeGet","webApiTypes","webApiTypeScopes","webApiTypeSave","webApiTypeDelete","webApiTypeImport","webApiTypeAddGhost","ContentTypesService","constructor","http","context","dnnContext","apiUrl","name","$2sxc","retrieveContentType","staticName","get","params","appId","toString","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","scopesData","scopes","old","scopeOptions","Object","keys","key","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","_","i0","ɵɵinject","i1","i2","i3","_2","factory","ɵfac","MAT_DIALOG_DATA","FileUploadDialogComponent","UploadTypes","ContentItemsService","ImportContentItemComponent","dialogData","contentItemsService","uploadType","ContentItem","title","description","allowedFileTypes","upload$","importItem","ɵɵdirectiveInject","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ImportContentItemComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","styles","webApiFieldsRoot","webApiFieldsAll","webApiFieldsGetShared","ContentTypesFieldsService","typeListRetrieve","getInputTypesList","inputConfigs","inputTypeOptions","config","option","dataType","Type","substring","indexOf","inputType","label","Label","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","contentTypeStaticName","fields","fld","Metadata","md","allMd","All","typeMd","inputMd","InputType","merged","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","AppId","ContentTypeId","SourceType","SourceField","share","inherit","inheritMetadataOf","reOrder","idArray","Id","order","JSON","stringify","setTitle","item","rename","fieldId","IsTitle","Error","add","newField","Index","SortOrder","updateInputType","id","field","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","readAsText"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}