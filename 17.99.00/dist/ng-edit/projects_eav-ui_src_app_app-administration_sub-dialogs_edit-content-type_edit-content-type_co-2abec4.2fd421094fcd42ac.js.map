{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_edit-content-type_edit-content-type_co-2abec4.2fd421094fcd42ac.js","mappings":"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","names":["typeNameRegExCleaned","toString","contentTypeNamePattern","substring","length","i0","ctx_r1","contentTypeNameError","EditContentTypeComponent_Conditional_0_Conditional_4_Conditional_10_Conditional_0_Template","EditContentTypeComponent_Conditional_0_Conditional_4_Conditional_10_Conditional_1_Template","name_r3","errors","required","pattern","scopeOption_r4","value","name","vm_r5","contentType","SharedDefId","_r1","save","$event","changeContentTypeName","EditContentTypeComponent_Conditional_0_Conditional_4_Conditional_10_Template","changeScope","EditContentTypeComponent_Conditional_0_Conditional_4_For_24_Template","unlockScope","EditContentTypeComponent_Conditional_0_Conditional_4_Conditional_39_Template","closeDialog","Name","touched","disableAnimation","Scope","lockScope","scopeOptions","dropdownInsertValue","StaticName","ngForm_r6","form","valid","loading","EditContentTypeComponent_Conditional_0_Conditional_4_Template","contentTypeStaticName","ctx","EditContentTypeComponent","constructor","dialogRef","route","snackBar","this","hostClass","contentTypesService","transient","ContentTypesService","snapshot","paramMap","get","contentType$","BehaviorSubject","lockScope$","scopeOptions$","disableAnimation$","loading$","viewModel$","combineLatest","pipe","map","scope","parent","ngOnInit","retrieveContentType","ChangeStaticName","NewStaticName","of","Description","scopes$","getScopes","subscribe","next","newScopes","forEach","scopeOption","some","push","ngOnDestroy","complete","ngAfterViewInit","setTimeout","close","newName","newScope","prompt","eavConstants","scopes","default","option","open","result","duration","document","activeElement","HTMLElement","blur","static","t","i1","i2","i3","fesm2022_core","VBU","selectors","hostVars","hostBindings","rf","EditContentTypeComponent_Conditional_0_Template","tmp_0_0","FormsModule","i4","MatFormFieldModule","i5","MatInputModule","i6","MatExpansionModule","i7","MatSelectModule","i8","i9","MatOptionModule","MatButtonModule","i10","MatIconModule","i11","MatDialogActions","AsyncPipe","FieldHintComponent","ClickStopPropagationDirective","TippyDirective","styles","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","isError","isShort","toggleIsShort","_angular_core__WEBPACK_IMPORTED_MODULE_0__","inputs","standalone","features","ngContentSelectors","_c0","decls","vars","consts","template","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","_c1","tmp_2_0","NgClass","NgTemplateOutlet","onClick","event","stopPropagation","FsC"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/constants/content-type.patterns.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts"],"sourcesContent":["/**\r\n * This is for the angular UI.\r\n * Note that since ca. 2023 the last \"-\" literal character must be escaped using \"\\-\"\r\n * because of changes in how browsers handle regular expressions, aka the /v flag.\r\n */\r\nconst contentTypeNameRegEx = /(^[A-Za-z][A-Za-z0-9]*$)|(^@[A-Za-z][A-Za-z0-9\\-]*$)/;\r\nconst typeNameRegExCleaned = contentTypeNameRegEx.toString();\r\nconst removeSlashAtStartAndEnd = typeNameRegExCleaned.substring(1, typeNameRegExCleaned.toString().length - 1);\r\n\r\n/**\r\n * The pattern determines what content-type names are allowed.\r\n * Basically it's A-Z and numbers after the first digit.\r\n * But there are two exceptions:\r\n *  - types describing an input-type begin with an `@` and can also contain `-` chars\r\n *  - types beginning with an `|` are very old type names for data-sources, they can contain anything!\r\n */\r\nexport const contentTypeNamePattern = removeSlashAtStartAndEnd;\r\nexport const contentTypeNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n\r\n// 2020-04-29 2dm - temporarily used this pattern while renaming unique named types containing '|' chars\r\n// export const contentTypeNamePattern = /(^[A-Za-z][A-Za-z0-9]+$)|(^@[A-Za-z][A-Za-z0-9-]*$)|(^\\|.*$)/;\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ contentTypeStaticName ? 'Edit Content Type' : 'New Content Type' }}</div>\r\n    </div>\r\n    @if (vm.contentType) {\r\n      <form #ngForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n        <div class=\"eav-dialog-content\">\r\n          <div>\r\n            <div class=\"eav-edit-input\">\r\n              <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                <mat-label>Name</mat-label>\r\n                <input matInput type=\"text\" required [pattern]=\"contentTypeNamePattern\" [ngModel]=\"vm.contentType.Name\"\r\n                  (ngModelChange)=\"changeContentTypeName($event)\" name=\"Name\" #name=\"ngModel\">\r\n              </mat-form-field>\r\n              @if (name.touched && name.errors) {\r\n                @if (name.errors.required) {\r\n                  <app-field-hint [isError]=\"true\">This field is required</app-field-hint>\r\n                }\r\n                @if (name.errors.pattern) {\r\n                  <app-field-hint [isError]=\"true\">{{ contentTypeNameError }}</app-field-hint>\r\n                }\r\n              }\r\n            </div>\r\n            <mat-accordion [@.disabled]=\"vm.disableAnimation\">\r\n              <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>Advanced</mat-panel-title>\r\n                  <mat-panel-description></mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"eav-edit-input\">\r\n                  <div class=\"eav-form-and-button\">\r\n                    <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                      <mat-label>Scope</mat-label>\r\n                      <mat-select [ngModel]=\"vm.contentType.Scope\" name=\"Scope\" (ngModelChange)=\"changeScope($event)\"\r\n                        [disabled]=\"vm.lockScope\">\r\n                        @for (scopeOption of vm.scopeOptions; track scopeOption) {\r\n                          <mat-option [value]=\"scopeOption.value\">\r\n                            {{ scopeOption.name }}\r\n                          </mat-option>\r\n                        }\r\n                        <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <button mat-icon-button type=\"button\" matTextSuffix [tippy]=\"vm.lockScope ? 'Unlock' : 'Lock'\"\r\n                      class=\"eav-scope-button\" (click)=\"unlockScope()\">\r\n                      <mat-icon>\r\n                        {{ vm.lockScope ? 'lock' : 'lock_open' }}\r\n                      </mat-icon>\r\n                    </button>\r\n                  </div>\r\n                  <app-field-hint>\r\n                    The scope should almost never be changed -\r\n                    <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n                  </app-field-hint>\r\n                </div>\r\n                <div class=\"eav-edit-input\">\r\n                  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                    <mat-label>Static Name</mat-label>\r\n                    <input matInput type=\"text\" [ngModel]=\"vm.contentType.StaticName\" name=\"StaticName\" disabled>\r\n                  </mat-form-field>\r\n                </div>\r\n                @if (vm.contentType.SharedDefId) {\r\n                  <div class=\"eav-edit-input\">\r\n                    <h3>Shared Content Type (Ghost)</h3>\r\n                    <p>Note: this can't be edited in the UI, for now if you really know what you're doing, do it in the DB\r\n                    </p>\r\n                    <p>Uses Type Definition of: {{ vm.contentType.SharedDefId }}</p>\r\n                  </div>\r\n                }\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n        <mat-dialog-actions align=\"end\">\r\n          <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n          <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!ngForm.form.valid || vm.loading\">\r\n            Save\r\n          </button>\r\n        </mat-dialog-actions>\r\n      </form>\r\n    }\r\n  </div>\r\n}\r\n","import { AfterViewInit, Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, of } from 'rxjs';\r\nimport { dropdownInsertValue } from '../../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { contentTypeNameError, contentTypeNamePattern } from '../../constants/content-type.patterns';\r\nimport { ContentTypeEdit } from '../../models/content-type.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-edit-content-type',\r\n  templateUrl: './edit-content-type.component.html',\r\n  styleUrls: ['./edit-content-type.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    FieldHintComponent,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class EditContentTypeComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n\r\n  contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  /** RegEx property to use in HTML */\r\n  contentTypeNamePattern = contentTypeNamePattern;\r\n  contentTypeNameError = contentTypeNameError;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n\r\n  private contentType$ = new BehaviorSubject<ContentTypeEdit>(null);\r\n  private lockScope$ = new BehaviorSubject(true);\r\n  private scopeOptions$ = new BehaviorSubject<ScopeOption[]>(null);\r\n  private disableAnimation$ = new BehaviorSubject(true);\r\n  private loading$ = new BehaviorSubject(false);\r\n  viewModel$ = combineLatest([this.contentType$, this.lockScope$, this.scopeOptions$, this.disableAnimation$, this.loading$]).pipe(\r\n    map(([contentType, lockScope, scopeOptions, disableAnimation, loading]) =>\r\n      ({ contentType, lockScope, scopeOptions, disableAnimation, loading })),\r\n  );\r\n  private scope = this.route.snapshot.parent.paramMap.get('scope');\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditContentTypeComponent>,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const contentType$ = this.contentTypeStaticName\r\n      ? this.contentTypesService.retrieveContentType(this.contentTypeStaticName)\r\n        .pipe(\r\n          map(contentType => {\r\n            const contentTypeEdit: ContentTypeEdit = {\r\n              ...contentType,\r\n              ChangeStaticName: false,\r\n              NewStaticName: contentType.StaticName,\r\n            };\r\n            return contentTypeEdit;\r\n          }),\r\n        )\r\n      : of({\r\n        StaticName: '',\r\n        Name: '',\r\n        Description: '',\r\n        Scope: this.scope,\r\n        ChangeStaticName: false,\r\n        NewStaticName: '',\r\n      } as ContentTypeEdit);\r\n    const scopes$ = this.contentTypesService.getScopes();\r\n    combineLatest([contentType$, scopes$]).subscribe(([contentType, scopeOptions]) => {\r\n      this.contentType$.next(contentType);\r\n\r\n      const newScopes = [...(this.scopeOptions$.value ?? [])];\r\n      scopeOptions.forEach(scopeOption => {\r\n        if (!newScopes.some(scope => scope.value === scopeOption.value)) {\r\n          newScopes.push(scopeOption);\r\n        }\r\n      });\r\n      if (!newScopes.some(scope => scope.value === this.scope)) {\r\n        const newScopeOption: ScopeOption = {\r\n          name: this.scope,\r\n          value: this.scope,\r\n        };\r\n        newScopes.push(newScopeOption);\r\n      }\r\n      this.scopeOptions$.next(newScopes);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.lockScope$.complete();\r\n    this.scopeOptions$.complete();\r\n    this.disableAnimation$.complete();\r\n    this.loading$.complete();\r\n  }\r\n\r\n  // workaround for angular component issue #13870\r\n  ngAfterViewInit() {\r\n    // timeout required to avoid ExpressionChangedAfterItHasBeenCheckedError\r\n    setTimeout(() => this.disableAnimation$.next(false));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeContentTypeName(newName: string) {\r\n    this.contentType$.next({ ...this.contentType$.value, Name: newName });\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n      if (!this.scopeOptions$.value.some(option => option.value === newScope)) {\r\n        const newScopeOption: ScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        this.scopeOptions$.next([newScopeOption, ...this.scopeOptions$.value]);\r\n      }\r\n    }\r\n    this.contentType$.next({ ...this.contentType$.value, Scope: newScope });\r\n  }\r\n\r\n  unlockScope() {\r\n    this.lockScope$.next(!this.lockScope$.value);\r\n    if (this.lockScope$.value) {\r\n      this.contentType$.next({ ...this.contentType$.value, Scope: this.scope });\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Saving...');\r\n    this.contentTypesService.save(this.contentType$.value).subscribe(result => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule, NgClass, NgTemplateOutlet\r\n  ]\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\nconst logThis = false;\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]',\r\n  standalone: true,\r\n})\r\nexport class ClickStopPropagationDirective {\r\n  constructor() {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.constructor');\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    if (logThis)\r\n      console.log('ClickStopPropagationDirective.onClick', event);\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}