{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_views-usage_views-usage_component_ts.1f71a40067da0209.js","mappings":"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","names":["blockIdValueGetter","params","data","Block","Id","Guid","moduleIdValueGetter","Module","UsageId","Title","moduleIdClassGetter","value","split","pageIdValueGetter","PageId","pageIdClassGetter","nameClassGetter","onNameClicked","window","open","Url","statusCellRenderer","status","IsVisible","IsDeleted","i0","_r1","ctx_r1","copy","tooltip","id","ViewsUsageIdComponent","constructor","snackBar","this","agInit","idPart","refresh","copyToClipboard","duration","static","t","i1","fesm2022_core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","ViewsUsageIdComponent_Conditional_0_Template","MatRippleModule","i2","MatIconModule","i3","TippyDirective","styles","ViewsUsageStatusFilterComponent","isVisible","isDeleted","filterParams","isFilterActive","doesFilterPass","visiblePassed","deletedPassed","valueGetter","api","colDef","column","columnApi","context","node","getValue","field","toString","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","MatRadioModule","FormsModule","closeDialog","vm_r3","viewTooltip","viewUsage","Name","gridOptions","ViewsUsageComponent","dialogRef","route","viewUsage$","BehaviorSubject","undefined","viewTooltip$","data$","buildGridOptions","viewsService","transient","ViewsService","ngOnInit","viewGuid","snapshot","paramMap","get","getUsage","subscribe","viewUsages","next","buildData","block","Blocks","Modules","length","push","module","Page","Language","CultureCode","Status","Visible","viewModel$","combineLatest","pipe","map","ngOnDestroy","complete","close","defaultGridOptions","columnDefs","ColumnDefinitions","cellRenderer","Number","width","cellClass","TextWide","sort","onCellClicked","sortable","filter","ViewsUsageComponent_Conditional_0_Template","tmp_0_0","MatButtonModule","i4","RouterOutlet","AsyncPipe","SxcGridModule","i5"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-grid.helpers.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.helpers.ts"],"sourcesContent":["import { CellClassParams, CellClickedEvent, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { ViewUsageData, ViewUsageDataStatus } from '../../models/view-usage-data.model';\r\n\r\nexport function blockIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  return `ID: ${data.Block.Id}\\nGUID: ${data.Block.Guid}`;\r\n}\r\n\r\nexport function moduleIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.Module == null) { return; }\r\n  return `ID: ${data.Module.Id}\\nUsageId: ${data.Module.UsageId}\\nTitle: ${data.Module.Title}`;\r\n}\r\n\r\nexport function moduleIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function pageIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.PageId == null) { return; }\r\n  return `ID: ${data.PageId}`;\r\n}\r\n\r\nexport function pageIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function nameClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'primary-action highlight' : 'no-outline'}`.split(' ');\r\n}\r\n\r\nexport function onNameClicked(params: CellClickedEvent) {\r\n  if (params.value == null) { return; }\r\n  const data: ViewUsageData = params.data;\r\n  window.open(data.Url, '_blank');\r\n}\r\n\r\nexport function statusCellRenderer(params: ICellRendererParams) {\r\n  const status: ViewUsageDataStatus = params.value;\r\n  if (status == null) { return; }\r\n  return `\r\n    <div style=\"height: 100%;display: flex;align-items: center;\">\r\n      ${status.IsVisible ? '<span class=\"material-icons-outlined\">visibility</span>' : '<span class=\"material-icons-outlined\">visibility_off</span>'}\r\n      ${status.IsDeleted ? '<span style=\"margin-left: 8px;\" class=\"material-icons-outlined\">delete</span>' : ''}\r\n    </div>\r\n  `;\r\n}\r\n","@if (id) {\r\n  <div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\">\r\n    <span class=\"id\">{{ id }}</span>\r\n    <mat-icon class=\"icon\">file_copy</mat-icon>\r\n  </div>\r\n}","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { TippyDirective } from 'projects/eav-ui/src/app/shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-id',\r\n  templateUrl: './views-usage-id.component.html',\r\n  styleUrls: ['./views-usage-id.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class ViewsUsageIdComponent implements ICellRendererAngularComp {\r\n  tooltip: string;\r\n  id: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.tooltip = params.value;\r\n    if (this.tooltip == null) { return; }\r\n    const idPart = this.tooltip.split('\\n')[0];\r\n    this.id = idPart.split(' ')[1];\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ViewUsageDataStatus } from '../../../models/view-usage-data.model';\r\nimport { ViewsUsageStatusFilterModel } from './views-usage-status-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-status-filter',\r\n  templateUrl: './views-usage-status-filter.component.html',\r\n  styleUrls: ['./views-usage-status-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [MatRadioModule, FormsModule],\r\n})\r\nexport class ViewsUsageStatusFilterComponent implements IFilterAngularComp {\r\n  isVisible = '';\r\n  isDeleted = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.isVisible !== '' || this.isDeleted !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    let visiblePassed = false;\r\n    let deletedPassed = false;\r\n\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: ViewUsageDataStatus = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    if (this.isVisible !== '') {\r\n      visiblePassed = (value.IsVisible == null) ? false : value.IsVisible.toString() === this.isVisible;\r\n    } else {\r\n      visiblePassed = true;\r\n    }\r\n    if (this.isDeleted !== '') {\r\n      deletedPassed = (value.IsDeleted == null) ? false : value.IsDeleted.toString() === this.isDeleted;\r\n    } else {\r\n      deletedPassed = true;\r\n    }\r\n    return visiblePassed && deletedPassed;\r\n  }\r\n\r\n  getModel(): ViewsUsageStatusFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'views-usage-status',\r\n      isVisible: this.isVisible,\r\n      isDeleted: this.isDeleted,\r\n    };\r\n  }\r\n\r\n  setModel(model: ViewsUsageStatusFilterModel) {\r\n    this.isVisible = model ? model.isVisible : '';\r\n    this.isDeleted = model ? model.isDeleted : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<div class=\"title\">Visible</div>\r\n<mat-radio-group [(ngModel)]=\"isVisible\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Visible</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Hidden</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Deleted</div>\r\n<mat-radio-group [(ngModel)]=\"isDeleted\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Is deleted</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Is not deleted</mat-radio-button>\r\n</mat-radio-group>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"nav-component-wrapper\">\r\n    <div mat-mdc-dialog-title>\r\n      <div class=\"dialog-title-box\">\r\n        <div [tippy]=\"vm.viewTooltip\">View: {{ vm.viewUsage?.Name }}</div>\r\n        <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <p class=\"dialog-description\">\r\n      This shows where this view is being used. Read about the\r\n      <a href=\"https://go.2sxc.org/content-in-dnn\" target=\"_blank\">connections between DNN and 2sxc Views</a>\r\n      to make good decisions if you're doing clean-up or just want to better know what this is all about.\r\n      <em>Before you get confused about some things you see here, do read the FAQ on that page.</em>\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <div class=\"grid-wrapper\">\r\n      <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.data\" [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n      <div class=\"grid-more-actions-box\"></div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\nimport { ViewsService } from '../../services/views.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { blockIdValueGetter, moduleIdClassGetter, moduleIdValueGetter, nameClassGetter, onNameClicked, pageIdClassGetter, pageIdValueGetter, statusCellRenderer } from './views-usage-grid.helpers';\r\nimport { ViewsUsageIdComponent } from './views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from './views-usage-status-filter/views-usage-status-filter.component';\r\nimport { buildData } from './views-usage.helpers';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-views-usage',\r\n  templateUrl: './views-usage.component.html',\r\n  styleUrls: ['./views-usage.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class ViewsUsageComponent implements OnInit, OnDestroy {\r\n  viewUsage$ = new BehaviorSubject<ViewUsage>(undefined);\r\n  viewTooltip$ = new BehaviorSubject(undefined);\r\n  data$ = new BehaviorSubject<ViewUsageData[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  viewModel$: Observable<ViewsUsageViewModel>;\r\n\r\n  private viewsService = transient(ViewsService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ViewsUsageComponent>,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const viewGuid = this.route.snapshot.paramMap.get('guid');\r\n    this.viewsService.getUsage(viewGuid).subscribe(viewUsages => {\r\n      const viewUsage = viewUsages[0];\r\n      this.viewUsage$.next(viewUsage);\r\n      const viewTooltip = `ID: ${viewUsage.Id}\\nGUID: ${viewUsage.Guid}`;\r\n      this.viewTooltip$.next(viewTooltip);\r\n      const data = buildData(viewUsage);\r\n      this.data$.next(data);\r\n    });\r\n\r\n    this.viewModel$ = combineLatest([this.viewUsage$, this.viewTooltip$, this.data$]).pipe(\r\n      map(([viewUsage, viewTooltip, data]) => ({ viewUsage, viewTooltip, data }))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.viewUsage$.complete();\r\n    this.viewTooltip$.complete();\r\n    this.data$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          field: 'Block',\r\n          valueGetter: blockIdValueGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Module',\r\n          width: 80,\r\n          valueGetter: moduleIdValueGetter,\r\n          cellClass: moduleIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Page',\r\n          valueGetter: pageIdValueGetter,\r\n          cellClass: pageIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Name',\r\n          sort: 'asc',\r\n          cellClass: nameClassGetter,\r\n          onCellClicked: onNameClicked,\r\n        },\r\n        {\r\n          field: 'Language',\r\n          width: 90,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 80,\r\n          cellClass: 'icon no-outline'.split(' '),\r\n          filter: ViewsUsageStatusFilterComponent,\r\n          cellRenderer: statusCellRenderer,\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface ViewsUsageViewModel {\r\n  viewUsage: ViewUsage;\r\n  viewTooltip: any;\r\n  data: ViewUsageData[];\r\n}\r\n","import { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\n\r\nexport function buildData(viewUsage: ViewUsage) {\r\n  const data: ViewUsageData[] = [];\r\n  for (const block of viewUsage.Blocks) {\r\n    if (block.Modules.length === 0) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n      });\r\n    }\r\n    for (const module of block.Modules) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n        Module: module,\r\n        PageId: module.Page.Id,\r\n        Name: module.Page.Name,\r\n        Url: module.Page.Url,\r\n        Language: module.Page.CultureCode,\r\n        Status: { IsVisible: module.Page.Visible, IsDeleted: module.IsDeleted },\r\n      });\r\n    }\r\n  }\r\n  return data;\r\n}\r\n"],"x_google_ignoreList":[]}