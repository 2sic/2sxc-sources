{"version":3,"file":"projects_eav-ui_src_app_app-administration_data_data_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/data/data-actions/data-actions.component.ts","./projects/eav-ui/src/app/app-administration/data/data-actions/data-actions.component.html","./projects/eav-ui/src/app/app-administration/data/data-fields/data-fields.component.ts","./projects/eav-ui/src/app/app-administration/data/data-fields/data-fields.component.html","./projects/eav-ui/src/app/app-administration/data/data-items/data-items.component.ts","./projects/eav-ui/src/app/app-administration/data/data-items/data-items.component.html","./projects/eav-ui/src/app/app-administration/data/data.component.ts","./projects/eav-ui/src/app/app-administration/data/data.component.html"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { guidRegex } from '../../../shared/constants/guid.constants';\r\nimport { ContentType } from '../../models/content-type.model';\r\nimport { DataActionsParams, DataActionType } from './data-actions.models';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-data-actions',\r\n  templateUrl: './data-actions.component.html',\r\n  styleUrls: ['./data-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatMenuModule,\r\n  ],\r\n})\r\nexport class DataActionsComponent implements ICellRendererAngularComp {\r\n  contentType: ContentType;\r\n  enablePermissions: boolean;\r\n  private params: ICellRendererParams & DataActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & DataActionsParams): void {\r\n    this.params = params;\r\n    this.contentType = this.params.data;\r\n    const enablePermissions = this.params.enablePermissionsGetter();\r\n    this.enablePermissions = enablePermissions && guidRegex().test(this.contentType.StaticName);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  do(verb: DataActionType): void {\r\n    this.params.do(verb, this.contentType);\r\n  }\r\n\r\n}\r\n","<div class=\"actions-component\">\r\n  @if (!contentType.EditInfo.DisableEdit || contentType.Properties) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple\r\n      tippy=\"Description and more\"\r\n      (click)=\"do('createUpdateMetaData')\">\r\n      <mat-icon>edit</mat-icon>\r\n    </div>\r\n  }\r\n  @if (contentType.EditInfo.DisableEdit && !contentType.Properties) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>edit</mat-icon>\r\n    </div>\r\n  }\r\n\r\n  @if (!contentType.EditInfo.DisableMetadata) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Metadata\"\r\n      (click)=\"do('openMetadata')\">\r\n      <mat-icon [matBadge]=\"contentType.Metadata.length\" matBadgePosition=\"below after\" matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\" [matBadgeHidden]=\"!contentType.Metadata.length\" aria-hidden=\"false\">\r\n        local_offer\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n  @if (contentType.EditInfo.DisableMetadata) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon [matBadge]=\"contentType.Metadata.length\" matBadgePosition=\"below after\" matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\" matBadgeDisabled=\"true\" [matBadgeHidden]=\"!contentType.Metadata.length\" aria-hidden=\"false\">\r\n        local_offer\r\n      </mat-icon>\r\n    </div>\r\n  }\r\n\r\n  @if (!contentType.EditInfo.DisableEdit && enablePermissions) {\r\n    <div class=\"eav-grid-action-button highlight\" matRipple\r\n      tippy=\"Permissions\" (click)=\"do('openPermissions')\">\r\n      <mat-icon [matBadge]=\"contentType.Permissions.Count\" matBadgePosition=\"below after\" matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\" [matBadgeHidden]=\"!contentType.Permissions.Count\" aria-hidden=\"false\">\r\n      person</mat-icon>\r\n    </div>\r\n  }\r\n  @if (contentType.EditInfo.DisableEdit || !enablePermissions) {\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon [matBadge]=\"contentType.Permissions.Count\" matBadgePosition=\"below after\" matBadgeColor=\"accent\"\r\n        matBadgeSize=\"small\" matBadgeDisabled=\"true\" [matBadgeHidden]=\"!contentType.Permissions.Count\"\r\n        aria-hidden=\"false\">\r\n      person</mat-icon>\r\n    </div>\r\n  }\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item [disabled]=\"contentType.EditInfo.DisableRename\" (click)=\"do('editContentType')\">\r\n      <mat-icon>settings</mat-icon>\r\n      <span>Rename</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"do('openRestApi')\">\r\n      <mat-icon svgIcon=\"code-curly\"></mat-icon>\r\n      <span>REST API</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"do('typeExport')\">\r\n      <mat-icon>cloud_download</mat-icon>\r\n      <span>Export content type</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"do('dataExport')\">\r\n      <mat-icon>cloud_download</mat-icon>\r\n      <span>Export data</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"do('dataImport')\">\r\n      <mat-icon>cloud_upload</mat-icon>\r\n      <span>Import data</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"contentType.EditInfo.DisableDelete\" (click)=\"do('deleteContentType')\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ContentType } from '../../models/content-type.model';\r\nimport { DataFieldsParams } from './data-fields.models';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-data-fields',\r\n  templateUrl: './data-fields.component.html',\r\n  styleUrls: ['./data-fields.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class DataFieldsComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n  tooltip: string;\r\n  icon: string;\r\n\r\n  private params: ICellRendererParams & DataFieldsParams;\r\n  private contentType: ContentType;\r\n\r\n  agInit(params: ICellRendererParams & DataFieldsParams): void {\r\n    this.params = params;\r\n    this.contentType = params.data;\r\n    this.value = params.value;\r\n    this.tooltip = !this.contentType.EditInfo.ReadOnly\r\n      ? 'Edit fields'\r\n      : `${this.contentType.EditInfo.ReadOnlyMessage ? `${this.contentType.EditInfo.ReadOnlyMessage}\\n\\n` : ''}This ContentType shares the definition of #${this.contentType.SharedDefId} so you can't edit it here. Read 2sxc.org/help?tag=shared-types`;\r\n    this.icon = !this.contentType.EditInfo.ReadOnly ? 'dns' : 'share';\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  editFields(): void {\r\n    this.params.onEditFields(this.contentType);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple [tippy]=\"tooltip\" (click)=\"editFields()\">\r\n    <mat-icon [matBadge]=\"value\" matBadgePosition=\"below after\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\r\n      [matBadgeHidden]=\"!value\" aria-hidden=\"false\">\r\n      {{icon}}\r\n    </mat-icon>\r\n  </div>\r\n</div>","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ContentType } from '../../models';\r\nimport { DataItemsParams } from './data-items.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-data-items',\r\n  templateUrl: './data-items.component.html',\r\n  styleUrls: ['./data-items.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class DataItemsComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n  private params: DataItemsParams;\r\n  private contentType: ContentType;\r\n\r\n  agInit(params: ICellRendererParams & DataItemsParams): void {\r\n    this.params = params;\r\n    this.contentType = params.data;\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  showItems(): void {\r\n    this.params.onShowItems(this.contentType);\r\n  }\r\n\r\n  addItem(): void {\r\n    this.params.onAddItem(this.contentType);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"{{ value }} items\" (click)=\"showItems()\">\r\n    <div class=\"text-icon\">{{ value }}</div>\r\n  </div>\r\n\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Add item\" (click)=\"addItem()\">\r\n    <mat-icon>add</mat-icon>\r\n  </div>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, filter, from, map, startWith, take } from 'rxjs';\r\nimport { ContentExportService } from '../../content-export/services/content-export.service';\r\nimport { ContentImportDialogData } from '../../content-import/content-import-dialog.config';\r\nimport { GoToDevRest } from '../../dev-rest/go-to-dev-rest';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { GoToMetadata } from '../../metadata';\r\nimport { GoToPermissions } from '../../permissions/go-to-permissions';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { dropdownInsertValue } from '../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants } from '../../shared/constants/eav.constants';\r\nimport { toString } from '../../shared/helpers/file-to-base64.helper';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../../shared/models/edit-form.model';\r\nimport { ContentType } from '../models/content-type.model';\r\nimport { ContentTypesService } from '../services/content-types.service';\r\nimport { DataActionsComponent } from './data-actions/data-actions.component';\r\nimport { DataActionsParams } from './data-actions/data-actions.models';\r\nimport { DataFieldsComponent } from './data-fields/data-fields.component';\r\nimport { DataFieldsParams } from './data-fields/data-fields.models';\r\nimport { DataItemsComponent } from './data-items/data-items.component';\r\nimport { DataItemsParams } from './data-items/data-items.models';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\nimport { AppDialogConfigService } from '../services';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { DragAndDropDirective } from '../../shared/directives/drag-and-drop.directive';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-data',\r\n  templateUrl: './data.component.html',\r\n  styleUrls: ['./data.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogActions,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n    DragAndDropDirective,\r\n  ],\r\n})\r\nexport class DataComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n\r\n  private contentTypesService = transient(ContentTypesService);\r\n  private contentExportService = transient(ContentExportService);\r\n\r\n  contentTypes$ = new BehaviorSubject<ContentType[]>(undefined);\r\n  scope$ = new BehaviorSubject<string>(undefined);\r\n\r\n  /** Possible scopes - the ones from the backend + manually entered scopes by the current user */\r\n  scopeOptions$ = new BehaviorSubject<ScopeDetailsDto[]>([]);\r\n  gridOptions = this.buildGridOptions();\r\n  dropdownInsertValue = dropdownInsertValue;\r\n  enablePermissions!: boolean;\r\n\r\n  viewModel$ = combineLatest([this.contentTypes$, this.scope$, this.scopeOptions$, this.globalConfigService.getDebugEnabled$()]).pipe(\r\n    map(([contentTypes, scope, scopeOptions, debugEnabled]) =>\r\n      ({ contentTypes, scope, scopeOptions, debugEnabled })),\r\n  );\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private globalConfigService: GlobalConfigService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogConfigSvc: AppDialogConfigService,\r\n  ) {\r\n    super(router, route);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchScopes();\r\n    this.refreshScopeOnRouteChange();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => { this.fetchContentTypes(); }));\r\n\r\n    this.dialogConfigSvc.getCurrent$().subscribe(data => {\r\n      this.enablePermissions = data.Context.Enable.AppPermissions;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentTypes$.complete();\r\n    this.scope$.complete();\r\n    this.scopeOptions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  filesDropped(files: File[]) {\r\n    const importFile = files[0];\r\n    const ext = importFile.name.substring(importFile.name.lastIndexOf('.') + 1).toLocaleLowerCase();\r\n    switch (ext) {\r\n      case 'xml':\r\n        from(toString(files[0])).pipe(take(1)).subscribe(fileString => {\r\n          const contentTypeName = fileString.split('<Entity Type=\"')[1]?.split('\"')[0];\r\n          const contentType = this.contentTypes$.value.find(ct => ct.Name === contentTypeName);\r\n          if (contentType == null) {\r\n            const message = `Cannot find Content Type named '${contentTypeName}'. Please open Content Type Import dialog manually.`;\r\n            this.snackBar.open(message, null, { duration: 5000 });\r\n            return;\r\n          }\r\n          this.openDataImport(contentType, files);\r\n        });\r\n        break;\r\n      case 'json':\r\n        this.importType(files);\r\n        break;\r\n    }\r\n  }\r\n\r\n  importType(files?: File[]) {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route.parent.firstChild, state: dialogData });\r\n  }\r\n\r\n  private showContentItems(contentType: ContentType) {\r\n    this.router.navigate([`items/${contentType.StaticName}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  editContentType(contentType: ContentType) {\r\n    if (!contentType) {\r\n      this.router.navigate(['add'], { relativeTo: this.route.parent.firstChild });\r\n    } else {\r\n      if (contentType.EditInfo.ReadOnly) { return; }\r\n      this.router.navigate([`${contentType.StaticName}/edit`], { relativeTo: this.route.parent.firstChild });\r\n    }\r\n  }\r\n\r\n  private fetchContentTypes() {\r\n    this.contentTypesService.retrieveContentTypes(this.scope$.value).subscribe(contentTypes => {\r\n      for (const contentType of contentTypes) {\r\n        contentType._compareLabel = contentType.Label.replace(/\\p{Emoji}/gu, 'ž');\r\n      }\r\n      this.contentTypes$.next(contentTypes);\r\n      if (this.scope$.value !== eavConstants.scopes.default.value) {\r\n        const message = 'Warning! You are in a special scope. Changing things here could easily break functionality';\r\n        this.snackBar.open(message, null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  private fetchScopes() {\r\n    this.contentTypesService.getScopesV2().subscribe(scopeList => {\r\n      // Merge the new scopes with the existing ones - in case there were manual scopes added\r\n      // If old scope list had a manual scope which the server didn't send, re-add it here\r\n      const manual = this.scopeOptions$.value\r\n        .filter(sOld => scopeList.find(sNew => sNew.name === sOld.name) == null);\r\n\r\n      // Add a nice label to each scope containing count-information of types\r\n      const withNiceLabel = scopeList.map(s => {\r\n        let countInfo = !s.typesInherited\r\n          ? `${s.typesTotal} types`               // only not-inherited\r\n          : (s.typesInherited == s.typesTotal)\r\n            ? s.typesInherited + ' sys types'     // only inherited\r\n            : `${s.typesTotal} types / ${s.typesInherited} system`;\r\n        return ({ ...s, label: s.name + ` - ${countInfo}` });\r\n      });\r\n\r\n      this.scopeOptions$.next([...withNiceLabel, ...manual]);\r\n    });\r\n  }\r\n\r\n  createGhost() {\r\n    const sourceName = window.prompt('To create a ghost content-type enter source static name / id - this is a very advanced operation - read more about it on 2sxc.org/help?tag=ghost');\r\n    if (!sourceName) { return; }\r\n    this.snackBar.open('Saving...');\r\n    this.contentTypesService.createGhost(sourceName).subscribe(res => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    console.log(\"trigger\")\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n    }\r\n    this.router.navigate(['..', newScope], { relativeTo: this.route });\r\n  }\r\n\r\n  private enablePermissionsGetter() {\r\n    return this.enablePermissions;\r\n  }\r\n\r\n  private addItem(contentType: ContentType) {\r\n    const form: EditForm = {\r\n      items: [{ ContentTypeName: contentType.StaticName }],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  private editFields(contentType: ContentType) {\r\n    this.router.navigate([`fields/${contentType.StaticName}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  private createOrEditMetadata(contentType: ContentType) {\r\n    const form: EditForm = {\r\n      items: [\r\n        !contentType.Properties\r\n          ? {\r\n            ContentTypeName: eavConstants.contentTypes.contentType,\r\n            For: {\r\n              Target: eavConstants.metadata.contentType.target,\r\n              TargetType: eavConstants.metadata.contentType.targetType,\r\n              String: contentType.StaticName,\r\n            },\r\n            Prefill: {\r\n              Label: contentType.Name,\r\n              Description: contentType.Description\r\n            },\r\n          }\r\n          : { EntityId: contentType.Properties.Id }\r\n      ],\r\n    };\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  private openMetadata(contentType: ContentType) {\r\n    const url = GoToMetadata.getUrlContentType(\r\n      contentType.StaticName,\r\n      `Metadata for Content Type: ${contentType.Name} (${contentType.Id})`,\r\n    );\r\n    this.router.navigate([url], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  private openRestApi(contentType: ContentType) {\r\n    this.router.navigate([GoToDevRest.getUrlData(contentType)], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  private exportType(contentType: ContentType) {\r\n    this.contentExportService.exportJson(contentType.StaticName);\r\n  }\r\n\r\n  private openDataExport(contentType: ContentType) {\r\n    this.router.navigate([`export/${contentType.StaticName}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  private openDataImport(contentType: ContentType, files?: File[]) {\r\n    const contentImportData: ContentImportDialogData = { files };\r\n    this.router.navigate([`${contentType.StaticName}/import`], { relativeTo: this.route.parent.firstChild, state: contentImportData });\r\n  }\r\n\r\n  private openPermissions(contentType: ContentType) {\r\n    this.router.navigate([GoToPermissions.getUrlContentType(contentType.StaticName)], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n\r\n  private deleteContentType(contentType: ContentType) {\r\n    if (!confirm(`Are you sure you want to delete '${contentType.Name}' (${contentType.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.contentTypesService.delete(contentType).subscribe(result => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchContentTypes();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Refreshes the scope when the route changes.\r\n   * ...also adds a scope name if the route scope is not found in the list of possible scopes.\r\n   * This is to allow an admin to enter a custom scope.\r\n   * Note 2024-03-04 2dm - not sure if this auto-add feature is still needed though...\r\n   */\r\n  private refreshScopeOnRouteChange() {\r\n    this.subscriptions.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map(() => this.route.snapshot.paramMap.get('scope')),\r\n        startWith(this.route.snapshot.paramMap.get('scope')),\r\n        filter(scope => !!scope),\r\n        distinctUntilChanged(),\r\n      ).subscribe(scope => {\r\n        this.scope$.next(scope);\r\n\r\n        // If we can't find the scope in the list of options, add it as it was entered manually\r\n        if (!this.scopeOptions$.value.map(option => option.name).includes(scope)) {\r\n          const newScopeOption: ScopeDetailsDto = {\r\n            name: scope,\r\n            label: scope,\r\n            typesTotal: 0,\r\n            typesInherited: 0,\r\n            typesOfApp: 0,\r\n          };\r\n          this.scopeOptions$.next([...this.scopeOptions$.value, newScopeOption]);\r\n        }\r\n        this.fetchContentTypes();\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<ContentType> = {\r\n              tooltipGetter: (contentType) => `ID: ${contentType.Id}\\nGUID: ${contentType.StaticName}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideType,\r\n          headerName: 'ContentType',\r\n          field: 'Label',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const contentType: ContentType = params.data;\r\n            this.showContentItems(contentType);\r\n          },\r\n          comparator: (valueA, valueB, nodeA, nodeB, isInverted) => {\r\n            const contentTypeA: ContentType = nodeA.data;\r\n            const contentTypeB: ContentType = nodeB.data;\r\n            return contentTypeA._compareLabel.localeCompare(contentTypeB._compareLabel);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Items,\r\n          field: 'Items',\r\n          cellRenderer: DataItemsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: DataItemsParams = {\r\n              onShowItems: (contentType) => this.showContentItems(contentType),\r\n              onAddItem: (contentType) => this.addItem(contentType),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Fields,\r\n          field: 'Fields',\r\n          cellRenderer: DataFieldsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: DataFieldsParams = {\r\n              onEditFields: (contentType) => this.editFields(contentType),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideMin100,\r\n          field: 'Name',\r\n          cellClass: (params) => {\r\n            const contentType: ContentType = params.data;\r\n            return `${contentType.EditInfo.DisableEdit ? 'no-outline' : 'primary-action highlight'}`.split(' ');\r\n          },\r\n          valueGetter: (params) => {\r\n            const contentType: ContentType = params.data;\r\n            return contentType.Name;\r\n          },\r\n          onCellClicked: (params) => {\r\n            const contentType: ContentType = params.data;\r\n            this.editContentType(contentType);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideFlex3,\r\n          field: 'Description',\r\n          valueGetter: (params) => {\r\n            const contentType: ContentType = params.data;\r\n            return contentType.Properties?.Description;\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight4,\r\n          cellRenderer: DataActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: DataActionsParams = {\r\n              enablePermissionsGetter: () => this.enablePermissionsGetter(),\r\n              do: (verb, contentType) => {\r\n                switch (verb) {\r\n                  case 'createUpdateMetaData': this.createOrEditMetadata(contentType); break;\r\n                  case 'openPermissions': this.openPermissions(contentType); break;\r\n                  case 'editContentType': this.editContentType(contentType); break;\r\n                  case 'openMetadata': this.openMetadata(contentType); break;\r\n                  case 'openRestApi': this.openRestApi(contentType); break;\r\n                  case 'typeExport': this.exportType(contentType); break;\r\n                  case 'dataExport': this.openDataExport(contentType); break;\r\n                  case 'dataImport': this.openDataImport(contentType); break;\r\n                  case 'deleteContentType': this.deleteContentType(contentType); break;\r\n                }\r\n              }\r\n            } satisfies DataActionsParams;\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.contentTypes\" [gridOptions]=\"gridOptions\" appDragAndDrop\r\n    [allowedFileTypes]=\"'xml,json'\" (filesDropped)=\"filesDropped($event)\">\r\n  </ag-grid-angular>\r\n  <mat-dialog-actions class=\"eav-dialog-actions\">\r\n    <div class=\"eav-dialog-actions-div\">\r\n      <mat-form-field color=\"accent\" class=\"eav-mat-form-field eav-scope-dropdown\">\r\n        <mat-select [ngModel]=\"vm.scope\" name=\"Scope\" (ngModelChange)=\"changeScope($event)\">\r\n          @for (scopeOption of (vm.scopeOptions); track scopeOption) {\r\n          <mat-option [value]=\"scopeOption.name\">\r\n            {{ 'Scope: ' + scopeOption.label }}\r\n          </mat-option>\r\n          }\r\n          <mat-option [value]=\"dropdownInsertValue\">Scope: Other...</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <button mat-button class=\"eav-button__with-icon\" tippy=\"Import content type\" (click)=\"importType()\">\r\n        <mat-icon class=\"eav-icon\">cloud_upload</mat-icon>\r\n        <span>Content Type</span>\r\n      </button>\r\n      @if (vm.debugEnabled) {\r\n      <button mat-button class=\"eav-button__with-icon\" color=\"accent\" tippy=\"Create a ghost content type\"\r\n        (click)=\"createGhost()\">\r\n        <mat-icon class=\"eav-icon\">share</mat-icon>\r\n        <span>Ghost</span>\r\n      </button>\r\n      }\r\n    </div>\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new content type\"\r\n      (click)=\"editContentType(null)\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n}\r\n<router-outlet></router-outlet>\r\n"],"names":["guidRegex","MatMenuModule","MatBadgeModule","MatIconModule","MatRippleModule","i0","ɵɵelementStart","ɵɵlistener","DataActionsComponent_Conditional_1_Template_div_click_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","do","ɵɵtext","ɵɵelementEnd","DataActionsComponent_Conditional_3_Template_div_click_0_listener","_r3","ɵɵadvance","ɵɵproperty","contentType","Metadata","length","DataActionsComponent_Conditional_5_Template_div_click_0_listener","_r4","Permissions","Count","DataActionsComponent_ng_template_12_Template_button_click_0_listener","_r5","DataActionsComponent_ng_template_12_Template_button_click_5_listener","ɵɵelement","DataActionsComponent_ng_template_12_Template_button_click_9_listener","DataActionsComponent_ng_template_12_Template_button_click_14_listener","DataActionsComponent_ng_template_12_Template_button_click_19_listener","DataActionsComponent_ng_template_12_Template_button_click_24_listener","EditInfo","DisableRename","DisableDelete","DataActionsComponent","agInit","params","data","enablePermissions","enablePermissionsGetter","test","StaticName","refresh","verb","_","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DataActionsComponent_Template","rf","ctx","ɵɵtemplate","DataActionsComponent_Conditional_1_Template","DataActionsComponent_Conditional_2_Template","DataActionsComponent_Conditional_3_Template","DataActionsComponent_Conditional_4_Template","DataActionsComponent_Conditional_5_Template","DataActionsComponent_Conditional_6_Template","DataActionsComponent_ng_template_12_Template","ɵɵconditional","DisableEdit","Properties","DisableMetadata","menu_r6","i1","MatRipple","i2","MatIcon","i3","MatBadge","i4","MatMenu","MatMenuItem","MatMenuContent","MatMenuTrigger","styles","TippyDirective","DataFieldsComponent","value","tooltip","ReadOnly","ReadOnlyMessage","SharedDefId","icon","editFields","onEditFields","DataFieldsComponent_Template","DataFieldsComponent_Template_div_click_1_listener","ɵɵtextInterpolate1","DataItemsComponent","showItems","onShowItems","addItem","onAddItem","DataItemsComponent_Template","DataItemsComponent_Template_div_click_1_listener","DataItemsComponent_Template_div_click_4_listener","ɵɵpropertyInterpolate1","ɵɵtextInterpolate","MatSnackBar","ActivatedRoute","NavigationEnd","Router","RouterOutlet","BehaviorSubject","combineLatest","distinctUntilChanged","filter","from","map","startWith","take","ContentExportService","GoToDevRest","GlobalConfigService","GoToMetadata","GoToPermissions","BaseWithChildDialogComponent","IdFieldComponent","defaultGridOptions","dropdownInsertValue","eavConstants","toString","convertFormToUrl","ContentTypesService","AppDialogConfigService","AsyncPipe","MatButtonModule","MatOptionModule","FormsModule","MatSelectModule","MatFormFieldModule","MatDialogActions","SxcGridModule","ColumnDefinitions","DragAndDropDirective","transient","scopeOption_r3","name","label","DataComponent_Conditional_0_Conditional_15_Template_button_click_0_listener","createGhost","DataComponent_Conditional_0_Template_ag_grid_angular_filesDropped_1_listener","$event","filesDropped","DataComponent_Conditional_0_Template_mat_select_ngModelChange_5_listener","changeScope","ɵɵrepeaterCreate","DataComponent_Conditional_0_For_7_Template","ɵɵrepeaterTrackByIdentity","DataComponent_Conditional_0_Template_button_click_10_listener","importType","DataComponent_Conditional_0_Conditional_15_Template","DataComponent_Conditional_0_Template_button_click_16_listener","editContentType","vm_r5","contentTypes","gridOptions","scope","ɵɵrepeater","scopeOptions","debugEnabled","DataComponent","constructor","router","route","globalConfigService","snackBar","dialogConfigSvc","contentTypesService","contentExportService","contentTypes$","undefined","scope$","scopeOptions$","buildGridOptions","viewModel$","getDebugEnabled$","pipe","ngOnInit","fetchScopes","refreshScopeOnRouteChange","subscriptions","add","childDialogClosed$","subscribe","fetchContentTypes","getCurrent$","Context","Enable","AppPermissions","ngOnDestroy","complete","files","importFile","ext","substring","lastIndexOf","toLocaleLowerCase","fileString","contentTypeName","split","find","ct","Name","message","open","duration","openDataImport","dialogData","navigate","relativeTo","parent","firstChild","state","showContentItems","retrieveContentTypes","_compareLabel","Label","replace","next","scopes","default","getScopesV2","scopeList","manual","sOld","sNew","withNiceLabel","s","countInfo","typesInherited","typesTotal","sourceName","window","prompt","res","newScope","console","log","form","items","ContentTypeName","formUrl","createOrEditMetadata","For","Target","metadata","target","TargetType","targetType","String","Prefill","Description","EntityId","Id","openMetadata","url","getUrlContentType","openRestApi","getUrlData","exportType","exportJson","openDataExport","contentImportData","openPermissions","deleteContentType","confirm","delete","result","events","event","snapshot","paramMap","get","option","includes","newScopeOption","typesOfApp","columnDefs","cellRenderer","cellRendererParams","tooltipGetter","TextWideType","headerName","field","sort","onCellClicked","comparator","valueA","valueB","nodeA","nodeB","isInverted","contentTypeA","contentTypeB","localeCompare","Items","Fields","TextWideMin100","cellClass","valueGetter","TextWideFlex3","ActionsPinnedRight4","ɵɵdirectiveInject","ɵɵInheritDefinitionFeature","DataComponent_Template","DataComponent_Conditional_0_Template","tmp_0_0","ɵɵpipeBind1","i5","MatFormField","i6","MatSelect","i7","MatOption","i8","NgControlStatus","NgModel","i9","MatButton","MatFabButton","i10","i11","AgGridAngular"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}