{"version":3,"file":"default-projects_eav-ui_src_app_features_feature-names_ts-projects_eav-ui_src_app_features_sh-a1b9be.js","mappings":"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","sources":["./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.ts","./projects/eav-ui/src/app/features/feature-info-dialog/feature-info-dialog.component.html","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/features/services/feature-detail.service.ts","./projects/eav-ui/src/app/features/shared/base-feature.component.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { Feature } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-feature-info-dialog',\r\n  templateUrl: './feature-info-dialog.component.html',\r\n  styleUrls: ['./feature-info-dialog.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AsyncPipe,\r\n    TranslateModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ]\r\n})\r\nexport class FeatureInfoDialogComponent implements OnInit {\r\n  viewModel$: Observable<Feature>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: string,\r\n    private dialogRef: MatDialogRef<FeatureInfoDialogComponent>,\r\n    private snackBar: MatSnackBar,\r\n    private featureDetailService: FeatureDetailService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.viewModel$ = this.featureDetailService.getFeatureDetails(this.dialogData);\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  findOutMore(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","@if (viewModel$ | async; as feature) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature.name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature.description | safeHtml\"></p>\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">{{ \"Features.Status\" | translate }}:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ (feature.isEnabled ? \"Features.Active\" : \"Features.NotActive\") | translate }}</span>\r\n        </div>\r\n      </div>\r\n      @if (feature.nameId; as id) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">ID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span [tippy]=\"id\" (click)=\"copyToClipboard(id)\">{{ id }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-raised-button color=\"accent\"\r\n        class=\"eav-card-action-button\" (click)=\"findOutMore(feature.link)\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        {{ \"Features.FindOutMore\" | translate }}\r\n      </button>\r\n      <button mat-raised-button class=\"eav-card-action-button\" (click)=\"closeDialog()\">\r\n        {{ \"Features.Close\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  FieldShareConfigManagement: 'FieldShareConfigManagement',\r\n};\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../models';\r\n\r\nexport const webApiRoot = \"admin/feature/\";\r\n\r\n@Injectable()\r\nexport class FeatureDetailService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dnnContext: DnnContext\r\n  ) { }\r\n\r\n  getFeatureDetails(featureNameId: string): Observable<Feature> {\r\n    return this.http.get<Feature>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot + 'details'), {\r\n      params: { nameId: featureNameId }\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, ViewContainerRef, inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FeaturesService } from '../../shared/services/features.service';\r\nimport { FeatureInfoDialogComponent } from '../feature-info-dialog/feature-info-dialog.component';\r\nimport { BehaviorSubject, switchMap, Observable, map, combineLatest } from 'rxjs';\r\nimport { FeatureSummary } from '../models';\r\nimport { FeatureDetailService } from '../services/feature-detail.service';\r\n\r\nexport const FeatureComponentProviders = [\r\n  FeatureDetailService,\r\n];\r\n\r\n@Directive()\r\nexport class FeatureComponentBase {\r\n  /** Feature NameId to check */\r\n  @Input()\r\n  public set featureNameId(value: string) { this.featureNameId$.next(value); }\r\n  protected featureNameId$ = new BehaviorSubject<string>(null);\r\n\r\n  /** By default, it will show if it's false - here we can change it to show if true */\r\n  @Input()\r\n  public set showIf(value: boolean) { this.showIf$.next(value == true); }\r\n  protected showIf$ = new BehaviorSubject<boolean>(false);\r\n\r\n  // TODO: @SDV - MAKE REACTIVE - SEE text-info-component example\r\n  // featureOn: boolean = true;\r\n  feature$: Observable<FeatureSummary>;\r\n  show$: Observable<boolean>;\r\n\r\n  private dialog = inject(MatDialog);\r\n  private viewContainerRef = inject(ViewContainerRef);\r\n  private changeDetectorRef = inject(ChangeDetectorRef);\r\n  protected featuresService = inject(FeaturesService);\r\n\r\n  constructor() {\r\n    this.feature$ = this.featureNameId$.pipe(\r\n      switchMap(featName => this.featuresService.get$(featName)\r\n    ));\r\n    this.show$ = combineLatest([this.feature$, this.showIf$]).pipe(\r\n      // tap(data => console.log('2dm - show$', data)),\r\n      map(([feat,showIf]) => showIf == (feat?.isEnabled ?? false))\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    openFeatureDialog(this.dialog, this.featureNameId$.value, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n}\r\n\r\n\r\nexport function openFeatureDialog(dialog: MatDialog, featureId: string, viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\r\n  dialog.open(FeatureInfoDialogComponent, {\r\n    autoFocus: false,\r\n    data: featureId,\r\n    viewContainerRef: viewContainerRef,\r\n    width: '400px',\r\n  });\r\n\r\n  changeDetectorRef.markForCheck();\r\n}"],"names":["MatDialogRef","MAT_DIALOG_DATA","MatSnackBar","copyToClipboard","FeatureDetailService","TranslateModule","AsyncPipe","MatIconModule","MatButtonModule","MatCardModule","TippyDirective","SafeHtmlPipe","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template_span_click_4_listener","id_r3","ɵɵrestoreView","_r2","ctx_r3","ɵɵnextContext","ɵɵresetView","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","ɵɵelement","ɵɵtemplate","FeatureInfoDialogComponent_Conditional_0_Conditional_15_Template","FeatureInfoDialogComponent_Conditional_0_Template_button_click_17_listener","feature_r5","_r1","findOutMore","link","FeatureInfoDialogComponent_Conditional_0_Template_button_click_22_listener","closeDialog","name","ɵɵpipeBind1","description","ɵɵsanitizeHtml","ɵɵtextInterpolate1","isEnabled","ɵɵconditional","tmp_6_0","nameId","FeatureInfoDialogComponent","constructor","dialogData","dialogRef","snackBar","featureDetailService","ngOnInit","viewModel$","getFeatureDetails","text","open","duration","window","close","_","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FeatureInfoDialogComponent_Template","rf","ctx","FeatureInfoDialogComponent_Conditional_0_Template","tmp_0_0","i4","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardTitle","i5","MatButton","i6","MatIcon","i7","TranslatePipe","styles","FeatureNames","AppSyncWithSiteFiles","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","LightSpeed","ContentSecurityPolicy","PermissionsByLanguage","FieldShareConfigManagement","Context","DnnContext","HttpClient","webApiRoot","http","dnnContext","featureNameId","get","$2sxc","apiUrl","params","ɵɵinject","factory","ɵfac","ChangeDetectorRef","ViewContainerRef","inject","MatDialog","FeaturesService","BehaviorSubject","switchMap","map","combineLatest","FeatureComponentProviders","FeatureComponentBase","value","featureNameId$","next","showIf","showIf$","dialog","viewContainerRef","changeDetectorRef","featuresService","feature$","pipe","featName","get$","show$","feat","openDialog","openFeatureDialog","inputs","featureId","autoFocus","data","width","markForCheck"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}