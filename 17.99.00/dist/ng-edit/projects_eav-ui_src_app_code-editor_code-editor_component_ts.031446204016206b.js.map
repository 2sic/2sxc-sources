{"version":3,"file":"projects_eav-ui_src_app_code-editor_code-editor_component_ts.031446204016206b.js","mappings":"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","names":["webApiTypeRoot","webApiTypeScopes","ContentTypesService","constructor","http","context","dnnContext","this","apiUrl","name","$2sxc","retrieveContentType","staticName","get","params","appId","toString","contentTypeId","retrieveContentTypes","scope","getScopes","pipe","map","scopesData","scopes","old","Object","keys","key","value","getScopesV2","save","contentType","post","appid","delete","StaticName","import","files","formData","FormData","file","append","zoneId","createGhost","sourceStaticName","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","jDH","factory","ɵfac","ctx_r0","snackBarData","fileName","codeFile","edition","CodeAndEditionWarningsComponent_Conditional_2_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Conditional_3_Template","otherEditions","_r2","openCodeBehind","CodeAndEditionWarningsComponent","snackRef","dismissWithAction","MAT_SNACK_BAR_DATA","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","CodeAndEditionWarningsComponent_Conditional_1_Template","CodeAndEditionWarningsComponent_Conditional_2_Template","CodeAndEditionWarningsComponent_Conditional_4_Template","MatButtonModule","styles","Explorers","Templates","Snippets","SnippetsService","translate","getTooltips","language","getSnippets","view","res","relevant","filterAwayNotNeededSnippetsList","snippets","standardAndInputSnips","extractInputTypeSnippets","sets","initSnippetsWithConfig","standardArray","inputTypeSnippets","list","keyPrefixes","keyPrefixIndex","v","Type","indexOf","newList","itm","setHasPrefix","set","substring","push","inputTypeArray","catalogInputTypeSnippets","inputTypeList","undefined","subset","templateConfiguration","makeTree","Content","assign","Fields","PresentationFields","TypeContent","loadContentType","TypeContentPresentation","HasList","List","TypeList","TypeListPresentation","HasApp","App","Resources","Settings","tree","o","reformatted","label","snip","content","help","links","linksList","getHelpKey","result","instant","addition","linksString","llist","split","l","pair","length","link","trim","url","target","type","prefix","getFields","AppId","subscribe","fields","field","fieldname","valuePlaceholder","Metadata","merged","Notes","toLowerCase","snipDefaults","cloneDeep","attachSnippets","InputType","std","i","obj","val","replace","webApiFieldsAll","filter","DataTypeConstants","Empty","fld","md","All","inputType","genericSnippet","fieldType","typeSnips","concat","more","fieldSnips","g","localizeGenericSnippet","collapse","objName","fieldName","ObjectToArrayPipe","transform","Array","isArray","values","EJ8","pure","_r8","snippet_r7","$implicit","ctx_r2","toggleMore","toggledMores","includes","link_r9","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_7_For_4_Template","link_r12","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_For_1_Conditional_6_For_4_Template","more_r11","_r10","addSnippet","toggleInfo","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_For_1_Conditional_6_Template","toggledInfos","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_For_1_Template","_r6","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_4_Template","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_7_Template","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Conditional_8_Template","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_For_1_Template","folder_r5","_r4","toggleFolder","CodeSnippetsComponent_For_2_Conditional_8_For_1_Conditional_8_Template","section_r2","toggledFolders","CodeSnippetsComponent_For_2_Conditional_8_For_1_Template","_r1","toggleSection","CodeSnippetsComponent_For_2_Conditional_8_Template","toggledSections","CodeSnippetsComponent","insertSnippet","EventEmitter","snippet","emit","ArrayHelpers","toggleInArray","inputs","outputs","CodeSnippetsComponent_For_2_Template","MatIconModule","MatRippleModule","KeyValuePipe","TranslateModule","ClickStopPropagationDirective","TippyDirective","SafeHtmlPipe","calculateTree","templates","parent","paths","Path","last","pathFromRoot","path","existing","find","item","children","depth","isShared","Shared","isFolder","SortItemsPipe","items","sort","item1","item2","DepthPaddingPipe","sanitizer","padding","bypassSecurityTrustStyle","CodeTemplatesComponent_For_3_ng_container_0_Template","fileOrFolder_r3","_c0","item_r2","item_r5","ctx_r5","openTemplate","_c1","isToggled","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_ng_container_0_Template","item1_r8","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_For_1_Template","_r7","toggleItem","addFile","CodeTemplatesComponent_ng_template_5_Conditional_1_Conditional_11_Template","_c2","CodeTemplatesComponent_ng_template_5_Conditional_0_Template","CodeTemplatesComponent_ng_template_5_Conditional_1_Template","CodeTemplatesComponent","openView","createTemplate","toggledItemsApp","toggledItemsShared","ngOnChanges","changes","calculateTreeAppShared","f","previousView","previousValue","FileName","IsShared","showFileInTree","shared","folder","toggledItems","CodeTemplatesComponent_For_3_Template","CodeTemplatesComponent_ng_template_5_Template","menu_r9","NgTemplateOutlet","NgClass","MatMenuModule","tab_r4","_r3","ctx_r1","viewKey","CodeEditorComponent_Conditional_0_Conditional_11_For_2_Conditional_2_Template","CodeEditorComponent_Conditional_0_Conditional_11_For_2_Conditional_6_Template","CodeEditorComponent_Conditional_0_Conditional_11_For_2_Conditional_7_Template","closeEditor","isActive","isModified","isLoading","CodeEditorComponent_Conditional_0_Conditional_11_For_2_Template","vm_r5","tabs","$event","codeChanged","Code","monacoOptions","editorSnipps","tooltips","toggleExplorer","CodeEditorComponent_Conditional_0_Conditional_11_Template","CodeEditorComponent_Conditional_0_Conditional_12_Template","CodeEditorComponent_Conditional_0_Conditional_13_Template","theme","activeExplorer","explorerSnipps","activeView","CodeEditorComponent","BaseComponent","route","snackBar","sourceService","snippetsService","zone","titleService","dialog","viewContainerRef","super","tabSize","fixedOverflowWidgets","init","codeItems","JSON","parse","sessionStorage","getItem","keyItems","keyIsShared","forEach","codeItem","startsWith","urlItems","ngOnInit","templates$","BehaviorSubject","initialViews","EntityId","activeView$","openViews$","viewInfos$","attachListeners","getAll","next","subscriptions","add","combineLatest","openViews","viewInfos","notLoaded","some","RxHelpers","objectsEqual","forkJoin","newViewInfo","view$","share","snippets$","switchMap","tooltips$","Extension","of","results","viewInfos1","selectedIndex","findIndex","savedCode","slice","showCodeAndEditionWarnings","active","defaultTitle","newTitle","getTitle","setTitle","viewModel$","viewInfo","activeViewInfo","ngOnDestroy","complete","explorer","createFileDialogData","global","purpose","open","CreateFileDialogComponent","autoFocus","data","width","afterClosed","create","templateKey","monacoEditorRef","code","selectedViewInfo","oldOpenViews","newOpenViews","oldActiveView","newActiveView","codeToSave","duration","newViewInfos","error","pathAndName","pathSeparator","lastIndexOf","pathWithSlash","fullName","nameCode","endsWith","Edition","snackBarRef","openFromComponent","onAction","containerInstance","snackBarConfig","runOutsideAngular","fromEvent","window","event","preventDefault","returnValue","keyCode","navigator","platform","match","metaKey","ctrlKey","run","i4","i5","i6","i7","viewQuery","MonacoEditorComponent","SourceService","CodeEditorComponent_Conditional_0_Template","tmp_0_0","i8","MatProgressSpinnerModule","i9","MonacoEditorComponent_1","i10","AsyncPipe","ToggleDebugDirective","webApiFieldsRoot","webApiFieldsGetShared","ContentTypesFieldsService","typeListRetrieve","getInputTypesList","inputConfigs","config","dataType","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","contentTypeStaticName","getShareableFields","getShareableFieldsFor","attributeId","addInheritedField","targetContentTypeId","sourceContentTypeStaticName","sourceFieldGuid","newName","ContentTypeId","SourceType","SourceField","inherit","inheritMetadataOf","reOrder","idArray","Id","order","stringify","rename","fieldId","IsTitle","Error","newField","Index","SortOrder","updateInputType","id","_angular_core__WEBPACK_IMPORTED_MODULE_3__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/content-types.service.ts","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.html","./projects/eav-ui/src/app/code-editor/code-and-edition-warnings/code-and-edition-warnings.component.ts","./projects/eav-ui/src/app/code-editor/code-editor.models.ts","./projects/eav-ui/src/app/code-editor/services/snippets.service.ts","./projects/eav-ui/src/app/code-editor/code-snippets/object-to-array.pipe.ts","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.html","./projects/eav-ui/src/app/code-editor/code-snippets/code-snippets.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.helpers.ts","./projects/eav-ui/src/app/code-editor/code-templates/order-items.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/depth-padding.pipe.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.html","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.component.ts","./projects/eav-ui/src/app/code-editor/code-templates/code-templates.models.ts","./projects/eav-ui/src/app/code-editor/code-editor.component.html","./projects/eav-ui/src/app/code-editor/code-editor.component.ts","./projects/eav-ui/src/app/content-type-fields/services/content-types-fields.service.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { ScopeOption } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\nimport { ContentType, ContentTypeEdit } from '../models/content-type.model';\r\nimport { ScopeDetailsDto } from '../models/scopedetails.dto';\r\n\r\n// We should list all the \"full\" paths here, so it's easier to find when searching for API calls\r\nexport const webApiTypeRoot = 'admin/type/';\r\nconst webApiTypeGet = 'admin/type/get';\r\nconst webApiTypes = 'admin/type/list';\r\nconst webApiTypeScopes = 'admin/type/scopes';\r\nconst webApiTypeSave = 'admin/type/save';\r\nconst webApiTypeDelete = 'admin/type/delete';\r\nconst webApiTypeImport = 'admin/type/import';\r\nconst webApiTypeAddGhost = 'admin/type/addghost';\r\n\r\n@Injectable()\r\nexport class ContentTypesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  retrieveContentType(staticName: string) {\r\n    return this.http.get<ContentType>(this.apiUrl(webApiTypeGet), {\r\n      params: { appId: this.context.appId.toString(), contentTypeId: staticName }\r\n    });\r\n  }\r\n\r\n  retrieveContentTypes(scope: string) {\r\n    return this.http.get<ContentType[]>(this.apiUrl(webApiTypes), {\r\n      params: { appId: this.context.appId.toString(), scope }\r\n    });\r\n  }\r\n\r\n  // TODO: remove this method after upgrade to V2\r\n  getScopes() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => {\r\n        // wip during upgrade:\r\n        const scopes = scopesData.old;\r\n        const scopeOptions: ScopeOption[] = Object.keys(scopes).map(key => ({ name: scopes[key], value: key }));\r\n        return scopeOptions;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getScopesV2() {\r\n    return this.http.get<{ old: Record<string, string>, scopes: ScopeDetailsDto[] }>(this.apiUrl(webApiTypeScopes), {\r\n      params: { appId: this.context.appId.toString() }\r\n    }).pipe(\r\n      map(scopesData => scopesData.scopes),\r\n    );\r\n  }\r\n\r\n  save(contentType: ContentTypeEdit) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeSave), contentType, {\r\n      params: { appid: this.context.appId.toString() },\r\n    });\r\n  }\r\n\r\n  delete(contentType: ContentType) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiTypeDelete), {\r\n      params: { appid: this.context.appId.toString(), staticName: contentType.StaticName },\r\n    });\r\n  }\r\n\r\n  import(files: File[]) {\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append('File', file);\r\n    }\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiTypeImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  createGhost(sourceStaticName: string) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiTypeAddGhost), null, {\r\n      params: { appid: this.context.appId.toString(), sourceStaticName },\r\n    });\r\n  }\r\n}\r\n","<div class=\"messages\">\r\n  @if (snackBarData.codeFile) {\r\n    <div>\"{{ snackBarData.fileName }}\" also has a code-behind file \"{{ snackBarData.codeFile }}\".</div>\r\n    <br>\r\n  }\r\n\r\n  @if (snackBarData.otherEditions) {\r\n    <div>\r\n      @if (snackBarData.edition) {\r\n        You are editing \"{{ snackBarData.edition }}\" edition.\r\n      }\r\n      There are {{ snackBarData.otherEditions }} other editions of \"{{ snackBarData.fileName }}\".\r\n      @if (!snackBarData.edition) {\r\n        You may be editing an edition which is not the one you see.\r\n      }\r\n      See <a href=\"https://go.2sxc.org/polymorphism\" target=\"_blank\">docs</a>.\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<div class=\"actions\">\r\n  @if (snackBarData.codeFile) {\r\n    <button mat-button color=\"primary\" (click)=\"openCodeBehind()\">\r\n      Open code-behind file\r\n    </button>\r\n  }\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings.models';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@Component({\r\n    selector: 'app-code-and-edition-warnings',\r\n    templateUrl: './code-and-edition-warnings.component.html',\r\n    styleUrls: ['./code-and-edition-warnings.component.scss'],\r\n    standalone: true,\r\n    imports: [MatButtonModule],\r\n})\r\nexport class CodeAndEditionWarningsComponent {\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<CodeAndEditionWarningsComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public snackBarData: CodeAndEditionWarningsSnackBarData,\r\n  ) { }\r\n\r\n  openCodeBehind(): void {\r\n    this.snackBarData.openCodeBehind = true;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","import { FileAsset } from './models/file-asset.model';\r\nimport { Snippet, SnippetsSets } from './models/snippet.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { Tooltip } from './models/tooltip.model';\r\n\r\nexport interface Tab {\r\n  viewKey: ViewKey;\r\n  label: string;\r\n  isActive: boolean;\r\n  isModified: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport interface CodeEditorViewModel {\r\n  activeView: ViewKey;\r\n  tabs: Tab[];\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  templates: FileAsset[];\r\n  explorerSnipps: SnippetsSets;\r\n  editorSnipps: Snippet[];\r\n  tooltips?: Tooltip[];\r\n}\r\n\r\nexport const Explorers = {\r\n  Templates: 'Templates',\r\n  Snippets: 'Snippets',\r\n} as const;\r\n\r\nexport type ExplorerOption = typeof Explorers[keyof typeof Explorers];\r\n\r\nexport interface ViewInfo {\r\n  viewKey: ViewKey;\r\n  view?: SourceView;\r\n  explorerSnipps?: SnippetsSets;\r\n  editorSnipps?: Snippet[];\r\n  tooltips?: Tooltip[];\r\n  savedCode?: string;\r\n}\r\n\r\nexport interface ViewKey {\r\n  /** ViewKey is templateId or path */\r\n  key: string;\r\n  shared: boolean;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { map, Observable } from 'rxjs';\r\nimport { DataTypeConstants } from '../../content-type-fields/constants/data-type.constants';\r\nimport { Field } from '../../content-type-fields/models/field.model';\r\nimport { webApiFieldsAll } from '../../content-type-fields/services/content-types-fields.service';\r\nimport { MoreSnippet, SetSnippet, SetSnippetLink, Snippet, SnippetsSets, SnippetsSubSubSets } from '../models/snippet.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { Tooltip } from '../models/tooltip.model';\r\nimport { InputTypeStrict } from '../../content-type-fields/constants/input-type.constants';\r\n\r\nexport const inlineHelp = 'admin/Code/InlineHelp';\r\n\r\n@Injectable()\r\nexport class SnippetsService {\r\n\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext, private translate: TranslateService) { }\r\n\r\n  getTooltips(language: string): Observable<Tooltip[]> {\r\n    return this.http.get<Tooltip[]>(this.dnnContext.$2sxc.http.apiUrl(inlineHelp), {\r\n      params: {\r\n        language,\r\n      },\r\n    });\r\n  }\r\n\r\n  getSnippets(view: SourceView): Observable<{ list: Snippet[]; sets: SnippetsSets; }> {\r\n    return this.http.get<{ snippets: Snippet[] }>('../ng-assets/snippets.json.js').pipe(\r\n      map(res => {\r\n        const relevant = this.filterAwayNotNeededSnippetsList(res.snippets, view);\r\n        const standardAndInputSnips = this.extractInputTypeSnippets(relevant);\r\n        const sets = this.initSnippetsWithConfig(standardAndInputSnips.standardArray, view, standardAndInputSnips.inputTypeSnippets);\r\n        const sorted: { list: Snippet[]; sets: SnippetsSets; } = {\r\n          list: standardAndInputSnips.standardArray,\r\n          sets\r\n        };\r\n        return sorted;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Scan the list for sets starting with @ or [ and filter if not needed right now */\r\n  private filterAwayNotNeededSnippetsList(list: Snippet[], view: SourceView): Snippet[] {\r\n    const keyPrefixes = ['@', '['];\r\n    const keyPrefixIndex = (v: SourceView) => (v.Type.indexOf('Razor') > -1) ? 0 : 1;\r\n\r\n    const newList: Snippet[] = [];\r\n    for (const itm of list) {\r\n      const setHasPrefix = keyPrefixes.indexOf(itm.set[0]);\r\n      if (setHasPrefix === -1 || (setHasPrefix === keyPrefixIndex(view))) {\r\n        // if necessary, remove first char\r\n        if (setHasPrefix === keyPrefixIndex(view)) {\r\n          itm.set = itm.set.substring(1);\r\n        }\r\n        newList.push(itm);\r\n      }\r\n    }\r\n    return newList;\r\n  }\r\n\r\n  private extractInputTypeSnippets(list: Snippet[]): { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } {\r\n    const standardArray: Snippet[] = [];\r\n    const inputTypeArray: Snippet[] = [];\r\n\r\n    for (const itm of list) {\r\n      const systemSnippet = itm.set[0] === '\\\\';\r\n      if (!systemSnippet) {\r\n        standardArray.push(itm);\r\n      } else {\r\n        itm.set = itm.set.substring(1);\r\n        inputTypeArray.push(itm);\r\n      }\r\n    }\r\n    const inputTypeSnippets = this.catalogInputTypeSnippets(inputTypeArray);\r\n    const extracted: { standardArray: Snippet[]; inputTypeSnippets: Record<string, Snippet[]>; } = {\r\n      standardArray,\r\n      inputTypeSnippets,\r\n    };\r\n    return extracted;\r\n  }\r\n\r\n  private catalogInputTypeSnippets(list: Snippet[]): Record<string, Snippet[]> {\r\n    const inputTypeList: Record<string, Snippet[]> = {};\r\n    for (const itm of list) {\r\n      if (inputTypeList[itm.subset] === undefined) {\r\n        inputTypeList[itm.subset] = [];\r\n      }\r\n      inputTypeList[itm.subset].push(itm);\r\n    }\r\n    return inputTypeList;\r\n  }\r\n\r\n  private initSnippetsWithConfig(\r\n    standardArray: Snippet[],\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): SnippetsSets {\r\n    const sets = this.makeTree(standardArray);\r\n\r\n    // retrieve all relevant content-types and infos\r\n    sets.Content = Object.assign({}, sets.Content, { Fields: {}, PresentationFields: {} });\r\n    if (templateConfiguration.TypeContent) {\r\n      this.loadContentType(\r\n        sets.Content.Fields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContent,\r\n        'Content',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n    if (templateConfiguration.TypeContentPresentation) {\r\n      this.loadContentType(\r\n        sets.Content.PresentationFields as SnippetsSubSubSets,\r\n        templateConfiguration.TypeContentPresentation,\r\n        'Content.Presentation',\r\n        templateConfiguration,\r\n        inputTypeSnippets,\r\n      );\r\n    }\r\n\r\n    if (templateConfiguration.HasList) {\r\n      sets.List = Object.assign({}, sets.List, { Fields: {}, PresentationFields: {} });\r\n      if (templateConfiguration.TypeList) {\r\n        this.loadContentType(\r\n          sets.List.Fields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeList,\r\n          'Header',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n      if (templateConfiguration.TypeListPresentation) {\r\n        this.loadContentType(\r\n          sets.List.PresentationFields as SnippetsSubSubSets,\r\n          templateConfiguration.TypeListPresentation,\r\n          'Header.Presentation',\r\n          templateConfiguration,\r\n          inputTypeSnippets,\r\n        );\r\n      }\r\n    } else {\r\n      delete sets.List;\r\n    }\r\n\r\n    // maybe App-infos\r\n    if (templateConfiguration.HasApp) {\r\n      sets.App.Resources = {};\r\n      sets.App.Settings = {};\r\n      this.loadContentType(sets.App.Resources, 'App-Resources', 'App.Resources', templateConfiguration, inputTypeSnippets);\r\n      this.loadContentType(sets.App.Settings, 'App-Settings', 'App.Settings', templateConfiguration, inputTypeSnippets);\r\n    }\r\n\r\n    return sets;\r\n  }\r\n\r\n  /** Convert the list into a tree with set/subset/item */\r\n  private makeTree(list: Snippet[]): SnippetsSets {\r\n    const tree: SnippetsSets = {};\r\n    for (const o of list) {\r\n      if (tree[o.set] === undefined) {\r\n        tree[o.set] = {};\r\n      }\r\n      if (tree[o.set][o.subset] === undefined) {\r\n        tree[o.set][o.subset] = [];\r\n      }\r\n      const reformatted: SetSnippet = {\r\n        key: o.name,\r\n        label: this.label(o.set, o.subset, o.name),\r\n        snip: o.content,\r\n        help: o.help || this.help(o.set, o.subset, o.name),\r\n        links: this.linksList(o.links)\r\n      };\r\n\r\n      (tree[o.set][o.subset] as SetSnippet[]).push(reformatted);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  private label(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Key');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = snip;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getHelpKey(set: string, subset: string, snip: string, addition: string): string {\r\n    return 'SourceEditorSnippets' + '.' + set + '.' + subset + '.' + snip + addition;\r\n  }\r\n\r\n  private help(set: string, subset: string, snip: string): string {\r\n    const key = this.getHelpKey(set, subset, snip, '.Help');\r\n\r\n    let result: string = this.translate.instant(key);\r\n    if (result === key) {\r\n      result = '';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private linksList(linksString: string): SetSnippetLink[] {\r\n    if (!linksString) { return null; }\r\n\r\n    const links: SetSnippetLink[] = [];\r\n    const llist = linksString.split('\\n');\r\n    for (const l of llist) {\r\n      const pair = l.split(':');\r\n      if (pair.length === 3) {\r\n        const link: SetSnippetLink = {\r\n          name: pair[0].trim(),\r\n          url: pair[1].trim() + ':' + pair[2].trim(),\r\n        };\r\n        links.push(link);\r\n      }\r\n    }\r\n    if (links.length === 0) { return null; }\r\n    return links;\r\n  }\r\n\r\n  /** spm TODO: this happens after snippets are calculated for the first time. Needs to be fixed */\r\n  private loadContentType(\r\n    target: SnippetsSubSubSets,\r\n    type: string,\r\n    prefix: string,\r\n    templateConfiguration: SourceView,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    this.getFields(templateConfiguration.AppId, type).subscribe(fields => {\r\n      // first add common items if the content-type actually exists\r\n      for (const field of fields) {\r\n        const fieldname = field.StaticName;\r\n        target[fieldname] = {\r\n          key: fieldname,\r\n          label: fieldname,\r\n          snip: this.valuePlaceholder(prefix, fieldname, templateConfiguration),\r\n          help: field.Metadata.merged.Notes || ' (' + field.Type.toLowerCase() + ') '\r\n        };\r\n        // try to add generic snippets specific to this input-type\r\n        const snipDefaults = cloneDeep(target[fieldname]); // must be a copy, because target[fieldname] will grow\r\n        this.attachSnippets(target, prefix, fieldname, field.InputType, snipDefaults, inputTypeSnippets);\r\n      }\r\n\r\n      if (fields.length) {\r\n        const std = ['EntityId', 'EntityTitle', 'EntityGuid', 'EntityType', 'IsPublished', 'Modified'];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < std.length; i++) {\r\n          target[std[i]] = {\r\n            key: std[i],\r\n            label: std[i],\r\n            snip: this.valuePlaceholder(prefix, std[i], templateConfiguration),\r\n            help: this.translate.instant('SourceEditorSnippets.StandardFields.' + std[i] + '.Help'),\r\n          };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private valuePlaceholder(obj: string, val: string, templateConfiguration: SourceView): string {\r\n    return (templateConfiguration.Type.indexOf('Razor') > -1)\r\n      ? '@' + obj + '.' + val\r\n      : '[' + obj.replace('.', ':') + ':' + val + ']';\r\n  }\r\n\r\n  private getFields(appId: number, staticName: string): Observable<Field[]> {\r\n    return this.http.get<Field[]>(this.dnnContext.$2sxc.http.apiUrl(webApiFieldsAll), {\r\n      params: { appid: appId.toString(), staticName },\r\n    }).pipe(\r\n      map(fields => {\r\n        fields = fields.filter(field => field.Type !== DataTypeConstants.Empty);\r\n        for (const fld of fields) {\r\n          if (!fld.Metadata) { continue; }\r\n          const md = fld.Metadata;\r\n          const allMd = md.All;\r\n          const typeMd = md[fld.Type];\r\n          const inputMd = md[fld.InputType];\r\n          md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n        }\r\n        return fields;\r\n      }),\r\n    );\r\n  }\r\n\r\n  private attachSnippets(\r\n    target: SnippetsSubSubSets,\r\n    prefix: string,\r\n    fieldname: string,\r\n    inputType: InputTypeStrict,\r\n    snipDefaults: SetSnippet,\r\n    inputTypeSnippets: Record<string, Snippet[]>,\r\n  ): void {\r\n    let genericSnippet = inputTypeSnippets[inputType];\r\n    if (inputType.indexOf('-')) { // if it's a sub-type, let's also get the master-type\r\n      const fieldType = inputType.substring(0, inputType.indexOf('-'));\r\n      if (fieldType) {\r\n        const typeSnips = inputTypeSnippets[fieldType];\r\n        if (typeSnips) {\r\n          genericSnippet = genericSnippet ? genericSnippet.concat(typeSnips) : typeSnips;\r\n        }\r\n      }\r\n    }\r\n    if (!genericSnippet) { return; }\r\n\r\n    if (target[fieldname].more === undefined) {\r\n      target[fieldname].more = {};\r\n    }\r\n    const fieldSnips = target[fieldname].more;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let g = 0; g < genericSnippet.length; g++) {\r\n      try {\r\n        fieldSnips[fieldname + '-' + genericSnippet[g].name] = Object.assign({}, snipDefaults, {\r\n          key: fieldname + ' - ' + genericSnippet[g].name,\r\n          label: genericSnippet[g].name,\r\n          snip: this.localizeGenericSnippet(genericSnippet[g].content, prefix, fieldname),\r\n          collapse: true,\r\n        } as MoreSnippet);\r\n      } finally { }\r\n    }\r\n  }\r\n\r\n  private localizeGenericSnippet(snip: string, objName: string, fieldName: string): string {\r\n    snip = snip\r\n      .replace(/(\\$\\{[0-9]+\\:)var(\\})/gi, '$1' + objName + '$2')\r\n      .replace(/(\\$\\{[0-9]+\\:)prop(\\})/gi, '$1' + fieldName + '$2');\r\n    return snip;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'objectToArray',\r\n    standalone: true\r\n})\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: Record<string, any> | Record<string, any>[]): Record<string, any>[] {\r\n    if (obj == null) { return; }\r\n\r\n    if (Array.isArray(obj)) { return obj; }\r\n\r\n    return Object.values(obj);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark\">\r\n  @for (section of snippets | keyvalue; track section) {\r\n    <div>\r\n      <div class=\"collapsible-header section\" [tippy]=\"'SourceEditorSnippets.' + section.key + '.Help' | translate\"\r\n        tippyShowDelay=\"750\" (click)=\"toggleSection(section.key)\">\r\n        <mat-icon>\r\n          {{ toggledSections.includes(section.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n        </mat-icon>\r\n        <span>{{ 'SourceEditorSnippets.' + section.key + '.Title' | translate }}</span>\r\n      </div>\r\n      @if (toggledSections.includes(section.key)) {\r\n        @for (folder of section.value | keyvalue; track folder) {\r\n          <div>\r\n            <div class=\"collapsible-header folder\"\r\n              [tippy]=\"'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Help' | translate\" tippyShowDelay=\"750\"\r\n              (click)=\"toggleFolder(folder.key)\">\r\n              <mat-icon>\r\n                {{ toggledFolders.includes(folder.key) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n              <span>{{ 'SourceEditorSnippets.' + section.key + '.' + folder.key + '.Title' | translate }}</span>\r\n            </div>\r\n            @if (toggledFolders.includes(folder.key)) {\r\n              @for (snippet of (folder.value | objectToArray); track snippet) {\r\n                <div class=\"snippet\">\r\n                  <div class=\"snippet-label\">\r\n                    <div matRipple class=\"text\" [tippy]=\"snippet.snip\" tippyShowDelay=\"750\"\r\n                      (click)=\"addSnippet(snippet.snip)\">\r\n                      {{ snippet.label }}\r\n                    </div>\r\n                    @if (snippet.more) {\r\n                      <mat-icon tippy=\"Show More\" tippyShowDelay=\"750\" (click)=\"toggleMore(snippet.key)\">\r\n                        {{ toggledMores.includes(snippet.key) ? 'more_vert' : 'more_horiz' }}\r\n                      </mat-icon>\r\n                    }\r\n                    <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n                    (click)=\"toggleInfo(snippet.key)\">info</mat-icon>\r\n                  </div>\r\n                  @if (toggledInfos.includes(snippet.key)) {\r\n                    <div class=\"snippet-help\">\r\n                      <div class=\"text\" [innerHTML]=\"snippet.help | safeHtml\"></div>\r\n                      @for (link of snippet.links; track link) {\r\n                        <div>\r\n                          <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  }\r\n                  @if (toggledMores.includes(snippet.key)) {\r\n                    @for (more of (snippet.more | objectToArray); track more) {\r\n                      <div>\r\n                        <div class=\"snippet-label\">\r\n                          <div matRipple class=\"text text-more\" [tippy]=\"more.snip\" tippyShowDelay=\"750\"\r\n                            (click)=\"addSnippet(more.snip)\">\r\n                            {{ more.label }}\r\n                          </div>\r\n                          <mat-icon tippy=\"Show Help\" tippyShowDelay=\"750\" appClickStopPropagation\r\n                          (click)=\"toggleInfo(more.key)\">info</mat-icon>\r\n                        </div>\r\n                        @if (toggledInfos.includes(more.key)) {\r\n                          <div class=\"snippet-help snippet-help-more\">\r\n                            <div class=\"text\" [innerHTML]=\"more.help | safeHtml\"></div>\r\n                            @for (link of more.links; track link) {\r\n                              <div>\r\n                                <a [href]=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                              </div>\r\n                            }\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    }\r\n                  }\r\n                </div>\r\n              }\r\n            }\r\n          </div>\r\n        }\r\n      }\r\n    </div>\r\n  }\r\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SnippetsSets } from '../models/snippet.model';\r\nimport { ObjectToArrayPipe } from './object-to-array.pipe';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { KeyValuePipe } from '@angular/common';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../shared/pipes/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-code-snippets',\r\n  templateUrl: './code-snippets.component.html',\r\n  styleUrls: ['./code-snippets.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n    KeyValuePipe,\r\n    TranslateModule,\r\n    ObjectToArrayPipe,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n  ],\r\n})\r\nexport class CodeSnippetsComponent {\r\n  @Input() snippets: SnippetsSets;\r\n  @Output() insertSnippet: EventEmitter<string> = new EventEmitter();\r\n  toggledSections: string[] = [];\r\n  toggledFolders: string[] = [];\r\n  toggledInfos: string[] = [];\r\n  toggledMores: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addSnippet(snippet: string): void {\r\n    this.insertSnippet.emit(snippet);\r\n  }\r\n\r\n  toggleSection(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledSections);\r\n  }\r\n\r\n  toggleFolder(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledFolders);\r\n  }\r\n\r\n  toggleInfo(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledInfos);\r\n  }\r\n\r\n  toggleMore(key: string): void {\r\n    ArrayHelpers.toggleInArray(key, this.toggledMores);\r\n  }\r\n}\r\n","import { FileAsset } from '../models/file-asset.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { appSharedRoot } from './code-templates.models';\r\n\r\nexport function calculateTreeAppShared(templates: FileAsset[]): TreeItem[] {\r\n  const tree: TreeItem[] = [\r\n    {\r\n      depth: -1,\r\n      name: 'App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: false,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => !f.Shared)),\r\n    },\r\n    {\r\n      depth: -1,\r\n      name: 'Shared App Files',\r\n      pathFromRoot: appSharedRoot,\r\n      isShared: true,\r\n      isFolder: true,\r\n      children: calculateTree(templates.filter(f => f.Shared)),\r\n    },\r\n  ];\r\n  return tree;\r\n}\r\n\r\nfunction calculateTree(templates: FileAsset[]): TreeItem[] {\r\n  if (!templates) { return []; }\r\n\r\n  const tree: TreeItem[] = [];\r\n  for (const template of templates) {\r\n    let parent: TreeItem[] = tree;\r\n    const paths = template.Path.split('/');\r\n    const last = paths[paths.length - 1];\r\n    let pathFromRoot = '';\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const path = paths[i];\r\n      pathFromRoot += i ? `/${path}` : path;\r\n      const existing = parent.find(item => item.name === path);\r\n      if (existing) {\r\n        parent = existing.children;\r\n      } else {\r\n        const item: TreeItem = {\r\n          depth: i,\r\n          name: path,\r\n          pathFromRoot,\r\n          isShared: template.Shared,\r\n          isFolder: path !== last,\r\n          ...(path !== last && { children: [] }),\r\n        };\r\n        parent.push(item);\r\n        parent = item.children;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TreeItem } from '../models/tree-item.model';\r\n\r\n/** Sorts folders before files */\r\n@Pipe({\r\n    name: 'sortItems',\r\n    standalone: true\r\n})\r\nexport class SortItemsPipe implements PipeTransform {\r\n\r\n  transform(items: TreeItem[]) {\r\n    if (items == null) { return items; }\r\n\r\n    items.sort((item1, item2) => {\r\n      if (item1.isFolder < item2.isFolder) {\r\n        return 1;\r\n      } else if (item1.isFolder > item2.isFolder) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return items;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'depthPadding',\r\n    standalone: true\r\n})\r\nexport class DepthPaddingPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(depth: number, isFolder: boolean): SafeStyle {\r\n    let padding: number;\r\n    if (isFolder) {\r\n      padding = depth * 8;\r\n    } else {\r\n      padding = (depth === 0) ? 8 : (depth * 8 + 16);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustStyle(`padding-left: ${padding}px;`);\r\n  }\r\n}\r\n","<div class=\"editor-active-explorer fancy-scrollbar-dark explorer-wrapper\">\r\n\r\n  <div>\r\n    @for (item of (tree | sortItems); track item) {\r\n      <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item}\"></ng-container>\r\n    }\r\n\r\n    <ng-template #fileOrFolder let-item=\"item\">\r\n\r\n      @if (!item.isFolder) {\r\n        <div class=\"file\" [style]=\"item.depth | depthPadding: item.isFolder\"\r\n          [ngClass]=\"{'active': isToggled(item.pathFromRoot, item.isShared) }\" [tippy]=\"item.name\" tippyShowDelay=\"750\"\r\n          (click)=\"openTemplate(item.pathFromRoot, item.isShared)\">\r\n          {{ item.name }}\r\n        </div>\r\n      }\r\n\r\n      @if (item.isFolder) {\r\n        <div>\r\n          <div class=\"folder-name-wrapper\" [ngClass]=\"{'app-shared-root': item.depth < 0}\"\r\n            [style]=\"item.depth + 1 | depthPadding: item.isFolder\" (click)=\"toggleItem(item.pathFromRoot, item.isShared)\">\r\n            <div class=\"folder-name\" [tippy]=\"item.name\" tippyShowDelay=\"750\">\r\n              <mat-icon> {{ isToggled(item.pathFromRoot, item.isShared) ? 'keyboard_arrow_down' : 'keyboard_arrow_right' }}\r\n              </mat-icon>\r\n              <span>{{ item.name }}</span>\r\n            </div>\r\n            <div class=\"add-item\" tippy=\"Create file in this folder\" tippyShowDelay=\"750\" appClickStopPropagation\r\n              (click)=\"addFile(item.pathFromRoot, item.isShared)\">\r\n              <mat-icon>add</mat-icon>\r\n            </div>\r\n          </div>\r\n          @if (isToggled(item.pathFromRoot, item.isShared)) {\r\n            @for (item1 of (item.children | sortItems); track item1) {\r\n              <ng-container *ngTemplateOutlet=\"fileOrFolder; context: {item: item1}\"></ng-container>\r\n            }\r\n          }\r\n        </div>\r\n      }\r\n\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"create-button-wrapper\">\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" tippy=\"Create file\" tippyPlacement=\"left\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item  (click)=\"addFile('', false)\">\r\n        <span>App</span>\r\n      </button>\r\n      <button mat-menu-item  (click)=\"addFile('', true)\">\r\n        <span>Shared (global)</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { ViewKey } from '../code-editor.models';\r\nimport { FileAsset } from '../models/file-asset.model';\r\nimport { SourceView } from '../models/source-view.model';\r\nimport { TreeItem } from '../models/tree-item.model';\r\nimport { calculateTreeAppShared } from './code-templates.helpers';\r\nimport { appSharedRoot, CreateTemplateParams } from './code-templates.models';\r\nimport { SortItemsPipe } from './order-items.pipe';\r\nimport { DepthPaddingPipe } from './depth-padding.pipe';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgTemplateOutlet, NgClass } from '@angular/common';\r\nimport { ClickStopPropagationDirective } from '../../shared/directives/click-stop-propagation.directive';\r\nimport { ArrayHelpers } from '../../shared/helpers/array.helpers';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-code-templates',\r\n  templateUrl: './code-templates.component.html',\r\n  styleUrls: ['./code-templates.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgTemplateOutlet,\r\n    NgClass,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    DepthPaddingPipe,\r\n    SortItemsPipe,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class CodeTemplatesComponent implements OnChanges {\r\n  @Input() view?: SourceView;\r\n  @Input() templates: FileAsset[];\r\n  @Output() openView: EventEmitter<ViewKey> = new EventEmitter();\r\n  @Output() createTemplate: EventEmitter<CreateTemplateParams> = new EventEmitter();\r\n  tree: TreeItem[];\r\n  toggledItemsApp: string[] = [];\r\n  toggledItemsShared: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.templates != null) {\r\n      this.tree = calculateTreeAppShared(this.templates);\r\n    }\r\n    if (changes.view != null) {\r\n      const previousView: SourceView = changes.view?.previousValue;\r\n      if (previousView) {\r\n        this.toggleItem(previousView.FileName, previousView.IsShared);\r\n      }\r\n      if (this.view) {\r\n        this.showFileInTree(this.view.FileName, this.view.IsShared);\r\n      }\r\n    }\r\n  }\r\n\r\n  isToggled(path: string, isShared: boolean): boolean {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    return toggledItems.includes(path);\r\n  }\r\n\r\n  openTemplate(path: string, isShared: boolean): void {\r\n    const viewKey: ViewKey = { key: path, shared: isShared };\r\n    this.openView.emit(viewKey);\r\n  }\r\n\r\n  toggleItem(path: string, isShared: boolean): void {\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    ArrayHelpers.toggleInArray(path, toggledItems);\r\n  }\r\n\r\n  addFile(folder?: string, isShared?: boolean): void {\r\n    const params: CreateTemplateParams = { folder, isShared };\r\n    this.createTemplate.emit(params);\r\n  }\r\n\r\n  private showFileInTree(file: string, isShared: boolean): void {\r\n    if (file == null) { return; }\r\n    const toggledItems = isShared ? this.toggledItemsShared : this.toggledItemsApp;\r\n    if (toggledItems.includes(file)) { return; }\r\n\r\n    const paths = [appSharedRoot, ...file.split('/')];\r\n    let pathFromRoot = '';\r\n    for (const path of paths) {\r\n      pathFromRoot = !pathFromRoot ? path : `${pathFromRoot}/${path}`;\r\n      if (toggledItems.includes(pathFromRoot)) { continue; }\r\n      this.toggleItem(pathFromRoot, isShared);\r\n    }\r\n  }\r\n}\r\n","export const appSharedRoot = '' as const;\r\n\r\nexport interface CreateTemplateParams {\r\n  folder?: string;\r\n  isShared?: boolean;\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"editor-root\" appToggleDebug [ngClass]=\"{ 'sxc-dark': monacoOptions.theme === '2sxc-dark' }\">\r\n    <div class=\"editor-side-toolbar\">\r\n      <div class=\"button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Templates }\" tippy=\"Templates\"\r\n        (click)=\"toggleExplorer(Explorers.Templates)\">\r\n        <mat-icon>file_copy</mat-icon>\r\n      </div>\r\n      <div class=\" button\" [ngClass]=\"{ 'active': activeExplorer === Explorers.Snippets }\" tippy=\"Snippets\"\r\n        (click)=\"toggleExplorer(Explorers.Snippets)\">\r\n        <mat-icon>code</mat-icon>\r\n      </div>\r\n    </div>\r\n    <app-code-templates [hidden]=\"activeExplorer !== Explorers.Templates\" [view]=\"vm.view\" [templates]=\"vm.templates\"\r\n      (openView)=\"openView($event)\" (createTemplate)=\"createTemplate($event)\">\r\n    </app-code-templates>\r\n    <app-code-snippets [hidden]=\"activeExplorer !== Explorers.Snippets\" [snippets]=\"vm.explorerSnipps\"\r\n      (insertSnippet)=\"insertSnippet($event)\">\r\n    </app-code-snippets>\r\n    <div class=\"editor-group\">\r\n      @if (vm.tabs.length > 0) {\r\n        <div class=\"tabs-container fancy-scrollbar-dark\">\r\n          @for (tab of vm.tabs; track tab) {\r\n            <div class=\"tab\" [ngClass]=\"{\r\n              'active': tab.isActive,\r\n              'modified': tab.isModified,\r\n              'loading': tab.isLoading\r\n              }\" (click)=\"openView(tab.viewKey)\">\r\n              <div class=\"tab-label-container\" [tippy]=\"tab.label\" tippyShowDelay=\"750\">\r\n                @if (tab.viewKey.shared) {\r\n                  <mat-icon class=\"icon-shared\">share</mat-icon>\r\n                }\r\n                <span class=\"tab-label\">{{ tab.label }}</span>\r\n              </div>\r\n              <div class=\"tab-actions-container\">\r\n                @if (tab.isModified) {\r\n                  <mat-icon class=\"tab-action icon-modified\" fontSet=\"material-icons\">circle</mat-icon>\r\n                }\r\n                @if (tab.isLoading) {\r\n                  <mat-spinner class=\"spinner\" mode=\"indeterminate\" diameter=\"14\" color=\"white\">\r\n                  </mat-spinner>\r\n                }\r\n                <mat-icon class=\"tab-action icon-close\" tippy=\"Close\" appClickStopPropagation\r\n                (click)=\"closeEditor(tab.viewKey)\">close</mat-icon>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n      @if (vm.view) {\r\n        <app-monaco-editor [filename]=\"vm.view.FileName\" [value]=\"vm.view.Code\"\r\n          (valueChanged)=\"codeChanged($event, vm.viewKey)\" [options]=\"monacoOptions\" [snippets]=\"vm.editorSnipps\"\r\n          [tooltips]=\"vm.tooltips\" [autoFocus]=\"true\">\r\n        </app-monaco-editor>\r\n      }\r\n    </div>\r\n    @if (vm.activeView) {\r\n      <button mat-fab mat-elevation-z24 tippy=\"Click to save or CTRL + S\" (click)=\"save()\">\r\n        <mat-icon>done</mat-icon>\r\n      </button>\r\n    }\r\n  </div>\r\n}","import { Component, NgZone, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport type * as Monaco from 'monaco-editor';\r\nimport { BehaviorSubject, combineLatest, forkJoin, fromEvent, map, Observable, of, share, switchMap } from 'rxjs';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CreateFileDialogComponent, CreateFileDialogData, CreateFileDialogResult } from '../create-file-dialog';\r\nimport { MonacoEditorComponent } from '../monaco-editor';\r\nimport { BaseComponent } from '../shared/components/base.component';\r\nimport { keyIsShared, keyItems } from '../shared/constants/session.constants';\r\nimport { ViewOrFileIdentifier } from '../shared/models/edit-form.model';\r\nimport { Context } from '../shared/services/context';\r\nimport { CodeAndEditionWarningsComponent } from './code-and-edition-warnings/code-and-edition-warnings.component';\r\nimport { CodeAndEditionWarningsSnackBarData } from './code-and-edition-warnings/code-and-edition-warnings.models';\r\nimport { CodeEditorViewModel, ExplorerOption, Explorers, Tab, ViewInfo, ViewKey } from './code-editor.models';\r\nimport { CreateTemplateParams } from './code-templates/code-templates.models';\r\nimport { FileAsset } from './models/file-asset.model';\r\nimport { SourceView } from './models/source-view.model';\r\nimport { SnippetsService } from './services/snippets.service';\r\nimport { SourceService } from './services/source.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MonacoEditorComponent as MonacoEditorComponent_1 } from '../monaco-editor/monaco-editor.component';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { CodeSnippetsComponent } from './code-snippets/code-snippets.component';\r\nimport { CodeTemplatesComponent } from './code-templates/code-templates.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass, AsyncPipe } from '@angular/common';\r\nimport { ClickStopPropagationDirective } from '../shared/directives/click-stop-propagation.directive';\r\nimport { RxHelpers } from '../shared/rxJs/rx.helpers';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { ToggleDebugDirective } from '../shared/directives/toggle-debug.directive';\r\n\r\n@Component({\r\n  selector: 'app-code-editor',\r\n  templateUrl: './code-editor.component.html',\r\n  styleUrls: ['./code-editor.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    CodeTemplatesComponent,\r\n    CodeSnippetsComponent,\r\n    MatProgressSpinnerModule,\r\n    MonacoEditorComponent_1,\r\n    MatButtonModule,\r\n    AsyncPipe,\r\n    ClickStopPropagationDirective,\r\n    TippyDirective,\r\n    ToggleDebugDirective,\r\n  ],\r\n  providers: [\r\n    SourceService,\r\n    SnippetsService,\r\n  ],\r\n})\r\nexport class CodeEditorComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MonacoEditorComponent) private monacoEditorRef: MonacoEditorComponent;\r\n\r\n  Explorers = Explorers;\r\n  activeExplorer: ExplorerOption = Explorers.Templates;\r\n  monacoOptions: Monaco.editor.IStandaloneEditorConstructionOptions = {\r\n    theme: '2sxc-dark',\r\n    tabSize: 2,\r\n    fixedOverflowWidgets: true,\r\n  };\r\n  viewModel$: Observable<CodeEditorViewModel>;\r\n\r\n  private templates$: BehaviorSubject<FileAsset[]>;\r\n  private activeView$: BehaviorSubject<ViewKey>;\r\n  private openViews$: BehaviorSubject<ViewKey[]>;\r\n  private viewInfos$: BehaviorSubject<ViewInfo[]>;\r\n  private urlItems: ViewOrFileIdentifier[];\r\n\r\n  constructor(\r\n    private context: Context,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private sourceService: SourceService,\r\n    private snippetsService: SnippetsService,\r\n    private zone: NgZone,\r\n    private titleService: Title,\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n  ) {\r\n    super();\r\n    this.context.init(this.route);\r\n    const codeItems: ViewOrFileIdentifier[] = JSON.parse(sessionStorage.getItem(keyItems));\r\n    const isShared = sessionStorage.getItem(keyIsShared) === 'true' ?? false;\r\n    codeItems.forEach(codeItem => {\r\n      // remove leading \"/\" from path\r\n      if (codeItem.Path.startsWith('/')) {\r\n        codeItem.Path = codeItem.Path.substring(1);\r\n      }\r\n      codeItem.IsShared ??= isShared;\r\n    });\r\n    this.urlItems = codeItems;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.templates$ = new BehaviorSubject<FileAsset[]>([]);\r\n    const initialViews = this.urlItems.map(item => {\r\n      const viewKey: ViewKey = { key: item.EntityId?.toString() ?? item.Path, shared: item.IsShared };\r\n      return viewKey;\r\n    });\r\n    this.activeView$ = new BehaviorSubject<ViewKey>(initialViews[0]);\r\n    this.openViews$ = new BehaviorSubject<ViewKey[]>(initialViews);\r\n    this.viewInfos$ = new BehaviorSubject<ViewInfo[]>([]);\r\n\r\n    this.attachListeners();\r\n\r\n    this.sourceService.getAll().subscribe(templates => {\r\n      this.templates$.next(templates);\r\n    });\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.templates$, this.openViews$]).subscribe(([templates, openViews]) => {\r\n        if (templates.length === 0) { return; }\r\n\r\n        let viewInfos = this.viewInfos$.value;\r\n        const notLoaded = openViews.filter(viewKey => !viewInfos.some(v => RxHelpers.objectsEqual(v.viewKey, viewKey)));\r\n        if (notLoaded.length === 0) { return; }\r\n\r\n        forkJoin(\r\n          notLoaded.map(viewKey => {\r\n            // set viewKey in viewInfos to mark that view is being fetched\r\n            const newViewInfo: ViewInfo = {\r\n              viewKey,\r\n            };\r\n            viewInfos = [...viewInfos, newViewInfo];\r\n\r\n            const view$ = this.sourceService.get(viewKey.key, viewKey.shared, this.urlItems).pipe(share());\r\n            const snippets$ = view$.pipe(switchMap(view => this.snippetsService.getSnippets(view)));\r\n            const tooltips$ = view$.pipe(switchMap(view => this.snippetsService.getTooltips(view.Extension.substring(1))));\r\n            return forkJoin([of(viewKey), view$, snippets$, tooltips$]);\r\n          })\r\n        ).subscribe(results => {\r\n          let viewInfos1 = this.viewInfos$.value;\r\n\r\n          results.forEach(([viewKey, view, snippets, tooltips]) => {\r\n            const selectedIndex = viewInfos1.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n            if (selectedIndex < 0) { return; }\r\n\r\n            const newViewInfo: ViewInfo = {\r\n              viewKey,\r\n              view,\r\n              explorerSnipps: snippets.sets,\r\n              editorSnipps: snippets.list,\r\n              tooltips,\r\n              savedCode: view.Code,\r\n            };\r\n            viewInfos1 = [...viewInfos1.slice(0, selectedIndex), newViewInfo, ...viewInfos1.slice(selectedIndex + 1)];\r\n            this.showCodeAndEditionWarnings(viewKey, view, templates);\r\n          });\r\n\r\n          this.viewInfos$.next(viewInfos1);\r\n        });\r\n\r\n        this.viewInfos$.next(viewInfos);\r\n      })\r\n    );\r\n\r\n    this.subscriptions.add(\r\n      combineLatest([this.activeView$, this.viewInfos$]).subscribe(([activeView, viewInfos]) => {\r\n        const active = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n        const defaultTitle = 'Code Editor';\r\n        const newTitle = active == null ? defaultTitle : `${active.view?.FileName} - ${defaultTitle}`;\r\n        const oldTitle = this.titleService.getTitle();\r\n        if (newTitle !== oldTitle) {\r\n          this.titleService.setTitle(newTitle);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.viewModel$ = combineLatest([this.templates$, this.activeView$, this.openViews$, this.viewInfos$]).pipe(\r\n      map(([templates, activeView, openViews, viewInfos]) => {\r\n        const tabs = openViews.map(viewKey => {\r\n          const viewInfo = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n          const label: Tab = {\r\n            viewKey,\r\n            label: viewInfo?.view?.FileName ?? viewKey.key,\r\n            isActive: RxHelpers.objectsEqual(viewKey, activeView),\r\n            isModified: viewInfo?.view?.Code !== viewInfo?.savedCode,\r\n            isLoading: viewInfo?.view == null,\r\n          };\r\n          return label;\r\n        });\r\n        const activeViewInfo = viewInfos.find(v => RxHelpers.objectsEqual(v.viewKey, activeView));\r\n\r\n        const viewModel: CodeEditorViewModel = {\r\n          activeView,\r\n          tabs,\r\n          viewKey: activeViewInfo?.viewKey,\r\n          view: activeViewInfo?.view,\r\n          templates,\r\n          explorerSnipps: activeViewInfo?.explorerSnipps,\r\n          editorSnipps: activeViewInfo?.editorSnipps,\r\n          tooltips: activeViewInfo?.tooltips,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.activeView$.complete();\r\n    this.openViews$.complete();\r\n    this.viewInfos$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleExplorer(explorer: ExplorerOption): void {\r\n    this.activeExplorer = (this.activeExplorer !== explorer) ? explorer : null;\r\n  }\r\n\r\n  createTemplate(params: CreateTemplateParams): void {\r\n    // This FileLocationDialogComponent dialog is currently never going to be opened because it has been replaced by mat-menu\r\n    // in the code-templates.component.html template. If you want to use the dialog instead of the menu, you need to remove the\r\n    // mat-menu and replace it with a button that opens the dialog with empty parameters.\r\n    // Dialog has been replaced by menu because from update to Angular 16 CreateFileDialogComponent wasn't opening anymore if\r\n    // FileLocationDialogComponent dialog was used.\r\n    // if (params.isShared == null) {\r\n    //   const fileLocationDialogRef = this.dialog.open(FileLocationDialogComponent, {\r\n    //     autoFocus: false,\r\n    //     viewContainerRef: this.viewContainerRef,\r\n    //     width: '650px',\r\n    //   });\r\n    //   fileLocationDialogRef.afterClosed().subscribe((isShared?: boolean) => {\r\n    //     if (isShared == null) { return; }\r\n    //     params.isShared = isShared;\r\n    //     this.createTemplate(params);\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    const createFileDialogData: CreateFileDialogData = {\r\n      folder: params.folder,\r\n      global: params.isShared,\r\n      purpose: params.folder === 'api' || params.folder?.startsWith('api/') ? 'Api' : undefined,\r\n    };\r\n    const createFileDialogRef = this.dialog.open(CreateFileDialogComponent, {\r\n      autoFocus: false,\r\n      data: createFileDialogData,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '650px',\r\n    });\r\n\r\n    createFileDialogRef.afterClosed().subscribe((result?: CreateFileDialogResult) => {\r\n      if (!result) { return; }\r\n\r\n      this.sourceService.create(result.name, params.isShared, result.templateKey).subscribe(() => {\r\n        this.sourceService.getAll().subscribe(files => {\r\n          this.templates$.next(files);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  insertSnippet(snippet: string): void {\r\n    this.monacoEditorRef?.insertSnippet(snippet);\r\n  }\r\n\r\n  codeChanged(code: string, viewKey: ViewKey): void {\r\n    let viewInfos = this.viewInfos$.value;\r\n    const selectedIndex = viewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    const selectedViewInfo = viewInfos[selectedIndex];\r\n    const newViewInfo: ViewInfo = {\r\n      ...selectedViewInfo,\r\n      view: {\r\n        ...selectedViewInfo.view,\r\n        Code: code,\r\n      },\r\n    };\r\n    viewInfos = [...viewInfos.slice(0, selectedIndex), newViewInfo, ...viewInfos.slice(selectedIndex + 1)];\r\n    this.viewInfos$.next(viewInfos);\r\n  }\r\n\r\n  openView(viewKey: ViewKey): void {\r\n    // fix viewKey because it can be a templateId or a path, and file might already be open\r\n    viewKey = this.viewInfos$.value.find(\r\n      v => !RxHelpers.objectsEqual(v.viewKey, viewKey) && v.view?.FileName === viewKey.key && v.view?.IsShared === viewKey.shared\r\n    )?.viewKey ?? viewKey;\r\n\r\n    const oldActiveView = this.activeView$.value;\r\n    if (!RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      this.activeView$.next(viewKey);\r\n    }\r\n    const oldOpenViews = this.openViews$.value;\r\n    if (!oldOpenViews.some(v => RxHelpers.objectsEqual(v, viewKey))) {\r\n      const newOpenViews = [...oldOpenViews, viewKey];\r\n      this.openViews$.next(newOpenViews);\r\n    }\r\n  }\r\n\r\n  closeEditor(viewKey: ViewKey): void {\r\n    const oldOpenViews = this.openViews$.value;\r\n    const newOpenViews = oldOpenViews.filter(key => !RxHelpers.objectsEqual(key, viewKey));\r\n\r\n    const oldActiveView = this.activeView$.value;\r\n    if (RxHelpers.objectsEqual(oldActiveView, viewKey)) {\r\n      const newActiveView = oldOpenViews[oldOpenViews.findIndex(v => RxHelpers.objectsEqual(v, oldActiveView)) - 1] ?? newOpenViews[0];\r\n      this.activeView$.next(newActiveView);\r\n    }\r\n\r\n    this.openViews$.next(newOpenViews);\r\n  }\r\n\r\n  save(viewKey?: ViewKey): void {\r\n    viewKey ??= this.activeView$.value;\r\n    const viewInfo = this.viewInfos$.value.find(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n    if (viewInfo?.view == null) { return; }\r\n\r\n    this.snackBar.open('Saving...');\r\n    const codeToSave = viewInfo.view.Code;\r\n    this.sourceService.save(viewKey.key, viewKey.shared, viewInfo.view, this.urlItems).subscribe({\r\n      next: res => {\r\n        if (!res) {\r\n          this.snackBar.open('Failed', null, { duration: 2000 });\r\n          return;\r\n        }\r\n\r\n        let newViewInfos = [...this.viewInfos$.value];\r\n        const selectedIndex = newViewInfos.findIndex(v => RxHelpers.objectsEqual(v.viewKey, viewKey));\r\n        if (selectedIndex < 0) { return; }\r\n\r\n        const selectedViewInfo = newViewInfos[selectedIndex];\r\n        const newViewInfo: ViewInfo = {\r\n          ...selectedViewInfo,\r\n          savedCode: codeToSave,\r\n        };\r\n        newViewInfos = [...newViewInfos.slice(0, selectedIndex), newViewInfo, ...newViewInfos.slice(selectedIndex + 1)];\r\n        this.viewInfos$.next(newViewInfos);\r\n        this.snackBar.open('Saved', null, { duration: 2000 });\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Failed', null, { duration: 2000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Show info about editions if other files with the same name exist */\r\n  private showCodeAndEditionWarnings(viewKey: ViewKey, view: SourceView, files: FileAsset[]): void {\r\n    const pathAndName = view.FileName;\r\n    const pathSeparator = pathAndName.indexOf('/') > -1 ? pathAndName.lastIndexOf('/') + 1 : 0;\r\n    const pathWithSlash = pathSeparator === 0 ? '' : pathAndName.substring(0, pathSeparator);\r\n    const fullName = pathAndName.substring(pathSeparator);\r\n    const name = fullName.substring(0, fullName.length - view.Extension.length);\r\n    const nameCode = name + '.code' + view.Extension;\r\n    // find out if we also have a code file\r\n    const codeFile = files.find(file => file.Path === pathWithSlash + nameCode && file.Shared === view.IsShared);\r\n    const otherEditions = files.filter(file => file.Path.endsWith(fullName) && file.Shared === view.IsShared).length - 1;\r\n\r\n    if (codeFile || otherEditions) {\r\n      const snackBarData: CodeAndEditionWarningsSnackBarData = {\r\n        fileName: fullName,\r\n        codeFile: codeFile?.Path,\r\n        edition: this.urlItems\r\n          .find(i => i.EntityId?.toString() === viewKey.key && i.IsShared === view.IsShared && i.Path === view.FileName)?.Edition,\r\n        otherEditions,\r\n        openCodeBehind: false,\r\n      };\r\n      const snackBarRef = this.snackBar.openFromComponent(CodeAndEditionWarningsComponent, {\r\n        data: snackBarData,\r\n        duration: 10000,\r\n      });\r\n\r\n      snackBarRef.onAction().subscribe(() => {\r\n        if ((snackBarRef.containerInstance.snackBarConfig.data as CodeAndEditionWarningsSnackBarData).openCodeBehind) {\r\n          const openViewKey: ViewKey = { key: codeFile?.Path, shared: codeFile?.Shared };\r\n          this.openView(openViewKey);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private attachListeners(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<BeforeUnloadEvent>(window, 'beforeunload').subscribe(event => {\r\n          const allSaved = !this.viewInfos$.value.some(v => v.view != null && v.view.Code !== v.savedCode);\r\n          if (allSaved) { return; }\r\n          event.preventDefault();\r\n          event.returnValue = ''; // fix for Chrome\r\n        })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<KeyboardEvent>(window, 'keydown').subscribe(event => {\r\n          const CTRL_S = event.keyCode === 83 && (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey);\r\n          if (!CTRL_S) { return; }\r\n          event.preventDefault();\r\n          this.zone.run(() => { this.save(); });\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services/content-types.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Field, FieldInputTypeOption } from '../models/field.model';\r\nimport { InputType } from '../models/input-type.model';\r\nimport { ReservedNames } from '../models/reserved-names.model';\r\nimport { InputTypeStrict } from '../constants/input-type.constants';\r\n\r\nexport const webApiFieldsRoot = 'admin/field/';\r\nexport const webApiFieldsAll = 'admin/field/all';\r\nexport const webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.http.get<string[]>(this.apiUrl(webApiFieldsRoot + 'DataTypes'), {\r\n      params: { appid: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.http\r\n      .get<InputType[]>(this.apiUrl(webApiFieldsRoot + 'InputTypes'), { params: { appid: this.context.appId.toString() } })\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => {\r\n            const option: FieldInputTypeOption = {\r\n              dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n              inputType: config.Type,\r\n              label: config.Label,\r\n              description: config.Description,\r\n              isDefault: config.IsDefault,\r\n              isObsolete: config.IsObsolete,\r\n              isRecommended: config.IsRecommended,\r\n              obsoleteMessage: config.ObsoleteMessage,\r\n              icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n            };\r\n            return option;\r\n          });\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.http.get<ReservedNames>(this.apiUrl(webApiFieldsRoot + 'ReservedNames'));\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsAll), {\r\n        params: { appid: this.context.appId.toString(), staticName: contentTypeStaticName },\r\n      })\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) { continue; }\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.http.get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString() },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * \r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * \r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    // TODO: @SDV - do the same as in getShareableFields()\r\n    // but add parameter attributeId to the webapi call\r\n    // I'll create the backend afterwards\r\n    return this.http\r\n      .get<Field[]>(this.apiUrl(webApiFieldsGetShared), {\r\n        params: { appid: this.context.appId.toString(), attributeId: attributeId.toString() },\r\n      });\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceContentTypeStaticName: string, sourceFieldGuid: string, newName: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'AddInheritedField'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: targetContentTypeId.toString(),\r\n        SourceType: sourceContentTypeStaticName,\r\n        SourceField: sourceFieldGuid,\r\n        name: newName,\r\n      }\r\n    });\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Share'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Inherit'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'Sort'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiTypeRoot + 'SetTitle'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiFieldsRoot + 'Rename'), null, {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle) {\r\n      throw new Error('Can\\'t delete Title');\r\n    }\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiFieldsRoot + 'Delete'), {\r\n      params: {\r\n        appid: this.context.appId.toString(),\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiFieldsRoot + 'Add'), null, {\r\n      params: {\r\n        AppId: this.context.appId.toString(),\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(id: number, staticName: string, inputType: InputTypeStrict) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiFieldsRoot + 'InputType'), null, {\r\n      params: { appId: this.context.appId.toString(), attributeId: id.toString(), field: staticName, inputType }\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}