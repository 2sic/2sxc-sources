{"version":3,"file":"projects_eav-ui_src_app_app-administration_data-rest-api_data-rest-api_component_ts.ea2bb2104cdaf22a.js","mappings":"oYAMQA,MAAA,kBACEA,MAAA,GACFA,kCAFYA,MAAA,QAAAC,EAAAC,YACVF,cAAA,IAAAC,EAAAE,MAAA,2BAFFH,MAAA,EAAAI,EAAA,mBAAAJ,kBAAAK,EAAAC,QC4BD,IAAMC,EAAoB,MAA3B,MAAOA,EAOXC,YACUC,EACAC,EACAC,GAFAC,KAAAH,KACAG,KAAAF,SACAE,KAAAD,QATFC,KAAAC,uBAAsBC,KAAUC,MACxCH,KAAAI,cAAgB,IAAIC,SAA+BC,GACnDN,KAAAO,aAA8B,EAQ1B,CAEJC,WACER,KAAKS,YACLT,KAAKU,gBAAkBV,KAAKH,GAAGc,MAAM,CACnCC,YAAa,CAAC,KAElB,CAEAH,YACET,KAAKC,oBAAoBY,qBAAqB,WAAWC,UACtDP,IACCP,KAAKI,cAAcW,KAAKR,GAExB,MAAMS,EAAchB,KAAKF,OAAOmB,IAAIC,MAAM,KACpCC,EAAgBH,EAAYA,EAAYI,OAAS,GAEjDC,EAAsBd,EAAae,KAAKV,GAAeA,EAAYtB,aAAe6B,GACpFE,GACFrB,KAAKU,gBAAgBa,IAAI,eAAeC,SAASH,EAAoB/B,WAAU,EAGvF,CAEAmC,YAAYC,GACLA,GACL1B,KAAKF,OAAO6B,SAAS,CAAC,GAAGD,KAAU,CAAEE,WAAY5B,KAAKD,MAAM8B,OAAOC,YACrE,CAACC,SAAA/B,KAAA,mBAAAgC,iBAtCUrC,GAAoBP,MAAA6C,MAAA7C,MAAA8C,MAAA9C,MAAA8C,MAAA,EAAAH,SAAA/B,KAAA,UAAAmC,EAAAC,IAAA,MAApBzC,EAAoB0C,UAAA,wBAAAC,YAAA,EAAAC,SAAA,CAAAnD,OAAAoD,MAAA,EAAAC,KAAA,EAAAC,OAAA,0HAAAC,SAAA,SAAAC,EAAAnD,MAAA,EAAAmD,ID/B7BxD,MAFJ,WAEIA,CAFgC,qBAEhCA,CADwD,eAC7CA,MAAA,kBAAYA,QACvBA,MAAA,kBAA0CA,MAAA,uBAAAyD,GAAA,OAAepD,EAAAgC,YAAAoB,EAAmB,GAC1EzD,MAAA,EAAA0D,EAAA,sBASN1D,YAEAA,MAAA,+BAfMA,MAAA,YAAAK,EAAAiB,iBAIAtB,MAAA,GAAAA,MAAA,GAAA2D,EAAA3D,MAAA,IAAAK,EAAAW,gBAAA,KAAA2C,mBCgBFC,KAAeC,UAAAC,KAAAC,KACfC,KACAC,KACAC,KACAC,KAAmBtB,yBACnBuB,KAEAC,KACAC,cAKS/D,CAAoB","names":["i0","contentType_r1","StaticName","Label","DataRestApiComponent_Conditional_5_For_1_Template","ctx","sort","DataRestApiComponent","constructor","fb","router","route","this","contentTypesService","transient","ContentTypesService","contentTypes$","BehaviorSubject","undefined","contentTypes","ngOnInit","fetchData","contentTypeForm","group","contentType","retrieveContentTypes","subscribe","next","urlSegments","url","split","urlStaticName","length","selectedContentType","find","get","setValue","openRestApi","event","navigate","relativeTo","parent","firstChild","static","t","i1","i2","_angular_core__WEBPACK_IMPORTED_MODULE_2__","VBU","selectors","standalone","features","decls","vars","consts","template","rf","$event","DataRestApiComponent_Conditional_5_Template","tmp_1_0","MatSelectModule","i3","i4","i5","MatButtonModule","MatCardModule","MatIconModule","ReactiveFormsModule","AsyncPipe","RouterOutlet","SxcGridModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.html","./projects/eav-ui/src/app/app-administration/data-rest-api/data-rest-api.component.ts"],"sourcesContent":["<form [formGroup]=\"contentTypeForm\">\r\n  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n    <mat-label>Content-Type</mat-label>\r\n    <mat-select formControlName=\"contentType\" (valueChange)=\"openRestApi($event)\">\r\n      @if (contentTypes$ | async; as contentTypes) {\r\n        @for (contentType of contentTypes.sort() ; track contentType) {\r\n        <mat-option [value]=\"contentType.StaticName\" >\r\n          {{ contentType.Label }}\r\n        </mat-option>\r\n        }\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n</form>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\nimport { ContentTypesService } from '../services';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ContentType } from '../models';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { DevRestDataComponent } from '../../dev-rest/data/data.component';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { MetadataService } from '../../permissions';\r\nimport { transient } from '../../core';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\n\r\n@Component({\r\n  selector: 'app-data-rest-api',\r\n  standalone: true,\r\n  imports: [\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    AsyncPipe,\r\n    DevRestDataComponent,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n  ],\r\n  templateUrl: './data-rest-api.component.html',\r\n  styleUrl: './data-rest-api.component.scss'\r\n})\r\nexport class DataRestApiComponent {\r\n  private contentTypesService = transient(ContentTypesService);\r\n  contentTypes$ = new BehaviorSubject<ContentType[]>(undefined);\r\n  contentTypes: ContentType[] = [];\r\n\r\n  contentTypeForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchData();\r\n    this.contentTypeForm = this.fb.group({\r\n      contentType: ['']\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    this.contentTypesService.retrieveContentTypes(\"Default\").subscribe(\r\n      (contentTypes: ContentType[]) => {\r\n        this.contentTypes$.next(contentTypes);\r\n        // When Route are reload and have some StaticName in the Route\r\n        const urlSegments = this.router.url.split('/');\r\n        const urlStaticName = urlSegments[urlSegments.length - 1]\r\n\r\n        const selectedContentType = contentTypes.find(contentType => contentType.StaticName === urlStaticName);\r\n        if (selectedContentType)\r\n          this.contentTypeForm.get('contentType').setValue(selectedContentType.StaticName);\r\n      }\r\n    );\r\n  }\r\n\r\n  openRestApi(event: string): void {\r\n    if (!event) return;\r\n    this.router.navigate([`${event}`], { relativeTo: this.route.parent.firstChild });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}