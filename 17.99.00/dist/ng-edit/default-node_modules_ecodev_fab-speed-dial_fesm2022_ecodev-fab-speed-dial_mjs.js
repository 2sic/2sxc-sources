"use strict";
(self["webpackChunkeav_ui"] = self["webpackChunkeav_ui"] || []).push([["default-node_modules_ecodev_fab-speed-dial_fesm2022_ecodev-fab-speed-dial_mjs"],{

/***/ 23183:
/*!********************************************************************************!*\
  !*** ./node_modules/@ecodev/fab-speed-dial/fesm2022/ecodev-fab-speed-dial.mjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EcoFabSpeedDialActionsComponent: () => (/* binding */ EcoFabSpeedDialActionsComponent),
/* harmony export */   EcoFabSpeedDialComponent: () => (/* binding */ EcoFabSpeedDialComponent),
/* harmony export */   EcoFabSpeedDialModule: () => (/* binding */ EcoFabSpeedDialModule),
/* harmony export */   EcoFabSpeedDialTriggerComponent: () => (/* binding */ EcoFabSpeedDialTriggerComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 37580);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/button */ 84175);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 60316);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 18537);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 61873);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 64334);







const _c0 = [[["", "mat-mini-fab", ""]]];
const _c1 = ["[mat-mini-fab]"];
function EcoFabSpeedDialActionsComponent_ng_content_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0, 0, ["*ngIf", "miniFabVisible"]);
  }
}
const _c2 = [[["eco-fab-speed-dial-trigger"]], [["eco-fab-speed-dial-actions"]]];
const _c3 = ["eco-fab-speed-dial-trigger", "eco-fab-speed-dial-actions"];
const _c4 = [[["", "mat-fab", ""]]];
const _c5 = ["[mat-fab]"];
const Z_INDEX_ITEM = 23;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function getHostElement(button) {
  return button._elementRef.nativeElement;
}
class EcoFabSpeedDialActionsComponent {
  constructor(injector, renderer) {
    this.renderer = renderer;
    /**
     * Whether the min-fab button exist in DOM
     */
    this.miniFabVisible = false;
    /**
     * When we will remove mini-fab buttons from DOM, after the animation is complete
     */
    this.hideMiniFab = null;
    this._parent = injector.get(EcoFabSpeedDialComponent);
  }
  ngAfterContentInit() {
    this._buttons.changes.subscribe(() => {
      this.initButtonStates();
      this._parent.setActionsVisibility();
    });
    this.initButtonStates();
  }
  initButtonStates() {
    this._buttons.forEach((button, i) => {
      this.renderer.addClass(getHostElement(button), 'eco-fab-action-item');
      this.changeElementStyle(getHostElement(button), 'z-index', '' + (Z_INDEX_ITEM - i));
    });
  }
  show() {
    if (!this._buttons) {
      return;
    }
    this.resetAnimationState();
    this.miniFabVisible = true;
    this.showMiniFabAnimation = setTimeout(() => {
      this._buttons.forEach((button, i) => {
        let transitionDelay = 0;
        let transform;
        if (this._parent.animationMode === 'scale') {
          // Incremental transition delay of 65ms for each action button
          transitionDelay = 3 + 65 * i;
          transform = 'scale(1)';
        } else {
          transform = this.getTranslateFunction('0');
        }
        const hostElement = getHostElement(button);
        this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');
        this.changeElementStyle(hostElement, 'opacity', '1');
        this.changeElementStyle(hostElement, 'transform', transform);
      });
    }, 50); // Be sure that *ngIf can show elements before trying to animate them
  }
  resetAnimationState() {
    clearTimeout(this.showMiniFabAnimation);
    if (this.hideMiniFab) {
      this.hideMiniFab.unsubscribe();
      this.hideMiniFab = null;
    }
  }
  hide() {
    if (!this._buttons) {
      return;
    }
    this.resetAnimationState();
    const obs = this._buttons.map((button, i) => {
      let opacity = '1';
      let transitionDelay = 0;
      let transform;
      if (this._parent.animationMode === 'scale') {
        transitionDelay = 3 - 65 * i;
        transform = 'scale(0)';
        opacity = '0';
      } else {
        transform = this.getTranslateFunction(55 * (i + 1) - i * 5 + 'px');
      }
      const hostElement = getHostElement(button);
      this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');
      this.changeElementStyle(hostElement, 'opacity', opacity);
      this.changeElementStyle(hostElement, 'transform', transform);
      return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(hostElement, 'transitionend').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.take)(1));
    });
    // Wait for all animation to finish, then destroy their elements
    this.hideMiniFab = (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.forkJoin)(obs).subscribe(() => this.miniFabVisible = false);
  }
  getTranslateFunction(value) {
    const dir = this._parent.direction;
    const translateFn = dir === 'up' || dir === 'down' ? 'translateY' : 'translateX';
    const sign = dir === 'down' || dir === 'right' ? '-' : '';
    return translateFn + '(' + sign + value + ')';
  }
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  changeElementStyle(elem, style, value) {
    // FIXME - Find a way to create a "wrapper" around the action button(s) provided by the user, so we don't change it's style tag
    this.renderer.setStyle(elem, style, value);
  }
  static #_ = this.ɵfac = function EcoFabSpeedDialActionsComponent_Factory(t) {
    return new (t || EcoFabSpeedDialActionsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2));
  };
  static #_2 = this.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: EcoFabSpeedDialActionsComponent,
    selectors: [["eco-fab-speed-dial-actions"]],
    contentQueries: function EcoFabSpeedDialActionsComponent_ContentQueries(rf, ctx, dirIndex) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _angular_material_button__WEBPACK_IMPORTED_MODULE_4__.MatMiniFabButton, 4);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx._buttons = _t);
      }
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    ngContentSelectors: _c1,
    decls: 1,
    vars: 1,
    consts: [[4, "ngIf"]],
    template: function EcoFabSpeedDialActionsComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](_c0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, EcoFabSpeedDialActionsComponent_ng_content_0_Template, 1, 0, "ng-content", 0);
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.miniFabVisible);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf],
    encapsulation: 2
  });
}
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EcoFabSpeedDialActionsComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'eco-fab-speed-dial-actions',
      template: ` <ng-content select="[mat-mini-fab]" *ngIf="miniFabVisible"></ng-content>`,
      standalone: true,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }];
  }, {
    _buttons: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChildren,
      args: [_angular_material_button__WEBPACK_IMPORTED_MODULE_4__.MatMiniFabButton]
    }]
  });
})();
/** @dynamic @see https://github.com/angular/angular/issues/20351#issuecomment-344009887 */
class EcoFabSpeedDialComponent {
  /**
   * Whether this speed dial is fixed on screen (user cannot change it by clicking)
   */
  get fixed() {
    return this._fixed;
  }
  set fixed(fixed) {
    this._fixed = fixed;
    this._processOutsideClickState();
  }
  /**
   * Whether this speed dial is opened
   */
  get open() {
    return this._open;
  }
  set open(open) {
    const previousOpen = this._open;
    this._open = open;
    if (previousOpen !== this._open) {
      this.openChange.emit(this._open);
      if (this.isInitialized) {
        this.setActionsVisibility();
      }
    }
  }
  /**
   * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'
   */
  get direction() {
    return this._direction;
  }
  set direction(direction) {
    const previousDirection = this._direction;
    this._direction = direction;
    if (previousDirection !== this.direction) {
      this._setElementClass(previousDirection, false);
      this._setElementClass(this.direction, true);
      if (this.isInitialized) {
        this.setActionsVisibility();
      }
    }
  }
  /**
   * The animation mode to open the speed dial. Can be 'fling' or 'scale'
   */
  get animationMode() {
    return this._animationMode;
  }
  set animationMode(animationMode) {
    const previousAnimationMode = this._animationMode;
    this._animationMode = animationMode;
    if (previousAnimationMode !== this._animationMode) {
      this._setElementClass(previousAnimationMode, false);
      this._setElementClass(this.animationMode, true);
      if (this.isInitialized) {
        // To start another detect lifecycle and force the "close" on the action buttons
        Promise.resolve(null).then(() => this.open = false);
      }
    }
  }
  constructor(elementRef, renderer, document) {
    this.elementRef = elementRef;
    this.renderer = renderer;
    this.document = document;
    this.isInitialized = false;
    this._direction = 'up';
    this._open = false;
    this._animationMode = 'fling';
    this._fixed = false;
    this._documentClickUnlistener = null;
    this.openChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
  ngAfterContentInit() {
    this.isInitialized = true;
    this.setActionsVisibility();
    this._setElementClass(this.direction, true);
    this._setElementClass(this.animationMode, true);
  }
  ngOnDestroy() {
    this._unsetDocumentClickListener();
  }
  /**
   * Toggle the open state of this speed dial
   */
  toggle() {
    this.open = !this.open;
  }
  _onClick() {
    if (!this.fixed && this.open) {
      this.open = false;
    }
  }
  setActionsVisibility() {
    if (!this._childActions) {
      return;
    }
    if (this.open) {
      this._childActions.show();
    } else {
      this._childActions.hide();
    }
    this._processOutsideClickState();
  }
  _setElementClass(elemClass, isAdd) {
    const finalClass = `eco-${elemClass}`;
    if (isAdd) {
      this.renderer.addClass(this.elementRef.nativeElement, finalClass);
    } else {
      this.renderer.removeClass(this.elementRef.nativeElement, finalClass);
    }
  }
  _processOutsideClickState() {
    if (!this.fixed && this.open) {
      this._setDocumentClickListener();
    } else {
      this._unsetDocumentClickListener();
    }
  }
  _setDocumentClickListener() {
    if (!this._documentClickUnlistener) {
      this._documentClickUnlistener = this.renderer.listen(this.document, 'click', () => {
        this.open = false;
      });
    }
  }
  _unsetDocumentClickListener() {
    if (this._documentClickUnlistener) {
      this._documentClickUnlistener();
      this._documentClickUnlistener = null;
    }
  }
  static #_ = this.ɵfac = function EcoFabSpeedDialComponent_Factory(t) {
    return new (t || EcoFabSpeedDialComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_5__.DOCUMENT));
  };
  static #_2 = this.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: EcoFabSpeedDialComponent,
    selectors: [["eco-fab-speed-dial"]],
    contentQueries: function EcoFabSpeedDialComponent_ContentQueries(rf, ctx, dirIndex) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, EcoFabSpeedDialActionsComponent, 5);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx._childActions = _t.first);
      }
    },
    hostVars: 2,
    hostBindings: function EcoFabSpeedDialComponent_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function EcoFabSpeedDialComponent_click_HostBindingHandler() {
          return ctx._onClick();
        });
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("eco-opened", ctx.open);
      }
    },
    inputs: {
      fixed: "fixed",
      open: "open",
      direction: "direction",
      animationMode: "animationMode"
    },
    outputs: {
      openChange: "openChange"
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    ngContentSelectors: _c3,
    decls: 3,
    vars: 0,
    consts: [[1, "eco-fab-speed-dial-container"]],
    template: function EcoFabSpeedDialComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](_c2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](2, 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    },
    styles: ["eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:all .3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\n"],
    encapsulation: 2
  });
}
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EcoFabSpeedDialComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'eco-fab-speed-dial',
      template: `
        <div class="eco-fab-speed-dial-container">
            <ng-content select="eco-fab-speed-dial-trigger"></ng-content>
            <ng-content select="eco-fab-speed-dial-actions"></ng-content>
        </div>
    `,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      standalone: true,
      styles: ["eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:all .6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:all .3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:all .3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }, {
      type: Document,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.DOCUMENT]
      }]
    }];
  }, {
    fixed: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    open: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.eco-opened']
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    direction: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    animationMode: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    openChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    _childActions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [EcoFabSpeedDialActionsComponent]
    }],
    _onClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['click']
    }]
  });
})();
class EcoFabSpeedDialTriggerComponent {
  /**
   * Whether this trigger should spin (360dg) while opening the speed dial
   */
  get sp() {
    return this.spin;
  }
  constructor(injector) {
    this.spin = false;
    this._parent = injector.get(EcoFabSpeedDialComponent);
  }
  _onClick(event) {
    if (!this._parent.fixed) {
      this._parent.toggle();
      event.stopPropagation();
    }
  }
  static #_ = this.ɵfac = function EcoFabSpeedDialTriggerComponent_Factory(t) {
    return new (t || EcoFabSpeedDialTriggerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector));
  };
  static #_2 = this.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: EcoFabSpeedDialTriggerComponent,
    selectors: [["eco-fab-speed-dial-trigger"]],
    hostVars: 2,
    hostBindings: function EcoFabSpeedDialTriggerComponent_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function EcoFabSpeedDialTriggerComponent_click_HostBindingHandler($event) {
          return ctx._onClick($event);
        });
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("eco-spin", ctx.sp);
      }
    },
    inputs: {
      spin: "spin"
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    ngContentSelectors: _c5,
    decls: 1,
    vars: 0,
    template: function EcoFabSpeedDialTriggerComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](_c4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0);
      }
    },
    encapsulation: 2
  });
}
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EcoFabSpeedDialTriggerComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'eco-fab-speed-dial-trigger',
      template: ` <ng-content select="[mat-fab]"></ng-content>`,
      standalone: true
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector
    }];
  }, {
    sp: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.eco-spin']
    }],
    spin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    _onClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['click', ['$event']]
    }]
  });
})();
const components = [EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent];
class EcoFabSpeedDialModule {
  static #_ = this.ɵfac = function EcoFabSpeedDialModule_Factory(t) {
    return new (t || EcoFabSpeedDialModule)();
  };
  static #_2 = this.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
    type: EcoFabSpeedDialModule
  });
  static #_3 = this.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
    imports: [EcoFabSpeedDialActionsComponent]
  });
}
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EcoFabSpeedDialModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: components,
      exports: components
    }]
  }], null, null);
})();

/*
 * Public API Surface of fab-speed-dial
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ })

}]);
//# sourceMappingURL=default-node_modules_ecodev_fab-speed-dial_fesm2022_ecodev-fab-speed-dial_mjs.js.map