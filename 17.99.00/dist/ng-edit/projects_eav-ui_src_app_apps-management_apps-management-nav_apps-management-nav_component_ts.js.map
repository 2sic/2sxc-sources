{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/eav-ui/src/app/apps-management/apps-management-nav/managment-nav-items.ts","./projects/eav-ui/src/app/core/transient.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, NavigationEnd, Router, RouterOutlet } from '@angular/router';\r\nimport { combineLatest, filter, map, startWith } from 'rxjs';\r\nimport { BaseWithChildDialogComponent } from '../../shared/components/base-with-child-dialog.component';\r\nimport { Context } from '../../shared/services/context';\r\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { AppsManagementNavItems } from './managment-nav-items';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { BreadcrumbModule } from 'xng-breadcrumb';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NavItemListComponent } from '../../shared/components/nav-item-list/nav-item-list.component';\r\nimport { transient } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    BreadcrumbModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    NavItemListComponent\r\n  ],\r\n})\r\nexport class AppsManagementNavComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n\r\n  private appDialogConfigService = transient(AppDialogConfigService);\r\n\r\n  zoneId = this.context.zoneId;\r\n\r\n  private currentPath$ = combineLatest([\r\n    this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map(() => this.route.snapshot.firstChild.url[0].path),\r\n      startWith(this.route.snapshot.firstChild.url[0].path)\r\n    ),\r\n  ]).pipe(\r\n    map(([paths]) => {\r\n      if (paths == null) return;\r\n      return paths;\r\n    })\r\n  );\r\n\r\n  // Generate View Model\r\n  viewModel$ = combineLatest([this.currentPath$]).pipe(\r\n    map(([currentPath]) => {\r\n      return {\r\n        currentPath,\r\n      };\r\n    })\r\n  );\r\n\r\n  smallScreen: MediaQueryList = this.media.matchMedia('(max-width: 1000px)');\r\n  @ViewChild('sidenav') sidenav!: MatSidenav;\r\n  sideNavOpened = !this.smallScreen.matches;\r\n\r\n  navItems = AppsManagementNavItems;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private context: Context,\r\n    private media: MediaMatcher,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDialogSettings();\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => {\r\n        this.fetchDialogSettings();\r\n      })\r\n    );\r\n\r\n    this.smallScreen.addEventListener(\r\n      'change',\r\n      (c) => (\r\n        this.sidenav.opened = !c.matches,\r\n        this.sidenav.mode = c.matches ? 'over' : 'side'\r\n      )\r\n    );\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // @2dg not longer in use with new routing SideNav\r\n  // changeUrl(path: string) {\r\n  //   this.router.navigate([path], { relativeTo: this.route });\r\n  // }\r\n\r\n  private fetchDialogSettings() {\r\n    this.appDialogConfigService.getShared$(0).subscribe();\r\n  }\r\n\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<mat-toolbar>\r\n  <div class=\"toolbar-container\">\r\n    <!-- Mat Icon Menu -->\r\n    <mat-icon class=\"menu-container\" (click)=\"sidenav.opened = !sidenav.opened\">menu</mat-icon>\r\n    <!-- App Name -->\r\n    <div>\r\n      <span> Manage Zone {{ zoneId }} </span>\r\n    </div>\r\n    <!-- Breadcrum in the Toolbar after show Img and Aoo Name -->\r\n    <xng-breadcrumb [separator]=\"emptyTemplate\">\r\n      <ng-container *xngBreadcrumbItem=\"let breadcrumb; let info = info; let last = last\">\r\n        @if (last) {\r\n        <mat-icon class=\"breadcrumb-icon\">chevron_right</mat-icon>\r\n        {{ breadcrumb }}\r\n        }\r\n      </ng-container>\r\n    </xng-breadcrumb>\r\n    <ng-template #emptyTemplate></ng-template>\r\n  </div>\r\n  <span class=\"toolbar-spacer\"></span>\r\n  <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<mat-sidenav-container>\r\n  <mat-sidenav #sidenav [mode]=\"smallScreen.matches ? 'over' : 'side'\" [opened]=\"sideNavOpened\">\r\n    @for (navItem of navItems; track navItem.path) {\r\n    <app-nav-item-list [navItem]=\"navItem\"></app-nav-item-list>\r\n    }\r\n\r\n    <div class=\"sideNav-bottom-info\">\r\n      <p>use Burger icon to show/hide menu</p>\r\n    </div>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <div class=\"container-content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n}\r\n","import { NavItem } from \"../../shared/models/nav-item.model\";\r\n\r\nexport const AppsManagementNavItems: NavItem[] = [\r\n  {\r\n    name: 'System', path: 'system', icon: 'settings', svgIcon: false, tippy: 'System Info', child: [\r\n      { name: 'Register', path: 'registration', icon: 'how_to_reg', svgIcon: false, tippy: 'Register this System on 2sxc Patrons' },\r\n    ]\r\n  },\r\n  { name: 'Apps', path: 'list', icon: 'star_border', svgIcon: false, tippy: 'Apps' },\r\n  { name: 'Languages', path: 'languages', icon: 'translate', svgIcon: false, tippy: 'Languages' },\r\n  { name: 'Extensions / Features', path: 'license', icon: 'tune', svgIcon: false, tippy: 'Extensions and Features' },\r\n];\r\n","import { Injector, ProviderToken, TypeProvider, inject } from '@angular/core';\r\n\r\n/**\r\n * Transient dependency injection provider.\r\n * This will create a new instance of the provided token,\r\n * without making it available in sub-components\r\n * as would happen with providers in a component.\r\n * \r\n * @param token the class which is injectable\r\n * @param injector the injector to use, if not provided, the current injector will be used.\r\n *     Not not necessary when using transient in the class properties construction or in the constructor,\r\n *     as the injector will be available in the constructor.\r\n *     But necessary when using transient inside anything else.\r\n * @returns \r\n */\r\nexport function transient<T>(token: ProviderToken<T>, injector?: Injector): T {\r\n  // make sure we have an injector\r\n  // this will throw an error, if transient is used outside of construction and without providing an injector\r\n  injector ??= inject(Injector);\r\n\r\n  // create a new injector which is only meant to be used for this transient instance\r\n  const subInjector = Injector.create({\r\n    providers: [\r\n      token as TypeProvider\r\n    ],\r\n    parent: injector\r\n  });\r\n\r\n  // return the instance\r\n  return subInjector.get(token, undefined, { self: true });\r\n}\r\n"],"names":["MatDialogRef","ActivatedRoute","NavigationEnd","Router","RouterOutlet","combineLatest","filter","map","startWith","BaseWithChildDialogComponent","Context","MatSidenav","MatSidenavModule","MediaMatcher","AppDialogConfigService","AppsManagementNavItems","AsyncPipe","MatButtonModule","BreadcrumbModule","MatIconModule","MatToolbarModule","NavItemListComponent","transient","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","breadcrumb_r3","ɵɵelementContainerStart","ɵɵtemplate","AppsManagementNavComponent_Conditional_0_ng_container_8_Conditional_1_Template","ɵɵconditional","last_r4","ɵɵelement","ɵɵproperty","navItem_r6","ɵɵlistener","AppsManagementNavComponent_Conditional_0_Template_mat_icon_click_2_listener","ɵɵrestoreView","_r1","sidenav_r2","ɵɵreference","ɵɵresetView","opened","AppsManagementNavComponent_Conditional_0_ng_container_8_Template","AppsManagementNavComponent_Conditional_0_ng_template_9_Template","ɵɵtemplateRefExtractor","AppsManagementNavComponent_Conditional_0_Template_button_click_12_listener","ctx_r4","ɵɵnextContext","closeDialog","ɵɵrepeaterCreate","AppsManagementNavComponent_Conditional_0_For_19_Template","_forTrack0","zoneId","emptyTemplate_r7","smallScreen","matches","sideNavOpened","ɵɵrepeater","navItems","AppsManagementNavComponent","constructor","router","route","dialogRef","context","media","appDialogConfigService","currentPath$","events","pipe","event","snapshot","firstChild","url","path","paths","viewModel$","currentPath","matchMedia","ngOnInit","fetchDialogSettings","subscriptions","add","childDialogClosed$","subscribe","addEventListener","c","sidenav","mode","close","getShared$","_","ɵɵdirectiveInject","i1","i2","i3","i4","_2","selectors","viewQuery","AppsManagementNavComponent_Query","rf","ctx","AppsManagementNavComponent_Conditional_0_Template","tmp_0_0","ɵɵpipeBind1","i5","MatToolbar","i6","MatIcon","i7","BreadcrumbComponent","BreadcrumbItemDirective","i8","MatIconButton","i9","MatSidenavContainer","MatSidenavContent","styles","name","icon","svgIcon","tippy","child","Injector","inject","token","injector","subInjector","create","providers","parent","get","undefined","self"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}