{"version":3,"file":"main.a600eca06df99b4f.js","mappings":"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","names":["DebugConfig","Log","this","forceLogToConsole","constructor","name","parent","autoDump","logs","Array","loggers","Object","add","msg","args","push","arguments","Constants","console","log","apply","subLog","newLog","dump","configureRuntimeLogging","state","window","logger","parentLog","BootController","_reboot","Subject","rebootRequest$","asObservable","getRebootController","instance","reboot","next","Config","appId","parseInt","get","apps","moduleId","Number","req","cbId","getSxcInstance","$2sxc","key","urlParams","require","SupportedLanguages","i18nPrefix","BackendSettings","http","BehaviorSubject","data","pipe","distinctUntilChanged","switchMap","id","map","bundle","Context","share","showAdvanced$","settings","Enable","CodeEditor","setApp","i0","i1","factory","ɵfac","providedIn","AppIconsService","matIconRegistry","load","setDefaultFontSetClass","BehaviorObservable","Observable","super","create","initialValue","subj","obs","subject","reset","isInitial","value","cViewWithoutContent","ContentTypesProcessor","translate","buildList","allTypes","type","allTemplates","template","unhide","unhideSelectedType","addEmptyTypeIfNeeded","filtered","hideNecessaryTypes","sortTypes","types","filter","t","IsHidden","contentTypes","currentType","currentTemplate","c","StaticName","undefined","forEach","templates","layoutElementLabel","instant","find","ContentTypeStaticName","slice","Name","Thumbnail","Label","sort","a","b","localeCompare","sortTypesWithDefault","IsDefault","firstDefault","findContentTypesById","selectedContentTypeId","TemplateProcessor","pickSelected","selected","app","TemplateId","length","sortTemplates","App","json","assign","VersionMain","Version","substr","uninitializedList","PickerService","apps$","contentTypes$","templates$","ready$","mustLoadApps","buildObservables","enableLogging","combineLatest","ct","set","startWith","saveAppId","reloadParts","loadApps","Error","post","toPromise","initLoading","requireApps","reloadAppParts","loadTemplates","loadContentTypes","subscribe","response","Properties","alreadyLoaded","appsFilter","streamLog","r","TemplateFilterPipe","transform","typeId","contentType","typeNameFilter","isContent","pure","CurrentDataService","api","templateFilter","ctProcessor","appId$","initialTypeId$","initialTemplateId$","selectedType$","selectedTemplate$","buildBasicObservables","app$","AppId","initialType$","all","type$","merge","current","findTemplatesForTypeOrAll","initialTemplate$","selected$","template$","types$","init","config","JSON","stringify","appReady$","typeReady$","scan","acc","contentTypeId","templReady$","debounceTime","templateId","loadAll$","initLogging","activateCurrentApp","inita$","inittyp$","initt$","initAll$","slog","initLog","activateType","activateTemplate","i2","i3","FilterByPropertyValuePipe","input","propertyName","filterValue","i","toLocaleLowerCase","includes","FilterByBoolPropertyPipe","InstallerService","installPackages","packages","step","reduce","url","of","AppInstallSettingsService","installSettingsSubject","settings$","tap","loadGettingStarted","isContentApp","ctx_r0","currentPackage","displayName","remoteInstallerUrl","_r2","sendMessage","toggleSimulate","devSimulateInstall","InstallerComponent","installer","sanitizer","ready","subscriptions","showDebug","alreadyProcessing","messages$","fromEvent","evt","parse","e","error","bypassSecurityTrustResourceUrl","remoteUrl","dashInfo","frameElement","bridge","getAdditionalDashboardConfig","debug","bootController","destroy","sub","unsubscribe","ngOnInit","action","winFrame","installerWindow","nativeElement","specsMsg","installedApps","rules","specsJson","contentWindow","postMessage","values","confirm","showProgress","alert","p","top","location","reload","catchError","Message","message","selectors","viewQuery","rf","ctx","InstallerComponent_Conditional_0_Template","InstallerComponent_Conditional_1_Template","InstallerComponent_Conditional_2_Template","MatProgressSpinnerModule","i4","styles","defaultContentType","tmp_2_0","tabIndex","preventTypeSwitch","preventAppSwitch","installerNeeded","isInnerContent","installerShow","showInstallAndAllApps","persistTemplate","_r3","cancel","$event","_r4","_r5","appFilter","_r6","contentTypeFilter","_r7","TemplatePickerComponent_Conditional_10_Conditional_1_Template","TemplatePickerComponent_Conditional_10_Conditional_2_Template","TemplatePickerComponent_Conditional_10_Conditional_3_Template","_r8","run","_r9","_r10","a_r12","_r11","$implicit","selectApp","switchTab","TemplatePickerComponent_Conditional_14_Conditional_0_For_2_Conditional_2_Template","TemplatePickerComponent_Conditional_14_Conditional_0_For_2_Conditional_3_Template","_c3","_c4","TemplatePickerComponent_Conditional_14_Conditional_0_For_2_Template","_c2","c_r14","_r13","selectContentType","TemplatePickerComponent_Conditional_14_Conditional_1_For_2_Conditional_3_Template","TemplatePickerComponent_Conditional_14_Conditional_1_For_2_Conditional_4_Template","TemplatePickerComponent_Conditional_14_Conditional_1_For_2_Template","TemplatePickerComponent_Conditional_14_Conditional_0_Template","TemplatePickerComponent_Conditional_14_Conditional_1_Template","TemplatePickerComponent_Conditional_15_Conditional_1_For_4_Conditional_3_Conditional_1_Template","TemplatePickerComponent_Conditional_15_Conditional_1_For_4_Conditional_3_Conditional_2_Template","t_r16","_r15","selectTemplate","TemplatePickerComponent_Conditional_15_Conditional_1_For_4_Conditional_2_Template","TemplatePickerComponent_Conditional_15_Conditional_1_For_4_Conditional_3_Template","_c5","TemplatePickerComponent_Conditional_15_Conditional_1_Conditional_1_Template","TemplatePickerComponent_Conditional_15_Conditional_1_For_4_Template","templatesLoading$","TemplatePickerComponent_Conditional_15_Conditional_0_Template","TemplatePickerComponent_Conditional_15_Conditional_1_Template","TemplatePickerComponent_Conditional_16_Conditional_2_Template","TemplatePickerComponent_Conditional_16_Conditional_3_Template","TemplatePickerComponent","backendSettings","cdRef","showCancel","showSearchBar","showAdminApp","loading$","observablesAlreadyInitialized","boot","autosyncObservablesToEnsureUiUpdates","initDone$","initObservables","initValuesFromBridge","debugObservables","l","initTrue$","loading","typeOrAppReady","_","_2","showAdv","skipUntil","previewTemplate","detectChanges","hasContent","supportsAjax","setTemplate","before","after","updateApp","setContentType","newApp","ajax","SupportsAjaxReload","showMessage","toString","then","reloadAndReInit","newConfig","features","decls","vars","consts","TemplatePickerComponent_Conditional_1_Template","TemplatePickerComponent_Conditional_5_Template","TemplatePickerComponent_Conditional_6_Template","TemplatePickerComponent_Conditional_8_Template","TemplatePickerComponent_Conditional_10_Template","TemplatePickerComponent_Conditional_11_Template","TemplatePickerComponent_Conditional_12_Template","TemplatePickerComponent_Conditional_13_Template","TemplatePickerComponent_Conditional_14_Template","TemplatePickerComponent_Conditional_15_Template","TemplatePickerComponent_Conditional_16_Template","TemplatePickerComponent_Conditional_17_Template","_c0","_c1","AsyncPipe","MatIconModule","CommonModule","i5","MatProgressBarModule","i6","MatTabsModule","i7","TranslateModule","i8","MatButtonModule","i9","FormsModule","i10","AppComponent","SxcAppComponent","el","context","iconService","preConfigure","sxc","addLangs","ctxDto","lang","Language","setDefaultLang","use","langCode2","langCode5","split","Current","CustomTranslateLoader","TranslateHttpLoader","getTranslation","warn","appConfig","providers","SxcHttpInterceptorProvider","provideHttpClient","withInterceptorsFromDi","importProvidersFrom","BrowserModule","BrowserAnimationsModule","forRoot","forChild","buildTranslateConfiguration","loader","provide","TranslateLoader","useFactory","deps","HttpClient","defaultLanguage","isolate","HttpLoaderFactory","production","enableProdMode","platform","__NgCli_bootstrap_1","destroyed","bootstrapApplication","catch","err"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../connect-parts/inpage-quick-dialog/quick-dialog-params.ts","./src/app/debug-config.ts","./src/app/core/log.ts","./src/app/core/boot-control.ts","./src/app/config.ts","./src/app/i18n/constants.ts","./src/app/core/backend-settings.ts","./src/app/core/app-icon-registry.ts","./src/app/core/behavior-observable.ts","./src/app/template-picker/constants.ts","./src/app/template-picker/data/content-types-processor.service.ts","./src/app/template-picker/data/template-processor.ts","./src/app/core/app.ts","./src/app/template-picker/picker.service.ts","./src/app/core/constants.ts","./src/app/template-picker/template-filter.pipe.ts","./src/app/template-picker/current-data.service.ts","./src/app/template-picker/filter-by-property-value.pipe.ts","./src/app/installer/installer.service.ts","./src/app/installer/getting-started.service.ts","./src/app/installer/installer.component.html","./src/app/installer/installer.component.ts","./src/app/template-picker/template-picker.component.html","./src/app/template-picker/template-picker.component.ts","./src/app/app.component.ts","./src/app/i18n/index.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/main.ts"],"sourcesContent":["\r\n/**\r\n * These are all the url params the UI needs to function\r\n * @internal\r\n */\r\nexport const urlParams = {\r\n  // These are used in UI.html, but we keep them here so we have a full list documented\r\n  pageId: 'tid',\r\n\r\n  /**\r\n   *  request verification token header name\r\n   */\r\n  requestVerificationTokenHeader: 'rvth',\r\n\r\n  /**\r\n   *  request verification token value\r\n   */\r\n  requestVerificationToken: 'rvt',\r\n\r\n  api: 'api',\r\n\r\n  /**\r\n   * Context: App we're on.\r\n   * This is often 0 (zero) as initially it's not known.\r\n   */\r\n  appId: 'appId',\r\n\r\n  /**\r\n   * Selection of what apps should be shown by the dialog\r\n   * this is an optional parameter\r\n   */\r\n  apps: 'apps',\r\n\r\n  /** Context: Module we're on */\r\n  moduleId: 'mid',\r\n\r\n  /** Context: ContentBlock we're on */\r\n  contentBlockId: 'cbid',\r\n};\r\n","\r\n/** configuration what to debug directly to the screen and what to keep secret */\r\nexport const DebugConfig = {\r\n\r\n  /** logger configuration */\r\n  logger: {\r\n    /** should we stream messages directly to console */\r\n    logToConsole: false,\r\n    /** should we also log internal events */\r\n    internals: false,\r\n    /** allow url param ?debug=true to turn on logging */\r\n    urlDebugEnablesAll: true,\r\n    /** if url param ?debug=true also enables all live-logging */\r\n    urlDebugActivatesLive: true\r\n  },\r\n\r\n  /** api debugging */\r\n  api: {\r\n    enabled: false,\r\n    streams: false,\r\n  },\r\n\r\n  /** template picker */\r\n  picker: {\r\n    enabled: false,\r\n    streams: false,\r\n    showDebugPanel: false\r\n  },\r\n\r\n  /** template state */\r\n  state: {\r\n    enabled: false,\r\n    streams: false,\r\n    inits: false,\r\n  },\r\n\r\n  /** content-type processor */\r\n  typeProcessor: false,\r\n  /** template processor */\r\n  templateProcessor: false,\r\n};\r\n","import { Constants } from './constants';\r\nimport { DebugConfig } from 'app/debug-config';\r\n\r\n\r\n/** @public */\r\nexport class Log {\r\n  /** global state to determine if logging to console should be done or not */\r\n  public static forceLogToConsole = false;\r\n\r\n  name = '';\r\n  autoDump = DebugConfig.logger.logToConsole;\r\n  logs = new Array<string>();\r\n  parent: Log;\r\n  loggers: any = new Object();\r\n\r\n  constructor (name?: string, parent?: Log) {\r\n    this.name = name;\r\n    this.parent = parent;\r\n  }\r\n\r\n  add(msg: string, ...args: any[]): void {\r\n    this.logs.push(msg);\r\n    if (this.name) msg = this.name + ':' + msg;\r\n    if (this.parent) this.parent.logs.push(msg);\r\n    if (this.autoDump || Log.forceLogToConsole) {\r\n      arguments[0] = Constants.logName + ': ' + msg;\r\n      console.log.apply(null, arguments);\r\n    }\r\n  }\r\n\r\n  subLog(name: string, autoDump?: boolean): Log {\r\n    const newLog = new Log(name, this);\r\n    this.loggers[name] = newLog;\r\n    newLog.autoDump = typeof(autoDump) === 'boolean'\r\n      ? autoDump : this.autoDump;\r\n    if (DebugConfig.logger.internals)\r\n      this.add(`logger: subLog(${name}, ${autoDump}) resulting in autoDump=${newLog.autoDump}`);\r\n\r\n    return newLog;\r\n  }\r\n\r\n  dump(): void {\r\n    this.add('dumping to console');\r\n    console.log(`Log dump for '${this.name}'`, this);\r\n  }\r\n\r\n  public static configureRuntimeLogging(state: boolean) {\r\n    if(DebugConfig.logger.urlDebugActivatesLive)\r\n      Log.forceLogToConsole = state;\r\n  }\r\n}\r\n\r\n\r\nexport const log = new Log();\r\n\r\nwindow['logger'] = log;\r\n","import { Subject } from 'rxjs';\r\nimport { log as parentLog } from './log';\r\n\r\nconst log = parentLog.subLog('boot-controller');\r\n/**\r\n * Special reboot controller, to restart the angular app\r\n * when critical parameters were changed\r\n */\r\nexport class BootController {\r\n  private static instance: BootController;\r\n  private _reboot: Subject<boolean> = new Subject();\r\n  rebootRequest$ = this._reboot.asObservable();\r\n\r\n  static getRebootController() {\r\n    log.add('getRebootController()');\r\n    if (!BootController.instance) {\r\n      BootController.instance = new BootController();\r\n    }\r\n    return BootController.instance;\r\n  }\r\n\r\n  public reboot() {\r\n    log.add('restarting...');\r\n    this._reboot.next(true);\r\n  }\r\n}\r\n","import { SxcGlobal } from '@2sic.com/2sxc-typings';\r\nimport { urlParams } from './core/constants';\r\n\r\ndeclare const $2sxc: SxcGlobal;\r\n\r\nexport class Config {\r\n  static appId = () => parseInt(get(urlParams.appId));\r\n  static apps = () => get(urlParams.apps);\r\n\r\n  static moduleId = () => Number(req(urlParams.moduleId));\r\n  static cbId = () => Number(req(urlParams.contentBlockId));\r\n\r\n  static getSxcInstance = () => $2sxc(Config.moduleId(), Config.cbId());\r\n}\r\n\r\n\r\nfunction req(key) { return $2sxc.urlParams.require(key); }\r\n\r\nfunction get(key) { return $2sxc.urlParams.get(key); }\r\n","/* Constants for i18n */\r\n\r\nexport const PrimaryUiLanguage = 'en';\r\nexport const SupportedLanguages = ['en', 'de', 'es', 'fr', 'it', 'uk'];\r\nexport const i18nPrefix = 'TemplatePicker.LayoutElement';\r\nexport const pathToI18n = './i18n/';\r\nexport const i18nExtension = '.js';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, switchMap, share, distinctUntilChanged } from 'rxjs/operators';\r\nimport { Constants } from './constants';\r\nimport { ContextDto } from '../../../../shared';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BackendSettings {\r\n\r\n  appId = new BehaviorSubject<number>(0);\r\n\r\n  data: Observable<ContextDto>;\r\n\r\n  showAdvanced$: Observable<boolean>;\r\n\r\n  constructor(http: HttpClient) {\r\n    this.data = this.appId.pipe(\r\n      distinctUntilChanged(),\r\n      switchMap(id => http.get<{ Context: ContextDto }>(`${Constants.webApiDialogContext}?appId=${id}`)),\r\n      map(bundle => bundle.Context),\r\n      share()\r\n    );\r\n\r\n    this.showAdvanced$ = this.data.pipe(map(settings => settings.Enable?.CodeEditor ?? false));\r\n  }\r\n\r\n  setApp(id: number) {\r\n    this.appId.next(id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\n\r\n@Injectable()\r\nexport class AppIconsService {\r\n  constructor(private matIconRegistry: MatIconRegistry) { }\r\n\r\n  load() {\r\n    // v18.01 - changing to Material Symbols\r\n    // this.matIconRegistry.setDefaultFontSetClass('material-icons-outlined');\r\n    this.matIconRegistry.setDefaultFontSetClass('material-symbols-outlined');\r\n    // console.log('2dm: Loading App Icons');\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n// Todo: probably not needed any more, since now Subjects are automatically observables\r\nexport class BehaviorObservable<T> extends Observable<T> {\r\n  private constructor() {\r\n    super();\r\n  }\r\n  /** The source subject */\r\n  subject: BehaviorSubject<T>;\r\n\r\n  /** will reset back to the initial value */\r\n  reset: () => void;\r\n\r\n  /** check if it's the initial object */\r\n  isInitial: () => boolean;\r\n\r\n  /** the initial object */\r\n  initialValue: T;\r\n\r\n  /** shorthand to push next value */\r\n  next: (value: T) => void;\r\n\r\n  static create<T>(initialValue: T): BehaviorObservable<T> {\r\n    const subj = new BehaviorSubject<T>(initialValue);\r\n    const obs = subj.asObservable() as BehaviorObservable<T>;\r\n    obs.initialValue = initialValue;\r\n    obs.subject = subj;\r\n    obs.reset = () => {\r\n      obs.subject.next(obs.initialValue);\r\n    };\r\n    obs.isInitial = () => {\r\n      return obs.subject.value === obs.initialValue;\r\n    };\r\n    obs.next = (value: T) => obs.subject.next(value);\r\n    return obs;\r\n  }\r\n}\r\n","export const cViewWithoutContent = '_LayoutElement';\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { log as parentLog } from 'app/core/log';\r\nimport { DebugConfig } from 'app/debug-config';\r\nimport { i18nPrefix } from 'app/i18n';\r\nimport { cViewWithoutContent } from '../constants';\r\nimport { ContentType } from '../content-type';\r\nimport { Template } from '../template';\r\n\r\n// const debug = true;\r\nconst log = parentLog.subLog('ct-processor', DebugConfig.typeProcessor);\r\n\r\n/**\r\n * This is a helper to do various transformations for the list of content-types\r\n */\r\n@Injectable()\r\nexport class ContentTypesProcessor {\r\n  constructor(private translate: TranslateService) { }\r\n\r\n  public buildList(allTypes: ContentType[], type: ContentType, allTemplates: Template[], template: Template): ContentType[] {\r\n    log.add('buildList(...) of content-types to show');\r\n    let unhide = this.unhideSelectedType(allTypes, type, template);\r\n    unhide = this.addEmptyTypeIfNeeded(unhide, allTemplates);\r\n    const filtered = this.hideNecessaryTypes(unhide);\r\n    return this.sortTypes(filtered);\r\n  }\r\n\r\n  private hideNecessaryTypes(types: ContentType[]): ContentType[] {\r\n    return types.filter(t => !t.IsHidden);\r\n  }\r\n\r\n  /**\r\n   * Ensure current content-type is visible, just in case it's configured as hidden\r\n   */\r\n  private unhideSelectedType(contentTypes: ContentType[], currentType: ContentType, currentTemplate: Template): ContentType[] {\r\n    // console.log('2dm before', JSON.parse(JSON.stringify(contentTypes)));\r\n    // console.log('2dm current T', currentTemplate?.TemplateId);\r\n    // console.log('2dm currentType Static', currentType?.StaticName);\r\n    contentTypes\r\n      // 2022-11-04 2dm disabled, think it's never used\r\n      // 2022-11-11 trying to fix another issue....\r\n      // .filter(c => (currentTemplate?.TemplateId === c.TemplateId) || (c.StaticName === currentType?.StaticName))\r\n      .filter(c => (c.StaticName === currentType?.StaticName && c.StaticName !== undefined))\r\n      .forEach(c => c.IsHidden = false);\r\n    // console.log('2dm after', contentTypes);\r\n    return contentTypes;\r\n  }\r\n\r\n\r\n  /**\r\n   * add an empty content-type for UI selection if any template would support \"no content-type\"\r\n   */\r\n  private addEmptyTypeIfNeeded(contentTypes: ContentType[], templates: Template[]): ContentType[] {\r\n    const layoutElementLabel = (this.translate && this.translate.instant(i18nPrefix))\r\n      || cViewWithoutContent; // if translate is not ready, use the nicer label\r\n\r\n    // add option for empty content type\r\n    if (templates && templates.find(t => t.ContentTypeStaticName === '')) {\r\n      contentTypes = contentTypes.slice(); // copy it first to not change original\r\n      contentTypes.push({\r\n        StaticName: cViewWithoutContent,\r\n        Name: i18nPrefix,\r\n        Thumbnail: null,\r\n        Label: layoutElementLabel,\r\n        IsHidden: false,\r\n      } as ContentType);\r\n    }\r\n    return contentTypes;\r\n  }\r\n\r\n  /**\r\n   * Sort the types by label\r\n   */\r\n  private sortTypes(contentTypes: ContentType[]): ContentType[] {\r\n    // https://stackoverflow.com/questions/51165/how-to-sort-strings-in-javascript\r\n    return contentTypes.sort((a, b) => ('' + a.Label).localeCompare(b.Label));\r\n  }\r\n\r\n  /**\r\n   * Sort the types by IsDefault DESC and Label ASC\r\n  */\r\n  private static sortTypesWithDefault(contentTypes: ContentType[]): ContentType[] {\r\n    return contentTypes.sort((a, b) => {\r\n      // first sort by IsDefault DESC\r\n      if (a.IsDefault > b.IsDefault) return -1;\r\n      if (a.IsDefault < b.IsDefault) return 1;\r\n      // than sort by Label ASC\r\n      return ('' + a.Label).localeCompare(b.Label);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get first default or alphabetically\r\n   */\r\n  static firstDefault(contentTypes: ContentType[]): ContentType {\r\n    return this.sortTypesWithDefault([...contentTypes])[0];\r\n  }\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  static findContentTypesById(contentTypes: ContentType[], selectedContentTypeId: string): ContentType {\r\n    log.add(`findContentTypesById(..., ${selectedContentTypeId}`);\r\n    return selectedContentTypeId\r\n      ? contentTypes.find(c => c.StaticName === selectedContentTypeId)\r\n      : null;\r\n  }\r\n\r\n}\r\n","import { Template } from '../template';\r\nimport { ContentType } from '../content-type';\r\nimport { App } from 'app/core/app';\r\nimport { log as parentLog } from 'app/core/log';\r\nimport { DebugConfig } from 'app/debug-config';\r\n\r\nconst log = parentLog.subLog('TemplateProcessor', DebugConfig.templateProcessor);\r\n\r\nexport class TemplateProcessor {\r\n  static pickSelected(selected: Template, templates: Template[], type: ContentType, app: App): Template {\r\n    log.add(`pickSelected(selected: ${selected && selected.TemplateId}, templates: ${templates.length})`)\r\n    // if one is selected, return that; but only if it's in the list of possible templates\r\n    if (selected && templates.find(t => t.TemplateId === selected.TemplateId))\r\n      return selected;\r\n\r\n    // if none is selected, return the first (preferred default DESC); assuming a type or app has been selected\r\n    if ((type || app) && templates && templates.length) return this.sortTemplates([...templates])[0];\r\n\r\n    // nothing valid\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Sort the templates by IsDefault DESC and Name ASC\r\n   */\r\n  static sortTemplates(templates: Template[]): Template[] {\r\n    // https://stackoverflow.com/questions/51165/how-to-sort-strings-in-javascript\r\n    return templates.sort((a, b) => {\r\n      // first sort by IsDefault DESC\r\n      if (a.IsDefault > b.IsDefault) return -1;\r\n      if (a.IsDefault < b.IsDefault) return 1;\r\n      // than by Name ASC\r\n      return ('' + a.Name).localeCompare(b.Name);\r\n    });\r\n  }\r\n}\r\n","export class App {\r\n    AppId: number;\r\n    Name: string;\r\n    Thumbnail: string;\r\n    SupportsAjaxReload: boolean;\r\n    Version: string;\r\n    VersionMain: number;\r\n\r\n    constructor(json: any) {\r\n        Object.assign(this, json);\r\n\r\n        try {\r\n            this.VersionMain = parseInt(this.Version.substr(0,2));\r\n        } catch(e) { /* ignore */}\r\n    }\r\n\r\n}\r\n","import { combineLatest } from 'rxjs';\r\nimport { map, startWith, share } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { App } from 'app/core/app';\r\nimport { ContentType } from 'app/template-picker/content-type';\r\nimport { Template } from 'app/template-picker/template';\r\nimport { log as parentLog } from 'app/core/log';\r\nimport { Constants } from 'app/core/constants';\r\nimport { DebugConfig } from 'app/debug-config';\r\nimport { BehaviorObservable } from 'app/core/behavior-observable';\r\nimport { Config } from '../config';\r\n\r\nconst log = parentLog.subLog('api', DebugConfig.api.enabled);\r\nconst uninitializedList = []; // this must be created as a variable, so we can check later if it's still the original or a new empty list\r\n@Injectable()\r\nexport class PickerService {\r\n  // #region public properties\r\n  /** all apps of the zone */\r\n  apps$ = BehaviorObservable.create<App[]>(uninitializedList);\r\n\r\n  /** all types of this app */\r\n  contentTypes$ = BehaviorObservable.create<ContentType[]>(uninitializedList);\r\n\r\n  /** templates/views of this app */\r\n  templates$ = BehaviorObservable.create<Template[]>(uninitializedList);\r\n\r\n  /**\r\n   * ready is true when all necessary data is loaded\r\n   * note that apps are not loaded if not needed */\r\n  ready$ = new Observable<boolean>();\r\n  // #endregion\r\n\r\n  // #region private properties\r\n  private mustLoadApps = false;\r\n  // all the subjects - these are all multi-cast, so don't use share!\r\n  // #endregion\r\n\r\n  constructor(private http: HttpClient) {\r\n    log.add('constructor()');\r\n    this.buildObservables();\r\n    this.enableLogging();\r\n  }\r\n\r\n  private buildObservables() {\r\n    log.add(`buildObservables()`);\r\n\r\n    // ready requires all to have data, but app can be skipped if not required\r\n    this.ready$ = combineLatest([this.apps$, this.contentTypes$, this.templates$])\r\n      .pipe(\r\n        map(([a, ct, t]) => ({ apps: a, types: ct, templates: t })),\r\n        map(set => set.templates !== uninitializedList\r\n          && set.types !== uninitializedList\r\n          && (!this.mustLoadApps || !!(set.apps && set.apps !== uninitializedList))),\r\n        startWith(false),\r\n        share());\r\n  }\r\n\r\n  public saveAppId(appId: string, reloadParts: boolean): Promise<any> {\r\n    log.add(`saveAppId(${appId}, ${reloadParts})`);\r\n    // skip doing anything here, if we're in content-mode (which doesn't use/change apps)\r\n    if (!this.loadApps) throw new Error(`can't save app, as we're not in app-mode`);\r\n    return this.http.post(`${Constants.webApiSetApp}?appId=${appId}`, {}).toPromise();\r\n  }\r\n\r\n\r\n\r\n  public initLoading(requireApps: boolean): Observable<any> {\r\n    log.add(`initLoading(requireApps: ${requireApps})`);\r\n    this.mustLoadApps = requireApps;\r\n    if (requireApps) this.loadApps();\r\n    return this.reloadAppParts();\r\n  }\r\n\r\n  public reloadAppParts(): Observable<any> {\r\n    return combineLatest([this.loadTemplates(), this.loadContentTypes()]);\r\n  }\r\n\r\n  /**\r\n   * load templates - is sometimes repeated if the app changes\r\n   */\r\n  public loadTemplates(): Observable<any> {\r\n    log.add('loadTemplates()');\r\n    this.templates$.reset();\r\n    const obs = this.http.get<Template[]>(Constants.webApiGetTemplates)\r\n      .pipe(share()); // ensure it's only run once\r\n\r\n    obs.subscribe(response => this.templates$.next(response || []));\r\n    return obs;\r\n  }\r\n\r\n  /**\r\n   * Load the ContentTypes - only needed on first initialization\r\n   */\r\n  private loadContentTypes(): Observable<any> {\r\n    log.add(`loadContentTypes()`);\r\n    this.contentTypes$.reset();\r\n    const obs = this.http.get<ContentType[]>(Constants.webApiGetTypes)\r\n      .pipe(share()); // ensure it's only run once\r\n    obs.pipe(map(response => (response || []).map(ct => {\r\n        ct.Label = ct.Properties?.Label ?? ct.Name;\r\n        return ct;\r\n      })))\r\n      .subscribe(json => this.contentTypes$.next(json));\r\n    return obs;\r\n  }\r\n\r\n  /**\r\n   * Load all Apps, only needed on first initialization\r\n   */\r\n  private loadApps(): Observable<any> {\r\n    const alreadyLoaded = !this.apps$.isInitial();\r\n    log.add(`loadApps() - skip:${alreadyLoaded}`);\r\n    if (alreadyLoaded) return;\r\n\r\n    const appsFilter = Config.apps();\r\n\r\n    const obs = this.http.get<any[]>(`${Constants.webApiGetApps}?apps=${appsFilter}`)\r\n      .pipe(share()); // ensure it's only run once\r\n\r\n    obs.subscribe(response => this.apps$.subject.next(response.map(a => new App(a))));\r\n    return obs;\r\n  }\r\n\r\n  private enableLogging() {\r\n    const streamLog = parentLog.subLog('api-streams', DebugConfig.api.streams);\r\n    this.apps$.subscribe(a => streamLog.add(`app$:${a && a.length}`));\r\n    this.contentTypes$.subscribe(ct => streamLog.add(`contentTypes$:${ct && ct.length}`));\r\n    this.templates$.subscribe(t => streamLog.add(`templates$:${t && t.length}`));\r\n    this.ready$.subscribe(r => streamLog.add(`ready$:${r}`));\r\n  }\r\n\r\n}\r\n","export const Constants = {\r\n  logName: 'quick-edit',\r\n\r\n  //#region WebApi Endpoints used: 2sxc\r\n  webApiDialogContext: 'admin/dialog/settings',\r\n  webApiInstallPackage: 'sys/install/RemotePackage',\r\n  // webApiRemoteInstaller: 'sys/install/RemoteWizardUrl',\r\n  webApiInstallSettings: 'sys/install/InstallSettings',\r\n  webApiGetTemplates: 'cms/block/Templates',\r\n  webApiGetTypes: 'cms/block/ContentTypes',\r\n  webApiGetApps: 'cms/block/Apps',\r\n  webApiSetApp: 'cms/block/App',\r\n  //#endregion\r\n};\r\n\r\nexport * from '../../../../connect-parts/inpage-quick-dialog/quick-dialog-params';\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { cViewWithoutContent } from \"./constants\";\r\nimport { Template } from \"./template\";\r\nimport { ContentType } from \"./content-type\";\r\n\r\n@Pipe({\r\n  name: \"templateFilter\",\r\n  standalone: true,\r\n})\r\nexport class TemplateFilterPipe implements PipeTransform {\r\n  transform(\r\n    templates: Template[],\r\n    args: { isContent: boolean; contentType: ContentType }\r\n  ): Template[] {\r\n    const typeId = args.contentType ? args.contentType.StaticName : undefined;\r\n\r\n    // in case we're filtering for the special \"empty\" code, use empty in the filter\r\n    const typeNameFilter = typeId === cViewWithoutContent ? \"\" : typeId || \"\";\r\n\r\n    return templates\r\n      .filter((t) => !t.IsHidden)\r\n      .filter(\r\n        (t) => !args.isContent || t.ContentTypeStaticName === typeNameFilter\r\n      );\r\n  }\r\n}\r\n","// #region imports\r\nimport { Injectable } from \"@angular/core\";\r\nimport { App } from \"app/core/app\";\r\nimport { BehaviorObservable } from \"app/core/behavior-observable\";\r\nimport { log as parentLog } from \"app/core/log\";\r\nimport { DebugConfig } from \"app/debug-config\";\r\nimport { IQuickDialogConfig } from \"app/interfaces/shared\";\r\nimport { combineLatest, merge, Observable } from \"rxjs\";\r\nimport {\r\n  debounceTime,\r\n  filter,\r\n  map,\r\n  scan,\r\n  share,\r\n  startWith,\r\n  tap,\r\n} from \"rxjs/operators\";\r\nimport { ContentType } from \"./content-type\";\r\nimport { ContentTypesProcessor } from \"./data/content-types-processor.service\";\r\nimport { TemplateProcessor } from \"./data/template-processor\";\r\nimport { PickerService } from \"./picker.service\";\r\nimport { Template } from \"./template\";\r\nimport { TemplateFilterPipe } from \"./template-filter.pipe\";\r\n\r\n// #endregion\r\n\r\nconst log = parentLog.subLog(\"state\", DebugConfig.state.enabled);\r\n\r\n@Injectable()\r\nexport class CurrentDataService {\r\n  /** Currently selected app */\r\n  app$: Observable<App>;\r\n\r\n  /** Relevant types */\r\n  types$: Observable<ContentType[]>;\r\n\r\n  /** The currently selected type */\r\n  type$: Observable<ContentType>;\r\n\r\n  /** Stream containing the currently selected template or null if not selected */\r\n  template$: Observable<Template>;\r\n\r\n  /** all templates relevant for the UI */\r\n  templates$: Observable<Template[]>;\r\n\r\n  private appId$ = BehaviorObservable.create<number>(null);\r\n  private initialTypeId$ = BehaviorObservable.create<string>(null);\r\n  private initialTemplateId$ = BehaviorObservable.create<number>(null);\r\n  private selectedType$ = BehaviorObservable.create<ContentType>(null);\r\n  private selectedTemplate$ = BehaviorObservable.create<Template>(null);\r\n\r\n  private config: IQuickDialogConfig;\r\n\r\n  constructor(\r\n    private api: PickerService,\r\n    private templateFilter: TemplateFilterPipe,\r\n    private ctProcessor: ContentTypesProcessor\r\n  ) {\r\n    this.buildBasicObservables();\r\n  }\r\n\r\n  private buildBasicObservables() {\r\n    // app-stream should contain selected app, once the ID is known - or null\r\n    this.app$ = combineLatest([this.api.apps$, this.appId$]).pipe(\r\n      map(([apps, appId]) => apps.find((a) => a.AppId === appId))\r\n    );\r\n\r\n    // current type should be either the initial type, or a manually selected type\r\n    const initialType$ = combineLatest([\r\n      this.initialTypeId$,\r\n      this.api.contentTypes$,\r\n    ]).pipe(\r\n      map(([typeId, all]) =>\r\n        ContentTypesProcessor.findContentTypesById(all, typeId)\r\n      )\r\n    );\r\n\r\n    this.type$ = merge(initialType$, this.selectedType$).pipe(\r\n      startWith(null as ContentType),\r\n      share()\r\n    );\r\n\r\n    // the templates-list is always filtered by the currently selected type\r\n    this.templates$ = combineLatest([this.api.templates$, this.type$]).pipe(\r\n      map(([all, current]) => this.findTemplatesForTypeOrAll(all, current)),\r\n      startWith(new Array<Template>())\r\n    );\r\n\r\n    // the current template is either the last selected, or auto-selected when conditions change\r\n    const initialTemplate$ = combineLatest([\r\n      this.initialTemplateId$,\r\n      this.api.templates$,\r\n    ]).pipe(\r\n      map(([id, templates]) => templates.find((t) => t.TemplateId === id)),\r\n      filter((t) => t != null), // only allow new values which are not null, to guarantee later template$ updates don't affect this\r\n      startWith(null as Template),\r\n      share()\r\n    );\r\n\r\n    const selected$ = merge(\r\n      initialTemplate$,\r\n      this.selectedTemplate$.pipe(filter((t) => t !== null))\r\n    );\r\n    this.template$ = combineLatest([\r\n      selected$,\r\n      this.templates$,\r\n      this.type$,\r\n      this.app$,\r\n    ]).pipe(\r\n      map(([selected, templates, type, app]) =>\r\n        TemplateProcessor.pickSelected(selected, templates, type, app)\r\n      ),\r\n      startWith(null as Template),\r\n      share()\r\n    );\r\n\r\n    // construct list of relevant types for the UI\r\n    this.types$ = combineLatest([\r\n      this.api.contentTypes$,\r\n      this.type$,\r\n      this.api.templates$,\r\n      this.template$,\r\n    ]).pipe(\r\n      map(([types, type, templates, template]) =>\r\n        this.ctProcessor.buildList(types, type, templates, template)\r\n      ),\r\n      share()\r\n    );\r\n  }\r\n\r\n  init(config: IQuickDialogConfig): Observable<boolean> {\r\n    this.config = config;\r\n    // app-init is ready, if it has an app or doesn't need to init one\r\n    log.add(`initializing with config:${JSON.stringify(config)}`, config);\r\n    const appReady$ = this.app$.pipe(\r\n      map((a) => config.isContent || !!a),\r\n      startWith(config.isContent || !config.appId)\r\n    );\r\n\r\n    const typeReady$ = this.type$.pipe(\r\n      map((t) => !!t),\r\n      scan((acc, value) => acc || value, !config.contentTypeId)\r\n    );\r\n    const templReady$ = this.template$.pipe(\r\n      map((t) => !!t),\r\n      debounceTime(100), // need to debounce, because the template might have a value and change again\r\n      startWith(!config.templateId)\r\n    );\r\n\r\n    const loadAll$ = combineLatest([appReady$, templReady$, typeReady$]).pipe(\r\n      map((set) => set[0] && set[1] && set[2])\r\n    );\r\n\r\n    this.initLogging(appReady$, typeReady$, templReady$, loadAll$);\r\n\r\n    // automatically set the app, type and template\r\n    this.activateCurrentApp(config.appId);\r\n    this.initialTypeId$.next(config.contentTypeId);\r\n    this.initialTemplateId$.next(config.templateId);\r\n\r\n    return loadAll$;\r\n  }\r\n\r\n  private initLogging(\r\n    inita$: Observable<boolean>,\r\n    inittyp$: Observable<boolean>,\r\n    initt$: Observable<boolean>,\r\n    initAll$: Observable<boolean>\r\n  ): void {\r\n    const slog = log.subLog(\"stream\", DebugConfig.state.streams);\r\n    this.type$.subscribe((t) => slog.add(`type$ update:'${t && t.Label}'`, t));\r\n    this.app$.subscribe((a) => slog.add(`app$ update:'${a && a.AppId}'`, a));\r\n    this.template$.subscribe((t) =>\r\n      slog.add(`template$ update:'${t && t.TemplateId}'`, t)\r\n    );\r\n    this.templates$.subscribe((t) =>\r\n      slog.add(`templates$ count:'${t && t.length}'`, t)\r\n    );\r\n    this.types$.subscribe((t) =>\r\n      slog.add(`types$ count:'${t && t.length}'`, t)\r\n    );\r\n    this.selectedTemplate$.subscribe((t) =>\r\n      slog.add(`selectedTemplate$: ${t && t.TemplateId}`)\r\n    );\r\n\r\n    const initLog = log.subLog(\"stream-init\", DebugConfig.state.inits);\r\n    this.initialTypeId$.subscribe((t) =>\r\n      initLog.add(`initial TypeId:'${t}'`, t)\r\n    );\r\n    this.initialTemplateId$.subscribe((t) =>\r\n      initLog.add(`initial TemplateId:'${t}'`, t)\r\n    );\r\n    inita$.subscribe((t) => initLog.add(`init app$`, t));\r\n    inittyp$.subscribe((t) => initLog.add(`init type$`, t));\r\n    initt$.subscribe((t) => initLog.add(`init temp$`, t));\r\n    initAll$.subscribe((t) => initLog.add(`init all$`, t));\r\n  }\r\n\r\n  //#region activate calls from outside\r\n  activateCurrentApp(appId: number) {\r\n    log.add(`activateApp(${appId})`);\r\n    this.appId$.next(appId);\r\n  }\r\n  activateType(contentType: ContentType) {\r\n    log.add(`activateType(${contentType.Name})`);\r\n    this.selectedType$.next(contentType);\r\n  }\r\n  activateTemplate(template: Template) {\r\n    log.add(`activateTemplate(${template.TemplateId})`);\r\n    this.selectedTemplate$.next(template);\r\n  }\r\n  //#endregion\r\n\r\n  private findTemplatesForTypeOrAll(\r\n    allTemplates: Template[],\r\n    contentType: ContentType\r\n  ): Template[] {\r\n    return this.templateFilter.transform(allTemplates, {\r\n      contentType,\r\n      isContent: this.config.isContent,\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"filterByPropertyValue\",\r\n  standalone: true,\r\n})\r\nexport class FilterByPropertyValuePipe implements PipeTransform {\r\n  transform<T>(input: T[], propertyName: string, filterValue: string): T[] {\r\n    return (\r\n      input?.filter((i) =>\r\n        i[propertyName]\r\n          ?.toLocaleLowerCase?.()\r\n          .includes?.(filterValue?.toLocaleLowerCase?.())\r\n      ) ?? input\r\n    );\r\n  }\r\n}\r\n\r\n@Pipe({\r\n  name: \"filterByBoolProperty\",\r\n  standalone: true,\r\n})\r\nexport class FilterByBoolPropertyPipe implements PipeTransform {\r\n  transform<T>(input: T[], propertyName: string, filterValue: boolean): T[] {\r\n    // console.log('debug 2dm', input);\r\n    return input?.filter((i) => i[propertyName] === filterValue) ?? input;\r\n  }\r\n}\r\n","\r\nimport { of } from 'rxjs';\r\n\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Constants } from 'app/core/constants';\r\nimport { InstallPackage } from './messages';\r\n\r\n// copied to eav-ui\r\n@Injectable()\r\nexport class InstallerService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  installPackages(packages: InstallPackage[], step: (p: InstallPackage) => void): Observable<any> {\r\n    return packages.reduce(\r\n      (t: Observable<Response>, c) => t.pipe(\r\n        switchMap(() => {\r\n          if (!c.url) return of(true);\r\n          step(c);\r\n          return <Observable<any>>this.http.post(`${Constants.webApiInstallPackage}?packageUrl=${c.url}`, {});\r\n        })),\r\n      of(true));\r\n  }\r\n}\r\n","\r\nimport { startWith, map, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { log } from 'app/core/log';\r\nimport { Constants } from 'app/core/constants';\r\nimport { InstallSettings } from './installer-models';\r\n\r\n// copied to eav-ui\r\n@Injectable()\r\nexport class AppInstallSettingsService {\r\n\r\n  private installSettingsSubject: Subject<InstallSettings> = new Subject<InstallSettings>();\r\n  settings$: Observable<InstallSettings> = this.installSettingsSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    const ready$ = this.settings$.pipe(\r\n      map(() => true),\r\n      startWith(false));\r\n\r\n    ready$.pipe(tap(r => log.add(`ready getting started:${r}`))).subscribe();\r\n  }\r\n\r\n  public loadGettingStarted(isContentApp: boolean): void {\r\n    this.http.get<InstallSettings>(`${Constants.webApiInstallSettings}?isContentApp=${isContentApp}`)\r\n      .subscribe(json => this.installSettingsSubject.next(json));\r\n  }\r\n}\r\n","@if (showProgress) {\r\n  <div class=\"progress\">\r\n    <mat-progress-spinner [mode]=\"'indeterminate'\"></mat-progress-spinner>\r\n    <span>Installing {{ currentPackage?.displayName }}..</span>\r\n  </div>\r\n}\r\n@if (ready) {\r\n  <div>\r\n    <iframe #installerWindow class=\"fr-getting-started\" id=\"frGettingStarted\" [src]=\"remoteInstallerUrl\" width=\"100%\" height=\"300px\"></iframe>\r\n  </div>\r\n}\r\n@if (showDebug) {\r\n  <div>\r\n    Debug:\r\n    <button type=\"button\" (click)=\"sendMessage('test')\">Send Test message</button>\r\n    -\r\n    Simulate Install: {{devSimulateInstall}}\r\n    <button type=\"button\" (click)=\"toggleSimulate()\">toggle</button>\r\n    -\r\n    <button type=\"button\" (click)=\"sendMessage('specs')\">Send 'specs' message</button>\r\n  </div>\r\n}","import {\r\n  tap,\r\n  switchMap,\r\n  map,\r\n  filter,\r\n  debounceTime,\r\n  catchError,\r\n} from \"rxjs/operators\";\r\nimport { Component, OnInit, Input, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { InstallerService } from \"app/installer/installer.service\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { fromEvent, of, Subscription } from \"rxjs\";\r\nimport { AppInstallSettingsService } from \"./getting-started.service\";\r\nimport { Config } from \"../config\";\r\nimport {\r\n  CrossWindowMessage,\r\n  InstallPackage,\r\n  SpecsForInstaller,\r\n} from \"./messages\";\r\nimport { DebugConfig } from \"app/debug-config\";\r\nimport { IDialogFrameElement } from \"../../../../connect-parts/inpage-quick-dialog\";\r\nimport { InstallSettings } from \"./installer-models\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-installer\",\r\n  templateUrl: \"./installer.component.html\",\r\n  styleUrls: [\"./installer.component.scss\"],\r\n  imports: [MatProgressSpinnerModule]\r\n})\r\nexport class InstallerComponent implements OnInit {\r\n  @Input() isContentApp: boolean;\r\n\r\n  @ViewChild(\"installerWindow\") installerWindow: ElementRef;\r\n\r\n  showProgress: boolean;\r\n  currentPackage: InstallPackage;\r\n  remoteInstallerUrl = \"\";\r\n  settings: InstallSettings;\r\n  ready = false;\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  showDebug = DebugConfig.picker.showDebugPanel;\r\n\r\n  devSimulateInstall = false;\r\n\r\n  constructor(\r\n    private installer: InstallerService,\r\n    private api: AppInstallSettingsService,\r\n    private sanitizer: DomSanitizer\r\n  ) {\r\n    // copied to eav-ui file-upload-dialog\r\n    this.subscriptions.push(\r\n      this.api.settings$.subscribe((settings) => {\r\n        this.settings = settings;\r\n        this.remoteInstallerUrl = <string>(\r\n          this.sanitizer.bypassSecurityTrustResourceUrl(settings.remoteUrl)\r\n        );\r\n        this.ready = true;\r\n      })\r\n    );\r\n\r\n    // get configuration from iframe-bridge and set everything\r\n    const bridge = (<IDialogFrameElement>window.frameElement).bridge;\r\n    const dashInfo = bridge.getAdditionalDashboardConfig();\r\n    this.showDebug = dashInfo.debug;\r\n\r\n    window.bootController.rebootRequest$\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(() => this.destroy());\r\n  }\r\n\r\n  destroy(): void {\r\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\r\n    // console.log(\"2pp destroy subs\", this.subscriptions);\r\n  }\r\n\r\n  private alreadyProcessing = false;\r\n\r\n  // copied to eav-ui file-upload-dialog\r\n  // Initial Observable to monitor messages\r\n  private messages$ = fromEvent(window, \"message\").pipe(\r\n    // Ensure only one installation is processed.\r\n    filter(() => !this.alreadyProcessing),\r\n\r\n    // Get data from event.\r\n    map((evt: MessageEvent) => {\r\n      try {\r\n        // note: since 2024-05 we are suddenly receiving object messages from somewhere\r\n        // not sure from where - atm we'll just use, but maybe we should filter them out?\r\n        if (typeof evt.data === \"object\") return evt.data as CrossWindowMessage;\r\n        return JSON.parse(evt.data) as CrossWindowMessage;\r\n      } catch (e) {\r\n        console.error(\r\n          \"error processing message. Message / errors were \",\r\n          evt.data,\r\n          e\r\n        );\r\n        return void 0;\r\n      }\r\n    }),\r\n\r\n    // Check if data is valid and the moduleID matches\r\n    filter((data) => data && Number(data.moduleId) === Config.moduleId())\r\n  );\r\n\r\n  ngOnInit() {\r\n    this.api.loadGettingStarted(this.isContentApp);\r\n\r\n    // Subscription to listen to 'test' messages\r\n    this.subscriptions.push(\r\n      this.messages$\r\n        .pipe(\r\n          tap((data) => {\r\n            console.log(\"debug data\", data);\r\n          }),\r\n          filter((data) => data.action === \"test\"),\r\n          tap(() => {\r\n            console.log(\"test message received\");\r\n          })\r\n        )\r\n        .subscribe()\r\n    );\r\n\r\n    // copied to eav-ui file-upload-dialog\r\n    // Subscription to listen to 'specs' messages\r\n    this.subscriptions.push(\r\n      this.messages$\r\n        .pipe(\r\n          // Verify it's for this action\r\n          filter((data) => data.action === \"specs\"),\r\n\r\n          // Send message to iframe\r\n          tap(() => {\r\n            const winFrame = this.installerWindow\r\n              .nativeElement as HTMLIFrameElement;\r\n            const specsMsg: SpecsForInstaller = {\r\n              action: \"specs\",\r\n              data: {\r\n                installedApps: this.settings.installedApps,\r\n                rules: this.settings.rules,\r\n              },\r\n            };\r\n            const specsJson = JSON.stringify(specsMsg);\r\n            winFrame.contentWindow.postMessage(specsJson, \"*\");\r\n            console.log(\r\n              \"debug: just sent specs message:\" + specsJson,\r\n              specsMsg,\r\n              winFrame\r\n            );\r\n          })\r\n        )\r\n        .subscribe()\r\n    );\r\n\r\n    // copied to eav-ui file-upload-dialog\r\n    // Subscription to listen to 'install' messages\r\n    this.subscriptions.push(\r\n      this.messages$\r\n        .pipe(\r\n          filter((data) => data.action === \"install\"),\r\n\r\n          // Get packages from data.\r\n          map((data) => Object.values(data.packages)),\r\n\r\n          // Show confirm dialog.\r\n          filter((packages) => {\r\n            const packagesDisplayNames = packages.reduce(\r\n              (t, c) => `${t} - ${c.displayName}\\n`,\r\n              \"\"\r\n            );\r\n\r\n            const msg = `Do you want to install these packages?\r\n\r\n${packagesDisplayNames}\r\nThis takes about 10 seconds per package. Don't reload the page while it's installing.`;\r\n            return confirm(msg);\r\n          }),\r\n\r\n          // Install the packages one at a time\r\n          switchMap((packages) => {\r\n            this.alreadyProcessing = true;\r\n            this.showProgress = true;\r\n            if (this.devSimulateInstall) {\r\n              alert(\"would install packages now, see list in console\");\r\n              console.log(\"packages\", packages);\r\n              return of(true);\r\n            } else\r\n              return this.installer.installPackages(\r\n                packages,\r\n                (p) => (this.currentPackage = p)\r\n              );\r\n          }),\r\n\r\n          tap(() => {\r\n            this.showProgress = false;\r\n            alert(\"Installation complete 👍\");\r\n            if (this.devSimulateInstall)\r\n              console.log(\r\n                `would reload now, but won't, as we're just simulating.`\r\n              );\r\n            else window.top.location.reload();\r\n          }),\r\n\r\n          catchError((error) => {\r\n            console.error(\"Error: \", error);\r\n            this.showProgress = false;\r\n            this.alreadyProcessing = false;\r\n            const errorMsg = `An error occurred: Package ${\r\n              this.currentPackage.displayName\r\n            }\r\n\r\n${error.error?.Message ?? error.error?.message ?? \"\"}\r\n\r\n${error.message}\r\n\r\nPlease try again later or check how to manually install content-templates: https://azing.org/2sxc/r/0O4OymoA`;\r\n            alert(errorMsg);\r\n            return of(error);\r\n          })\r\n        )\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  sendMessage(message: string) {\r\n    window.postMessage(\r\n      JSON.stringify({\r\n        action: message,\r\n        moduleId: Config.moduleId(),\r\n      } as CrossWindowMessage)\r\n    );\r\n  }\r\n\r\n  toggleSimulate() {\r\n    this.devSimulateInstall = !this.devSimulateInstall;\r\n  }\r\n}\r\n","<div class=\"content\">\r\n  <!-- debug info section - will appear in debug mode, for example if the main window has ?debug=true in the url -->\r\n  @if (showDebug) {\r\n    <div class=\"debug-container\">\r\n      <h4>Debug 2sxc 20 Quick Dialog</h4>\r\n      <ul>\r\n        <li><strong>Types</strong>: {{ types?.length }}, current: {{contentType?.StaticName}}, default: {{defaultContentType?.Label}}</li>\r\n        <li><strong>Apps</strong>: {{ (apps$ | async)?.length }}, current: {{app?.AppId }} </li>\r\n        <li><strong>Templates</strong>: {{templates?.length}}, current: {{template?.TemplateId}}</li>\r\n        <li><strong>Config</strong>: isContent='{{isContent}}' Ready: {{ready}} </li>\r\n        <li><strong>Tab to show</strong>: '{{tabIndex}}' / preventTypeSwitch '{{preventTypeSwitch}}' / preventAppSwitch '{{preventAppSwitch}}'</li>\r\n        <li><strong>installerNeeded</strong>: {{installerNeeded}}, isInnerContent: {{isInnerContent}}, installerShow: {{installerShow}}, showInstallAndAllApps: {{showInstallAndAllApps}}</li>\r\n      </ul>\r\n      <hr>\r\n    </div>\r\n  }\r\n\r\n  <!-- loading indicator -->\r\n  <mat-progress-bar [ngStyle]=\"{ opacity: ready ? 0 : 1 }\" [mode]=\"'indeterminate'\"></mat-progress-bar>\r\n\r\n  <!-- main dialog, starting with save/cancel button -->\r\n  <div class=\"card\"\r\n    [ngClass]=\"{ blocked: !ready }\"\r\n  >\r\n    <div class=\"top-controls\" style=\"display: flex; flex-direction: row; justify-content: center; align-items: center;\">\r\n      @if (template) {\r\n        <button mat-fab class=\"sxc-gradient\" (click)=\"persistTemplate(template)\" [attr.title]=\"'TemplatePicker.Save' | translate\"\r\n          style=\"background: linear-gradient(90deg, rgba(36,14,18,1) 10%, rgba(149,44,66,1) 90%);\">\r\n          <mat-icon>check</mat-icon>\r\n        </button>\r\n      }\r\n      @if (showCancel) {\r\n        <button mat-mini-fab class=\"secondary\" (click)=\"cancel()\" [attr.title]=\"('TemplatePicker.' + (isContent ? 'Cancel' : 'Close')) | translate\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      }\r\n    </div>\r\n\r\n    <!-- tabs -->\r\n    <div class=\"tabs-bar\">\r\n      @if (!installerShow) {\r\n        <mat-tab-group [(selectedIndex)]=\"tabIndex\">\r\n          <mat-tab [label]=\"isContent\r\n                              ? (contentType?.Name || ('TemplatePicker.ContentTypePickerDefault' | translate))\r\n                              : (app?.Name || ('TemplatePicker.AppPickerDefault' | translate))\"\r\n          ></mat-tab>\r\n    \r\n          <!-- template selection after app/content-type selection -->\r\n          <mat-tab [label]=\"('TemplatePicker.ChangeView' | translate) + ' (' + templates.length + ')'\"></mat-tab>\r\n        </mat-tab-group>\r\n      }\r\n      \r\n      <div class=\"tabs-bar-settings\">\r\n        <!-- search -->\r\n        @if (showSearchBar) {\r\n          <div class=\"search-field\">\r\n            @if (tabIndex === 0 && !isContent) {\r\n              <input type=\"text\" [(ngModel)]=\"appFilter\">\r\n            }\r\n            @if (tabIndex === 0 && isContent) {\r\n              <input type=\"text\" [(ngModel)]=\"contentTypeFilter\">\r\n            }\r\n            @if (tabIndex === 1) {\r\n              <input type=\"text\" [(ngModel)]=\"templateFilter\">\r\n            }\r\n          </div>\r\n        }\r\n\r\n        <!-- install and manage buttons -->\r\n        @if (tabIndex === 0 && showInstallAndAllApps) {\r\n          <button mat-button class=\"config-btn\" (click)=\"run('app-import')\" [attr.title]=\"'TemplatePicker.Install.Details' | translate\">\r\n            <mat-icon>get_app</mat-icon>\r\n            {{\"TemplatePicker.Install\" | translate}}\r\n          </button>\r\n        }\r\n        @if (tabIndex === 0 && showInstallAndAllApps) {\r\n          <button mat-button class=\"config-btn\" (click)=\"run('apps')\" [attr.title]=\"'TemplatePicker.Zone.Details' | translate\">\r\n            <mat-icon>apps</mat-icon>\r\n            {{\"TemplatePicker.Zone\" | translate}}\r\n          </button>\r\n        }\r\n        @if (showAdminApp && (isContent || tabIndex == 1)) {\r\n          <button mat-button class=\"config-btn\" (click)=\"run('app')\" [attr.title]=\"'TemplatePicker.App.Details' | translate\">\r\n            <mat-icon>settings</mat-icon>\r\n            {{\"TemplatePicker.App\" | translate}}\r\n          </button>\r\n        }\r\n      </div> \r\n    </div>\r\n\r\n    @if(tabIndex === 0)\r\n    {\r\n      <!-- App Selector -->\r\n      @if (!isContent) {\r\n        <div class=\"tiles\" [ngClass]=\"{ 'show-installer': installerShow }\">\r\n          @for (a of apps$ | async | filterByPropertyValue:'Name':appFilter; track a) {\r\n            <div class=\"tile\"\r\n              [ngClass]=\"{ active: app?.AppId === a.AppId, blocked: preventTypeSwitch }\"\r\n              [attr.title]=\"a.Name\"\r\n              (click)=\"selectApp(app, a)\"\r\n              (dblclick)=\"switchTab()\">\r\n              <div class=\"bg\">\r\n                @if (a.Thumbnail !== null && a.Thumbnail !== '') {\r\n                  <img class=\"bg-img\" [attr.src]=\"a.Thumbnail + '?w=176&h=176'\">\r\n                }\r\n                @if (a.Thumbnail === null || a.Thumbnail === '') {\r\n                  <div class=\"bg-icon\">\r\n                    <mat-icon>star</mat-icon>\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div class=\"version\"><span>v{{a.VersionMain}}</span></div>\r\n              <div class=\"title\" [ngClass]=\"{ show: a.Thumbnail === null || a.Thumbnail === '' }\">\r\n                <span>{{a.Name}}</span>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      } @else {\r\n        <!-- Content Selector -->\r\n        <div class=\"tiles\" [ngClass]=\"{ 'show-installer': installerShow }\">\r\n          @for (c of types | filterByPropertyValue:'Label':contentTypeFilter | filterByBoolProperty:'IsHidden':false; track c) {\r\n            <div mat-button class=\"tile\"\r\n              [ngClass]=\"{ active: contentType ? contentType?.StaticName === c.StaticName : defaultContentType?.StaticName === c.StaticName, blocked: preventTypeSwitch }\"\r\n              [attr.title]=\"(c.Label | translate) + (showDebug ? ' (' + c.StaticName + ')' : '')\"\r\n              (click)=\"selectContentType(contentType, c)\"\r\n              (dblclick)=\"switchTab()\"\r\n              >\r\n              <div class=\"bg\">\r\n                @if (c.Thumbnail !== null && c.Thumbnail !== '') {\r\n                  <img class=\"bg-img\" [attr.src]=\"c.Thumbnail + '?w=176&h=176'\">\r\n                }\r\n                @if (c.Thumbnail === null || c.Thumbnail === '') {\r\n                  <div class=\"bg-icon\">\r\n                    <mat-icon>bubble_chart</mat-icon>\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div class=\"title\" [ngClass]=\"{ show: c.Thumbnail === null || c.Thumbnail === '' }\">\r\n                <span>{{c.Label}}</span>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n\r\n      <!-- Content-Type selection (when not a generic app, but the default content-app) -->\r\n    }\r\n    @if(tabIndex === 1)\r\n    {\r\n      @if (!(isContent ? contentType : app)) {\r\n        <div>\r\n          &nbsp; &nbsp; &nbsp; {{ (\"TemplatePicker.ViewNeeds\" + (isContent ? \"ContentType\" : \"App\" )) | translate }}\r\n        </div>\r\n      }\r\n      @if (isContent ? contentType : app) {\r\n        <div class=\"tiles\" [ngClass]=\"{ 'show-installer': installerShow }\">\r\n          @if (templatesLoading$ | async) {\r\n            <mat-spinner class=\"templates-spinner\"></mat-spinner>\r\n          }\r\n          @for (t of templates | filterByPropertyValue:'Name':templateFilter; track t) {\r\n            <div class=\"tile\"\r\n              [ngClass]=\"{ active: template?.TemplateId === t.TemplateId }\"\r\n              [attr.title]=\"t.Name + (showDebug ? ' (' + t.TemplateId + ')' : '')\"\r\n              (click)=\"selectTemplate(t)\"\r\n              >\r\n              <div class=\"bg\">\r\n                @if (t.Thumbnail !== null && t.Thumbnail !== '') {\r\n                  <img class=\"bg-img\" [attr.src]=\"t.Thumbnail + '?w=176&h=176'\">\r\n                }\r\n                @if (t.Thumbnail === null || t.Thumbnail === '') {\r\n                  <div class=\"bg-icon\">\r\n                    @if (isContent) {\r\n                      <mat-icon>view_carousel</mat-icon>\r\n                    }\r\n                    @if (!isContent) {\r\n                      <mat-icon>view_quilt</mat-icon>\r\n                    }\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div class=\"title\" [ngClass]=\"{ show: t.Thumbnail === null || t.Thumbnail === '' }\">\r\n                <span>{{t.Name}}</span>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n    \r\n    @if (installerNeeded && !installerShow) {\r\n      <span class=\"no-install-allowed\">\r\n        No {{isContent ? 'Content App' : 'Apps'}} installed yet.\r\n        You should see the installer here but we cannot show it.\r\n        @if (isInnerContent) {\r\n          <br>\r\n          You cannot use the installer from inner-content.\r\n          Please install Apps first by adding a {{isContent ? 'Content' : 'App'}} Module on a page.\r\n        }\r\n        @if (!isInnerContent) {\r\n          <br>\r\n          You don't have super-user permissions.\r\n          Please try again with a super-user login.\r\n        }\r\n      </span>\r\n    }\r\n    @if (installerShow) {\r\n      <app-installer [isContentApp]=\"isContent\"></app-installer>\r\n    }\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\nimport { App } from \"app/core/app\";\r\nimport { BehaviorObservable } from \"app/core/behavior-observable\";\r\nimport { Log, log as parentLog } from \"app/core/log\";\r\nimport { DebugConfig } from \"app/debug-config\";\r\nimport {\r\n  IDialogFrameElement,\r\n  IIFrameBridge,\r\n  IQuickDialogConfig,\r\n} from \"app/interfaces/shared\";\r\nimport { ContentType } from \"app/template-picker/content-type\";\r\nimport { Template } from \"app/template-picker/template\";\r\nimport { combineLatest, merge, Observable, timer, BehaviorSubject } from \"rxjs\";\r\nimport { filter, map, skipUntil, startWith, share } from \"rxjs/operators\";\r\nimport { BackendSettings } from \"../core/backend-settings\";\r\nimport { CurrentDataService } from \"./current-data.service\";\r\nimport { ContentTypesProcessor } from \"./data/content-types-processor.service\";\r\nimport { PickerService } from \"./picker.service\";\r\nimport { nameofFactory } from \"../core/nameof\";\r\nimport { AsyncPipe } from \"@angular/common\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { TemplateFilterPipe } from \"./template-filter.pipe\";\r\nimport {\r\n  FilterByPropertyValuePipe,\r\n  FilterByBoolPropertyPipe,\r\n} from \"./filter-by-property-value.pipe\";\r\nimport { InstallerService } from \"app/installer/installer.service\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AppInstallSettingsService } from \"app/installer/getting-started.service\";\r\nimport { InstallerComponent } from \"../installer/installer.component\";\r\n\r\nconst log = parentLog.subLog(\"picker\", DebugConfig.picker.enabled);\r\n\r\nconst nameofTPC = nameofFactory<TemplatePickerComponent>();\r\n\r\nconst debug = false;\r\n\r\n@Component({\r\n  selector: \"app-template-picker\",\r\n  templateUrl: \"./template-picker.component.html\",\r\n  styleUrls: [\"./template-picker.component.scss\"],\r\n  imports: [\r\n    AsyncPipe,\r\n    MatIconModule,\r\n    CommonModule,\r\n    MatProgressBarModule,\r\n    MatTabsModule,\r\n    TranslateModule,\r\n    FilterByPropertyValuePipe,\r\n    FilterByBoolPropertyPipe,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    InstallerComponent\r\n],\r\n  providers: [\r\n    TemplateFilterPipe,\r\n    ContentTypesProcessor,\r\n    InstallerService,\r\n    CurrentDataService,\r\n    AppInstallSettingsService,\r\n    PickerService,\r\n  ]\r\n})\r\nexport class TemplatePickerComponent implements OnInit {\r\n  // #region properties\r\n  /** Stream of all apps */\r\n  apps$: Observable<App[]>;\r\n\r\n  /** is cancelling possible */\r\n  showCancel = true;\r\n\r\n  /** is in the main content-app or a generic app */\r\n  isContent: boolean;\r\n\r\n  /** Needs the installer */\r\n  installerNeeded = false;\r\n\r\n  /** Show the Installer */\r\n  installerShow = false;\r\n\r\n  /** Stream to indicate ready, for loading-indicator */\r\n  ready$: Observable<boolean>;\r\n  templatesLoading$: Observable<boolean>;\r\n\r\n  /** Tab-id, when we set it, the tab switches */\r\n  tabIndex = 0;\r\n\r\n  /** Indicate if the user is allowed to change content-types or not */\r\n  preventTypeSwitch: boolean;\r\n\r\n  /** Indicates whether the installer can be shown in this dialog or not. True if inner-content. */\r\n  isInnerContent = false;\r\n\r\n  /** Indicates whether the search bar will be shown in this dialog or not */\r\n  showSearchBar = false;\r\n\r\n  /**\r\n   * Indicates whether the install apps and all apps buttons will be shown in this dialog or not\r\n   * only on empty-content or all apps in admin-mode\r\n   */\r\n  showInstallAndAllApps = false;\r\n\r\n  /** Show the admin-this-app button */\r\n  showAdminApp = false;\r\n\r\n  /** The communication-object to the parent */\r\n  private bridge: IIFrameBridge;\r\n\r\n  /** internal loading state */\r\n  private loading$ = BehaviorObservable.create<boolean>(false);\r\n\r\n  /** Ajax-support changes how saving/changing is handled */\r\n  private supportsAjax: boolean;\r\n\r\n  preventAppSwitch = false;\r\n\r\n  public showDebug = DebugConfig.picker.showDebugPanel;\r\n\r\n  appFilter = \"\";\r\n  contentTypeFilter = \"\";\r\n  templateFilter = \"\";\r\n  // #endregion\r\n\r\n  // #region data to show - using local variables, because streams didn't update correctly :(\r\n  app: App;\r\n  templates: Template[];\r\n  template: Template;\r\n  contentType: ContentType;\r\n  types: ContentType[];\r\n  defaultContentType: ContentType;\r\n  ready = false;\r\n  //#endregion\r\n\r\n  constructor(\r\n    private backendSettings: BackendSettings,\r\n    private api: PickerService,\r\n    public state: CurrentDataService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    // get configuration from iframe-bridge and set everything\r\n    this.bridge = (<IDialogFrameElement>window.frameElement).bridge;\r\n    const dashInfo = this.bridge.getAdditionalDashboardConfig();\r\n\r\n    this.boot(dashInfo);\r\n    if (debug) this.debugObservables();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.autosyncObservablesToEnsureUiUpdates();\r\n  }\r\n\r\n  private boot(dashInfo: IQuickDialogConfig) {\r\n    this.showDebug = dashInfo.debug;\r\n    Log.configureRuntimeLogging(dashInfo.debug);\r\n\r\n    // Make sure we have the latest backend settings\r\n    this.backendSettings.setApp(dashInfo.appId);\r\n    // start data-loading\r\n    this.api.initLoading(!dashInfo.isContent);\r\n\r\n    // init parts, variables, observables\r\n    const initDone$ = this.state.init(dashInfo);\r\n    this.initObservables(initDone$);\r\n    this.initValuesFromBridge(dashInfo);\r\n    this.loading$.next(false);\r\n  }\r\n\r\n  private debugObservables() {\r\n    // console.log(\"debugObservables\");\r\n    // this.tab$.subscribe(t => log.add(`tab changed to ${t}`));\r\n\r\n    if (!DebugConfig.picker.streams) return;\r\n    this.loading$.subscribe((l) => log.add(`quick-dialog loading$:${l}`));\r\n    this.ready$.subscribe((r) => log.add(`quick-dialog ready$:${r}`));\r\n  }\r\n\r\n  /**\r\n   * wire up observables for this component\r\n   */\r\n  private observablesAlreadyInitialized = false;\r\n  private initObservables(initDone$: Observable<boolean>): void {\r\n    if (this.observablesAlreadyInitialized) return;\r\n    this.observablesAlreadyInitialized = true;\r\n\r\n    const initTrue$ = initDone$.pipe(filter((t) => !!t));\r\n\r\n    // wire up basic observables\r\n    this.ready$ = combineLatest([this.api.ready$, this.loading$]).pipe(\r\n      map(([ready, loading]) => ready && !loading),\r\n      share()\r\n    );\r\n\r\n    // all apps are the same as provided by the api\r\n    this.apps$ = this.api.apps$;\r\n\r\n    // if the content-type or app is set, switch tabs (ignore null/empty states)\r\n    const typeOrAppReady = merge(this.state.type$, this.state.app$).pipe(\r\n      filter((t) => !!t),\r\n      share()\r\n    );\r\n    combineLatest([typeOrAppReady, initTrue$]).subscribe((_) =>\r\n      this.switchTab(\"type/app ready and init-true\")\r\n    );\r\n\r\n    // once the data is known, check if installer is needed\r\n    combineLatest([\r\n      this.api.templates$,\r\n      this.api.contentTypes$,\r\n      this.api.apps$,\r\n      this.api.ready$.pipe(filter((r) => !!r)),\r\n      this.backendSettings.showAdvanced$,\r\n    ])\r\n      .pipe(\r\n        map(([templates, _, apps, _2, showAdv]) => {\r\n          log.add(\r\n            \"apps/templates loaded, will check if we should show installer\"\r\n          );\r\n          // Installer is needed on content without templates, or apps without any apps\r\n          this.installerNeeded = this.isContent\r\n            ? templates.length === 0\r\n            : apps.length === 0;\r\n          this.installerShow =\r\n            showAdv && this.installerNeeded && !this.isInnerContent;\r\n          this.showSearchBar = !this.installerNeeded;\r\n          this.showInstallAndAllApps =\r\n            showAdv && (this.installerShow || !this.isContent);\r\n          this.showAdminApp = showAdv && !this.installerNeeded;\r\n\r\n          log.add(\"Debug Relevant Properties\", {\r\n            installerNeeded: this.installerNeeded,\r\n            showAdv: showAdv,\r\n            isInnerContent: this.isInnerContent,\r\n            installerShow: this.installerShow,\r\n          });\r\n\r\n          // if (this.showDebug) console.log('initObservables...combineLatest(...)', this);\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n    // template loading is true, when the template-list or selected template are not ready\r\n    this.templatesLoading$ = combineLatest([\r\n      this.state.templates$,\r\n      this.state.template$,\r\n    ]).pipe(\r\n      map(([all, selected]) => !(all && selected)),\r\n      startWith(false)\r\n    );\r\n\r\n    // whenever the template changes, ensure the preview reloads\r\n    // but don't do this when initializing, that's why we listen to initDone$\r\n    this.state.template$\r\n      .pipe(\r\n        filter((t) => !!t),\r\n        skipUntil(initTrue$)\r\n      )\r\n      .subscribe((t) => this.previewTemplate(t));\r\n  }\r\n\r\n  /** The UI doesn't update reliably :(, so we copy the data to local variables */\r\n  private autosyncObservablesToEnsureUiUpdates(): any {\r\n    this.state.app$.subscribe((a) => (this.app = a));\r\n    this.state.templates$.subscribe((t) => (this.templates = t));\r\n    this.state.template$.subscribe((t) => (this.template = t));\r\n    this.state.types$.subscribe((t) => {\r\n      this.types = t;\r\n      this.defaultContentType = ContentTypesProcessor.firstDefault(t);\r\n    });\r\n    this.state.type$.subscribe((t) => (this.contentType = t));\r\n\r\n    this.ready$.subscribe((r) => (this.ready = r));\r\n    merge(\r\n      this.ready$,\r\n      this.state.app$,\r\n      this.state.type$,\r\n      this.state.types$,\r\n      this.state.template$,\r\n      this.state.templates$\r\n    ).subscribe(() => this.cdRef.detectChanges());\r\n  }\r\n\r\n  private initValuesFromBridge(config: IQuickDialogConfig): void {\r\n    if (this.showDebug) console.log(`initValuesFromBridge(config)`, config);\r\n    this.preventTypeSwitch = config.hasContent;\r\n    this.isInnerContent = config.isInnerContent;\r\n    this.isContent = config.isContent;\r\n    this.supportsAjax = this.isContent || config.supportsAjax;\r\n    this.preventAppSwitch = config.hasContent;\r\n    this.showCancel = config.templateId != null;\r\n  }\r\n\r\n  //#region basic UI action binding\r\n  cancel(): void {\r\n    this.bridge.cancel();\r\n  }\r\n\r\n  run(action: string): void {\r\n    this.bridge.run(action);\r\n  }\r\n\r\n  persistTemplate(template: Template) {\r\n    this.bridge.setTemplate(template.TemplateId, template.Name, true);\r\n  }\r\n\r\n  /**\r\n   * app selection from UI\r\n   */\r\n  selectApp(before: App, after: App): void {\r\n    if (before && before.AppId === after.AppId) {\r\n      this.switchTab(\"select app\");\r\n    } else {\r\n      this.updateApp(after);\r\n      this.templateFilter = \"\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * content-type selection from UI\r\n   */\r\n  selectContentType(before: ContentType, after: ContentType): void {\r\n    if (before && before.StaticName === after.StaticName) {\r\n      this.switchTab(\"select template\");\r\n    } else {\r\n      this.setContentType(after);\r\n      this.templateFilter = \"\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * activate a template from the UI\r\n   */\r\n  selectTemplate(template: Template): void {\r\n    this.state.activateTemplate(template);\r\n  }\r\n  //#endregion\r\n\r\n  private setContentType(contentType: ContentType): void {\r\n    log.add(\r\n      `select content-type '${contentType.Name}'; prevent: ${this.preventTypeSwitch}`\r\n    );\r\n    if (this.preventTypeSwitch) return;\r\n    this.state.activateType(contentType);\r\n  }\r\n\r\n  switchTab(message: string) {\r\n    const msg = `switchTab(${message})`;\r\n    log.add(msg);\r\n    this.tabIndex = 1;\r\n    this.cdRef.detectChanges();\r\n    // repeat after delay because of a bug in the tabs-updating (unclear why...)\r\n    // timer(100).toPromise().then(_ => {\r\n    //   return this.tabIndex = 1;\r\n    // });\r\n  }\r\n\r\n  private updateApp(newApp: App): void {\r\n    // ajax-support can change as apps are changed; for ajax, maybe both the previous and new must support it\r\n    // or just new? still WIP\r\n    const ajax = newApp.SupportsAjaxReload;\r\n    log.add(\r\n      `changing app to ${newApp.AppId}; prevent-switch: ${this.preventAppSwitch} use-ajax:${ajax}`\r\n    );\r\n    if (this.preventAppSwitch) return;\r\n\r\n    this.loading$.next(true);\r\n    this.bridge.showMessage(\"loading App...\");\r\n    const savePromise = this.api.saveAppId(newApp.AppId.toString(), ajax);\r\n\r\n    if (ajax) {\r\n      savePromise.then(() => {\r\n        log.add(\"saved app, will reset some stuff\");\r\n        // do this after save completed, to ensure that the module is ready on the server\r\n        log.add(\"calling reloadAndReInit()\");\r\n        this.bridge.reloadAndReInit().then((newConfig) => this.boot(newConfig));\r\n      });\r\n    } else {\r\n      savePromise.then(() => window.parent.location.reload());\r\n    }\r\n  }\r\n\r\n  private previewTemplate(t: Template): void {\r\n    log.add(`previewTemplate(${t.TemplateId}), ajax is ${this.supportsAjax}`);\r\n    this.loading$.next(true);\r\n    this.bridge\r\n      .setTemplate(t.TemplateId, t.Name, false)\r\n      .then((_) => this.loading$.next(false));\r\n  }\r\n}\r\n","import { TranslateService } from \"@ngx-translate/core\";\r\nimport { Component, ElementRef } from \"@angular/core\";\r\nimport { SxcAppComponent, Context } from \"@2sic.com/sxc-angular\";\r\nimport { Config } from \"./config\";\r\nimport { SupportedLanguages, langCode2, PrimaryUiLanguage } from \"./i18n\";\r\nimport { BackendSettings } from \"./core/backend-settings\";\r\nimport { AppIconsService } from \"./core/app-icon-registry\";\r\nimport { TemplatePickerComponent } from \"./template-picker/template-picker.component\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n  providers: [AppIconsService],\r\n  imports: [TemplatePickerComponent]\r\n})\r\nexport class AppComponent extends SxcAppComponent {\r\n  constructor(\r\n    public translate: TranslateService,\r\n    el: ElementRef,\r\n    context: Context,\r\n    backendSettings: BackendSettings,\r\n    iconService: AppIconsService\r\n  ) {\r\n    super(el, context.preConfigure({ sxc: Config.getSxcInstance() }), false);\r\n    translate.addLangs(SupportedLanguages);\r\n\r\n    backendSettings.setApp(Config.appId());\r\n\r\n    backendSettings.data.subscribe((ctxDto) => {\r\n      const lang = ctxDto.Language;\r\n      translate.setDefaultLang(PrimaryUiLanguage);\r\n      translate.use(langCode2(lang.Current));\r\n    });\r\n\r\n    iconService.load();\r\n  }\r\n}\r\n","\r\nexport * from './constants';\r\n\r\n\r\nexport function langCode2(langCode5: string) {\r\n  return langCode5.split('-')[0];\r\n}\r\n","<app-template-picker></app-template-picker>\r\n\r\n","import { ApplicationConfig, importProvidersFrom } from \"@angular/core\";\r\nimport { SxcHttpInterceptorProvider } from \"@2sic.com/sxc-angular\";\r\nimport { HttpClient, withInterceptorsFromDi, provideHttpClient } from \"@angular/common/http\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { TranslateModule, TranslateLoader, TranslateModuleConfig } from \"@ngx-translate/core\";\r\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\r\nimport { i18nExtension, pathToI18n, PrimaryUiLanguage } from \"./i18n\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\n// 2pp: Implemented a custom loader to handle missing translation files gracefully\r\n// Otherwise, the app would show: HttpErrorResponse {headers: HttpHeaders, status: 404, statusText: 'Not Found',\r\n// Docs don't mention this: https://ngx-translate.org/recipes/handle-missing-translations/\r\n// But it seems to be a common issue with the library. See: https://github.com/ngx-translate/core/issues/1002\r\nexport class CustomTranslateLoader extends TranslateHttpLoader {\r\n  override getTranslation(lang: string) {\r\n    return super.getTranslation(lang).pipe(\r\n      catchError(() => {\r\n        console.warn(`Translation file for '${lang}' not found. Using fallback '${PrimaryUiLanguage}'.`);\r\n        return of({});\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  const loader = new CustomTranslateLoader(http, pathToI18n, i18nExtension);\r\n  // log.add('created translate-loader', loader);\r\n  return loader;\r\n}\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    SxcHttpInterceptorProvider,\r\n    provideHttpClient(withInterceptorsFromDi()),\r\n    importProvidersFrom(\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      TranslateModule.forRoot(),\r\n      TranslateModule.forChild(buildTranslateConfiguration(HttpLoaderFactory)),\r\n    ),\r\n  ],\r\n};\r\n\r\nfunction buildTranslateConfiguration(factory: (http: HttpClient) => TranslateLoader): TranslateModuleConfig {\r\n  const config: TranslateModuleConfig = {\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: factory,\r\n      deps: [HttpClient],\r\n    },\r\n    defaultLanguage: 'en',\r\n    isolate: true,\r\n  };\r\n  return config;\r\n}\r\n\r\n","import { startWith } from \"rxjs/operators\";\r\nimport { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport { environment } from \"./environments/environment\";\r\nimport { BootController } from \"./app/core/boot-control\";\r\nimport { log } from \"app/core/log\";\r\nimport { bootstrapApplication } from \"@angular/platform-browser\";\r\nimport { AppComponent } from \"app/app.component\";\r\nimport { appConfig } from \"app/app.config\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nlog.add(\"loading main.ts\");\r\n\r\ndeclare const window;\r\nconst platform = platformBrowserDynamic();\r\n\r\nfunction init() {\r\n  log.add(\"init()\");\r\n\r\n  try {\r\n    // kill listeners\r\n    if (!platform.destroyed) platform.destroy();\r\n  } catch (e) {\r\n    console.log(\"platform destroy error\", e);\r\n  }\r\n\r\n  bootstrapApplication(AppComponent, appConfig).catch((err) =>\r\n    console.error(err)\r\n  );\r\n}\r\n\r\n// provide hook for outside reboot calls\r\nconst bootController = (window.bootController =\r\n  BootController.getRebootController());\r\n\r\n// Init on reboot request.\r\nbootController.rebootRequest$\r\n  .pipe(startWith(true)) // Init on first load.\r\n  .subscribe(() => init());\r\n"],"x_google_ignoreList":[]}