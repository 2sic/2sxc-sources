{"version":3,"mappings":"sgBAMMA,iBACEA,iBAA6BA,SAAgBA,QAC7CA,iBACEA,kBAA2BA,kEAASC,2BAClCD,SACFA,QACFA,QACFA,kCAN+BA,wBAErBA,gCACJA,uEAYNA,iBACEA,iBAA6BA,SAAgBA,QAC7CA,iBACEA,kBAA2BA,kEAASE,2BAClCF,SACFA,QACFA,QACFA,kCAN+BA,wBAErBA,gCACJA,0DA1BZA,iBACEA,sBACEA,2BACEA,0BAAgBA,oBAAQA,QAC1BA,QACAA,4BACEA,uBAQFA,QACFA,QAEAA,sBACEA,2BACEA,0BAAgBA,yBAAYA,QAC9BA,QACAA,6BACEA,wBAQFA,QACFA,QACFA,2BA1B6CA,wCAgBAA,uCCRtC,IAAMG,EAAb,eAAaA,EAAb,WAKE,WAAoBC,EAAkCC,MAAqBC,aAAvDC,mBAAkCA,gBALxD,uCAOE,WACEA,KAAKC,eAAiB,IAAIC,SAA+BC,GAEzDH,KAAKI,oBACLJ,KAAKK,kBAXT,yBAcE,WACEL,KAAKC,eAAeK,aAfxB,6BAkBE,SAAgBC,MACdC,KAAgBD,GAChBP,KAAKF,SAASW,KAAK,sBAAuB,KAAM,CAAEC,SAAU,QApBhE,2BAuBU,WAAa,WACnBV,KAAKH,YAAYQ,gBAAgBM,UAAU,CACzCC,MAAO,WACLC,EAAKZ,eAAea,UAAKX,IAE3BW,KAAM,SAACC,GACLF,EAAKZ,eAAea,KAAKC,QA7BjC,+BAkCU,WACN,IAAMC,EAAehB,KAAKC,eAAegB,MACvCC,OAAI,YACF,GAAqB,MAAjBH,EAQJ,MAP6B,CAC3B,CAAEI,MAAO,qBAAsBC,MAAOL,EAAcM,OAAOC,YAC3D,CAAEH,MAAO,WAAYC,MAAOL,EAAcM,OAAOE,UACjD,CAAEJ,MAAO,mBAAoBC,MAAOL,EAAcM,OAAOG,iBACzD,CAAEL,MAAO,QAASC,MAAOL,EAAcM,OAAOI,MAAMC,YACpD,CAAEP,MAAO,cAAeC,MAAOL,EAAcM,OAAOM,iBAKpDC,EAAa5B,KAAKC,eAAegB,MACrCC,OAAI,YACF,GAAqB,MAAjBH,EAOJ,MAN6B,CAC3B,CAAEI,MAAO,UAAWC,MAAOL,EAAcc,KAAKC,OAAOJ,YACrD,CAAEP,MAAO,UAAWC,MAAOL,EAAcc,KAAKE,OAAOL,YACrD,CAAEP,MAAO,OAAQC,MAAOL,EAAcc,KAAKG,KAAKN,YAChD,CAAEP,MAAO,YAAaC,MAAOL,EAAcc,KAAKI,UAAUP,gBAKhE1B,KAAKkC,eAAgBC,OAAc,CAACnB,EAAcY,IAAaX,MAC7DC,OAAI,YAA6B,mBAK/B,MAJ6C,CAC3CkB,YAF6BC,KAG7BC,UAH6BD,aA7DvCE,kDAAa3C,GAAmBH,iDAAnBG,EAAmB4C,mRDdhC/C,+CAAwBA,wZCcXG,EAAb,wGCVIH,oBAA+BA,sBAAUA,+BACzCA,oBAAkCA,2BAAeA,SCK9C,IAAMgD,EAAb,eAAaA,EAAb,WAIE,6BAJF,qCAME,SAAOC,GACL1C,KAAK0C,OAASA,EACd1C,KAAK2C,IAAM3C,KAAK0C,OAAOE,OAR3B,qBAWE,SAAQF,GACN,OAAO,IAZX,wBAeE,WACE1C,KAAK0C,OAAOG,QAAQ7C,KAAK2C,OAhB7B,uBAmBE,WACE3C,KAAK0C,OAAOI,SAAS9C,KAAK2C,SApB9BJ,kDAAaE,8BAAwBD,wXDVrC/C,iBACEA,iBAGEA,4BACAA,4BACFA,QACAA,iBACEA,oBAAUA,sBAAUA,QACtBA,QACFA,QAEAA,wBACEA,oBAAsBA,gCAASsD,iBAC7BtD,qBAAUA,mBAAMA,QAChBA,iBAAMA,wBAAWA,QACnBA,QACAA,qBAA8CA,gCAASsD,gBACrDtD,qBAAUA,mBAAMA,QAChBA,iBAAMA,mBAAMA,QACdA,QACFA,6BAnBIA,yGAA8F,qDAEnFA,sCACAA,yCAE6CA,sCAUpCA,wGCPXgD,EAAb,yBCTEhD,sBAAuDA,sBAAUA,gCACjEA,sBAA8DA,0BAAcA,SCOvE,IAAMuD,GAAb,eAAaA,EAAb,6EAGE,SAAON,GACL1C,KAAKoB,MAAQsB,EAAOtB,QAJxB,qBAOE,SAAQsB,GACN,OAAO,MARXH,kDAAaS,8BAAqBR,uRDTlC/C,iBACEA,4BACAA,6BACFA,eAF4CA,+BACMA,2ECOrCuD,EAAb,oFCaaC,GAAb,eAAaA,EAAb,WAsEE,WACUC,EACAC,EACAC,EACAtD,IAAqB,eAHrBE,cACAA,aACAA,uBACAA,gBAzEVA,WAAQ,IAAIE,IAAuB,MACnCF,cAAW,IAAIE,KAAgB,GAE/BF,aAAUqD,KACVrD,iBAAWsD,+BACNC,KAAkB,CACrBC,oBAAqB,CACnBC,uBAAwBC,IACxBC,iBAAkBC,IAClBC,sBAAuBb,GACvBc,yBAA0BrB,GAE5BsB,WAAY,CACV,CACEC,WAAY,KAAMC,MAAO,KAAMC,MAAO,GAAIC,YAAa,QAASC,UAAW,kCAC3EC,aAAc,mBAAoBC,UAAU,EAAMC,OAAQ,qBAC1DC,mBAAoB,CAClBC,cAAe,SAAC9B,GAAD,oBAAqBA,EAAI+B,GAAzB,mBAAsC/B,EAAIgC,SAG7D,CACEX,WAAY,OAAQC,MAAO,WAAYC,MAAO,GAAIC,YAAa,QAASC,UAAW,mBAAoBE,UAAU,EACjHC,OAAQ,yBAA0BF,aAAc,wBAAyBO,YAAa5E,KAAK6E,iBAE7F,CACEb,WAAY,OAAQC,MAAO,OAAQa,KAAM,EAAGC,SAAU,IAAKX,UAAW,qCAAsCE,UAAU,EACtHU,KAAM,MAAOT,OAAQ,qBAAsBU,cAAejF,KAAKkF,QAAQC,KAAKnF,MAAOqE,aAAc,SAAC3B,GAChG,IAAMC,EAAWD,EAAOE,KACxB,OAAqB,MAAjBD,EAAIyC,UACN,4FAEiCzC,EAAIyC,UAFrC,yEAGsB1C,EAAOtB,MAH7B,8BAMA,yNAKsBsB,EAAOtB,MAL7B,gCAUN,CACE4C,WAAY,SAAUC,MAAO,SAAUa,KAAM,EAAGC,SAAU,IAAKX,UAAW,aAAcE,UAAU,EAClGC,OAAQ,sBAEV,CACEP,WAAY,UAAWC,MAAO,UAAWC,MAAO,GAAIC,YAAa,QAASC,UAAW,aAAcE,UAAU,EAC7GC,OAAQ,sBAEV,CACEP,WAAY,QAASC,MAAO,QAASC,MAAO,GAAIC,YAAa,QAASC,UAAW,yBAA0BE,UAAU,EACrHC,OAAQ,wBAEV,CACEL,MAAO,GAAIE,UAAW,8BAA+BC,aAAc,2BAA4BgB,OAAQ,QACvGb,mBAAoB,CAClB1B,SAAU9C,KAAKsF,UAAUH,KAAKnF,MAC9B6C,QAAS7C,KAAKuF,SAASJ,KAAKnF,WAM5BA,kBAAe,IAAIwF,KApE7B,uCA6EE,WACExF,KAAKyF,gBACLzF,KAAK0F,yBA/ET,yBAkFE,WACE1F,KAAK2F,MAAMrF,WACXN,KAAK4F,SAAStF,WACdN,KAAK6F,aAAaC,gBArFtB,wBAwFE,SAAWrF,GACTT,KAAK4F,SAAS9E,KAAKL,KAzFvB,2BA4FE,WACEsF,OAAOtF,KAAK,wBAAyB,YA7FzC,uBAgGE,WACET,KAAKkD,OAAO8C,SAAS,CAAC,UAAW,CAAEC,WAAYjG,KAAKmD,MAAM+C,eAjG9D,gCAoGE,WACElG,KAAKkD,OAAO8C,SAAS,CAAC,oBAAqB,CAAEC,WAAYjG,KAAKmD,MAAM+C,eArGxE,uBAwGE,SAAUC,GAERnG,KAAKkD,OAAO8C,SAAS,CAAC,UAAW,CAAEC,WAAYjG,KAAKmD,MAAM+C,WAAYE,MAD9B,CAAED,aAzG9C,2BA6GU,WAAa,WACnBnG,KAAKoD,gBAAgBiD,SAAS1F,UAAU,YACtCE,EAAK8E,MAAM7E,KAAKwF,OA/GtB,6BAmHU,SAAgB5D,GAEtB,OADiBA,EAAOE,KACZ2D,WArHhB,uBAwHU,SAAU5D,GAAQ,WAClB6D,EAASC,OAAM,sIAAgI9D,EAAI+D,KAApI,cAA8I/D,EAAI+B,GAAlJ,OACN,OAAX8B,IACAA,IAAW7D,EAAI+D,MAAmB,SAAXF,GACzBxG,KAAKF,SAASW,KAAK,eACnBT,KAAKoD,gBAAgBuD,OAAOhE,EAAI+B,IAAI/D,UAAU,WAC5CiG,EAAK9G,SAASW,KAAK,UAAW,KAAM,CAAEC,SAAU,MAChDkG,EAAKnB,mBAGPoB,MAAM,4CAlIZ,sBAsIU,SAASlE,GAAQ,YAClBmE,QAAO,kCAA4BnE,EAAI+D,KAAhC,aAAyC/D,EAAI+B,GAA7C,SACZ1E,KAAKF,SAASW,KAAK,qBACnBT,KAAKoD,gBAAgB2D,WAAWpE,EAAI+B,IAAI/D,UAAU,WAChDiG,EAAK9G,SAASW,KAAK,gBAAiB,KAAM,CAAEC,SAAU,WA1I5D,qBA8IU,SAAQgC,GAEd1C,KAAKkD,OAAO8C,SAAS,CADNtD,EAAOE,KAAa8B,GACPhD,YAAa,CAAEuE,WAAYjG,KAAKmD,MAAM+C,eAhJtE,kCAmJU,WAAoB,WAC1BlG,KAAK6F,aAAamB,IAChBhH,KAAKkD,OAAO+D,OAAOhG,MACjBsD,OAAO,YAAK,OAAI2C,aAAiBC,QACjCC,SAAYpH,KAAKmD,MAAMkE,SAASnB,WAAWA,aAC3ChF,OAAI,mBAAQL,EAAKsC,MAAMkE,SAASnB,WAAWA,gBAC3CoB,QACA/C,OAAO,qDACP5D,UAAU,WACVE,EAAK4E,uBA5JblD,kDAAaU,GAAiBxD,0EAAjBwD,EAAiBT,ujBCtB9B/C,iBACEA,6BAC4CA,wCAAgBsD,kCAC5DtD,QAEAA,iBAEAA,gCACEA,sCAAcsD,mCACdtD,wCACEA,oBACEA,sBAA0BA,2BAA0CA,QACtEA,QACFA,QAEAA,uCACEA,qBAA4CA,gCAASsD,oBACnDtD,qBAAUA,mBAAMA,QAClBA,QACAA,qBAAkDA,gCAASsD,yBACzDtD,qBAAUA,4BAAeA,QAC3BA,QACAA,qBAAwCA,gCAASsD,gBAC/CtD,qBAAUA,yBAAYA,QACxBA,QACAA,sBAAwCA,gCAASsD,gBAC/CtD,qBAAUA,gBAAGA,QACfA,QACFA,QACFA,QACFA,eA7B6CA,6CAAyB,oBAAzBA,CAAyB,4BAAzBA,CAAyB,0BAM/BA,6DAEPA,0BAEEA,wIDWrBwD,EAAb,cEZasE,GAAb,eAAaA,EAAb,6EAIE,SAAO7E,GACL1C,KAAK0C,OAASA,EACd1C,KAAKoB,MAAQpB,KAAK0C,OAAOtB,QAN7B,qBASE,SAAQsB,GACN,OAAO,IAVX,4BAaE,WAEE1C,KAAK0C,OAAO8E,gBADmBxH,KAAK0C,OAAOE,UAd/CL,kDAAagF,8BAA4B/E,sHCVzC/C,8BAAoCA,iCAAUsD,qBAAkBtD,cAA9CA,8MDUL8H,EAAb,GEOaE,GAAb,eAAaA,EAAb,WAiCE,WAAoB5H,MAAwBE,aAAxBC,mBAhCpBA,gBAAa,IAAIE,IAAgC,MAEjDF,aAAUqD,KACVrD,iBAAWsD,+BACNC,KAAkB,CACrBC,oBAAqB,CACnBG,iBAAkBC,IAClBH,uBAAwBC,IACxBgE,6BAA8BH,IAEhCxD,WAAY,CACV,CACEC,WAAY,KAAMC,MAAO,OAAQC,MAAO,GAAIC,YAAa,QAASC,UAAW,kCAC7EC,aAAc,mBAAoBC,UAAU,EAAMC,OAAQ,qBAC1DC,mBAAoB,CAClBC,cAAe,SAACkD,GAAD,oBAAmCA,EAASC,SAG/D,CACE5D,WAAY,OAAQC,MAAO,UAAWa,KAAM,EAAGC,SAAU,IAAKX,UAAW,sCAAuCE,UAAU,EAC1HU,KAAM,MAAOT,OAAQ,qBAAsBU,cAAejF,KAAK6H,kBAAkB1C,KAAKnF,OAExF,CACEgE,WAAY,SAAUC,MAAO,YAAaC,MAAO,GAAIC,YAAa,QAASC,UAAW,wBACtFC,aAAc,+BAAgCC,UAAU,EAAMC,OAAQ,yBACtEC,mBAAoB,CAClBgD,gBAAiBxH,KAAK8H,eAAe3C,KAAKnF,WA3BpD,uCAmCE,WACEA,KAAK+H,mBApCT,yBAuCE,WACE/H,KAAKgI,WAAW1H,aAxCpB,+BA2CU,SAAkBoC,GAExB1C,KAAK8H,eAD0BpF,EAAOE,QA5C1C,4BAgDU,SAAe+E,GAAsB,WAC3C3H,KAAKH,YAAYiI,eAAeH,EAASC,MAAOD,EAASM,WAAWtH,UAAU,WAC5EiG,EAAKmB,qBAlDX,4BAsDU,WAAc,WACpB/H,KAAKH,YAAYqI,eAAevH,UAAU,YACxCE,EAAKmH,WAAWlH,KAAKqH,SAxD3B5F,kDAAakF,GAAsBhI,qCAAtBgI,EAAsBjF,0NCjBnC/C,iBACEA,8CAIAA,iBACFA,eAL6CA,kDAA8B,oBAA9BA,CAA8B,4EDgB9DgI,EAAb,yBEPaW,GAAb,eAAaA,EAAb,WAIE,WAAoBC,EAAsCC,MAA8CvI,aAApFC,qBAAsCA,8BAJ5D,+CAME,WAAgB,WACa,MAAvBA,KAAKuI,eAKTvI,KAAKqI,cAAcG,sBAAsBxI,KAAKuI,eAAezG,OAAQ9B,KAAKuI,eAAeE,MAAO,OAJ9FzI,KAAK0I,kBAAkB,WAAQ7H,EAAK8H,uBAR1C,gCAeE,WAAkB,WACa,MAAzB3I,KAAK4I,iBAKT5I,KAAKqI,cAAcG,sBAAsBxI,KAAK4I,iBAAiB9G,OAAQ9B,KAAK4I,iBAAiBH,MAAO,OAJlGzI,KAAK0I,kBAAkB,WAAQ7H,EAAKgI,yBAjB1C,+BAwBU,SAAkBC,GAAoB,WAC5C9I,KAAKsI,uBAAuBI,kBAAkB,GAAG/H,UAAU,YACzDiG,EAAK2B,eAAiBQ,EAAeC,QAAQnH,KAAKoH,WAClDrC,EAAKgC,iBAAmBG,EAAeC,QAAQ3H,OAAO4H,WACtDH,UA5BNvG,kDAAa6F,GAAuB3I,mDAAvB2I,EAAuB5F,gPCVpC/C,iBACEA,sBACEA,2BACEA,0BAAgBA,gCAAoBA,QACpCA,iBACEA,oBAAUA,oBAAQA,QACpBA,QACFA,QACAA,4BACEA,oIACIA,gBAAqDA,iBAAIA,QAAIA,eACnEA,QACAA,6BACEA,qBAAmBA,gCAASsD,uBAC1BtD,qBAAUA,wBAAWA,QACrBA,iBAAMA,+BAAkBA,QAC1BA,QACFA,QACFA,QAEAA,uBACEA,4BACEA,2BAAgBA,mCAAsBA,QACtCA,kBACEA,qBAAUA,6BAAgBA,QAC5BA,QACFA,QACAA,6BACEA,oIACIA,gBAAqDA,iBAAIA,QAAIA,eACnEA,QACAA,6BACEA,qBAAmBA,gCAASsD,yBAC1BtD,qBAAUA,wBAAWA,QACrBA,iBAAMA,iCAAoBA,QAC5BA,QACFA,QACFA,QACFA,wED5Ba2I,EAAb,cEAac,GAAb,eAAaA,EAAb,6EAIE,SAAOxG,GACL1C,KAAKoB,MAAQsB,EAAOtB,MACpBpB,KAAKmJ,QAAUzG,EAAOE,OAN1B,qBASE,SAAQF,GACN,OAAO,MAVXH,kDAAa2G,8BAAkC1G,kHCV/C/C,iBAA6CA,SAAWA,eAAnDA,+CAAwCA,yDDUhCyJ,EAAb,GEDaE,GAAb,eAAaA,EAAb,6EAGE,SAAO1G,GACL1C,KAAKoB,MAAQsB,EAAOtB,QAJxB,qBAOE,SAAQsB,GACN,OAAO,MARXH,kDAAa6G,8BAA4B5G,oHCTzC/C,iBACEA,oBAAUA,SAAqDA,QACjEA,eADYA,gGDQC2J,EAAb,GECaC,GAAb,eAAaA,EAAb,6EAIE,SAAO3G,GACL1C,KAAKoB,MAAQsB,EAAOtB,MACpBpB,KAAKmJ,QAAUzG,EAAOE,OAN1B,qBASE,SAAQF,GACN,OAAO,MAVXH,kDAAa8G,8BAAyB7G,wGCVtC/C,iBAAmCA,SAAWA,eAAzCA,qCAA8BA,yDDUtB4J,EAAb,0BETE5J,oBAAwBA,kBAAMA,gCAC9BA,oBAAyBA,kBAAMA,SCO1B,IAAM6J,GAAb,eAAaA,EAAb,6EAGE,SAAO5G,GACL1C,KAAKoB,MAAQsB,EAAOtB,QAJxB,qBAOE,SAAQsB,GACN,OAAO,MARXH,kDAAa+G,8BAA2B9G,8HDTxC/C,iBACEA,6BACAA,6BACFA,eAFaA,+BACAA,uECOA6J,EAAb,GCCaC,GAAb,eAAaA,EAAb,6EAIE,SAAO7G,GACL1C,KAAKoB,MAAQsB,EAAOtB,MACpBpB,KAAKmJ,QAAUzG,EAAOE,OAN1B,qBASE,SAAQF,GACN,OAAO,MAVXH,kDAAagH,8BAA6B/G,4GCV1C/C,iBAAwCA,SAAWA,eAA9CA,0CAAmCA,yDDU3B8J,EAAb,0BETE9J,oBAAwBA,sBAAUA,gCAClCA,oBAAyBA,kBAAMA,SCO1B,IAAM+J,GAAb,eAAaA,EAAb,6EAGE,SAAO9G,GACL1C,KAAKoB,MAAQsB,EAAOtB,QAJxB,qBAOE,SAAQsB,GACN,OAAO,MARXH,kDAAaiH,8BAAuBhH,0HDTpC/C,iBACEA,6BACAA,6BACFA,eAFaA,+BACAA,uECOA+J,EAAb,0DCFI/J,mDAGAA,wEAAmDA,sFAInDA,oBACEA,kDAASgK,qBACThK,oBAAUA,gBAAIA,QAChBA,yHAjBJA,SAEEA,iBACEA,6BAIAA,gCAGAA,2BAEAA,iBAEAA,2BAIFA,QACFA,qCAjBiDA,uDACFA,wDAAiD,qBAAjDA,CAAiD,oBAAjDA,CAAiD,6BAI9DA,qCAGNA,wCAIoDA,0CCSzE,IAAMiK,GAAb,eAAaA,EAAb,WA2EE,WAAoBC,GAA4C,2BAA5C3J,6BA1EpBA,aAAUqD,KACVrD,iBAAWsD,+BACNC,KAAkB,CACrBC,oBAAqB,CACnBC,uBAAwBC,IACxBC,iBAAkBC,IAClBgG,6BAA8BR,GAC9BS,wBAAyBL,GACzBM,4BAA6BR,GAC7BS,0BAA2BV,GAC3BW,mCAAoCd,GACpCe,8BAA+BV,IAEjCxF,WAAY,CACV,CACEE,MAAO,KAAMC,MAAO,GAAIC,YAAa,QAASC,UAAW,kCACzDC,aAAc,mBAAoBC,UAAU,EAAMC,OAAQ,qBAC1DK,YAAa,SAAClC,GAAD,OAAaA,EAAOE,KAAiB+B,MAClDH,mBAAoB,CAClBC,cAAe,SAAC0E,GAAD,wBAAiCA,EAAQe,OAAzC,mBAA0Df,EAAQxE,SAGrF,CACEV,MAAO,UAAWC,MAAO,GAAIC,YAAa,QAASC,UAAW,aAC9DE,UAAU,EAAMC,OAAQ,yBAA0BF,aAAc,+BAChEO,YAAa,SAAClC,GAAD,OAAaA,EAAOE,KAAiBuH,UAEpD,CACElG,MAAO,KAAMC,MAAO,GAAIC,YAAa,QAASC,UAAW,aACzDE,UAAU,EAAMC,OAAQ,yBAA0BF,aAAc,0BAChEO,YAAa,SAAClC,GAAD,OAAaA,EAAOE,KAAiBwH,KAEpD,CACEnG,MAAO,SAAUC,MAAO,GAAIC,YAAa,QAASC,UAAW,aAC7DE,UAAU,EAAMC,OAAQ,yBAA0BF,aAAc,8BAChEO,YAAa,SAAClC,GAAD,OAAaA,EAAOE,KAAiByH,SAEpD,CACEpG,MAAO,OAAQa,KAAM,EAAGC,SAAU,IAAKX,UAAW,2BAA4BE,UAAU,EACxFC,OAAQ,qBAAsBF,aAAc,4BAC5CY,cAAe,SAACvC,GAAD,OAAY7B,EAAKyJ,YAAY5H,EAAOE,OACnDgC,YAAa,SAAClC,GAAD,OAAaA,EAAOE,KAAiB8D,OAEpD,CACEzC,MAAO,gBAAiBD,WAAY,SAAUc,KAAM,EAAGC,SAAU,IAAKX,UAAW,aAAcE,UAAU,EACzGC,OAAQ,qBAAsBF,aAAc,qCAC5CO,YAAa,SAAClC,GAAD,OAAaA,EAAOE,KAAiB2H,gBAEpD,CACEtG,MAAO,UAAWa,KAAM,EAAGC,SAAU,IAAKX,UAAW,aACrDE,UAAU,EAAMC,OAAQ,qBACxBK,YAAa,SAAClC,GAAU,MAAC,OAAgC,QAAhCL,EAACK,EAAOE,KAAiB4H,eAAOC,eAAEC,QAAQ,IAAK,KAAKA,QAAQ,IAAK,MAE5F,CACEzG,MAAO,WAAYC,MAAO,GAAIE,UAAW,aAAcC,aAAc,gCACrEC,UAAU,EAAMC,OAAQ,uBACxBK,YAAa,SAAClC,GAAD,OAAaA,EAAOE,KAAiB+H,SAASC,SAE7D,CACE3G,MAAO,UAAWa,KAAM,EAAGC,SAAU,IAAKX,UAAW,aAAcE,UAAU,EAAMC,OAAQ,qBAC3FK,YAAa,SAAClC,GAAD,OAAaA,EAAOE,KAAiBiI,aAKhD7K,eAAY,IAAIE,IAA2B,MAC3CF,qBAAkB,IAAIE,KAAgB,GACtCF,kBAAe,IAAIE,KAAgB,GACnCF,oBAAiB,IAAIE,IAAwB,MACrDF,oBAAgBmC,OAAc,CAACnC,KAAK8K,UAAW9K,KAAK+K,gBAAiB/K,KAAKgL,aAAchL,KAAKiL,iBAAiBhK,MAC5GC,OAAI,qCAA6D,CAAEgK,SAA/DC,KAAyEC,eAAzED,KAAyFE,YAAzFF,KAAsGG,cAAtGH,SAEEnL,kBAAe,IAAIwF,KAzE7B,uCA6EE,WACExF,KAAKuL,gBACLvL,KAAKwL,wBA/ET,yBAkFE,WACExL,KAAK8K,UAAUxK,WACfN,KAAK+K,gBAAgBzK,WACrBN,KAAKgL,aAAa1K,WAClBN,KAAKiL,eAAe3K,WACpBN,KAAK6F,aAAaC,gBAvFtB,8BA0FE,WAAgB,WACd9F,KAAK+K,gBAAgBjK,MAAMd,KAAK+K,gBAAgB3J,OAC3CpB,KAAK+K,gBAAgB3J,QAE1BpB,KAAKgL,aAAalK,MAAK,GACvBd,KAAKiL,eAAenK,KAAK,MACzBd,KAAK2J,sBAAsB8B,uBAAuB9K,UAAU,YAE1D,GADAE,EAAKmK,aAAalK,MAAK,GACnB4K,EAAIC,SAAS,sCACf,QAAKZ,gBAAgBjK,MAAK,GACpB,IAAI8K,MAAM,gCAElB/K,EAAKoK,eAAenK,KAAK4K,QAtG/B,yBA0GU,SAAYvC,GAClBpD,OAAOtF,KAAP,+BAAoC0I,EAAQxE,MAAQ,YA3GxD,2BA8GU,WAAa,WACnB3E,KAAK2J,sBAAsBtD,SAAS1F,UAAU,YAC5CE,EAAKiK,UAAUhK,KAAKoK,OAhH1B,iCAqHU,WAAmB,WACzBlL,KAAK6F,aAAamB,OAChB6E,MAAwB9F,OAAQ,WAAW9E,MACzCsD,OAAO,kBAAM1D,EAAKkK,gBAAgB3J,SAClCmD,OAAO,YAAK,OAA0C,IAAtC2C,EAAM4E,OAAOC,SAAS,eACtCxH,OAAO,YAAK,OAAkB,MAAd2C,EAAMtE,QACtBjC,UAAU,YACV,IACMqL,EAAiBC,KAAKC,UADgBhF,EAAMtE,MAElD/B,EAAK8I,sBAAsBwC,aAAaH,GAAgBrL,UAAU,YAChEE,EAAKkK,gBAAgBjK,MAAK,GAC1BD,EAAK0K,yBAhIfhJ,kDAAamH,GAAuBjK,sCAAvBiK,EAAuBlH,6oBDvBpC/C,yDAAeA,6SCuBFiK,EAAb,8ECcUjK,6BACEA,yCACFA,cAFgDA,8CADlDA,SACEA,oCAGFA,sCAHmBA,yCCvBpB,IAAM2M,GAAb,eAAaA,EAAb,WAKE,WAAoBC,EAAgDvM,IAAqB,eAArEE,0BAAgDA,gBAHpEA,yBAAsB,gBACtBA,cAAW,IAAIE,KAAgB,GAHjC,uCAOE,cAPF,yBAUE,WACEF,KAAKsM,SAAShM,aAXlB,0BAcE,WACEyF,OAAOtF,KAAKsF,OAAOwG,MAAMC,KAAKC,OAAO,qBAAsB,YAf/D,6BAkBE,SAAgBC,GAAY,WAC1B1M,KAAKsM,SAASxL,MAAK,GACnBd,KAAKF,SAASW,KAAK,iBACnBT,KAAKqM,mBAAmBM,gBAAgB3M,KAAK4M,iBAAiBjM,UAAU,YACtEiG,EAAK0F,SAASxL,MAAK,GACnB8F,EAAK9G,SAASW,KAAKoM,EAAK,KAAM,CAAEnM,SAAU,QAExCoM,SAASC,yBAAyBC,aACpCF,SAASC,cAAcE,OAEzBP,EAAKQ,gBA5BT3K,kDAAa6J,GAAoB3M,kDAApB2M,EAAoB5J,6pBDdjC/C,iBACEA,sBACEA,2BACEA,0BAAgBA,yCAA6BA,QAC7CA,iBACEA,oBAAUA,iBAAKA,QACjBA,QACFA,QACAA,4BACEA,8IAEWA,gBAA4EA,2BAAcA,QAAIA,eAC3GA,QACAA,6BACEA,qBAAmBA,gCAASsD,mBAC1BtD,qBAAUA,kBAAKA,QACfA,iBAAMA,+BAAkBA,QAC1BA,QACFA,QACFA,QAEAA,uBACEA,4BACEA,2BAAgBA,wCAA2BA,QAC7CA,QACAA,6BACEA,qBAA0DA,4DAAYsD,uBACpEtD,gBACEA,sKAEFA,QACAA,6BACEA,sBAAWA,gCAAmBA,QAC9BA,sBAA+EA,iFAA/EA,QAEFA,QACAA,mCAKAA,mBACEA,wCAEEA,uBACFA,QACFA,QACFA,QACFA,QACFA,QACFA,4CAjByDA,iDAA+B,4BAA/BA,CAA+B,mCAGjEA,2CAOXA,yaC7BC2M,EAAb,0BCEM3M,kBACEA,oBAAUA,4BAAgBA,QAC1BA,gBAAMA,kBAAMA,QACdA,+BACAA,kDAIAA,kBACEA,oBAAUA,uBAAWA,QACrBA,gBAAMA,gBAAIA,QACZA,+BACAA,gDAIAA,kBACEA,oBAAUA,qBAASA,QACnBA,gBAAMA,qBAASA,QACjBA,+BACAA,qDAIAA,kBACEA,oBAAUA,oBAAQA,QAClBA,gBAAMA,oBAAQA,QAChBA,+BACAA,sDAIAA,kBACEA,oBAAUA,gBAAIA,QACdA,gBAAMA,oBAAQA,QAChBA,+BACAA,sDAIAA,kBACEA,oBAAUA,iBAAKA,QACfA,gBAAMA,yBAAaA,QACrBA,+BACAA,4BChDC,IAAM0N,GAAb,eAAaA,EAAb,WAWE,WACUC,EACAlK,EACAC,EACAkK,GAAgB,2BAHhBrN,iBACAA,cACAA,aACAA,eAdVA,YAASA,KAAKqN,QAAQC,OAEdtN,UAAO,CAAC,SAAU,OAAQ,YAAa,WAAY,WAAY,gBACvEA,eAAYA,KAAKkD,OAAO+D,OAAOhG,MAC7BsD,OAAO,YAAK,OAAI2C,aAAiBC,QACjCjG,OAAI,kBAAMmB,EAAKkL,KAAKC,QAAQnL,EAAKc,MAAMkE,SAASnB,WAAWwF,IAAI,GAAG+B,SAClElJ,OAAO,YAAQ,OAAImJ,GAAY,KAC/BtG,OAAUpH,KAAKuN,KAAKC,QAAQxN,KAAKmD,MAAMkE,SAASnB,WAAWwF,IAAI,GAAG+B,QARtE,uCAkBE,cAlBF,yBAqBE,WACEzN,KAAKoN,UAAUO,UAtBnB,uBAyBE,SAAUzG,GAERlH,KAAKkD,OAAO8C,SAAS,CADRhG,KAAKuN,KAAKrG,EAAM0G,QACA,CAAE3H,WAAYjG,KAAKmD,YA3BpDZ,kDAAa4K,GAA0B1N,yEAA1B0N,EAA0B3K,8/BDZvC/C,iBACEA,iBACEA,iBACEA,eAAKA,SAAgCA,QACrCA,oBAA6CA,gCAASsD,kBACpDtD,oBAAUA,iBAAKA,QACjBA,QACFA,QACFA,QAEAA,yBAGAA,2BAA6EA,6CAAqBsD,mCAEhGtD,oBACEA,yBAIAA,qCACFA,QAEAA,oBACEA,yBAIAA,mCACFA,QAEAA,oBACEA,yBAIAA,wCACFA,QAEAA,oBACEA,yBAIAA,yCACFA,QAEAA,oBACEA,0BAIAA,yCACFA,QAEAA,oBACEA,0BAIAA,sCACFA,QACFA,QACFA,eA5DWA,mDAWPA,+JCFS0N,EAAb,oICVI1N,kCADFA,oBACEA,gCACFA,qCADiBA,2DAIfA,kCADFA,qBACEA,gCACFA,qCADiBA,2DAKjBA,gECJWoO,EAAb,eAAaA,EAAb,WAIE,6BAHS7N,cAAU,EACnBA,cAAU,EAFZ,4CAME,WACEA,KAAK8N,SAAW9N,KAAK8N,YAPzBC,kDAAaF,8BAAkBrL,mPDP/B/C,iBAAsBA,gCAASsD,oBAC7BtD,4BAIAA,6BAGFA,QAEAA,iDAVgDA,sCAA0C,sBAC7EA,kCAICA,keCEDoO,EAAb,4ICIajK,EAAb,eAAaA,EAAb,WAIE,WAAoB9D,IAAqB,eAArBE,gBAJtB,qCAME,SAAO0C,GACL1C,KAAKgO,GAAKtL,EAAOtB,MACjBpB,KAAKiO,QAAUvL,EAAO+B,cAAc/B,EAAOE,QAR/C,qBAWE,SAAQF,GACN,OAAO,IAZX,kBAeE,cACElC,KAAgBR,KAAKiO,SACrBjO,KAAKF,SAASW,KAAK,sBAAuB,KAAM,CAAEC,SAAU,UAjBhEwN,kDAAatK,GAAgBnE,sCAAhBmE,EAAgBpB,gKCX7B/C,iBAA0DA,gCAASsD,WACjEtD,kBAAiBA,SAAQA,QACzBA,sBAAuBA,qBAASA,QAClCA,eAHwCA,yBACrBA,mfDUNmE,EAAb,yBEVM,WAA0BuK,GAC9B,IAAMC,EAAKtB,SAASuB,cAAc,YAClCD,EAAGhN,MAAQ+M,EACXC,EAAGE,aAAa,WAAY,IAC5BF,EAAGG,MAAMC,SAAW,WACpBJ,EAAGG,MAAME,KAAO,UAChB3B,SAAS4B,KAAKC,YAAYP,GAC1B,IAAMQ,EACJ9B,SAAS+B,eAAeC,WAAa,GACjChC,SAAS+B,eAAeE,WAAW,GAEzCX,EAAGY,SACHlC,SAASmC,YAAY,QACrBnC,SAAS4B,KAAKQ,YAAYd,GACtBQ,IACF9B,SAAS+B,eAAeM,kBACxBrC,SAAS+B,eAAeO,SAASR","names":["i0","ctx_r5","ctx_r8","SystemInfoComponent","zoneService","snackBar","g","this","systemInfoSet$","BehaviorSubject","undefined","buildTemplateVars","getSystemInfo","complete","text","copyToClipboard","open","duration","subscribe","error","t","next","systemInfoSet","systemInfos$","pipe","map","label","value","System","EavVersion","Platform","PlatformVersion","Zones","toString","Fingerprint","siteInfos$","Site","ZoneId","SiteId","Apps","Languages","templateVars$","combineLatest","systemInfos","c","siteInfos","i","selectors","AppsListActionsComponent","params","app","data","onFlush","onDelete","ctx","AppsListShowComponent","AppsListComponent","router","route","appsListService","AllCommunityModules","Object","defaultGridOptions","frameworkComponents","booleanFilterComponent","BooleanFilterComponent","idFieldComponent","IdFieldComponent","appsListShowComponent","appsListActionsComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","cellRendererParams","tooltipGetter","Id","Guid","valueGetter","showValueGetter","flex","minWidth","sort","onCellClicked","openApp","bind","Thumbnail","pinned","deleteApp","flushApp","Subscription","fetchAppsList","refreshOnChildClosed","apps$","fabOpen$","subscription","unsubscribe","window","navigate","relativeTo","firstChild","files","state","getAll","apps","IsHidden","result","prompt","Name","delete","o","alert","confirm","flushCache","add","events","event","NavigationEnd","startWith","snapshot","pairwise","SiteLanguagesStatusComponent","onEnabledToggle","SiteLanguagesComponent","siteLanguagesStatusComponent","language","Code","handleNameClicked","toggleLanguage","fetchLanguages","languages$","IsEnabled","getLanguages","languages","SystemSettingsComponent","dialogService","appDialogConfigService","sitePrimaryApp","openAppAdministration","AppId","getDialogSettings","openSiteSettings","globalPrimaryApp","openGlobalSettings","callback","dialogSettings","Context","PrimaryApp","FeaturesListEnabledReasonComponent","feature","FeaturesListEnabledComponent","FeaturesListNameComponent","FeaturesListPublicComponent","FeaturesListSecurityComponent","FeaturesListUiComponent","ctx_r6","ManageFeaturesComponent","featuresConfigService","featuresListEnabledComponent","featuresListUiComponent","featuresListPublicComponent","featuresListNameComponent","featuresListEnabledReasonComponent","featuresListSecurityComponent","NameId","Enabled","Ui","Public","openFeature","EnabledReason","Expires","_a","replace","Security","Impact","License","features$","showManagement$","showSpinner$","managementUrl$","features","s","showManagement","showSpinner","managementUrl","fetchFeatures","subscribeToMessages","getManageFeaturesUrl","url","includes","Error","fromEvent","origin","endsWith","featuresString","JSON","stringify","saveFeatures","SxcInsightsComponent","sxcInsightsService","loading$","$2sxc","http","apiUrl","form","activatePageLog","pageLogDuration","res","document","activeElement","HTMLElement","blur","resetForm","AppsManagementNavComponent","dialogRef","context","zoneId","tabs","indexOf","path","tabIndex","close","index","FieldHintComponent","isShort","h","id","tooltip","v","str","el","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"sources":["./projects/ng-dialogs/src/app/apps-management/system-info/system-info.component.html","./projects/ng-dialogs/src/app/apps-management/system-info/system-info.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-list/apps-list.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-list/apps-list.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/site-languages-status/site-languages-status.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/site-languages-status/site-languages-status.component.html","./projects/ng-dialogs/src/app/apps-management/site-languages/site-languages.component.ts","./projects/ng-dialogs/src/app/apps-management/site-languages/site-languages.component.html","./projects/ng-dialogs/src/app/apps-management/system-settings/system-settings.component.ts","./projects/ng-dialogs/src/app/apps-management/system-settings/system-settings.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-name/features-list-name.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-name/features-list-name.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.ts","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.html","./projects/ng-dialogs/src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.ts","./projects/ng-dialogs/src/app/apps-management/manage-features/manage-features.component.html","./projects/ng-dialogs/src/app/apps-management/manage-features/manage-features.component.ts","./projects/ng-dialogs/src/app/apps-management/sxc-insights/sxc-insights.component.html","./projects/ng-dialogs/src/app/apps-management/sxc-insights/sxc-insights.component.ts","./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./projects/ng-dialogs/src/app/apps-management/apps-management-nav/apps-management-nav.component.ts","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.html","./projects/ng-dialogs/src/app/shared/components/field-hint/field-hint.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.html","./projects/ng-dialogs/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["<div class=\"cards-box\" *ngIf=\"templateVars$ | async as data\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Platform</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.systemInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">\r\n            {{ info.value }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Current Site</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"info-row\" *ngFor=\"let info of data.siteInfos\">\r\n        <div class=\"info-row__label\">{{ info.label }}</div>\r\n        <div class=\"info-row__value\">\r\n          <span [tippy]=\"info.value\" (click)=\"copyToClipboard(info.value)\">\r\n            {{ info.value }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { copyToClipboard } from '../../shared/helpers/copy-to-clipboard.helper';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { InfoTemplate, SystemInfoTemplateVars } from './system-info.models';\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss'],\r\n})\r\nexport class SystemInfoComponent implements OnInit, OnDestroy {\r\n  templateVars$: Observable<SystemInfoTemplateVars>;\r\n\r\n  private systemInfoSet$: BehaviorSubject<SystemInfoSet | undefined>;\r\n\r\n  constructor(private zoneService: ZoneService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.systemInfoSet$ = new BehaviorSubject<SystemInfoSet>(undefined);\r\n\r\n    this.buildTemplateVars();\r\n    this.getSystemInfo();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.systemInfoSet$.complete();\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n\r\n  private getSystemInfo(): void {\r\n    this.zoneService.getSystemInfo().subscribe({\r\n      error: () => {\r\n        this.systemInfoSet$.next(undefined);\r\n      },\r\n      next: (systemInfoSet) => {\r\n        this.systemInfoSet$.next(systemInfoSet);\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const systemInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'EAV / 2sic Version', value: systemInfoSet.System.EavVersion },\r\n          { label: 'Platform', value: systemInfoSet.System.Platform },\r\n          { label: 'Platform Version', value: systemInfoSet.System.PlatformVersion },\r\n          { label: 'Zones', value: systemInfoSet.System.Zones.toString() },\r\n          { label: 'Fingerprint', value: systemInfoSet.System.Fingerprint },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    const siteInfos$ = this.systemInfoSet$.pipe(\r\n      map(systemInfoSet => {\r\n        if (systemInfoSet == null) { return; }\r\n        const info: InfoTemplate[] = [\r\n          { label: 'Zone Id', value: systemInfoSet.Site.ZoneId.toString() },\r\n          { label: 'Site Id', value: systemInfoSet.Site.SiteId.toString() },\r\n          { label: 'Apps', value: systemInfoSet.Site.Apps.toString() },\r\n          { label: 'Languages', value: systemInfoSet.Site.Languages.toString() },\r\n        ];\r\n        return info;\r\n      })\r\n    );\r\n    this.templateVars$ = combineLatest([systemInfos$, siteInfos$]).pipe(\r\n      map(([systemInfos, siteInfos]) => {\r\n        const templateVars: SystemInfoTemplateVars = {\r\n          systemInfos,\r\n          siteInfos,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    <mat-icon *ngIf=\"app.IsGlobal\">foundation</mat-icon>\r\n    <mat-icon *ngIf=\"app.IsInherited\">holiday_village</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <button mat-menu-item (click)=\"flushCache()\">\r\n    <mat-icon>cached</mat-icon>\r\n    <span>Flush cache</span>\r\n  </button>\r\n  <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"deleteApp()\">\r\n    <mat-icon>delete</mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss'],\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n  private params: AppsListActionsParams;\r\n\r\n  constructor() { }\r\n\r\n  agInit(params: AppsListActionsParams) {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  flushCache() {\r\n    this.params.onFlush(this.app);\r\n  }\r\n\r\n  deleteApp() {\r\n    this.params.onDelete(this.app);\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon tippy=\"Show this app to users\" *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon tippy=\"Don't show this app to users\" *ngIf=\"!value\">visibility_off</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-show',\r\n  templateUrl: './apps-list-show.component.html',\r\n  styleUrls: ['./apps-list-show.component.scss'],\r\n})\r\nexport class AppsListShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { ImportAppDialogData } from '../../import-app/import-app-dialog.config';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { AppsListActionsComponent } from '../ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from '../ag-grid-components/apps-list-actions/apps-list-actions.models';\r\nimport { AppsListShowComponent } from '../ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n})\r\nexport class AppsListComponent implements OnInit, OnDestroy {\r\n  apps$ = new BehaviorSubject<App[]>(null);\r\n  fabOpen$ = new BehaviorSubject(false);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      appsListShowComponent: AppsListShowComponent,\r\n      appsListActionsComponent: AppsListActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (app: App) => `ID: ${app.Id}\\nGUID: ${app.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Show', field: 'IsHidden', width: 70, headerClass: 'dense', cellClass: 'icons no-outline', sortable: true,\r\n        filter: 'booleanFilterComponent', cellRenderer: 'appsListShowComponent', valueGetter: this.showValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'apps-list-primary-action highlight', sortable: true,\r\n        sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: this.openApp.bind(this), cellRenderer: (params: ICellRendererParams) => {\r\n          const app: App = params.data;\r\n          if (app.Thumbnail != null) {\r\n            return `\r\n            <div class=\"container\">\r\n              <img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          } else {\r\n            return `\r\n            <div class=\"container\">\r\n              <div class=\"image logo\">\r\n                <span class=\"material-icons-outlined\">star_border</span>\r\n              </div>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          }\r\n        },\r\n      },\r\n      {\r\n        headerName: 'Folder', field: 'Folder', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Version', field: 'Version', width: 78, headerClass: 'dense', cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Items', field: 'Items', width: 70, headerClass: 'dense', cellClass: 'number-cell no-outline', sortable: true,\r\n        filter: 'agNumberColumnFilter',\r\n      },\r\n      {\r\n        width: 82, cellClass: 'secondary-action no-padding', cellRenderer: 'appsListActionsComponent', pinned: 'right',\r\n        cellRendererParams: {\r\n          onDelete: this.deleteApp.bind(this),\r\n          onFlush: this.flushApp.bind(this),\r\n        } as AppsListActionsParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchAppsList();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.apps$.complete();\r\n    this.fabOpen$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  openChange(open: boolean) {\r\n    this.fabOpen$.next(open);\r\n  }\r\n\r\n  browseCatalog() {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp() {\r\n    this.router.navigate(['create'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.router.navigate(['create-inherited'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  importApp(files?: File[]) {\r\n    const dialogData: ImportAppDialogData = { files };\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild, state: dialogData });\r\n  }\r\n\r\n  private fetchAppsList() {\r\n    this.appsListService.getAll().subscribe(apps => {\r\n      this.apps$.next(apps);\r\n    });\r\n  }\r\n\r\n  private showValueGetter(params: ValueGetterParams) {\r\n    const app: App = params.data;\r\n    return !app.IsHidden;\r\n  }\r\n\r\n  private deleteApp(app: App) {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) { return; }\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.appsListService.delete(app.Id).subscribe(() => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchAppsList();\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App) {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open('Flushing cache...');\r\n    this.appsListService.flushCache(app.Id).subscribe(() => {\r\n      this.snackBar.open('Cache flushed', null, { duration: 2000 });\r\n    });\r\n  }\r\n\r\n  private openApp(params: CellClickedEvent) {\r\n    const appId = (params.data as App).Id;\r\n    this.router.navigate([appId.toString()], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.fetchAppsList();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps$ | async\" [modules]=\"modules\" [gridOptions]=\"gridOptions\"\r\n    appDragAndDrop [allowedFileTypes]=\"'zip'\" (filesDropped)=\"importApp($event)\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\" [ngClass]=\"{ 'fab-opened': (fabOpen$ | async) }\"\r\n    (openChange)=\"openChange($event)\">\r\n    <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">{{ (fabOpen$ | async) ? 'close' : 'add' }}</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n        <mat-icon>holiday_village</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Import app\" (click)=\"importApp()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab label=\"Create app\" (click)=\"createApp()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages-status',\r\n  templateUrl: './site-languages-status.component.html',\r\n  styleUrls: ['./site-languages-status.component.scss'],\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  private params: SiteLanguagesStatusParams;\r\n\r\n  agInit(params: SiteLanguagesStatusParams) {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage() {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onEnabledToggle(language);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage()\"></mat-slide-toggle>\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SiteLanguagesStatusComponent } from '../ag-grid-components/site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from '../ag-grid-components/site-languages-status/site-languages-status.models';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\n\r\n@Component({\r\n  selector: 'app-site-languages',\r\n  templateUrl: './site-languages.component.html',\r\n  styleUrls: ['./site-languages.component.scss'],\r\n})\r\nexport class SiteLanguagesComponent implements OnInit, OnDestroy {\r\n  languages$ = new BehaviorSubject<SiteLanguage[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      siteLanguagesStatusComponent: SiteLanguagesStatusComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Code', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Culture', flex: 2, minWidth: 250, cellClass: 'primary-action highlight no-outline', sortable: true,\r\n        sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: this.handleNameClicked.bind(this),\r\n      },\r\n      {\r\n        headerName: 'Status', field: 'IsEnabled', width: 72, headerClass: 'dense', cellClass: 'no-padding no-outline',\r\n        cellRenderer: 'siteLanguagesStatusComponent', sortable: true, filter: 'booleanFilterComponent',\r\n        cellRendererParams: {\r\n          onEnabledToggle: this.toggleLanguage.bind(this),\r\n        } as SiteLanguagesStatusParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private zoneService: ZoneService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchLanguages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.languages$.complete();\r\n  }\r\n\r\n  private handleNameClicked(params: CellClickedEvent) {\r\n    const language: SiteLanguage = params.data;\r\n    this.toggleLanguage(language);\r\n  }\r\n\r\n  private toggleLanguage(language: SiteLanguage) {\r\n    this.zoneService.toggleLanguage(language.Code, !language.IsEnabled).subscribe(() => {\r\n      this.fetchLanguages();\r\n    });\r\n  }\r\n\r\n  private fetchLanguages() {\r\n    this.zoneService.getLanguages().subscribe(languages => {\r\n      this.languages$.next(languages);\r\n    });\r\n  }\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages$ | async\" [modules]=\"modules\"\r\n    [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n\r\n  <div class=\"grid-more-actions-box\"></div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AppDialogConfigService } from '../../app-administration/services';\r\nimport { DialogContextSiteApp } from '../../shared/models/dialog-context.models';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-system-settings',\r\n  templateUrl: './system-settings.component.html',\r\n  styleUrls: ['./system-settings.component.scss'],\r\n})\r\nexport class SystemSettingsComponent {\r\n  private sitePrimaryApp: DialogContextSiteApp;\r\n  private globalPrimaryApp: DialogContextSiteApp;\r\n\r\n  constructor(private dialogService: DialogService, private appDialogConfigService: AppDialogConfigService) { }\r\n\r\n  openSiteSettings(): void {\r\n    if (this.sitePrimaryApp == null) {\r\n      this.getDialogSettings(() => { this.openSiteSettings(); });\r\n      return;\r\n    }\r\n\r\n    this.dialogService.openAppAdministration(this.sitePrimaryApp.ZoneId, this.sitePrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  openGlobalSettings(): void {\r\n    if (this.globalPrimaryApp == null) {\r\n      this.getDialogSettings(() => { this.openGlobalSettings(); });\r\n      return;\r\n    }\r\n\r\n    this.dialogService.openAppAdministration(this.globalPrimaryApp.ZoneId, this.globalPrimaryApp.AppId, 'app');\r\n  }\r\n\r\n  private getDialogSettings(callback: () => void): void {\r\n    this.appDialogConfigService.getDialogSettings(0).subscribe(dialogSettings => {\r\n      this.sitePrimaryApp = dialogSettings.Context.Site.PrimaryApp;\r\n      this.globalPrimaryApp = dialogSettings.Context.System.PrimaryApp;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Manage Site Settings</mat-card-title>\r\n      <div class=\"mat-card-header-icon\">\r\n        <mat-icon>settings</mat-icon>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Site / Portal.\r\n      See <a href=\"http://r.2sxc.org/settings\" target=\"_blank\">docs</a>.\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"openSiteSettings()\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        <span>Open Site Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Manage Global Settings</mat-card-title>\r\n      <div class=\"mat-card-header-icon\">\r\n        <mat-icon>settings_suggest</mat-icon>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This includes both pre-defined SystemSettings as well as custom Settings. It will affect the entire Installation.\r\n      See <a href=\"http://r.2sxc.org/settings\" target=\"_blank\">docs</a>.\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"openGlobalSettings()\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        <span>Open Global Settings</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  styleUrls: ['./features-list-enabled-reason.component.scss'],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.EnabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-name',\r\n  templateUrl: './features-list-name.component.html',\r\n  styleUrls: ['./features-list-name.component.scss'],\r\n})\r\nexport class FeaturesListNameComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.Description\">{{ value }}</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">person</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-public',\r\n  templateUrl: './features-list-public.component.html',\r\n  styleUrls: ['./features-list-public.component.scss'],\r\n})\r\nexport class FeaturesListPublicComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../models/feature.model';\r\n\r\n@Component({\r\n  selector: 'app-features-list-security',\r\n  templateUrl: './features-list-security.component.html',\r\n  styleUrls: ['./features-list-security.component.scss'],\r\n})\r\nexport class FeaturesListSecurityComponent implements ICellRendererAngularComp {\r\n  value: number;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.Security.Message\">{{ value }}</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features-list-ui',\r\n  templateUrl: './features-list-ui.component.html',\r\n  styleUrls: ['./features-list-ui.component.scss'],\r\n})\r\nexport class FeaturesListUiComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\" [ngClass]=\"{ 'iframe-wrapper': data.showManagement }\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [ngClass]=\"{ 'force-hide': data.showManagement }\"\r\n      [rowData]=\"data.features\" [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <mat-spinner class=\"spinner\" *ngIf=\"data.showSpinner\" mode=\"indeterminate\" diameter=\"20\" color=\"accent\">\r\n    </mat-spinner>\r\n\r\n    <iframe class=\"iframe\" *ngIf=\"data.showManagement\" [src]=\"data.managementUrl | safeResourceUrl\"></iframe>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Manage features\" *ngIf=\"!data.showManagement\"\r\n      (click)=\"toggleManagement()\">\r\n      <mat-icon>tune</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, fromEvent, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { FeaturesListEnabledReasonComponent } from '../ag-grid-components/features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from '../ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListNameComponent } from '../ag-grid-components/features-list-name/features-list-name.component';\r\nimport { FeaturesListPublicComponent } from '../ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from '../ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesListUiComponent } from '../ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { Feature } from '../models/feature.model';\r\nimport { ManageFeaturesMessageData } from '../models/manage-features-message-data.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-features',\r\n  templateUrl: './manage-features.component.html',\r\n  styleUrls: ['./manage-features.component.scss'],\r\n})\r\nexport class ManageFeaturesComponent implements OnInit, OnDestroy {\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      featuresListEnabledComponent: FeaturesListEnabledComponent,\r\n      featuresListUiComponent: FeaturesListUiComponent,\r\n      featuresListPublicComponent: FeaturesListPublicComponent,\r\n      featuresListNameComponent: FeaturesListNameComponent,\r\n      featuresListEnabledReasonComponent: FeaturesListEnabledReasonComponent,\r\n      featuresListSecurityComponent: FeaturesListSecurityComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        field: 'ID', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).Guid,\r\n        cellRendererParams: {\r\n          tooltipGetter: (feature: Feature) => `NameId: ${feature.NameId}\\nGUID: ${feature.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        field: 'Enabled', width: 80, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListEnabledComponent',\r\n        valueGetter: (params) => (params.data as Feature).Enabled,\r\n      },\r\n      {\r\n        field: 'UI', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListUiComponent',\r\n        valueGetter: (params) => (params.data as Feature).Ui,\r\n      },\r\n      {\r\n        field: 'Public', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListPublicComponent',\r\n        valueGetter: (params) => (params.data as Feature).Public,\r\n      },\r\n      {\r\n        field: 'Name', flex: 3, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', cellRenderer: 'featuresListNameComponent',\r\n        onCellClicked: (params) => this.openFeature(params.data),\r\n        valueGetter: (params) => (params.data as Feature).Name,\r\n      },\r\n      {\r\n        field: 'EnabledReason', headerName: 'Reason', flex: 1, minWidth: 150, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', cellRenderer: 'featuresListEnabledReasonComponent',\r\n        valueGetter: (params) => (params.data as Feature).EnabledReason,\r\n      },\r\n      {\r\n        field: 'Expires', flex: 1, minWidth: 200, cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).Expires?.replace('T', ' ').replace('Z', ''),\r\n      },\r\n      {\r\n        field: 'Security', width: 80, cellClass: 'no-outline', cellRenderer: 'featuresListSecurityComponent',\r\n        sortable: true, filter: 'agNumberColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).Security.Impact,\r\n      },\r\n      {\r\n        field: 'License', flex: 1, minWidth: 150, cellClass: 'no-outline', sortable: true, filter: 'agTextColumnFilter',\r\n        valueGetter: (params) => (params.data as Feature).License,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private features$ = new BehaviorSubject<Feature[]>(null);\r\n  private showManagement$ = new BehaviorSubject(false);\r\n  private showSpinner$ = new BehaviorSubject(false);\r\n  private managementUrl$ = new BehaviorSubject<string>(null);\r\n  templateVars$ = combineLatest([this.features$, this.showManagement$, this.showSpinner$, this.managementUrl$]).pipe(\r\n    map(([features, showManagement, showSpinner, managementUrl]) => ({ features, showManagement, showSpinner, managementUrl })),\r\n  );\r\n  private subscription = new Subscription();\r\n\r\n  constructor(private featuresConfigService: FeaturesConfigService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchFeatures();\r\n    this.subscribeToMessages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.features$.complete();\r\n    this.showManagement$.complete();\r\n    this.showSpinner$.complete();\r\n    this.managementUrl$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  toggleManagement() {\r\n    this.showManagement$.next(!this.showManagement$.value);\r\n    if (!this.showManagement$.value) { return; }\r\n\r\n    this.showSpinner$.next(true);\r\n    this.managementUrl$.next(null); // reset url\r\n    this.featuresConfigService.getManageFeaturesUrl().subscribe(url => {\r\n      this.showSpinner$.next(false);\r\n      if (url.includes('error: user needs host permissions')) {\r\n        this.showManagement$.next(false);\r\n        throw new Error('User needs host permissions!');\r\n      }\r\n      this.managementUrl$.next(url);\r\n    });\r\n  }\r\n\r\n  private openFeature(feature: Feature) {\r\n    window.open(`https://2sxc.org/r/f/${feature.Guid}`, '_blank');\r\n  }\r\n\r\n  private fetchFeatures() {\r\n    this.featuresConfigService.getAll().subscribe(features => {\r\n      this.features$.next(features);\r\n    });\r\n  }\r\n\r\n  /** Waits for a json message from the iframe and sends it to the server */\r\n  private subscribeToMessages() {\r\n    this.subscription.add(\r\n      fromEvent<MessageEvent>(window, 'message').pipe(\r\n        filter(() => this.showManagement$.value),\r\n        filter(event => event.origin.endsWith('2sxc.org') === true),\r\n        filter(event => event.data != null),\r\n      ).subscribe(event => {\r\n        const features: ManageFeaturesMessageData = event.data;\r\n        const featuresString = JSON.stringify(features);\r\n        this.featuresConfigService.saveFeatures(featuresString).subscribe(res => {\r\n          this.showManagement$.next(false);\r\n          this.fetchFeatures();\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>2sxc Insights for Super Users</mat-card-title>\r\n      <div class=\"mat-card-header-icon\">\r\n        <mat-icon>speed</mat-icon>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This is to access a special section to see what is really in the server memory. It's intended for extensive\r\n      debugging\r\n      - see also <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"openInsights()\">\r\n        <mat-icon>speed</mat-icon>\r\n        <span>Open 2sxc Insights</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Activate Page Level Logging</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\" (ngSubmit)=\"activatePageLog(activateLogForm)\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with ?debug=true in the url. It can\r\n          only be activated for short periods of time.\r\n        </div>\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration=\"ngModel\" [disabled]=\"loading$ | async\">\r\n        </mat-form-field>\r\n        <ng-container *ngIf=\"duration.touched && duration.errors\">\r\n          <app-field-hint *ngIf=\"duration.errors.pattern\" [isError]=\"true\">\r\n            Only positive whole numbers\r\n          </app-field-hint>\r\n        </ng-container>\r\n        <div class=\"form-actions\">\r\n          <button mat-raised-button type=\"submit\" color=\"accent\"\r\n            [disabled]=\"!activateLogForm.valid || (loading$ | async)\">\r\n            Activate\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-sxc-insights',\r\n  templateUrl: './sxc-insights.component.html',\r\n  styleUrls: ['./sxc-insights.component.scss'],\r\n})\r\nexport class SxcInsightsComponent implements OnInit, OnDestroy {\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  loading$ = new BehaviorSubject(false);\r\n\r\n  constructor(private sxcInsightsService: SxcInsightsService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open(window.$2sxc.http.apiUrl('sys/insights/help'), '_blank');\r\n  }\r\n\r\n  activatePageLog(form: NgForm) {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n    form.resetForm();\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Manage Apps in Zone {{ zoneId }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n  <mat-tab-group class=\"mat-tab-group-max-height\" dynamicHeight color=\"accent\" (selectedTabChange)=\"changeTab($event)\"\r\n    [selectedIndex]=\"tabIndex$ | async\">\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Info\">\r\n        <mat-icon>settings_suggest</mat-icon>\r\n        <span>System</span>\r\n      </div>\r\n      <app-system-info *matTabContent></app-system-info>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Apps\">\r\n        <mat-icon>star_border</mat-icon>\r\n        <span>Apps</span>\r\n      </div>\r\n      <app-apps-list *matTabContent></app-apps-list>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Languages\">\r\n        <mat-icon>translate</mat-icon>\r\n        <span>Languages</span>\r\n      </div>\r\n      <app-site-languages *matTabContent></app-site-languages>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"System Settings\">\r\n        <mat-icon>settings</mat-icon>\r\n        <span>Settings</span>\r\n      </div>\r\n      <app-system-settings *matTabContent></app-system-settings>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"Features\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Features</span>\r\n      </div>\r\n      <app-manage-features *matTabContent></app-manage-features>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" tippy=\"2sxc Insights\">\r\n        <mat-icon>speed</mat-icon>\r\n        <span>2sxc Insights</span>\r\n      </div>\r\n      <app-sxc-insights *matTabContent></app-sxc-insights>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss'],\r\n})\r\nexport class AppsManagementNavComponent implements OnInit {\r\n  zoneId = this.context.zoneId;\r\n\r\n  private tabs = ['system', 'list', 'languages', 'settings', 'features', 'sxc-insights']; // tabs order has to match template\r\n  tabIndex$ = this.router.events.pipe(\r\n    filter(event => event instanceof NavigationEnd),\r\n    map(() => this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n    filter(tabIndex => tabIndex >= 0),\r\n    startWith(this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path)),\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\" [ngSwitch]=\"isError\">\r\n  <mat-hint *ngSwitchCase=\"false\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-hint>\r\n\r\n  <mat-error *ngSwitchCase=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </mat-error>\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-field-hint',\r\n  templateUrl: './field-hint.component.html',\r\n  styleUrls: ['./field-hint.component.scss'],\r\n})\r\nexport class FieldHintComponent {\r\n  @Input() isError = false;\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: IdFieldParams) {\r\n    this.id = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_ng-dialogs_src_app_apps-management_apps-management-nav_apps-management-nav_component_ts.08fe936281a2d9e3.js"}