{"version":3,"file":"projects_eav-ui_src_app_edit_dialog_header_language-switcher_language-switcher_component_ts.929f0aca67b39a17.js","mappings":"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","names":["CenterSelectedHelper","constructor","ngZone","header","this","moveThreshold","stopClick","eventListeners","runOutsideAngular","checkIfMouseMoved","event","document","addEventListener","passive","push","element","type","listener","lngButtonDown","saveInitialPosition","lngButtonClick","doMove","stopClickIfMouseMoved","destroy","forEach","removeEventListener","positionX","pageX","positionY","pageY","Math","abs","button","target","buttonOffset","getBoundingClientRect","left","buttonWidth","width","headerOffset","headerWidth","scrollLeft","removeRegionName","languageName","substring","includes","indexOf","toLocaleUpperCase","MouseScrollHelper","areButtonsDisabled","registerScroll","bind","headerDownListener","window","getSelection","removeAllRanges","oldScrollBehavior","getComputedStyle","getPropertyValue","style","scrollBehavior","doScroll","e","removeScroll","splice","length","newPositionX","ShowShadowsHelper","leftShadow","rightShadow","hidden","calculateShadows","maxScrollLeft","scrollWidth","clientWidth","hideBoth","hideLeft","hideRight","showBoth","classList","add","remove","i0","$event","_r1","ctx_r1","lngButtonMouseDown","langButton_r3","$implicit","current","NameId","Culture","disabled","buttonText","LanguageSwitcherComponent","languageService","languageInstanceService","formConfig","snackBar","translate","log","classLog","computed","language","buttons","getLanguageButtons","languages","languageButtons","shortCodesCount","shortName","shortCode","getAll","ngAfterViewInit","showShadowsHelper","headerRef","nativeElement","leftShadowRef","rightShadowRef","mouseScrollHelper","centerSelectedHelper","ngOnDestroy","l","fn","open","instant","duration","verticalPosition","end","setCurrent","config","formId","static","t","i1","i2","i3","i4","i5","core","VBU","selectors","viewQuery","rf","ctx","LanguageSwitcherComponent_For_9_Template","MatButtonModule","i6","TranslateModule","TippyDirective","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/edit/dialog/header/language-switcher/center-selected.helper.ts","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/language-switcher.helpers.ts","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/mouse-scroll.helper.ts","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/show-shadows.helper.ts","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/language-switcher.component.html","./projects/eav-ui/src/app/edit/dialog/header/language-switcher/language-switcher.component.ts"],"sourcesContent":["import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../shared/controls/element-event-listener.model';\r\n\r\nexport class CenterSelectedHelper {\r\n  private positionX: number;\r\n  private positionY: number;\r\n  private moveThreshold = 2; // pixels for which header can be scrolled while clicking to still register as click\r\n  private stopClick = false;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const checkIfMouseMoved = (event: MouseEvent) => { this.checkIfMouseMoved(event); };\r\n      document.addEventListener('mouseup', checkIfMouseMoved, { passive: true });\r\n      this.eventListeners.push({ element: document, type: 'mouseup', listener: checkIfMouseMoved });\r\n    });\r\n  }\r\n\r\n  lngButtonDown(event: MouseEvent) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.saveInitialPosition(event);\r\n    });\r\n  }\r\n\r\n  lngButtonClick(event: MouseEvent) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.doMove(event);\r\n    });\r\n  }\r\n\r\n  stopClickIfMouseMoved() {\r\n    return this.stopClick;\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(({ element, type, listener }) => {\r\n        element.removeEventListener(type, listener);\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n  }\r\n\r\n  private saveInitialPosition(event: MouseEvent) {\r\n    this.stopClick = false;\r\n    this.positionX = event.pageX;\r\n    this.positionY = event.pageY;\r\n  }\r\n\r\n  private checkIfMouseMoved(event: MouseEvent) {\r\n    if (!this.positionX || !this.positionY) {\r\n      this.stopClick = false;\r\n      return;\r\n    }\r\n    const newPositionX = event.pageX;\r\n    const newPositionY = event.pageY;\r\n\r\n    const newTotal = newPositionX + newPositionY;\r\n    const oldTotal = this.positionX + this.positionY;\r\n\r\n    this.stopClick = Math.abs(oldTotal - newTotal) > this.moveThreshold;\r\n    this.positionX = null;\r\n    this.positionY = null;\r\n  }\r\n\r\n  private doMove(event: MouseEvent) {\r\n    if (this.stopClick) return;\r\n\r\n    const button = event.target as HTMLButtonElement;\r\n    const buttonOffset = button.getBoundingClientRect().left;\r\n    const buttonWidth = button.getBoundingClientRect().width;\r\n    const headerOffset = this.header.getBoundingClientRect().left;\r\n    const headerWidth = this.header.getBoundingClientRect().width;\r\n\r\n    const currentPosition = buttonOffset + buttonWidth / 2;\r\n    const moveTo = headerOffset + headerWidth / 2;\r\n\r\n    this.header.scrollLeft += currentPosition - moveTo;\r\n  }\r\n}\r\n","import { Language } from '../../../form/form-languages.model';\r\n\r\nexport interface LanguageButton extends Language {\r\n  buttonText: string;\r\n}\r\n\r\n/** Calculates properties of language buttons, e.g. name to be displayed */\r\nexport function getLanguageButtons(languages: Language[]): LanguageButton[] {\r\n  const languageButtons: LanguageButton[] = [];\r\n  const shortCodesCount: Record<string, number> = {};\r\n\r\n  // count the number of repetitions of the same language without region key\r\n  // e.g. English (United States) and English (Australia) are both English\r\n  languages.forEach(language => {\r\n    const shortName = removeRegionName(language.Culture);\r\n    if (shortCodesCount[shortName])\r\n      shortCodesCount[shortName]++;\r\n    else\r\n      shortCodesCount[shortName] = 1;\r\n  });\r\n\r\n  // if language repeats, append language key to name which will be displayed\r\n  languages.forEach(language => {\r\n    const shortCode = removeRegionName(language.Culture);\r\n\r\n    languageButtons.push({\r\n      ...language,\r\n      buttonText: (shortCodesCount[shortCode] > 1) ? `${shortCode} (${language.NameId})` : shortCode,\r\n    });\r\n  });\r\n\r\n  return languageButtons;\r\n}\r\n\r\n/** Returns name without region, e.g. ENGLISH from English (United Stated) */\r\nfunction removeRegionName(languageName: string): string {\r\n  return languageName.substring(0, languageName.includes('(') ? languageName.indexOf('(') - 1 : 100).toLocaleUpperCase();\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../shared/controls/element-event-listener.model';\r\n\r\nexport class MouseScrollHelper {\r\n  private oldScrollBehavior: string;\r\n  private positionX: number;\r\n  private headerDownListener: ElementEventListener;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n    private areButtonsDisabled: () => boolean\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const registerScroll = this.registerScroll.bind(this);\r\n      this.header.addEventListener('pointerdown', registerScroll, { passive: true });\r\n      this.headerDownListener = { element: this.header, type: 'pointerdown', listener: registerScroll };\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.headerDownListener.element.removeEventListener(this.headerDownListener.type, this.headerDownListener.listener);\r\n      this.headerDownListener = null;\r\n      this.eventListeners.forEach(({ element, type, listener }) => {\r\n        element.removeEventListener(type, listener);\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n    this.ngZone = null;\r\n    this.header = null;\r\n    this.areButtonsDisabled = null;\r\n  }\r\n\r\n  private registerScroll(event: MouseEvent) {\r\n    const disabled = this.areButtonsDisabled();\r\n    if (disabled || event.button !== 0) return;\r\n\r\n    window.getSelection().removeAllRanges();\r\n    this.oldScrollBehavior = getComputedStyle(this.header).getPropertyValue('scroll-behavior');\r\n\r\n    this.header.style.scrollBehavior = 'auto';\r\n    this.positionX = event.pageX;\r\n\r\n    const doScroll = (e: MouseEvent) => { this.doScroll(e); };\r\n    const removeScroll = () => { this.removeScroll(); };\r\n    document.addEventListener('pointermove', doScroll, { passive: true });\r\n    document.addEventListener('pointerup', removeScroll, { passive: true });\r\n    document.addEventListener('pointerleave', removeScroll, { passive: true });\r\n    this.eventListeners.push(\r\n      { element: document, type: 'pointermove', listener: doScroll },\r\n      { element: document, type: 'pointerup', listener: removeScroll },\r\n      { element: document, type: 'pointerleave', listener: removeScroll },\r\n    );\r\n  }\r\n\r\n  private removeScroll() {\r\n    this.header.style.scrollBehavior = this.oldScrollBehavior;\r\n\r\n    this.eventListeners.forEach(({ element, type, listener }) => {\r\n      element.removeEventListener(type, listener);\r\n    });\r\n    this.eventListeners.splice(0, this.eventListeners.length);\r\n  }\r\n\r\n  private doScroll(event: MouseEvent) {\r\n    const newPositionX = event.pageX;\r\n    if (newPositionX < this.positionX) {\r\n      this.header.scrollLeft += this.positionX - newPositionX;\r\n    } else if (newPositionX > this.positionX) {\r\n      this.header.scrollLeft += -(newPositionX - this.positionX);\r\n    }\r\n    this.positionX = newPositionX;\r\n  }\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../shared/controls/element-event-listener.model';\r\n\r\nexport class ShowShadowsHelper {\r\n  private maxScrollLeft: number;\r\n  private hidden = 'hidden'; // CSS class which hides shadows\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n    private leftShadow: HTMLElement,\r\n    private rightShadow: HTMLElement,\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.calculateShadows();\r\n\r\n      const calculateShadows = () => { this.calculateShadows(); };\r\n      this.header.addEventListener('scroll', calculateShadows, { passive: true });\r\n      window.addEventListener('resize', calculateShadows, { passive: true });\r\n      this.eventListeners.push(\r\n        { element: this.header, type: 'scroll', listener: calculateShadows },\r\n        { element: window, type: 'resize', listener: calculateShadows },\r\n      );\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(({ element, type, listener }) => {\r\n        element.removeEventListener(type, listener);\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n    this.ngZone = null;\r\n    this.header = null;\r\n    this.leftShadow = null;\r\n    this.rightShadow = null;\r\n  }\r\n\r\n  private calculateShadows() {\r\n    this.maxScrollLeft = this.header.scrollWidth - this.header.clientWidth;\r\n\r\n    if (this.maxScrollLeft === 0) {\r\n      this.hideBoth();\r\n    } else if (this.header.scrollLeft === 0) {\r\n      this.hideLeft();\r\n    } else if (this.header.scrollLeft === this.maxScrollLeft) {\r\n      this.hideRight();\r\n    } else {\r\n      this.showBoth();\r\n    }\r\n  }\r\n\r\n  private hideBoth() {\r\n    this.leftShadow.classList.add(this.hidden);\r\n    this.rightShadow.classList.add(this.hidden);\r\n  }\r\n\r\n  private hideLeft() {\r\n    this.leftShadow.classList.add(this.hidden);\r\n    this.rightShadow.classList.remove(this.hidden);\r\n  }\r\n\r\n  private hideRight() {\r\n    this.leftShadow.classList.remove(this.hidden);\r\n    this.rightShadow.classList.add(this.hidden);\r\n  }\r\n\r\n  private showBoth() {\r\n    this.leftShadow.classList.remove(this.hidden);\r\n    this.rightShadow.classList.remove(this.hidden);\r\n  }\r\n}\r\n","<!-- Show all language tab-buttons on a edit dialog -->\r\n<div class=\"scrollable__overlay\">\r\n  <div #leftShadow class=\"scrollable__overlay--left-shadow\"></div>\r\n  <div #rightShadow class=\"scrollable__overlay--right-shadow\"></div>\r\n  <div #scrollable class=\"scrollable lang-switch\" [tippy]=\"'Message.CantSwitchLanguage' | translate\"\r\n    [tippyDisabled]=\"!disabled\">\r\n    @for (langButton of buttons; track langButton) {\r\n      <button mat-flat-button class=\"lang-switch__button\"\r\n        [color]=\"current() === langButton.NameId ? 'accent' : 'white'\" (mousedown)=\"lngButtonMouseDown($event)\"\r\n        (click)=\"lngButtonClick($event, langButton)\" [tippy]=\"langButton.Culture\" [tippyDisabled]=\"disabled\">\r\n        {{ langButton.buttonText }}\r\n      </button>\r\n    }\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, ElementRef, Input, NgZone, OnDestroy, ViewChild, computed } from '@angular/core';\r\nimport { CenterSelectedHelper } from './center-selected.helper';\r\nimport { getLanguageButtons } from './language-switcher.helpers';\r\nimport { MouseScrollHelper } from './mouse-scroll.helper';\r\nimport { ShowShadowsHelper } from './show-shadows.helper';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { FormConfigService } from '../../../form/form-config.service';\r\nimport { Language } from '../../../form/form-languages.model';\r\nimport { FormLanguageService } from '../../../form/form-language.service';\r\nimport { LanguageService } from '../../../localization/language.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { classLog } from '../../../../shared/logging';\r\n\r\n@Component({\r\n  selector: 'app-language-switcher',\r\n  templateUrl: './language-switcher.component.html',\r\n  styleUrls: ['./language-switcher.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    TranslateModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class LanguageSwitcherComponent implements AfterViewInit, OnDestroy {\r\n\r\n  log = classLog({LanguageSwitcherComponent});\r\n\r\n  @ViewChild('scrollable') private headerRef: ElementRef;\r\n  @ViewChild('leftShadow') private leftShadowRef: ElementRef;\r\n  @ViewChild('rightShadow') private rightShadowRef: ElementRef;\r\n  @Input() disabled: boolean;\r\n\r\n  private centerSelectedHelper: CenterSelectedHelper;\r\n  private mouseScrollHelper: MouseScrollHelper;\r\n  private showShadowsHelper: ShowShadowsHelper;\r\n\r\n  current = computed(() => this.formConfig.language().current);\r\n\r\n  buttons = getLanguageButtons(this.languageService.getAll());\r\n\r\n  constructor(\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: FormLanguageService,\r\n    private ngZone: NgZone,\r\n    private formConfig: FormConfigService,\r\n    private snackBar: MatSnackBar,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.showShadowsHelper = new ShowShadowsHelper(\r\n      this.ngZone,\r\n      this.headerRef.nativeElement,\r\n      this.leftShadowRef.nativeElement,\r\n      this.rightShadowRef.nativeElement,\r\n    );\r\n    this.mouseScrollHelper = new MouseScrollHelper(this.ngZone, this.headerRef.nativeElement, this.areButtonsDisabled.bind(this));\r\n    this.centerSelectedHelper = new CenterSelectedHelper(this.ngZone, this.headerRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.centerSelectedHelper?.destroy();\r\n    this.mouseScrollHelper?.destroy();\r\n    this.showShadowsHelper?.destroy();\r\n  }\r\n\r\n  lngButtonMouseDown(event: MouseEvent) {\r\n    this.centerSelectedHelper.lngButtonDown(event);\r\n  }\r\n\r\n  lngButtonClick(event: MouseEvent, language: Language) {\r\n    const l = this.log.fn('lngButtonClick');\r\n    if (this.disabled) {\r\n      this.snackBar.open(this.translate.instant('Message.CantSwitchLanguage'), null, { duration: 3000, verticalPosition: 'top' });\r\n      return l.end('disabled');\r\n    }\r\n    this.centerSelectedHelper.lngButtonClick(event);\r\n\r\n    if (!this.centerSelectedHelper.stopClickIfMouseMoved()) {\r\n      this.languageInstanceService.setCurrent(this.formConfig.config.formId, language.NameId);\r\n    }\r\n  }\r\n\r\n  private areButtonsDisabled() {\r\n    return this.disabled;\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}