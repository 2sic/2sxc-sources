{"version":3,"sources":["./projects/ng-dialogs/src/app/content-items/services/entities.service.ts","./projects/ng-dialogs/src/app/permissions/go-to-permissions.ts","./projects/ng-dialogs/src/app/permissions/permissions-dialog.config.ts","./projects/ng-dialogs/src/app/permissions/permissions-routing.module.ts","./projects/ng-dialogs/src/app/permissions/ag-grid-components/permissions-actions/permissions-actions.component.ts","./projects/ng-dialogs/src/app/permissions/ag-grid-components/permissions-actions/permissions-actions.component.html","./projects/ng-dialogs/src/app/permissions/permissions.component.ts","./projects/ng-dialogs/src/app/permissions/permissions.component.html","./projects/ng-dialogs/src/app/permissions/permissions.module.ts","./projects/ng-dialogs/src/app/permissions/services/metadata.service.ts","./projects/ng-dialogs/src/app/permissions/services/permissions.service.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.ts","./projects/ng-dialogs/src/app/shared/components/id-field/id-field.component.html","./projects/ng-dialogs/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"names":["http","context","dnnContext","create","contentType","entity","this","post","params","appId","zoneId","delete","type","id","tryForce","$2sxc","apiUrl","toString","force","EntitiesService","getUrl","targetType","keyType","key","getUrlApp","getUrlAttribute","getUrlContentType","guid","getUrlEntity","getUrlLanguage","cultureCode","toLocaleLowerCase","route","path","loadChildren","then","m","PermissionsModule","data","title","permissionsDialog","name","initContext","panelSize","panelClass","getComponent","routes","component","dialog","children","matcher","EditModule","RefreshEditModule","PermissionsRoutingModule","agInit","refresh","deletePermission","onDelete","PermissionsActionsComponent","dialogRef","router","permissionsService","snackBar","permissions$","BehaviorSubject","modules","gridOptions","frameworkComponents","idFieldComponent","permissionsActionsComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","cellRendererParams","tooltipGetter","permission","Id","Guid","flex","minWidth","sort","onCellClicked","editPermission","bind","pinned","subscription","Subscription","parseInt","snapshot","paramMap","get","ngOnInit","fetchPermissions","refreshOnChildClosed","ngOnDestroy","complete","unsubscribe","closeDialog","close","getAll","subscribe","permissions","next","form","target","Object","values","find","metaValue","items","ContentTypeName","For","Target","Number","String","EntityId","formUrl","navigate","relativeTo","confirm","Title","open","duration","add","events","pipe","event","startWith","firstChild","map","pairwise","PermissionsComponent","getMetadata","typeId","contentTypeName","MetadataService","metadataService","entitiesService","metadata","Items","PermissionsService","value","tooltip","copy","IdFieldComponent","copyToClipboard","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"mappings":"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","file":"default-projects_ng-dialogs_src_app_permissions_index_ts.171801e5ec736c5747b3.js","sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { webApiEntityRoot } from '../../../../../edit/shared/services';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Injectable()\r\nexport class EntitiesService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = any>(contentType: string, entity: Record<string, any>): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\n\r\nexport class GoToPermissions {\r\n\r\n  static route: Route = {\r\n    path: 'permissions/:type/:keyType/:key',\r\n    loadChildren: () => import('./permissions.module').then(m => m.PermissionsModule),\r\n    data: { title: 'Permissions' },\r\n  };\r\n\r\n  static getUrl(targetType: number, keyType: MetadataKeyType, key: string): string {\r\n    return `permissions/${targetType}/${keyType}/${key}`;\r\n  }\r\n\r\n  static getUrlApp(appId: number): string {\r\n    return this.getUrl(eavConstants.metadata.app.type, eavConstants.metadata.app.keyType, appId.toString());\r\n  }\r\n\r\n  static getUrlAttribute(id: number): string {\r\n    return this.getUrl(eavConstants.metadata.attribute.type, eavConstants.metadata.attribute.keyType, id.toString());\r\n  }\r\n\r\n  /** For historic reasons, it's the same as Entity */\r\n  static getUrlContentType(guid: string): string {\r\n    return this.getUrlEntity(guid);\r\n  }\r\n\r\n  static getUrlEntity(guid: string): string {\r\n    return this.getUrl(eavConstants.metadata.entity.type, eavConstants.metadata.entity.keyType, guid);\r\n  }\r\n\r\n  static getUrlLanguage(cultureCode: string): string {\r\n    return this.getUrl(eavConstants.metadata.language.type, eavConstants.metadata.language.keyType, cultureCode.toLocaleLowerCase());\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const permissionsDialog: DialogConfig = {\r\n  name: 'SET_PERMISSIONS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { PermissionsComponent } = await import('./permissions.component');\r\n    return PermissionsComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { edit, refreshEdit } from '../../../../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { permissionsDialog } from './permissions-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: permissionsDialog }, children: [\r\n      {\r\n        matcher: edit,\r\n        loadChildren: () => import('../../../../edit/edit.module').then(m => m.EditModule)\r\n      },\r\n      {\r\n        matcher: refreshEdit,\r\n        loadChildren: () => import('../../../../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PermissionsRoutingModule { }\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: PermissionsActionsParams;\r\n\r\n  agInit(params: PermissionsActionsParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission() {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { AllCommunityModules, CellClickedEvent, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { PermissionsActionsComponent } from './ag-grid-components/permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './ag-grid-components/permissions-actions/permissions-actions.models';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n})\r\nexport class PermissionsComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      permissionsActionsComponent: PermissionsActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter',\r\n        cellRendererParams: {\r\n          tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n        } as IdFieldParams,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Title', flex: 2, minWidth: 250, cellClass: 'primary-action highlight',\r\n        sortable: true, sort: 'asc', filter: 'agTextColumnFilter', onCellClicked: this.editPermission.bind(this),\r\n      },\r\n      {\r\n        headerName: 'Identity', field: 'Identity', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Condition', field: 'Condition', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Grant', field: 'Grant', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        width: 42, cellClass: 'secondary-action no-padding', cellRenderer: 'permissionsActionsComponent', pinned: 'right',\r\n        cellRendererParams: {\r\n          onDelete: this.deletePermission.bind(this),\r\n        } as PermissionsActionsParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('type'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private permissionsService: PermissionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(params: CellClickedEvent) {\r\n    let form: EditForm;\r\n    if (params == null) {\r\n      const target = Object.values(eavConstants.metadata).find(metaValue => metaValue.type === this.targetType)?.target;\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: target,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          }\r\n        }],\r\n      };\r\n    } else {\r\n      const permission: Permission = params.data;\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.fetchPermissions();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Permissions</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions$ | async\" [modules]=\"modules\"\r\n      [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { EntitiesService } from '../content-items/services/entities.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { PermissionsActionsComponent } from './ag-grid-components/permissions-actions/permissions-actions.component';\r\nimport { PermissionsRoutingModule } from './permissions-routing.module';\r\nimport { PermissionsComponent } from './permissions.component';\r\nimport { MetadataService } from './services/metadata.service';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PermissionsComponent,\r\n    PermissionsActionsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PermissionsRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    AgGridModule.withComponents([]),\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    PermissionsService,\r\n    MetadataService,\r\n    EntitiesService,\r\n  ]\r\n})\r\nexport class PermissionsModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Metadata } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param typeId metadataOf something. For more info check eavConstants file\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of content type for which we search for permissions. Key is connected with keyType\r\n   * @param contentTypeName name of content type where permissions are stored.\r\n   * If left blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(typeId: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<Metadata> {\r\n    return this.http.get<Metadata>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: typeId.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { EntitiesService } from '../../content-items/services/entities.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n  constructor(private metadataService: MetadataService, private entitiesService: EntitiesService) { }\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: IdFieldParams) {\r\n    this.id = params.value;\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}