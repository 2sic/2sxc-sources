{"version":3,"sources":["./src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.html","./src/app/apps-management/ag-grid-components/apps-list-show/apps-list-show.component.ts","./src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.html","./src/app/apps-management/ag-grid-components/apps-list-actions/apps-list-actions.component.ts","./src/app/apps-management/constants/app.patterns.ts","./src/app/apps-management/apps-list/apps-list.component.ts","./src/app/apps-management/apps-list/apps-list.component.html","./src/app/apps-management/ag-grid-components/enable-languages-status/enable-languages-status.component.ts","./src/app/apps-management/ag-grid-components/enable-languages-status/enable-languages-status.component.html","./src/app/apps-management/enable-languages/enable-languages.component.ts","./src/app/apps-management/enable-languages/enable-languages.component.html","./src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.html","./src/app/apps-management/ag-grid-components/features-list-enabled/features-list-enabled.component.ts","./src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.html","./src/app/apps-management/ag-grid-components/features-list-ui/features-list-ui.component.ts","./src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.html","./src/app/apps-management/ag-grid-components/features-list-public/features-list-public.component.ts","./src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.ts","./src/app/apps-management/ag-grid-components/features-list-security/features-list-security.component.html","./src/app/apps-management/manage-features/manage-features.component.html","./src/app/apps-management/manage-features/manage-features.component.ts","./src/app/apps-management/sxc-insights/sxc-insights.component.html","./src/app/apps-management/sxc-insights/sxc-insights.component.ts","./src/app/apps-management/apps-management-nav/apps-management-nav.component.html","./src/app/apps-management/apps-management-nav/apps-management-nav.component.ts"],"names":["agInit","params","this","value","refresh","AppsListShowComponent","app","data","deleteApp","onDelete","flushCache","onFlush","AppsListActionsComponent","appNamePattern","router","route","appsListService","snackBar","apps$","BehaviorSubject","modules","gridOptions","frameworkComponents","booleanFilterComponent","idFieldComponent","appsListShowComponent","appsListActionsComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","valueGetter","idValueGetter","showValueGetter","flex","minWidth","onCellClicked","openApp","bind","Thumbnail","cellRendererParams","flushApp","subscription","Subscription","ngOnInit","fetchAppsList","refreshOnChildClosed","ngOnDestroy","complete","unsubscribe","browseCatalog","window","open","createApp","name","prompt","trim","replace","match","create","subscribe","duration","importApp","navigate","relativeTo","firstChild","getAll","apps","next","Id","Guid","IsHidden","result","Name","delete","alert","confirm","toString","parent","add","events","pipe","event","startWith","snapshot","map","pairwise","AppsListComponent","toggleLanguage","onEnabledToggle","EnableLanguagesStatusComponent","languagesService","languages$","enableLanguagesStatusComponent","handleNameClicked","fetchLanguages","Code","language","save","IsEnabled","languages","EnableLanguagesComponent","FeaturesListEnabledComponent","FeaturesListUiComponent","FeaturesListPublicComponent","FeaturesListSecurityComponent","sanitizer","featuresConfigService","features$","showManagement$","showSpinner$","managementUrl$","bypassSecurityTrustResourceUrl","featuresListEnabledComponent","featuresListUiComponent","featuresListPublicComponent","featuresListSecurityComponent","openFeature","valueGetterDateTime","fetchFeatures","managementSubscription","toggleManagement","openManagement","id","rawValue","colDef","substring","features","getManageFeaturesUrl","url","includes","Error","fromEvent","take","origin","endsWith","featuresString","JSON","stringify","saveFeatures","res","e","ManageFeaturesComponent","sxcInsightsService","positiveWholeNumber","loading$","openInsights","$2sxc","http","apiUrl","activatePageLog","pageLogDuration","clearFocus","document","activeElement","HTMLElement","blur","SxcInsightsComponent","dialogRef","context","tabs","zoneId","tabIndex","indexOf","path","closeDialog","close","changeTab","index","AppsManagementNavComponent"],"mappings":"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","file":"apps-management-nav-component.61d969e7b8b1ea8f66c5.js","sourcesContent":["<div class=\"icon-container\">\r\n  <mat-icon matTooltip=\"Show this app to users\" *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon matTooltip=\"Don't show this app to users\" *ngIf=\"!value\">visibility_off</mat-icon>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-show',\r\n  templateUrl: './apps-list-show.component.html',\r\n  styleUrls: ['./apps-list-show.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppsListShowComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matTooltip=\"Flush cache\" (click)=\"flushCache()\">\r\n    <mat-icon>cached</mat-icon>\r\n  </div>\r\n  <div class=\"like-button highlight\" matRipple *ngIf=\"app.IsApp\" matTooltip=\"Delete\" (click)=\"deleteApp()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n  <div class=\"like-button disabled\" *ngIf=\"!app.IsApp\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams } from './apps-list-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-apps-list-actions',\r\n  templateUrl: './apps-list-actions.component.html',\r\n  styleUrls: ['./apps-list-actions.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n  private params: AppsListActionsParams;\r\n\r\n  agInit(params: AppsListActionsParams) {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deleteApp() {\r\n    this.params.onDelete(this.app);\r\n  }\r\n\r\n  flushCache() {\r\n    this.params.onFlush(this.app);\r\n  }\r\n}\r\n","export const appNamePattern = /^[A-Za-z](?:[A-Za-z0-9\\s\\(\\)-]+)*$/;\r\nexport const appNameError = 'Standard letters, numbers, spaces, hyphens and round brackets are allowed. Must start with a letter.';\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription, BehaviorSubject } from 'rxjs';\r\nimport { filter, startWith, map, pairwise } from 'rxjs/operators';\r\nimport { AllCommunityModules, GridOptions, CellClickedEvent, ValueGetterParams, ICellRendererParams } from '@ag-grid-community/all-modules';\r\n\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppsListShowComponent } from '../ag-grid-components/apps-list-show/apps-list-show.component';\r\nimport { AppsListActionsComponent } from '../ag-grid-components/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from '../ag-grid-components/apps-list-actions/apps-list-actions.models';\r\nimport { appNamePattern, appNameError } from '../constants/app.patterns';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\n\r\n@Component({\r\n  selector: 'app-apps-list',\r\n  templateUrl: './apps-list.component.html',\r\n  styleUrls: ['./apps-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppsListComponent implements OnInit, OnDestroy {\r\n  apps$ = new BehaviorSubject<App[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      appsListShowComponent: AppsListShowComponent,\r\n      appsListActionsComponent: AppsListActionsComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Show', field: 'IsHidden', width: 70, headerClass: 'dense', cellClass: 'icons no-outline', sortable: true,\r\n        filter: 'booleanFilterComponent', cellRenderer: 'appsListShowComponent', valueGetter: this.showValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, cellClass: 'apps-list-primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', onCellClicked: this.openApp.bind(this), cellRenderer: (params: ICellRendererParams) => {\r\n          const app: App = params.data;\r\n          if (app.Thumbnail != null) {\r\n            return `\r\n            <div class=\"container\">\r\n              <img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          } else {\r\n            return `\r\n            <div class=\"container\">\r\n              <div class=\"image logo\">\r\n                <span class=\"material-icons-outlined\">star_border</span>\r\n              </div>\r\n              <div class=\"text\">${params.value}</div>\r\n            </div>`;\r\n          }\r\n        },\r\n      },\r\n      {\r\n        width: 80, cellClass: 'secondary-action no-padding', cellRenderer: 'appsListActionsComponent',\r\n        cellRendererParams: {\r\n          onDelete: this.deleteApp.bind(this),\r\n          onFlush: this.flushApp.bind(this),\r\n        } as AppsListActionsParams,\r\n      },\r\n      {\r\n        headerName: 'Folder', field: 'Folder', flex: 2, minWidth: 250, cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Version', field: 'Version', width: 78, headerClass: 'dense', cellClass: 'no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter',\r\n      },\r\n      {\r\n        headerName: 'Items', field: 'Items', width: 70, headerClass: 'dense', cellClass: 'number-cell no-outline', sortable: true,\r\n        filter: 'agNumberColumnFilter',\r\n      },\r\n    ],\r\n  };\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private appsListService: AppsListService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchAppsList();\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.apps$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  browseCatalog() {\r\n    window.open('http://2sxc.org/apps');\r\n  }\r\n\r\n  createApp() {\r\n    let name = prompt('Enter App Name (will also be used for folder)');\r\n    if (name === null) { return; }\r\n    name = name.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs\r\n    while (!name.match(appNamePattern)) {\r\n      name = prompt(`Enter App Name (will also be used for folder)\\n${appNameError}`, name);\r\n      if (name === null) { return; }\r\n      name = name.trim().replace(/\\s\\s+/g, ' '); // remove multiple white spaces and tabs\r\n    }\r\n    this.snackBar.open('Saving...');\r\n    this.appsListService.create(name).subscribe(() => {\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.fetchAppsList();\r\n    });\r\n  }\r\n\r\n  importApp() {\r\n    this.router.navigate(['import'], { relativeTo: this.route.firstChild });\r\n  }\r\n\r\n  private fetchAppsList() {\r\n    this.appsListService.getAll().subscribe(apps => {\r\n      this.apps$.next(apps);\r\n    });\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const app: App = params.data;\r\n    return `ID: ${app.Id}\\nGUID: ${app.Guid}`;\r\n  }\r\n\r\n  private showValueGetter(params: ValueGetterParams) {\r\n    const app: App = params.data;\r\n    return !app.IsHidden;\r\n  }\r\n\r\n  private deleteApp(app: App) {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) { return; }\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.appsListService.delete(app.Id).subscribe(() => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.fetchAppsList();\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  private flushApp(app: App) {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`)) { return; }\r\n    this.snackBar.open('Flushing cache...');\r\n    this.appsListService.flushCache(app.Id).subscribe(() => {\r\n      this.snackBar.open('Cache flushed', null, { duration: 2000 });\r\n    });\r\n  }\r\n\r\n  private openApp(params: CellClickedEvent) {\r\n    const appId = (params.data as App).Id;\r\n    this.router.navigate([appId.toString()], { relativeTo: this.route.parent });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        startWith(!!this.route.snapshot.firstChild.firstChild),\r\n        map(() => !!this.route.snapshot.firstChild.firstChild),\r\n        pairwise(),\r\n        filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n      ).subscribe(() => {\r\n        this.fetchAppsList();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"apps$ | async\" [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n\r\n  <eco-fab-speed-dial class=\"grid-fab\">\r\n    <eco-fab-speed-dial-trigger spin=\"true\">\r\n      <button mat-fab>\r\n        <mat-icon class=\"spin180\">add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-trigger>\r\n\r\n    <eco-fab-speed-dial-actions>\r\n      <button mat-mini-fab matTooltip=\"Find more apps\" (click)=\"browseCatalog()\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab matTooltip=\"Import app\" (click)=\"importApp()\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n      <button mat-mini-fab matTooltip=\"Create app\" (click)=\"createApp()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </eco-fab-speed-dial-actions>\r\n  </eco-fab-speed-dial>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nimport { EnableLanguage } from '../../models/enable-language.model';\r\nimport { EnableLanguagesStatusParams } from './enable-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-enable-languages-status',\r\n  templateUrl: './enable-languages-status.component.html',\r\n  styleUrls: ['./enable-languages-status.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EnableLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  private params: EnableLanguagesStatusParams;\r\n\r\n  agInit(params: EnableLanguagesStatusParams) {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage() {\r\n    const language: EnableLanguage = this.params.data;\r\n    this.params.onEnabledToggle(language);\r\n  }\r\n}\r\n","<div class=\"cell-box\">\r\n  <mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage()\"></mat-slide-toggle>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AllCommunityModules, GridOptions, CellClickedEvent, ValueGetterParams } from '@ag-grid-community/all-modules';\r\n\r\nimport { EnableLanguagesService } from '../services/enable-languages.service';\r\nimport { EnableLanguage } from '../models/enable-language.model';\r\nimport { EnableLanguagesStatusComponent } from '../ag-grid-components/enable-languages-status/enable-languages-status.component';\r\nimport { EnableLanguagesStatusParams } from '../ag-grid-components/enable-languages-status/enable-languages-status.models';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\n\r\n@Component({\r\n  selector: 'app-enable-languages',\r\n  templateUrl: './enable-languages.component.html',\r\n  styleUrls: ['./enable-languages.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EnableLanguagesComponent implements OnInit, OnDestroy {\r\n  languages$ = new BehaviorSubject<EnableLanguage[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      idFieldComponent: IdFieldComponent,\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      enableLanguagesStatusComponent: EnableLanguagesStatusComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'Code', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Culture', flex: 2, minWidth: 250, cellClass: 'primary-action highlight no-outline', sortable: true,\r\n        filter: 'agTextColumnFilter', onCellClicked: this.handleNameClicked.bind(this),\r\n      },\r\n      {\r\n        headerName: 'Status', field: 'IsEnabled', width: 72, headerClass: 'dense', cellClass: 'no-padding no-outline',\r\n        cellRenderer: 'enableLanguagesStatusComponent', sortable: true, filter: 'booleanFilterComponent',\r\n        cellRendererParams: {\r\n          onEnabledToggle: this.toggleLanguage.bind(this),\r\n        } as EnableLanguagesStatusParams,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private languagesService: EnableLanguagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchLanguages();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.languages$.complete();\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const language: EnableLanguage = params.data;\r\n    return `ID: ${language.Code}`;\r\n  }\r\n\r\n  private handleNameClicked(params: CellClickedEvent) {\r\n    const language: EnableLanguage = params.data;\r\n    this.toggleLanguage(language);\r\n  }\r\n\r\n  private toggleLanguage(language: EnableLanguage) {\r\n    this.languagesService.save(language.Code, !language.IsEnabled).subscribe(() => {\r\n      this.fetchLanguages();\r\n    });\r\n  }\r\n\r\n  private fetchLanguages() {\r\n    this.languagesService.getAll().subscribe(languages => {\r\n      this.languages$.next(languages);\r\n    });\r\n  }\r\n}\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"languages$ | async\" [modules]=\"modules\"\r\n    [gridOptions]=\"gridOptions\">\r\n  </ag-grid-angular>\r\n</div>\r\n","<div class=\"icon-container\">\r\n  <mat-icon matTooltip=\"Feature is enabled\" *ngIf=\"value\">toggle_on</mat-icon>\r\n  <mat-icon matTooltip=\"Feature is disabled\" *ngIf=\"!value\">toggle_off</mat-icon>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  styleUrls: ['./features-list-enabled.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">visibility</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-features-list-ui',\r\n  templateUrl: './features-list-ui.component.html',\r\n  styleUrls: ['./features-list-ui.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeaturesListUiComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon *ngIf=\"value\">person</mat-icon>\r\n  <mat-icon *ngIf=\"!value\">remove</mat-icon>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-features-list-public',\r\n  templateUrl: './features-list-public.component.html',\r\n  styleUrls: ['./features-list-public.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeaturesListPublicComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-features-list-security',\r\n  templateUrl: './features-list-security.component.html',\r\n  styleUrls: ['./features-list-security.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeaturesListSecurityComponent implements ICellRendererAngularComp {\r\n\r\n  agInit(params: ICellRendererParams) {\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon matTooltip=\"Security Status still work-in progress\" class=\"feature-security-icon\">help</mat-icon>\r\n</div>\r\n","<ng-container *ngIf=\"{\r\n  features: features$ | async,\r\n  showManagement: showManagement$ | async,\r\n  showSpinner: showSpinner$ | async,\r\n  managementUrl: managementUrl$ | async\r\n} as data\">\r\n\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\" [ngClass]=\"{ 'iframe-wrapper': data.showManagement }\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [ngClass]=\"{ 'force-hide': data.showManagement }\"\r\n      [rowData]=\"data.features\" [modules]=\"modules\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <mat-spinner class=\"spinner\" *ngIf=\"data.showSpinner\" mode=\"indeterminate\" diameter=\"20\" color=\"accent\">\r\n    </mat-spinner>\r\n\r\n    <iframe class=\"iframe\" *ngIf=\"data.showManagement\" [src]=\"data.managementUrl\"></iframe>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" matTooltip=\"Manage features\" (click)=\"toggleManagement()\">\r\n      <mat-icon>tune</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { BehaviorSubject, fromEvent, Subscription } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { AllCommunityModules, GridOptions, ICellRendererParams, ValueGetterParams, CellClickedEvent } from '@ag-grid-community/all-modules';\r\n\r\nimport { Feature } from '../models/feature.model';\r\nimport { FeaturesListEnabledComponent } from '../ag-grid-components/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesListUiComponent } from '../ag-grid-components/features-list-ui/features-list-ui.component';\r\nimport { FeaturesListPublicComponent } from '../ag-grid-components/features-list-public/features-list-public.component';\r\nimport { FeaturesListSecurityComponent } from '../ag-grid-components/features-list-security/features-list-security.component';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { ManageFeaturesMessageData } from '../models/manage-features-message-data.model';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\n\r\n@Component({\r\n  selector: 'app-manage-features',\r\n  templateUrl: './manage-features.component.html',\r\n  styleUrls: ['./manage-features.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ManageFeaturesComponent implements OnInit, OnDestroy {\r\n  features$ = new BehaviorSubject<Feature[]>(null);\r\n  showManagement$ = new BehaviorSubject(false);\r\n  showSpinner$ = new BehaviorSubject(false);\r\n  managementUrl$ = new BehaviorSubject(this.sanitizer.bypassSecurityTrustResourceUrl(''));\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      booleanFilterComponent: BooleanFilterComponent,\r\n      idFieldComponent: IdFieldComponent,\r\n      featuresListEnabledComponent: FeaturesListEnabledComponent,\r\n      featuresListUiComponent: FeaturesListUiComponent,\r\n      featuresListPublicComponent: FeaturesListPublicComponent,\r\n      featuresListSecurityComponent: FeaturesListSecurityComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'ID', field: 'id', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'idFieldComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: this.idValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Enabled', field: 'enabled', width: 80, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListEnabledComponent',\r\n      },\r\n      {\r\n        headerName: 'UI', field: 'ui', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListUiComponent',\r\n      },\r\n      {\r\n        headerName: 'Public', field: 'public', width: 70, headerClass: 'dense', cellClass: 'no-outline',\r\n        sortable: true, filter: 'booleanFilterComponent', cellRenderer: 'featuresListPublicComponent'\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'id', flex: 2, minWidth: 250, cellClass: 'primary-action highlight', sortable: true,\r\n        filter: 'agTextColumnFilter', onCellClicked: this.openFeature,\r\n        cellRenderer: (params: ICellRendererParams) => 'details (name lookup still WIP)',\r\n      },\r\n      {\r\n        headerName: 'Expires', field: 'expires', flex: 1, minWidth: 200, cellClass: 'no-outline',\r\n        sortable: true, filter: 'agTextColumnFilter', valueGetter: this.valueGetterDateTime,\r\n      },\r\n      { headerName: 'Security', width: 70, cellClass: 'no-outline', cellRenderer: 'featuresListSecurityComponent' },\r\n    ],\r\n  };\r\n\r\n  private managementSubscription: Subscription;\r\n\r\n  constructor(private sanitizer: DomSanitizer, private featuresConfigService: FeaturesConfigService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchFeatures();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.features$.complete();\r\n    this.showManagement$.complete();\r\n    this.showSpinner$.complete();\r\n    this.managementUrl$.complete();\r\n    this.managementSubscription?.unsubscribe();\r\n  }\r\n\r\n  toggleManagement() {\r\n    this.showManagement$.next(!this.showManagement$.value);\r\n    this.managementSubscription?.unsubscribe();\r\n    if (this.showManagement$.value) {\r\n      this.openManagement();\r\n    }\r\n  }\r\n\r\n  private idValueGetter(params: ValueGetterParams) {\r\n    const feature: Feature = params.data;\r\n    return `GUID: ${feature.id}`;\r\n  }\r\n\r\n  private openFeature(params: CellClickedEvent) {\r\n    window.open(`https://2sxc.org/r/f/${params.value}`, '_blank');\r\n  }\r\n\r\n  private valueGetterDateTime(params: ValueGetterParams) {\r\n    const rawValue: string = params.data[params.colDef.field];\r\n    if (!rawValue) { return null; }\r\n    return rawValue.substring(0, 19).replace('T', ' '); // remove 'Z' and replace 'T'\r\n  }\r\n\r\n  private fetchFeatures() {\r\n    this.featuresConfigService.getAll().subscribe(features => {\r\n      this.features$.next(features);\r\n    });\r\n  }\r\n\r\n  private openManagement() {\r\n    this.showSpinner$.next(true);\r\n    this.managementUrl$.next(this.sanitizer.bypassSecurityTrustResourceUrl('')); // reset url\r\n\r\n    this.featuresConfigService.getManageFeaturesUrl().subscribe(url => {\r\n      this.showSpinner$.next(false);\r\n\r\n      if (url.includes('error: user needs host permissions')) {\r\n        this.showManagement$.next(false);\r\n        throw new Error('User needs host permissions!');\r\n      }\r\n\r\n      this.managementUrl$.next(this.sanitizer.bypassSecurityTrustResourceUrl(url));\r\n\r\n      /** This should await callbacks from the iframe and if it gets a valid callback containing a json, it should send it to the server */\r\n      this.managementSubscription = fromEvent(window, 'message').pipe(take(1)).subscribe((event: MessageEvent) => {\r\n        if (typeof event.data === 'undefined') { return; }\r\n        if (event.origin.endsWith('2sxc.org') === false) { return; } // something from an unknown domain, let's ignore it\r\n\r\n        try {\r\n          const features: ManageFeaturesMessageData = event.data;\r\n          const featuresString = JSON.stringify(features);\r\n          this.featuresConfigService.saveFeatures(featuresString).subscribe(res => {\r\n            this.showManagement$.next(false);\r\n            this.fetchFeatures();\r\n          });\r\n        } catch (e) { }\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"cards-box\">\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>2sxc Insights for Super Users</mat-card-title>\r\n      <div class=\"actions-box\">\r\n        <button mat-icon-button matTooltip=\"Open 2sxc Insights\" (click)=\"openInsights()\">\r\n          <mat-icon>speed</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      This is to access a special section to see what is really in the server memory. It's intended for extensive\r\n      debugging\r\n      - see also <a href=\"https://2sxc.org/en/blog/post/using-2sxc-insights\" target=\"_blank\">this blog post</a>.\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mat-elevation-z2\">\r\n    <mat-card-header>\r\n      <mat-card-title>Activate Page Level Logging</mat-card-title>\r\n      <div class=\"actions-box\"></div>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form #activateLogForm=\"ngForm\" class=\"activate-log-form\"\r\n        (ngSubmit)=\"activatePageLog(); clearFocus(); activateLogForm.resetForm()\">\r\n        <div>\r\n          This will place insights-logs in the HTML of the user output for users with ?debug=true in the url. It can\r\n          only be activated for short periods of time.\r\n        </div>\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Duration in Minutes</mat-label>\r\n          <input matInput type=\"number\" min=\"0\" required [pattern]=\"positiveWholeNumber\" [(ngModel)]=\"pageLogDuration\"\r\n            name=\"Duration\" #duration=\"ngModel\" [disabled]=\"loading$ | async\">\r\n        </mat-form-field>\r\n        <ng-container *ngIf=\"duration.touched && duration.errors\">\r\n          <app-field-hint *ngIf=\"duration.errors.pattern\" [isError]=\"true\">\r\n            Only positive whole numbers\r\n          </app-field-hint>\r\n        </ng-container>\r\n        <div class=\"form-actions\">\r\n          <button mat-raised-button type=\"submit\" color=\"accent\"\r\n            [disabled]=\"!activateLogForm.valid || (loading$ | async)\">\r\n            Activate\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SxcRoot } from '@2sic.com/2sxc-typings';\r\n\r\nimport { SxcInsightsService } from '../services/sxc-insights.service';\r\ndeclare const $2sxc: SxcRoot;\r\n\r\n@Component({\r\n  selector: 'app-sxc-insights',\r\n  templateUrl: './sxc-insights.component.html',\r\n  styleUrls: ['./sxc-insights.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SxcInsightsComponent implements OnInit, OnDestroy {\r\n  pageLogDuration: number;\r\n  positiveWholeNumber = /^[1-9][0-9]*$/;\r\n  loading$ = new BehaviorSubject(false);\r\n\r\n  constructor(private sxcInsightsService: SxcInsightsService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n  }\r\n\r\n  openInsights() {\r\n    window.open($2sxc.http.apiUrl('sys/insights/help'));\r\n  }\r\n\r\n  activatePageLog() {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Activating...');\r\n    this.sxcInsightsService.activatePageLog(this.pageLogDuration).subscribe(res => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open(res, null, { duration: 4000 });\r\n    });\r\n  }\r\n\r\n  clearFocus() {\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Manage Apps in Zone {{ zoneId }}</div>\r\n      <button mat-icon-button matTooltip=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <!-- spm NOTE: we use mat-tab-group because mat-tab-nav-bar doesn't have animations and doesn't look pretty -->\r\n  <mat-tab-group dynamicHeight color=\"accent\" (selectedTabChange)=\"changeTab($event)\" [selectedIndex]=\"tabIndex\">\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Apps\">\r\n        <mat-icon>star_border</mat-icon>\r\n        <span>Apps</span>\r\n      </div>\r\n      <app-apps-list *matTabContent></app-apps-list>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Languages\">\r\n        <mat-icon>translate</mat-icon>\r\n        <span>Languages</span>\r\n      </div>\r\n      <app-enable-languages *matTabContent></app-enable-languages>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"Features\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Features</span>\r\n      </div>\r\n      <app-manage-features *matTabContent></app-manage-features>\r\n    </mat-tab>\r\n\r\n    <mat-tab>\r\n      <div *matTabLabel class=\"mat-tab-label-box\" matTooltip=\"2sxc Insights\">\r\n        <mat-icon>speed</mat-icon>\r\n        <span>2sxc Insights</span>\r\n      </div>\r\n      <app-sxc-insights *matTabContent></app-sxc-insights>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Context } from '../../shared/services/context';\r\n\r\n@Component({\r\n  selector: 'app-apps-management-nav',\r\n  templateUrl: './apps-management-nav.component.html',\r\n  styleUrls: ['./apps-management-nav.component.scss']\r\n})\r\nexport class AppsManagementNavComponent implements OnInit, OnDestroy {\r\n  zoneId: number;\r\n  tabs = ['list', 'languages', 'features', 'sxc-insights']; // tabs order has to match template\r\n  tabIndex: number;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AppsManagementNavComponent>,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n  ) {\r\n    this.zoneId = this.context.zoneId;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // set tab initially\r\n    this.tabIndex = this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path);\r\n\r\n    this.subscription.add(\r\n      // change tab when route changed\r\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\r\n        this.tabIndex = this.tabs.indexOf(this.route.snapshot.firstChild.url[0].path);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeTab(event: MatTabChangeEvent) {\r\n    const path = this.tabs[event.index];\r\n    this.router.navigate([path], { relativeTo: this.route });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}