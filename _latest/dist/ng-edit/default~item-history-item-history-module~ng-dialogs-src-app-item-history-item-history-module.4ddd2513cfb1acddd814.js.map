{"version":3,"sources":["./projects/ng-dialogs/src/app/item-history/item-history-dialog.config.ts","./projects/ng-dialogs/src/app/item-history/item-history-routing.module.ts","./projects/ng-dialogs/src/app/item-history/item-history.module.ts","./projects/ng-dialogs/src/app/item-history/services/versions.service.ts","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js"],"names":["itemHistoryDialog","name","initContext","panelSize","panelClass","getComponent","routes","path","component","data","dialog","title","ItemHistoryRoutingModule","forChild","ItemHistoryModule","http","context","dnnContext","fetchVersions","entityId","this","post","$2sxc","apiUrl","webApiVersions","params","appId","toString","restore","changeId","VersionsService","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","rf","ctx","pageSizeOption_r6","$implicit","MatPaginator_div_2_mat_form_field_3_Template","_r8","$event","_changePageSize","value","ctx_r3","_formFieldAppearance","color","pageSize","disabled","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r4","MatPaginator_div_2_Template","ctx_r0","length","MatPaginator_button_6_Template","_r10","firstPage","ctx_r1","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r12","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","endIndex","Math","max","min","ɵfac","t","ɵprov","factory","token","providedIn","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","parentIntl","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorMixinBase","_MatPaginatorMixinBase","_MatPaginatorBase","_changeDetectorRef","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_updateDisplayedPageSizeOptions","map","p","_initialized","_markInitialized","unsubscribe","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","push","sort","a","b","emit","undefined","ɵdir","type","inputs","outputs","features","MatPaginator","intl","changeDetectorRef","formFieldAppearance","ɵcmp","selectors","hostAttrs","exportAs","decls","vars","consts","template","previousPage","nextPage","directives","styles","encapsulation","changeDetection","MatPaginatorModule","ɵmod","ɵinj","providers","imports"],"mappings":"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","file":"default~item-history-item-history-module~ng-dialogs-src-app-item-history-item-history-module.4ddd2513cfb1acddd814.js","sourcesContent":["import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const itemHistoryDialog: DialogConfig = {\r\n  name: 'ITEM_HISTORY_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ItemHistoryComponent } = await import('./item-history.component');\r\n    return ItemHistoryComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { itemHistoryDialog } from './item-history-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: itemHistoryDialog, title: 'Item History' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ItemHistoryRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ItemHistoryRoutingModule } from './item-history-routing.module';\r\nimport { ItemHistoryComponent } from './item-history.component';\r\nimport { VersionsService } from './services/versions.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ItemHistoryComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ItemHistoryRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatDividerModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    VersionsService,\r\n  ]\r\n})\r\nexport class ItemHistoryModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Version } from '../models/version.model';\r\n\r\nconst webApiVersions = 'cms/history/';\r\n\r\n@Injectable()\r\nexport class VersionsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  fetchVersions(entityId: number) {\r\n    return this.http.post<Version[]>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'get'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString() },\r\n      },\r\n    );\r\n  }\r\n\r\n  restore(entityId: number, changeId: number) {\r\n    return this.http.post<boolean>(\r\n      this.dnnContext.$2sxc.http.apiUrl(webApiVersions + 'restore'),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.context.appId.toString(), changeId: changeId.toString() },\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"appearance\", ctx_r3._formFieldAppearance)(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 6, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\nMatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nclass MatPaginatorMixinBase {\n}\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(MatPaginatorMixinBase));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons, } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() { return this._pageIndex; }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() { return this._length; }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() { return this._pageSize; }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() { return this._hidePageSize; }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = function _MatPaginatorBase_Factory(t) { return new (t || _MatPaginatorBase)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined)); };\n_MatPaginatorBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatPaginatorBase, inputs: { pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatPaginatorBase.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined }\n];\n_MatPaginatorBase.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatPaginatorBase, [{\n        type: Directive\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-paginator\"], inputs: { disabled: \"disabled\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator',\n                    'role': 'group'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); };\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatCommonModule]; }, exports: function () { return [MatPaginator]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                    MatCommonModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n\n//# sourceMappingURL=paginator.js.map"],"sourceRoot":"webpack:///"}