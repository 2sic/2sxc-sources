{"version":3,"file":"common.36ce00acf4e887a1.js","mappings":"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","names":["JsonHelpers","tryParse","input","JSON","parse","FieldValueHelpers","fieldValuesAreEqual","x","y","isNaN","Array","isArray","RxHelpers","arraysEqual","getItemValuesChanges","oldValues","newValues","changes","key","Object","keys","newValue","length","undefined","importContentItemDialog","name","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ImportContentItemComponent","Promise","all","__webpack_require__","e","then","bind","contentItemsDialog","ContentItemsComponent","contentItemsRoutes","path","component","DialogEntryComponent","data","dialog","children","GoToMetadata","getRoutes","loadChildren","m","ContentExportRoutes","contentImportRoutes","title","EditRoutes","loadScripts","scriptObjects","callback","iteration","newCallback","this","scrObj","global","test","w","window","require","src","exportedVar","FeaturesConfigService","HttpServiceBaseSignal","saveFeatures","featuresStates","http","post","apiUrl","getLicensesLive","refresh","httpResource","uploadLicense","file","formData","FormData","append","pipe","map","info","Success","Messages","MessageType","FileUploadMessageTypes","Error","Text","Message","retrieveLicensePromise","fetchPromise","static","__ngFactoryType__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","jDH","factory","ɵfac","ReservedNamesValidatorDirective","constructor","appReservedNames","validate","control","value","controlValue","toLocaleLowerCase","reservedName","find","reservedNames","mergeReserved","fields","existingFields","forEach","field","StaticName","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","selectors","inputs","features","i0","provide","NG_VALIDATORS","useExisting","multi","DebugFields","environment","production","_r1","ctx_r1","openLightspeedFeatureInfo","params","lightSpeedLink","lightSpeedOwner","LightSpeedActionsComponent_Conditional_1_Conditional_1_Template","LightSpeedActionsComponent_Conditional_1_Conditional_2_Template","appHasLightSpeed","lightSpeed","Title","appLightSpeedEnabled","LightSpeedActionsComponent","required","inject","FeaturesService","lightSpeedEnabled","isEnabled","FeatureNames","LightSpeed","Id","IsEnabled","_angular_core__WEBPACK_IMPORTED_MODULE_2__","VBU","decls","vars","consts","template","rf","ctx","LightSpeedActionsComponent_Conditional_0_Template","LightSpeedActionsComponent_Conditional_1_Template","TippyDirective","MatIconModule","i1","MatBadgeIconDirective","MatRippleModule","i2","encapsulation","arrReducer","arr","push","toArray","operate","source","subscriber","reduce","subscribe","editContentTypeFieldsDialog","EditContentTypeFieldsComponent","contentTypeFieldsRoutes","ContentTypeFieldsComponent","GoToPermissions","route","AppScopes","App","Site","Global","fieldNamePattern","fieldNameError","importRoutes","ImportAppComponent","prefix","notValid","ValidationMsgHelper","messages","long","min","max","minNoItems","maxNoItems","pattern","decimals","jsonError","formulaError","validateForm","form","errors","controlKey","entries","controls","UiControl","markTouched","invalid","errorKey","AnalyzeSettingsService","getStack","part","view","newHttpResource","url","webApiAppRoot","appId","_angular_core__WEBPACK_IMPORTED_MODULE_3__","AppAdminHelpers","getLightSpeedEditParams","items","EditPrep","newMetadata","eavConstants","appMetadata","ContentTypeName","metadata","app","webApiContentGroup","webApiContentGroupReplace","webApiContentGroupItemlist","webApiContentGroupHeader","ContentGroupService","getItemsPromise","item","guid","index","toString","saveItem","entityId","id","add","removeItem","contentGroup","delete","parent","getListPromise","saveList","resortedList","getAllLive","ZoneService","getLanguageLive","toggleLanguage","code","enable","_this","getStatusPromise","cultureCode","getSystemInfoLive","getLanguagesPermissionsLive","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Update$2sxcEnvFromContext","appContext","includedApiRoot","Api","new2sxcHeader","$2sxc","env","header","appApi","load","DialogInNewWindowService","context","Context","openCodeFile","isShared","templateId","Path","editId","hashParams","#buildHashParam","keyDialog","DialogTypeConstants","Develop","keyIsShared","keyItems","stringify","#buildFullUrl","open","openAppAdministration","zoneId","tab","scope","extras","keyZoneId","keyAppId","keyExtras","#buildSharedHashParams","keyModuleId","moduleId","keyContentBlockId","contentBlockId","keyPartOfPage","sessionStorage","getItem","keyDebug","rawKey","replace","valueTemp","rawValue","encodeURIComponent","s","oldHref","keyUrl","oldUrl","URL","newHref","origin","pathname","search","allHashParams","acc","AgActionsAlwaysRefresh","RestApiHelpTextComponent","apiTitle","webApiAppRootApp","AppsListService","getInheritable","getPendingApps","create","inheritAppId","createTemplate","newName","encodedName","installPendingApps","pendingApps","flushCache","AnalyzeSettingsValueComponent","clipboard","transient","ClipboardService","agInit","copy","copyToClipboard","styles","#dialogData","#dialog","matDialog","viewContainerRef","router","changeDetectorRef","injector","log","classLog","navigation","getCurrentNavigation","state","ngOnInit","l","fn","dialogConfig","snapshot","a","_dialogAnimatingOpen","_lastDialogRef","afterOpened","openDialogComponent","ngOnDestroy","close","svcId","init","autoFocus","backdropClass","closeOnNavigation","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","totalPopup","navigate","relativeTo","markForCheck","i3","logSpecs","set","disable","getErrors","pfx","moreDisabled","#warningMessages","jsonWarning","formulaWarning","dirty","touched","disabled","extendName","aIfInList","emptyControl","touchedAndInvalid","setIfChanged","before","isEqual","#set","markAsTouched","markAsDirty","patchValue","updateValueAndValidity","fnIfInList","r","error","formulaMessage","getWarnings","_warning","warning","warningKey","replaceContentDialog","ReplaceContentComponent","replaceContentRoutes","EditRoutesNoHistory"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/helpers/json.helpers.ts","./projects/eav-ui/src/app/edit/shared/helpers/field-value.helpers.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items.routing.ts","./projects/eav-ui/src/app/shared/helpers/load-scripts.helper.ts","./projects/eav-ui/src/app/apps-management/services/features-config.service.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/reserved-names.directive.ts","./projects/eav-ui/src/app/edit/edit-debug.ts","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.html","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.ts","./node_modules/rxjs/dist/esm/internal/operators/toArray.js","./projects/eav-ui/src/app/content-type-fields/content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.routing.ts","./projects/eav-ui/src/app/shared/models/dialog-context.models.ts","./projects/eav-ui/src/app/app-administration/constants/field-name.patterns.ts","./projects/eav-ui/src/app/import-app/import-app-dialog.config.ts","./projects/eav-ui/src/app/import-app/import-app.routing.ts","./projects/eav-ui/src/app/edit/shared/validation/validation-messages.helpers.ts","./projects/eav-ui/src/app/app-administration/services/analyze-settings.service.ts","./projects/eav-ui/src/app/app-administration/app-admin-helpers.ts","./projects/eav-ui/src/app/manage-content-list/services/content-group.service.ts","./projects/eav-ui/src/app/apps-management/services/zone.service.ts","./projects/eav-ui/src/app/shared/helpers/update-env-vars-from-dialog-settings.helper.ts","./projects/eav-ui/src/app/shared/routing/dialog-in-new-window.service.ts","./projects/eav-ui/src/app/app-administration/queries/ag-actions/ag-actions-component.ts","./projects/eav-ui/src/app/shared/components/rest-api-help-text/rest-api-help-text.component.ts","./projects/eav-ui/src/app/shared/components/rest-api-help-text/rest-api-help-text.component.html","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.html","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./projects/eav-ui/src/app/edit/shared/controls/ui-control.ts","./projects/eav-ui/src/app/replace-content/replace-content-dialog.config.ts","./projects/eav-ui/src/app/replace-content/replace-content.routing.ts"],"sourcesContent":["\r\nexport class JsonHelpers {\r\n\r\n  /** Tries to parse string as JSON */\r\n  static tryParse(input: string): any {\r\n    try {\r\n      return JSON.parse(input);\r\n    } catch { }\r\n  }\r\n}\r\n","import { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { RxHelpers } from '../../../shared/rxJs/rx.helpers';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\n\r\n\r\nexport class FieldValueHelpers {\r\n  /** Detect if two values are equal, incl. special NaN and Array checks */\r\n  static fieldValuesAreEqual(x: FieldValue, y: FieldValue): boolean {\r\n    if (x === y) return true;\r\n    if (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y)) return true;\r\n    if (Array.isArray(x) && Array.isArray(y) && RxHelpers.arraysEqual(x, y)) return true;\r\n    return false;\r\n  }\r\n\r\n  /** Searches where newValues has values different from oldValues */\r\n  static getItemValuesChanges(oldValues: ItemValuesOfLanguage, newValues: ItemValuesOfLanguage): ItemValuesOfLanguage {\r\n    const changes: ItemValuesOfLanguage = {};\r\n    for (const key of Object.keys(newValues)) {\r\n      const newValue = newValues[key];\r\n      const oldValue = oldValues[key];\r\n      if (FieldValueHelpers.fieldValuesAreEqual(newValue, oldValue))\r\n        continue;\r\n\r\n      changes[key] = newValue;\r\n    }\r\n    return Object.keys(changes).length === 0 ? undefined : changes;\r\n  }\r\n}\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const importContentItemDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_ITEM_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentItemComponent: ImportContentItemComponent } = await import('./import-content-item.component');\r\n    return ImportContentItemComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentItemsDialog: DialogConfig = {\r\n  name: 'CONTENT_ITEMS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentItemsComponent } = await import('./content-items.component');\r\n    return ContentItemsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importContentItemDialog } from './import-content-item/import-content-item-dialog.config';\r\nimport { contentItemsDialog } from './content-items-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const contentItemsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentItemsDialog },\r\n    children: [\r\n      ...GoToMetadata.getRoutes(),\r\n      {\r\n        path: 'export/:contentTypeStaticName',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'export/:contentTypeStaticName/:selectedIds',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'import',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: importContentItemDialog }\r\n      },\r\n      {\r\n        path: ':contentTypeStaticName/import',\r\n        loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n        data: { title: 'Import Items' },\r\n      },\r\n      ...EditRoutes,\r\n    ]\r\n  },\r\n];\r\n\r\n","import { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function loadScripts(scriptObjects: ScriptObject[], callback: () => void, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n  const w = window as Record<string, any>;\r\n\r\n  if (global != null && !!w[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  window.require([scrObj.src], (exportedVar: any) => {\r\n    if (exportedVar && !w[global]) {\r\n      w[global] = exportedVar;\r\n    }\r\n    newCallback();\r\n  });\r\n}\r\n\r\nexport interface ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { License, LicenseDownloadInfo, LicenseUploadInfo } from '../models/license.model';\r\n\r\nconst webAPiLicenseRetrieve = 'sys/license/Retrieve';\r\nconst webApiFeatSaveNew = 'admin/feature/SaveNew';\r\nconst webApiLicSummary = 'sys/license/Summary';\r\nconst webApiUpload = 'sys/license/Upload';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService extends HttpServiceBaseSignal {\r\n\r\n  saveFeatures(featuresStates: FeatureState[]): Observable<null> {\r\n    return this.http.post<null>(this.apiUrl(webApiFeatSaveNew), featuresStates);\r\n  }\r\n\r\n  getLicensesLive(refresh: Signal<unknown>) {\r\n    return httpResource<License[]>(() => {\r\n      refresh();\r\n      return this.apiUrl(webApiLicSummary);\r\n    });\r\n  }\r\n\r\n  uploadLicense(file: File): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<LicenseUploadInfo>(this.apiUrl(webApiUpload), formData)\r\n      .pipe(\r\n        map(info => ({\r\n          Success: info.Success,\r\n          Messages: [{\r\n            MessageType: info.Success ? FileUploadMessageTypes.Success : FileUploadMessageTypes.Error,\r\n            Text: `License ${info.Success ? 'uploaded' : 'upload failed'}: ${info.Message}`,\r\n          }],\r\n        } satisfies FileUploadResult)),\r\n      );\r\n  }\r\n\r\n  retrieveLicensePromise(): Promise<LicenseDownloadInfo> {\r\n    return this.fetchPromise<LicenseDownloadInfo>(webAPiLicenseRetrieve, {\r\n    });\r\n  }\r\n}\r\n","import { Directive, input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appReservedNames]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: ReservedNamesValidatorDirective, multi: true },\r\n  ],\r\n})\r\nexport class ReservedNamesValidatorDirective implements Validator {\r\n  appReservedNames = input<Record<string, string>>({});\r\n\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    if (!control.value) { return null; }\r\n\r\n    const controlValue = (control.value as string).toLocaleLowerCase();\r\n    const reservedName = Object.keys(this.appReservedNames()).find(name => name.toLocaleLowerCase() === controlValue);\r\n    return reservedName ? { reservedNames: this.appReservedNames()[reservedName] } : null;\r\n  }\r\n\r\n  static mergeReserved(reservedNames: Record<string, string>, fields: {StaticName: string }[]) {\r\n    const existingFields: Record<string, string> = {};\r\n    fields.forEach(field => {\r\n      existingFields[field.StaticName] = 'this field already exists';\r\n    });\r\n    return {\r\n      ...reservedNames,\r\n      ...existingFields,\r\n    };\r\n  }\r\n\r\n}\r\n","import { environment } from '../../environments/environment';\r\n\r\n/**\r\n * List of fields to debug across the entire application.\r\n * \r\n * Change as you need, but after debugging, best set it back to [].\r\n */\r\nexport const DebugFields: string[] = !environment.production\r\n  // ? ['StringPicker']\r\n  // ? ['NumberInputAddUntillDevisibleBy5']\r\n  // ? ['WysiwygConfiguration']\r\n  // ? ['Items']\r\n  ? ['ViewController']\r\n  // ? ['Title']\r\n  // ? [] // no fields\r\n  // ? ['*'] // all fields\r\n  : [];\r\n","@if (!lightSpeedEnabled()) {\r\n  <div class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\" (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadgeIcon=\"diamond\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n  </div>\r\n} @else {\r\n  <div\r\n    class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled' }}\"\r\n    matRipple\r\n    [tippy]=\"appHasLightSpeed ? lightSpeed().Title : 'Not yet configured for LightSpeed'\"\r\n  >\r\n    @if (appLightSpeedEnabled) {\r\n      <a class=\"default-link\" [href]=\"'#' + params().lightSpeedLink(lightSpeedOwner())\">\r\n        <mat-icon matBadgeSize=\"small\" matBadgeIcon=\"check\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n      </a>\r\n    } @else {\r\n      <a class=\"default-link\" [href]=\"'#' + params().lightSpeedLink(lightSpeedOwner())\">\r\n        <mat-icon matBadgeSize=\"small\" matBadgeIcon=\"block\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n      </a>\r\n    }\r\n  </div>\r\n}\r\n","import { Component, inject, input } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LightSpeedInfo } from '../../apps-management/models/LightSpeedInfo';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { MatBadgeIconDirective } from '../../shared/directives/mat-badge-icon.directive';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { LightSpeedActionsParams } from './lightspeed-actions.models';\r\n\r\n/**\r\n * LightSpeedActionsComponent\r\n *\r\n * Specially meant to be used inside an AGGrid action, and receive the parameters from it.\r\n *\r\n */\r\n@Component({\r\n    selector: 'app-lightspeed-action',\r\n    templateUrl: './lightspeed-action.component.html',\r\n    imports: [\r\n        TippyDirective,\r\n        MatIconModule,\r\n        MatBadgeIconDirective,\r\n        MatRippleModule,\r\n    ]\r\n})\r\nexport class LightSpeedActionsComponent {\r\n  /** App needed for lightspeed checks */\r\n  lightSpeedOwner = input.required<unknown>();\r\n\r\n  params = input.required<LightSpeedActionsParams>();\r\n\r\n  lightSpeed = input.required<LightSpeedInfo | null>();\r\n\r\n  public features = inject(FeaturesService);\r\n\r\n  constructor() { }\r\n\r\n  protected lightSpeedEnabled = this.features.isEnabled[FeatureNames.LightSpeed]\r\n\r\n  public get appHasLightSpeed(): boolean {\r\n    return this.lightSpeed()?.Id != null;\r\n  }\r\n\r\n  public get appLightSpeedEnabled(): boolean {\r\n    return this.lightSpeed()?.IsEnabled == true;\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params().openLightspeedFeatureInfo();\r\n  }\r\n}\r\n","import { reduce } from './reduce';\nimport { operate } from '../util/lift';\nconst arrReducer = (arr, value) => (arr.push(value), arr);\nexport function toArray() {\n    return operate((source, subscriber) => {\n        reduce(arrReducer, [])(source).subscribe(subscriber);\n    });\n}\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentTypeFieldsDialog: DialogConfig = {\r\n  name: 'CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentTypeFieldsComponent } = await import('./content-type-fields.component');\r\n    return ContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeFieldsDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeFieldsComponent } = await import('./edit-content-type-fields.component');\r\n    return EditContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentTypeFieldsDialog } from './content-type-fields-dialog.config';\r\nimport { editContentTypeFieldsDialog } from './edit-content-type-fields/edit-content-type-fields-dialog.config';\r\n\r\nexport const contentTypeFieldsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentTypeFieldsDialog },\r\n    children: [\r\n      {\r\n        path: 'add/:contentTypeStaticName',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog }\r\n      },\r\n      {\r\n        path: 'update/:contentTypeStaticName/:id/:editMode',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog },\r\n      },\r\n      ...GoToMetadata.getRoutes(),\r\n      GoToPermissions.route,\r\n      ...EditRoutes,\r\n    ]\r\n  }\r\n];\r\n","import { Of } from '../../../../../core';\r\nimport { PermissionsCount } from '../../app-administration/models/permissions-count.model';\r\nimport { Language } from './language.model';\r\n\r\nexport interface DialogContextApp {\r\n  /** Root for app APIs and content/query */\r\n  Api: string;\r\n  Folder: string;\r\n  GettingStartedUrl: string;\r\n  Id: number;\r\n  Identifier: string;\r\n  IsContentApp: boolean;\r\n  IsGlobalApp: boolean;\r\n  IsInherited: boolean;\r\n  IsShared: boolean;\r\n  IsSiteApp: boolean;\r\n  Name: string;\r\n  Permissions: PermissionsCount;\r\n  SettingsScope: Of<typeof AppScopes>;\r\n  Url: string;\r\n  SharedUrl: string;\r\n\r\n  /** New app icon */\r\n  Icon: string;\r\n}\r\n\r\nexport interface ApiKeySpecs {\r\n  NameId: string;\r\n  ApiKey: string;\r\n  IsDemo: boolean;\r\n}\r\n\r\nexport const AppScopes = {\r\n  App: 'App',\r\n  Site: 'Site',\r\n  Global: 'Global',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\n\r\nexport interface DialogContextEnable {\r\n  /** Determines if app admin should show app-permissions (true for Apps, false for Content and Global) */\r\n  AppPermissions?: boolean;\r\n  /** Determines if Code editing should be enabled (true for super-users) */\r\n  CodeEditor?: boolean;\r\n  DebugMode: boolean;\r\n  /** True if saving of formulas should be enabled (for edit-ui) */\r\n  FormulaSave?: boolean;\r\n  /** While debug is enabled, this allows some Edit Ui actions even when they are disabled in fields settings */\r\n  OverrideEditRestrictions?: boolean;\r\n  /** Determines if Queries should be enabled (true for Apps) */\r\n  Query?: boolean;\r\n}\r\n\r\nexport interface DialogContextLanguage {\r\n  Current: string;\r\n  List: Language[];\r\n  Primary: string;\r\n}\r\n\r\nexport interface DialogContextPage {\r\n  Id: number;\r\n}\r\n\r\nexport interface DialogContextSite {\r\n  DefaultApp: DialogContextSiteApp;\r\n  Id: number;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSystem {\r\n  DefaultApp: DialogContextSiteApp;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSiteApp {\r\n  ZoneId: number;\r\n  AppId: number;\r\n}\r\n\r\nexport interface DialogContextUser {\r\n  Email: string;\r\n  Id: number;\r\n  Guid: string;\r\n  IsAnonymous: boolean;\r\n  IsSiteAdmin: boolean;\r\n  IsContentAdmin: boolean;\r\n  IsSystemAdmin: boolean;\r\n  Name: string;\r\n  Username: string;\r\n}\r\n\r\n// export interface DialogContextFeature {\r\n//   NameId: string;\r\n//   Enabled: boolean;\r\n// }\r\n","export const fieldNamePattern = /^[A-Za-z][A-Za-z0-9]+$/;\r\nexport const fieldNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const importAppDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppComponent } = await import('./import-app.component');\r\n    return ImportAppComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importAppDialog } from './import-app-dialog.config';\r\n\r\nexport const importRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: importAppDialog }\r\n  }\r\n];\r\n\r\n","import { UntypedFormGroup } from '@angular/forms';\r\nimport { UiControl } from '../controls/ui-control';\r\n\r\n// prefix for translation keys\r\nconst prefix = 'ValidationMessage.';\r\nconst notValid = 'ValidationMessage.NotValid';\r\n\r\nexport class ValidationMsgHelper {\r\n\r\n  public static messages: Record<string, (long: boolean) => string> = {\r\n    required: (long: boolean) => long ? `${prefix}Required` : `${prefix}RequiredShort` /* short version in snackbar*/,\r\n    min: (long: boolean) => long ? `${prefix}Min` : notValid,\r\n    max: (long: boolean) => long ? `${prefix}Max` : notValid,\r\n    minNoItems: (long: boolean) => long ? `${prefix}MinNoItems` : notValid,\r\n    maxNoItems: (long: boolean) => long ? `${prefix}MaxNoItems` : notValid,\r\n    pattern: (long: boolean) => long ? `${prefix}Pattern` : notValid,\r\n    decimals: (long: boolean) => long ? `${prefix}Decimals` : notValid,\r\n    jsonError: (long: boolean) => long ? `${prefix}JsonError` : notValid,\r\n    formulaError: (long: boolean) => notValid,\r\n  };\r\n\r\n  /** Marks controls as touched to show errors beneath controls and collects error messages */\r\n  static validateForm(form: UntypedFormGroup): Record<string, string> {\r\n    const errors: Record<string, string> = {};\r\n    for (const [controlKey, control] of Object.entries(form.controls)) {\r\n      UiControl.markTouched(control);\r\n\r\n      if (!control.invalid) continue;\r\n\r\n      for (const errorKey of Object.keys(control.errors)) {\r\n        errors[controlKey] = this.messages[errorKey]?.(false);\r\n        if (errors[controlKey]) break;\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Of } from '../../../../../core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { AnalyzeParts, SettingsStackItem } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\n\r\n@Injectable()\r\nexport class AnalyzeSettingsService extends HttpServiceBaseSignal {\r\n\r\n  getStack(part: Of<typeof AnalyzeParts>, key?: string, view?: string) {\r\n    return this.newHttpResource<SettingsStackItem[]>(() => ({\r\n      url: this.apiUrl(webApiAppRoot + 'GetStack'),\r\n      params: {\r\n        appId: this.appId,\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }));\r\n  }\r\n}\r\n","import { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\n\r\nexport class AppAdminHelpers {\r\n  public static getLightSpeedEditParams(appId: number) {\r\n    const form: EditForm = {\r\n      items: [\r\n        EditPrep.newMetadata(appId, eavConstants.appMetadata.LightSpeed.ContentTypeName, eavConstants.metadata.app, true),\r\n      ],\r\n    };\r\n    return form;\r\n  }\r\n}\r\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { ReplaceConfig } from '../../replace-content/replace-config.model';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\nconst webApiContentGroupReplace = webApiContentGroup + 'replace';\r\nconst webApiContentGroupItemlist = webApiContentGroup + 'itemlist';\r\nconst webApiContentGroupHeader = webApiContentGroup + 'header';\r\nconst removeItem = 'cms/list/delete';\r\n\r\n@Injectable()\r\nexport class ContentGroupService extends HttpServiceBaseSignal {\r\n\r\n  getItemsPromise(item: ContentGroup): Promise<ReplaceConfig> {\r\n    return this.fetchPromise<ReplaceConfig>(webApiContentGroupReplace, {\r\n      params: { appId: this.appId, guid: item.guid, part: item.part, index: item.index.toString() }\r\n    });\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post<null>(this.apiUrl(webApiContentGroupReplace), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    });\r\n  }\r\n\r\n  removeItem(contentGroup: ContentGroup, index: number) {\r\n    // note: the server checks if the part == 'content' and will automatically treat it as a pair with presentation\r\n    return this.http.delete<null>(this.apiUrl(removeItem), {\r\n      params: { index: index, parent: contentGroup.guid, fields: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getListPromise(contentGroup: ContentGroup): Promise<GroupHeader[]> {\r\n    return this.fetchPromise<GroupHeader[]>(webApiContentGroupItemlist, {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiContentGroupItemlist), resortedList, {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getAllLive(contentGroup: ContentGroup, refresh: Signal<unknown>) {\r\n    return httpResource<GroupHeader>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiContentGroupHeader),\r\n        params: { appId: this.appId, guid: contentGroup.guid }\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { SiteLanguage, SiteLanguagePermissions } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\n\r\nconst webApiZoneRootGetLanguages = 'admin/zone/GetLanguages';\r\nconst webApiZoneRootSwitchLanguage = 'admin/zone/SwitchLanguage';\r\nconst webApiZoneRootGetSystemInfo = 'admin/zone/GetSystemInfo';\r\nconst webApiAppRootLanguages = 'admin/app/languages';\r\n\r\n@Injectable()\r\nexport class ZoneService extends HttpServiceBaseSignal {\r\n\r\n  getLanguageLive(refresh: Signal<unknown>) {\r\n    return httpResource<SiteLanguage[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiZoneRootGetLanguages),\r\n        params: { appId: this.appId }\r\n      });\r\n    });\r\n  }\r\n\r\n  async toggleLanguage(code: string, enable: boolean): Promise<number> {\r\n    return this.getStatusPromise(webApiZoneRootSwitchLanguage, {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  getSystemInfoLive(refresh: Signal<unknown>) {\r\n    return httpResource<SystemInfoSet>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiZoneRootGetSystemInfo),\r\n      });\r\n    });\r\n  }\r\n\r\n  getLanguagesPermissionsLive(refresh: Signal<unknown>) {\r\n    return httpResource<SiteLanguagePermissions[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiAppRootLanguages),\r\n        params: { appId: this.appId }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { EnvironmentSpecs } from '@2sic.com/2sxc-typings';\r\nimport { DialogContextApp } from '../models/dialog-context.models';\r\nimport { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n/**\r\n * This ensures that $2sxc is fully initialized with parameters which are provided later on\r\n * The appApi is being added in v12\r\n * It's important because in Oqtane the app-api root is different in from the normal admin-apis\r\n */\r\nexport function Update$2sxcEnvFromContext(appContext: DialogContextApp): void {\r\n  try {\r\n    const includedApiRoot = appContext?.Api;\r\n    if (!includedApiRoot)\r\n      return;\r\n\r\n    const old2sxcHeader = (window.$2sxc.env as any).header as EnvironmentSpecs;\r\n    const new2sxcHeader = { ...old2sxcHeader, appApi: includedApiRoot } as EnvironmentSpecs;\r\n    window.$2sxc.env.load(new2sxcHeader);\r\n  } catch { /* ignore */ }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyExtras, keyIsShared, keyItems, keyModuleId, keyPartOfPage, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { EditPrep, ViewOrFileIdentifier } from '../models/edit-form.model';\r\nimport { Context } from '../services/context';\r\nimport { ExtrasParam } from './dialog-url-params.model';\r\n\r\n/**\r\n * Service to open dialogs in a new window.\r\n */\r\n@Injectable()\r\nexport class DialogInNewWindowService {\r\n\r\n  protected context = inject(Context);\r\n\r\n  openCodeFile(path: string, isShared: boolean, templateId?: number) {\r\n    const form = {\r\n      items: [{\r\n        Path: path,\r\n        ...(templateId != null && EditPrep.editId(templateId)),\r\n      }] as ViewOrFileIdentifier[]\r\n    };\r\n\r\n    const hashParams: Record<string, string> = {\r\n      ...this.#buildHashParam(keyDialog, DialogTypeConstants.Develop),\r\n      ...this.#buildHashParam(keyIsShared, isShared.toString()),\r\n      ...this.#buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.#buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppAdministration(zoneId: number, appId: number, tab?: string, scope?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n      ...(scope && { scope }),\r\n    };\r\n    const hashParams: Record<string, string> = {\r\n      ...this.#buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.#buildHashParam(keyAppId, appId.toString()),\r\n      ...this.#buildHashParam(keyDialog, DialogTypeConstants.App),\r\n      ...(Object.keys(extras).length ? this.#buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.#buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  #buildSharedHashParams() {\r\n    const hashParams: Record<string, string> = {\r\n      ...this.#buildHashParam(keyZoneId, this.context.zoneId),\r\n      ...this.#buildHashParam(keyAppId, this.context.appId),\r\n      ...this.#buildHashParam(keyModuleId, this.context.moduleId?.toString()),\r\n      ...this.#buildHashParam(keyContentBlockId, this.context.contentBlockId?.toString()),\r\n      ...this.#buildHashParam(keyPartOfPage),\r\n      ...(sessionStorage.getItem(keyDebug) ? this.#buildHashParam(keyDebug) : {}),\r\n    };\r\n    return hashParams;\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  #buildHashParam(key: string, value?: number | string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = value ?? sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam: Record<string, string> = { [rawKey]: rawValue };\r\n    return hashParam;\r\n  }\r\n\r\n  /** Builds the full (ugly) url with all the hash parameters */\r\n  #buildFullUrl(hashParams: Record<string, string>) {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    const allHashParams: Record<string, string> = {\r\n      ...this.#buildSharedHashParams(),\r\n      ...hashParams,\r\n    };\r\n    const hashUrl = Object.entries(allHashParams).reduce((acc, [key, value]) => `${acc}&${key}=${value}`, '').replace('&', '#');\r\n    return newHref + hashUrl;\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nexport abstract class AgActionsAlwaysRefresh implements ICellRendererAngularComp {\r\n  abstract agInit(params: any): void;\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { Component, input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-help-text',\r\n  imports: [],\r\n  templateUrl: './rest-api-help-text.component.html',\r\n  styleUrl: './rest-api-help-text.component.scss'\r\n})\r\nexport class RestApiHelpTextComponent {\r\n\r\n  apiTitle = input.required<string>();\r\n\r\n}\r\n","<div class=\"rest-helper-container\">\r\n  <span class=\"help-info-card-text\">\r\n    <span><strong> Select your Rest Api for {{apiTitle()}} </strong></span>\r\n    <br />\r\n    <span>\r\n      REST APIs in 2sxc allow you to connect your app with other systems or frontend code.<br />\r\n      You can create custom endpoints to send and receive data, automate processes, or expose business logic for your website and external\r\n      applications.\r\n    </span>\r\n  </span>\r\n</div>\r\n","import { httpResource } from '@angular/common/http';\r\nimport { Injectable, Signal } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpServiceBaseSignal } from '../../shared/services/http-service-base-signal';\r\nimport { App, PendingApp } from '../models/app.model';\r\n\r\nconst webApiAppRootList = 'admin/app/list';\r\nconst webApiAppRootInheritableApps = 'admin/app/InheritableApps';\r\nconst webApiAppRootPendingApps = 'admin/app/GetPendingApps';\r\nconst webApiAppRootApp = 'admin/app/app';\r\nconst webApiAppRootInstallPendingApps = 'admin/app/InstallPendingApps';\r\nconst webApiAppRootFlushcache = 'admin/app/flushcache';\r\n\r\n@Injectable()\r\nexport class AppsListService extends HttpServiceBaseSignal {\r\n\r\n  // clean way to create a new resource every time if refresh change\r\n  getAllLive(refresh: Signal<unknown>) {\r\n    return httpResource<App[]>(() => {\r\n      refresh();\r\n      return ({\r\n        url: this.apiUrl(webApiAppRootList),\r\n        params: { zoneId: this.zoneId }\r\n      });\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return httpResource<App[]>(() => ({\r\n      url: this.apiUrl(webApiAppRootInheritableApps),\r\n      params: { zoneId: this.zoneId }\r\n    }));\r\n  }\r\n\r\n  getPendingApps() {\r\n    return httpResource<PendingApp[]>(() => ({\r\n      url: this.apiUrl(webApiAppRootPendingApps),\r\n      params: { zoneId: this.zoneId },\r\n    }));\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootApp), {}, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  createTemplate(url: string, newName: string) {\r\n    const encodedName = encodeURIComponent(newName);\r\n    return <Observable<any>>this.http.post(`sys/install/RemotePackage?packageUrl=${url}&newName=${encodedName}`, {});\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootInstallPendingApps), pendingApps, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRootApp), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  async flushCache(appId: number): Promise<number> {\r\n    return this.getStatusPromise(webApiAppRootFlushcache, {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { JsonHelpers } from '../../../../shared/helpers/json.helpers';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\n\r\n@Component({\r\n    selector: 'app-analyze-settings-value',\r\n    templateUrl: './analyze-settings-value.component.html',\r\n    styleUrls: ['./analyze-settings-value.component.scss'],\r\n    imports: [\r\n        MatRippleModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AnalyzeSettingsValueComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n\r\n  constructor() { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n  \r\n  copy(value: string) {\r\n    value = JsonHelpers.tryParse(value) ?? value;\r\n    this.clipboard.copyToClipboard(value);\r\n  }\r\n}\r\n","<div matRipple class=\"value-box highlight\" [tippy]=\"value\" (click)=\"copy(value)\">\r\n  <span class=\"value\">{{ value }}</span>\r\n</div>\r\n","import { ChangeDetectorRef, Component, Injector, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/routing/edit-routing.service';\r\nimport { classLog } from '../../logging';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  imports: [],\r\n  providers: [\r\n    Context, // this is used in the dialog to get the correct App\r\n  ]\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n\r\n  log = classLog({ DialogEntryComponent });\r\n\r\n  #dialogData: Record<string, any>;\r\n  #dialog: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private injector: Injector,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.#dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const l = this.log.fn('ngOnInit');\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null)\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n\r\n    l.a('Open dialog: ' + dialogConfig.name, { id: this.context.id, context: this.context });\r\n\r\n    dialogConfig.getComponent(this.injector).then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      const dialog = (this.matDialog as any);\r\n      if (dialog._dialogAnimatingOpen && dialog._lastDialogRef)\r\n        (dialog._lastDialogRef as MatDialogRef<any>).afterOpened()\r\n          .subscribe(() => this.openDialogComponent(dialogConfig, component));\r\n      else\r\n        this.openDialogComponent(dialogConfig, component);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#dialog.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    this.log.a(`Open dialog(initContext: ${dialogConfig.initContext})`, { name: dialogConfig.name, 'Contextid:': this.context.log.svcId, 'Context:': this.context });\r\n    if (dialogConfig.initContext)\r\n      this.context.init(this.route);\r\n\r\n    this.#dialog = this.matDialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.#dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.#dialog.afterClosed().subscribe((data: any) => {\r\n      this.log.a('Dialog was closed - name:' + dialogConfig.name, { data });\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0)\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      else\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { FieldValueHelpers } from '../helpers/field-value.helpers';\r\nimport { ValidationMsgHelper } from '../validation/validation-messages.helpers';\r\nimport { AbstractControlPro } from '../validation/validation.helpers';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  constructor: false,\r\n  markTouched: false,\r\n  set: false,\r\n  disable: false,\r\n  getErrors: true,\r\n  fields: [...DebugFields, '*'],\r\n};\r\n\r\nconst pfx = 'ValidationMessage.';\r\n\r\n/**\r\n * Provides information about the UI Control, but NOT the value.\r\n * It is used to simplify the logic when interacting with the Angular Virtual Form.\r\n */\r\nexport class UiControl {\r\n\r\n  log = classLog({UiControl}, logSpecs);\r\n\r\n  constructor(\r\n    public control: AbstractControl,\r\n    private name = 'unknown',\r\n    private moreDisabled: boolean = false,\r\n  ) {\r\n    // Patch control with dummy object for the nullable case where we're just creating a fake control...\r\n    this.control ??= { dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl;\r\n    this.log.extendName(`[${name}]`);\r\n    this.log.aIfInList('fields', this.name, { moreDisabled }, 'constructor');\r\n  }\r\n\r\n  static emptyControl() {\r\n    return new UiControl({ dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl);\r\n  }\r\n\r\n  //#region simple direct properties & complex properties\r\n  get dirty() { return this.control.dirty; }\r\n  get invalid() { return this.control.invalid; }\r\n  get touched() { return this.control.touched; }\r\n  get disabled() { return this.control.disabled || this.moreDisabled; }\r\n  get touchedAndInvalid() { return this.control.touched && this.control.invalid; }\r\n  //#endregion\r\n\r\n  //#region methods\r\n\r\n  markTouched(): void {\r\n    this.log.aIfInList('fields', this.name, null, 'markTouched');\r\n    UiControl.markTouched(this.control);\r\n  }\r\n\r\n  setIfChanged(newValue: FieldValue): void {\r\n    const before = this.control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'setIfChanged');\r\n    if (isEqual(newValue, this.control.value)) return;\r\n    this.#set(newValue);\r\n  }\r\n\r\n  /** Use to update form controls value */\r\n  #set(newValue: FieldValue): void {\r\n    const control = this.control;\r\n    const before = control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'set');\r\n\r\n    if (!control.touched)\r\n      control.markAsTouched();\r\n\r\n    if (!control.dirty && !FieldValueHelpers.fieldValuesAreEqual(before, newValue))\r\n      control.markAsDirty();\r\n\r\n    // Note: 2024-10-21 ca. 18.02 we have some timing issues, error always seems to show previous error; maybe fixed now, otherwise revisit\r\n    // Set value must happen at the end, otherwise errors will be late by one cycle\r\n    // for example, they could show \"required\" after the value was\r\n    control.patchValue(newValue);\r\n  }\r\n\r\n  disable(disable: boolean): void {\r\n    this.log.aIfInList('fields', this.name, null, `disable: ${disable}`);\r\n    UiControl.disable(this.control, disable);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region private helpers\r\n\r\n  /** TODO: Try to remove this by assigning controls [formControlName] in [formGroup] */\r\n  static markTouched(control: AbstractControl): void {\r\n    if (control.touched)\r\n      return;\r\n\r\n    control.markAsTouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  /** Disables/enables control if not already disabled/enabled. Use this helper to trigger fewer events on the form */\r\n  static disable(control: AbstractControl, disable: boolean) {\r\n    if (control.disabled === disable)\r\n      return;\r\n\r\n    if (disable)\r\n      control.disable();\r\n    else\r\n      control.enable();\r\n  }\r\n  //#endregion\r\n\r\n  /** Calculates error message */\r\n  getErrors(): string {\r\n    const control = this.control;\r\n    const errors = control.errors;\r\n    const l = this.log.fnIfInList('getErrors', 'fields', this.name, { control, name: this.name });\r\n    if (!control.invalid)\r\n      return l.r('', 'valid');\r\n    if (!control.dirty && !control.touched)\r\n      return l.r('', 'not dirty or touched');\r\n\r\n    for (const errorKey of Object.keys(errors)) {\r\n      const error = (errorKey === 'formulaError')\r\n        ? control.errors['formulaMessage'] ?? ValidationMsgHelper.messages[errorKey]?.(true)\r\n        : ValidationMsgHelper.messages[errorKey]?.(true);\r\n      if (error)\r\n        return l.r(error, 'error found');\r\n    }\r\n\r\n    return l.r('', 'no error');\r\n  }\r\n\r\n  #warningMessages: Record<string, string> = {\r\n    jsonWarning: `${pfx}JsonWarning`,\r\n    formulaWarning: `${pfx}NotValid`,\r\n  };\r\n\r\n  getWarnings(): string {\r\n    const control = this.control as AbstractControlPro;\r\n    if (control._warning == null)\r\n      return '';\r\n    if (!control.dirty && !control.touched)\r\n      return '';\r\n\r\n    let warning = '';\r\n    for (const warningKey of Object.keys(control._warning)) {\r\n      warning = (warningKey === 'formulaWarning')\r\n        ? control._warning['formulaMessage'] ?? this.#warningMessages[warningKey]\r\n        : this.#warningMessages[warningKey];\r\n      if (warning)\r\n        break;\r\n    }\r\n    return warning;\r\n  }\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const replaceContentDialog: DialogConfig = {\r\n  name: 'REPLACE_CONTENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ReplaceContentComponent } = await import('./replace-content.component');\r\n    return ReplaceContentComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { replaceContentDialog } from './replace-content-dialog.config';\r\nimport { EditRoutesNoHistory } from '../edit/edit.routing';\r\n\r\nexport const replaceContentRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: replaceContentDialog },\r\n    children: [\r\n      // Note 2024-07-01 2dm - not sure why it is configured without history, but to be safe I'll keep it for now\r\n      ...EditRoutesNoHistory\r\n    ],\r\n  },\r\n];\r\n"],"x_google_ignoreList":[11]}