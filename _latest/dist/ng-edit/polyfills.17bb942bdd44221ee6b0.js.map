{"version":3,"sources":["C:/Projects/2sxc/LTS-11.22/eav-item-dialog-angular/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","C:/Projects/2sxc/LTS-11.22/eav-item-dialog-angular/node_modules/zone.js/fesm2015/zone.js","C:/Projects/2sxc/LTS-11.22/eav-item-dialog-angular/node_modules/@babel/runtime/helpers/classCallCheck.js","C:/Projects/2sxc/LTS-11.22/eav-item-dialog-angular/node_modules/@babel/runtime/helpers/createClass.js","./src/polyfills.ts","C:/Projects/2sxc/LTS-11.22/eav-item-dialog-angular/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","C:/Projects/2sxc/LTS-11.22/eav-item-dialog-angular/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"names":["unsupportedIterableToArray","module","exports","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","define","global","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Error","Zone","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","key","zone","getZoneWith","current","hasOwnProperty","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","_currentZoneFrame","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","_currentTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","patches","fn","perfName","_api","nativeMicroTaskQueuePromise","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","isEmpty","counts","prev","change","options","_state","self","useG","call","toState","fromState1","fromState2","handleId","toString","Object","prototype","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","result","listener","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","rejection","console","stack","uncaughtPromiseError","shift","handler","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handleUnhandledRejection","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","wasCalled","onceWrapper","wrappedFunction","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","executor","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","C","species","onFinally","toStringTag","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","resultPromise","ctor","Promise","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","nativePrependEventListener","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventName","symbolEventNames","existingTasks","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","isIE","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","clear","blockingMethods","patchEvent","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","sendNative","url","aborted","placeholderCallback","XHR_ERROR_BEFORE_SCHEDULED","abortNative","XHR_TASK","XHR_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","patchXHR","geolocation","fnNames","patchPrototype","findPromiseRejectionHandler","PromiseRejectionEvent","evt","Constructor","_defineProperties","props","protoProps","staticProps","arr","len","arr2","arrayLikeToArray","minLen","from","test"],"mappings":"sHAAA,IAAIA,EAA6B,EAAQ,QA2DzCC,EAAOC,QAzDP,SAAoCC,EAAGC,GACrC,IAAIC,EAEJ,GAAsB,oBAAXC,QAAgD,MAAtBH,EAAEG,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQN,KAAOE,EAAKL,EAA2BG,KAAOC,GAAkBD,GAAyB,iBAAbA,EAAEO,OAAqB,CAC/GL,IAAIF,EAAIE,GACZ,IAAIM,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKR,EAAEO,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNC,MAAOb,EAAEQ,OAGbM,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGP,GAIP,MAAM,IAAIQ,UAAU,yIAGtB,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLV,EAAG,WACDR,EAAKF,EAAEG,OAAOC,aAEhBO,EAAG,WACD,IAAIU,EAAOnB,EAAGoB,OAEd,OADAH,EAAmBE,EAAKT,KACjBS,GAETP,EAAG,SAAWS,GACZH,GAAS,EACTF,EAAMK,GAERP,EAAG,WACD,IACOG,GAAoC,MAAhBjB,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIkB,EAAQ,MAAMF,O,sEC/C6B,0BAANM,EAE9C,WAAc,cASG,SAAUC,GACtB,IAAMC,EAAcD,EAAM,YAC1B,SAASE,EAAKC,GACVF,GAAeA,EAAW,MAAYA,EAAW,KAASE,GAE9D,SAASC,EAAmBD,EAAME,GAC9BJ,GAAeA,EAAW,SAAeA,EAAW,QAAYE,EAAME,GAE1EH,EAAK,QAIL,IAAMI,EAAeN,EAAM,sBAA4B,kBACvD,SAASO,EAAWJ,GAChB,OAAOG,EAAeH,EAE1B,IAAMK,GAAmE,IAAlDR,EAAOO,EAAW,4BACzC,GAAIP,EAAM,KAAU,CAUhB,GAAIQ,GAAuD,mBAA9BR,EAAM,KAASO,WACxC,MAAM,IAAIE,MAAM,wBAGhB,OAAOT,EAAM,KA/BS,IAkCxBU,EAlCwB,WAmC1B,WAAYC,EAAQC,GAAU,UAC1BC,KAAKC,QAAUH,EACfE,KAAKE,MAAQH,EAAWA,EAAST,MAAQ,UAAY,SACrDU,KAAKG,YAAcJ,GAAYA,EAASK,YAAc,GACtDJ,KAAKK,cACD,IAAIC,EAAaN,KAAMA,KAAKC,SAAWD,KAAKC,QAAQI,cAAeN,GAxCjD,sCAoFtBQ,GACA,IAAMC,EAAOR,KAAKS,YAAYF,GAC9B,GAAIC,EACA,OAAOA,EAAKL,YAAYI,KAvFN,kCAyFdA,GAER,IADA,IAAIG,EAAUV,KACPU,GAAS,CACZ,GAAIA,EAAQP,YAAYQ,eAAeJ,GACnC,OAAOG,EAEXA,EAAUA,EAAQT,QAEtB,OAAO,OAjGe,2BAmGrBF,GACD,IAAKA,EACD,MAAM,IAAIH,MAAM,sBACpB,OAAOI,KAAKK,cAAcO,KAAKZ,KAAMD,KAtGf,2BAwGrBc,EAAUC,GACX,GAAwB,mBAAbD,EACP,MAAM,IAAIjB,MAAM,2BAA6BiB,GAEjD,IAAME,EAAYf,KAAKK,cAAcW,UAAUhB,KAAMa,EAAUC,GACzDN,EAAOR,KACb,OAAO,WACH,OAAOQ,EAAKS,WAAWF,EAAWf,KAAMkB,UAAWJ,MA/GjC,0BAkHtBD,EAAUM,EAAWC,EAAWN,GAChCO,EAAoB,CAAEvB,OAAQuB,EAAmBb,KAAMR,MACvD,IACI,OAAOA,KAAKK,cAAciB,OAAOtB,KAAMa,EAAUM,EAAWC,EAAWN,GAD3E,QAIIO,EAAoBA,EAAkBvB,UAxHpB,iCA2Hfe,GAA+C,IAArCM,EAAqC,uDAAzB,KAAMC,EAAmB,uCAARN,EAAQ,uCACtDO,EAAoB,CAAEvB,OAAQuB,EAAmBb,KAAMR,MACvD,IACI,IACI,OAAOA,KAAKK,cAAciB,OAAOtB,KAAMa,EAAUM,EAAWC,EAAWN,GAE3E,MAAOS,GACH,GAAIvB,KAAKK,cAAcmB,YAAYxB,KAAMuB,GACrC,MAAMA,GANlB,QAWIF,EAAoBA,EAAkBvB,UAxIpB,8BA2IlB2B,EAAMN,EAAWC,GACrB,GAAIK,EAAKjB,MAAQR,KACb,MAAM,IAAIJ,MAAM,+DACX6B,EAAKjB,MAAQkB,GAASpC,KAAO,gBAAkBU,KAAKV,KAAO,KAKpE,GAAImC,EAAKE,QAAUC,GAAiBH,EAAKI,OAASC,GAAaL,EAAKI,OAASE,EAA7E,CAGA,IAAMC,EAAeP,EAAKE,OAASM,EACnCD,GAAgBP,EAAKS,cAAcD,EAASE,GAC5CV,EAAKW,WACL,IAAMC,EAAeC,EACrBA,EAAeb,EACfJ,EAAoB,CAAEvB,OAAQuB,EAAmBb,KAAMR,MACvD,IACQyB,EAAKI,MAAQE,GAAaN,EAAKc,OAASd,EAAKc,KAAKC,aAClDf,EAAKgB,cAAWC,GAEpB,IACI,OAAO1C,KAAKK,cAAcsC,WAAW3C,KAAMyB,EAAMN,EAAWC,GAEhE,MAAOG,GACH,GAAIvB,KAAKK,cAAcmB,YAAYxB,KAAMuB,GACrC,MAAMA,GATlB,QAgBQE,EAAKE,QAAUC,GAAgBH,EAAKE,QAAUiB,IAC1CnB,EAAKI,MAAQC,GAAcL,EAAKc,MAAQd,EAAKc,KAAKC,WAClDR,GAAgBP,EAAKS,cAAcC,EAAWF,IAG9CR,EAAKW,SAAW,EAChBpC,KAAK6C,iBAAiBpB,GAAO,GAC7BO,GACIP,EAAKS,cAAcN,EAAcK,EAASL,KAGtDP,EAAoBA,EAAkBvB,OACtCwC,EAAeD,MAxLG,mCA2LbZ,GACT,GAAIA,EAAKjB,MAAQiB,EAAKjB,OAASR,KAI3B,IADA,IAAI8C,EAAU9C,KACP8C,GAAS,CACZ,GAAIA,IAAYrB,EAAKjB,KACjB,MAAMZ,MAAM,8BAAD,OAA+BI,KAAKV,KAApC,sDAAsFmC,EAAKjB,KAAKlB,OAE/GwD,EAAUA,EAAQhD,OAG1B2B,EAAKS,cAAca,EAAYnB,GAC/B,IAAMoB,EAAgB,GACtBvB,EAAKwB,eAAiBD,EACtBvB,EAAKyB,MAAQlD,KACb,IACIyB,EAAOzB,KAAKK,cAAc8C,aAAanD,KAAMyB,GAEjD,MAAO7C,GAMH,MAHA6C,EAAKS,cAAcU,EAASG,EAAYnB,GAExC5B,KAAKK,cAAcmB,YAAYxB,KAAMpB,GAC/BA,EASV,OAPI6C,EAAKwB,iBAAmBD,GAExBhD,KAAK6C,iBAAiBpB,EAAM,GAE5BA,EAAKE,OAASoB,GACdtB,EAAKS,cAAcC,EAAWY,GAE3BtB,IA7Ne,wCA+NRX,EAAQD,EAAU0B,EAAMa,GACtC,OAAOpD,KAAKmD,aAAa,IAAIE,EAASC,EAAWxC,EAAQD,EAAU0B,EAAMa,OAAgBV,MAhOnE,wCAkOR5B,EAAQD,EAAU0B,EAAMa,EAAgBG,GACtD,OAAOvD,KAAKmD,aAAa,IAAIE,EAAStB,EAAWjB,EAAQD,EAAU0B,EAAMa,EAAgBG,MAnOnE,wCAqORzC,EAAQD,EAAU0B,EAAMa,EAAgBG,GACtD,OAAOvD,KAAKmD,aAAa,IAAIE,EAASvB,EAAWhB,EAAQD,EAAU0B,EAAMa,EAAgBG,MAtOnE,iCAwOf9B,GACP,GAAIA,EAAKjB,MAAQR,KACb,MAAM,IAAIJ,MAAM,qEACX6B,EAAKjB,MAAQkB,GAASpC,KAAO,gBAAkBU,KAAKV,KAAO,KACpEmC,EAAKS,cAAcsB,EAAWrB,EAAWF,GACzC,IACIjC,KAAKK,cAAcoD,WAAWzD,KAAMyB,GAExC,MAAO7C,GAIH,MAFA6C,EAAKS,cAAcU,EAASY,GAC5BxD,KAAKK,cAAcmB,YAAYxB,KAAMpB,GAC/BA,EAKV,OAHAoB,KAAK6C,iBAAiBpB,GAAO,GAC7BA,EAAKS,cAAcN,EAAc4B,GACjC/B,EAAKW,SAAW,EACTX,IAzPe,uCA2PTA,EAAMiC,GACnB,IAAMV,EAAgBvB,EAAKwB,gBACb,GAAVS,IACAjC,EAAKwB,eAAiB,MAE1B,IAAK,IAAI/E,EAAI,EAAGA,EAAI8E,EAAc/E,OAAQC,IACtC8E,EAAc9E,GAAG2E,iBAAiBpB,EAAKI,KAAM6B,KAjQ3B,6BA+EtB,OAAO1D,KAAKC,UA/EU,2BAkFtB,OAAOD,KAAKE,SAlFU,2CA2CtB,GAAIf,EAAM,UAAgBwE,EAAO,iBAC7B,MAAM,IAAI/D,MAAM,mSA5CE,mCAiENN,EAAMsE,GACtB,GAAID,EAAQhD,eAAerB,IACvB,GAAIK,EACA,MAAMC,MAAM,yBAA2BN,QAG1C,IAAKH,EAAO,kBAAoBG,GAAO,CACxC,IAAMuE,EAAW,QAAUvE,EAC3BD,EAAKwE,GACLF,EAAQrE,GAAQsE,EAAGzE,EAAQU,EAAMiE,GACjCvE,EAAmBsE,EAAUA,MA3EX,2BAqDtB,IADA,IAAIrD,EAAOX,EAAKa,QACTF,EAAKV,QACRU,EAAOA,EAAKV,OAEhB,OAAOU,IAxDe,8BA2DtB,OAAOa,EAAkBb,OA3DH,kCA8DtB,OAAO8B,MA9De,KAsQ9BzC,EAAKH,WAAaA,EAClB,IA2QIqE,EA3QEC,EAAc,CAChB1E,KAAM,GACN2E,UAAW,SAACC,EAAUC,EAAGC,EAAQC,GAAtB,OAAuCH,EAASI,QAAQF,EAAQC,IAC3EE,eAAgB,SAACL,EAAUC,EAAGC,EAAQ3C,GAAtB,OAA+ByC,EAASf,aAAaiB,EAAQ3C,IAC7E+C,aAAc,SAACN,EAAUC,EAAGC,EAAQ3C,EAAMN,EAAWC,GAAvC,OAAqD8C,EAASvB,WAAWyB,EAAQ3C,EAAMN,EAAWC,IAChHqD,aAAc,SAACP,EAAUC,EAAGC,EAAQ3C,GAAtB,OAA+ByC,EAAST,WAAWW,EAAQ3C,KAEvEnB,EA9QwB,WA+Q1B,WAAYE,EAAMkE,EAAgB3E,GAAU,UACxCC,KAAK2E,YAAc,CAAE,UAAa,EAAG,UAAa,EAAG,UAAa,GAClE3E,KAAKQ,KAAOA,EACZR,KAAK4E,gBAAkBF,EACvB1E,KAAK6E,QAAU9E,IAAaA,GAAYA,EAAS+E,OAAS/E,EAAW2E,EAAeG,SACpF7E,KAAK+E,UAAYhF,IAAaA,EAAS+E,OAASJ,EAAiBA,EAAeK,WAChF/E,KAAKgF,cACDjF,IAAaA,EAAS+E,OAAS9E,KAAKQ,KAAOkE,EAAeM,eAC9DhF,KAAKiF,aACDlF,IAAaA,EAASmF,YAAcnF,EAAW2E,EAAeO,cAClEjF,KAAKmF,eACDpF,IAAaA,EAASmF,YAAcR,EAAiBA,EAAeS,gBACxEnF,KAAKoF,mBACDrF,IAAaA,EAASmF,YAAclF,KAAKQ,KAAOkE,EAAeU,oBACnEpF,KAAKqF,UAAYtF,IAAaA,EAASuF,SAAWvF,EAAW2E,EAAeW,WAC5ErF,KAAKuF,YACDxF,IAAaA,EAASuF,SAAWZ,EAAiBA,EAAea,aACrEvF,KAAKwF,gBACDzF,IAAaA,EAASuF,SAAWtF,KAAKQ,KAAOkE,EAAec,iBAChExF,KAAKyF,eACD1F,IAAaA,EAAS2F,cAAgB3F,EAAW2E,EAAee,gBACpEzF,KAAK2F,iBACD5F,IAAaA,EAAS2F,cAAgBhB,EAAiBA,EAAeiB,kBAC1E3F,KAAK4F,qBACD7F,IAAaA,EAAS2F,cAAgB1F,KAAKQ,KAAOkE,EAAekB,sBACrE5F,KAAK6F,gBACD9F,IAAaA,EAASwE,eAAiBxE,EAAW2E,EAAemB,iBACrE7F,KAAK8F,kBAAoB/F,IACpBA,EAASwE,eAAiBG,EAAiBA,EAAeoB,mBAC/D9F,KAAK+F,sBACDhG,IAAaA,EAASwE,eAAiBvE,KAAKQ,KAAOkE,EAAeqB,uBACtE/F,KAAKgG,cACDjG,IAAaA,EAASyE,aAAezE,EAAW2E,EAAesB,eACnEhG,KAAKiG,gBACDlG,IAAaA,EAASyE,aAAeE,EAAiBA,EAAeuB,iBACzEjG,KAAKkG,oBACDnG,IAAaA,EAASyE,aAAexE,KAAKQ,KAAOkE,EAAewB,qBACpElG,KAAKmG,cACDpG,IAAaA,EAAS0E,aAAe1E,EAAW2E,EAAeyB,eACnEnG,KAAKoG,gBACDrG,IAAaA,EAAS0E,aAAeC,EAAiBA,EAAe0B,iBACzEpG,KAAKqG,oBACDtG,IAAaA,EAAS0E,aAAezE,KAAKQ,KAAOkE,EAAe2B,qBACpErG,KAAKsG,WAAa,KAClBtG,KAAKuG,aAAe,KACpBvG,KAAKwG,kBAAoB,KACzBxG,KAAKyG,iBAAmB,KACxB,IAAMC,EAAkB3G,GAAYA,EAASkE,WAEzCyC,GADkBhC,GAAkBA,EAAe4B,cAInDtG,KAAKsG,WAAaI,EAAkB3G,EAAWiE,EAC/ChE,KAAKuG,aAAe7B,EACpB1E,KAAKwG,kBAAoBxG,KACzBA,KAAKyG,iBAAmBjG,EACnBT,EAASwE,iBACVvE,KAAK6F,gBAAkB7B,EACvBhE,KAAK8F,kBAAoBpB,EACzB1E,KAAK+F,sBAAwB/F,KAAKQ,MAEjCT,EAASyE,eACVxE,KAAKgG,cAAgBhC,EACrBhE,KAAKiG,gBAAkBvB,EACvB1E,KAAKkG,oBAAsBlG,KAAKQ,MAE/BT,EAAS0E,eACVzE,KAAKmG,cAAgBnC,EACrBhE,KAAKoG,gBAAkB1B,EACvB1E,KAAKqG,oBAAsBrG,KAAKQ,OApVlB,uCAwVrBmG,EAAY5G,GACb,OAAOC,KAAK6E,QAAU7E,KAAK6E,QAAQC,OAAO9E,KAAK+E,UAAW/E,KAAKQ,KAAMmG,EAAY5G,GAC7E,IAAIF,EAAK8G,EAAY5G,KA1VH,gCA4VhB4G,EAAY9F,EAAUC,GAC5B,OAAOd,KAAKiF,aACRjF,KAAKiF,aAAaC,YAAYlF,KAAKmF,eAAgBnF,KAAKoF,mBAAoBuB,EAAY9F,EAAUC,GAClGD,IA/VkB,6BAiWnB8F,EAAY9F,EAAUM,EAAWC,EAAWN,GAC/C,OAAOd,KAAKqF,UAAYrF,KAAKqF,UAAUC,SAAStF,KAAKuF,YAAavF,KAAKwF,gBAAiBmB,EAAY9F,EAAUM,EAAWC,EAAWN,GAChID,EAAS+F,MAAMzF,EAAWC,KAnWR,kCAqWduF,EAAYpF,GACpB,OAAOvB,KAAKyF,gBACRzF,KAAKyF,eAAeC,cAAc1F,KAAK2F,iBAAkB3F,KAAK4F,qBAAsBe,EAAYpF,KAvW9E,mCA0WboF,EAAYlF,GACrB,IAAIoF,EAAapF,EACjB,GAAIzB,KAAK6F,gBACD7F,KAAKsG,YACLO,EAAW5D,eAAe6D,KAAK9G,KAAKwG,oBAGxCK,EAAa7G,KAAK6F,gBAAgBtB,eAAevE,KAAK8F,kBAAmB9F,KAAK+F,sBAAuBY,EAAYlF,MAG7GoF,EAAapF,QAGjB,GAAIA,EAAKsF,WACLtF,EAAKsF,WAAWtF,OAEf,IAAIA,EAAKI,MAAQyB,EAIlB,MAAM,IAAI1D,MAAM,+BAHhBoH,EAAkBvF,GAM1B,OAAOoF,IAjYe,iCAmYfF,EAAYlF,EAAMN,EAAWC,GACpC,OAAOpB,KAAKgG,cAAgBhG,KAAKgG,cAAcxB,aAAaxE,KAAKiG,gBAAiBjG,KAAKkG,oBAAqBS,EAAYlF,EAAMN,EAAWC,GACrIK,EAAKZ,SAAS+F,MAAMzF,EAAWC,KArYb,iCAuYfuF,EAAYlF,GACnB,IAAIlD,EACJ,GAAIyB,KAAKmG,cACL5H,EAAQyB,KAAKmG,cAAc1B,aAAazE,KAAKoG,gBAAiBpG,KAAKqG,oBAAqBM,EAAYlF,OAEnG,CACD,IAAKA,EAAKgB,SACN,MAAM7C,MAAM,0BAEhBrB,EAAQkD,EAAKgB,SAAShB,GAE1B,OAAOlD,IAlZe,8BAoZlBoI,EAAYM,GAGhB,IACIjH,KAAKsG,YACDtG,KAAKsG,WAAWrC,UAAUjE,KAAKuG,aAAcvG,KAAKyG,iBAAkBE,EAAYM,GAExF,MAAOrI,GACHoB,KAAKwB,YAAYmF,EAAY/H,MA5ZX,uCAgaTiD,EAAM6B,GACnB,IAAMwD,EAASlH,KAAK2E,YACdwC,EAAOD,EAAOrF,GACd7C,EAAOkI,EAAOrF,GAAQsF,EAAOzD,EACnC,GAAI1E,EAAO,EACP,MAAM,IAAIY,MAAM,4CAER,GAARuH,GAAqB,GAARnI,GAObgB,KAAKsE,QAAQtE,KAAKQ,KANF,CACZ8C,UAAW4D,EAAM,UAAgB,EACjCnF,UAAWmF,EAAM,UAAgB,EACjCpF,UAAWoF,EAAM,UAAgB,EACjCE,OAAQvF,QA5aM,KAkbxBwB,EAlbwB,WAmb1B,WAAYxB,EAAMf,EAAQD,EAAUwG,EAASN,EAAYtE,GAarD,GAb+D,UAE/DzC,KAAKkD,MAAQ,KACblD,KAAKoC,SAAW,EAEhBpC,KAAKiD,eAAiB,KAEtBjD,KAAKsH,OAAS,eACdtH,KAAK6B,KAAOA,EACZ7B,KAAKc,OAASA,EACdd,KAAKuC,KAAO8E,EACZrH,KAAK+G,WAAaA,EAClB/G,KAAKyC,SAAWA,GACX5B,EACD,MAAM,IAAIjB,MAAM,2BAEpBI,KAAKa,SAAWA,EAChB,IAAM0G,EAAOvH,KAGTA,KAAKsB,OADLO,IAASC,GAAauF,GAAWA,EAAQG,KAC3BnE,EAASV,WAGT,WACV,OAAOU,EAASV,WAAW8E,KAAKtI,EAAQoI,EAAMvH,KAAMkB,YA3ctC,0DAsetBlB,KAAKkC,cAAcN,EAAcmB,KAteX,oCAyeZ2E,EAASC,EAAYC,GAC/B,GAAI5H,KAAKsH,SAAWK,GAAc3H,KAAKsH,SAAWM,EAO9C,MAAM,IAAIhI,MAAJ,UAAaI,KAAK6B,KAAlB,aAA2B7B,KAAKc,OAAhC,qCAAmE4G,EAAnE,+BAAiGC,EAAjG,YAA+GC,EAAa,QAAWA,EAAa,IAAO,GAA3J,kBAAuK5H,KAAKsH,OAA5K,OANNtH,KAAKsH,OAASI,EACVA,GAAW9F,IACX5B,KAAKiD,eAAiB,QA7eR,iCAqftB,OAAIjD,KAAKuC,WAAsC,IAAvBvC,KAAKuC,KAAKsF,SACvB7H,KAAKuC,KAAKsF,SAASC,WAGnBC,OAAOC,UAAUF,SAASL,KAAKzH,QAzfpB,+BA+ftB,MAAO,CACH6B,KAAM7B,KAAK6B,KACXF,MAAO3B,KAAK2B,MACZb,OAAQd,KAAKc,OACbN,KAAMR,KAAKQ,KAAKlB,KAChB8C,SAAUpC,KAAKoC,YApgBG,2BAgetB,OAAOpC,KAAKkD,QAheU,4BAmetB,OAAOlD,KAAKsH,UAneU,kCA+cR7F,EAAM2C,EAAQ6D,GACvBxG,IACDA,EAAOzB,MAEXkI,IACA,IAEI,OADAzG,EAAKW,WACEX,EAAKjB,KAAK2H,QAAQ1G,EAAM2C,EAAQ6D,GAF3C,QAKqC,GAA7BC,GACAE,IAEJF,SA5dkB,KA6gBxBG,EAAmB3I,EAAW,cAC9B4I,EAAgB5I,EAAW,WAC3B6I,EAAa7I,EAAW,QAC1B8I,EAAkB,GAClBC,GAA4B,EAEhC,SAASzB,EAAkBvF,GAGvB,GAAkC,IAA9ByG,GAA8D,IAA3BM,EAAgBvK,OAOnD,GALK8F,GACG5E,EAAOmJ,KACPvE,EAA8B5E,EAAOmJ,GAAeI,QAAQ,IAGhE3E,EAA6B,CAC7B,IAAI4E,EAAa5E,EAA4BwE,GACxCI,IAGDA,EAAa5E,EAA2B,MAE5C4E,EAAWlB,KAAK1D,EAA6BqE,QAG7CjJ,EAAOkJ,GAAkBD,EAAqB,GAGtD3G,GAAQ+G,EAAgB1B,KAAKrF,GAEjC,SAAS2G,IACL,IAAKK,EAA2B,CAE5B,IADAA,GAA4B,EACrBD,EAAgBvK,QAAQ,CAC3B,IAAM2K,EAAQJ,EACdA,EAAkB,GAClB,IAAK,IAAItK,EAAI,EAAGA,EAAI0K,EAAM3K,OAAQC,IAAK,CACnC,IAAMuD,EAAOmH,EAAM1K,GACnB,IACIuD,EAAKjB,KAAK2H,QAAQ1G,EAAM,KAAM,MAElC,MAAOF,GACHuC,EAAK+E,iBAAiBtH,KAIlCuC,EAAKgF,qBACLL,GAA4B,GAQpC,IAAM/G,EAAU,CAAEpC,KAAM,WAClBsC,EAAe,eAAgBmB,EAAa,aAAcZ,EAAY,YAAaF,EAAU,UAAWuB,EAAY,YAAaZ,EAAU,UAC3IU,EAAY,YAAavB,EAAY,YAAaD,EAAY,YAC9D6B,EAAU,GACVG,EAAO,CACTiF,OAAQrJ,EACRsJ,iBAAkB,kBAAM3H,GACxBwH,iBAAkBI,EAClBH,mBAAoBG,EACpBjC,kBAAmBA,EACnBkC,kBAAmB,kBAAOrJ,EAAKH,EAAW,qCAC1CyJ,iBAAkB,iBAAM,IACxBC,kBAAmBH,EACnBI,YAAa,kBAAMJ,GACnBK,cAAe,iBAAM,IACrBC,UAAW,kBAAMN,GACjBO,eAAgB,kBAAMP,GACtBQ,oBAAqB,kBAAMR,GAC3BS,WAAY,kBAAM,GAClBC,iBAAkB,aAClBC,qBAAsB,kBAAMX,GAC5BY,+BAAgC,aAChCC,aAAc,aACdC,WAAY,iBAAM,IAClBC,WAAY,kBAAMf,GAClBgB,oBAAqB,kBAAMhB,GAC3BiB,iBAAkB,iBAAM,IACxBC,sBAAuB,kBAAMlB,GAC7BmB,kBAAmB,kBAAMnB,GACzBoB,eAAgB,kBAAMpB,IAEtB5H,EAAoB,CAAEvB,OAAQ,KAAMU,KAAM,IAAIX,EAAK,KAAM,OACzDyC,EAAe,KACf4F,EAA4B,EAChC,SAASe,KACT1J,EAAmB,OAAQ,QACpBJ,EAAM,KAAWU,EAzmBZ,CA0mBK,oBAAXyK,QAA0BA,QAA0B,oBAAT/C,MAAwBA,MAAQpI,QA1mBrF,IA2nBM0K,EAAiC9B,OAAOwC,yBAExCX,EAAuB7B,OAAOyC,eAE9BC,EAAuB1C,OAAO2C,eAE9BZ,EAAe/B,OAAO4C,OAEtBZ,EAAahM,MAAMiK,UAAU4C,MAE7BC,EAAyB,mBAEzBC,EAA4B,sBAE5BC,EAAiClL,KAAKH,WAAWmL,GAEjDG,EAAoCnL,KAAKH,WAAWoL,GAEpDG,EAAW,OAEXC,EAAY,QAEZC,EAAqBtL,KAAKH,WAAW,IAC3C,SAASuK,EAAoBpJ,EAAUC,GACnC,OAAOjB,KAAKa,QAAQ0K,KAAKvK,EAAUC,GAEvC,SAASuK,EAAiCvK,EAAQD,EAAU0B,EAAMa,EAAgBG,GAC9E,OAAO1D,KAAKa,QAAQ4K,kBAAkBxK,EAAQD,EAAU0B,EAAMa,EAAgBG,GAElF,IAAMgI,EAAa1L,KAAKH,WAClB8L,EAAmC,oBAAXlB,OACxBmB,EAAiBD,EAAiBlB,YAAS5H,EAC3CgJ,EAAUF,GAAkBC,GAAkC,iBAATlE,MAAqBA,MAAQpI,OAElFwM,EAAqB,CAAC,MAC5B,SAASrC,EAAcrB,EAAMnH,GACzB,IAAK,IAAI5C,EAAI+J,EAAKhK,OAAS,EAAGC,GAAK,EAAGA,IACX,mBAAZ+J,EAAK/J,KACZ+J,EAAK/J,GAAK+L,EAAoBhC,EAAK/J,GAAI4C,EAAS,IAAM5C,IAG9D,OAAO+J,EAsBX,SAAS2D,EAAmBC,GACxB,OAAKA,IAGyB,IAA1BA,EAAaC,YAGoB,mBAArBD,EAAaE,UAAkD,IAArBF,EAAaG,KAE3E,IAAMC,EAA4C,oBAAtBC,mBAAqC3E,gBAAgB2E,kBAG3EC,IAAY,OAAQT,SAAuC,IAApBA,EAAQU,SACX,qBAAtC,GAAGtE,SAASL,KAAKiE,EAAQU,SACvBC,GAAaF,IAAWF,MAAkBT,IAAkBC,EAAc,aAI1Ea,OAAmC,IAApBZ,EAAQU,SACa,qBAAtC,GAAGtE,SAASL,KAAKiE,EAAQU,WAAoCH,MAC1DT,IAAkBC,EAAc,aACjCc,EAAuB,GACvBC,EAAS,SAAUC,GAIrB,GADAA,EAAQA,GAASf,EAAQe,MACzB,CAGA,IAAIC,EAAkBH,EAAqBE,EAAM5K,MAC5C6K,IACDA,EAAkBH,EAAqBE,EAAM5K,MAAQ0J,EAAW,cAAgBkB,EAAM5K,OAE1F,IAEI8K,EAFEvI,EAASpE,MAAQyM,EAAMrI,QAAUsH,EACjCkB,EAAWxI,EAAOsI,GAmBxB,OAjBIL,GAAajI,IAAWqH,GAAiC,UAAfgB,EAAM5K,MAOjC,KAFf8K,EAASC,GACLA,EAASnF,KAAKzH,KAFCyM,EAEgBI,QAFhBJ,EAEoCK,SAFpCL,EAEyDM,OAFzDN,EAE4EO,MAF5EP,EAE8FlL,SAE7GkL,EAAMQ,iBAKIvK,OADdiK,EAASC,GAAYA,EAAShG,MAAM5G,KAAMkB,aACdyL,GACxBF,EAAMQ,iBAGPN,IAEX,SAASO,EAAcC,EAAKC,EAAMpF,GAC9B,IAAIqF,EAAOxD,EAA+BsD,EAAKC,GAU/C,IATKC,GAAQrF,GAEa6B,EAA+B7B,EAAWoF,KAE5DC,EAAO,CAAEC,YAAY,EAAMC,cAAc,IAK5CF,GAASA,EAAKE,aAAnB,CAGA,IAAMC,EAAsBjC,EAAW,KAAO6B,EAAO,WACrD,IAAID,EAAIxM,eAAe6M,KAAwBL,EAAIK,GAAnD,QAQOH,EAAKvB,gBACLuB,EAAK9O,MACZ,IAAMkP,EAAkBJ,EAAKtB,IACvB2B,EAAkBL,EAAKrB,IAEvB2B,EAAYP,EAAKQ,OAAO,GAC1BlB,EAAkBH,EAAqBoB,GACtCjB,IACDA,EAAkBH,EAAqBoB,GAAapC,EAAW,cAAgBoC,IAEnFN,EAAKrB,IAAM,SAAU6B,GAGjB,IAAIzJ,EAASpE,KACRoE,GAAU+I,IAAQzB,IACnBtH,EAASsH,GAERtH,IAGeA,EAAOsI,IAEvBtI,EAAO0J,oBAAoBH,EAAWnB,GAItCkB,GACAA,EAAgB9G,MAAMxC,EAAQuH,GAEV,mBAAbkC,GACPzJ,EAAOsI,GAAmBmB,EAC1BzJ,EAAO2J,iBAAiBJ,EAAWnB,GAAQ,IAG3CpI,EAAOsI,GAAmB,OAKlCW,EAAKtB,IAAM,WAGP,IAAI3H,EAASpE,KAIb,GAHKoE,GAAU+I,IAAQzB,IACnBtH,EAASsH,IAERtH,EACD,OAAO,KAEX,IAAMwI,EAAWxI,EAAOsI,GACxB,GAAIE,EACA,OAAOA,EAEN,GAAIa,EAAiB,CAOtB,IAAIlP,EAAQkP,GAAmBA,EAAgBhG,KAAKzH,MACpD,GAAIzB,EAKA,OAJA8O,EAAKrB,IAAIvE,KAAKzH,KAAMzB,GACoB,mBAA7B6F,EAAM,iBACbA,EAAO4J,gBAAgBZ,GAEpB7O,EAGf,OAAO,MAEXqL,EAAqBuD,EAAKC,EAAMC,GAChCF,EAAIK,IAAuB,IAE/B,SAASpE,EAAkB+D,EAAK/M,EAAY4H,GACxC,GAAI5H,EACA,IAAK,IAAIlC,EAAI,EAAGA,EAAIkC,EAAWnC,OAAQC,IACnCgP,EAAcC,EAAK,KAAO/M,EAAWlC,GAAI8J,OAG5C,CACD,IAAMiG,EAAe,GACrB,IAAK,IAAMb,KAAQD,EACU,MAArBC,EAAKQ,OAAO,EAAG,IACfK,EAAanH,KAAKsG,GAG1B,IAAK,IAAIc,EAAI,EAAGA,EAAID,EAAahQ,OAAQiQ,IACrChB,EAAcC,EAAKc,EAAaC,GAAIlG,IAIhD,IAAMmG,EAAsB5C,EAAW,oBAEvC,SAASvB,EAAWoE,GAChB,IAAMC,EAAgB3C,EAAQ0C,GAC9B,GAAKC,EAAL,CAGA3C,EAAQH,EAAW6C,IAAcC,EACjC3C,EAAQ0C,GAAa,WACjB,IAAME,EAAIhF,EAAcpI,UAAWkN,GACnC,OAAQE,EAAErQ,QACN,KAAK,EACD+B,KAAKmO,GAAuB,IAAIE,EAChC,MACJ,KAAK,EACDrO,KAAKmO,GAAuB,IAAIE,EAAcC,EAAE,IAChD,MACJ,KAAK,EACDtO,KAAKmO,GAAuB,IAAIE,EAAcC,EAAE,GAAIA,EAAE,IACtD,MACJ,KAAK,EACDtO,KAAKmO,GAAuB,IAAIE,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC5D,MACJ,KAAK,EACDtO,KAAKmO,GAAuB,IAAIE,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAClE,MACJ,QACI,MAAM,IAAI1O,MAAM,wBAI5BuK,EAAsBuB,EAAQ0C,GAAYC,GAC1C,IACIjB,EADEmB,EAAW,IAAIF,GAAc,eAEnC,IAAKjB,KAAQmB,EAES,mBAAdH,GAA2C,iBAAThB,GAErC,SAAUA,GACuB,mBAAnBmB,EAASnB,GAChB1B,EAAQ0C,GAAWpG,UAAUoF,GAAQ,WACjC,OAAOpN,KAAKmO,GAAqBf,GAAMxG,MAAM5G,KAAKmO,GAAsBjN,YAI5E0I,EAAqB8B,EAAQ0C,GAAWpG,UAAWoF,EAAM,CACrDpB,IAAK,SAAUpI,GACO,mBAAPA,GACP5D,KAAKmO,GAAqBf,GAAQnD,EAAoBrG,EAAIwK,EAAY,IAAMhB,GAI5EjD,EAAsBnK,KAAKmO,GAAqBf,GAAOxJ,IAGvD5D,KAAKmO,GAAqBf,GAAQxJ,GAG1CmI,IAAK,WACD,OAAO/L,KAAKmO,GAAqBf,MArBhD,CAyBCA,GAEN,IAAKA,KAAQiB,EACI,cAATjB,GAAwBiB,EAAc1N,eAAeyM,KACrD1B,EAAQ0C,GAAWhB,GAAQiB,EAAcjB,KAIrD,SAAS/D,EAAYjF,EAAQ9E,EAAMkP,GAE/B,IADA,IAAIC,EAAQrK,EACLqK,IAAUA,EAAM9N,eAAerB,IAClCmP,EAAQhE,EAAqBgE,IAE5BA,GAASrK,EAAO9E,KAEjBmP,EAAQrK,GAEZ,IAAMsK,EAAenD,EAAWjM,GAC5B4E,EAAW,KACf,GAAIuK,KAAWvK,EAAWuK,EAAMC,MAC5BxK,EAAWuK,EAAMC,GAAgBD,EAAMnP,GAInCsM,EADS6C,GAAS5E,EAA+B4E,EAAOnP,KAC9B,CAC1B,IAAMqP,EAAgBH,EAAQtK,EAAUwK,EAAcpP,GACtDmP,EAAMnP,GAAQ,WACV,OAAOqP,EAAc3O,KAAMkB,YAE/BiJ,EAAsBsE,EAAMnP,GAAO4E,GAG3C,OAAOA,EAGX,SAASsF,EAAe2D,EAAKyB,EAAUC,GACnC,IAAIC,EAAY,KAChB,SAAS3L,EAAa1B,GAClB,IAAMc,EAAOd,EAAKc,KAKlB,OAJAA,EAAK0F,KAAK1F,EAAKwM,OAAS,WACpBtN,EAAKH,OAAOsF,MAAM5G,KAAMkB,YAE5B4N,EAAUlI,MAAMrE,EAAK6B,OAAQ7B,EAAK0F,MAC3BxG,EAEXqN,EAAYzF,EAAY8D,EAAKyB,GAAU,SAAC1K,GAAD,OAAc,SAAUqD,EAAMU,GACjE,IAAM+G,EAAOH,EAAYtH,EAAMU,GAC/B,OAAI+G,EAAKD,OAAS,GAAiC,mBAArB9G,EAAK+G,EAAKD,OAC7B1D,EAAiC2D,EAAK1P,KAAM2I,EAAK+G,EAAKD,OAAQC,EAAM7L,GAIpEe,EAAS0C,MAAMW,EAAMU,OAIxC,SAASkC,EAAsB8E,EAASC,GACpCD,EAAQ1D,EAAW,qBAAuB2D,EAE9C,IAAIC,GAAqB,EACrBC,GAAW,EAYf,SAAS1F,IACL,GAAIyF,EACA,OAAOC,EAEXD,GAAqB,EACrB,IACI,IAAME,EAAK5D,EAAe6D,UAAUC,WACP,IAAzBF,EAAGG,QAAQ,WAA+C,IAA5BH,EAAGG,QAAQ,cAA+C,IAAzBH,EAAGG,QAAQ,WAC1EJ,GAAW,GAGnB,MAAO7N,IAEP,OAAO6N,EAUXvP,KAAK4P,aAAa,oBAAoB,SAACtQ,EAAQU,EAAM6P,GACjD,IAAM7F,EAAiC9B,OAAOwC,yBACxCX,EAAuB7B,OAAOyC,eAQ9B9K,EAAagQ,EAAI3G,OACjB4G,EAAyB,GACzBC,GAAkH,IAAtEzQ,EAAOO,EAAW,gDAC9D4I,EAAgB5I,EAAW,WAC3B6I,EAAa7I,EAAW,QAE9BgQ,EAAI7G,iBAAmB,SAACrK,GACpB,GAAIkR,EAAIxG,oBAAqB,CACzB,IAAM2G,EAAYrR,GAAKA,EAAEqR,UACrBA,EACAC,QAAQvO,MAAM,+BAAgCsO,aAAqBjQ,MAAQiQ,EAAUhD,QAAUgD,EAAW,UAAWrR,EAAEgC,KAAKlB,KAAM,UAAWd,EAAEiD,MAAQjD,EAAEiD,KAAKX,OAAQ,WAAY+O,EAAWA,aAAqBjQ,MAAQiQ,EAAUE,WAAQrN,GAG5OoN,QAAQvO,MAAM/C,KAI1BkR,EAAI5G,mBAAqB,WACrB,IAD2B,iBAEvB,IAAMkH,EAAuBL,EAAuBM,QACpD,IACID,EAAqBxP,KAAKS,YAAW,WACjC,MAAM+O,KAGd,MAAOzO,IAMf,SAAkC/C,GAC9BkR,EAAI7G,iBAAiBrK,GACrB,IACI,IAAM0R,EAAUrQ,EAAKsQ,GACE,mBAAZD,GACPA,EAAQzI,KAAKzH,KAAMxB,GAG3B,MAAOI,KAbCwR,CAAyB7O,KAR1BoO,EAAuB1R,QAAQ,KAY1C,IAAMkS,EAA6CzQ,EAAW,oCAY9D,SAAS2Q,EAAW9R,GAChB,OAAOA,GAASA,EAAM+R,KAE1B,SAASC,EAAkBhS,GACvB,OAAOA,EAEX,SAASiS,EAAiBX,GACtB,OAAOY,EAAiBC,OAAOb,GAEnC,IAAMc,EAAcjR,EAAW,SACzBkR,EAAclR,EAAW,SACzBmR,EAAgBnR,EAAW,WAC3BoR,EAA2BpR,EAAW,sBACtCqR,EAA2BrR,EAAW,sBAEtCsR,EAAa,KACbC,GAAW,EACXC,GAAW,EAEjB,SAASC,EAAaC,EAASzP,GAC3B,OAAO,SAAC0P,GACJ,IACIC,EAAeF,EAASzP,EAAO0P,GAEnC,MAAOzS,GACH0S,EAAeF,GAAS,EAAOxS,KAK3C,IAaM2S,EAA4B7R,EAAW,oBAE7C,SAAS4R,EAAeF,EAASzP,EAAOpD,GACpC,IAfIiT,EAhFwBrE,EA+FtBsE,GAfFD,GAAY,EACT,SAAiBE,GACpB,OAAO,WACCF,IAGJA,GAAY,EACZE,EAAgB9K,MAAM,KAAM1F,eASpC,GAAIkQ,IAAY7S,EACZ,MAAM,IAAII,UANC,gCAQf,GAAIyS,EAAQT,KAAiBK,EAAY,CAErC,IAAIV,EAAO,KACX,IACyB,iBAAV/R,GAAuC,mBAAVA,IACpC+R,EAAO/R,GAASA,EAAM+R,MAG9B,MAAO1R,GAIH,OAHA6S,GAAY,WACRH,EAAeF,GAAS,EAAOxS,KADnC6S,GAGOL,EAGX,GAAIzP,IAAUuP,GAAY3S,aAAiBkS,GACvClS,EAAMoC,eAAegQ,IAAgBpS,EAAMoC,eAAeiQ,IAC1DrS,EAAMoS,KAAiBK,EACvBW,EAAqBpT,GACrB+S,EAAeF,EAAS7S,EAAMoS,GAAcpS,EAAMqS,SAEjD,GAAIjP,IAAUuP,GAA4B,mBAATZ,EAClC,IACIA,EAAK7I,KAAKlJ,EAAOkT,EAAYN,EAAaC,EAASzP,IAAS8P,EAAYN,EAAaC,GAAS,KAElG,MAAOxS,GACH6S,GAAY,WACRH,EAAeF,GAAS,EAAOxS,KADnC6S,OAKH,CACDL,EAAQT,GAAehP,EACvB,IAAMiH,EAAQwI,EAAQR,GAatB,GAZAQ,EAAQR,GAAerS,EACnB6S,EAAQP,KAAmBA,GAEvBlP,IAAUsP,IAGVG,EAAQT,GAAeS,EAAQL,GAC/BK,EAAQR,GAAeQ,EAAQN,IAKnCnP,IAAUuP,GAAY3S,aAAiBqB,MAAO,CAE9C,IAAMgS,EAAQ/R,EAAKgS,aAAehS,EAAKgS,YAAYtP,MAC/C1C,EAAKgS,YAAYtP,KAAjB,kBACAqP,GAEAhI,EAAqBrL,EAAOgT,EAA2B,CAAEhE,cAAc,EAAMD,YAAY,EAAOxB,UAAU,EAAMvN,MAAOqT,IAG/H,IAAK,IAAI1T,EAAI,EAAGA,EAAI0K,EAAM3K,QACtB6T,EAAwBV,EAASxI,EAAM1K,KAAM0K,EAAM1K,KAAM0K,EAAM1K,KAAM0K,EAAM1K,MAE/E,GAAoB,GAAhB0K,EAAM3K,QAAe0D,GAASuP,EAAU,CACxCE,EAAQT,GA3FE,EA4FV,IAAIX,EAAuBzR,EAC3B,IAAKqR,EAID,IAII,MAAM,IAAIhQ,MAAM,4BAxKRuN,EAwK2D5O,IAvK5E4O,EAAIrF,WAAaC,OAAOC,UAAUF,UACvBqF,EAAI4E,aAAe5E,EAAI4E,YAAYzS,MACrB,IAAM,KAAO0S,KAAKC,UAAU9E,GAEzDA,EAAMA,EAAIrF,WAAaC,OAAOC,UAAUF,SAASL,KAAK0F,KAoKpC5O,GAASA,EAAMwR,MAAQ,KAAOxR,EAAMwR,MAAQ,KAErD,MAAOnR,GACHoR,EAAuBpR,EAG/BoR,EAAqBH,UAAYtR,EACjCyR,EAAqBoB,QAAUA,EAC/BpB,EAAqBxP,KAAOX,EAAKa,QACjCsP,EAAqBvO,KAAO5B,EAAKgS,YACjClC,EAAuB7I,KAAKkJ,GAC5BN,EAAI1I,sBAKhB,OAAOoK,EAEX,IAAMc,EAA4BxS,EAAW,2BAC7C,SAASiS,EAAqBP,GAC1B,GA1HsB,IA0HlBA,EAAQT,GAAoC,CAM5C,IACI,IAAMT,EAAUrQ,EAAKqS,GACjBhC,GAA8B,mBAAZA,GAClBA,EAAQzI,KAAKzH,KAAM,CAAE6P,UAAWuB,EAAQR,GAAcQ,QAASA,IAGvE,MAAOxS,IAEPwS,EAAQT,GAAeO,EACvB,IAAK,IAAIhT,EAAI,EAAGA,EAAIyR,EAAuB1R,OAAQC,IAC3CkT,IAAYzB,EAAuBzR,GAAGkT,SACtCzB,EAAuBwC,OAAOjU,EAAG,IAKjD,SAAS4T,EAAwBV,EAAS5Q,EAAM4R,EAAcC,EAAaC,GACvEX,EAAqBP,GACrB,IAAMmB,EAAenB,EAAQT,GACvBzM,EAAWqO,EACW,mBAAhBF,EAA8BA,EAAc9B,EAC7B,mBAAf+B,EAA6BA,EAAa9B,EACtDhQ,EAAKwG,kBA1JM,gBA0JoB,WAC3B,IACI,IAAMwL,EAAqBpB,EAAQR,GAC7B6B,IAAqBL,GAAgBvB,IAAkBuB,EAAavB,GACtE4B,IAEAL,EAAatB,GAA4B0B,EACzCJ,EAAarB,GAA4BwB,GAG7C,IAAMhU,EAAQiC,EAAKkS,IAAIxO,OAAUxB,EAAW+P,GAAoBvO,IAAasM,GAAoBtM,IAAaqM,EAC1G,GACA,CAACiC,IACLlB,EAAec,GAAc,EAAM7T,GAEvC,MAAOgD,GAEH+P,EAAec,GAAc,EAAO7Q,MAEzC6Q,GAEP,IACMnJ,EAAO,aACPwH,EAnPmD,WA6UrD,WAAYkC,GAAU,UAClB,IAAMvB,EAAUpR,KAChB,KAAMoR,aAAmBX,GACrB,MAAM,IAAI7Q,MAAM,kCAEpBwR,EAAQT,GAAeK,EACvBI,EAAQR,GAAe,GACvB,IACI+B,GAAYA,EAASxB,EAAaC,EAASH,GAAWE,EAAaC,EAASF,IAEhF,MAAO3P,GACH+P,EAAeF,GAAS,EAAO7P,IAxVc,kDAqPjD,MAJ6B,kDAjPoB,8BAuPtChD,GACX,OAAO+S,EAAe,IAAItR,KAAK,MAAOiR,EAAU1S,KAxPC,6BA0PvCgD,GACV,OAAO+P,EAAe,IAAItR,KAAK,MAAOkR,EAAU3P,KA3PC,2BA6PzCqR,GACR,IAAIlK,EACAgI,EACAU,EAAU,IAAIpR,MAAK,SAAC6S,EAAKC,GACzBpK,EAAUmK,EACVnC,EAASoC,KAEb,SAASC,EAAUxU,GACfmK,EAAQnK,GAEZ,SAASyU,EAASzR,GACdmP,EAAOnP,GAXK,UAaEqR,GAbF,IAahB,2BAA0B,KAAjBrU,EAAiB,QACjB8R,EAAW9R,KACZA,EAAQyB,KAAK0I,QAAQnK,IAEzBA,EAAM+R,KAAKyC,EAAWC,IAjBV,8BAmBhB,OAAO5B,IAhR0C,0BAkR1CwB,GACP,OAAOnC,EAAiBwC,gBAAgBL,KAnRS,iCAqRnCA,GAEd,OADU5S,MAAQA,KAAKgI,qBAAqByI,EAAmBzQ,KAAOyQ,GAC7DwC,gBAAgBL,EAAQ,CAC7BM,aAAc,SAAC3U,GAAD,MAAY,CAAE4U,OAAQ,YAAa5U,UACjD6U,cAAe,SAACxU,GAAD,MAAU,CAAEuU,OAAQ,WAAYE,OAAQzU,QAzRV,sCA4R9BgU,EAAQ/R,GAAU,IACjC6H,EACAgI,EAFiC,SAGjCU,EAAU,IAAIpR,MAAK,SAAC6S,EAAKC,GACzBpK,EAAUmK,EACVnC,EAASoC,KAGTQ,EAAkB,EAClBC,EAAa,EACXC,EAAiB,GAVc,IAWnBZ,GAXmB,yBAW5BrU,EAX4B,QAY5B8R,EAAW9R,KACZA,EAAQ,EAAKmK,QAAQnK,IAEzB,IAAMkV,EAAgBF,EACtB,IACIhV,EAAM+R,MAAK,SAAC/R,GACRiV,EAAeC,GAAiB5S,EAAWA,EAASqS,aAAa3U,GAASA,EAElD,KADxB+U,GAEI5K,EAAQ8K,MAEb,SAAC5U,GACKiC,GAID2S,EAAeC,GAAiB5S,EAASuS,cAAcxU,GAE/B,KADxB0U,GAEI5K,EAAQ8K,IANZ9C,EAAO9R,MAWnB,MAAO8U,GACHhD,EAAOgD,GAEXJ,IACAC,KA7BJ,2BAA0B,IAXW,8BA+CrC,OAHwB,IADxBD,GAAmB,IAEf5K,EAAQ8K,GAELpC,MA3U0C,gCAiWhDiB,EAAaC,GACd,IAAIqB,EAAI3T,KAAK+R,YAAYlU,OAAO+V,SAC3BD,GAAkB,mBAANA,IACbA,EAAI3T,KAAK+R,aAAetB,GAE5B,IAAM2B,EAAe,IAAIuB,EAAE1K,GACrBzI,EAAOX,EAAKa,QAOlB,OANIV,KAAK2Q,IAAgBK,EACrBhR,KAAK4Q,GAAa9J,KAAKtG,EAAM4R,EAAcC,EAAaC,GAGxDR,EAAwB9R,KAAMQ,EAAM4R,EAAcC,EAAaC,GAE5DF,IA9W0C,4BAgX/CE,GACF,OAAOtS,KAAKsQ,KAAK,KAAMgC,KAjX0B,8BAmX7CuB,GACJ,IAAIF,EAAI3T,KAAK+R,YAAYlU,OAAO+V,SAC3BD,GAAkB,mBAANA,IACbA,EAAIlD,GAER,IAAM2B,EAAe,IAAIuB,EAAE1K,GAC3BmJ,EAAavB,GAAiBA,EAC9B,IAAMrQ,EAAOX,EAAKa,QAOlB,OANIV,KAAK2Q,IAAgBK,EACrBhR,KAAK4Q,GAAa9J,KAAKtG,EAAM4R,EAAcyB,EAAWA,GAGtD/B,EAAwB9R,KAAMQ,EAAM4R,EAAcyB,EAAWA,GAE1DzB,IAjY0C,KA2VhDvU,OAAOiW,YA3VyC,eA4VjD,MAAO,YA5V0C,KA8VhDjW,OAAO+V,QA9VyC,eA+VjD,OAAOnD,MA/V0C,KAsYzDA,EAAgB,QAAcA,EAAiB/H,QAC/C+H,EAAgB,OAAaA,EAAiBC,OAC9CD,EAAgB,KAAWA,EAAiBsD,KAC5CtD,EAAgB,IAAUA,EAAiBuD,IAC3C,IAAMC,EAAgB9U,EAAOmJ,GAAiBnJ,EAAM,QACpDA,EAAM,QAAcsR,EACpB,IAAMyD,EAAoBxU,EAAW,eACrC,SAAS6J,EAAU4K,GACf,IAAM1F,EAAQ0F,EAAKnM,UACboF,EAAOvD,EAA+B4E,EAAO,QACnD,IAAIrB,IAA2B,IAAlBA,EAAKtB,UAAuBsB,EAAKG,aAA9C,CAKA,IAAM6G,EAAe3F,EAAM6B,KAE3B7B,EAAMlG,GAAc6L,EACpBD,EAAKnM,UAAUsI,KAAO,SAAUyC,EAAWC,GAAU,WAIjD,OAHgB,IAAIvC,GAAiB,SAAC/H,EAASgI,GAC3C0D,EAAa3M,KAAK,EAAMiB,EAASgI,MAEtBJ,KAAKyC,EAAWC,IAEnCmB,EAAKD,IAAqB,GAsB9B,OApBAxE,EAAInG,UAAYA,EAcZ0K,IACA1K,EAAU0K,GACV5K,EAAYlK,EAAQ,SAAS,SAAA+E,GAAQ,OAfxBN,EAeoCM,EAd1C,SAAUqD,EAAMU,GACnB,IAAIoM,EAAgBzQ,EAAGgD,MAAMW,EAAMU,GACnC,GAAIoM,aAAyB5D,EACzB,OAAO4D,EAEX,IAAIC,EAAOD,EAActC,YAIzB,OAHKuC,EAAKJ,IACN3K,EAAU+K,GAEPD,GAVf,IAAiBzQ,MAkBjB2Q,QAAQ1U,EAAKH,WAAW,0BAA4BiQ,EAC7Cc,KAYX5Q,KAAK4P,aAAa,YAAY,SAACtQ,GAE3B,IAAMqV,EAA2BC,SAASzM,UAAUF,SAC9C4M,EAA2BnJ,EAAW,oBACtCoJ,EAAiBpJ,EAAW,WAC5BqJ,EAAerJ,EAAW,SAC1BsJ,EAAsB,WACxB,GAAoB,mBAAT7U,KAAqB,CAC5B,IAAM8U,EAAmB9U,KAAK0U,GAC9B,GAAII,EACA,MAAgC,mBAArBA,EACAN,EAAyB/M,KAAKqN,GAG9B/M,OAAOC,UAAUF,SAASL,KAAKqN,GAG9C,GAAI9U,OAASuU,QAAS,CAClB,IAAMQ,EAAgB5V,EAAOwV,GAC7B,GAAII,EACA,OAAOP,EAAyB/M,KAAKsN,GAG7C,GAAI/U,OAASJ,MAAO,CAChB,IAAMoV,EAAc7V,EAAOyV,GAC3B,GAAII,EACA,OAAOR,EAAyB/M,KAAKuN,IAIjD,OAAOR,EAAyB/M,KAAKzH,OAEzC6U,EAAoBH,GAA4BF,EAChDC,SAASzM,UAAUF,SAAW+M,EAE9B,IAAMI,EAAyBlN,OAAOC,UAAUF,SAEhDC,OAAOC,UAAUF,SAAW,WACxB,OAAI9H,gBAAgBuU,QAFS,mBAKtBU,EAAuBxN,KAAKzH,UAW3C,IAAIkV,GAAmB,EACvB,GAAsB,oBAAX5K,OACP,IACI,IAAMjD,EAAUU,OAAOyC,eAAe,GAAI,UAAW,CACjDuB,IAAK,WACDmJ,GAAmB,KAG3B5K,OAAOyD,iBAAiB,OAAQ1G,EAASA,GACzCiD,OAAOwD,oBAAoB,OAAQzG,EAASA,GAEhD,MAAOzI,IACHsW,GAAmB,EAI3B,IAAMC,EAAiC,CACnC3N,MAAM,GAEJ4N,EAAyB,GACzBC,EAAgB,GAChBC,EAAyB,IAAIC,OAAO,IAAMpK,EAAqB,uBAC/DqK,EAA+BjK,EAAW,sBAChD,SAASkK,EAAkB9H,EAAW+H,GAClC,IAAMC,GAAkBD,EAAoBA,EAAkB/H,GAAaA,GAAazC,EAClF0K,GAAiBF,EAAoBA,EAAkB/H,GAAaA,GAAa1C,EACjFlC,EAASoC,EAAqBwK,EAC9BE,EAAgB1K,EAAqByK,EAC3CR,EAAuBzH,GAAa,GACpCyH,EAAuBzH,GAAvB,MAA+C5E,EAC/CqM,EAAuBzH,GAAvB,KAA8CkI,EAElD,SAAS1M,EAAiBuC,EAASoK,EAAMC,GACrC,IAAMC,EAAsBD,GAAgBA,EAAaE,KAAQpL,EAC3DqL,EAAyBH,GAAgBA,EAAaI,IAAOrL,EAC7DsL,EAA4BL,GAAgBA,EAAaM,WAAc,iBACvEC,EAAuCP,GAAgBA,EAAaQ,OAAU,qBAC9EC,EAA6BjL,EAAWyK,GACxCS,EAA4B,IAAMT,EAAqB,IAGvDrT,EAAa,SAAUlB,EAAM2C,EAAQqI,GAGvC,IAAIhL,EAAKiV,UAAT,CAGA,IAAMxS,EAAWzC,EAAKZ,SACE,iBAAbqD,GAAyBA,EAASyS,cAEzClV,EAAKZ,SAAW,SAAC4L,GAAD,OAAWvI,EAASyS,YAAYlK,IAChDhL,EAAKqT,iBAAmB5Q,GAG5BzC,EAAKH,OAAOG,EAAM2C,EAAQ,CAACqI,IAC3B,IAAMpF,EAAU5F,EAAK4F,QACjBA,GAA8B,iBAAZA,GAAwBA,EAAQuP,MAKlDxS,EAAO8R,GAAuBzO,KAAKrD,EAAQqI,EAAM5K,KADhCJ,EAAKqT,iBAAmBrT,EAAKqT,iBAAmBrT,EAAKZ,SACLwG,KAInEwP,EAA0B,SAAUpK,GAItC,GADAA,EAAQA,GAASf,EAAQe,MACzB,CAKA,IAAMrI,EAASpE,MAAQyM,EAAMrI,QAAUsH,EACjCoL,EAAQ1S,EAAOgR,EAAuB3I,EAAM5K,MAA7B,OACrB,GAAIiV,EAGA,GAAqB,IAAjBA,EAAM7Y,OACN0E,EAAWmU,EAAM,GAAI1S,EAAQqI,QAO7B,IADA,IAAMsK,EAAYD,EAAMlM,QACf1M,EAAI,EAAGA,EAAI6Y,EAAU9Y,UACtBwO,IAAiD,IAAxCA,EAAM+I,IADetX,IAIlCyE,EAAWoU,EAAU7Y,GAAIkG,EAAQqI,KAM3CuK,EAAiC,SAAUvK,GAI7C,GADAA,EAAQA,GAASf,EAAQe,MACzB,CAKA,IAAMrI,EAASpE,MAAQyM,EAAMrI,QAAUsH,EACjCoL,EAAQ1S,EAAOgR,EAAuB3I,EAAM5K,MAA7B,MACrB,GAAIiV,EAGA,GAAqB,IAAjBA,EAAM7Y,OACN0E,EAAWmU,EAAM,GAAI1S,EAAQqI,QAO7B,IADA,IAAMsK,EAAYD,EAAMlM,QACf1M,EAAI,EAAGA,EAAI6Y,EAAU9Y,UACtBwO,IAAiD,IAAxCA,EAAM+I,IADetX,IAIlCyE,EAAWoU,EAAU7Y,GAAIkG,EAAQqI,KAKjD,SAASwK,EAAwB9J,EAAK4I,GAClC,IAAK5I,EACD,OAAO,EAEX,IAAI+J,GAAoB,EACpBnB,QAAsCrT,IAAtBqT,EAAavO,OAC7B0P,EAAoBnB,EAAavO,MAErC,IAAM2P,EAAkBpB,GAAgBA,EAAaqB,GACjDzX,GAAiB,EACjBoW,QAAwCrT,IAAxBqT,EAAasB,SAC7B1X,EAAiBoW,EAAasB,QAElC,IAAIC,GAAe,EACfvB,QAAoCrT,IAApBqT,EAAawB,KAC7BD,EAAevB,EAAawB,IAGhC,IADA,IAAI9I,EAAQtB,EACLsB,IAAUA,EAAM9N,eAAeqV,IAClCvH,EAAQhE,EAAqBgE,GAMjC,IAJKA,GAAStB,EAAI6I,KAEdvH,EAAQtB,IAEPsB,EACD,OAAO,EAEX,GAAIA,EAAM+H,GACN,OAAO,EAEX,IAWIgB,EAXE9B,EAAoBK,GAAgBA,EAAaL,kBAGjD+B,EAAW,GACXC,EAAyBjJ,EAAM+H,GAA8B/H,EAAMuH,GACnE2B,EAA4BlJ,EAAMlD,EAAW2K,IAC/CzH,EAAMyH,GACJ0B,EAAkBnJ,EAAMlD,EAAW6K,IACrC3H,EAAM2H,GACJyB,EAA2BpJ,EAAMlD,EAAW+K,IAC9C7H,EAAM6H,GAUV,SAASwB,EAA0BzQ,EAAS0Q,GACxC,OAAK7C,GAAuC,iBAAZ7N,GAAwBA,IAI3CA,EAAQ2Q,QAEhB9C,GAAqB6C,EAGH,kBAAZ1Q,EACA,CAAE2Q,QAAS3Q,EAAS0Q,SAAS,GAEnC1Q,EAGkB,iBAAZA,IAA4C,IAApBA,EAAQ0Q,QAChChQ,OAAOkQ,OAAOlQ,OAAOkQ,OAAO,GAAI5Q,GAAU,CAAE0Q,SAAS,IAEzD1Q,EALI,CAAE0Q,SAAS,GANX1Q,EAhBX0O,GAAgBA,EAAamC,UAC7BV,EAA6B/I,EAAMlD,EAAWwK,EAAamC,UACvDzJ,EAAMsH,EAAamC,UA2B3B,IAsDM9U,EAAiB8T,EAtDM,SAAUzV,GAGnC,IAAIgW,EAASU,WAGb,OAAOT,EAAuBjQ,KAAKgQ,EAASrT,OAAQqT,EAAS9J,UAAW8J,EAASO,QAAUhB,EAAiCH,EAAyBY,EAASpQ,UAuClI,SAAU5F,GACtC,OAAOiW,EAAuBjQ,KAAKgQ,EAASrT,OAAQqT,EAAS9J,UAAWlM,EAAKH,OAAQmW,EAASpQ,UAS5F9D,EAAe2T,EA/CM,SAAUzV,GAIjC,IAAKA,EAAKiV,UAAW,CACjB,IACI0B,EADEC,EAAmBjD,EAAuB3T,EAAKkM,WAEjD0K,IACAD,EAAkBC,EAAiB5W,EAAKuW,QAAU/M,EAAWC,IAEjE,IAAMoN,EAAgBF,GAAmB3W,EAAK2C,OAAOgU,GACrD,GAAIE,EACA,IAAK,IAAIpa,EAAI,EAAGA,EAAIoa,EAAcra,OAAQC,IAEtC,GADqBoa,EAAcpa,KACduD,EAAM,CACvB6W,EAAcnG,OAAOjU,EAAG,GAExBuD,EAAKiV,WAAY,EACY,IAAzB4B,EAAcra,SAGdwD,EAAK8W,YAAa,EAClB9W,EAAK2C,OAAOgU,GAAmB,MAEnC,OAQhB,GAAK3W,EAAK8W,WAGV,OAAOZ,EAA0BlQ,KAAKhG,EAAK2C,OAAQ3C,EAAKkM,UAAWlM,EAAKuW,QAAUhB,EAAiCH,EAAyBpV,EAAK4F,UAQvH,SAAU5F,GACpC,OAAOkW,EAA0BlQ,KAAKhG,EAAK2C,OAAQ3C,EAAKkM,UAAWlM,EAAKH,OAAQG,EAAK4F,UASnFmR,EAAWzC,GAAgBA,EAAa0C,KAAQ1C,EAAa0C,KAL7B,SAAUhX,EAAMyC,GAClD,IAAMwU,SAAwBxU,EAC9B,MAA2B,aAAnBwU,GAAiCjX,EAAKZ,WAAaqD,GACnC,WAAnBwU,GAA+BjX,EAAKqT,mBAAqB5Q,GAG5DyU,EAAoB9Y,KAAK0L,EAAW,wBACpCqN,EAAgBlN,EAAQH,EAAW,mBACnCsN,EAAkB,SAAUC,EAAgBC,EAAWC,EAAkBC,GAAuD,IAAvC3B,EAAuC,wDAAjBY,EAAiB,wDAClI,OAAO,WACH,IAAM9T,EAASpE,MAAQ0L,EACnBiC,EAAYzM,UAAU,GACtB6U,GAAgBA,EAAamD,oBAC7BvL,EAAYoI,EAAamD,kBAAkBvL,IAE/C,IAAIzJ,EAAWhD,UAAU,GACzB,IAAKgD,EACD,OAAO4U,EAAelS,MAAM5G,KAAMkB,WAEtC,GAAIiL,GAAwB,sBAAdwB,EAEV,OAAOmL,EAAelS,MAAM5G,KAAMkB,WAKtC,IAAIiY,GAAgB,EACpB,GAAwB,mBAAbjV,EAAyB,CAChC,IAAKA,EAASyS,YACV,OAAOmC,EAAelS,MAAM5G,KAAMkB,WAEtCiY,GAAgB,EAEpB,IAAIhC,GAAoBA,EAAgB2B,EAAgB5U,EAAUE,EAAQlD,WAA1E,CAGA,IAAM6W,EAAU7C,KAAsB0D,IAAuD,IAAtCA,EAAcpJ,QAAQ7B,GACvEtG,EAAUyQ,EAA0B5W,UAAU,GAAI6W,GACxD,GAAIY,EAEA,IAAK,IAAIza,EAAI,EAAGA,EAAIya,EAAkB1a,OAAQC,IAC1C,GAAIyP,IAAcgL,EAAkBza,GAChC,OAAI6Z,EACOe,EAAerR,KAAKrD,EAAQuJ,EAAWzJ,EAAUmD,GAGjDyR,EAAelS,MAAM5G,KAAMkB,WAKlD,IAAM8W,IAAW3Q,IAAqC,kBAAZA,GAA+BA,EAAQ2Q,SAC3EpB,KAAOvP,GAA8B,iBAAZA,IAAuBA,EAAQuP,KACxDpW,EAAOX,KAAKa,QACd2X,EAAmBjD,EAAuBzH,GACzC0K,IACD5C,EAAkB9H,EAAW+H,GAC7B2C,EAAmBjD,EAAuBzH,IAE9C,IAkBI7M,EAlBEsX,EAAkBC,EAAiBL,EAAU/M,EAAWC,GAC1DoN,EAAgBlU,EAAOgU,GACvBD,GAAa,EACjB,GAAIG,GAGA,GADAH,GAAa,EACTxY,EACA,IAAK,IAAIzB,EAAI,EAAGA,EAAIoa,EAAcra,OAAQC,IACtC,GAAIsa,EAAQF,EAAcpa,GAAIgG,GAE1B,YAMZoU,EAAgBlU,EAAOgU,GAAmB,GAG9C,IAAMgB,EAAkBhV,EAAO2N,YAAP,KAClBsH,EAAehE,EAAc+D,GAC/BC,IACAvY,EAASuY,EAAa1L,IAErB7M,IACDA,EAASsY,EAAkBL,GACtBrD,EAAoBA,EAAkB/H,GAAaA,IAI5D8J,EAASpQ,QAAUA,EACfuP,IAIAa,EAASpQ,QAAQuP,MAAO,GAE5Ba,EAASrT,OAASA,EAClBqT,EAASO,QAAUA,EACnBP,EAAS9J,UAAYA,EACrB8J,EAASU,WAAaA,EACtB,IAAM5V,EAAO2U,EAAoB/B,OAAiCzS,EAE9DH,IACAA,EAAKkV,SAAWA,GAEpB,IAAMhW,EAAOjB,EAAK8Y,kBAAkBxY,EAAQoD,EAAU3B,EAAMyW,EAAkBC,GA+B9E,OA5BAxB,EAASrT,OAAS,KAEd7B,IACAA,EAAKkV,SAAW,MAIhBb,IACAvP,EAAQuP,MAAO,IAEZ1B,GAA4C,kBAAjBzT,EAAK4F,WAGnC5F,EAAK4F,QAAUA,GAEnB5F,EAAK2C,OAASA,EACd3C,EAAKuW,QAAUA,EACfvW,EAAKkM,UAAYA,EACbwL,IAEA1X,EAAKqT,iBAAmB5Q,GAEvBgU,EAIDI,EAAciB,QAAQ9X,GAHtB6W,EAAcxR,KAAKrF,GAKnB6V,EACOlT,OADX,KA6IR,OAxIAqK,EAAMuH,GAAsB6C,EAAgBnB,EAAwBjB,EAA2BrT,EAAgBG,EAAc+T,GACzHE,IACA/I,EAAK,gBAA2BoK,EAAgBrB,EAvWlB,qBAgNJ,SAAU/V,GACpC,OAAO+V,EAA2B/P,KAAKgQ,EAASrT,OAAQqT,EAAS9J,UAAWlM,EAAKH,OAAQmW,EAASpQ,WAsJgC9D,EAAc+T,GAAc,IAElK7I,EAAMyH,GAAyB,WAC3B,IAAM9R,EAASpE,MAAQ0L,EACnBiC,EAAYzM,UAAU,GACtB6U,GAAgBA,EAAamD,oBAC7BvL,EAAYoI,EAAamD,kBAAkBvL,IAE/C,IAAMtG,EAAUnG,UAAU,GACpB8W,IAAW3Q,IAAqC,kBAAZA,GAA+BA,EAAQ2Q,SAC3E9T,EAAWhD,UAAU,GAC3B,IAAKgD,EACD,OAAOyT,EAA0B/Q,MAAM5G,KAAMkB,WAEjD,IAAIiW,GACCA,EAAgBQ,EAA2BzT,EAAUE,EAAQlD,WADlE,CAIA,IACIkX,EADEC,EAAmBjD,EAAuBzH,GAE5C0K,IACAD,EAAkBC,EAAiBL,EAAU/M,EAAWC,IAE5D,IAAMoN,EAAgBF,GAAmBhU,EAAOgU,GAChD,GAAIE,EACA,IAAK,IAAIpa,EAAI,EAAGA,EAAIoa,EAAcra,OAAQC,IAAK,CAC3C,IAAMsb,EAAelB,EAAcpa,GACnC,GAAIsa,EAAQgB,EAActV,GAkBtB,OAjBAoU,EAAcnG,OAAOjU,EAAG,GAExBsb,EAAa9C,WAAY,EACI,IAAzB4B,EAAcra,SAGdub,EAAajB,YAAa,EAC1BnU,EAAOgU,GAAmB,KAID,iBAAdzK,IAEPvJ,EADyB+G,EAAqB,cAAgBwC,GACnC,OAGnC6L,EAAahZ,KAAKiD,WAAW+V,GACzBlC,EACOlT,OAEX,EAQZ,OAAOuT,EAA0B/Q,MAAM5G,KAAMkB,aAEjDuN,EAAM2H,GAA4B,WAC9B,IAAMhS,EAASpE,MAAQ0L,EACnBiC,EAAYzM,UAAU,GACtB6U,GAAgBA,EAAamD,oBAC7BvL,EAAYoI,EAAamD,kBAAkBvL,IAI/C,IAFA,IAAM0I,EAAY,GACZS,EAAQ2C,EAAerV,EAAQsR,EAAoBA,EAAkB/H,GAAaA,GAC/EzP,EAAI,EAAGA,EAAI4Y,EAAM7Y,OAAQC,IAAK,CACnC,IAAMuD,EAAOqV,EAAM5Y,GAEnBmY,EAAUvP,KADKrF,EAAKqT,iBAAmBrT,EAAKqT,iBAAmBrT,EAAKZ,UAGxE,OAAOwV,GAEX5H,EAAM6H,GAAuC,WACzC,IAAMlS,EAASpE,MAAQ0L,EACnBiC,EAAYzM,UAAU,GAC1B,GAAKyM,EAiBA,CACGoI,GAAgBA,EAAamD,oBAC7BvL,EAAYoI,EAAamD,kBAAkBvL,IAE/C,IAAM0K,EAAmBjD,EAAuBzH,GAChD,GAAI0K,EAAkB,CAClB,IAEMvB,EAAQ1S,EAFUiU,EAAgB,OAGlCqB,EAAetV,EAFUiU,EAAgB,MAG/C,GAAIvB,EAEA,IADA,IAAM6C,EAAc7C,EAAMlM,QACjB1M,EAAI,EAAGA,EAAIyb,EAAY1b,OAAQC,IAAK,CACzC,IAAMuD,EAAOkY,EAAYzb,GAEzB8B,KAAKkW,GAAuBzO,KAAKzH,KAAM2N,EADxBlM,EAAKqT,iBAAmBrT,EAAKqT,iBAAmBrT,EAAKZ,SACRY,EAAK4F,SAGzE,GAAIqS,EAEA,IADA,IAAMC,EAAcD,EAAa9O,QACxB1M,EAAI,EAAGA,EAAIyb,EAAY1b,OAAQC,IAAK,CACzC,IAAMuD,EAAOkY,EAAYzb,GAEzB8B,KAAKkW,GAAuBzO,KAAKzH,KAAM2N,EADxBlM,EAAKqT,iBAAmBrT,EAAKqT,iBAAmBrT,EAAKZ,SACRY,EAAK4F,eAxCjE,CAEZ,IADA,IAAMuS,EAAO7R,OAAO6R,KAAKxV,GAChBlG,EAAI,EAAGA,EAAI0b,EAAK3b,OAAQC,IAAK,CAClC,IACM2b,EAAQvE,EAAuBwE,KADxBF,EAAK1b,IAEd6b,EAAUF,GAASA,EAAM,GAKzBE,GAAuB,mBAAZA,GACX/Z,KAAKsW,GAAqC7O,KAAKzH,KAAM+Z,GAI7D/Z,KAAKsW,GAAqC7O,KAAKzH,KAAM,kBA8BzD,GAAIsX,EACA,OAAOtX,MAIfmK,EAAsBsE,EAAMuH,GAAqB0B,GACjDvN,EAAsBsE,EAAMyH,GAAwByB,GAChDE,GACA1N,EAAsBsE,EAAM6H,GAAsCuB,GAElED,GACAzN,EAAsBsE,EAAM2H,GAA2BwB,IAEpD,EAGX,IADA,IAAIoC,EAAU,GACL9b,EAAI,EAAGA,EAAI4X,EAAK7X,OAAQC,IAC7B8b,EAAQ9b,GAAK+Y,EAAwBnB,EAAK5X,GAAI6X,GAElD,OAAOiE,EAEX,SAASP,EAAerV,EAAQuJ,GAC5B,IAAKA,EAAW,CACZ,IAAMsM,EAAa,GACnB,IAAK,IAAI7M,KAAQhJ,EAAQ,CACrB,IAAMyV,EAAQvE,EAAuBwE,KAAK1M,GACtC2M,EAAUF,GAASA,EAAM,GAC7B,GAAIE,KAAapM,GAAaoM,IAAYpM,GAAY,CAClD,IAAMmJ,EAAQ1S,EAAOgJ,GACrB,GAAI0J,EACA,IAAK,IAAI5Y,EAAI,EAAGA,EAAI4Y,EAAM7Y,OAAQC,IAC9B+b,EAAWnT,KAAKgQ,EAAM5Y,KAKtC,OAAO+b,EAEX,IAAI7B,EAAkBhD,EAAuBzH,GACxCyK,IACD3C,EAAkB9H,GAClByK,EAAkBhD,EAAuBzH,IAE7C,IAAMuM,EAAoB9V,EAAOgU,EAAe,OAC1C+B,EAAmB/V,EAAOgU,EAAe,MAC/C,OAAK8B,EAIMC,EAAmBD,EAAkBE,OAAOD,GAC/CD,EAAkBtP,QAJfuP,EAAmBA,EAAiBvP,QAAU,GAO7D,SAASnB,EAAoBtK,EAAQuQ,GACjC,IAAM2K,EAAQlb,EAAM,MAChBkb,GAASA,EAAMrS,WACf0H,EAAIrG,YAAYgR,EAAMrS,UAAW,4BAA4B,SAAC9D,GAAD,OAAc,SAAUqD,EAAMU,GACvFV,EAAKiO,IAAgC,EAIrCtR,GAAYA,EAAS0C,MAAMW,EAAMU,OAY7C,SAASoC,EAAeqF,EAAKtL,EAAQkW,EAAYC,EAAQC,GACrD,IAAMzR,EAASlJ,KAAKH,WAAW6a,GAC/B,IAAInW,EAAO2E,GAAX,CAGA,IAAM0R,EAAiBrW,EAAO2E,GAAU3E,EAAOmW,GAC/CnW,EAAOmW,GAAU,SAAUjb,EAAMob,EAAMrT,GAoBnC,OAnBIqT,GAAQA,EAAK1S,WACbwS,EAAUG,SAAQ,SAAU9Z,GACxB,IAAMC,EAAS,UAAGwZ,EAAH,YAAiBC,EAAjB,MAA8B1Z,EACvCmH,EAAY0S,EAAK1S,UACvB,GAAIA,EAAUrH,eAAeE,GAAW,CACpC,IAAM+Z,EAAalL,EAAI7F,+BAA+B7B,EAAWnH,GAC7D+Z,GAAcA,EAAWrc,OACzBqc,EAAWrc,MAAQmR,EAAIzF,oBAAoB2Q,EAAWrc,MAAOuC,GAC7D4O,EAAItF,kBAAkBsQ,EAAK1S,UAAWnH,EAAU+Z,IAE3C5S,EAAUnH,KACfmH,EAAUnH,GAAY6O,EAAIzF,oBAAoBjC,EAAUnH,GAAWC,SAGlEkH,EAAUnH,KACfmH,EAAUnH,GAAY6O,EAAIzF,oBAAoBjC,EAAUnH,GAAWC,OAIxE2Z,EAAehT,KAAKrD,EAAQ9E,EAAMob,EAAMrT,IAEnDqI,EAAIvF,sBAAsB/F,EAAOmW,GAASE,IAU9C,IAwGMI,EAAmB,CACrB,4BACA,aACA,aACA,eACA,sBACA,cACA,eACA,cACA,eACA,oBACA,4BACA,kBACA,aACA,iBACA,UACA,iBACA,UACA,SACA,QACA,WACA,WACA,WACA,mBACA,UACA,qBACA,SACA,gBACA,qBACA,wBACA,0BAOEC,EAAyB,CAAC,YAAa,gBAAiB,YAAa,oBAAqB,mBA6D1FC,GAAkB,CAAC,QACnBC,GAAqB,CAAC,OAAQ,QAAS,QAAS,OAAQ,SAAU,SAAU,gBAC5EC,GAAoB,CAAC,SAAU,SAAU,SACzCC,GAA2B,CAC7B,YAAa,WAAY,QAAS,QAAS,OAAQ,WAAY,UAAW,UAC1E,oBAEEC,GAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,GAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,GAAmB,CAAC,QAAS,WAC7BC,GApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,s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","file":"polyfills.17bb942bdd44221ee6b0.js","sourcesContent":["var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","/**\n* @license Angular v10.1.0-next.6+7.sha-aaa1d8e\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}((function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) {\n            performance && performance['mark'] && performance['mark'](name);\n        }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) {\n            return symbolPrefix + name;\n        }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() {\n                return _currentZoneFrame.zone;\n            }\n            static get currentTask() {\n                return _currentTask;\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() {\n                return this._parent;\n            }\n            get name() {\n                return this._name;\n            }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt =\n                    zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone =\n                    zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() {\n                return this._zone;\n            }\n            get state() {\n                return this._state;\n            }\n            cancelScheduleRequest() {\n                this._transitionTo(notScheduled, scheduling);\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () {\n                            return this[originalInstanceKey][prop];\n                        }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () {\n                    return patchDelegate(this, arguments);\n                };\n                attachOriginToPatched(proto[name], delegate);\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () {\n                task.invoke.apply(this, arguments);\n            };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        if (!isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // and the rejected value is an Error object,\n                            // use the value instead of wrapping it.\n                            try {\n                                // Here we throws a new Error to print more readable error log\n                                // and if the value is not an error, zone.js builds an `Error`\n                                // Object here to attach the stack information.\n                                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                    (value && value.stack ? '\\n' + value.stack : ''));\n                            }\n                            catch (err) {\n                                uncaughtPromiseError = err;\n                            }\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', delegate => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', {\n                get: function () {\n                    passiveSupported = true;\n                }\n            });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function prepareEventNames(eventName, eventNameToString) {\n        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            /**\n             * This util function will build an option object with passive option\n             * to handle all possible input from the user.\n             */\n            function buildEventListenerOptions(options, passive) {\n                if (!passiveSupported && typeof options === 'object' && options) {\n                    // doesn't support passive but user want to pass an object as options.\n                    // this will not work on some old browser, so we just pass a boolean\n                    // as useCapture parameter\n                    return !!options.capture;\n                }\n                if (!passiveSupported || !passive) {\n                    return options;\n                }\n                if (typeof options === 'boolean') {\n                    return { capture: options, passive: true };\n                }\n                if (!options) {\n                    return { passive: true };\n                }\n                if (typeof options === 'object' && options.passive !== false) {\n                    return Object.assign(Object.assign({}, options), { passive: true });\n                }\n                return options;\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                    const options = buildEventListenerOptions(arguments[2], passive);\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                if (passive) {\n                                    return nativeListener.call(target, eventName, delegate, options);\n                                }\n                                else {\n                                    return nativeListener.apply(this, arguments);\n                                }\n                            }\n                        }\n                    }\n                    const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                    const once = options && typeof options === 'object' ? options.once : false;\n                    const zone = Zone.current;\n                    let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (!symbolEventNames) {\n                        prepareEventNames(eventName, eventNameToString);\n                        symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    }\n                    const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        if (!eventName) {\n            const foundTasks = [];\n            for (let prop in target) {\n                const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                let evtName = match && match[1];\n                if (evtName && (!eventName || evtName === eventName)) {\n                    const tasks = target[prop];\n                    if (tasks) {\n                        for (let i = 0; i < tasks.length; i++) {\n                            foundTasks.push(tasks[i]);\n                        }\n                    }\n                }\n            }\n            return foundTasks;\n        }\n        let symbolEventName = zoneSymbolEventNames$1[eventName];\n        if (!symbolEventName) {\n            prepareEventNames(eventName);\n            symbolEventName = zoneSymbolEventNames$1[eventName];\n        }\n        const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n        const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n        if (!captureFalseTasks) {\n            return captureTrueTasks ? captureTrueTasks.slice() : [];\n        }\n        else {\n            return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n                captureFalseTasks.slice();\n        }\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplayconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames: zoneSymbolEventNames$1,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR\n        });\n    });\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) {\n            return clearNative.call(window, task.data.handleId);\n        }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n})));\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/guide/browser-support\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/**\r\n * Web Animations `@angular/platform-browser/animations`\r\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\r\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\r\n */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n/**\r\n * By default, zone.js will patch all possible macroTask and DomEvents\r\n * user can disable parts of macroTask/DomEvents patch by setting following flags\r\n * because those flags need to be set before `zone.js` being loaded, and webpack\r\n * will put import in the top of bundle, so user need to create a separate file\r\n * in this directory (for example: zone-flags.ts), and put the following flags\r\n * into that file, and then add the following code before importing zone.js.\r\n * import './zone-flags.ts';\r\n *\r\n * The flags allowed in zone-flags.ts are listed here.\r\n *\r\n * The following flags will work for all browsers.\r\n *\r\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\r\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\r\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\r\n *\r\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\r\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\r\n *\r\n *  (window as any).__Zone_enable_cross_context_check = true;\r\n *\r\n */\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by default for Angular itself.\r\n */\r\nimport 'zone.js/dist/zone';\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;"],"sourceRoot":"webpack:///"}