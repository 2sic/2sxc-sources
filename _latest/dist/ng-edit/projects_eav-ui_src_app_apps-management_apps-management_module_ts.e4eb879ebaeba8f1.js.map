{"version":3,"mappings":"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","names":["appsManagementDialog","name","initContext","panelSize","panelClass","getComponent","AppsManagementNavComponent","Promise","createAppDialog","CreateAppComponent","t","createInheritedAppDialog","CreateInheritedAppComponent","appsManagementRoutes","path","component","DialogEntryComponent","data","dialog","children","redirectTo","pathMatch","EmptyRouteComponent","title","loadChildren","then","m","ImportAppModule","AppAdministrationModule","matcher","editRoot","EditModule","refreshEditRoot","RefreshEditModule","AppsManagementRoutingModule","RouterModule","AppsManagementModule","Context","AppsListService","ZoneService","FeaturesConfigService","SxcInsightsService","DialogService","AppDialogConfigService","imports","SharedComponentsModule","MatDialogModule","CommonModule","SxcGridModule","MatButtonModule","MatIconModule","MatSlideToggleModule","MatTabsModule","MatRippleModule","EcoFabSpeedDialModule","MatCardModule","FormsModule","MatInputModule","MatMenuModule","ReactiveFormsModule","MatSelectModule","MatSnackBarModule","MatExpansionModule","constructor","http","context","dnnContext","this","apiUrl","$2sxc","getAll","get","webApiAppRoot","params","zoneId","toString","getInheritable","create","inheritAppId","post","Object","delete","appId","flushCache","i0","factory","webApiLicense","saveFeatures","featuresStates","webApiFeatures","getLicenses","uploadLicense","file","formData","FormData","append","pipe","map","info","Success","Messages","MessageType","FileUploadMessageTypes","Text","Message","retrieveLicense","activatePageLog","duration","webApiLogRoot"],"sources":["./projects/eav-ui/src/app/apps-management/apps-management-nav/apps-management-dialog.config.ts","./projects/eav-ui/src/app/apps-management/create-app/create-app-dialog.config.ts","./projects/eav-ui/src/app/apps-management/create-inherited-app/create-inherited-app-dialog.config.ts","./projects/eav-ui/src/app/apps-management/apps-management-routing.module.ts","./projects/eav-ui/src/app/apps-management/apps-management.module.ts","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/apps-management/services/features-config.service.ts","./projects/eav-ui/src/app/apps-management/services/sxc-insights.service.ts"],"sourcesContent":["import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const appsManagementDialog: DialogConfig = {\r\n  name: 'APPS_MANAGEMENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { AppsManagementNavComponent } = await import('./apps-management-nav.component');\r\n    return AppsManagementNavComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const createAppDialog: DialogConfig = {\r\n  name: 'CREATE_APP_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { CreateAppComponent } = await import('./create-app.component');\r\n    return CreateAppComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const createInheritedAppDialog: DialogConfig = {\r\n  name: 'CREATE_INHERITED_APP_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'small',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { CreateInheritedAppComponent } = await import('./create-inherited-app.component');\r\n    return CreateInheritedAppComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { editRoot, refreshEditRoot } from '../edit/edit.matcher';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { EmptyRouteComponent } from '../shared/components/empty-route/empty-route.component';\r\nimport { appsManagementDialog } from './apps-management-nav/apps-management-dialog.config';\r\nimport { createAppDialog } from './create-app/create-app-dialog.config';\r\nimport { createInheritedAppDialog } from './create-inherited-app/create-inherited-app-dialog.config';\r\n\r\nconst appsManagementRoutes: Routes = [\r\n  {\r\n    path: '', component: DialogEntryComponent, data: { dialog: appsManagementDialog }, children: [\r\n      { path: '', redirectTo: 'system', pathMatch: 'full' },\r\n      { path: 'system', component: EmptyRouteComponent, data: { title: 'System Info' } },\r\n      {\r\n        path: 'list', component: EmptyRouteComponent, children: [\r\n          {\r\n            path: 'import',\r\n            loadChildren: () => import('../import-app/import-app.module').then(m => m.ImportAppModule)\r\n          },\r\n          { path: 'create', component: DialogEntryComponent, data: { dialog: createAppDialog } },\r\n          { path: 'create-inherited', component: DialogEntryComponent, data: { dialog: createInheritedAppDialog } },\r\n          {\r\n            path: ':appId',\r\n            loadChildren: () => import('../app-administration/app-administration.module').then(m => m.AppAdministrationModule)\r\n          },\r\n          {\r\n            matcher: editRoot,\r\n            loadChildren: () => import('../edit/edit.module').then(m => m.EditModule),\r\n          },\r\n          {\r\n            matcher: refreshEditRoot,\r\n            loadChildren: () => import('../edit/refresh-edit.module').then(m => m.RefreshEditModule)\r\n          },\r\n        ],\r\n        data: { title: 'Apps in this Zone' },\r\n      },\r\n      { path: 'languages', component: EmptyRouteComponent, data: { title: 'Zone Languages' } },\r\n      { path: 'license', component: EmptyRouteComponent, data: { title: 'Extensions / Features' } },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appsManagementRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppsManagementRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\r\nimport { AppDialogConfigService } from '../app-administration/services';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { Context } from '../shared/services/context';\r\nimport { DialogService } from '../shared/services/dialog.service';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { AppsListActionsComponent } from './apps-list/apps-list-actions/apps-list-actions.component';\r\nimport { AppsListShowComponent } from './apps-list/apps-list-show/apps-list-show.component';\r\nimport { AppsListComponent } from './apps-list/apps-list.component';\r\nimport { AppsManagementNavComponent } from './apps-management-nav/apps-management-nav.component';\r\nimport { AppsManagementRoutingModule } from './apps-management-routing.module';\r\nimport { CreateAppComponent } from './create-app/create-app.component';\r\nimport { CreateInheritedAppComponent } from './create-inherited-app/create-inherited-app.component';\r\nimport { ActiveFeaturesCountPipe } from './licence-info/active-features-count.pipe';\r\nimport { AgGridHeightDirective } from './licence-info/ag-grid-height.directive';\r\nimport { FeatureDetailsDialogComponent } from './licence-info/feature-details-dialog/feature-details-dialog.component';\r\nimport { FeaturesListEnabledReasonComponent } from './licence-info/features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from './licence-info/features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesStatusComponent } from './licence-info/features-status/features-status.component';\r\nimport { LicenseInfoComponent } from './licence-info/license-info.component';\r\nimport { LicensesOrderPipe } from './licence-info/licenses-order.pipe';\r\nimport { AppsListService } from './services/apps-list.service';\r\nimport { FeaturesConfigService } from './services/features-config.service';\r\nimport { SxcInsightsService } from './services/sxc-insights.service';\r\nimport { ZoneService } from './services/zone.service';\r\nimport { SiteLanguagesStatusComponent } from './site-languages/site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesComponent } from './site-languages/site-languages.component';\r\nimport { SystemInfoComponent } from './system-info/system-info.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppsManagementNavComponent,\r\n    AppsListComponent,\r\n    AppsListShowComponent,\r\n    AppsListActionsComponent,\r\n    FeaturesListEnabledComponent,\r\n    SiteLanguagesComponent,\r\n    SiteLanguagesStatusComponent,\r\n    CreateAppComponent,\r\n    CreateInheritedAppComponent,\r\n    SystemInfoComponent,\r\n    FeaturesListEnabledReasonComponent,\r\n    FeaturesStatusComponent,\r\n    LicenseInfoComponent,\r\n    LicensesOrderPipe,\r\n    AgGridHeightDirective,\r\n    ActiveFeaturesCountPipe,\r\n    FeatureDetailsDialogComponent,\r\n  ],\r\n  imports: [\r\n    AppsManagementRoutingModule,\r\n    SharedComponentsModule,\r\n    MatDialogModule,\r\n    CommonModule,\r\n    SxcGridModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    MatTabsModule,\r\n    MatRippleModule,\r\n    EcoFabSpeedDialModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatExpansionModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    AppsListService,\r\n    ZoneService,\r\n    FeaturesConfigService,\r\n    SxcInsightsService,\r\n    DialogService,\r\n    AppDialogConfigService,\r\n  ],\r\n})\r\nexport class AppsManagementModule { }\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\n\r\n@Injectable()\r\nexport class AppsListService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  private apiUrl(name: string) {\r\n    return this.dnnContext.$2sxc.http.apiUrl(name);\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'list'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return this.http.get<App[]>(this.apiUrl(webApiAppRoot + 'InheritableApps'), {\r\n      params: { zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRoot + 'app'), {}, {\r\n      params: {\r\n        zoneId: this.context.zoneId.toString(),\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRoot + 'app'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.http.get<null>(this.apiUrl(webApiAppRoot + 'flushcache'), {\r\n      params: { zoneId: this.context.zoneId.toString(), appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { FeatureState } from '../models/feature.model';\r\nimport { License, LicenseDownloadInfo, LicenseUploadInfo } from '../models/license.model';\r\n\r\nconst webApiFeatures = 'admin/feature/';\r\nconst webApiLicense = 'sys/license/';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  saveFeatures(featuresStates: FeatureState[]): Observable<null> {\r\n    return this.http.post<null>(this.dnnContext.$2sxc.http.apiUrl(webApiFeatures + 'SaveNew'), featuresStates);\r\n  }\r\n\r\n  getLicenses(): Observable<License[]> {\r\n    return this.http.get<License[]>(this.dnnContext.$2sxc.http.apiUrl(webApiLicense + 'Summary'));\r\n  }\r\n\r\n  uploadLicense(file: File): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<LicenseUploadInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiLicense + 'Upload'), formData).pipe(\r\n      map(info => {\r\n        const result: FileUploadResult = {\r\n          Success: info.Success,\r\n          Messages: [{\r\n            MessageType: info.Success ? FileUploadMessageTypes.Success : FileUploadMessageTypes.Error,\r\n            Text: `License ${info.Success ? 'uploaded' : 'upload failed'}: ${info.Message}`,\r\n          }],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  retrieveLicense(): Observable<LicenseDownloadInfo> {\r\n    return this.http.get<LicenseDownloadInfo>(this.dnnContext.$2sxc.http.apiUrl(webApiLicense + 'Retrieve'));\r\n  }\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst webApiLogRoot = 'sys/log/';\r\n\r\n@Injectable()\r\nexport class SxcInsightsService {\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext) { }\r\n\r\n  activatePageLog(duration: number) {\r\n    return this.http.get<string>(this.dnnContext.$2sxc.http.apiUrl(webApiLogRoot + 'EnableDebug'), {\r\n      params: { duration: duration.toString() }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_eav-ui_src_app_apps-management_apps-management_module_ts.e4eb879ebaeba8f1.js"}