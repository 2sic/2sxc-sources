{"version":3,"file":"default-projects_eav-ui_src_app_shared_fields_content-types-fields_service_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/services/index.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/shared/fields/content-types-fields.service.ts","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["export * from './dialog-config-global.service';\r\nexport * from './content-types.service';\r\nexport * from './export-app-parts.service';\r\nexport * from './export-app.service';\r\nexport * from './import-app-parts.service';\r\nexport * from './pipelines.service';\r\nexport * from './views.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.getHttpApiUrl<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.getHttpApiUrl<null>(webApiQueryClone, {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getHttpApiUrl<View[]>(webApiViews, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.getHttpApiUrl<boolean>(webApiViewDelete, {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.getHttpApiUrl<Polymorphism>(webApiViewPolymorph, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.getHttpApiUrl<ViewUsage[]>(webApiViewUsage, {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { webApiTypeRoot } from '../../app-administration/services';\r\nimport { HttpServiceBase } from '../services/http-service-base';\r\nimport { Field, FieldInputTypeOption } from './field.model';\r\nimport { InputTypeCatalog } from './input-type-catalog';\r\nimport { InputTypeMetadata } from './input-type-metadata.model';\r\n\r\nexport const webApiFieldsAll = 'admin/field/all';\r\n\r\n// All WebApi paths - to easily search/find when looking for where these are used\r\nconst webApiDataTypes = 'admin/field/DataTypes';\r\nconst webApiReservedNames = 'admin/field/ReservedNames';\r\nconst webApiAddInheritedField = 'admin/field/AddInheritedField';\r\nconst webApiInputTypes = 'admin/field/InputTypes';\r\nconst webApiInputType = 'admin/field/InputType';\r\nconst webApiShare = 'admin/field/Share';\r\nconst webApiInherit = 'admin/field/Inherit';\r\nconst webApiSort = 'admin/field/Sort';\r\nconst webApiSetTitle = webApiTypeRoot + 'SetTitle';\r\nconst webApiRename = 'admin/field/Rename';\r\nconst webApiDelete = 'admin/field/Delete';\r\nconst webApiAdd = 'admin/field/Add';\r\nconst webApiFieldsGetShared = 'admin/field/GetSharedFields';\r\nconst webApiGetAncestors = 'admin/field/GetAncestors';\r\nconst webApiGetDescendants = 'admin/field/GetDescendants';\r\n\r\n\r\n@Injectable()\r\nexport class ContentTypesFieldsService extends HttpServiceBase {\r\n\r\n  protected paramsAppId(more: Record<string, string | number | boolean | ReadonlyArray<string | number | boolean>> = {}) {\r\n    return {\r\n      params: {\r\n        appid: this.appId,\r\n        ...more,\r\n      },\r\n    };\r\n  }\r\n\r\n  typeListRetrieve() {\r\n    return this.getHttpApiUrl<string[]>(webApiDataTypes, this.paramsAppId());\r\n  }\r\n\r\n  getInputTypesList() {\r\n    return this.getHttpApiUrl<InputTypeMetadata[]>(webApiInputTypes, this.paramsAppId())\r\n      .pipe(\r\n        map(inputConfigs => {\r\n          const inputTypeOptions = inputConfigs.map(config => ({\r\n            dataType: config.Type.substring(0, config.Type.indexOf('-')),\r\n            inputType: config.Type,\r\n            label: config.Label,\r\n            description: config.Description,\r\n            isDefault: config.IsDefault,\r\n            isObsolete: config.IsObsolete,\r\n            isRecommended: config.IsRecommended,\r\n            obsoleteMessage: config.ObsoleteMessage,\r\n            icon: config.IsDefault ? 'star' : config.IsRecommended ? 'star_outline' : null,\r\n          } satisfies FieldInputTypeOption));\r\n          return inputTypeOptions;\r\n        }),\r\n      );\r\n  }\r\n\r\n  getReservedNames() {\r\n    return this.getHttpApiUrl<Record<string, string>>(webApiReservedNames);\r\n  }\r\n\r\n  /** Get all fields for some content type */\r\n  getFields(contentTypeStaticName: string) {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsAll, this.paramsAppId({ staticName: contentTypeStaticName }))\r\n      .pipe(\r\n        map(fields => {\r\n          if (fields) {\r\n            for (const fld of fields) {\r\n              if (!fld.Metadata) continue;\r\n              const md = fld.Metadata;\r\n              const allMd = md.All;\r\n              const typeMd = md[fld.Type];\r\n              const inputMd = md[fld.InputType];\r\n              md.merged = { ...allMd, ...typeMd, ...inputMd };\r\n            }\r\n          }\r\n          return fields;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /** Get all possible sharable fields for a new sharing */\r\n  getShareableFields() {\r\n    return this.getHttpApiUrl<Field[]>(webApiFieldsGetShared, this.paramsAppId());\r\n  }\r\n\r\n  /**\r\n   * Get sharable fields which are possible for this attribute.\r\n   * Reason is that eg. a bool-attribute can only receive metadata from a bool attribute, etc.\r\n   * @param attributeId the existing attributeId which will receive the new metadata\r\n   */\r\n  getShareableFieldsFor(attributeId: number) {\r\n    return this.#getShareinfo(webApiFieldsGetShared, attributeId);\r\n    // return this.getHttp<Field[]>(this.apiUrl(webApiFieldsGetShared), this.paramsAppId({ attributeId }));\r\n  }\r\n\r\n  getAncestors(attributeId: number) {\r\n    return this.#getShareinfo(webApiGetAncestors, attributeId);\r\n  }\r\n\r\n  getDescendants(attributeId: number) {\r\n    return this.#getShareinfo(webApiGetDescendants, attributeId);\r\n  }\r\n\r\n  #getShareinfo(endpoint: string, attributeId: number) {\r\n    return this.getHttpApiUrl<Field[]>(endpoint, this.paramsAppId({ attributeId }));\r\n  }\r\n\r\n  addInheritedField(targetContentTypeId: number, sourceType: string, sourceFieldGuid: string /* guid */, name: string) {\r\n    return this.http.post<number>(this.apiUrl(webApiAddInheritedField), null, this.paramsAppId({\r\n      contentTypeId: targetContentTypeId.toString(),\r\n      sourceType,\r\n      sourceField: sourceFieldGuid,\r\n      name,\r\n    }));\r\n  }\r\n\r\n  share(attributeId: number, share: boolean = true) {\r\n    return this.http.post<null>(this.apiUrl(webApiShare), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        share,\r\n      },\r\n    });\r\n  }\r\n\r\n  inherit(attributeId: number, sourceFieldGuid: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiInherit), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        attributeId: attributeId.toString(),\r\n        inheritMetadataOf: sourceFieldGuid,\r\n      },\r\n    });\r\n  }\r\n\r\n  reOrder(idArray: number[], contentType: ContentType) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiSort), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        order: JSON.stringify(idArray),\r\n      },\r\n    });\r\n  }\r\n\r\n  setTitle(item: Field, contentType: ContentType) {\r\n    return this.http.post<null>(this.apiUrl(webApiSetTitle), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  rename(fieldId: number, contentTypeId: number, newName: string) {\r\n    return this.http.post<null>(this.apiUrl(webApiRename), null, {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentTypeId.toString(),\r\n        attributeId: fieldId.toString(),\r\n        newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(item: Field, contentType: ContentType) {\r\n    if (item.IsTitle)\r\n      throw new Error('Can\\'t delete Title');\r\n\r\n    return this.http.delete<boolean>(this.apiUrl(webApiDelete), {\r\n      params: {\r\n        appid: this.appId,\r\n        contentTypeId: contentType.Id.toString(),\r\n        attributeId: item.Id.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  add(newField: Partial<Field>, contentTypeId: number) {\r\n    return this.http.post<number>(this.apiUrl(webApiAdd), null, {\r\n      params: {\r\n        AppId: this.appId,\r\n        ContentTypeId: contentTypeId.toString(),\r\n        Id: newField.Id.toString(),\r\n        Type: newField.Type,\r\n        InputType: newField.InputType,\r\n        StaticName: newField.StaticName,\r\n        IsTitle: newField.IsTitle.toString(),\r\n        Index: newField.SortOrder.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputType(attributeId: number, field: string, inputType: Of<typeof InputTypeCatalog>) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiInputType), null, {\r\n      params: { appId: this.appId, attributeId, field, inputType }\r\n    });\r\n  }\r\n}\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["from","map","switchMap","toBase64","webApiEntityList","HttpServiceBase","webApiQueryImport","webApiQueryClone","webApiQueryDelete","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","getHttpApiUrl","params","appId","importQuery","file","pipe","fileBase64","http","post","apiUrl","AppId","ContentBase64","success","result","Success","Messages","clonePipeline","id","Id","toString","delete","__ngFactoryType__","factory","ɵfac","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","formData","FormData","append","zoneId","export","url","window","open","getPolymorphism","getUsage","guid","webApiTypeRoot","webApiFieldsAll","webApiDataTypes","webApiReservedNames","webApiAddInheritedField","webApiInputTypes","webApiInputType","webApiShare","webApiInherit","webApiSort","webApiSetTitle","webApiRename","webApiDelete","webApiAdd","webApiFieldsGetShared","webApiGetAncestors","webApiGetDescendants","ContentTypesFieldsService","paramsAppId","more","appid","typeListRetrieve","getInputTypesList","inputConfigs","inputTypeOptions","config","dataType","Type","substring","indexOf","inputType","label","Label","description","Description","isDefault","IsDefault","isObsolete","IsObsolete","isRecommended","IsRecommended","obsoleteMessage","ObsoleteMessage","icon","getReservedNames","getFields","contentTypeStaticName","staticName","fields","fld","Metadata","md","allMd","All","typeMd","inputMd","InputType","merged","getShareableFields","getShareableFieldsFor","attributeId","getShareinfo","getAncestors","getDescendants","#getShareinfo","endpoint","addInheritedField","targetContentTypeId","sourceType","sourceFieldGuid","name","contentTypeId","sourceField","share","inherit","inheritMetadataOf","reOrder","idArray","order","JSON","stringify","setTitle","item","rename","fieldId","newName","IsTitle","Error","add","newField","ContentTypeId","StaticName","Index","SortOrder","updateInputType","field","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}