{"version":3,"file":"default-projects_eav-ui_src_app_permissions_permissions_component_ts.80d96b76250af113.js","mappings":"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","names":["TrueFalseComponent","constructor","this","trueIcon","falseIcon","agInit","params","value","reverse","icon","refresh","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","VBU","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","MatIconModule","i1","encapsulation","PermissionsActionsComponent","deletePermission","onDelete","data","fesm2022_core","MatRippleModule","i2","_r1","ctx_r1","closeDialog","editPermission","permissions","gridOptions","PermissionsComponent","BaseWithChildDialogComponent","router","route","dialogRef","snackBar","super","permissions$","BehaviorSubject","undefined","buildGridOptions","targetType","parseInt","snapshot","paramMap","get","keyType","key","prefills","eavConstants","metadata","language","PermissionType","permissionsService","transient","PermissionsService","ngOnInit","fetchPermissions","subscriptions","add","childDialogClosed$","subscribe","viewModel$","combineLatest","pipe","map","ngOnDestroy","complete","close","getAll","next","permission","form","items","ContentTypeName","contentTypes","For","Target","Object","values","find","m","target","toString","TargetType","keyTypes","guid","Guid","number","Number","string","String","Prefill","EntityId","Id","formUrl","convertFormToUrl","navigate","relativeTo","confirm","Title","open","delete","duration","defaultGridOptions","columnDefs","ColumnDefinitions","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","TextWide","headerName","field","sort","onCellClicked","Character","ActionsPinnedRight1","i3","PermissionsComponent_Conditional_0_Template","tmp_0_0","MatButtonModule","i4","i5","RouterOutlet","MatDialogActions","AsyncPipe","SxcGridModule","i6","MetadataService","http","context","dnnContext","getMetadata","contentTypeName","$2sxc","apiUrl","appId","contentType","_angular_core__WEBPACK_IMPORTED_MODULE_1__","jDH","factory","ɵfac","metadataService","entitiesService","EntityEditService","Items","id","_angular_core__WEBPACK_IMPORTED_MODULE_5__","AgBoolCellIconsDefault","states","true","tooltip","false","AgBoolIconRenderer_Conditional_1_ng_container_1_Template","ctx_r0","url","showIcon_r2","_c0","clickable","AgBoolIconRenderer","allSettings","settings","d","getUrl","core","AgBoolIconRenderer_Conditional_1_Template","AgBoolIconRenderer_Conditional_2_Template","AgBoolIconRenderer_ng_template_3_Template","TippyDirective","NgClass","width","cellClass","split","pinned","ActionsPinnedRight3","ActionsPinnedRight4","ActionsPinnedRight5","ActionsPinnedRight6","ActionsPinnedRight7","IconShow","headerClass","sortable","filter","BooleanFilterComponent","valueGetter","IsHidden","Fields","Boolean","Boolean2","Boolean3","TextWideType","flex","minWidth","TextWideMin100","TextWideFlex3","TextNarrow","TextWideActionClass","BaseComponent","log","EavLogger","events","event","NavigationEnd","startWith","firstChild","pairwise","hadChildBefore","hasChildNow","filterParams","isFilterActive","doesFilterPass","api","colDef","column","columnApi","node","getValue","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","FormsModule","MatRadioModule","styles","align","copy","copyToClipboard","create","entity","post","zoneId","update","entityId","type","tryForce","webApiEntityRoot","force","_angular_core__WEBPACK_IMPORTED_MODULE_2__","webApiEntityList","EntityService","ServiceBase","queryService","QueryService","getEntities$","p","switchMap","getAvailableEntities","shareReplay","entitiesFilter","rxTap","enabled","getEntities","itemIds","fields","Default","parentId","parentField","_angular_core__WEBPACK_IMPORTED_MODULE_8__","queryUrl","a","hasParams","urlParams","toLocaleLowerCase","includes","substring","Guids","join","_angular_core__WEBPACK_IMPORTED_MODULE_3__"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.ts","./projects/eav-ui/src/app/dev-rest/api/true-false/true-false.component.html","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/services/metadata.service.ts","./projects/eav-ui/src/app/permissions/services/permissions.service.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-params.ts","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.html","./projects/eav-ui/src/app/shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component.ts","./projects/eav-ui/src/app/shared/ag-grid/column-definitions.ts","./projects/eav-ui/src/app/shared/components/base-with-child-dialog.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.ts","./projects/eav-ui/src/app/shared/components/boolean-filter/boolean-filter.component.html","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/services/entity-edit.service.ts","./projects/eav-ui/src/app/shared/services/entity.service.ts","./projects/eav-ui/src/app/shared/services/query.service.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { TrueFalseParams } from './true-false.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-rest-api-true-false',\r\n  templateUrl: './true-false.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class TrueFalseComponent implements ICellRendererAngularComp {\r\n  icon: string;\r\n\r\n  private trueIcon = 'check_circle';\r\n  private falseIcon = 'circle';\r\n\r\n  agInit(params: ICellRendererParams & TrueFalseParams): void {\r\n    let value: boolean = params.value;\r\n    if (params.reverse) { value = !value; }\r\n    if (params.trueIcon) { this.trueIcon = params.trueIcon; }\r\n    if (params.falseIcon) { this.falseIcon = params.falseIcon; }\r\n    this.icon = value ? this.trueIcon : this.falseIcon;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"eav-dialog nav-component-wrapper\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">Permissions</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"eav-dialog-content nav-component-wrapper\">\r\n      <router-outlet></router-outlet>\r\n      <div class=\"grid-wrapper\">\r\n        <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.permissions\" [gridOptions]=\"gridOptions\">\r\n        </ag-grid-angular>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </div>\r\n  </div>\r\n}\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, Observable, combineLatest, map } from 'rxjs';\r\nimport { BaseWithChildDialogComponent } from '../shared/components/base-with-child-dialog.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\nimport { ColumnDefinitions } from '../shared/ag-grid/column-definitions';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { transient } from '../core';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class PermissionsComponent extends BaseWithChildDialogComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  private prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  viewModel$: Observable<PermissionsViewModel>;\r\n\r\n  private permissionsService = transient(PermissionsService);\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.subscriptions.add(this.childDialogClosed$().subscribe(() => { this.fetchPermissions(); }));\r\n    this.viewModel$ = combineLatest([\r\n      this.permissions$\r\n    ]).pipe(map(([permissions]) => ({ permissions })));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n            TargetType: this.targetType,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          },\r\n          ...(this.prefills[this.targetType] && { Prefill: this.prefills[this.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Permission> = {\r\n              tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Title',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Identity',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Condition',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Grant',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight1,\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface PermissionsViewModel {\r\n  permissions: Permission[];\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MetadataDto } from '../../metadata';\r\nimport { MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiRoot = 'admin/metadata/get';\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /**\r\n   * Fetches metadata for given key in metadata content type\r\n   * @param targetType type of target metadata item is for, e.g. for Entity, or ContentType\r\n   * @param keyType e.g. for keyType === guid, key === contentTypeStaticName\r\n   * @param key key of target metadata item is for\r\n   * @param contentTypeName name of content type where permissions are stored. If blank, backend returns all metadata except permissions\r\n   */\r\n  getMetadata(targetType: number, keyType: MetadataKeyType, key: string | number, contentTypeName?: string): Observable<MetadataDto> {\r\n    return this.http.get<MetadataDto>(this.dnnContext.$2sxc.http.apiUrl(webApiRoot), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        targetType: targetType.toString(),\r\n        keyType,\r\n        key: key.toString(),\r\n        ...(contentTypeName && { contentType: contentTypeName }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { EntityEditService } from '../../shared/services/entity-edit.service';\r\nimport { eavConstants, MetadataKeyType } from '../../shared/constants/eav.constants';\r\nimport { Permission } from '../models/permission.model';\r\nimport { MetadataService } from './metadata.service';\r\nimport { transient } from '../../core';\r\n\r\n@Injectable()\r\nexport class PermissionsService {\r\n\r\n  private metadataService = transient(MetadataService);\r\n\r\n  private entitiesService = transient(EntityEditService);\r\n\r\n  getAll(targetType: number, keyType: MetadataKeyType, key: string): Observable<Permission[]> {\r\n    return this.metadataService.getMetadata(targetType, keyType, key, eavConstants.contentTypes.permissions).pipe(\r\n      map(metadata => metadata.Items as Permission[]),\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.entitiesService.delete(eavConstants.contentTypes.permissions, id, false);\r\n  }\r\n}\r\n","export interface AgBoolCellIconSetting {\r\n  clickable?: boolean;\r\n  tooltip: string;\r\n  icon: string;\r\n  url?: string;\r\n  getUrl?: (data: any) => string;\r\n}\r\n\r\nexport interface AgBoolCellIconSettings {\r\n  states: Record<'true' | 'false' | string, AgBoolCellIconSetting>;\r\n}\r\n\r\nexport interface AgBoolCellIconsParams<T = any> {\r\n  settings(data: T): AgBoolCellIconSettings;\r\n}\r\n\r\nexport const AgBoolCellIconsDefault: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'true/on',\r\n      icon: 'radio_button_checked',\r\n    },\r\n    false: {\r\n      tooltip: 'false/off',\r\n      icon: 'radio_button_unchecked',\r\n    }\r\n  }\r\n};","<div class=\"icon-container\">\r\n  @if (data.url) {\r\n    <a [href]=\"data.url\" target=\"_blank\">\r\n      <ng-container *ngTemplateOutlet=\"showIcon\"></ng-container>\r\n    </a>\r\n  } @else {\r\n    <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n      <mat-icon>{{ data.icon }}</mat-icon>\r\n    </div>\r\n  }\r\n</div>\r\n\r\n<ng-template #showIcon>\r\n  <div class=\"icon-cell icon\" [ngClass]=\"{'clickable': data.clickable }\" [tippy]=\"data.tooltip\">\r\n    <mat-icon>{{ data.icon }}</mat-icon>\r\n  </div>\r\n</ng-template>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { AgBoolCellIconSetting, AgBoolCellIconSettings, AgBoolCellIconsDefault, AgBoolCellIconsParams } from './ag-bool-icon-params';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-ag-bool-icon-renderer',\r\n  templateUrl: './ag-bool-icon-renderer.html',\r\n  standalone: true,\r\n  imports: [\r\n    TippyDirective,\r\n    MatIconModule,\r\n    NgClass,\r\n  ],\r\n})\r\nexport class AgBoolIconRenderer implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private allSettings: AgBoolCellIconSettings;\r\n\r\n  data: AgBoolCellIconSetting; // | { link: boolean  };\r\n\r\n  agInit(params: ICellRendererParams & AgBoolCellIconsParams): void {\r\n    this.value = params.value;\r\n\r\n    this.allSettings = params.settings?.(params.data) ?? AgBoolCellIconsDefault;\r\n    const d = this.allSettings.states[this.value ? 'true' : 'false'];\r\n    this.data = {\r\n      ...d,\r\n      url: d.url ?? d.getUrl?.(params.data),\r\n      // link: !!(d.url || d.getUrl),\r\n    };\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { ColDef } from '@ag-grid-community/core';\r\nimport { BooleanFilterComponent } from '../components/boolean-filter/boolean-filter.component';\r\nimport { App } from '../../apps-management/models/app.model';\r\nimport { AgBoolIconRenderer } from './apps-list-show/ag-bool-icon-renderer.component';\r\nimport { TrueFalseComponent } from '../../dev-rest/api/true-false/true-false.component';\r\nimport { TrueFalseParams } from '../../dev-rest/api/true-false/true-false.models';\r\n\r\nexport class ColumnDefinitions {\r\n  static ActionsPinnedRight1: ColDef = {\r\n    width: 42,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight3: ColDef = {\r\n    width: 122,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight4: ColDef = {\r\n    width: 162,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight5: ColDef = {\r\n    width: 202,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight6: ColDef = {\r\n    width: 82,\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static ActionsPinnedRight7: ColDef = {\r\n    width: 62,\r\n    cellClass: 'secondary-action no-outline no-padding'.split(' '),\r\n    pinned: 'right',\r\n  };\r\n\r\n  static IconShow: ColDef = {\r\n    headerName: 'Show',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'icons no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: BooleanFilterComponent,\r\n    valueGetter: (params) => {\r\n      const app: App = params.data;\r\n      return !app.IsHidden;\r\n    },\r\n    cellRenderer: AgBoolIconRenderer,\r\n  };\r\n\r\n  static Items: ColDef = {\r\n    width: 102,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Fields: ColDef = {\r\n    width: 94,\r\n    headerClass: 'dense',\r\n    cellClass: 'secondary-action no-padding'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow columns, typically just showing 1 character\r\n   */\r\n  static Character: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Id: ColDef = {\r\n    headerName: 'ID',\r\n    field: 'Id',\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'id-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static Boolean: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n  };\r\n\r\n  static Boolean2: ColDef = {\r\n    width: 100,\r\n    sortable: true,\r\n    cellClass: 'no-outline',\r\n    filter: BooleanFilterComponent,\r\n  };\r\n\r\n  static Boolean3: ColDef = {\r\n    headerClass: 'dense',\r\n    width: 80,\r\n    cellClass: 'no-outline',\r\n    cellRenderer: TrueFalseComponent,\r\n    cellRendererParams: (() => {\r\n      const params: TrueFalseParams = {\r\n        reverse: false,\r\n      };\r\n      return params;\r\n    })(),\r\n  }\r\n\r\n  /**\r\n   * Very narrow ID column, with typical header name and label etc.\r\n   */\r\n  static Number: ColDef = {\r\n    width: 70,\r\n    headerClass: 'dense',\r\n    cellClass: 'number-cell no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agNumberColumnFilter',\r\n  };\r\n\r\n  static TextWideType: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action highlight'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWide: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideMin100: ColDef = {\r\n    flex: 1,\r\n    minWidth: 100,\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  }\r\n\r\n  static TextWideFlex3: ColDef = {\r\n    flex: 3,\r\n    minWidth: 250,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextNarrow: ColDef = {\r\n    flex: 1,\r\n    minWidth: 150,\r\n    cellClass: 'no-outline',\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n  static TextWideActionClass: ColDef = {\r\n    flex: 2,\r\n    minWidth: 250,\r\n    cellClass: 'primary-action no-padding no-outline'.split(' '),\r\n    sortable: true,\r\n    filter: 'agTextColumnFilter',\r\n  };\r\n\r\n\r\n\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, tap } from 'rxjs';\r\nimport { BaseComponent } from './base.component';\r\nimport { EavLogger } from '../logging/eav-logger';\r\n\r\nconst logThis = false;\r\n\r\n// 2024-06-12 2dm experimental - remove comments if all is good mid of June\r\n// - previously had\r\n// @Directive()   // Needs the @Directive() so the compiler allows OnDestroy to be implemented\r\n// ...then tried this\r\n// @Component({\r\n//   selector: 'app-base-component-with-child',\r\n//   template: ''\r\n// })\r\n// ...but then added abstract, so I think it doesn't actually need all that\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseWithChildDialogComponent extends BaseComponent implements OnDestroy {\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected route: ActivatedRoute,\r\n    public log?: EavLogger\r\n  ) {\r\n    super();\r\n    this.log ??= new EavLogger('BaseComponent', logThis);\r\n  }\r\n\r\n  // 2024-06-12 2dm - don't think this is needed since it's already on the base class\r\n  // ngOnDestroy() {\r\n  //   super.ngOnDestroy();\r\n  // }\r\n\r\n  protected childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n      // tap(() => console.log('2dm ' + 'childDialogClosed$'))\r\n    )\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { BooleanFilterModel } from './boolean-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-boolean-filter',\r\n  templateUrl: './boolean-filter.component.html',\r\n  styleUrls: ['./boolean-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatRadioModule,\r\n  ]\r\n})\r\nexport class BooleanFilterComponent implements IFilterAngularComp {\r\n  filter = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.filter !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: boolean = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    return value.toString() === this.filter;\r\n  }\r\n\r\n  getModel(): BooleanFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'boolean',\r\n      filter: this.filter,\r\n    };\r\n  }\r\n\r\n  setModel(model: BooleanFilterModel) {\r\n    this.filter = model ? model.filter : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<mat-radio-group [(ngModel)]=\"filter\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">True</mat-radio-button>\r\n  <mat-radio-button value=\"false\">False</mat-radio-button>\r\n</mat-radio-group>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TippyDirective } from '../../directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ]\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavFor } from '../../edit/shared/models/eav';\r\nimport { ItemInListIdentifier } from '../models/edit-form.model';\r\nimport { Context } from './context';\r\nimport { webApiEntityRoot } from './entity.service';\r\n\r\n@Injectable()\r\nexport class EntityEditService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  create<T = QuickEntityResponse>(contentType: string, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  update<T = QuickEntityResponse>(contentType: string, entityId: number, entity: QuickEntityRequest): Observable<T> {\r\n    return this.http.post<T>(`app/auto/data/${contentType}/${entityId}`, entity, {\r\n      params: { appId: this.context.appId, zoneId: this.context.zoneId },\r\n    });\r\n  }\r\n\r\n  delete(type: string, id: number, tryForce: boolean) {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: { contentType: type, id: id.toString(), appId: this.context.appId.toString(), force: tryForce.toString() },\r\n    });\r\n  }\r\n}\r\n\r\ninterface QuickEntityRequest {\r\n  /** Metadata target */\r\n  For?: EavFor;\r\n  /** Parent linking target (add to this entity) */\r\n  ParentRelationship?: ItemInListIdentifier;\r\n  [field: string]: any;\r\n}\r\n\r\ninterface QuickEntityResponse {\r\n  Created: string;\r\n  Guid: string;\r\n  Id: number;\r\n  Modified: string;\r\n  [field: string]: any;\r\n}\r\n","import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { filter, map, Observable, shareReplay, switchMap } from 'rxjs';\r\nimport { ServiceBase } from './service-base';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { EntityBasic } from '../../shared/models/entity-basic';\r\nimport { QueryService } from './query.service';\r\nimport { transient } from '../../core';\r\n\r\nconst logThis = false;\r\n\r\nexport const webApiEntityRoot = 'admin/entity/';\r\nexport const webApiEntityList = 'admin/entity/list';\r\n\r\n @Injectable()\r\n export class EntityService extends ServiceBase {\r\n  private queryService = transient(QueryService);\r\n\r\n  constructor(private http: HttpClient, private dnnContext: DnnContext)\r\n  {\r\n    super(new EavLogger('EntityService', logThis));\r\n  }\r\n\r\n  /**\r\n   * Get entities based on the content type name.\r\n   * As of 2024-04-29 only used in REST API.\r\n   * @param params\r\n   * @returns\r\n   */\r\n  getEntities$(params: Observable<{ contentTypeName: string }>): Observable<EntityBasic[]> {\r\n    return params.pipe(\r\n      filter(p => p != null),\r\n      switchMap(p => this.getAvailableEntities(p.contentTypeName).pipe(shareReplay(1))),\r\n    );\r\n  }\r\n\r\n  private getAvailableEntities(contentTypeName: string, entitiesFilter?: string[]): Observable<EntityBasic[]> {\r\n    var log = this.log.rxTap('getEntities', { enabled: true });\r\n    return this.queryService.getEntities({\r\n      contentTypes: [contentTypeName],\r\n      itemIds: entitiesFilter,\r\n      fields: 'Id,Guid,Title',\r\n      log: 'getAvailableEntities'\r\n    }).pipe(\r\n      log.pipe(),\r\n      map(data => data.Default)\r\n    );\r\n  }\r\n\r\n  delete(appId: number, contentType: string, entityId: number, force: boolean, parentId?: number, parentField?: string): Observable<null> {\r\n    return this.http.delete<null>(this.dnnContext.$2sxc.http.apiUrl(webApiEntityRoot + 'delete'), {\r\n      params: {\r\n        contentType,\r\n        id: entityId.toString(),\r\n        appId,\r\n        force: force.toString(),\r\n        ...(parentId && { parentId: parentId.toString() }),\r\n        ...(parentId && parentField && { parentField }),\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EavLogger } from '../logging/eav-logger';\r\nimport { ServiceBase } from './service-base';\r\nimport { Context } from './context';\r\nimport { QueryStreams } from '../models/query-stream.model';\r\n\r\nconst logThis = false;\r\n\r\n@Injectable()\r\nexport class QueryService extends ServiceBase {\r\n\r\n  constructor(private http: HttpClient, private context: Context) {\r\n    super(new EavLogger('QueryService', logThis));\r\n  }\r\n\r\n  getAvailableEntities(queryUrl: string, params: string, fields: string, entitiesFilter?: string[]): Observable<QueryStreams> {\r\n    this.log.a('getAvailableEntities', { queryUrl, params, fields, entitiesFilter });\r\n    // Check if any params we should auto-add are already set (like in a query which has these params set in the configuration)\r\n    const hasParams = !!params;\r\n    const paramsLower = params?.toLocaleLowerCase() ?? '';\r\n    const hasAppId = paramsLower.includes('appid=') ?? false;\r\n    const allParams = ''\r\n      + (hasAppId ? '' : `&appId=${this.context.appId}`)\r\n      + (hasParams ? `&${params}` : '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(`app/auto/query/${queryUrl}?${urlParams}`,\r\n      {\r\n        Guids: entitiesFilter,\r\n      },\r\n    );\r\n  }\r\n\r\n  getEntities({ contentTypes, itemIds, fields, log }: { contentTypes: string[]; itemIds: string[]; fields: string; log: string }): Observable<QueryStreams> {\r\n    this.log.a(`getEntities(${log})`, { contentTypes, itemIds, fields });\r\n    const allParams =\r\n      '&typeNames=' + (contentTypes?.join(',') ?? '')\r\n      + `&appId=${this.context.appId}`\r\n      + '&itemIds=' + (itemIds?.join(',') ?? '')\r\n      + '&$select=' + (fields ?? '' /* special catch to avoid the word \"null\" */);\r\n    // trim initial & because it will always start with an & and it should't\r\n    const urlParams = allParams.substring(1);\r\n    return this.http.post<QueryStreams>(\r\n      `app/auto/query/System.EntityPicker/Default?${urlParams}`,\r\n      {}\r\n    );\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}