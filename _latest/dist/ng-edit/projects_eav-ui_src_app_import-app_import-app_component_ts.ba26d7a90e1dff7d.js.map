{"version":3,"file":"projects_eav-ui_src_app_import-app_import-app_component_ts.ba26d7a90e1dff7d.js","mappings":"sPAeO,IAAMA,EAAkB,MAAzB,MAAOA,EAMXC,YAAqCC,GAJrCC,KAAAC,WAAaC,KAAYC,IAEjBH,KAAAI,oBAAmBC,KAAUC,KAGnCP,EAAWQ,QAAU,aACrBR,EAAWS,cAAgB,0SAK3BT,EAAWU,mBAAqB,MAChCV,EAAWW,UAAaC,GAAUX,KAAKI,iBAAiBQ,UAAUD,EAAM,QAAIE,GAAW,EACzF,CAACC,SAAAd,KAAA,mBAAAe,iBAfUlB,GAAkBmB,MAMTC,MAAe,EAAAH,SAAAd,KAAA,UAAAkB,EAAAC,IAAA,MANxBtB,EAAkBuB,UAAA,qBAAAC,YAAA,EAAAC,SAAA,CAAAN,OAAAO,MAAA,EAAAC,KAAA,EAAAC,OAAA,mBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GCf/BX,MAAA,mCAAwBA,MAAA,aAAAY,EAAA3B,2BDYpB4B,eAGShC,CAAkB,oGEVxB,MAAMiC,EAAgB,aAGtB,IAAMxB,EAAiB,MAAxB,MAAOA,UAAyByB,IAEpCnB,UAAUoB,EAAYC,EAAqBC,GAAmB,GAC5D,MAAMC,EAAW,IAAIC,SACrBD,SAASE,OAAO,OAAQL,GACxBG,EAASE,OAAO,OAAQJ,GAAe,IAChCjC,KAAKsC,KAAKC,KAAuBvC,KAAKwC,OAAOV,EAAgB,UAAWK,EAAU,CACvFM,OAAQ,CAAEC,OAAQ1C,KAAK0C,UACtBC,QACDC,KAAUC,IACR,GAAIX,GAAoBW,EAAOC,SAAS,IAAIC,cAAgBC,KAAuBC,QAAS,CAC1F,MAAMC,EAAaC,OAAON,EAAOC,SAAS,GAAGM,KAAO,4DACpD,GAAIF,EACF,OAAOlD,KAAKY,UAAUoB,EAAMkB,GAAY,GAG5C,SAAOG,MAAGR,EAAM,GAGtB,CAAC/B,SAAAd,KAAA,4DAnBUM,KAAgBS,GAAhBT,EAAgB,GAmB1B,GAnB0BQ,SAAAd,KAAA,WAAAsD,EAAAC,IAAA,OAAhBjD,EAAgBkD,QAAhBlD,EAAgBmD,mBAAhBnD,CAAiB","names":["ImportAppComponent","constructor","dialogData","this","uploadType","UploadTypes","App","importAppService","transient","ImportAppService","title","description","allowedFileTypes","upload$","files","importApp","undefined","static","t","i0","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_3__","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","FileUploadDialogComponent","webApiAppRoot","HttpServiceBase","file","changedName","retryOnDuplicate","formData","FormData","append","http","post","apiUrl","params","zoneId","pipe","switchMap","result","Messages","MessageType","FileUploadMessageTypes","Warning","folderName","prompt","Text","of","_angular_core__WEBPACK_IMPORTED_MODULE_4__","jDH","factory","Éµfac"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/import-app/import-app.component.ts","./projects/eav-ui/src/app/import-app/import-app.component.html","./projects/eav-ui/src/app/import-app/services/import-app.service.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FileUploadDialogComponent, FileUploadDialogData, UploadTypes } from '../shared/components/file-upload-dialog';\r\nimport { ImportAppService } from './services/import-app.service';\r\nimport { transient } from '../core';\r\n\r\n@Component({\r\n  selector: 'app-import-app',\r\n  templateUrl: './import-app.component.html',\r\n  styleUrls: ['./import-app.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    FileUploadDialogComponent,\r\n  ],\r\n})\r\nexport class ImportAppComponent {\r\n\r\n  uploadType = UploadTypes.App;\r\n\r\n  private importAppService = transient(ImportAppService);\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) dialogData: FileUploadDialogData) {\r\n    dialogData.title ??= `Import App`;\r\n    dialogData.description ??= `\r\n    Select an app package (zip) from your computer to import an app. New apps can be downloaded on\r\n    <a href=\"https://2sxc.org/apps\" target=\"_blank\">https://2sxc.org/apps</a>.\r\n    For further help visit <a href=\"https://2sxc.org/en/help?tag=import-app\" target=\"_blank\">2sxc Help</a>.\r\n    `;\r\n    dialogData.allowedFileTypes ??= 'zip';\r\n    dialogData.upload$ ??= (files) => this.importAppService.importApp(files[0], undefined, true);\r\n  }\r\n}\r\n","<app-file-upload-dialog [uploadType]=\"uploadType\"></app-file-upload-dialog>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}