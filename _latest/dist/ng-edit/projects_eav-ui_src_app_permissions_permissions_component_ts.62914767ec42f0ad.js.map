{"version":3,"mappings":"wSAWO,IAAMA,EAAb,MAAM,QAGJC,OAAOC,GACLC,KAAKD,OAASA,EAGhBE,QAAQF,GACN,OAAO,EAGTG,mBAEEF,KAAKD,OAAOI,SADmBH,KAAKD,OAAOK,oDAZlCP,8BAA2BQ,6LCXxCC,iBAA+B,WAC+BA,gCAASC,uBACnED,oBAAUA,kBAAMA,uDDSPT,GAAb,6EEYO,IAAMW,EAAb,MAAM,gBAAoCC,IAaxCC,YACUC,EACRC,EACAC,EACQC,EACAC,GAERC,MAAMJ,EAAQC,GANNb,iBAGAA,0BACAA,gBAjBVA,kBAAe,IAAIiB,SAA8BC,GACjDlB,iBAAcA,KAAKmB,mBAEXnB,gBAAaoB,SAASpB,KAAKa,MAAMQ,SAASC,SAASC,IAAI,cAAe,IACtEvB,aAAUA,KAAKa,MAAMQ,SAASC,SAASC,IAAI,WAC3CvB,SAAMA,KAAKa,MAAMQ,SAASC,SAASC,IAAI,OACvCvB,cAAmD,EACxDwB,kCAA4C,CAC3CC,eAAgB,aAcpBC,WACE1B,KAAK2B,mBACL3B,KAAK4B,aAAaC,IAAI7B,KAAK8B,uBAAuBC,UAAU,KAAQ/B,KAAK2B,sBAG3EK,cACEhC,KAAKiC,aAAaC,WAClBlB,MAAMgB,cAGRG,cACEnC,KAAKW,UAAUyB,QAGTT,mBACN3B,KAAKc,mBAAmBuB,OAAOrC,KAAKsC,WAAYtC,KAAKuC,QAASvC,KAAKwC,KAAKT,UAAUU,IAChFzC,KAAKiC,aAAaS,KAAKD,KAI3BE,eAAeC,WACb,IAAIC,EAEFA,EADgB,MAAdD,EACK,CACLE,MAAO,gBACLC,gBAAiBvB,6BACjBwB,IAAGC,2CACDC,OAAgG,QAAxFC,EAAgF,QAAhFC,SAAOC,OAAO7B,cAAuB8B,KAAKC,GAAKA,EAAEjB,aAAetC,KAAKsC,mBAAWkB,eAAEC,cAAMC,QAAI1D,KAAKsC,WAAWqB,WACpHC,WAAY5D,KAAKsC,YACbtC,KAAKuC,UAAYf,mBAA8B,CAAEqC,KAAM7D,KAAKwC,MAC5DxC,KAAKuC,UAAYf,qBAAgC,CAAEsC,OAAQ1C,SAASpB,KAAKwC,IAAK,MAC9ExC,KAAKuC,UAAYf,qBAAgC,CAAEuC,OAAQ/D,KAAKwC,OAElExC,KAAKgE,SAAShE,KAAKsC,aAAe,CAAE2B,QAASjE,KAAKgE,SAAShE,KAAKsC,gBAIjE,CACLQ,MAAO,CAAC,CAAEoB,SAAUtB,EAAWuB,MAGnC,MAAMC,KAAUC,KAAiBxB,GACjC7C,KAAKY,OAAO0D,SAAS,CAAC,QAAQF,KAAY,CAAEG,WAAYvE,KAAKa,QAGvDX,iBAAiB0C,IAClB4B,QAAQ,WAAW5B,EAAW6B,WAAW7B,EAAWuB,UACzDnE,KAAKe,SAAS2D,KAAK,eACnB1E,KAAKc,mBAAmB6D,OAAO/B,EAAWuB,IAAIpC,UAAU,KACtD/B,KAAKe,SAAS2D,KAAK,UAAW,KAAM,CAAEE,SAAU,MAChD5E,KAAK2B,sBAIDR,mBA2FN,OA1FiB8B,+BACZ4B,KAAkB,CACrBC,WAAY,CACV,CACEC,WAAY,KACZC,MAAO,KACPC,MAAO,GACPC,YAAa,QACbC,UAAW,kCAAkCC,MAAM,KACnDC,UAAU,EACVC,OAAQ,uBACRC,YAAcxF,GACmBA,EAAOK,KACpB+D,GAEpBqB,aAAcC,IACdC,mBAC4C,CACxCC,cAAgB/C,GAA2B,OAAOA,EAAWuB,aAAavB,EAAWiB,SAK3F,CACEmB,MAAO,OACPY,KAAM,EACNC,SAAU,IACVV,UAAW,2BAA2BC,MAAM,KAC5CC,UAAU,EACVS,KAAM,MACNR,OAAQ,qBACRS,cAAgBhG,IAEdC,KAAK2C,eAD0B5C,EAAOK,OAGxCmF,YAAcxF,GACmBA,EAAOK,KACpBqE,OAGtB,CACEO,MAAO,WACPY,KAAM,EACNC,SAAU,IACVV,UAAW,aACXE,UAAU,EACVC,OAAQ,qBACRC,YAAcxF,GACmBA,EAAOK,KACpB4F,UAGtB,CACEhB,MAAO,YACPY,KAAM,EACNC,SAAU,IACVV,UAAW,aACXE,UAAU,EACVC,OAAQ,qBACRC,YAAcxF,GACmBA,EAAOK,KACpB6F,WAGtB,CACEjB,MAAO,QACPC,MAAO,GACPC,YAAa,QACbC,UAAW,aACXE,UAAU,EACVC,OAAQ,qBACRC,YAAcxF,GACmBA,EAAOK,KACpB8F,OAGtB,CACEjB,MAAO,GACPE,UAAW,8BAA8BC,MAAM,KAC/Ce,OAAQ,QACRX,aAAc3F,EACd6F,mBAAqB,MACsB,CACvCvF,SAAWyC,GAAe5C,KAAKE,iBAAiB0C,KAF/B,qDA/JlBpC,GAAoBF,qFAApBE,EAAoBH,0aCvBjCC,iBAAmC,UAAnCA,CAAmC,UAAnCA,CAAmC,SAGxBA,uBAAWA,QAChBA,oBAA6CA,gCAASC,kBACpDD,oBAAUA,iBAAKA,cAKrBA,yBAEAA,iBACEA,gDAGAA,kBAEAA,qBAAmFA,gCAASC,iBAAe,QACzGD,qBAAUA,gBAAGA,qBAN4BA,sDAAgC,oGDUlEE,GAAb,yGEhBO,IAAMC,EAAb,MAAM,QAGJC,YACSE,EACAC,GADAb,cACAA,aAEPA,KAAK4B,aAAe,IAAIwE,KAG1BpE,cACEhC,KAAK4B,aAAayE,cAGVvE,uBACR,OAAO9B,KAAKY,OAAO0F,OAAOC,QACxBjB,KAAOkB,GAASA,aAAiBC,OACjCC,SAAY1G,KAAKa,MAAMQ,SAASsF,WAAWA,eAC3CC,KAAI,MAAQ5G,KAAKa,MAAMQ,SAASsF,WAAWA,aAC3CE,YACAvB,KAAO,EAAEwB,EAAUC,KAAcD,IAAaC,kDApBvCtG,GAAaH,kDAAbG,OAAb,2KCKO,IAAMgF,EAAb,MAAM,QAKJ/E,YAAoBK,mBAEpBjB,OAAOC,GACLC,KAAKgH,GAAKjH,EAAOkH,MACjBjH,KAAKkH,MAA2B,iBAAZlH,KAAKgH,GAAkB,MAAQ,QACnDhH,KAAKmH,QAAUpH,EAAO4F,cAAc5F,EAAOK,MAG7CH,QAAQF,GACN,OAAO,EAGTqH,UACEC,KAAgBrH,KAAKmH,SACrBnH,KAAKe,SAAS2D,KAAK,sBAAuB,KAAM,CAAEE,SAAU,oDAnBnDa,GAAgBnF,sCAAhBmF,EAAgBpF,0KCZ7BC,iBAA0DA,gCAASC,WAIjED,kBAAiBA,SAAQA,QACzBA,sBAAuBA,qBAASA,iBALMA,yBAAiB,wDAItCA,glBDQNmF,GAAb,oCEVO,MAAMZ,EAAkC,CAC7CyC,cAAc,EACdC,aAAa,EACbC,yBAAyB,EACzBC,aAAc,GACdC,yBAAyB,EACzBC,YAAY,EACZC,cAAe,CAAEC,aAAc,CAAEC,cAAe,SAChDC,iBAAkB,EAClBC,iBAAkB,IAClBC,wBAAwB,mBCXpB,WAA0BC,GAC9B,MAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGlB,MAAQiB,EACXC,EAAGG,aAAa,WAAY,IAC5BH,EAAGI,MAAMC,SAAW,WACpBL,EAAGI,MAAME,KAAO,UAChBL,SAASM,KAAKC,YAAYR,GAC1B,MAAMS,EACJR,SAASS,eAAeC,WAAa,GACjCV,SAASS,eAAeE,WAAW,GAEzCZ,EAAGa,SACHZ,SAASa,YAAY,QACrBb,SAASM,KAAKQ,YAAYf,GACtBS,IACFR,SAASS,eAAeM,kBACxBf,SAASS,eAAeO,SAASR","names":["PermissionsActionsComponent","agInit","params","this","refresh","deletePermission","onDelete","data","selectors","i0","ctx","PermissionsComponent","BaseComponent","constructor","dialogRef","router","route","permissionsService","snackBar","super","BehaviorSubject","undefined","buildGridOptions","parseInt","snapshot","paramMap","get","eavConstants","PermissionType","ngOnInit","fetchPermissions","subscription","add","refreshOnChildClosed","subscribe","ngOnDestroy","permissions$","complete","closeDialog","close","getAll","targetType","keyType","key","permissions","next","editPermission","permission","form","items","ContentTypeName","For","Object","Target","o","s","values","find","m","_a","target","_b","toString","TargetType","Guid","Number","String","prefills","Prefill","EntityId","Id","formUrl","convertFormToUrl","navigate","relativeTo","confirm","Title","open","delete","duration","defaultGridOptions","columnDefs","headerName","field","width","headerClass","cellClass","split","sortable","filter","valueGetter","cellRenderer","IdFieldComponent","cellRendererParams","tooltipGetter","flex","minWidth","sort","onCellClicked","Identity","Condition","Grant","pinned","Subscription","unsubscribe","events","pipe","event","NavigationEnd","startWith","firstChild","map","pairwise","hadChild","hasChild","id","value","align","tooltip","copy","copyToClipboard","accentedSort","animateRows","enableCellTextSelection","headerHeight","suppressScrollOnNewData","valueCache","defaultColDef","filterParams","newRowsAction","tooltipShowDelay","tooltipHideDelay","suppressMovableColumns","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange"],"sources":["./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.ts","./projects/eav-ui/src/app/permissions/permissions-actions/permissions-actions.component.html","./projects/eav-ui/src/app/permissions/permissions.component.ts","./projects/eav-ui/src/app/permissions/permissions.component.html","./projects/eav-ui/src/app/shared/components/base-component/base.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.ts","./projects/eav-ui/src/app/shared/components/id-field/id-field.component.html","./projects/eav-ui/src/app/shared/constants/default-grid-options.constants.ts","./projects/eav-ui/src/app/shared/helpers/copy-to-clipboard.helper.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Permission } from '../models/permission.model';\r\nimport { PermissionsActionsParams } from './permissions-actions.models';\r\n\r\n@Component({\r\n  selector: 'app-permissions-actions',\r\n  templateUrl: './permissions-actions.component.html',\r\n  styleUrls: ['./permissions-actions.component.scss'],\r\n})\r\nexport class PermissionsActionsComponent implements ICellRendererAngularComp {\r\n  private params: ICellRendererParams & PermissionsActionsParams;\r\n\r\n  agInit(params: ICellRendererParams & PermissionsActionsParams): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  deletePermission(): void {\r\n    const permission: Permission = this.params.data;\r\n    this.params.onDelete(permission);\r\n  }\r\n}\r\n","<div class=\"actions-component\">\r\n  <div class=\"like-button highlight\" matRipple tippy=\"Delete\" (click)=\"deletePermission()\">\r\n    <mat-icon>delete</mat-icon>\r\n  </div>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { BaseComponent } from '../shared/components/base-component/base.component';\r\nimport { IdFieldComponent } from '../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../shared/constants/default-grid-options.constants';\r\nimport { eavConstants, MetadataKeyType } from '../shared/constants/eav.constants';\r\nimport { convertFormToUrl } from '../shared/helpers/url-prep.helper';\r\nimport { EditForm } from '../shared/models/edit-form.model';\r\nimport { Permission } from './models/permission.model';\r\nimport { PermissionsActionsComponent } from './permissions-actions/permissions-actions.component';\r\nimport { PermissionsActionsParams } from './permissions-actions/permissions-actions.models';\r\nimport { PermissionsService } from './services/permissions.service';\r\n\r\n@Component({\r\n  selector: 'app-permissions',\r\n  templateUrl: './permissions.component.html',\r\n  styleUrls: ['./permissions.component.scss'],\r\n})\r\nexport class PermissionsComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  permissions$ = new BehaviorSubject<Permission[]>(undefined);\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private targetType = parseInt(this.route.snapshot.paramMap.get('targetType'), 10);\r\n  private keyType = this.route.snapshot.paramMap.get('keyType') as MetadataKeyType;\r\n  private key = this.route.snapshot.paramMap.get('key');\r\n  private prefills: Record<string, Record<string, string>> = {\r\n    [eavConstants.metadata.language.targetType]: {\r\n      PermissionType: 'language',\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<PermissionsComponent>,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    private permissionsService: PermissionsService,\r\n    private snackBar: MatSnackBar,\r\n  ) { \r\n    super(router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchPermissions();\r\n    this.subscription.add(this.refreshOnChildClosed().subscribe(() => { this.fetchPermissions(); }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.permissions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private fetchPermissions() {\r\n    this.permissionsService.getAll(this.targetType, this.keyType, this.key).subscribe(permissions => {\r\n      this.permissions$.next(permissions);\r\n    });\r\n  }\r\n\r\n  editPermission(permission?: Permission) {\r\n    let form: EditForm;\r\n    if (permission == null) {\r\n      form = {\r\n        items: [{\r\n          ContentTypeName: eavConstants.contentTypes.permissions,\r\n          For: {\r\n            Target: Object.values(eavConstants.metadata).find(m => m.targetType === this.targetType)?.target ?? this.targetType.toString(),\r\n            TargetType: this.targetType,\r\n            ...(this.keyType === eavConstants.keyTypes.guid && { Guid: this.key }),\r\n            ...(this.keyType === eavConstants.keyTypes.number && { Number: parseInt(this.key, 10) }),\r\n            ...(this.keyType === eavConstants.keyTypes.string && { String: this.key }),\r\n          },\r\n          ...(this.prefills[this.targetType] && { Prefill: this.prefills[this.targetType] }),\r\n        }],\r\n      };\r\n    } else {\r\n      form = {\r\n        items: [{ EntityId: permission.Id }],\r\n      };\r\n    }\r\n    const formUrl = convertFormToUrl(form);\r\n    this.router.navigate([`edit/${formUrl}`], { relativeTo: this.route });\r\n  }\r\n\r\n  private deletePermission(permission: Permission) {\r\n    if (!confirm(`Delete '${permission.Title}' (${permission.Id})?`)) { return; }\r\n    this.snackBar.open('Deleting...');\r\n    this.permissionsService.delete(permission.Id).subscribe(() => {\r\n      this.snackBar.open('Deleted', null, { duration: 2000 });\r\n      this.fetchPermissions();\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'Id',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'id-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Id;\r\n          },\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Permission> = {\r\n              tooltipGetter: (permission: Permission) => `ID: ${permission.Id}\\nGUID: ${permission.Guid}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          field: 'Name',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          sortable: true,\r\n          sort: 'asc',\r\n          filter: 'agTextColumnFilter',\r\n          onCellClicked: (params) => {\r\n            const permission: Permission = params.data;\r\n            this.editPermission(permission);\r\n          },\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Title;\r\n          },\r\n        },\r\n        {\r\n          field: 'Identity',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Identity;\r\n          },\r\n        },\r\n        {\r\n          field: 'Condition',\r\n          flex: 2,\r\n          minWidth: 250,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Condition;\r\n          },\r\n        },\r\n        {\r\n          field: 'Grant',\r\n          width: 70,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n          valueGetter: (params) => {\r\n            const permission: Permission = params.data;\r\n            return permission.Grant;\r\n          },\r\n        },\r\n        {\r\n          width: 42,\r\n          cellClass: 'secondary-action no-padding'.split(' '),\r\n          pinned: 'right',\r\n          cellRenderer: PermissionsActionsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: PermissionsActionsParams = {\r\n              onDelete: (permission) => this.deletePermission(permission),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Permissions</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"permissions$ | async\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n\r\n    <div class=\"grid-more-actions-box\"></div>\r\n\r\n    <button mat-fab mat-elevation-z24 class=\"grid-fab\" tippy=\"Create a new permission\" (click)=\"editPermission(null)\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>","import { Directive, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith, Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// sdv TODO rename this class to BaseFieldComponent when BaseFieldComponent gets renamed to BaseFieldComponent\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent implements OnDestroy {\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n  ) {\r\n    this.subscription = new Subscription();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  protected refreshOnChildClosed() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild.firstChild),\r\n      pairwise(),\r\n      filter(([hadChild, hasChild]) => hadChild && !hasChild),\r\n    )\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../helpers/copy-to-clipboard.helper';\r\nimport { IdFieldParams } from './id-field.models';\r\n\r\n@Component({\r\n  selector: 'app-id-field',\r\n  templateUrl: './id-field.component.html',\r\n  styleUrls: ['./id-field.component.scss'],\r\n})\r\nexport class IdFieldComponent implements ICellRendererAngularComp {\r\n  id: number | string;\r\n  align: 'start' | 'end';\r\n  tooltip: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams & IdFieldParams): void {\r\n    this.id = params.value;\r\n    this.align = typeof this.id === 'number' ? 'end' : 'start';\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy(): void {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\" [ngClass]=\"{\r\n  'align-start': align === 'start',\r\n  'align-end': align === 'end'\r\n}\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>","import { GridOptions } from '@ag-grid-community/core';\r\n\r\nexport const defaultGridOptions: GridOptions = {\r\n  accentedSort: true,\r\n  animateRows: true,\r\n  enableCellTextSelection: true,\r\n  headerHeight: 32,\r\n  suppressScrollOnNewData: true,\r\n  valueCache: true,\r\n  defaultColDef: { filterParams: { newRowsAction: 'keep' } },\r\n  tooltipShowDelay: 0,\r\n  tooltipHideDelay: 100000,\r\n  suppressMovableColumns: true,\r\n} as const;\r\n","/** https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f */\r\nexport function copyToClipboard(str: string) {\r\n  const el = document.createElement('textarea');  // Create a <textarea> element\r\n  el.value = str;                                 // Set its value to the string that you want copied\r\n  el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n  el.style.position = 'absolute';\r\n  el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n  document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n  const selected =\r\n    document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n      ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n      : false;                                    // Mark as false to know no selection existed before\r\n  el.select();                                    // Select the <textarea> content\r\n  document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n  document.body.removeChild(el);                  // Remove the <textarea> element\r\n  if (selected) {                                 // If a selection existed before copying\r\n    document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n    document.getSelection().addRange(selected);   // Restore the original selection\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_eav-ui_src_app_permissions_permissions_component_ts.62914767ec42f0ad.js"}