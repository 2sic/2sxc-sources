{"version":3,"file":"projects_eav-ui_src_app_app-administration_getting-started_getting-started_component_ts.902a6b048b98f489.js","mappings":"sRAIO,IAAMA,EAAmB,MAA1B,MAAOA,EAEXC,YAAoBC,GAAAC,KAAAD,WAA2B,CAE/CE,UAAUC,GACR,OAAOF,KAAKD,UAAUI,+BAA+BD,EACvD,CAACE,SAAAJ,KAAA,mBAAAK,iBANUR,GAAmBS,MAAAC,KAAA,MAAAH,SAAAJ,KAAA,WAAAQ,EAAAC,IAAA,6BAAnBZ,EAAmBa,MAAA,EAAAC,YAAA,WAAnBd,CAAmB,2BCH9BS,MAAA,+CAAuBA,MAAA,MAAAA,MAAA,IAAAM,GAAAN,OCelB,IAAMO,EAAuB,MAA9B,MAAOA,EAMXf,YAAoBgB,GAAAd,KAAAc,yBAJpBd,KAAAe,mBAAqBf,KAAKc,uBAAuBE,cAAcC,QAAKC,KAClEC,GAAkBA,EAAeC,QAAQC,IAAIC,mBAGuB,CAAClB,SAAAJ,KAAA,mBAAAK,iBAN5DQ,GAAuBP,MAAAC,KAAA,EAAAH,SAAAJ,KAAA,UAAAQ,EAAAe,IAAA,MAAvBV,EAAuBW,UAAA,0BAAAb,YAAA,EAAAc,SAAA,CAAAnB,OAAAoB,MAAA,EAAAC,KAAA,EAAAC,OAAA,uBAAAC,SAAA,SAAAC,EAAAlB,MAAA,EAAAkB,IDhBpCxB,MAAA,EAAAyB,EAAA,6CAAAzB,MAAA,GAAA0B,EAAA1B,MAAA,IAAAM,EAAAG,qBAAA,KAAAiB,mBCYIC,KACApC,GAAmBqC,OAAA,4KAGVrB,CAAuB","names":["SafeResourceUrlPipe","constructor","sanitizer","this","transform","resourceUrl","bypassSecurityTrustResourceUrl","static","t","i0","i1","core","EJ8","pure","standalone","ctx","GettingStartedComponent","appDialogConfigService","gettingStartedUrl$","getCurrent$","pipe","map","dialogSettings","Context","App","GettingStartedUrl","VBU","selectors","features","decls","vars","consts","template","rf","GettingStartedComponent_Conditional_0_Template","tmp_0_0","AsyncPipe","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/pipes/safe-resource-url.ts","./projects/eav-ui/src/app/app-administration/getting-started/getting-started.component.html","./projects/eav-ui/src/app/app-administration/getting-started/getting-started.component.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeResourceUrl', standalone: true})\r\nexport class SafeResourceUrlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(resourceUrl: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\r\n  }\r\n}\r\n","@if (gettingStartedUrl$ | async; as gettingStartedUrl) {\r\n  <iframe class=\"iframe\" [src]=\"gettingStartedUrl | safeResourceUrl\"></iframe>\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { AppDialogConfigService } from '../services/app-dialog-config.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { SafeResourceUrlPipe } from '../../shared/pipes/safe-resource-url';\r\n\r\n@Component({\r\n  selector: 'app-getting-started',\r\n  templateUrl: './getting-started.component.html',\r\n  styleUrls: ['./getting-started.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    AsyncPipe,\r\n    SafeResourceUrlPipe,\r\n  ],\r\n})\r\nexport class GettingStartedComponent {\r\n\r\n  gettingStartedUrl$ = this.appDialogConfigService.getCurrent$().pipe(map(\r\n    dialogSettings => dialogSettings.Context.App.GettingStartedUrl\r\n  ));\r\n\r\n  constructor(private appDialogConfigService: AppDialogConfigService) { }\r\n\r\n\r\n}\r\n"],"x_google_ignoreList":[]}