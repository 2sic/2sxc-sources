{"version":3,"file":"projects_eav-ui_src_app_app-administration_getting-started_getting-started_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;AAA4C;AAEjB;AACqB;AAC2B;AACI;;;;ICJ7EK,uDAAA,gBAA4E;;;;IAArDA,wDAAA,QAAAA,yDAAA,OAAAI,GAAA,GAAAJ,mEAAA,CAA2C;;;ADe9D,MAAOM,uBAAuB;EATpCC,YAAA;IAWU,KAAAC,eAAe,GAAGX,gDAAS,CAACE,uFAAsB,CAAC;IAE3D,KAAAU,kBAAkB,GAAG,IAAI,CAACD,eAAe,CAACE,WAAW,EAAE,CAACC,IAAI,CAACf,yCAAG,CAC9DgB,cAAc,IAAIA,cAAc,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAC/D,CAAC;;;;uCANST,uBAAuB;IAAA;EAAA;;;YAAvBA,uBAAuB;MAAAU,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAlB,GAAA;QAAA,IAAAkB,EAAA;UChBpCtB,wDAAA,IAAAwB,8CAAA,oBAAwD;;;;;UAAxDxB,2DAAA,EAAA0B,OAAA,GAAA1B,yDAAA,OAAAI,GAAA,CAAAK,kBAAA,aAAAiB,OAAA,CAEC;;;qBDUO/B,sDAAS,EACTG,gFAAmB;MAAA6B,MAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;AEZ8B;;;AAKnD,MAAO7B,mBAAmB;EAE9BS,YAAoBsB,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;EAAkB;EAE/CC,SAASA,CAACC,WAAmB;IAC3B,OAAO,IAAI,CAACF,SAAS,CAACG,8BAA8B,CAACD,WAAW,CAAC;EACnE;;;uCANWjC,mBAAmB,EAAAE,+DAAA,CAAAkC,mEAAA;IAAA;EAAA;;;;YAAnBpC,mBAAmB;MAAAqC,IAAA;IAAA;EAAA","sources":["./projects/eav-ui/src/app/app-administration/getting-started/getting-started.component.ts","./projects/eav-ui/src/app/app-administration/getting-started/getting-started.component.html","./projects/eav-ui/src/app/shared/pipes/safe-resource-url.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { SafeResourceUrlPipe } from '../../shared/pipes/safe-resource-url';\r\nimport { DialogConfigAppService } from '../services/dialog-config-app.service';\r\n\r\n@Component({\r\n    selector: 'app-getting-started',\r\n    templateUrl: './getting-started.component.html',\r\n    styleUrls: ['./getting-started.component.scss'],\r\n    imports: [\r\n        AsyncPipe,\r\n        SafeResourceUrlPipe,\r\n    ]\r\n})\r\nexport class GettingStartedComponent {\r\n\r\n  private dialogConfigSvc = transient(DialogConfigAppService);\r\n\r\n  gettingStartedUrl$ = this.dialogConfigSvc.getCurrent$().pipe(map(\r\n    dialogSettings => dialogSettings.Context.App.GettingStartedUrl\r\n  ));\r\n\r\n\r\n}\r\n","@if (gettingStartedUrl$ | async; as gettingStartedUrl) {\r\n  <iframe class=\"iframe\" [src]=\"gettingStartedUrl | safeResourceUrl\"></iframe>\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeResourceUrl',\r\n})\r\nexport class SafeResourceUrlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(resourceUrl: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\r\n  }\r\n}\r\n"],"names":["AsyncPipe","map","transient","SafeResourceUrlPipe","DialogConfigAppService","i0","ɵɵelement","ɵɵproperty","ɵɵpipeBind1","ctx","ɵɵsanitizeResourceUrl","GettingStartedComponent","constructor","dialogConfigSvc","gettingStartedUrl$","getCurrent$","pipe","dialogSettings","Context","App","GettingStartedUrl","selectors","decls","vars","consts","template","GettingStartedComponent_Template","rf","ɵɵtemplate","GettingStartedComponent_Conditional_0_Template","ɵɵconditional","tmp_0_0","styles","DomSanitizer","sanitizer","transform","resourceUrl","bypassSecurityTrustResourceUrl","ɵɵdirectiveInject","i1","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}