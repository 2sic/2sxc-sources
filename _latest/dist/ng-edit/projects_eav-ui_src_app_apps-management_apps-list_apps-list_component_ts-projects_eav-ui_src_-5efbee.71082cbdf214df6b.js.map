{"version":3,"file":"projects_eav-ui_src_app_apps-management_apps-list_apps-list_component_ts-projects_eav-ui_src_-5efbee.71082cbdf214df6b.js","mappings":"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","names":["AppListShowIcons","states","true","tooltip","icon","false","AppListCodeErrorIcons","clickable","getUrl","data","window","$2sxc","http","apiUrl","Id","i0","_r1","ctx_r1","do","app","IsApp","AppsListActionsComponent","agInit","params","this","refresh","verb","selectors","decls","vars","consts","template","rf","ctx","AppsListActionsComponent_Conditional_2_Template","AppsListActionsComponent_Conditional_3_Template","AppsListActionsComponent_ng_template_10_Template","IsGlobal","IsInherited","lightSpeed","menu_r3","TippyDirective","MatIconModule","i1","MatBadgeModule","MatRippleModule","i2","MatMenuModule","i3","LightSpeedActionsComponent","encapsulation","AppsListComponent","#appsListSvc","#dialogRouter","constructor","snackBar","context","matDialog","viewContainerRef","changeDetectorRef","log","classLog","gridOptions","#buildGridOptions","features","inject","FeaturesService","isAddFromFolderEnabled","isEnabled","FeatureNames","AppSyncWithSiteFiles","transient","AppsListService","DialogRoutingService","fabOpen","signal","#refresh","apps","computed","getAll","ModuleRegistry","registerModules","ClientSideRowModelModule","ngOnInit","doOnDialogClosed","#loadApps","openChange","open","set","browseCatalog","createApp","navRelative","createInheritedApp","addFromFolder","importApp","files","state","#deleteApp","result","prompt","Name","delete","subscribe","error","undefined","duration","next","alert","#flushApp","confirm","flushCache","#getLightSpeedLink","formUrl","convertFormToUrl","AppAdminHelpers","getLightSpeedEditParams","urlSubRoute","zoneId","openLightSpeedFeatInfo","openFeatureDialog","LightSpeed","defaultGridOptions","columnDefs","ColumnDefinitions","IdWithDefaultRenderer","cellRendererParams","idFieldParamsTooltipGetter","IconShow","cellRenderer","AgBoolIconRenderer","settings","TextWide","field","cellClass","split","sort","p","toString","Thumbnail","value","Character","width","Number","Boolean","headerName","filter","BooleanFilterComponent","ActionsPinnedRight3","lightSpeedLink","openLightspeedFeatureInfo","update","v","$event","_c0","SxcGridModule","i4","MatDialogActions","EcoFabSpeedDialComponent","NgClass","EcoFabSpeedDialTriggerComponent","MatButtonModule","i5","i6","EcoFabSpeedDialActionsComponent","i7","RouterOutlet","DragAndDropDirective","WysiwygPasteFormatted","PasteImageFromClipboard","EditUiShowNotes","EditUiShowMetadataFor","NoSponsoredByToSic","EditUiTranslateWithGoogle","ContentSecurityPolicy","PermissionsByLanguage","ContentTypeFieldsReuseDefinitions","AppExportAssetsAdvanced","PickerUiCheckbox","PickerUiRadio","PickerSourceCsv","PickerSourceAppAssets","PickerFormulas","PickerUiMoreInfo","BaseDirective","subscriptions","Subscription","ngOnDestroy","unsubscribe","elementRef","zone","super","markStyle","input","allowedFileTypes","filesDropped","output","dropAreaClass","markStyleClass","dragClass","timeouts","element","nativeElement","classList","add","runOutsideAngular","fromEvent","event","preventDefault","stopPropagation","clearTimeouts","push","setTimeout","remove","onDrop","Array","from","dataTransfer","filterTypes","length","emit","timeout","clearTimeout","allowedTypes","map","type","toLocaleLowerCase","filtered","file","extIndex","name","lastIndexOf","ext","substring","includes","allowedTypesString","replace","hostBindings","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","pure"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/apps-management/apps-list/app-list-grid-config.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.html","./projects/eav-ui/src/app/apps-management/apps-list/apps-list-actions/apps-list-actions.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.ts","./projects/eav-ui/src/app/apps-management/apps-list/apps-list.component.html","./projects/eav-ui/src/app/features/feature-names.ts","./projects/eav-ui/src/app/shared/directives/base.directive.ts","./projects/eav-ui/src/app/shared/directives/drag-and-drop.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts"],"sourcesContent":["import { AgBoolCellIconSettings } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { EavWindow } from '../../shared/models/eav-window.model';\r\nimport { App } from '../models/app.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport const AppListShowIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      tooltip: 'Show this app to users',\r\n      icon: 'visibility',\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: 'visibility_off',\r\n    }\r\n  }\r\n};\r\n\r\nexport const AppListCodeErrorIcons: AgBoolCellIconSettings = {\r\n  states: {\r\n    true: {\r\n      clickable: true,\r\n      tooltip: 'This App uses obsolete code which will cause problems on future upgrades. Click to see details.',\r\n      icon: 'bug_report',\r\n      getUrl: (data: App) => window.$2sxc.http.apiUrl('sys/insights/logs?key=warnings-obsolete&filter=AppId=' + data.Id),\r\n    },\r\n    false: {\r\n      tooltip: 'Hide this app from users',\r\n      icon: '',\r\n    }\r\n  }\r\n};\r\n","<div class=\"actions-component\">\r\n  <!-- Global/Inherited button for shared apps (if enabled) -->\r\n  <div class=\"eav-grid-action-button icon\"\r\n    [tippy]=\"app.IsGlobal ? 'This app is global' : app.IsInherited ? 'This app is inherited' : ''\"\r\n    [tippyDisabled]=\"!app.IsGlobal && !app.IsInherited\">\r\n    @if (app.IsGlobal) {\r\n      <mat-icon>foundation</mat-icon>\r\n    }\r\n    @if (app.IsInherited) {\r\n      <mat-icon>holiday_village</mat-icon>\r\n    }\r\n  </div>\r\n\r\n  <!-- Lightspeed button -->\r\n  <app-lightspeed-action [lightSpeedOwner]=\"app\" [params]=\"params\" [lightSpeed]=\"app.lightSpeed\"></app-lightspeed-action>\r\n\r\n  <!-- More button -->\r\n  <div class=\"eav-grid-action-button highlight\" matRipple tippy=\"More\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<!-- The menu which appears on more -->\r\n<mat-menu #menu=\"matMenu\" class=\"grid-more-menu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item (click)=\"do('flushCache')\">\r\n      <mat-icon>cached</mat-icon>\r\n      <span>Flush cache</span>\r\n    </button>\r\n    <button mat-menu-item [disabled]=\"!app.IsApp\" (click)=\"do('deleteApp')\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { App } from '../../models/app.model';\r\nimport { AppsListActionsParams, AppsListActionsType } from './apps-list-actions.models';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LightSpeedActionsComponent } from '../../../admin-shared/lightspeed-action/lightspeed-action.component';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n    selector: 'app-apps-list-actions',\r\n    templateUrl: './apps-list-actions.component.html',\r\n    imports: [\r\n        TippyDirective,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n        MatRippleModule,\r\n        MatMenuModule,\r\n        LightSpeedActionsComponent,\r\n    ]\r\n})\r\nexport class AppsListActionsComponent implements ICellRendererAngularComp {\r\n  app: App;\r\n\r\n  public params: ICellRendererParams & AppsListActionsParams;\r\n  agInit(params: ICellRendererParams & AppsListActionsParams): void {\r\n    this.params = params;\r\n    this.app = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  do(verb: AppsListActionsType): void {\r\n    this.params.do(verb, this.app);\r\n  }\r\n}\r\n","import { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { GridOptions, ICellRendererParams, ModuleRegistry } from '@ag-grid-community/core';\r\nimport { NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, inject, OnInit, signal, ViewContainerRef } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EcoFabSpeedDialActionsComponent, EcoFabSpeedDialComponent, EcoFabSpeedDialTriggerComponent } from '@ecodev/fab-speed-dial';\r\nimport { transient } from '../../../../../core';\r\nimport { AppAdminHelpers } from '../../app-administration/app-admin-helpers';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { openFeatureDialog } from '../../features/shared/base-feature.component';\r\nimport { AgBoolCellIconsParams } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-params';\r\nimport { AgBoolIconRenderer } from '../../shared/ag-grid/apps-list-show/ag-bool-icon-renderer.component';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { FileUploadDialogData } from '../../shared/components/file-upload-dialog';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { DragAndDropDirective } from '../../shared/directives/drag-and-drop.directive';\r\nimport { convertFormToUrl } from '../../shared/helpers/url-prep.helper';\r\nimport { classLog } from '../../shared/logging';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { Context } from '../../shared/services/context';\r\nimport { App } from '../models/app.model';\r\nimport { AppsListService } from '../services/apps-list.service';\r\nimport { AppListCodeErrorIcons, AppListShowIcons } from './app-list-grid-config';\r\nimport { AppsListActionsComponent } from './apps-list-actions/apps-list-actions.component';\r\nimport { AppsListActionsParams } from './apps-list-actions/apps-list-actions.models';\r\n\r\n@Component({\r\n    selector: 'app-apps-list',\r\n    templateUrl: './apps-list.component.html',\r\n    imports: [\r\n        SxcGridModule,\r\n        MatDialogActions,\r\n        EcoFabSpeedDialComponent,\r\n        NgClass,\r\n        EcoFabSpeedDialTriggerComponent,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        EcoFabSpeedDialActionsComponent,\r\n        MatBadgeModule,\r\n        RouterOutlet,\r\n        DragAndDropDirective,\r\n    ]\r\n})\r\nexport class AppsListComponent implements OnInit {\r\n\r\n  log = classLog({ AppsListComponent });\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  public features = inject(FeaturesService);\r\n  protected isAddFromFolderEnabled = this.features.isEnabled[FeatureNames.AppSyncWithSiteFiles];\r\n\r\n  #appsListSvc = transient(AppsListService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private context: Context,\r\n    // Services for showing features in the menu\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  fabOpen = signal(false);\r\n\r\n  #refresh = signal(0);\r\n\r\n  apps = computed(() => {\r\n    const refresh = this.#refresh();\r\n    return this.#appsListSvc.getAll();\r\n  });\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.#dialogRouter.doOnDialogClosed(() => this.#loadApps());\r\n  }\r\n\r\n  openChange(open: boolean): void {\r\n    this.fabOpen.set(open);\r\n  }\r\n\r\n  // TODO: @2dg - try to fix this so the link is directly in the HTML without a function call\r\n  // @2dg Window not exist in Html an a have other Styles\r\n  browseCatalog(): void {\r\n    window.open('https://2sxc.org/apps', '_blank');\r\n  }\r\n\r\n  createApp(): void {\r\n    this.#dialogRouter.navRelative(['create']);\r\n  }\r\n\r\n  createInheritedApp(): void {\r\n    this.#dialogRouter.navRelative(['create-inherited']);\r\n  }\r\n\r\n  addFromFolder(): void {\r\n    this.#dialogRouter.navRelative(['add-app-from-folder']);\r\n  }\r\n\r\n  importApp(files?: File[]): void {\r\n    const dialogData: FileUploadDialogData = { files };\r\n    this.#dialogRouter.navRelative(['import'], { state: dialogData });\r\n  }\r\n\r\n  #deleteApp(app: App): void {\r\n    const result = prompt(`This cannot be undone. To really delete this app, type 'yes!' or type/paste the app-name here. Are you sure want to delete '${app.Name}' (${app.Id})?`);\r\n    if (result === null) return;\r\n    if (result === app.Name || result === 'yes!') {\r\n      this.snackBar.open('Deleting...');\r\n      this.#appsListSvc.delete(app.Id).subscribe({\r\n        error: () => {\r\n          this.snackBar.open('Delete failed. Please check console for more information', undefined, { duration: 3000 });\r\n          this.#loadApps();\r\n        },\r\n        next: () => {\r\n          this.snackBar.open('Deleted', undefined, { duration: 2000 });\r\n          this.#loadApps();\r\n        },\r\n      });\r\n    } else {\r\n      alert('Input did not match - will not delete');\r\n    }\r\n  }\r\n\r\n  #flushApp(app: App): void {\r\n    if (!confirm(`Flush the App Cache for ${app.Name} (${app.Id})?`))\r\n      return;\r\n    this.snackBar.open('Flushing cache...');\r\n    this.#appsListSvc.flushCache(app.Id).subscribe({\r\n      error: () => this.snackBar.open('Cache flush failed. Please check console.', undefined, { duration: 3000 }),\r\n      next: () => this.snackBar.open('Cache flushed', undefined, { duration: 2000 }),\r\n    });\r\n  }\r\n\r\n  #getLightSpeedLink(app?: App): string {\r\n    const formUrl = convertFormToUrl(AppAdminHelpers.getLightSpeedEditParams(app.Id));\r\n    const urlString = `${this.context.zoneId}/${app.Id}/edit/${formUrl}`;\r\n    return this.#dialogRouter.urlSubRoute(urlString);\r\n  }\r\n\r\n  openLightSpeedFeatInfo() {\r\n    openFeatureDialog(this.matDialog, FeatureNames.LightSpeed, this.viewContainerRef, this.changeDetectorRef);\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          cellRendererParams: ColumnDefinitions.idFieldParamsTooltipGetter<App>(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.IconShow,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: { settings: () => AppListShowIcons },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Name',\r\n          cellClass: 'apps-list-primary-action highlight'.split(' '),\r\n          sort: 'asc',\r\n          cellRenderer: (p: ICellRendererParams) => {\r\n            const app: App = p.data;\r\n            const url = this.#dialogRouter.urlSubRoute(app.Id.toString());\r\n            return `\r\n              <a class=\"default-link fill-cell\" href=\"#${url}\">\r\n                <div class=\"container\">\r\n                  ${app.Thumbnail\r\n                    ? `<img class=\"image logo\" src=\"${app.Thumbnail}?w=40&h=40&mode=crop\"></img>`\r\n                    : `<div class=\"image logo\"><span class=\"material-symbols-outlined\">star</span></div>`\r\n                  }\r\n                  ${p.value}\r\n                </div>\r\n              </a>\r\n            `;\r\n          },\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Folder',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Character,\r\n          field: 'Version',\r\n          width: 78,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Items',\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Boolean,\r\n          field: 'HasCodeWarnings',\r\n          headerName: 'Code',\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: AgBoolIconRenderer,\r\n          cellRendererParams: (() => ({ settings: () => AppListCodeErrorIcons } as AgBoolCellIconsParams<App>))(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight3,\r\n          cellRenderer: AppsListActionsComponent,\r\n          cellRendererParams: {\r\n            lightSpeedLink: (app: App) => this.#getLightSpeedLink(app),\r\n            openLightspeedFeatureInfo: () => this.openLightSpeedFeatInfo(),\r\n            do: (verb, app) => {\r\n              switch (verb) {\r\n                case 'deleteApp': this.#deleteApp(app); break;\r\n                case 'flushCache': this.#flushApp(app); break;\r\n              }\r\n            }\r\n          } satisfies AppsListActionsParams,\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n\r\n  #loadApps(): void {\r\n    this.#refresh.update(v => v + 1);\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n  <ag-grid-angular\r\n    class=\"ag-theme-material\"\r\n    [rowData]=\"apps()()\"\r\n    [gridOptions]=\"gridOptions\"\r\n    appDragAndDrop\r\n    [allowedFileTypes]=\"'zip'\"\r\n    (filesDropped)=\"importApp($event)\"\r\n  >\r\n  </ag-grid-angular>\r\n  <mat-dialog-actions align=\"end\">\r\n    <eco-fab-speed-dial class=\"eav-eco-fab-speed-dial\" [ngClass]=\"{ 'fab-opened': fabOpen() }\" (openChange)=\"openChange($event)\">\r\n      <eco-fab-speed-dial-trigger [spin]=\"true\">\r\n        <button mat-fab>\r\n          <mat-icon class=\"spin180\">{{ fabOpen() ? 'close' : 'add' }}</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-trigger>\r\n      <eco-fab-speed-dial-actions class=\"eav-eco-fab-speed-dial-actions\">\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Find more apps\" (click)=\"browseCatalog()\">\r\n          <mat-icon>search</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create inherited app\" (click)=\"createInheritedApp()\">\r\n          <mat-icon>holiday_village</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Add from folder\" (click)=\"addFromFolder()\">\r\n          <mat-icon\r\n            [matBadgeHidden]=\"isAddFromFolderEnabled()\"\r\n            matBadgeColor=\"accent\"\r\n            matBadgeSize=\"small\"\r\n            matBadge=\"💎\"\r\n            matBadgePosition=\"below after\"\r\n            aria-hidden=\"false\"\r\n          >\r\n            add\r\n          </mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Import app\" (click)=\"importApp()\">\r\n          <mat-icon>cloud_upload</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab class=\"eav-eco-fab-speed-dial-action-button\" label=\"Create app\" (click)=\"createApp()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </eco-fab-speed-dial-actions>\r\n    </eco-fab-speed-dial>\r\n  </mat-dialog-actions>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","// This will make it easier for us to see where certain feature names are in use\r\n\r\nexport const FeatureNames = {\r\n  AppSyncWithSiteFiles: 'AppSyncWithSiteFiles',\r\n  WysiwygPasteFormatted: 'WysiwygPasteFormatted',\r\n  PasteImageFromClipboard: 'PasteImageFromClipboard',\r\n  EditUiShowNotes: 'EditUiShowNotes',\r\n  EditUiShowMetadataFor: 'EditUiShowMetadataFor',\r\n  NoSponsoredByToSic: 'NoSponsoredByToSic',\r\n  EditUiTranslateWithGoogle: 'EditUiTranslateWithGoogle',\r\n  LightSpeed: 'LightSpeedOutputCache',\r\n  ContentSecurityPolicy: 'ContentSecurityPolicy',\r\n  PermissionsByLanguage: 'PermissionsByLanguage',\r\n  ContentTypeFieldsReuseDefinitions: 'ContentTypeFieldsReuseDefinitions',\r\n  AppExportAssetsAdvanced: 'AppExportAssetsAdvanced',\r\n\r\n  // Picker features\r\n  PickerUiCheckbox: 'PickerUiCheckbox',\r\n  PickerUiRadio: 'PickerUiRadio',\r\n  PickerSourceCsv: 'PickerSourceCsv',\r\n  PickerSourceAppAssets: 'PickerSourceAppAssets',\r\n  PickerFormulas: 'PickerFormulas',\r\n  PickerUiMoreInfo: 'PickerUiMoreInfo',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseDirective implements OnDestroy {\r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, input, NgZone, OnDestroy, OnInit, output, signal } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fromEvent } from 'rxjs';\r\nimport { BaseDirective } from './base.directive';\r\n\r\n@Directive({\r\n  selector: '[appDragAndDrop]',\r\n})\r\nexport class DragAndDropDirective extends BaseDirective implements OnInit, OnDestroy {\r\n  markStyle = input<'outline' | 'fill' | 'shadow'>('outline');\r\n  /** Comma separated file types, e.g. 'txt,doc,docx' */\r\n  allowedFileTypes = input<string>('');\r\n  protected filesDropped = output<File[]>();\r\n\r\n  private element: HTMLElement;\r\n  private dropAreaClass = 'eav-droparea';\r\n  private markStyleClass = signal<string>('');\r\n  private dragClass = 'eav-dragover';\r\n  private timeouts: number[] = [];\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone, private snackBar: MatSnackBar) {\r\n    super();\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.markStyleClass.set(`eav-droparea-${this.markStyle()}`);\r\n    this.element.classList.add(this.dropAreaClass, this.markStyleClass());\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragover').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.clearTimeouts();\r\n          this.element.classList.add(this.dragClass);\r\n        })\r\n      );\r\n      this.subscriptions.add(\r\n        fromEvent<DragEvent>(this.element, 'dragleave').subscribe(event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.timeouts.push(\r\n            window.setTimeout(() => { this.element.classList.remove(this.dragClass); }, 50)\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dropAreaClass, this.markStyleClass(), this.dragClass);\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clearTimeouts();\r\n    this.element.classList.remove(this.dragClass);\r\n    const fileList = event.dataTransfer.files;\r\n    let files = Array.from(fileList);\r\n    files = this.filterTypes(files, this.allowedFileTypes());\r\n    if (files.length > 0) {\r\n      this.filesDropped.emit(files);\r\n    }\r\n  }\r\n\r\n  private clearTimeouts() {\r\n    for (const timeout of this.timeouts) {\r\n      clearTimeout(timeout);\r\n    }\r\n    this.timeouts = [];\r\n  }\r\n\r\n  private filterTypes(files: File[], allowedFileTypes: string) {\r\n    if (allowedFileTypes === '') { return files; }\r\n\r\n    const allowedTypes = allowedFileTypes.split(',').map(type => type.toLocaleLowerCase());\r\n    const filtered = files.filter(file => {\r\n      const extIndex = file.name.lastIndexOf('.');\r\n      if (extIndex <= 0) { return false; }\r\n      const ext = file.name.substring(extIndex + 1).toLocaleLowerCase();\r\n      const allowed = allowedTypes.includes(ext);\r\n      return allowed;\r\n    });\r\n\r\n    if (files.length !== filtered.length) {\r\n      const allowedTypesString = this.allowedFileTypes().replace(/\\,/g, ', ');\r\n      const message = filtered.length\r\n        ? 'Some files were filtered out. This drop location only accepts file types: ' + allowedTypesString\r\n        : 'This drop location only accepts file types: ' + allowedTypesString;\r\n      this.snackBar.open(message, null, { duration: 5000 });\r\n    }\r\n    return filtered;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeHtml',\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}