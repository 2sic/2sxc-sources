{"version":3,"sources":["C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseTimes.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_isIndex.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_arrayLikeKeys.js","./src/app/shared/helpers/load-scripts.helper.ts","../edit/shared/services/global-configuration.service.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_getAllKeys.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_nativeCreate.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashGet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_Hash.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashClear.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashDelete.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_hashSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_getMapData.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_isKeyable.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_MapCache.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheClear.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheDelete.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheGet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapCacheSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_Stack.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackClear.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackDelete.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackGet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_stackSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/keys.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheClear.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_assocIndexOf.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheDelete.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_ListCache.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheGet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_listCacheSet.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/eq.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/stubArray.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_arrayPush.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/rxjs/_esm5/internal/observable/zip.js","../edit/eav-material-controls/input-types/base/base.component.ts","../edit/eav-material-controls/adam/adam-browser/adam-browser.models.ts","../edit/shared/models/feature/feature.ts","../edit/shared/store/ngrx-data/feature.service.ts","../edit/shared/directives/paste-clipboard-image.directive.ts","../shared/features-guids.constants.ts","../edit/eav-material-controls/adam/adam-browser/adam-browser.component.html","../edit/eav-material-controls/adam/adam-browser/adam-browser.component.ts","../edit/eav-material-controls/adam/adam-hint/adam-hint.component.ts","../edit/eav-material-controls/adam/adam-hint/adam-hint.component.html","../edit/eav-material-controls/adam/adam-attach-wrapper/adam-attach-wrapper.component.ts","../edit/eav-material-controls/adam/adam-attach-wrapper/adam-attach-wrapper.component.html","../edit/eav-material-controls/wrappers/collapsible-field-wrapper/collapsible-field-wrapper.component.ts","../edit/eav-material-controls/wrappers/collapsible-field-wrapper/collapsible-field-wrapper.component.html","../edit/shared/store/ngrx-data/content-type.service.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_SetCache.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_setCacheAdd.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_setCacheHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_arraySome.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_equalArrays.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_cacheHas.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_mapToArray.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_setToArray.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_equalByTag.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_equalObjects.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseIsEqualDeep.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/isEqual.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseIsEqual.js","../edit/shared/constants/translation-link.constants.ts","../edit/eav-material-controls/localization/link-to-other-language/link-to-other-language.constants.ts","../edit/eav-material-controls/localization/link-to-other-language/link-to-other-language.component.html","../edit/eav-material-controls/localization/link-to-other-language/link-to-other-language.component.ts","../edit/eav-material-controls/localization/link-to-other-language/link-to-other-language.helpers.ts","../edit/eav-material-controls/localization/translate-group-menu/translate-group-menu.helpers.ts","../edit/eav-material-controls/localization/translate-group-menu/translate-group-menu.component.html","../edit/eav-material-controls/localization/translate-group-menu/translate-group-menu.component.ts","../edit/shared/directives/change-anchor-target.directive.ts","../edit/eav-material-controls/wrappers/collapsible-wrapper/collapsible-wrapper.component.html","../edit/eav-material-controls/wrappers/collapsible-wrapper/collapsible-wrapper.component.ts","../edit/eav-material-controls/adam/dropzone-wrapper/dropzone-wrapper.models.ts","../edit/eav-material-controls/adam/dropzone-wrapper/dropzone-wrapper.component.ts","../edit/eav-material-controls/adam/dropzone-wrapper/dropzone-wrapper.component.html","../edit/eav-material-controls/wrappers/eav-localization-wrapper/eav-localization-wrapper.component.ts","../edit/eav-material-controls/wrappers/eav-localization-wrapper/eav-localization-wrapper.component.html","../edit/shared/animations/content-expand-animation.ts","../edit/eav-material-controls/input-types/entity/entity-default/entity-default.helpers.ts","../edit/eav-material-controls/wrappers/field-helper-text/field-helper-text.component.html","../edit/eav-material-controls/wrappers/field-helper-text/field-helper-text.component.ts","../edit/eav-material-controls/wrappers/entity-expandable-wrapper/entity-expandable-wrapper.component.html","../edit/eav-material-controls/wrappers/entity-expandable-wrapper/entity-expandable-wrapper.component.ts","../edit/eav-material-controls/input-types/custom/external-web-component/connector/models/connector-instance.model.ts","../edit/eav-material-controls/input-types/custom/external-web-component/connector/connector.helper.ts","../edit/eav-material-controls/wrappers/expandable-wrapper/expandable-wrapper.component.html","../edit/eav-material-controls/wrappers/expandable-wrapper/expandable-wrapper.component.ts","../edit/eav-material-controls/wrappers/hidden-wrapper/hidden-wrapper.component.ts","../edit/eav-material-controls/wrappers/hidden-wrapper/hidden-wrapper.component.html","../edit/eav-material-controls/wrappers/hyperlink-default-expandable-wrapper/hyperlink-default-expandable-wrapper.component.html","../edit/eav-material-controls/wrappers/hyperlink-default-expandable-wrapper/hyperlink-default-expandable-wrapper.component.ts","../edit/eav-material-controls/wrappers/hyperlink-library-expandable-wrapper/hyperlink-library-expandable-wrapper.component.html","../edit/eav-material-controls/wrappers/hyperlink-library-expandable-wrapper/hyperlink-library-expandable-wrapper.component.ts","../edit/eav-dynamic-form/decorators/input-type.decorator.ts","../edit/eav-material-controls/input-types/boolean/boolean-default/boolean-default.component.html","../edit/eav-material-controls/input-types/boolean/boolean-default/boolean-default.component.ts","../edit/eav-material-controls/input-types/datetime/datetime-default/datetime-default.component.html","../edit/eav-material-controls/input-types/datetime/datetime-default/datetime-default.component.ts","../edit/eav-material-controls/input-types/empty/empty-default/empty-default.component.ts","../shared/field-mask.service.ts","../edit/eav-material-controls/input-types/entity/entity-default-search/entity-default-search.component.html","../edit/eav-material-controls/input-types/entity/entity-default-search/entity-default-search.component.ts","../edit/eav-material-controls/input-types/entity/entity-default-list/entity-default-list.component.html","../edit/eav-material-controls/input-types/entity/entity-default-list/entity-default-list.component.ts","../edit/eav-material-controls/input-types/entity/entity-default/entity-default.component.html","../edit/eav-material-controls/input-types/entity/entity-default/entity-default.component.ts","../edit/eav-material-controls/input-types/hyperlink/hyperlink-default/hyperlink-default.component.html","../edit/eav-material-controls/input-types/hyperlink/hyperlink-default/hyperlink-default.component.ts","../edit/eav-material-controls/input-types/number/number-default/number-default.component.html","../edit/eav-material-controls/input-types/number/number-default/number-default.component.ts","../edit/eav-material-controls/input-types/string/string-default/string-default.component.html","../edit/eav-material-controls/input-types/string/string-default/string-default.component.ts","../edit/eav-material-controls/input-types/string/string-dropdown/string-dropdown.component.html","../edit/eav-material-controls/input-types/string/string-dropdown/string-dropdown.component.ts","../edit/eav-material-controls/input-types/string/string-dropdown/string-dropdown.helpers.ts","../edit/eav-material-controls/input-types/entity/entity-query/entity-query.component.ts","../edit/eav-material-controls/input-types/string/string-dropdown-query/string-dropdown-query.component.ts","../edit/eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.component.html","../edit/eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.component.ts","../edit/eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.helpers.ts","../edit/eav-material-controls/input-types/string/string-template-picker/string-template-picker.constants.ts","../edit/eav-material-controls/input-types/string/string-template-picker/string-template-picker.component.html","../edit/eav-material-controls/input-types/string/string-template-picker/string-template-picker.component.ts","../edit/eav-material-controls/input-types/string/string-url-path/string-url-path.component.html","../edit/eav-material-controls/input-types/string/string-url-path/string-url-path.component.ts","../edit/eav-material-controls/input-types/custom/custom-default/custom-default.component.ts","../edit/eav-material-controls/input-types/custom/custom-default/custom-default.component.html","../edit/eav-material-controls/input-types/entity/entity-content-blocks/entity-content-blocks.component.ts","../edit/eav-material-controls/input-types/custom/external-web-component/connector/connector.component.ts","../edit/eav-material-controls/input-types/custom/external-web-component/connector/connector.component.html","../edit/eav-material-controls/input-types/custom/external-web-component/external-web-component.component.html","../edit/eav-material-controls/input-types/custom/external-web-component/external-web-component.component.ts","../edit/eav-material-controls/input-types/hyperlink/hyperlink-library/hyperlink-library.component.ts","../edit/eav-material-controls/input-types/boolean/boolean-tristate/boolean-tristate.component.html","../edit/eav-material-controls/input-types/boolean/boolean-tristate/boolean-tristate.component.ts","../edit/eav-material-controls/input-types/custom/custom-json-editor/custom-json-editor.component.html","../edit/eav-material-controls/input-types/custom/custom-json-editor/custom-json-editor.component.ts","../edit/eav-dynamic-form/components/eav-field/eav-field.directive.ts","../edit/eav-dynamic-form/components/eav-form/eav-form.component.ts","../edit/eav-dynamic-form/components/eav-form/eav-form.component.html","../edit/eav-item-dialog/item-edit-form/item-edit-form.component.html","../edit/eav-item-dialog/item-edit-form/item-edit-form.component.ts","../edit/shared/models/json-format-v1/value1.ts","../edit/shared/models/json-format-v1/attributes1.ts","../edit/shared/models/json-format-v1/type1.ts","../edit/shared/models/json-format-v1/for1.ts","../edit/shared/models/json-format-v1/entity1.ts","../edit/shared/models/json-format-v1/json-item1.ts","../edit/eav-material-controls/dialogs/snack-bar-unsaved-changes/snack-bar-unsaved-changes.component.ts","../edit/eav-material-controls/dialogs/snack-bar-unsaved-changes/snack-bar-unsaved-changes.component.html","../edit/eav-material-controls/dialogs/snack-bar-save-errors/snack-bar-save-errors.component.html","../edit/eav-material-controls/dialogs/snack-bar-save-errors/snack-bar-save-errors.component.ts","../edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.helpers.ts","../edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.constants.ts","../edit/eav-material-controls/dialogs/save-status-dialog/save-status-dialog.component.ts","../edit/eav-material-controls/dialogs/save-status-dialog/save-status-dialog.component.html","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher-services/mouse-scroll-helper.ts","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher-services/center-selected-helper.ts","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher-services/show-shadows-helper.ts","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher-services/eav-language-switcher.helpers.ts","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher.component.html","../edit/eav-material-controls/localization/eav-language-switcher/eav-language-switcher.component.ts","../edit/eav-item-dialog/multi-item-edit-form-header/multi-item-edit-form-header.component.html","../edit/eav-item-dialog/multi-item-edit-form-header/multi-item-edit-form-header.component.ts","../edit/eav-item-dialog/multi-item-edit-form-debug/multi-item-edit-form-debug.component.html","../edit/eav-item-dialog/multi-item-edit-form-debug/multi-item-edit-form-debug.component.ts","../edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.component.html","../edit/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.component.ts","../edit/shared/services/dropzone-dragging.helper.ts","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_baseGetAllKeys.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_Uint8Array.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_arrayFilter.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/lodash-es/_getSymbols.js","C:/Projects/2sxc/eav-item-dialog-angular/node_modules/reflect-metadata/Reflect.js"],"names":["reIsUint","value","length","type","test","Object","prototype","hasOwnProperty","inherited","isArr","isArray","isArg","isArguments","isBuff","isBuffer","isType","isTypedArray","skipIndexes","result","n","iteratee","index","Array","String","key","call","push","loadScripts","scriptObjects","callback","iteration","newCallback","bind","this","scrObj","global","window","scriptInDom","document","querySelector","src","addEventListener","once","scriptEl","createElement","head","appendChild","store","snackBar","loadDebugEnabled","debugEnabled","dispatch","toggleDebugEnabled","select","pipe","subscribe","enabled","open","duration","getDebugEnabled","GlobalConfigurationService","object","Hash","entries","clear","entry","set","__data__","size","has","get","data","undefined","map","MapCache","Stack","pairs","LARGE_ARRAY_SIZE","array","eq","splice","ListCache","pop","other","values","offset","zip","observables","_i","arguments","resultSelector","fromArray","lift","ZipOperator","subscriber","source","_super","ZipSubscriber","destination","create","_this","iterators","active","_next","StaticIterator","_complete","len","unsubscribe","i","iterator","stillUnsubscribed","add","complete","notifyInactive","checkIterators","hasValue","shouldComplete","args","next","hasCompleted","done","_tryresultSelector","apply","err","error","Subscriber","nextResult","StaticArrayIterator","ZipBufferIterator","parent","observable","buffer","isComplete","shift","notifyComplete","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","subscribeToResult","OuterSubscriber","eavService","validationMessagesService","subscription","Subscription","ngOnInit","control","group","controls","config","field","name","settings$","label$","settings","Name","placeholder$","Placeholder","required$","isRequired","invalid$","statusChanges","status","startWith","invalid","showValidation$","filter","value$","formValueChange$","formSet","formId","form","entityGuid","entity","distinctUntilChanged","disabled$","formDisabledChange$","asObservable","formDisabledSet","disabled","ngOnDestroy","BaseComponent","rootSubfolder","fileFilter","allowAssetsInRoot","folderDepth","metadataContentTypes","usePortalRoot","showImagesOnly","autoLoad","enableSelect","subfolder","allowEdit","maxDepthReached","expires","id","isPublic","ui","createFeatureArray","features","featureList","forEach","f","Feature","public","serviceElementsFactory","loadFeatures","addAllToCache","isFeatureEnabled","guid","isEnabled","entities$","take","feature","find","ftr","FeatureService","elementRef","featureService","eventListeners","elementType","nativeElement","pastableTextarea","pastableNonInputable","handleImageBound","handleImage","element","listener","eventListener","removeEventListener","event","image","getFile","detail","dropzone","uploadFile","newFile","file","formData","FormData","append","imageFileName","e","console","PasteClipboardImageDirective","adamService","fileTypeService","dnnContext","editRoutingService","zone","openUpload","adamConfig$","BehaviorSubject","items$","refreshOnChildClosed","url","$2sxc","http","apiUrl","header","ContentTypeName","Guid","pasteClipboardImage","adam","toggle","run","setConfig","getConfig","getConfig$","onItemClick","onItemUpload","refresh","fetchItems","addFullPath","item","adamConfig","expanded$","isExpanded","addFolder","folderName","prompt","res","del","confirm","deleteItem","editItemMetadata","adamItem","items","MetadataId","_metadataContentType","For","Target","metadata","cmsObject","target","Type","Id","EntityId","goUp","includes","slice","lastIndexOf","getMetadataContentType","found","match","goIntoFolder","openUploadClick","emit","rename","newName","getAll","filteredItems","allowedFileTypes","split","extension","replace","trim","IsFolder","substring","_icon","getIconClass","_isMaterialIcon","isKnownType","_displaySize","Size","toFixed","AllowEdit","sort","a","b","toLocaleLowerCase","localeCompare","toString","newConfig","JSON","stringify","trackByFn","startDisabled","isExternal","oldConfig","AdamConfigInstance","newConfigKeys","keys","startsWith","folders","join","oldDzConfig","newDzConfig","dzUrlParams","getUrlParams","newUrl","replaceUrlParam","uploadDisabled","childFormClosed","AdamBrowserComponent","height","overflow","AdamHintComponent","adamDisabled$","fullscreenAdam","inputType","HyperlinkLibrary","ngAfterViewInit","invisibleClickableRef","click","AdamAttachWrapperComponent","collapse$","toggleCollapse","CollapsibleFieldWrapperComponent","addContentTypes","rawContentTypes","builtContentTypes","rawCT","addManyToCache","getContentTypeById","contentTypes","contentType","ContentTypeService","SetCache","predicate","bitmask","customizer","equalFunc","stack","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","symbolProto","symbolValueOf","valueOf","objectTag","baseIsEqual","isObjectLike","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","tag","byteLength","byteOffset","message","convert","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","objValue","objCtor","constructor","othCtor","Translate","DontTranslate","MissingDefaultLangValue","LinkReadOnly","LinkReadWrite","LinkCopyFrom","NoTranslate","FromPrimary","FromOther","LinkShared","dialogData","languageService","languageInstanceService","TranslationLinks","TranslationLinkConstants","I18nKeys","I18nKeyConstants","selected$","showLanguages$","language","i18nKey","translationLink","findI18nKey","linkType","i18nRoot$","languages$","combineLatest","getCurrentLanguage","currentLanguage","lang","showLanguages","newSelected","findTranslationLink","selectLanguage","isOkDisabled","selected","isLanguageDisabled","languageKey","attributes","isEditableTranslationExist","attributeKey","defaultLanguage","LinkToOtherLanguageComponent","calculateSharedInfoMessage","dimensions","TranslateGroupMenuHelpers","calculateShortDimensions","calculateEditAndReadDimensions","editableDimensions","readOnlyDimensions","infoMessage","editableExist","readOnlyExist","dimensionsMap","shortCurrentLanguage","indexOf","dimension","shortNoReadOnly","shortDimension","dialog","itemService","inputTypeService","contentTypeService","translationLinkConstants","defaultLanguageMissingValue$","headerGroupSlotIsEmpty","translationState$","infoMessage$","infoMessageLabel$","fieldConfig","isParentGroup","of","currentLanguage$","defaultLanguage$","getDefaultLanguage","attributes$","selectAttributesByEntityId","entityId","subscribeToAttributeValues","subscribeMenuChange","subscribeToItemFromStore","subscribeToContentTypeFromStore","subscribeToCurrentLanguageFromStore","subscribeToDefaultLanguageFromStore","subscribeToEntityHeaderFromStore","ngOnChanges","changes","toggleTranslateField","translateUnlink","openLinkToOtherLanguage","dialogRef","panelClass","autoFocus","width","keydownEvents","keyCode","navigator","platform","metaKey","ctrlKey","preventDefault","afterClosed","actionResult","triggerTranslation","isTranslateDisabled","removeItemAttributeDimension","defaultValue","getValueTranslation","fieldType","getFieldType","addAttributeValue","refreshControlConfig","linkToDefault","translateAll","setTranslationState","triggerLocalizationWrapperMenuChange","dontTranslateAll","copyFromAll","copyFrom","copyFromLanguageKey","attributeValueTranslation","isEditableOrReadonlyTranslationExist","updateItemAttributeValue","linkReadOnlyAll","linkReadOnly","addItemAttributeDimension","linkReadWriteAll","linkReadWrite","getTranslationStateClass","setControlDisable","readTranslationState","setInfoMessage","newTranslationState","disable","emitEvent","enable","translationExistsInDefault","isReadonlyTranslationExist","translateAllConfiguration","fieldSettings","translateSettings","fullSettings","label","validation","getValidations","required","Group","SlotCanBeEmpty","selectHeaderByEntityId","SlotIsEmpty","selectItemById","attributeDef","attr","calculatedInputType","calculateInputType","isI18nDisabled","editableElements","readOnlyElements","localizationWrapperMenuChange$","s","d","TranslateGroupMenuComponent","runOutsideAngular","observer","MutationObserver","mutations","tagName","anchor","childAnchors","getElementsByTagName","observe","childList","subtree","disconnect","ChangeAnchorTargetDirective","header$","DefaultCollapsed","slotCanBeEmpty$","slotIsEmpty$","itemTitle$","contentTypeId","cType","defaultLang","getValueOrDefault","Label","description$","EditInstructions","Notes","toggleSlotIsEmpty","hdr","newHeader","updateItemHeader","CollapsibleWrapperComponent","headers","acceptedFiles","maxFiles","parallelUploads","autoReset","errorReset","cancelReset","maxFilesize","paramName","maxThumbnailFilesize","dictDefaultMessage","addRemoveLinks","previewsContainer","clickable","dropzoneConfig$","dropzoneDisabled$","dropzoneConfig","onUploadError","dropzoneRef","reset","onUploadSuccess","response","Success","alert","Error","eavConfig","appId","sxc","webApi","DropzoneConfigInstance","uploadLimit","upload","chunked","defaultOptions","chunking","processFile","DropzoneWrapperComponent","toggleTranslateField$","open$","toggleTranslate","isOpen","EavLocalizationComponent","ContentExpandAnimation","maxHeight","params","bottomPixels","innerWidth","calculateSelectedEntities","fieldValue","separator","availableEntities","translate","convertValueToArray","Value","Text","instant","tooltip","isFreeTextOrNotFound","disableError","isFullText","toggleHint","classList","contains","parentNode","getErrorMessage","FieldHelperTextComponent","dialogIsOpen$","selectedEntities$","entityCache$","Separator","calculateBottomPixels","expandDialog","expand","closeDialog","EntityExpandableWrapperComponent","_connectorHost","_experimental","ConnectorDataInstance","ConnectorDialogInstance","loadScript","testOrScripts","srcOrCallback","resolveTokens","script","getUrlPrefix","sxcVersion","clientValueChangeListeners","forceConnectorSave$","newValue","clientListener","update","onValueChange","componentTag","close","customElContainerRef","customElName","translateService","dnnBridgeService","customEl","connector","buildConnector","destroy","removeChild","connectorHost","calculateRegularProps","experimental","calculateExperimentalProps","updateControl","allInputTypeNames","calculateInputTypes","formGroup","isExpanded$","updateField","setFocused","focused","focused$","openPagePicker","getUrlOfId","path","patchValue","dirty","markAsDirty","touched","markAsTouched","connectorCreator","previewContainerRef","dropzoneDraggingHelper","attach","backdropRef","detach","ExpandableWrapperComponent","visibleInEditUI$","VisibleInEditUI","HiddenWrapperComponent","preview$","thumbnailUrl","thumbnailPreviewUrl","floatingText","isImage","icon","setLink","adamButton$","Buttons","pageButton$","setValue","CurrentValue","FileFilter","Paths","pagePickerCallback","urlLowered","toLowerCase","preview","quote","qt","HyperlinkDefaultExpandableWrapperComponent","adamItems$","HyperlinkLibraryExpandableWrapperComponent","InputType","annotation","Reflect","defineMetadata","TitleTrue","TitleFalse","BooleanDefaultComponent","wrapper","EavLocalizationWrapper","dateAdapter","ngxDateTimeAdapter","currentLang","setLocale","useTimePicker$","UseTimePicker","DatetimeDefaultComponent","EmptyDefaultComponent","mask","model","changeEvent","overloadPreCleanValues","fields","findFields","unwrapField","subscriptions","fieldList","preClean","watchAllFields","resolve","zoneId","replaceValue","cleaned","matches","staticName","onChange","maybeNew","valueSub","valueChanges","globalConfigurationService","toggleFreeTextMode","addSelected","editEntity","filteredEntities","debugEnabled$","currentValue","autocompleteRef","filterSelectionList","getPlaceholder","toggleFreeText","option","optionSelected","blur","insertNull","isOptionDisabled","selectedEntities","openNewEntityDialog","EntityDefaultSearchComponent","reorder","removeSelected","deleteEntity","drop","previousIndex","currentIndex","edit","removeItem","EntityDefaultListComponent","entityService","useQuery","error$","freeTextMode$","disableAddNew$","calculateSettings","contentTypeMask","FieldMaskService","EntityType","updateAddNew","fetchAvailableEntities","fixedSettings","AllowMultiValue","EnableEdit","EnableCreate","EnableAddExisting","EnableRemove","EnableDelete","contentTypeName","getAvailableEntities","reorderIndexes","updateValue","props","title","delete","dismiss","res2","childFormResult","newItemGuid","action","valueArray","valueString","convertArrayToString","setTimeout","entitySearchComponent","focus","EntityDefaultComponent","buttons$","attachAdam","link","toggleAdam","ServerResourceMapping","FullPath","HyperlinkDefaultComponent","DropzoneWrapper","HyperlinkDefaultExpandableWrapper","AdamAttachWrapper","min$","Min","max$","Max","NumberDefaultComponent","rowCount$","RowCount","StringDefaultComponent","toggleFreeText$","enableTextEntry$","EnableTextEntry","dropdownOptions$","dropdownValues","currentValueFound","options","DropdownValues","maybeWantedEmptyVal","val","StringDropdownComponent","queryService","paramsMask","UrlParameters","Query","StreamName","streamName","queryUrl","queryEntityMapping","Title","EntityQueryComponent","StringDropdownQueryComponent","class","scriptsLoaderService","iconOptions$","cssPrefix","CssPrefix","showPrefix","ShowPrefix","load","Files","newIconOptions","classPrefix","foundList","duplicateDetector","truncateLabel","styleSheets","sheet","rules","cssRules","j","rule","selectorText","selector","iconClass","search","findAllIconsInCss","previewCss$","PreviewCss","filteredIcons$","iconList","StringFontIconPickerComponent","templateTypes","Token","ext","prefix","suggestion","assetsService","templateOptions$","activeSpec","templates","resetIfNotFound","typeWatcher","setFileConfig","locationWatcher","onLocationChange","setTemplateOptions","location","filtered","template","createTemplate","foundSlash","endsWith","fullPath","StringTemplatePickerComponent","lastAutoCopy","autoGenerateMask","AutoGenerateMask","allowSlashes","AllowSlashes","fieldMaskService","onSourcesChanged","clean","stripNonUrlCharacters","trimEnd","StringUrlPathComponent","CustomDefaultComponent","EntityContentBlockComponent","history","state","ConnectorComponent","loading$","loadAssets","getInputTypeById","assets","AngularAssets","assetsLoaded","ExternalWebComponentComponent","attachAdamValidator","Required","adamValidation","AllowAssetsInRoot","FolderDepth","MetadataContentTypes","setValidators","validators","validateAdam","adamItems","updateValueAndValidity","HyperlinkLibraryComponent","HyperlinkLibraryExpandableWrapper","TitleIndeterminate","nextValue","BooleanTristateComponent","Rows","CustomJsonEditorComponent","resolver","container","components","controlConfiguration","createFieldOrGroup","fieldGroup","createGroupComponents","createComponent","wrappers","createComponentWrappers","componentType","readComponentType","ExternalWebComponent","inputTypeAnnotations","getMetadata","factory","resolveComponentFactory","ref","assign","instance","wrapperName","createWrapper","componentFactory","fieldComponent","EavFieldDirective","formBuilder","formSubmit","formValueChange","createControlsInFormGroup","submitOutside","valueIsChanged","valueKeys","valueKey","fieldConfigArray","addControl","createControl","initialValue","EavFormComponent","actions$","buildFieldsService","itemFormValueChange","setFormValues","getContentTypeId","contentType$","itemFields$","buildFields","formSaveObservable","updateItemAttributesValues","submit","valid","checkAreAllControlsDisabled","saveItem","allDisabled","controlKeys","formValues","entityValues","ItemEditFormComponent","eavValues","newValue1","eavValue","allDimensions","eavAttributes","newAttribute1","Attributes1","eavAttributeKey","entityFor","Number","Version","Attributes","Owner","Metadata","attributes1","metaData1","createArray","for1","For1","Entity1","version","Type1","owner","eavEntityArray","metaData1Array","eavEntity","Header","Entity","JsonItem1","snackRef","snackBarData","saveChanges","save","dismissWithAction","SnackBarUnsavedChangesComponent","fieldErrors","SnackBarSaveErrorsComponent","alphabetCompare","Show","Hide","Branch","Modes","PublishModeConstants","publishMode","setMode","mode","SaveStatusDialogComponent","ngZone","areButtonsDisabled","registerScroll","passive","headerDownListener","evList","button","getSelection","removeAllRanges","oldScrollBehavior","getComputedStyle","getPropertyValue","style","scrollBehavior","positionX","pageX","doScroll","removeScroll","newPositionX","scrollLeft","moveThreshold","stopClick","checkIfMouseMoved","lngButtonDown","saveInitialPosition","lngButtonClick","doMove","stopClickIfMouseMoved","positionY","pageY","Math","abs","buttonOffset","getBoundingClientRect","left","buttonWidth","headerOffset","headerWidth","leftShadow","rightShadow","hidden","calculateShadows","maxScrollLeft","scrollWidth","clientWidth","hideBoth","hideLeft","hideRight","showBoth","remove","removeRegionName","languageName","toLocaleUpperCase","languageButtons$","langs","languageButtons","regionlessNamesCount","languages","regionlessName","buttonText","showShadowsService","ShowShadowsHelper","headerRef","leftShadowRef","rightShadowRef","mouseScrollHelper","MouseScrollHelper","centerSelectedService","CenterSelectedHelper","lngButtonMouseDown","updateCurrentLanguage","EavLanguageSwitcherComponent","setPublishMode","hasLanguages$","openSaveStatusDialog","MultiItemEditFormHeaderComponent","debugInfoOpened","sxcVer","showDebugInfo$","selectAllItems","toggleDebugInfo","MultiItemEditFormDebugComponent","changeDetectorRef","loadIconsService","route","isParentDialog","editDialogCount","snapshot","pathFromRoot","calculateIsParentDialog","floor","random","formsAreValid$","allControlsAreDisabled$","publishMode$","reduceSaveButton$","hideHeader$","getHideHeader","tap","debugInfoIsOpen$","eavConfigLoaded$","formErrors","formsAreDirty","formSaveAllObservables$","createMode","formIsSaved","init","fetchFormData","ngAfterViewChecked","attachAllSaveFormObservables","detectChanges","initSlider","removeLanguageInstance","clearCache","shiftKey","altKey","saveResult","disableClose","snackBarYouHaveUnsavedChanges","versioningOptions","checkFormsState","saveAll","itemEditFormRefs","itemEditFormComponent","calculateAllValidationMessages","formError","openFromComponent","opened","editItems","loadItems","Items","addInputTypes","InputTypes","ContentTypes","Features","setEavConfig","Context","isoLangCode","use","eavLangs","sortedLanguages","primaryLangKey","primaryLang","sameLangs","otherLangs","sortLanguages","langPri","loadLanguages","addLanguageInstance","DraftShouldBranch","IsPublished","valuesExistInDefaultLanguage","selectItemsByIdList","delay","languageChangeSubscribe","dialogBackdropClickSubscribe","saveFormMessagesSubscribe","formSetValueChangeSubscribe","slideableRef","slide$","merge","pairwise","previousLang","findIndex","fromEvent","animationName","returnValue","backdropClick","updateItemId","first","areFormsDirtyAnyLanguage","isDirty","langKeys","validateForm","saveFormSubscribe","switchMap","actions","allItems","saveFormData","saveItemSuccess","catchError","saveItemError","snackBarRef","onAction","containerInstance","snackBarConfig","MultiItemEditFormComponent","htmlEl","dragoverListener","timeoutsArray","clearTimeout","clearTimeouts","windowBodyTimeouts","body","draggingClass","dropListener","keysFunc","symbolsFunc","Uint8Array","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","resIndex","stubArray","root","self","Function","exporter","makeExporter","previous","defineProperty","configurable","writable","hasOwn","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","supportsCreate","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","functionPrototype","getPrototypeOf","usePolyfill","process","env","_Map","Map","cacheSentinel","arraySentinel","MapIterator","_index","_keys","_values","_selector","throw","return","_cacheKey","_cacheIndex","enumerable","_find","getKey","getValue","getEntry","insert","_","CreateMapPolyfill","_Set","Set","_map","WeakMap","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","crypto","getRandomValues","msCrypto","byte","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","obj","method","GetMethod","IsCallable","TypeError","IsObject","GetIterator","k","IteratorStep","IteratorClose","x","IsNull","ToPropertyKey","argument","input","PreferredType","exoticToPrim","hint","toString_1","OrdinaryToPrimitive","ToPrimitive","ToString","IsArray","IsConstructor","V","func","OrdinaryGetPrototypeOf","proto","prototypeProto","__","decorators","propertyKey","decorated","decorator","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","OrdinaryHasMetadata","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","ownKeys_1","_a","parentKeys_1"],"mappings":"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","file":"multi-item-edit-form-component.69767317d7979a9fced7.js","sourcesContent":["/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","export function loadScripts(scriptObjects: ScriptObject[], callback: () => any, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n\r\n  if (global != null && !!(window as any)[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  const scriptInDom: HTMLScriptElement = document.querySelector(`script[src=\"${scrObj.src}\"]`);\r\n  if (scriptInDom) {\r\n    scriptInDom.addEventListener('load', newCallback, { once: true });\r\n    return;\r\n  }\r\n\r\n  const scriptEl = document.createElement('script');\r\n  scriptEl.src = scrObj.src;\r\n  scriptEl.addEventListener('load', newCallback, { once: true });\r\n  document.head.appendChild(scriptEl);\r\n}\r\n\r\nexport class ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport * as fromStore from '../store';\r\nimport * as GlobalConfigurationActions from '../store/actions/global-configuration.actions';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalConfigurationService {\r\n\r\n  constructor(private store: Store<fromStore.EavState>, private snackBar: MatSnackBar) { }\r\n\r\n  public loadDebugEnabled(debugEnabled: boolean) {\r\n    this.store.dispatch(GlobalConfigurationActions.loadDebugEnabled({ debugEnabled }));\r\n  }\r\n\r\n  public toggleDebugEnabled() {\r\n    this.store.dispatch(GlobalConfigurationActions.toggleDebugEnabled());\r\n    let debugEnabled: boolean;\r\n    this.store.select(fromStore.selectDebugEnabled).pipe(take(1)).subscribe(enabled => {\r\n      debugEnabled = enabled;\r\n    });\r\n    if (debugEnabled) {\r\n      this.snackBar.open('debug mode enabled', null, {\r\n        duration: 3000,\r\n      });\r\n    } else {\r\n      this.snackBar.open('debug mode disabled', null, {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  public getDebugEnabled(): Observable<boolean> {\r\n    return this.store.select(fromStore.selectDebugEnabled);\r\n  }\r\n}\r\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nvar ZipOperator = /*@__PURE__*/ (function () {\n    function ZipOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    };\n    return ZipOperator;\n}());\nexport { ZipOperator };\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                var destination = this.destination;\n                destination.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--;\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nexport { ZipSubscriber };\nvar StaticIterator = /*@__PURE__*/ (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n","import { Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\r\nimport { map, startWith, filter, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { FieldConfigSet } from '../../../eav-dynamic-form/model/field-config';\r\nimport { Field } from '../../../eav-dynamic-form/model/field';\r\nimport { FieldSettings } from '../../../../edit-types';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { ValidationHelper } from '../../validators/validation-helper';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\nexport class BaseComponent<T> implements Field, OnInit, OnDestroy {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n\r\n  control: AbstractControl;\r\n  settings$: BehaviorSubject<FieldSettings>;\r\n  label$: Observable<string>;\r\n  placeholder$: Observable<string>;\r\n  value$: Observable<T>;\r\n  disabled$: Observable<boolean>;\r\n  required$: Observable<boolean>;\r\n  invalid$: Observable<boolean>;\r\n  showValidation$: Observable<AbstractControl>;\r\n  subscription = new Subscription();\r\n\r\n  constructor(public eavService: EavService, public validationMessagesService: ValidationMessagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.control = this.group.controls[this.config.field.name];\r\n    this.settings$ = this.config.field.settings$;\r\n    this.label$ = this.settings$.pipe(map(settings => settings.Name));\r\n    this.placeholder$ = this.settings$.pipe(map(settings => settings.Placeholder));\r\n    this.required$ = this.settings$.pipe(map(settings => ValidationHelper.isRequired(settings)));\r\n    this.invalid$ = this.control.statusChanges.pipe(map(status => status === 'INVALID'), startWith(this.control.invalid));\r\n    this.showValidation$ = this.validationMessagesService.showValidation$.pipe(filter(control => control === this.control));\r\n    // doesn't work because controls are sometimes updated without emitting change (e.g. on language change)\r\n    // this.value$ = this.control.valueChanges.pipe(\r\n    //   startWith(this.control.value)\r\n    // );\r\n    // this.status$ = this.control.statusChanges.pipe(\r\n    //   startWith(this.control.status)\r\n    // );\r\n    this.value$ = this.eavService.formValueChange$.pipe(\r\n      filter(formSet => (formSet.formId === this.config.form.formId) && (formSet.entityGuid === this.config.entity.entityGuid)),\r\n      map(formSet => this.control.value),\r\n      startWith(this.control.value),\r\n      distinctUntilChanged(),\r\n    );\r\n    this.disabled$ = this.eavService.formDisabledChange$.asObservable().pipe(\r\n      filter(formDisabledSet => (formDisabledSet.formId === this.config.form.formId)\r\n        && (formDisabledSet.entityGuid === this.config.entity.entityGuid)\r\n      ),\r\n      map(formSet => this.control.disabled),\r\n      startWith(this.control.disabled),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { AdamConfig } from '../../../../edit-types';\r\n\r\nexport class AdamConfigInstance implements AdamConfig {\r\n  //#region Field settings\r\n  rootSubfolder = '';\r\n  fileFilter = '';\r\n  allowAssetsInRoot = true;\r\n  folderDepth = 0;\r\n  metadataContentTypes = '';\r\n  //#endregion\r\n\r\n  //#region Toggle\r\n  usePortalRoot = false;\r\n  showImagesOnly = false;\r\n  //#endregion\r\n\r\n  //#region Calculated\r\n  autoLoad = false;\r\n  enableSelect = true;\r\n  subfolder = '';\r\n  allowEdit = true;\r\n  disabled = true;\r\n  maxDepthReached = false;\r\n  //#endregion\r\n\r\n  constructor(disabled: boolean) {\r\n    this.disabled = disabled;\r\n  }\r\n}\r\n","export class Feature {\r\n  constructor(\r\n    public enabled: boolean,\r\n    public expires: string,\r\n    public id: string,\r\n    public isPublic: boolean,\r\n    public ui: boolean,\r\n  ) {\r\n    this.enabled = enabled;\r\n    this.expires = expires;\r\n    this.id = id;\r\n    this.isPublic = isPublic;\r\n    this.ui = ui;\r\n  }\r\n\r\n  /**\r\n   * Features array from service have one different key.\r\n   * Key 'public' is converted to 'isPublic' ('public' is a reserved word in strict mode)\r\n   */\r\n  public static createFeatureArray(features: any[]) {\r\n    const featureList: Feature[] = [];\r\n    features.forEach(f => {\r\n      featureList.push(new Feature(f.enabled, f.expires, f.id, f.public, f.ui));\r\n    });\r\n    return featureList;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { Feature } from '../../models/feature/feature';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FeatureService extends EntityCollectionServiceBase<Feature> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Feature', serviceElementsFactory);\r\n  }\r\n\r\n  loadFeatures(features: any[]) {\r\n    const featureList: Feature[] = Feature.createFeatureArray(features);\r\n    this.addAllToCache(featureList);\r\n  }\r\n\r\n  isFeatureEnabled(guid: string) {\r\n    let isEnabled = false;\r\n    this.entities$.pipe(take(1)).subscribe(features => {\r\n      const feature = features.find(ftr => ftr.id === guid);\r\n      if (feature != null) {\r\n        isEnabled = feature.enabled;\r\n      }\r\n    });\r\n    return isEnabled;\r\n  }\r\n}\r\n","import { Directive, Input, ElementRef, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { FieldConfigSet } from '../../eav-dynamic-form/model/field-config';\r\nimport { FeatureService } from '../store/ngrx-data/feature.service';\r\nimport { FeaturesGuidsConstants } from '../../../shared/features-guids.constants';\r\nimport { ElementEventListener } from '../../../shared/element-event-listener.model';\r\nimport { PasteClipboardImageEventDetail } from '../models/adam/paste-clipboard-image';\r\nimport { angularConsoleLog } from '../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\n\r\n@Directive({ selector: '[appPasteClipboardImage]' })\r\nexport class PasteClipboardImageDirective implements OnInit, OnDestroy {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() elementType: string;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(private elementRef: ElementRef, private featureService: FeatureService) { }\r\n\r\n  ngOnInit() {\r\n    if (!this.featureService.isFeatureEnabled(FeaturesGuidsConstants.PasteImageFromClipboard)) { return; }\r\n\r\n    switch (this.elementType) {\r\n      case 'input':\r\n        this.elementRef.nativeElement.pastableTextarea();\r\n        break;\r\n      case 'element':\r\n        this.elementRef.nativeElement.pastableNonInputable();\r\n        break;\r\n    }\r\n    const handleImageBound = this.handleImage.bind(this);\r\n    this.elementRef.nativeElement.addEventListener('handleImage', handleImageBound);\r\n\r\n    this.eventListeners.push(\r\n      { element: this.elementRef.nativeElement, type: 'handleImage', listener: handleImageBound },\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // spm 2019-10-24 paste.js which handles clipboard paste doesn't destroy listeners\r\n    this.eventListeners.forEach(eventListener => {\r\n      const element = eventListener.element;\r\n      const type = eventListener.type;\r\n      const listener = eventListener.listener;\r\n      element.removeEventListener(type, listener);\r\n    });\r\n  }\r\n\r\n  private handleImage(event: CustomEvent) {\r\n    angularConsoleLog('PASTE IMAGE', 'event:', event);\r\n    // todo: convert png to jpg to reduce file size\r\n    const image = this.getFile(event.detail as PasteClipboardImageEventDetail);\r\n    this.config.dropzone.uploadFile(image);\r\n  }\r\n\r\n  private getFile(data: PasteClipboardImageEventDetail) {\r\n    let newFile = data.file; // for fallback\r\n\r\n    try {\r\n      // File.name is readonly so we do this\r\n      const formData = new FormData();\r\n      formData.append('file', data.file, data.imageFileName);\r\n      newFile = formData.get('file') as File;\r\n    } catch (e) {\r\n      console.error('paste image error', e);\r\n    }\r\n    return newFile;\r\n  }\r\n}\r\n","export const FeaturesGuidsConstants = {\r\n    PasteWithFormatting: '1b13e0e6-a346-4454-a1e6-2fb18c047d20',\r\n    PasteImageFromClipboard: 'f6b8d6da-4744-453b-9543-0de499aa2352',\r\n};\r\n","<ng-container *ngIf=\"{\r\n  adamConfig: adamConfig$ | async,\r\n  disabled: disabled$ | async\r\n  } as data\">\r\n  <div class=\"dropzone\" [@adamShowAnimate]=\"data.adamConfig?.autoLoad ? 'open' : 'closed'\">\r\n    <div *ngIf=\"data.adamConfig?.autoLoad && (expanded$ | async)\" [ngClass]=\"{\r\n    'adam-scope-site': data.adamConfig.usePortalRoot,\r\n    'adam-scope-field': !data.adamConfig.usePortalRoot\r\n  }\">\r\n\r\n      <!-- click to upload -->\r\n      <div\r\n        *ngIf=\"!data.disabled && data.adamConfig.allowEdit && !((data.adamConfig.subfolder === '' || data.adamConfig.usePortalRoot && data.adamConfig.subfolder === data.adamConfig.rootSubfolder) && !data.adamConfig.allowAssetsInRoot)\"\r\n        class=\"dz-preview dropzone-adam\" (click)=\"openUploadClick($event)\"\r\n        [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.UploadTip' | translate\">\r\n        <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n          <mat-icon>cloud_upload</mat-icon>\r\n          <div class=\"adam-upload-label\">\r\n            {{ 'Fields.Hyperlink.AdamFileManager.UploadLabel' | translate }}\r\n            &nbsp;\r\n            <mat-icon *ngIf=\"data.adamConfig.usePortalRoot\">public</mat-icon>\r\n            <mat-icon *ngIf=\"!data.adamConfig.usePortalRoot\" svgIcon=\"appleFilled\"></mat-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- paste image from clipboard -->\r\n      <div #pasteDiv\r\n        *ngIf=\"pasteClipboardImage && !data.disabled && data.adamConfig.allowEdit && !((data.adamConfig.subfolder === '' || data.adamConfig.usePortalRoot && data.adamConfig.subfolder === data.adamConfig.rootSubfolder) && !data.adamConfig.allowAssetsInRoot)\"\r\n        appPasteClipboardImage [config]=\"config\" [elementType]=\"'element'\" class=\"dz-preview dropzone-adam paste-image\"\r\n        [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.UploadPasteTip' | translate\">\r\n        <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n          <mat-icon>filter</mat-icon>\r\n          <div *ngIf=\"!pasteDiv.classList.contains('pastable-focus')\" class=\"adam-upload-label\">\r\n            {{ 'Fields.Hyperlink.AdamFileManager.UploadPasteLabel' | translate }}\r\n          </div>\r\n          <div *ngIf=\"pasteDiv.classList.contains('pastable-focus')\" class=\"adam-upload-label\">\r\n            {{ 'Fields.Hyperlink.AdamFileManager.UploadPasteFocusedLabel' | translate }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- add folder -->\r\n      <div\r\n        *ngIf=\"!data.adamConfig.maxDepthReached && !data.disabled && data.adamConfig.allowEdit && !((data.adamConfig.subfolder === '' || data.adamConfig.usePortalRoot && data.adamConfig.subfolder === data.adamConfig.rootSubfolder) && !data.adamConfig.allowAssetsInRoot)\"\r\n        class=\"dz-preview\" (click)=\"addFolder()\"\r\n        [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.NewFolderTip' | translate\">\r\n        <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n          <mat-icon svgIcon=\"folder-plus\"></mat-icon>\r\n          <div class=\"adam-short-label\">{{ 'Fields.Hyperlink.AdamFileManager.NewFolder' | translate }}</div>\r\n        </div>\r\n        <div class=\"dz-details\" style=\"opacity: 1\"></div>\r\n      </div>\r\n\r\n      <!-- browse up a folder -->\r\n      <ng-container\r\n        *ngIf=\"data.adamConfig.subfolder !== '' || data.adamConfig.usePortalRoot && data.adamConfig.subfolder !== data.adamConfig.rootSubfolder\">\r\n        <div class=\"dz-preview\" (click)=\"goUp()\"\r\n          [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.BackFolderTip' | translate\">\r\n          <div class=\"dz-image adam-browse-background-icon adam-browse-background\">\r\n            <mat-icon svgIcon=\"folder\"></mat-icon>\r\n            <div class=\"adam-short-label\">{{ 'Fields.Hyperlink.AdamFileManager.BackFolder' | translate }}</div>\r\n          </div>\r\n          <div class=\"adam-background adam-browse-background-icon\">\r\n            <mat-icon class=\"adam-back-folder-arrow\">arrow_back</mat-icon>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <ng-container *ngFor=\"let item of (items$ | async); trackBy: trackByFn\">\r\n        <!-- folders -->\r\n        <ng-container *ngIf=\"item.IsFolder\">\r\n          <div class=\"dz-preview\" (click)=\"goIntoFolder(item)\">\r\n            <div class=\"dz-image adam-blur adam-browse-background-icon adam-browse-background\">\r\n              <mat-icon svgIcon=\"folder\"></mat-icon>\r\n              <div class=\"short-label\">{{ item.Name }}</div>\r\n            </div>\r\n            <div class=\"dz-details file-type-{{ item.Type }}\">\r\n              <mat-icon *ngIf=\"data.adamConfig.allowEdit\" (click)=\"del(item)\" appClickStopPropagation\r\n                class=\"adam-delete-button\" [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Delete' | translate\"\r\n                [ngClass]=\"{\r\n                'adam-button-disabled': data.disabled\r\n              }\">clear\r\n              </mat-icon>\r\n              <mat-icon *ngIf=\"data.adamConfig.allowEdit\" (click)=\"rename(item)\" appClickStopPropagation\r\n                class=\"adam-rename-button\" [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Edit' | translate\" [ngClass]=\"{\r\n                'adam-button-disabled': data.disabled\r\n              }\">edit\r\n              </mat-icon>\r\n              <div class=\"adam-full-name-area\">\r\n                <div class=\"adam-full-name\" [title]=\"item.Name\">{{ item.Name }}</div>\r\n              </div>\r\n            </div>\r\n            <mat-icon class=\"adam-tag\" [ngClass]=\"{ 'metadata-exists': item.MetadataId > 0 }\"\r\n              (click)=\"editItemMetadata(item)\" matTooltip=\"{{ item._metadataContentType }}: {{ item.MetadataId }}\"\r\n              appClickStopPropagation *ngIf=\"item._metadataContentType\">local_offer</mat-icon>\r\n          </div>\r\n        </ng-container>\r\n\r\n        <!-- files -->\r\n        <ng-container *ngIf=\"!item.IsFolder\">\r\n          <div class=\"dz-preview\" (click)=\"select(item)\" [ngClass]=\"{\r\n            'dz-success': (value$ | async) === 'file:' + item.Id,\r\n            'disable-select': !data.adamConfig.enableSelect\r\n          }\">\r\n            <div *ngIf=\"item.Type !== 'image'\"\r\n              class=\"dz-image adam-blur adam-browse-background-icon adam-browse-background\">\r\n              <mat-icon *ngIf=\"item._isMaterialIcon\">{{ item._icon }}</mat-icon>\r\n              <mat-icon *ngIf=\"!item._isMaterialIcon\" [svgIcon]=\"item._icon\"></mat-icon>\r\n              <div class=\"adam-short-label\">{{ item.Name }}</div>\r\n            </div>\r\n            <div *ngIf=\"item.Type === 'image'\" class=\"dz-image adam-browse-background-image\">\r\n              <img data-dz-thumbnail=\"\" [alt]=\"item.Id + ':' + item.Name\"\r\n                [src]=\"item.FullPath + '?w=120&h=120&mode=crop'\">\r\n            </div>\r\n\r\n            <div class=\"dz-details file-type-{{ item.Type }}\">\r\n              <mat-icon *ngIf=\"data.adamConfig.allowEdit\" (click)=\"del(item)\" appClickStopPropagation\r\n                class=\"adam-delete-button\" [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Delete' | translate\"\r\n                [ngClass]=\"{\r\n                'adam-button-disabled': data.disabled\r\n              }\">clear\r\n              </mat-icon>\r\n              <mat-icon *ngIf=\"data.adamConfig.allowEdit\" (click)=\"rename(item)\" appClickStopPropagation\r\n                class=\"adam-rename-button\" [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Edit' | translate\" [ngClass]=\"{\r\n                'adam-button-disabled': data.disabled\r\n              }\">edit\r\n              </mat-icon>\r\n              <div class=\"adam-full-name-area\">\r\n                <div class=\"adam-full-name\" [title]=\"item.Name\">{{ item.Name }}</div>\r\n              </div>\r\n              <div class=\"dz-filename adam-short-label\" appClickStopPropagation\r\n                title=\"#{{ item.Id }} - {{ item._displaySize }} KB\">\r\n                <span>#{{ item.Id }} - {{ item._displaySize }} KB</span>\r\n              </div>\r\n              <a class=\"adam-link-button\" target=\"_blank\" [href]=\"item.FullPath\" appClickStopPropagation>\r\n                <mat-icon [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.Show' | translate\">open_in_new</mat-icon>\r\n              </a>\r\n            </div>\r\n            <mat-icon class=\"adam-tag\" [ngClass]=\"{ 'metadata-exists': item.MetadataId > 0 }\"\r\n              (click)=\"editItemMetadata(item)\" *ngIf=\"item._metadataContentType\" appClickStopPropagation\r\n              matTooltip=\"{{ item._metadataContentType }}: {{ item.MetadataId }}\">local_offer</mat-icon>\r\n\r\n            <div class=\"dz-success-mark\">\r\n              <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"https://www.w3.org/2000/svg\"\r\n                xmlns:xlink=\"https://www.w3.org/1999/xlink\" xmlns:sketch=\"https://www.bohemiancoding.com/sketch/ns\">\r\n                <title>Check</title>\r\n                <defs></defs>\r\n                <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                  <path\r\n                    d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\"\r\n                    id=\"Oval-2\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\"\r\n                    sketch:type=\"MSShapeGroup\"></path>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, ChangeDetectionStrategy, NgZone } from '@angular/core';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\r\nimport { filter, map, startWith, distinctUntilChanged } from 'rxjs/operators';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { AdamService } from '../adam.service';\r\nimport { FileTypeService } from '../../../shared/services/file-type.service';\r\nimport { FeatureService } from '../../../shared/store/ngrx-data/feature.service';\r\nimport { AdamConfigInstance } from './adam-browser.models';\r\nimport { FieldConfigSet } from '../../../eav-dynamic-form/model/field-config';\r\nimport { eavConstants } from '../../../../ng-dialogs/src/app/shared/constants/eav.constants';\r\nimport { UrlHelper } from '../../../shared/helpers/url-helper';\r\nimport { FeaturesGuidsConstants } from '../../../../shared/features-guids.constants';\r\nimport { EditForm } from '../../../../ng-dialogs/src/app/shared/models/edit-form.model';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { AdamItem, AdamConfig, DropzoneConfigExt } from '../../../../edit-types';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'adam-browser',\r\n  templateUrl: './adam-browser.component.html',\r\n  styleUrls: ['./adam-browser.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('adamShowAnimate', [\r\n      state('closed', style({\r\n        height: '0',\r\n        overflow: 'hidden'\r\n      })),\r\n      state('open', style({\r\n        height: '*',\r\n        overflow: 'hidden'\r\n      })),\r\n      transition('closed => open', [\r\n        animate('300ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class AdamBrowserComponent implements OnInit, OnDestroy {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n  @Output() openUpload = new EventEmitter<null>();\r\n\r\n  value$: Observable<string>;\r\n  disabled$: Observable<boolean>;\r\n  expanded$: Observable<boolean>;\r\n  adamConfig$ = new BehaviorSubject<AdamConfig>(null);\r\n  items$ = new BehaviorSubject<AdamItem[]>([]);\r\n  pasteClipboardImage: boolean;\r\n\r\n  private control: AbstractControl;\r\n  private url: string;\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private adamService: AdamService,\r\n    private fileTypeService: FileTypeService,\r\n    private featureService: FeatureService,\r\n    private dnnContext: DnnContext,\r\n    private eavService: EavService,\r\n    private editRoutingService: EditRoutingService,\r\n    private zone: NgZone,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.control = this.group.controls[this.config.field.name];\r\n    this.refreshOnChildClosed();\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    this.url = this.dnnContext.$2sxc.http.apiUrl(`app-content/${contentType}/${entityGuid}/${field}`);\r\n    this.pasteClipboardImage = this.featureService.isFeatureEnabled(FeaturesGuidsConstants.PasteImageFromClipboard);\r\n\r\n    // run inside zone to detect changes when called from custom components\r\n    this.config.adam = {\r\n      items$: this.items$.asObservable(),\r\n      toggle: (usePortalRoot, showImagesOnly) => {\r\n        this.zone.run(() => {\r\n          this.toggle(usePortalRoot, showImagesOnly);\r\n        });\r\n      },\r\n      setConfig: (config) => {\r\n        this.zone.run(() => {\r\n          this.setConfig(config);\r\n        });\r\n      },\r\n      getConfig: () => this.adamConfig$.value,\r\n      getConfig$: () => this.adamConfig$.asObservable(),\r\n      onItemClick: () => { return; },\r\n      onItemUpload: () => { return; },\r\n      refresh: () => {\r\n        this.zone.run(() => {\r\n          this.fetchItems();\r\n        });\r\n      },\r\n      addFullPath: (item) => { this.adamService.addFullPath(item); }\r\n    };\r\n    this.subscription.add(\r\n      this.adamConfig$.subscribe(adamConfig => {\r\n        this.fetchItems();\r\n      })\r\n    );\r\n    this.expanded$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n    this.value$ = this.eavService.formValueChange$.pipe(\r\n      filter(formSet => (formSet.formId === this.config.form.formId) && (formSet.entityGuid === this.config.entity.entityGuid)),\r\n      map(formSet => this.control.value),\r\n      startWith(this.control.value),\r\n      distinctUntilChanged(),\r\n    );\r\n    this.disabled$ = this.eavService.formDisabledChange$.asObservable().pipe(\r\n      filter(formDisabledSet => (formDisabledSet.formId === this.config.form.formId)\r\n        && (formDisabledSet.entityGuid === this.config.entity.entityGuid)\r\n      ),\r\n      map(formSet => this.control.disabled),\r\n      startWith(this.control.disabled),\r\n      distinctUntilChanged(),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.adamConfig$.complete();\r\n    this.items$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  addFolder() {\r\n    if (this.control.disabled) { return; }\r\n\r\n    const folderName = window.prompt('Please enter a folder name'); // todo i18n\r\n    if (!folderName) { return; }\r\n\r\n    this.adamService.addFolder(folderName, this.url, this.adamConfig$.value).subscribe(res => {\r\n      this.fetchItems();\r\n    });\r\n  }\r\n\r\n  del(item: AdamItem) {\r\n    if (this.control.disabled) { return; }\r\n\r\n    const ok = window.confirm('Are you sure you want to delete this item?'); // todo i18n\r\n    if (!ok) { return; }\r\n\r\n    this.adamService.deleteItem(item, this.url, this.adamConfig$.value).subscribe(res => {\r\n      this.fetchItems();\r\n    });\r\n  }\r\n\r\n  editItemMetadata(adamItem: AdamItem) {\r\n    const form: EditForm = {\r\n      items: [\r\n        adamItem.MetadataId === 0\r\n          ? {\r\n            ContentTypeName: adamItem._metadataContentType,\r\n            For: {\r\n              Target: eavConstants.metadata.cmsObject.target,\r\n              String: `${adamItem.Type === 'folder' ? 'folder' : 'file'}:${adamItem.Id}`,\r\n            }\r\n          }\r\n          : { EntityId: adamItem.MetadataId }\r\n      ],\r\n    };\r\n    this.editRoutingService.open(this.config.field.index, this.config.entity.entityGuid, form);\r\n  }\r\n\r\n  goUp() {\r\n    let subfolder = this.adamConfig$.value.subfolder;\r\n    subfolder = subfolder.includes('/') ? subfolder.slice(0, subfolder.lastIndexOf('/')) : '';\r\n    this.config.adam.setConfig({ subfolder });\r\n  }\r\n\r\n  private getMetadataContentType(item: AdamItem) {\r\n    let found: string[];\r\n\r\n    // check if it's a folder and if this has a special registration\r\n    if (item.Type === 'folder') {\r\n      found = this.adamConfig$.value.metadataContentTypes.match(/^(folder)(:)([^\\n]*)/im);\r\n      if (found) {\r\n        return found[3];\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // check if the extension has a special registration\r\n    // -- not implemented yet\r\n\r\n    // check if the type \"image\" or \"document\" has a special registration\r\n    // -- not implemented yet\r\n\r\n    // nothing found so far, go for the default with nothing as the prefix\r\n    found = this.adamConfig$.value.metadataContentTypes.match(/^([^:\\n]*)(\\n|$)/im);\r\n    if (found) { return found[1]; }\r\n\r\n    // this is if we don't find anything\r\n    return null;\r\n  }\r\n\r\n  goIntoFolder(item: AdamItem) {\r\n    let subfolder = this.adamConfig$.value.subfolder;\r\n    subfolder = subfolder ? `${subfolder}/${item.Name}` : item.Name;\r\n    this.config.adam.setConfig({ subfolder });\r\n  }\r\n\r\n  openUploadClick(event: MouseEvent) {\r\n    this.openUpload.emit();\r\n  }\r\n\r\n  rename(item: AdamItem) {\r\n    if (this.control.disabled) { return; }\r\n\r\n    const newName = window.prompt('Rename the file / folder to: ', item.Name);\r\n    if (!newName) { return; }\r\n\r\n    this.adamService.rename(item, newName, this.url, this.adamConfig$.value).subscribe(res => {\r\n      this.fetchItems();\r\n    });\r\n  }\r\n\r\n  select(item: AdamItem) {\r\n    if (this.control.disabled || !this.adamConfig$.value.enableSelect) { return; }\r\n    this.config.adam.onItemClick(item);\r\n  }\r\n\r\n  private fetchItems() {\r\n    const adamConfig = this.adamConfig$.value;\r\n    if (adamConfig == null) { return; }\r\n    if (!adamConfig.autoLoad) { return; }\r\n    this.adamService.getAll(this.url, adamConfig).subscribe(items => {\r\n      const filteredItems: AdamItem[] = [];\r\n      const allowedFileTypes = adamConfig.fileFilter\r\n        ? adamConfig.fileFilter.split(',').map(extension => extension.replace('*', '').trim())\r\n        : [];\r\n\r\n      for (const item of items) {\r\n        if (item.Name === '.') { // is root\r\n          const allowEdit = item.AllowEdit;\r\n          if (allowEdit !== adamConfig.allowEdit) {\r\n            this.config.adam.setConfig({ allowEdit });\r\n          }\r\n          continue;\r\n        }\r\n        if (item.Name === '2sxc' || item.Name === 'adam') { continue; }\r\n        if (!item.IsFolder && adamConfig.showImagesOnly && item.Type !== 'image') { continue; }\r\n        if (item.IsFolder && adamConfig.maxDepthReached) { continue; }\r\n        if (allowedFileTypes.length > 0) {\r\n          const extension = item.Name.substring(item.Name.lastIndexOf('.'));\r\n          if (!allowedFileTypes.includes(extension)) { continue; }\r\n        }\r\n\r\n        item._metadataContentType = this.getMetadataContentType(item);\r\n        item._icon = this.fileTypeService.getIconClass(item.Name);\r\n        item._isMaterialIcon = this.fileTypeService.isKnownType(item.Name);\r\n        item._displaySize = (item.Size / 1024).toFixed(0);\r\n        filteredItems.push(item);\r\n      }\r\n\r\n      filteredItems.sort((a, b) => a.Name.toLocaleLowerCase().localeCompare(b.Name.toLocaleLowerCase()));\r\n      filteredItems.sort((a, b) => b.IsFolder.toString().localeCompare(a.IsFolder.toString()));\r\n      this.items$.next(filteredItems);\r\n    });\r\n  }\r\n\r\n  private toggle(usePortalRoot: boolean, showImagesOnly: boolean) {\r\n    const newConfig = { ...this.adamConfig$.value, ...{ usePortalRoot, showImagesOnly } };\r\n    if (JSON.stringify(newConfig) === JSON.stringify(this.adamConfig$.value)) {\r\n      newConfig.autoLoad = !newConfig.autoLoad;\r\n    } else if (!newConfig.autoLoad) {\r\n      newConfig.autoLoad = true;\r\n    }\r\n    this.config.adam.setConfig(newConfig);\r\n  }\r\n\r\n  trackByFn(index: number, item: AdamItem) {\r\n    return item.Id;\r\n  }\r\n\r\n  private setConfig(config: Partial<AdamConfig>) {\r\n    // set new values and use old ones where new value is not provided\r\n    const startDisabled = this.config.field.isExternal;\r\n    const oldConfig = (this.adamConfig$.value != null) ? this.adamConfig$.value : new AdamConfigInstance(startDisabled);\r\n    const newConfig = new AdamConfigInstance(startDisabled);\r\n    const newConfigKeys = Object.keys(newConfig);\r\n    for (const key of newConfigKeys) {\r\n      (newConfig as any)[key] = ((config as any)[key] != null) ? (config as any)[key] : (oldConfig as any)[key];\r\n    }\r\n\r\n    // fixes\r\n    const resetSubfolder = oldConfig.usePortalRoot !== newConfig.usePortalRoot;\r\n    if (resetSubfolder) {\r\n      newConfig.subfolder = '';\r\n    }\r\n    if (newConfig.usePortalRoot) {\r\n      const fixBackSlashes = newConfig.rootSubfolder.includes('\\\\');\r\n      if (fixBackSlashes) {\r\n        newConfig.rootSubfolder = newConfig.rootSubfolder.replace(/\\\\/g, '/');\r\n      }\r\n      const fixStartingSlash = newConfig.rootSubfolder.startsWith('/');\r\n      if (fixStartingSlash) {\r\n        newConfig.rootSubfolder = newConfig.rootSubfolder.replace('/', '');\r\n      }\r\n      const fixRoot = !newConfig.subfolder.startsWith(newConfig.rootSubfolder);\r\n      if (fixRoot) {\r\n        newConfig.subfolder = newConfig.rootSubfolder;\r\n      }\r\n      newConfig.maxDepthReached = false; // when using portal root depth is infinite\r\n    }\r\n    if (!newConfig.usePortalRoot) {\r\n      const currentDepth = newConfig.subfolder ? newConfig.subfolder.split('/').length : 0;\r\n      const fixDepth = currentDepth >= newConfig.folderDepth;\r\n      if (fixDepth) {\r\n        let folders = newConfig.subfolder.split('/');\r\n        folders = folders.slice(0, newConfig.folderDepth);\r\n        newConfig.subfolder = folders.join('/');\r\n        newConfig.maxDepthReached = true;\r\n      } else {\r\n        newConfig.maxDepthReached = false;\r\n      }\r\n    }\r\n    this.adamConfig$.next(newConfig);\r\n\r\n    // fix dropzone\r\n    const oldDzConfig = this.config.dropzone.getConfig();\r\n    const newDzConfig: Partial<DropzoneConfigExt> = {};\r\n    const dzUrlParams = UrlHelper.getUrlParams(oldDzConfig.url as string);\r\n    const dzSubfolder = dzUrlParams.subfolder || '';\r\n    const dzUsePortalRoot = dzUrlParams.usePortalRoot;\r\n    const fixUploadUrl = dzSubfolder !== newConfig.subfolder || dzUsePortalRoot !== newConfig.usePortalRoot.toString();\r\n    if (fixUploadUrl) {\r\n      let newUrl = oldDzConfig.url as string;\r\n      newUrl = UrlHelper.replaceUrlParam(newUrl, 'subfolder', newConfig.subfolder);\r\n      newUrl = UrlHelper.replaceUrlParam(newUrl, 'usePortalRoot', newConfig.usePortalRoot.toString());\r\n      newDzConfig.url = newUrl;\r\n    }\r\n    const uploadDisabled = !newConfig.allowEdit\r\n      || (\r\n        (newConfig.subfolder === '' || newConfig.usePortalRoot && newConfig.subfolder === newConfig.rootSubfolder)\r\n        && !newConfig.allowAssetsInRoot\r\n      );\r\n    const fixDisabled = oldDzConfig.disabled !== uploadDisabled;\r\n    if (fixDisabled) {\r\n      newDzConfig.disabled = uploadDisabled;\r\n    }\r\n    if (Object.keys(newDzConfig).length > 0) {\r\n      this.config.dropzone.setConfig(newDzConfig);\r\n    }\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.editRoutingService.childFormClosed().subscribe(result => {\r\n        this.fetchItems();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'adam-hint',\r\n  templateUrl: './adam-hint.component.html',\r\n  styleUrls: ['./adam-hint.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AdamHintComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<mat-divider></mat-divider>\r\n<div class=\"hint-box u-border-radius-bottom mat-caption u-shadow-top\">\r\n  <div class=\"hint-box__hint\">{{ 'Fields.Hyperlink.AdamFileManager.Hint' | translate }}</div>\r\n  <div class=\"hint-box__sponsor\">\r\n    <a href=\"https://2sxc.org/help?tag=adam\" target=\"_blank\" tabindex=\"-1\" class=\"adam-link\"\r\n      [matTooltip]=\"'Fields.Hyperlink.AdamFileManager.SponsorTooltip' | translate\">\r\n      <mat-icon svgIcon=\"appleFilled\"></mat-icon>\r\n      <span>Adam</span>\r\n    </a>\r\n    &nbsp;\r\n    <span>{{ 'Fields.Hyperlink.AdamFileManager.SponsorLine' | translate }}</span>\r\n    &nbsp;\r\n    <a href=\"https://www.2sic.com\" target=\"_blank\" tabindex=\"-1\">2sic.com</a>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewContainerRef, ViewChild, ElementRef, OnDestroy, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { InputTypeConstants } from '../../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-adam-attach-wrapper',\r\n  templateUrl: './adam-attach-wrapper.component.html',\r\n  styleUrls: ['./adam-attach-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AdamAttachWrapperComponent extends BaseComponent<any> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('invisibleClickable') invisibleClickableRef: ElementRef;\r\n\r\n  fullscreenAdam: boolean;\r\n  adamDisabled$ = new BehaviorSubject(true);\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.fullscreenAdam = this.config.field.inputType === InputTypeConstants.HyperlinkLibrary;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.subscription.add(\r\n      this.config.adam.getConfig$().subscribe(adamConfig => {\r\n        if (adamConfig == null) { return; }\r\n        this.adamDisabled$.next(adamConfig.disabled);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.adamDisabled$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  openUpload() {\r\n    this.invisibleClickableRef.nativeElement.click();\r\n  }\r\n}\r\n","<div class=\"adam-dialog-container\">\r\n  <div class=\"adam-dialog-content\">\r\n    <ng-container #fieldComponent></ng-container>\r\n  </div>\r\n  <adam-browser (openUpload)=\"openUpload()\" [config]=\"config\" [group]=\"group\" class=\"u-shadow-top\" [ngClass]=\"{\r\n      'adam-browser-container--short u-hide-scrollbar': !fullscreenAdam,\r\n      'u-display-none': adamDisabled$ | async\r\n    }\">\r\n  </adam-browser>\r\n  <div class=\"field-{{ config.field.index }}\" [ngClass]=\"{ 'u-display-none': adamDisabled$ | async }\">\r\n    <div class=\"dropzone-previews\"></div>\r\n    <span #invisibleClickable class=\"invisible-clickable\" data-note=\"just a fake, invisible area for dropzone\"></span>\r\n  </div>\r\n  <adam-hint class=\"field-hints\" [ngClass]=\"{ 'u-display-none': adamDisabled$ | async }\"></adam-hint>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ViewContainerRef, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-collapsible-field-wrapper',\r\n  templateUrl: './collapsible-field-wrapper.component.html',\r\n  styleUrls: ['./collapsible-field-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CollapsibleFieldWrapperComponent extends BaseComponent<string[]> implements FieldWrapper, OnInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  collapse$ = new BehaviorSubject(true);\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.collapse$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleCollapse() {\r\n    this.collapse$.next(!this.collapse$.value);\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mat-card-header-group-child\">\r\n  <div fxFlex=\"auto\" fxLayoutAlign=\"start center\" (click)=\"toggleCollapse()\" class=\"mat-caption\">\r\n    <div fxLayoutAlign=\"start center\" class=\"mat-caption field-title\">\r\n      <mat-icon> {{ (collapse$ | async) ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}</mat-icon>\r\n      <span>{{ label$ | async }}&nbsp;{{ (required$ | async) ? '*': '' }}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div style=\"padding-top: 8px;\" [ngStyle]=\"{ 'display': (collapse$ | async) ? 'none' : 'block' }\">\r\n  <ng-container #fieldComponent></ng-container>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ContentType } from '../../models/eav';\r\nimport { JsonContentType1 } from '../../models/json-format-v1';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentTypeService extends EntityCollectionServiceBase<ContentType> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('ContentType', serviceElementsFactory);\r\n  }\r\n\r\n  /** Add new content types to the store */\r\n  addContentTypes(rawContentTypes: JsonContentType1[]) {\r\n    const builtContentTypes = rawContentTypes.map(rawCT => ContentType.create(rawCT));\r\n    this.addManyToCache(builtContentTypes);\r\n  }\r\n\r\n  /** Get content type observable from the store */\r\n  getContentTypeById(id: string) {\r\n    return this.entities$.pipe(\r\n      map(contentTypes => contentTypes.find(contentType => contentType.contentType.id === id))\r\n      // maybe add distinctUntilChanged()\r\n    );\r\n  }\r\n}\r\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","export class TranslationLinkConstants {\r\n  public static readonly Translate = 'translate';\r\n  public static readonly DontTranslate = 'dontTranslate';\r\n  public static readonly MissingDefaultLangValue = 'missingDefaultLangValue';\r\n  public static readonly LinkReadOnly = 'linkReadOnly';\r\n  public static readonly LinkReadWrite = 'linkReadWrite';\r\n  public static readonly LinkCopyFrom = 'linkCopyFrom';\r\n}\r\n","export class I18nKeyConstants {\r\n  public static readonly NoTranslate = 'NoTranslate';\r\n  public static readonly FromPrimary = 'FromPrimary';\r\n  public static readonly FromOther = 'FromOther';\r\n  public static readonly LinkReadOnly = 'LinkReadOnly';\r\n  public static readonly LinkShared = 'LinkShared';\r\n}\r\n","<mat-card class=\"link-other-lang-container u-hide-scrollbar\" *ngIf=\"{\r\n  languages: languages$ | async,\r\n  selected: selected$ | async,\r\n  showLanguages: showLanguages$ | async,\r\n  i18nRoot: i18nRoot$ | async\r\n} as data\">\r\n  <div class=\"mat-card__header\">\r\n    <div class=\"mat-card__title\">\r\n      {{ 'LangMenu.Dialog.Title' | translate: { name: dialogData.attributeKey } }}\r\n    </div>\r\n    <div class=\"mat-card__description\">\r\n      {{ 'LangMenu.Dialog.Intro' | translate }}\r\n    </div>\r\n  </div>\r\n\r\n  <mat-nav-list toggle>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.DontTranslate, icon: 'lock', i18nKey: I18nKeys.NoTranslate }\">\r\n    </ng-container>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.Translate, icon: 'lock_open', i18nKey: I18nKeys.FromPrimary }\">\r\n    </ng-container>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.LinkCopyFrom, icon: 'translate', i18nKey: I18nKeys.FromOther }\">\r\n    </ng-container>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.LinkReadOnly, icon: 'link', i18nKey: I18nKeys.LinkReadOnly }\">\r\n    </ng-container>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"item;context:{ link: TranslationLinks.LinkReadWrite, icon: 'share', i18nKey: I18nKeys.LinkShared }\">\r\n    </ng-container>\r\n  </mat-nav-list>\r\n\r\n  <ng-template #item let-icon=\"icon\" let-link='link' let-i18nKey=\"i18nKey\">\r\n    <mat-list-item [ngClass]=\"{ 'mat-list-item-focus': data.selected.linkType === link }\" (click)=\"select(i18nKey)\">\r\n\r\n      <mat-icon matListIcon color=\"accent\">{{ icon }}</mat-icon>\r\n      <div matLine class=\"mat-list-item__title\">\r\n        {{ ('LangMenu.Dialog.' + i18nKey + '.Title') | translate : { primary: dialogData.defaultLanguage } }}</div>\r\n      <div matLine class=\"mat-list-item__body\">\r\n        {{ ('LangMenu.Dialog.' + i18nKey + '.Body') | translate : { primary: dialogData.defaultLanguage } }}</div>\r\n    </mat-list-item>\r\n  </ng-template>\r\n\r\n  <div *ngIf=\"data.showLanguages\">\r\n    <div class=\"mat-card__header\">\r\n      <div class=\"mat-card__title\">\r\n        {{ (data.i18nRoot + '.Subtitle') | translate }}\r\n      </div>\r\n      <div class=\"mat-card__description\">\r\n        {{'LangMenu.Dialog.PickLanguageIntro' | translate }}\r\n      </div>\r\n    </div>\r\n\r\n    <mat-action-list>\r\n      <button mat-list-item *ngFor=\"let language of data.languages\" (click)=\"selectLanguage(language.key)\"\r\n        [disabled]=\"isLanguageDisabled(language.key)\" [ngClass]=\"{\r\n        'mat-list-item-focus': data.selected.language === language.key,\r\n        'mat-list-item--disabled': isLanguageDisabled(language.key)\r\n      }\">\r\n        <mat-icon matListIcon color=\"accent\">language</mat-icon>\r\n        {{ language.key }}\r\n      </button>\r\n    </mat-action-list>\r\n  </div>\r\n\r\n  <mat-dialog-actions fxLayoutAlign=\"end center\">\r\n    <button mat-button color=\"accent\" [disabled]=\"isOkDisabled(data.selected)\"\r\n      [mat-dialog-close]=\"data.selected\">OK</button>\r\n  </mat-dialog-actions>\r\n</mat-card>\r\n","import { Component, OnInit, Inject, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { LinkToOtherLanguageData } from '../../../shared/models/eav/link-to-other-language-data';\r\nimport { LanguageService } from '../../../shared/store/ngrx-data/language.service';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { Language } from '../../../shared/models/eav';\r\nimport { TranslationLinkConstants } from '../../../shared/constants/translation-link.constants';\r\nimport { LocalizationHelper } from '../../../shared/helpers/localization-helper';\r\nimport { I18nKeyConstants } from './link-to-other-language.constants';\r\nimport { findI18nKey, findTranslationLink } from './link-to-other-language.helpers';\r\n\r\n@Component({\r\n  selector: 'app-link-to-other-language',\r\n  templateUrl: './link-to-other-language.component.html',\r\n  styleUrls: ['./link-to-other-language.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LinkToOtherLanguageComponent implements OnInit, OnDestroy {\r\n  languages$: Observable<Language[]>;\r\n  selected$: BehaviorSubject<LinkToOtherLanguageData>;\r\n  showLanguages$: BehaviorSubject<boolean>;\r\n  i18nRoot$: BehaviorSubject<string>;\r\n  TranslationLinks = TranslationLinkConstants;\r\n  I18nKeys = I18nKeyConstants;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: LinkToOtherLanguageData,\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n  ) {\r\n    this.selected$ = new BehaviorSubject({ ...this.dialogData });\r\n    this.showLanguages$ = new BehaviorSubject(this.dialogData.language !== '');\r\n\r\n    const i18nKey = findI18nKey(this.dialogData.linkType);\r\n    this.i18nRoot$ = new BehaviorSubject(`LangMenu.Dialog.${i18nKey}`);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.languages$ = combineLatest([\r\n      this.languageService.entities$,\r\n      this.languageInstanceService.getCurrentLanguage(this.dialogData.formId)\r\n    ]).pipe(\r\n      map(([languages, currentLanguage]) => languages.filter(lang => lang.key !== currentLanguage)),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.selected$.complete();\r\n    this.showLanguages$.complete();\r\n    this.i18nRoot$.complete();\r\n  }\r\n\r\n  select(i18nKey: string) {\r\n    const showLanguages = (i18nKey !== I18nKeyConstants.FromPrimary && i18nKey !== I18nKeyConstants.NoTranslate);\r\n    const newSelected: LinkToOtherLanguageData = { ...this.selected$.value };\r\n\r\n    if (!showLanguages) { newSelected.language = ''; }\r\n    newSelected.linkType = findTranslationLink(i18nKey);\r\n\r\n    this.showLanguages$.next(showLanguages);\r\n    this.selected$.next(newSelected);\r\n    this.i18nRoot$.next(`LangMenu.Dialog.${i18nKey}`);\r\n  }\r\n\r\n  selectLanguage(language: string) {\r\n    this.selected$.next({ ...this.selected$.value, language });\r\n  }\r\n\r\n  isOkDisabled(selected: LinkToOtherLanguageData) {\r\n    const disabled = selected.language === ''\r\n      && selected.linkType !== TranslationLinkConstants.Translate\r\n      && selected.linkType !== TranslationLinkConstants.DontTranslate;\r\n    return disabled;\r\n  }\r\n\r\n  isLanguageDisabled(languageKey: string) {\r\n    if (!this.dialogData.attributes) { return true; }\r\n\r\n    const hasTranslation = LocalizationHelper.isEditableTranslationExist(\r\n      this.dialogData.attributes[this.dialogData.attributeKey],\r\n      languageKey,\r\n      this.dialogData.defaultLanguage\r\n    );\r\n    return !hasTranslation;\r\n  }\r\n}\r\n","import { TranslationLinkConstants } from '../../../shared/constants/translation-link.constants';\r\nimport { I18nKeyConstants } from './link-to-other-language.constants';\r\n\r\nexport function findI18nKey(translationLink: string) {\r\n  switch (translationLink) {\r\n    case TranslationLinkConstants.Translate:\r\n      return I18nKeyConstants.FromPrimary;\r\n    case TranslationLinkConstants.DontTranslate:\r\n      return I18nKeyConstants.NoTranslate;\r\n    case TranslationLinkConstants.LinkReadOnly:\r\n      return I18nKeyConstants.LinkReadOnly;\r\n    case TranslationLinkConstants.LinkReadWrite:\r\n      return I18nKeyConstants.LinkShared;\r\n    case TranslationLinkConstants.LinkCopyFrom:\r\n      return I18nKeyConstants.FromOther;\r\n  }\r\n}\r\n\r\nexport function findTranslationLink(i18nKey: string) {\r\n  switch (i18nKey) {\r\n    case I18nKeyConstants.FromPrimary:\r\n      return TranslationLinkConstants.Translate;\r\n    case I18nKeyConstants.NoTranslate:\r\n      return TranslationLinkConstants.DontTranslate;\r\n    case I18nKeyConstants.LinkReadOnly:\r\n      return TranslationLinkConstants.LinkReadOnly;\r\n    case I18nKeyConstants.LinkShared:\r\n      return TranslationLinkConstants.LinkReadWrite;\r\n    case I18nKeyConstants.FromOther:\r\n      return TranslationLinkConstants.LinkCopyFrom;\r\n  }\r\n}\r\n","export class TranslateGroupMenuHelpers {\r\n\r\n  public static calculateSharedInfoMessage(dimensions: string[], currentLanguage: string): string {\r\n    dimensions = TranslateGroupMenuHelpers.calculateShortDimensions(dimensions, currentLanguage);\r\n    const result = TranslateGroupMenuHelpers.calculateEditAndReadDimensions(dimensions);\r\n    const editableDimensions = result.editableDimensions;\r\n    const readOnlyDimensions = result.readOnlyDimensions;\r\n    let infoMessage = '';\r\n\r\n    const editableExist = editableDimensions.length > 0;\r\n    const readOnlyExist = readOnlyDimensions.length > 0;\r\n    if (editableExist && readOnlyExist) {\r\n      infoMessage = `${editableDimensions.join(', ')}, (${readOnlyDimensions.join(', ')})`;\r\n    } else if (editableExist) {\r\n      infoMessage = editableDimensions.join(', ');\r\n    } else if (readOnlyExist) {\r\n      infoMessage = `(${readOnlyDimensions.join(', ')})`;\r\n    }\r\n\r\n    return infoMessage;\r\n  }\r\n\r\n  private static calculateShortDimensions(dimensions: string[], currentLanguage: string): string[] {\r\n    const dimensionsMap: { [key: string]: string[] } = {};\r\n    const shortCurrentLanguage = currentLanguage.slice(0, currentLanguage.indexOf('-'));\r\n\r\n    dimensionsMap[shortCurrentLanguage] = [];\r\n    dimensionsMap[shortCurrentLanguage].push(shortCurrentLanguage);\r\n\r\n    dimensions.forEach(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (!dimensionsMap[shortNoReadOnly]) {\r\n        dimensionsMap[shortNoReadOnly] = [];\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      } else {\r\n        dimensionsMap[shortNoReadOnly].push(dimension);\r\n      }\r\n    });\r\n\r\n    dimensions = dimensions.map(dimension => {\r\n      const shortDimension = dimension.slice(0, dimension.indexOf('-'));\r\n      const shortNoReadOnly = shortDimension.replace('~', '');\r\n\r\n      if (dimensionsMap[shortNoReadOnly].length > 1) {\r\n        return dimension;\r\n      } else {\r\n        return shortDimension;\r\n      }\r\n    });\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  private static calculateEditAndReadDimensions(dimensions: string[]) {\r\n    const editableDimensions: string[] = [];\r\n    const readOnlyDimensions: string[] = [];\r\n\r\n    dimensions.forEach(dimension => {\r\n      if (!dimension.includes('~')) {\r\n        editableDimensions.push(dimension);\r\n      } else {\r\n        readOnlyDimensions.push(dimension.replace('~', ''));\r\n      }\r\n    });\r\n\r\n    return {\r\n      editableDimensions,\r\n      readOnlyDimensions\r\n    };\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"{\r\n  currentLanguage: currentLanguage$ | async,\r\n  defaultLanguage: defaultLanguage$ | async,\r\n  translationState: translationState$ | async,\r\n  disabled: disabled$ | async,\r\n  defaultLanguageMissingValue: defaultLanguageMissingValue$ | async,\r\n  infoMessage: infoMessage$ | async,\r\n  infoMessageLabel: infoMessageLabel$ | async\r\n} as data\">\r\n\r\n  <ng-container *ngIf=\"data.currentLanguage !== data.defaultLanguage\">\r\n\r\n    <div *ngIf=\"fieldConfig.isParentGroup\" fxLayoutAlign=\"end center\">\r\n      <button mat-button fxLayoutAlign=\"end center\" [matMenuTriggerFor]=\"rootMenu\">\r\n        <span fxLayoutAlign=\"end center\">\r\n          {{ ('LangMenu.Translate' | translate).toUpperCase() }} &nbsp;&nbsp;\r\n          <mat-icon class=\"translate-icon\">translate</mat-icon>\r\n        </span>\r\n      </button>\r\n      <mat-menu #rootMenu=\"matMenu\" [overlapTrigger]=\"true\">\r\n        <button mat-menu-item (click)=\"translateAll()\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.linkType === translationLinkConstants.Translate}\">\r\n          {{ 'LangMenu.TranslateAll' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"dontTranslateAll()\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.linkType === translationLinkConstants.DontTranslate}\">\r\n          {{ 'LangMenu.NoTranslateAll' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"openLinkToOtherLanguage()\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.language !== ''}\">\r\n          {{ 'LangMenu.Link' | translate }}\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n\r\n    <div *ngIf=\"!fieldConfig.isParentGroup\" fxLayoutAlign=\"end center\">\r\n      <div fxLayoutAlign=\"end center\" class=\"shared-languages-container\"\r\n        [ngClass]=\"getTranslationStateClass(data.translationState.linkType)\">\r\n        <div class=\"shared-languages mat-caption\" [ngClass]=\"{'shared-languages--disabled': data.disabled}\">\r\n          {{ data.infoMessageLabel ? (data.infoMessageLabel | translate:{ languages: data.infoMessage }) : '' }}</div>\r\n        <button mat-icon-button [disabled]=\"fieldConfig.disableI18n || data.defaultLanguageMissingValue\"\r\n          [matMenuTriggerFor]=\"rootMenu2\">\r\n          <mat-icon class=\"translate-icon\">translate</mat-icon>\r\n        </button>\r\n      </div>\r\n      <mat-menu #rootMenu2=\"matMenu\" [overlapTrigger]=\"true\">\r\n        <button mat-menu-item (click)=\"translateUnlink(config.field.name)\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.linkType === translationLinkConstants.Translate}\">\r\n          {{ 'LangMenu.Translate' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"linkToDefault(config.field.name)\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.linkType === translationLinkConstants.DontTranslate}\">\r\n          {{ 'LangMenu.NoTranslate' | translate }}\r\n        </button>\r\n        <button mat-menu-item (click)=\"openLinkToOtherLanguage()\"\r\n          [ngClass]=\"{'menu-item-selected': data.translationState.language !== ''}\">\r\n          {{ 'LangMenu.Link' | translate }}\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n\r\n  </ng-container>\r\n</ng-container>\r\n","import { Component, OnInit, Input, OnDestroy, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable, Subscription, BehaviorSubject, of } from 'rxjs';\r\nimport { filter, map, startWith, distinctUntilChanged } from 'rxjs/operators';\r\nimport isEqual from 'lodash-es/isEqual';\r\n\r\nimport { EavValue, EavAttributes, EavValues, EavDimensions, Item, ContentType } from '../../../shared/models/eav';\r\nimport { FieldConfigSet, FieldConfigGroup } from '../../../eav-dynamic-form/model/field-config';\r\nimport { InputFieldHelper } from '../../../shared/helpers/input-field-helper';\r\nimport { ItemService } from '../../../shared/store/ngrx-data/item.service';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { LinkToOtherLanguageComponent } from '../link-to-other-language/link-to-other-language.component';\r\nimport { LinkToOtherLanguageData } from '../../../shared/models/eav/link-to-other-language-data';\r\nimport { LocalizationHelper } from '../../../shared/helpers/localization-helper';\r\nimport { TranslationLinkConstants } from '../../../shared/constants/translation-link.constants';\r\nimport { ValidationHelper } from '../../validators/validation-helper';\r\nimport { TranslateGroupMenuHelpers } from './translate-group-menu.helpers';\r\nimport { InputTypeService } from '../../../shared/store/ngrx-data/input-type.service';\r\nimport { ContentTypeService } from '../../../shared/store/ngrx-data/content-type.service';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\n\r\n@Component({\r\n  selector: 'app-translate-group-menu',\r\n  templateUrl: './translate-group-menu.component.html',\r\n  styleUrls: ['./translate-group-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TranslateGroupMenuComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n  @Input() toggleTranslateField: boolean;\r\n\r\n  fieldConfig: FieldConfigGroup;\r\n  control: AbstractControl;\r\n  disabled$: Observable<boolean>;\r\n  translationLinkConstants = TranslationLinkConstants;\r\n  attributes$: Observable<EavAttributes>;\r\n  attributes: EavAttributes;\r\n  currentLanguage$: Observable<string>;\r\n  currentLanguage = '';\r\n  defaultLanguage$: Observable<string>;\r\n  defaultLanguage = '';\r\n  defaultLanguageMissingValue$ = new BehaviorSubject(false);\r\n  headerGroupSlotIsEmpty = false;\r\n  translationState$: BehaviorSubject<LinkToOtherLanguageData> = new BehaviorSubject({\r\n    formId: null,\r\n    linkType: '',\r\n    language: '',\r\n  });\r\n  infoMessage$ = new BehaviorSubject<string>('');\r\n  infoMessageLabel$ = new BehaviorSubject<string>('');\r\n  item: Item;\r\n  contentType: ContentType;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private itemService: ItemService,\r\n    private inputTypeService: InputTypeService,\r\n    private contentTypeService: ContentTypeService,\r\n    private eavService: EavService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fieldConfig = this.config.field as FieldConfigGroup;\r\n    this.control = this.group.controls[this.config.field.name];\r\n    this.disabled$ = this.fieldConfig.isParentGroup ? of(false) : this.eavService.formDisabledChange$.asObservable().pipe(\r\n      filter(formDisabledSet => (formDisabledSet.formId === this.config.form.formId)\r\n        && (formDisabledSet.entityGuid === this.config.entity.entityGuid)\r\n      ),\r\n      map(formSet => this.control.disabled),\r\n      startWith(this.control.disabled),\r\n      distinctUntilChanged(),\r\n    );\r\n    this.currentLanguage$ = this.languageInstanceService.getCurrentLanguage(this.config.form.formId);\r\n    this.defaultLanguage$ = this.languageInstanceService.getDefaultLanguage(this.config.form.formId);\r\n    this.attributes$ = this.itemService.selectAttributesByEntityId(this.config.entity.entityId, this.config.entity.entityGuid);\r\n    this.subscribeToAttributeValues();\r\n    this.subscribeMenuChange();\r\n    this.subscribeToItemFromStore();\r\n    this.subscribeToContentTypeFromStore();\r\n    // subscribe to language data\r\n    this.subscribeToCurrentLanguageFromStore();\r\n    this.subscribeToDefaultLanguageFromStore();\r\n    this.subscribeToEntityHeaderFromStore();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.toggleTranslateField != null && this.currentLanguage !== this.defaultLanguage && this.control.disabled) {\r\n      this.translateUnlink(this.config.field.name);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.defaultLanguageMissingValue$.complete();\r\n    this.translationState$.complete();\r\n    this.infoMessage$.complete();\r\n    this.infoMessageLabel$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  openLinkToOtherLanguage() {\r\n    const dialogData: LinkToOtherLanguageData = {\r\n      formId: this.config.form.formId,\r\n      linkType: this.translationState$.value.linkType,\r\n      language: this.translationState$.value.language,\r\n      defaultLanguage: this.defaultLanguage,\r\n      attributes: this.attributes,\r\n      attributeKey: this.config.field.name,\r\n    };\r\n    const dialogRef = this.dialog.open(LinkToOtherLanguageComponent, {\r\n      panelClass: 'c-link-to-other-language',\r\n      autoFocus: false,\r\n      width: '350px',\r\n      data: dialogData\r\n    });\r\n    dialogRef.keydownEvents().subscribe(e => {\r\n      const CTRL_S = e.keyCode === 83 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey);\r\n      if (!CTRL_S) { return; }\r\n      e.preventDefault();\r\n    });\r\n    dialogRef.afterClosed().subscribe((actionResult: LinkToOtherLanguageData) => {\r\n      if (!actionResult) { return; }\r\n      this.triggerTranslation(actionResult);\r\n    });\r\n  }\r\n\r\n  translateUnlink(attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    this.itemService.removeItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      this.config.entity.entityGuid);\r\n    const defaultValue: EavValue<any> = LocalizationHelper.getValueTranslation(this.attributes[attributeKey],\r\n      this.defaultLanguage, this.defaultLanguage);\r\n    if (defaultValue) {\r\n      const fieldType = InputFieldHelper.getFieldType(this.config, attributeKey);\r\n      this.itemService.addAttributeValue(this.config.entity.entityId, attributeKey, defaultValue.value,\r\n        this.currentLanguage, false, this.config.entity.entityGuid, fieldType);\r\n    } else {\r\n      angularConsoleLog(`${this.currentLanguage}: Cant copy value from ${this.defaultLanguage} because that value does not exist.`);\r\n    }\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  linkToDefault(attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    this.itemService.removeItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      this.config.entity.entityGuid);\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  translateAll() {\r\n    this.setTranslationState(TranslationLinkConstants.Translate, '');\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.translateUnlink(attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  dontTranslateAll() {\r\n    this.setTranslationState(TranslationLinkConstants.DontTranslate, '');\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.linkToDefault(attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  copyFromAll(languageKey: string) {\r\n    this.setTranslationState(TranslationLinkConstants.LinkCopyFrom, languageKey);\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.copyFrom(languageKey, attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  /**\r\n   * Copy value where language is copyFromLanguageKey to value where language is current language.\r\n   * If value of current language don't exist then add new value\r\n   */\r\n  copyFrom(copyFromLanguageKey: string, attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    const attributeValueTranslation: EavValue<any> = LocalizationHelper.getValueTranslation(this.attributes[attributeKey],\r\n      copyFromLanguageKey, this.defaultLanguage);\r\n\r\n    if (attributeValueTranslation) {\r\n      const valueAlreadyExist: boolean = this.attributes\r\n        ? LocalizationHelper.isEditableOrReadonlyTranslationExist(this.attributes[attributeKey], this.currentLanguage, this.defaultLanguage)\r\n        : false;\r\n\r\n      if (valueAlreadyExist) {\r\n        // Copy attribute value where language is languageKey to value where language is current language\r\n        this.itemService.updateItemAttributeValue(this.config.entity.entityId, attributeKey, attributeValueTranslation.value,\r\n          this.currentLanguage, this.defaultLanguage, false, this.config.entity.entityGuid);\r\n      } else {\r\n        // Copy attribute value where language is languageKey to new attribute with current language\r\n        this.itemService.addAttributeValue(this.config.entity.entityId, attributeKey, attributeValueTranslation.value,\r\n          this.currentLanguage, false, this.config.entity.entityGuid, this.config.field.type);\r\n      }\r\n    } else {\r\n      angularConsoleLog(`${this.currentLanguage}: Cant copy value from ${copyFromLanguageKey} because that value does not exist.`);\r\n    }\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  linkReadOnlyAll(languageKey: string) {\r\n    this.setTranslationState(TranslationLinkConstants.LinkReadOnly, languageKey);\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.linkReadOnly(languageKey, attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  linkReadOnly(languageKey: string, attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    this.setTranslationState(TranslationLinkConstants.LinkReadOnly, languageKey);\r\n    this.itemService.removeItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      this.config.entity.entityGuid);\r\n    this.itemService.addItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      languageKey, this.defaultLanguage, true, this.config.entity.entityGuid);\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  linkReadWriteAll(languageKey: string) {\r\n    this.setTranslationState(TranslationLinkConstants.LinkReadWrite, languageKey);\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.linkReadWrite(languageKey, attributeKey);\r\n    });\r\n    this.languageInstanceService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  linkReadWrite(languageKey: string, attributeKey: string) {\r\n    if (this.isTranslateDisabled(attributeKey)) { return; }\r\n\r\n    this.setTranslationState(TranslationLinkConstants.LinkReadWrite, languageKey);\r\n    this.itemService.removeItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      this.config.entity.entityGuid);\r\n    this.itemService.addItemAttributeDimension(this.config.entity.entityId, attributeKey, this.currentLanguage,\r\n      languageKey, this.defaultLanguage, false, this.config.entity.entityGuid);\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  getTranslationStateClass(linkType: string) {\r\n    switch (linkType) {\r\n      case TranslationLinkConstants.MissingDefaultLangValue:\r\n        return 'eav-localization-missing-default-lang-value';\r\n      case TranslationLinkConstants.Translate:\r\n      case TranslationLinkConstants.LinkCopyFrom:\r\n        return 'eav-localization-translate';\r\n      case TranslationLinkConstants.DontTranslate:\r\n        return '';\r\n      case TranslationLinkConstants.LinkReadOnly:\r\n        return 'eav-localization-link-read-only';\r\n      case TranslationLinkConstants.LinkReadWrite:\r\n        return 'eav-localization-link-read-write';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  private refreshControlConfig(attributeKey: string) {\r\n    if (this.fieldConfig.isParentGroup) { return; }\r\n    this.setControlDisable(this.attributes[attributeKey], attributeKey, this.currentLanguage, this.defaultLanguage);\r\n    this.readTranslationState(this.attributes[attributeKey], attributeKey, this.currentLanguage, this.defaultLanguage);\r\n    this.setInfoMessage(this.attributes[attributeKey], attributeKey, this.currentLanguage, this.defaultLanguage);\r\n  }\r\n\r\n  private triggerTranslation(actionResult: LinkToOtherLanguageData) {\r\n    if (!isEqual(this.translationState$.value, actionResult)) {\r\n      // need be sure that we have a language selected when a link option is clicked\r\n      switch (actionResult.linkType) {\r\n        case TranslationLinkConstants.Translate:\r\n          this.fieldConfig.isParentGroup ? this.translateAll() : this.translateUnlink(this.config.field.name);\r\n          break;\r\n        case TranslationLinkConstants.DontTranslate:\r\n          this.fieldConfig.isParentGroup ? this.dontTranslateAll() : this.linkToDefault(this.config.field.name);\r\n          break;\r\n        case TranslationLinkConstants.LinkReadOnly:\r\n          this.fieldConfig.isParentGroup\r\n            ? this.linkReadOnlyAll(actionResult.language)\r\n            : this.linkReadOnly(actionResult.language, this.config.field.name);\r\n          break;\r\n        case TranslationLinkConstants.LinkReadWrite:\r\n          this.fieldConfig.isParentGroup\r\n            ? this.linkReadWriteAll(actionResult.language)\r\n            : this.linkReadWrite(actionResult.language, this.config.field.name);\r\n          break;\r\n        case TranslationLinkConstants.LinkCopyFrom:\r\n          this.fieldConfig.isParentGroup\r\n            ? this.copyFromAll(actionResult.language)\r\n            : this.copyFrom(actionResult.language, this.config.field.name);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private setTranslationState(linkType: string, language: string) {\r\n    const newTranslationState = { ...this.translationState$.value, linkType, language };\r\n    this.translationState$.next(newTranslationState);\r\n  }\r\n\r\n  /** Determine is control disabled or enabled */\r\n  private setControlDisable(attributes: EavValues<any>, attributeKey: string, currentLanguage: string,\r\n    defaultLanguage: string) {\r\n    // Important! if control already disabled through settings then skip\r\n    if (!this.config.field.disabled) {\r\n      // if header group slot is empty disable control\r\n      if (this.headerGroupSlotIsEmpty) {\r\n        this.group.controls[attributeKey].disable({ emitEvent: false });\r\n        this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n      } else if (currentLanguage === defaultLanguage) {\r\n        this.group.controls[attributeKey].enable({ emitEvent: false });\r\n        this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n      } else { // else set enable/disable depending on editable translation exist\r\n        if (!LocalizationHelper.translationExistsInDefault(attributes, defaultLanguage)) {\r\n          this.group.controls[attributeKey].disable({ emitEvent: false });\r\n          this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          this.defaultLanguageMissingValue$.next(true);\r\n        } else {\r\n          this.defaultLanguageMissingValue$.next(false);\r\n          if (this.isTranslateDisabled(attributeKey)) {\r\n            this.group.controls[attributeKey].disable({ emitEvent: false });\r\n            this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          } else if (LocalizationHelper.isEditableTranslationExist(attributes, currentLanguage, defaultLanguage)) {\r\n            this.group.controls[attributeKey].enable({ emitEvent: false });\r\n            this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          } else if (LocalizationHelper.isReadonlyTranslationExist(attributes, currentLanguage)) {\r\n            this.group.controls[attributeKey].disable({ emitEvent: false });\r\n            this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          } else {\r\n            this.group.controls[attributeKey].disable({ emitEvent: false });\r\n            this.eavService.formDisabledChange$.next({ formId: this.config.form.formId, entityGuid: this.config.entity.entityGuid });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Translate a field configuration (labels, validation, ...) */\r\n  private translateAllConfiguration() {\r\n    const fieldSettings = LocalizationHelper.translateSettings(this.config.field.fullSettings,\r\n      this.currentLanguage, this.defaultLanguage);\r\n    this.config.field.settings = fieldSettings;\r\n    this.config.field.label = this.config.field.settings.Name || null;\r\n    this.config.field.validation = ValidationHelper.getValidations(this.config.field.settings);\r\n    this.config.field.required = ValidationHelper.isRequired(this.config.field.settings);\r\n    this.config.field.settings$?.next(fieldSettings); // must run after validations are recalculated\r\n  }\r\n\r\n  private subscribeToCurrentLanguageFromStore() {\r\n    this.subscription.add(\r\n      this.currentLanguage$.subscribe(currentLanguage => {\r\n        this.currentLanguage = currentLanguage;\r\n        this.translateAllConfiguration();\r\n        this.refreshControlConfig(this.config.field.name);\r\n      })\r\n    );\r\n  }\r\n\r\n  private subscribeToDefaultLanguageFromStore() {\r\n    this.subscription.add(\r\n      this.defaultLanguage$.subscribe(defaultLanguage => {\r\n        this.defaultLanguage = defaultLanguage;\r\n        this.translateAllConfiguration();\r\n        this.refreshControlConfig(this.config.field.name);\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Subscribe to item attribute values */\r\n  private subscribeToAttributeValues() {\r\n    this.subscription.add(\r\n      this.attributes$.subscribe(attributes => {\r\n        this.attributes = attributes;\r\n      })\r\n    );\r\n  }\r\n\r\n  private subscribeToEntityHeaderFromStore() {\r\n    if (this.config.entity.header.Group && this.config.entity.header.Group.SlotCanBeEmpty) {\r\n      this.subscription.add(\r\n        this.itemService.selectHeaderByEntityId(this.config.entity.entityId, this.config.entity.entityGuid).subscribe(header => {\r\n          if (header.Group && !this.fieldConfig.isParentGroup) {\r\n            this.headerGroupSlotIsEmpty = header.Group.SlotIsEmpty;\r\n            this.setControlDisable(this.attributes[this.config.field.name], this.config.field.name,\r\n              this.currentLanguage, this.defaultLanguage);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /** Fetch current item */\r\n  private subscribeToItemFromStore() {\r\n    this.subscription.add(\r\n      this.itemService.selectItemById(this.config.entity.entityId).subscribe(item => {\r\n        this.item = item;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Fetch contentType of current item */\r\n  private subscribeToContentTypeFromStore() {\r\n    const contentTypeId = this.item.entity.type === null\r\n      ? this.item.header.ContentTypeName\r\n      : this.item.entity.type.id;\r\n    this.subscription.add(\r\n      this.contentTypeService.getContentTypeById(contentTypeId).subscribe(contentType => {\r\n        this.contentType = contentType;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Fetch inputType definition to check if input field of this type shouldn't be translated\r\n   * @param attributeType new attribute type defined in contentTypes\r\n   */\r\n  public isTranslateDisabled(attributeKey: string) {\r\n    if (!LocalizationHelper.translationExistsInDefault(this.attributes[attributeKey], this.defaultLanguage)) { return true; }\r\n    const attributeDef = this.contentType.contentType.attributes.find(attr => attr.name === attributeKey);\r\n    if (attributeDef == null) {\r\n      // since it's not defined it's not disabled. Happens when creating a new metadata entity, like settings for a field\r\n      return false;\r\n    }\r\n\r\n    const calculatedInputType = InputFieldHelper.calculateInputType(attributeDef, this.inputTypeService);\r\n    const disableI18n = LocalizationHelper.isI18nDisabled(this.inputTypeService, calculatedInputType, attributeDef.settings);\r\n    return disableI18n;\r\n  }\r\n\r\n  private readTranslationState(attributes: EavValues<any>, attributeKey: string, currentLanguage: string, defaultLanguage: string) {\r\n    // Determine is control disabled or enabled and info message\r\n    if (!LocalizationHelper.translationExistsInDefault(attributes, defaultLanguage)) {\r\n      this.setTranslationState(TranslationLinkConstants.MissingDefaultLangValue, '');\r\n    } else if (this.isTranslateDisabled(attributeKey)) {\r\n      this.setTranslationState(TranslationLinkConstants.DontTranslate, '');\r\n    } else if (LocalizationHelper.isEditableTranslationExist(attributes, currentLanguage, defaultLanguage)) {\r\n      const editableElements: EavDimensions<string>[] = LocalizationHelper.getValueTranslation(attributes,\r\n        currentLanguage, defaultLanguage)\r\n        .dimensions.filter(f => f.value !== currentLanguage);\r\n      if (editableElements.length > 0) {\r\n        this.setTranslationState(TranslationLinkConstants.LinkReadWrite, editableElements[0].value);\r\n      } else {\r\n        this.setTranslationState(TranslationLinkConstants.Translate, '');\r\n      }\r\n    } else if (LocalizationHelper.isReadonlyTranslationExist(attributes, currentLanguage)) {\r\n      const readOnlyElements: EavDimensions<string>[] = LocalizationHelper.getValueTranslation(attributes,\r\n        currentLanguage, defaultLanguage)\r\n        .dimensions.filter(f => f.value !== currentLanguage);\r\n      this.setTranslationState(TranslationLinkConstants.LinkReadOnly, readOnlyElements[0].value);\r\n    } else {\r\n      this.setTranslationState(TranslationLinkConstants.DontTranslate, '');\r\n    }\r\n  }\r\n\r\n  /** Subscribe triggered when changing all in menu (forAllFields) */\r\n  private subscribeMenuChange() {\r\n    this.subscription.add(\r\n      this.languageInstanceService.localizationWrapperMenuChange$.subscribe(s => {\r\n        if (!this.fieldConfig.isParentGroup) {\r\n          this.refreshControlConfig(this.config.field.name);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Set info message */\r\n  private setInfoMessage(attributes: EavValues<any>, attributeKey: string, currentLanguage: string, defaultLanguage: string) {\r\n    // Determine whether control is disabled or enabled and info message\r\n    if (this.isTranslateDisabled(attributeKey)) {\r\n      this.infoMessage$.next('');\r\n      this.infoMessageLabel$.next('LangMenu.InAllLanguages');\r\n      return;\r\n    } else if (!LocalizationHelper.translationExistsInDefault(attributes, defaultLanguage)) {\r\n      this.infoMessage$.next(defaultLanguage);\r\n      this.infoMessageLabel$.next('LangMenu.MissingDefaultLangValue');\r\n      return;\r\n    }\r\n\r\n    const isEditableTranslationExist: boolean = LocalizationHelper.isEditableTranslationExist(attributes, currentLanguage, defaultLanguage);\r\n    const isReadonlyTranslationExist: boolean = LocalizationHelper.isReadonlyTranslationExist(attributes, currentLanguage);\r\n\r\n    if (isEditableTranslationExist || isReadonlyTranslationExist) {\r\n      let dimensions: string[] = LocalizationHelper.getValueTranslation(attributes, currentLanguage, defaultLanguage)\r\n        .dimensions.map(d => d.value);\r\n\r\n      dimensions = dimensions.filter(d => !d.includes(currentLanguage));\r\n\r\n      const isShared = dimensions.length > 0;\r\n      if (isShared) {\r\n        this.infoMessage$.next(TranslateGroupMenuHelpers.calculateSharedInfoMessage(dimensions, currentLanguage));\r\n\r\n        if (isEditableTranslationExist) {\r\n          this.infoMessageLabel$.next('LangMenu.In');\r\n        } else if (isReadonlyTranslationExist) {\r\n          this.infoMessageLabel$.next('LangMenu.From');\r\n        }\r\n      } else {\r\n        this.infoMessage$.next('');\r\n        this.infoMessageLabel$.next('');\r\n      }\r\n    } else {\r\n      this.infoMessage$.next('');\r\n      this.infoMessageLabel$.next('LangMenu.UseDefault');\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit, OnDestroy, NgZone } from '@angular/core';\r\n\r\n@Directive({ selector: '[appChangeAnchorTarget]' })\r\nexport class ChangeAnchorTargetDirective implements OnInit, OnDestroy {\r\n  private target = '_blank';\r\n  private element: HTMLElement;\r\n  private observer: MutationObserver;\r\n\r\n  constructor(elementRef: ElementRef, private zone: NgZone) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.observer = new MutationObserver((mutations: MutationRecord[]) => {\r\n        if (this.element.tagName === 'A') {\r\n          const anchor = this.element as HTMLAnchorElement;\r\n          if (anchor.target !== this.target) {\r\n            anchor.target = this.target;\r\n          }\r\n        }\r\n        const childAnchors = this.element.getElementsByTagName('a');\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < childAnchors.length; i++) {\r\n          const anchor = childAnchors[i];\r\n          if (anchor.target !== this.target) {\r\n            anchor.target = this.target;\r\n          }\r\n        }\r\n      });\r\n      this.observer.observe(this.element, { childList: true, subtree: true });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.observer.disconnect();\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"shadow-bottom-z-1\"\r\n  [ngClass]=\"fieldConfig.isParentGroup ? 'mat-card-group-parent' : 'mat-card-group-child'\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\"\r\n    [ngClass]=\"fieldConfig.isParentGroup ? 'mat-card-header-group-parent' : 'mat-card-header-group-child'\" *ngIf=\"{\r\n      collapse: collapse$ | async,\r\n      itemTitle: itemTitle$ | async,\r\n      currentLanguage: currentLanguage$ | async,\r\n      defaultLanguage: defaultLanguage$ | async,\r\n      slotCanBeEmpty: slotCanBeEmpty$ | async,\r\n      slotIsEmpty: slotIsEmpty$ | async\r\n    } as data\">\r\n\r\n    <div fxFlex=\"auto\" fxLayoutAlign=\"start center\" (click)=\"toggleCollapse()\">\r\n      <div fxLayoutAlign=\"start center\" class=\"mat-card-title-group\"\r\n        [ngClass]=\"fieldConfig.isParentGroup ? 'mat-display-1' : 'mat-body-1'\">\r\n        <mat-icon>\r\n          {{ data.collapse ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}\r\n        </mat-icon>\r\n        <span class=\"title\">\r\n          {{ data.itemTitle || ('ItemCard.DefaultTitle' | translate) }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <mat-slide-toggle fxLayoutAlign=\"start center\" *ngIf=\"data.slotCanBeEmpty\" (change)=\"toggleSlotIsEmpty()\"\r\n      [checked]=\"!data.slotIsEmpty\" [disabled]=\"data.currentLanguage !== data.defaultLanguage\"\r\n      [matTooltip]=\"(!data.slotIsEmpty ? 'ItemCard.SlotUsedTrue' : 'ItemCard.SlotUsedFalse') | translate\"\r\n      [matTooltipDisabled]=\"data.currentLanguage !== data.defaultLanguage\">\r\n    </mat-slide-toggle>\r\n    <app-translate-group-menu *ngIf=\"fieldConfig.isParentGroup\" fxLayoutAlign=\"end center\" [config]=\"config\"\r\n      [group]=\"group\">\r\n    </app-translate-group-menu>\r\n  </div>\r\n\r\n  <mat-card-content [ngStyle]=\"{ 'display': (collapse$ | async) ? 'none' : 'block' }\"\r\n    [ngClass]=\"fieldConfig.isParentGroup ? 'mat-card-content-group-parent' : 'mat-card-content-group-child'\">\r\n    <div class=\"mdc-layout-grid\">\r\n      <div class=\"mdc-layout-grid__inner\">\r\n        <div class=\"mdc-layout-grid__cell--span-12 mat-body-1\" align=\"start\" *ngIf=\"description$ | async\">\r\n          <div class=\"description\" appChangeAnchorTarget [innerHtml]=\"(description$ | async) | safeHtml\"></div>\r\n        </div>\r\n        <div class=\"mdc-layout-grid__cell--span-12\">\r\n          <ng-container #fieldComponent></ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, ViewChild, ViewContainerRef, Input, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription, Observable, BehaviorSubject } from 'rxjs';\r\nimport { take, map } from 'rxjs/operators';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { EavHeader, ContentType } from '../../../shared/models/eav';\r\nimport { ItemService } from '../../../shared/store/ngrx-data/item.service';\r\nimport { FieldConfigSet, FieldConfigGroup } from '../../../eav-dynamic-form/model/field-config';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { ContentTypeService } from '../../../shared/store/ngrx-data/content-type.service';\r\nimport { LocalizationHelper } from '../../../shared/helpers/localization-helper';\r\nimport { ValidationHelper } from '../../validators/validation-helper';\r\n\r\n@Component({\r\n  selector: 'app-collapsible-wrapper',\r\n  templateUrl: './collapsible-wrapper.component.html',\r\n  styleUrls: ['./collapsible-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CollapsibleWrapperComponent implements FieldWrapper, OnInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n\r\n  fieldConfig: FieldConfigGroup;\r\n  collapse$ = new BehaviorSubject(false);\r\n  currentLanguage$: Observable<string>;\r\n  defaultLanguage$: Observable<string>;\r\n  itemTitle$: Observable<string>;\r\n  slotCanBeEmpty$: Observable<boolean>;\r\n  slotIsEmpty$: Observable<boolean>;\r\n  description$: Observable<string>;\r\n\r\n  private header$: Observable<EavHeader>;\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private itemService: ItemService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private contentTypeService: ContentTypeService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fieldConfig = this.config.field as FieldConfigGroup;\r\n    this.header$ = this.itemService.selectHeaderByEntityId(this.config.entity.entityId, this.config.entity.entityGuid);\r\n\r\n    this.collapse$.next(this.fieldConfig.settings$.value.DefaultCollapsed || false);\r\n    this.currentLanguage$ = this.languageInstanceService.getCurrentLanguage(this.config.form.formId);\r\n    this.defaultLanguage$ = this.languageInstanceService.getDefaultLanguage(this.config.form.formId);\r\n    this.slotCanBeEmpty$ = this.header$.pipe(map(header => header?.Group?.SlotCanBeEmpty || false));\r\n    this.slotIsEmpty$ = this.header$.pipe(map(header => header?.Group?.SlotIsEmpty || false));\r\n\r\n    this.itemTitle$ = !this.fieldConfig.isParentGroup\r\n      ? this.fieldConfig.settings$.pipe(map(settings => settings.Name))\r\n      : this.currentLanguage$.pipe(map(currentLanguage => {\r\n        let contentType: ContentType;\r\n        this.contentTypeService.getContentTypeById(this.config.entity.contentTypeId).pipe(take(1)).subscribe(cType => {\r\n          contentType = cType;\r\n        });\r\n        let defaultLanguage: string;\r\n        this.defaultLanguage$.pipe(take(1)).subscribe(defaultLang => {\r\n          defaultLanguage = defaultLang;\r\n        });\r\n        let label: string;\r\n        try {\r\n          const type = contentType.contentType.metadata\r\n            // xx ContentType is a historic bug and should be fixed when JSONs are rechecked\r\n            .find(metadata => metadata.type.name === 'ContentType' || metadata.type.name === 'xx ContentType');\r\n          if (!!type) {\r\n            label = LocalizationHelper.getValueOrDefault(type.attributes.Label, currentLanguage, defaultLanguage)?.value;\r\n          }\r\n          label = label || contentType.contentType.name;\r\n        } catch (error) {\r\n          label = contentType.contentType.name;\r\n        }\r\n        return label;\r\n      }));\r\n\r\n    this.description$ = this.fieldConfig.settings$.pipe(map(settings => {\r\n      if (this.fieldConfig.isParentGroup) {\r\n        return settings.EditInstructions != null ? settings.EditInstructions : '';\r\n      }\r\n      return settings.Notes != null ? settings.Notes : '';\r\n    }));\r\n\r\n    this.subscription.add(\r\n      this.currentLanguage$.subscribe(currentLanguage => {\r\n        let defaultLanguage: string;\r\n        this.defaultLanguage$.pipe(take(1)).subscribe(defaultLang => {\r\n          defaultLanguage = defaultLang;\r\n        });\r\n        this.translateAllConfiguration(currentLanguage, defaultLanguage);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.collapse$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  toggleCollapse() {\r\n    this.collapse$.next(!this.collapse$.value);\r\n  }\r\n\r\n  toggleSlotIsEmpty() {\r\n    let header: EavHeader;\r\n    this.header$.pipe(take(1)).subscribe(hdr => {\r\n      header = hdr;\r\n    });\r\n    const newHeader: EavHeader = { ...header, Group: { ...header.Group, SlotIsEmpty: !header.Group.SlotIsEmpty } };\r\n    this.itemService.updateItemHeader(this.config.entity.entityId, this.config.entity.entityGuid, newHeader);\r\n  }\r\n\r\n  private translateAllConfiguration(currentLanguage: string, defaultLanguage: string) {\r\n    const fieldSettings = LocalizationHelper.translateSettings(this.fieldConfig.fullSettings, currentLanguage, defaultLanguage);\r\n    this.fieldConfig.settings = fieldSettings;\r\n    this.fieldConfig.label = this.fieldConfig.settings.Name || null;\r\n    this.fieldConfig.validation = ValidationHelper.getValidations(this.fieldConfig.settings);\r\n    this.fieldConfig.required = ValidationHelper.isRequired(this.fieldConfig.settings);\r\n    this.config.field.settings$?.next(fieldSettings); // must run after validations are recalculated\r\n  }\r\n}\r\n","import { DropzoneConfigExt } from '../../../../edit-types';\r\n\r\nexport class DropzoneConfigInstance implements DropzoneConfigExt {\r\n  /** Subfolder and UsePortalRoot are updated from AdamBrowser */\r\n  disabled: boolean;\r\n  url: string;\r\n  headers: any;\r\n  acceptedFiles: string = null;\r\n  maxFiles = 1000;\r\n  parallelUploads = 1000;\r\n  autoReset: number = null;\r\n  errorReset: number = null;\r\n  cancelReset: number = null;\r\n  /** In MB. Upload will also be stopped on the server if file is larger than allowed */\r\n  maxFilesize = 10000;\r\n  paramName = 'uploadfile';\r\n  maxThumbnailFilesize = 10;\r\n  dictDefaultMessage = '';\r\n  addRemoveLinks = false;\r\n  previewsContainer = '.dropzone-previews';\r\n  /**\r\n   * We need a clickable, because otherwise the entire area is clickable,\r\n   * so i'm just making the preview clickable, as it's not important\r\n   */\r\n  clickable = '.dropzone-previews';\r\n\r\n  constructor(disabled: boolean, url: string, headers: any) {\r\n    this.disabled = disabled;\r\n    this.url = url;\r\n    this.headers = headers;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewContainerRef, ViewChild, AfterViewInit, NgZone, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DropzoneDirective } from 'ngx-dropzone-wrapper';\r\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { DropzoneConfigInstance } from './dropzone-wrapper.models';\r\nimport { DropzoneConfigExt, AdamPostResponse } from '../../../../edit-types';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-dropzone-wrapper',\r\n  templateUrl: './dropzone-wrapper.component.html',\r\n  styleUrls: ['./dropzone-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DropzoneWrapperComponent extends BaseComponent<any> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild(DropzoneDirective) dropzoneRef: DropzoneDirective;\r\n\r\n  dropzoneConfig$ = new BehaviorSubject<DropzoneConfigExt>(null);\r\n  dropzoneDisabled$: Observable<boolean>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private dnnContext: DnnContext,\r\n    private zone: NgZone,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.dropzoneDisabled$ = combineLatest([this.disabled$, this.dropzoneConfig$]).pipe(\r\n      map(([controlDisabled, dropzoneConfig]) => {\r\n        const dropzoneDisabled = (dropzoneConfig != null) ? dropzoneConfig.disabled : true;\r\n        return controlDisabled || dropzoneDisabled;\r\n      }),\r\n    );\r\n\r\n    this.config.dropzone = {\r\n      setConfig: (config) => {\r\n        this.zone.run(() => {\r\n          this.setConfig(config);\r\n        });\r\n      },\r\n      getConfig: () => this.dropzoneConfig$.value,\r\n      getConfig$: () => this.dropzoneConfig$.asObservable(),\r\n      uploadFile: (image) => {\r\n        this.zone.run(() => {\r\n          this.uploadFile(image);\r\n        });\r\n      }\r\n    };\r\n\r\n    this.config.dropzone.setConfig({});\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.config.dropzone.setConfig({\r\n      previewsContainer: '.field-' + this.config.field.index + ' .dropzone-previews',\r\n      clickable: '.field-' + this.config.field.index + ' .invisible-clickable',\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dropzoneConfig$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  onUploadError(args: any) {\r\n    angularConsoleLog('Dropzone upload error. Args:', args);\r\n    this.dropzoneRef.reset();\r\n  }\r\n\r\n  onUploadSuccess(args: any) {\r\n    const response: AdamPostResponse = args[1]; // Gets the server response as second argument.\r\n    if (response.Success) {\r\n      if (this.config.adam) {\r\n        this.config.adam.addFullPath(response);\r\n        this.config.adam.onItemUpload(response);\r\n        this.config.adam.refresh();\r\n      } else {\r\n        alert(`Upload failed because: ADAM reference doesn't exist`);\r\n      }\r\n    } else {\r\n      alert(`Upload failed because: ${response.Error}`);\r\n    }\r\n    this.dropzoneRef.reset();\r\n  }\r\n\r\n  private setConfig(config: Partial<DropzoneConfigExt>) {\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    const appId = this.eavService.eavConfig.appId;\r\n\r\n    const startDisabled = this.config.field.isExternal;\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(`app-content/${contentType}/${entityGuid}/${field}?subfolder=&usePortalRoot=false&appId=${appId}`);\r\n    const headers = this.dnnContext.sxc.webApi.headers();\r\n\r\n    const oldConfig = (this.dropzoneConfig$.value != null)\r\n      ? this.dropzoneConfig$.value\r\n      : new DropzoneConfigInstance(startDisabled, url, headers);\r\n    const newConfig = new DropzoneConfigInstance(startDisabled, url, headers);\r\n\r\n    const newConfigKeys = Object.keys(newConfig);\r\n    for (const key of newConfigKeys) {\r\n      (newConfig as any)[key] = ((config as any)[key] != null) ? (config as any)[key] : (oldConfig as any)[key];\r\n    }\r\n\r\n    // fixes\r\n    const syncUploadLimit = newConfig.maxFiles !== newConfig.parallelUploads;\r\n    if (syncUploadLimit) {\r\n      const uploadLimit = (newConfig.maxFiles >= newConfig.parallelUploads) ? newConfig.maxFiles : newConfig.parallelUploads;\r\n      newConfig.maxFiles = uploadLimit;\r\n      newConfig.parallelUploads = uploadLimit;\r\n    }\r\n    const fixAcceptedFiles = newConfig.acceptedFiles == null || newConfig.acceptedFiles === '';\r\n    if (fixAcceptedFiles) {\r\n      delete newConfig.acceptedFiles; // only way to tell dropzone to accept all files is to remove acceptedFiles from config\r\n    }\r\n\r\n    this.dropzoneConfig$.next(newConfig);\r\n  }\r\n\r\n  private uploadFile(file: File) {\r\n    const dropzone = this.dropzoneRef.dropzone();\r\n    (file as any).upload = { chunked: dropzone.defaultOptions.chunking };\r\n    dropzone.processFile(file);\r\n  }\r\n\r\n}\r\n","<div class=\"dropzone dropzone-container\" [ngClass]=\"{ 'dropzone-disabled': dropzoneDisabled$ | async }\"\r\n  [dropzone]=\"dropzoneConfig$ | async\" [disabled]=\"dropzoneDisabled$ | async\" (error)=\"onUploadError($event)\"\r\n  (success)=\"onUploadSuccess($event)\">\r\n  <ng-container #fieldComponent></ng-container>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ViewChild, ViewContainerRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-eav-localization-wrapper',\r\n  templateUrl: './eav-localization-wrapper.component.html',\r\n  styleUrls: ['./eav-localization-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EavLocalizationComponent extends BaseComponent<any> implements FieldWrapper, OnInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  currentLanguage$: Observable<string>;\r\n  defaultLanguage$: Observable<string>;\r\n  open$: Observable<boolean>;\r\n  toggleTranslateField$ = new BehaviorSubject(false);\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.currentLanguage$ = this.languageInstanceService.getCurrentLanguage(this.config.form.formId);\r\n    this.defaultLanguage$ = this.languageInstanceService.getDefaultLanguage(this.config.form.formId);\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.toggleTranslateField$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleTranslate() {\r\n    let open: boolean;\r\n    this.open$.pipe(take(1)).subscribe(isOpen => {\r\n      open = isOpen;\r\n    });\r\n    let currentLanguage: string;\r\n    this.currentLanguage$.pipe(take(1)).subscribe(lang => {\r\n      currentLanguage = lang;\r\n    });\r\n    let defaultLanguage: string;\r\n    this.defaultLanguage$.pipe(take(1)).subscribe(lang => {\r\n      defaultLanguage = lang;\r\n    });\r\n    const toggleEnabled = !open && currentLanguage !== defaultLanguage;\r\n    if (!toggleEnabled) { return; }\r\n\r\n    this.toggleTranslateField$.next(!this.toggleTranslateField$.value);\r\n  }\r\n}\r\n","<div class=\"language-wrap\">\r\n  <div class=\"language-wrap__field\" (dblclick)=\"toggleTranslate()\"\r\n    [ngClass]=\"{ 'language-wrap__field-short': (currentLanguage$ | async) !== (defaultLanguage$ | async) }\">\r\n    <ng-container #fieldComponent></ng-container>\r\n  </div>\r\n  <app-translate-group-menu class=\"language-wrap__translate\" [ngClass]=\"{\r\n    'language-wrap__translate--hidden': (currentLanguage$ | async) === (defaultLanguage$ | async)\r\n  }\" [config]=\"config\" [group]=\"group\" [toggleTranslateField]=\"toggleTranslateField$ | async\">\r\n  </app-translate-group-menu>\r\n</div>\r\n","import { trigger, state, transition, style, animate, keyframes } from '@angular/animations';\r\n\r\nexport const ContentExpandAnimation = [\r\n    trigger('itemShrinkAnimation', [\r\n        state('open', style({\r\n            height: '30vh'\r\n        })),\r\n        state('closed', style({\r\n            height: '0vh'\r\n        })),\r\n        transition('open => closed', [\r\n            animate('300ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\r\n        ]),\r\n    ]),\r\n    trigger('contentExpandAnimation', [\r\n        state('closed', style({\r\n            height: '0',\r\n        })),\r\n        state('expanded', style({\r\n            height: 'calc(100vh - {{bottomPixels}})', // 100px on desktop, 50px on mobile\r\n            maxHeight: 'calc(100vh - {{bottomPixels}})',\r\n        }), { params: { bottomPixels: window.innerWidth > 600 ? '100px' : '50px' } }),\r\n        transition('closed => expanded', [\r\n            animate('300ms cubic-bezier(0.4, 0.0, 0.2, 1)', keyframes([\r\n                style({ height: '0vh', overflow: 'hidden' }),\r\n                style({ height: 'calc(100vh - {{bottomPixels}})', overflow: 'hidden' }),\r\n            ])),\r\n        ], { params: { bottomPixels: window.innerWidth > 600 ? '100px' : '50px' } }),\r\n    ]),\r\n];\r\n","import { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { Helper } from '../../../../shared/helpers/helper';\r\nimport { SelectedEntity } from './entity-default.models';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\n\r\nexport function calculateSelectedEntities(\r\n  fieldValue: string | string[],\r\n  separator: string,\r\n  availableEntities: EntityInfo[],\r\n  translate: TranslateService,\r\n) {\r\n  // name is guid or freetext\r\n  const names = typeof fieldValue === 'string' ? Helper.convertValueToArray(fieldValue, separator) : fieldValue;\r\n  const selectedEntities = names.map(name => {\r\n    const entity = availableEntities.find(e => e.Value === name);\r\n    let label: string;\r\n    if (name == null) {\r\n      label = 'empty slot';\r\n    } else if (typeof fieldValue === 'string') {\r\n      label = entity != null ? entity.Text : name;\r\n    } else {\r\n      label = entity != null ? entity.Text : translate.instant('Fields.Entity.EntityNotFound');\r\n    }\r\n    const selectedEntity: SelectedEntity = {\r\n      value: name,\r\n      label,\r\n      tooltip: `${label} (${name})`,\r\n      isFreeTextOrNotFound: entity == null,\r\n    };\r\n    return selectedEntity;\r\n  });\r\n\r\n  return selectedEntities;\r\n}\r\n","<ng-container *ngIf=\"{\r\n  invalid: invalid$ | async,\r\n  description: description$ | async\r\n} as data\">\r\n  <div class=\"c-fht__container\" [ngClass]=\"{\r\n  'c-fht__container--no-hint': !data.description && !(data.invalid && !disableError),\r\n  'c-fht__container--last': config.field.isLastInGroup,\r\n  'c-fht__container--last--no-hint': config.field.isLastInGroup && !data.description && !(data.invalid && !disableError)\r\n}\">\r\n    <mat-hint *ngIf=\"data.description\" class=\"mat-caption\" (click)=\"toggleHint($event)\"\r\n      [ngClass]=\"control.disabled ? 'c-fht__container-hint--disabled' : 'c-fht__container-hint'\" align=\"start\"\r\n      fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n      <span class=\"notes-container\" [ngClass]=\"{ 'c-fht__container-hint--ellipsis': !isFullText }\" appChangeAnchorTarget\r\n        [innerHtml]=\"data.description | safeHtml\">\r\n      </span>\r\n    </mat-hint>\r\n    <mat-error *ngIf=\"data.invalid && !disableError\" class=\"mat-caption\">\r\n      {{ getErrorMessage() | translate:{ param:config.field.settings } }}\r\n    </mat-error>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nimport { FieldConfigSet } from '../../../eav-dynamic-form/model/field-config';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-field-helper-text',\r\n  templateUrl: './field-helper-text.component.html',\r\n  styleUrls: ['./field-helper-text.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FieldHelperTextComponent implements OnInit {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n  @Input() disableError = false;\r\n\r\n  isFullText = false;\r\n  description$: Observable<string>;\r\n  invalid$: Observable<boolean>;\r\n  control: AbstractControl;\r\n\r\n  constructor(private validationMessagesService: ValidationMessagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.control = this.group.controls[this.config.field.name];\r\n    this.invalid$ = this.control.statusChanges.pipe(map(status => status === 'INVALID'), startWith(this.control.invalid));\r\n    this.description$ = this.config.field.settings$.pipe(map(settings => settings.Notes));\r\n  }\r\n\r\n  /** Don't toggle if clicked on an anchor tag or it's children */\r\n  toggleHint(event: MouseEvent) {\r\n    let target = event.target as HTMLElement;\r\n\r\n    if (target.tagName === 'A') { return; }\r\n    while (target && target.classList && !target.classList.contains('notes-container')) {\r\n      target = target.parentNode as HTMLElement;\r\n      if (!target) { return; }\r\n      if (target.tagName === 'A') { return; }\r\n    }\r\n\r\n    this.isFullText = !this.isFullText;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.control, this.config);\r\n  }\r\n}\r\n","<div [ngClass]=\"(dialogIsOpen$ | async) ? 'c-ew__container' : 'u-display-none'\">\r\n  <div class=\"c-ew__backdrop\" (click)=\"closeDialog()\"></div>\r\n  <div fxLayout=\"column\" class=\"c-ew__dialog mat-elevation-z24\">\r\n    <div [ngClass]=\"{ 'c-ew__dialog-header mat-elevation-z2': dialogIsOpen$ | async }\">\r\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"row\">\r\n        <button mat-icon-button class=\"back-arrow\" fxLayoutAlign=\"center center\"\r\n          [matTooltip]=\"'Form.Buttons.Return.Tip' | translate\" (click)=\"closeDialog()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span fxLayoutAlign=\"center center\" class=\"title mat-display-1\">{{ label$ | async }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <div [@itemShrinkAnimation]=\"(dialogIsOpen$ | async) ? 'closed' : 'open'\">\r\n      </div>\r\n      <div class=\"c-ew__dialog-content u-add-scrollbar u-hide-scrollbar\" [@contentExpandAnimation]=\"{\r\n        value: (dialogIsOpen$ | async) ? 'expanded' : 'closed',\r\n        params: { bottomPixels: calculateBottomPixels() }\r\n      }\">\r\n        <div class=\"mdc-layout-grid\">\r\n          <div class=\"mdc-layout-grid__inner\">\r\n            <mat-card class=\"mdc-layout-grid__cell--span-12 u-border-radius shadow-bottom-z-1\">\r\n              <ng-container #fieldComponent></ng-container>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"c-ew__preview-holder\" *ngIf=\"{\r\n  label: label$ | async,\r\n  required: required$ | async,\r\n  invalid: invalid$ | async,\r\n  touched: control.touched,\r\n  selectedEntities: (selectedEntities$ | async)?.slice(0, 9) || [],\r\n  entitiesNumber: (selectedEntities$ | async)?.length || 0,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <mat-label class=\"c-ew__preview-label\" [ngClass]=\"{\r\n    'mat-caption' : data.entitiesNumber,\r\n    'mat-empty' : !data.entitiesNumber,\r\n    'mat-error' : data.invalid && data.touched && !config.field.disabled,\r\n    'color__primary' : !(data.invalid && data.touched) && !config.field.disabled,\r\n    'color__label-disabled' : config.field.disabled\r\n  }\">\r\n    {{ data.label }} {{ data.required ? '*': '' }}\r\n  </mat-label>\r\n  <div matRipple [matRippleAnimation]=\"{ enterDuration: 360 }\" class=\"c-ew__preview mat-ripple\" (click)=\"expandDialog()\"\r\n    [ngClass]=\"{\r\n      'c-ew__preview--invalid' : data.invalid && data.touched,\r\n      'c-ew__preview--disabled': config.field.disabled\r\n    }\">\r\n    <div [ngClass]=\"data.entitiesNumber ? 'c-ew__preview-container' : 'c-ew__preview-container--empty'\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <mat-list *ngIf=\"data.entitiesNumber\" fxLayout=\"row\">\r\n          <mat-list-item role=\"listitem\" *ngFor=\"let item of data.selectedEntities; trackBy: trackByFn\">\r\n            <span mat-line>{{ item.label }}</span>\r\n          </mat-list-item>\r\n        </mat-list>\r\n        <span *ngIf=\"data.entitiesNumber > 5\" class=\"more-entities mat-body-1\">\r\n          {{ data.entitiesNumber }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n</div>\r\n","import { Component, OnInit, ViewContainerRef, ViewChild, AfterViewInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { ContentExpandAnimation } from '../../../shared/animations/content-expand-animation';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\nimport { SelectedEntity } from '../../input-types/entity/entity-default/entity-default.models';\r\nimport { calculateSelectedEntities } from '../../input-types/entity/entity-default/entity-default.helpers';\r\n\r\n@Component({\r\n  selector: 'app-entity-expandable-wrapper',\r\n  templateUrl: './entity-expandable-wrapper.component.html',\r\n  styleUrls: ['./entity-expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line:max-line-length\r\nexport class EntityExpandableWrapperComponent extends BaseComponent<string | string[]> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  dialogIsOpen$: Observable<boolean>;\r\n  selectedEntities$: Observable<SelectedEntity[]>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private translate: TranslateService,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.dialogIsOpen$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.selectedEntities$ = combineLatest([this.value$, this.settings$, this.config.entityCache$]).pipe(\r\n      map(([fieldValue, settings, availableEntities]) => {\r\n        const selected = calculateSelectedEntities(fieldValue, settings.Separator, availableEntities, this.translate);\r\n        return selected;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  calculateBottomPixels() {\r\n    return window.innerWidth > 600 ? '100px' : '50px';\r\n  }\r\n\r\n  trackByFn(index: number, item: SelectedEntity) {\r\n    return item.value;\r\n  }\r\n\r\n  expandDialog() {\r\n    if (this.config.field.disabled) { return; }\r\n    this.editRoutingService.expand(true, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.editRoutingService.expand(false, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { Connector, ConnectorData, FieldConfig, ExperimentalProps } from '../../../../../../../edit-types';\r\nimport { ConnectorDialog } from '../../../../../../../edit-types/src/ConnectorDialog';\r\nimport { UrlHelper } from '../../../../../../shared/helpers/url-helper';\r\nimport { EavConfig } from '../../../../../../shared/models/eav-config';\r\nimport { loadScripts } from '../../../../../../../ng-dialogs/src/app/shared/helpers/load-scripts.helper';\r\ndeclare const sxcVersion: string;\r\n\r\nexport class ConnectorInstance<T> implements Connector<T> {\r\n  field$: Observable<FieldConfig>;\r\n  data: ConnectorData<T>;\r\n  dialog: ConnectorDialog<T>;\r\n  loadScript: (...args: any[]) => void;\r\n\r\n  constructor(\r\n    _connectorHost: ConnectorHost<T>,\r\n    value$: Observable<T>,\r\n    public field: FieldConfig,\r\n    public _experimental: ExperimentalProps,\r\n    eavConfig: EavConfig,\r\n  ) {\r\n    this.data = new ConnectorDataInstance<T>(_connectorHost, value$);\r\n    this.dialog = new ConnectorDialogInstance<T>(_connectorHost);\r\n\r\n    this.loadScript = (\r\n      testOrScripts: string | (() => any) | { test: string | (() => any); src: string }[],\r\n      srcOrCallback: string | (() => any),\r\n      callback?: () => any\r\n    ) => {\r\n      // one script (3 parameters: global or test, script url and a callback)\r\n      if (\r\n        (typeof testOrScripts === 'string' || typeof testOrScripts === 'function')\r\n        && typeof srcOrCallback === 'string'\r\n        && typeof callback === 'function'\r\n      ) {\r\n        srcOrCallback = this.resolveTokens(srcOrCallback, eavConfig);\r\n        loadScripts([{ test: testOrScripts, src: srcOrCallback }], callback);\r\n        return;\r\n      }\r\n      // multiple scripts (2 parameters: scripts array and a callback)\r\n      if (Array.isArray(testOrScripts) && typeof srcOrCallback === 'function') {\r\n        for (const script of testOrScripts) {\r\n          script.src = this.resolveTokens(script.src, eavConfig);\r\n        }\r\n        loadScripts(testOrScripts, srcOrCallback);\r\n        return;\r\n      }\r\n      throw new Error('Unrecognized parameters. Please double check your input');\r\n    };\r\n  }\r\n\r\n  resolveTokens(src: string, eavConfig: EavConfig) {\r\n    src = src.replace(/\\[System:Path\\]/i, UrlHelper.getUrlPrefix('system', eavConfig))\r\n      .replace(/\\[Zone:Path\\]/i, UrlHelper.getUrlPrefix('zone', eavConfig))\r\n      .replace(/\\[App:Path\\]/i, UrlHelper.getUrlPrefix('app', eavConfig));\r\n    if (!src.includes('?')) {\r\n      src = `${src}?sxcver=${sxcVersion}`;\r\n    }\r\n    return src;\r\n  }\r\n}\r\n\r\nexport class ConnectorDataInstance<T> implements ConnectorData<T> {\r\n  value$: Observable<T>;\r\n  forceConnectorSave$: Observable<null>;\r\n  value: T;\r\n  clientValueChangeListeners: ((newValue: T) => void)[] = [];\r\n\r\n  constructor(\r\n    private _connectorHost: ConnectorHost<T>,\r\n    value$: Observable<T>\r\n  ) {\r\n    this.value$ = value$;\r\n    this.forceConnectorSave$ = _connectorHost.forceConnectorSave$;\r\n    // Host will complete this observable. Therefore unsubscribe is not required\r\n    this.value$.subscribe(newValue => {\r\n      this.value = newValue;\r\n      this.clientValueChangeListeners.forEach(clientListener => clientListener(newValue));\r\n    });\r\n  }\r\n\r\n  update(newValue: T) {\r\n    this._connectorHost.update(newValue);\r\n  }\r\n\r\n  onValueChange(callback: (newValue: T) => void) {\r\n    this.clientValueChangeListeners.push(callback);\r\n  }\r\n}\r\n\r\nexport class ConnectorDialogInstance<T> implements ConnectorDialog<T> {\r\n  open: (componentTag?: string) => void;\r\n  close: () => void;\r\n\r\n  constructor(_connectorHost: ConnectorHost<T>) {\r\n    this.open = (componentTag?) => _connectorHost.expand(true, componentTag);\r\n    this.close = () => _connectorHost.expand(false);\r\n  }\r\n}\r\n\r\n/** Props and methods available to the connector to communicate with the host */\r\nexport interface ConnectorHost<T> {\r\n  forceConnectorSave$: Observable<null>;\r\n  update: (value: T) => void;\r\n  expand: (expand: boolean, componentTag?: string) => void;\r\n}\r\n","import { NgZone, ElementRef } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { take, filter, map, distinctUntilChanged, startWith } from 'rxjs/operators';\r\n\r\nimport { FieldConfigSet } from '../../../../../eav-dynamic-form/model/field-config';\r\nimport { DnnBridgeService } from '../../../../../shared/services/dnn-bridge.service';\r\nimport { EavService } from '../../../../../shared/services/eav.service';\r\nimport { ConnectorInstance, ConnectorHost } from './models/connector-instance.model';\r\nimport { InputFieldHelper } from '../../../../../shared/helpers/input-field-helper';\r\nimport { ContentTypeService } from '../../../../../shared/store/ngrx-data/content-type.service';\r\nimport { FeatureService } from '../../../../../shared/store/ngrx-data/feature.service';\r\nimport { InputTypeService } from '../../../../../shared/store/ngrx-data/input-type.service';\r\nimport { EditRoutingService } from '../../../../../shared/services/edit-routing.service';\r\nimport { ExperimentalProps, InputTypeName, EavCustomInputField } from '../../../../../../edit-types';\r\n\r\nexport class ConnectorHelper {\r\n  private control: AbstractControl;\r\n  private customEl: EavCustomInputField<any>;\r\n  private value$ = new BehaviorSubject<any>(null);\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private config: FieldConfigSet,\r\n    private group: FormGroup,\r\n    private customElContainerRef: ElementRef,\r\n    private customElName: string,\r\n    private eavService: EavService,\r\n    private translateService: TranslateService,\r\n    private contentTypeService: ContentTypeService,\r\n    private inputTypeService: InputTypeService,\r\n    private featureService: FeatureService,\r\n    private editRoutingService: EditRoutingService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private zone: NgZone,\r\n  ) {\r\n    this.control = this.group.controls[this.config.field.name];\r\n\r\n    this.subscription.add(\r\n      this.eavService.formValueChange$.pipe(\r\n        filter(formSet => (formSet.formId === this.config.form.formId) && (formSet.entityGuid === this.config.entity.entityGuid)),\r\n        map(formSet => this.control.value),\r\n        startWith(this.control.value),\r\n        distinctUntilChanged(),\r\n      ).subscribe(newValue => {\r\n        this.value$.next(newValue);\r\n      })\r\n    );\r\n\r\n    this.customEl = document.createElement(this.customElName) as any;\r\n    this.customEl.connector = this.buildConnector();\r\n    this.customElContainerRef.nativeElement.appendChild(this.customEl);\r\n  }\r\n\r\n  destroy() {\r\n    this.subscription.unsubscribe();\r\n    this.value$.complete();\r\n    this.customEl?.parentNode.removeChild(this.customEl);\r\n    this.customEl = null;\r\n  }\r\n\r\n  private buildConnector() {\r\n    const connectorHost = this.calculateRegularProps();\r\n    const experimental = this.calculateExperimentalProps();\r\n    const connector = new ConnectorInstance<any>(\r\n      connectorHost,\r\n      this.value$.asObservable(),\r\n      this.config.field,\r\n      experimental,\r\n      this.eavService.eavConfig,\r\n    );\r\n    return connector;\r\n  }\r\n\r\n  private calculateRegularProps() {\r\n    const connectorHost: ConnectorHost<any> = {\r\n      forceConnectorSave$: this.eavService.forceConnectorSave$,\r\n      update: (value) => {\r\n        this.zone.run(() => { this.updateControl(this.control, value); });\r\n      },\r\n      expand: (expand, componentTag) => {\r\n        this.zone.run(() => {\r\n          this.editRoutingService.expand(expand, this.config.field.index, this.config.entity.entityGuid, componentTag);\r\n        });\r\n      },\r\n    };\r\n    return connectorHost;\r\n  }\r\n\r\n  private calculateExperimentalProps() {\r\n    let allInputTypeNames: InputTypeName[];\r\n    this.contentTypeService.getContentTypeById(this.config.entity.contentTypeId).pipe(take(1)).subscribe(data => {\r\n      allInputTypeNames = InputFieldHelper.calculateInputTypes(data.contentType.attributes, this.inputTypeService);\r\n    });\r\n\r\n    const experimentalProps: ExperimentalProps = {\r\n      entityGuid: this.config.entity.entityGuid,\r\n      allInputTypeNames,\r\n      formGroup: this.group,\r\n      translateService: this.translateService,\r\n      isExpanded$: this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid),\r\n      dropzone: this.config.dropzone,\r\n      adam: this.config.adam,\r\n      updateField: (name, value) => {\r\n        this.zone.run(() => { this.updateControl(this.group.controls[name], value); });\r\n      },\r\n      isFeatureEnabled: (guid) => this.featureService.isFeatureEnabled(guid),\r\n      setFocused: (focused) => {\r\n        this.zone.run(() => { this.config.field.focused$.next(focused); });\r\n      },\r\n      openPagePicker: (params, callback) => {\r\n        this.zone.run(() => { this.dnnBridgeService.open('pagepicker', params, callback); });\r\n      },\r\n      getUrlOfId: (value, callback) => {\r\n        this.zone.run(() => { this.getUrlOfId(value, callback); });\r\n      },\r\n    };\r\n\r\n    return experimentalProps;\r\n  }\r\n\r\n  private getUrlOfId(value: string, callback: (value: string) => void) {\r\n    if (!value) { return; }\r\n\r\n    // handle short-ID links like file:17\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    this.dnnBridgeService.getUrlOfId(value, contentType, entityGuid, field).subscribe(path => {\r\n      if (!path) { return; }\r\n      callback(path);\r\n    });\r\n  }\r\n\r\n  private updateControl(control: AbstractControl, value: any) {\r\n    if (control == null || control.disabled) { return; }\r\n\r\n    if (control.value !== value) { control.patchValue(value); }\r\n    if (!control.dirty) { control.markAsDirty(); }\r\n    if (!control.touched) { control.markAsTouched(); }\r\n  }\r\n}\r\n","<div [ngClass]=\"(open$ | async) ? 'c-ew__container' : 'u-display-none'\">\r\n  <div #backdrop class=\"c-ew__backdrop\" (click)=\"closeDialog()\"></div>\r\n  <div #dialog fxLayout=\"column\" class=\"c-ew__dialog mat-elevation-z24 u-border-radius\">\r\n    <div [ngClass]=\"{ 'c-ew__dialog-header mat-elevation-z2': (open$ | async) }\">\r\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"row\">\r\n        <button mat-icon-button class=\"back-arrow\" fxLayoutAlign=\"center center\"\r\n          [matTooltip]=\"'Form.Buttons.Return.Tip' | translate\" (click)=\"closeDialog()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span fxLayoutAlign=\"center center\" class=\"title mat-display-1\">{{ label$ | async }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <div [@itemShrinkAnimation]=\"(open$ | async) ? 'closed' : 'open'\">\r\n      </div>\r\n      <div class=\"c-ew__dialog-content u-border-radius-bottom u-add-scrollbar u-hide-scrollbar\"\r\n        [@contentExpandAnimation]=\"{\r\n          value: (open$ | async) ? 'expanded' : 'closed',\r\n          params: { bottomPixels: calculateBottomPixels() }\r\n        }\">\r\n        <ng-container #fieldComponent></ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"c-ew__preview-holder\" *ngIf=\"{\r\n  value: value$ | async,\r\n  label: label$ | async,\r\n  required: required$ | async,\r\n  invalid: invalid$ | async,\r\n  touched: control.touched,\r\n  dirty: control.dirty,\r\n  focused: config.field.focused$ | async,\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <mat-label class=\"c-ew__preview-label\" [ngClass]=\"{\r\n    'mat-caption' : data.value,\r\n    'mat-empty' : !data.value,\r\n    'mat-error' : data.invalid && data.touched && !data.disabled,\r\n    'color__primary' : !(data.invalid && data.touched) && !data.disabled,\r\n    'color__label-disabled' : data.disabled,\r\n    'c-ew__preview-label--focused': data.focused\r\n  }\">\r\n    {{ data.label }}\r\n    {{ data.required ? '*': '' }}\r\n  </mat-label>\r\n  <div class=\"c-ew__preview\" [ngClass]=\"{\r\n    'c-ew__preview--invalid' : data.invalid && (data.touched || data.dirty),\r\n    'c-ew__preview--disabled': data.disabled,\r\n    'c-ew__preview--focused': data.focused\r\n  }\">\r\n    <div class=\"c-ew__preview-container\">\r\n      <div #previewContainer class=\"c-ew__preview-content u-hide-scrollbar\" [ngClass]=\"{\r\n        'c-ew__preview-content--disabled': data.disabled\r\n      }\"></div>\r\n    </div>\r\n  </div>\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n</div>\r\n","import { Component, OnInit, ViewContainerRef, ViewChild, ElementRef, OnDestroy, NgZone, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { ContentExpandAnimation } from '../../../shared/animations/content-expand-animation';\r\nimport { ConnectorHelper } from '../../input-types/custom/external-web-component/connector/connector.helper';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { DnnBridgeService } from '../../../shared/services/dnn-bridge.service';\r\nimport { ContentTypeService } from '../../../shared/store/ngrx-data/content-type.service';\r\nimport { FeatureService } from '../../../shared/store/ngrx-data/feature.service';\r\nimport { InputTypeService } from '../../../shared/store/ngrx-data/input-type.service';\r\nimport { DropzoneDraggingHelper } from '../../../shared/services/dropzone-dragging.helper';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\n\r\n@Component({\r\n  selector: 'app-expandable-wrapper',\r\n  templateUrl: './expandable-wrapper.component.html',\r\n  styleUrls: ['./expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ExpandableWrapperComponent extends BaseComponent<string> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('previewContainer') previewContainerRef: ElementRef;\r\n  @ViewChild('backdrop') backdropRef: ElementRef;\r\n  @ViewChild('dialog') dialogRef: ElementRef;\r\n\r\n  open$: Observable<boolean>;\r\n\r\n  private connectorCreator: ConnectorHelper;\r\n  private dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private translateService: TranslateService,\r\n    private contentTypeService: ContentTypeService,\r\n    private inputTypeService: InputTypeService,\r\n    private featureService: FeatureService,\r\n    private editRoutingService: EditRoutingService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private zone: NgZone,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const componentTag = `field-${this.config.field.inputType}`;\r\n    angularConsoleLog('ExpandableWrapper created for:', componentTag);\r\n    this.connectorCreator = new ConnectorHelper(\r\n      this.config,\r\n      this.group,\r\n      this.previewContainerRef,\r\n      componentTag,\r\n      this.eavService,\r\n      this.translateService,\r\n      this.contentTypeService,\r\n      this.inputTypeService,\r\n      this.featureService,\r\n      this.editRoutingService,\r\n      this.dnnBridgeService,\r\n      this.zone,\r\n    );\r\n\r\n    this.dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n    this.dropzoneDraggingHelper.attach(this.backdropRef.nativeElement);\r\n    this.dropzoneDraggingHelper.attach(this.dialogRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    angularConsoleLog('ExpandableWrapper destroyed');\r\n    this.connectorCreator.destroy();\r\n    this.dropzoneDraggingHelper.detach();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  expandDialog() {\r\n    this.editRoutingService.expand(true, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.editRoutingService.expand(false, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  calculateBottomPixels() {\r\n    return window.innerWidth > 600 ? '100px' : '50px';\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ViewContainerRef, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-hidden-wrapper',\r\n  templateUrl: './hidden-wrapper.component.html',\r\n  styleUrls: ['./hidden-wrapper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HiddenWrapperComponent extends BaseComponent<any> implements FieldWrapper, OnInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  visibleInEditUI$: Observable<boolean>;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.visibleInEditUI$ = this.settings$.pipe(map(settings => (settings.VisibleInEditUI === false) ? false : true));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","<div [hidden]=\"!((visibleInEditUI$ | async) === true)\">\r\n  <ng-container #fieldComponent></ng-container>\r\n</div>\r\n","<!-- header -->\r\n<div [ngClass]=\"(open$ | async) ? 'c-ew__container' : 'u-display-none'\">\r\n  <div #backdrop class=\"c-ew__backdrop\" (click)=\"closeDialog()\"></div>\r\n  <div #dialog fxLayout=\"column\" class=\"c-ew__dialog mat-elevation-z24 u-border-radius\">\r\n    <div [ngClass]=\"{ 'c-ew__dialog-header mat-elevation-z2': (open$ | async) }\">\r\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"row\">\r\n        <button mat-icon-button class=\"back-arrow\" fxLayoutAlign=\"center center\"\r\n          [matTooltip]=\"'Form.Buttons.Return.Tip' | translate\" (click)=\"closeDialog()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span fxLayoutAlign=\"center center\" class=\"title mat-display-1\">{{ label$ | async }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <div [@itemShrinkAnimation]=\"(open$ | async) ? 'closed' : 'open'\">\r\n      </div>\r\n      <div class=\"c-ew__dialog-content u-border-radius-bottom u-add-scrollbar u-hide-scrollbar\"\r\n        [@contentExpandAnimation]=\"{\r\n          value: (open$ | async) ? 'expanded' : 'closed',\r\n          params: { bottomPixels: calculateBottomPixels() }\r\n        }\">\r\n        <ng-container #fieldComponent></ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- preview -->\r\n<div class=\"c-hyperlink-default-field-preview\" *ngIf=\"{\r\n  value: value$ | async,\r\n  preview: preview$ | async,\r\n  label: label$ | async,\r\n  placeholder: placeholder$ | async,\r\n  invalid: invalid$ | async,\r\n  touched: control.touched,\r\n  required: required$ | async,\r\n  disabled: disabled$ | async,\r\n  adamButton: adamButton$ | async,\r\n  pageButton: pageButton$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <div class=\"c-ew__preview\" fxLayout=\"row\" fxLayoutAlign=\"start start\" [ngClass]=\"{\r\n    'c-ew__preview--disabled': data.disabled,\r\n    'c-ew__preview--last-in-group': config.field.isLastInGroup\r\n  }\">\r\n    <!-- image / icon -->\r\n    <div class=\"thumbnail-before-input\" [matTooltip]=\"'Fields.Hyperlink.Default.Fullscreen' | translate\"\r\n      [matTooltipDisabled]=\"data.disabled\" [ngClass]=\"{\r\n      'icon-before-input': data.value && !data.preview.isImage,\r\n      'thumbnail-before-input--disabled': data.disabled\r\n    }\" [ngStyle]=\"{ 'background-image': data.value && data.preview.isImage ? data.preview.thumbnailUrl : '' }\"\r\n      (click)=\"expandDialog()\">\r\n      <mat-icon *ngIf=\"data.value && !data.preview.isImage && data.preview.isKnownType\" [matTooltip]=\"data.preview.url\"\r\n        matTooltipPosition=\"right\">\r\n        {{ data.preview.icon }}\r\n      </mat-icon>\r\n      <mat-icon *ngIf=\"data.value && !data.preview.isImage && !data.preview.isKnownType\" [matTooltip]=\"data.preview.url\"\r\n        matTooltipPosition=\"right\" [svgIcon]=\"data.preview.icon\">\r\n      </mat-icon>\r\n    </div>\r\n    <!-- field -->\r\n    <div class=\"c-ew__preview-field--short\" fxFlex=\"auto\">\r\n      <!-- input -->\r\n      <div class=\"hyperlink-input-link-wrapper\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\" [ngClass]=\"{\r\n          'mat-form-field-invalid': data.invalid && data.touched\r\n        }\">\r\n          <input matInput [matTooltip]=\"'Fields.Hyperlink.Default.Tooltip' | translate\" matTooltipPosition=\"above\"\r\n            [placeholder]=\"data.placeholder\" (change)=\"setValue($event)\" [disabled]=\"data.disabled\"\r\n            (blur)=\"control.markAsTouched()\" [value]=\"data.value\" (keyup)=\"setValue($event)\" appPasteClipboardImage\r\n            [config]=\"config\" [elementType]=\"'input'\">\r\n          <div matSuffix fxLayoutAlign=\"center center\" *ngIf=\"data.adamButton || data.pageButton\">\r\n            <div class=\"c-ew__preview-suffix-text\" fxHide fxShow.gt-xs [ngClass]=\"{\r\n              'c-ew__preview-suffix-text--disabled': data.disabled\r\n            }\">\r\n              {{ data.adamButton ? ('Fields.Hyperlink.AdamFileManager.Hint' | translate) : '' }}\r\n            </div>\r\n            <button mat-icon-button class=\"c-ew__preview-suffix-icon\"\r\n              [matTooltip]=\"'Fields.Hyperlink.Default.Fullscreen' | translate\" appClickStopPropagation\r\n              *ngIf=\"data.adamButton\" [disabled]=\"data.disabled\" (click)=\"expandDialog()\">\r\n              <mat-icon svgIcon=\"apple\"></mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"c-ew__preview-suffix-icon\"\r\n              [matTooltip]=\"'Fields.Hyperlink.Default.PageTip' | translate\" appClickStopPropagation\r\n              *ngIf=\"data.pageButton\" [disabled]=\"data.disabled\" (click)=\"openPagePicker()\">\r\n              <mat-icon svgIcon=\"sitemap\"></mat-icon>\r\n            </button>\r\n          </div>\r\n          <mat-label [ngClass]=\"{ 'mat-error' : data.invalid && data.touched }\">\r\n            {{ data.label }}\r\n            {{ data.required ? '*': '' }}\r\n          </mat-label>\r\n        </mat-form-field>\r\n        <!-- link absolutely positioned above input -->\r\n        <div *ngIf=\"data.preview.floatingText\" class=\"hyperlink-floating\" fxHide fxShow.gt-xs>\r\n          <div class=\"hyperlink-floating__value\">{{ data.value }}</div>\r\n          <div class=\"hyperlink-floating__url-box\">\r\n            <a [href]=\"data.preview.url\" target=\"_blank\" tabindex=\"-1\" class=\"hyperlink-floating__url\"\r\n              [matTooltip]=\"data.preview.url\">\r\n              <span>{{ data.preview.floatingText }}</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- helper text and adam text -->\r\n      <div class=\"c__helper-wrapper\">\r\n        <app-field-helper-text class=\"c__helper-wrapper--left\" [config]=\"config\" [group]=\"group\">\r\n        </app-field-helper-text>\r\n        <div *ngIf=\"data.adamButton\" align=\"end\" class=\"c-ew__preview-field-hint c__helper-wrapper--right\" fxHide\r\n          fxShow.gt-xs>\r\n          <span>{{ 'Fields.Hyperlink.Default.Sponsor' | translate }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewContainerRef, ViewChild, OnDestroy, AfterViewInit, ElementRef, NgZone, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { ContentExpandAnimation } from '../../../shared/animations/content-expand-animation';\r\nimport { FileTypeService } from '../../../shared/services/file-type.service';\r\nimport { DnnBridgeService } from '../../../shared/services/dnn-bridge.service';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { DropzoneDraggingHelper } from '../../../shared/services/dropzone-dragging.helper';\r\nimport { PagePickerResult, DnnBridgeConnectorParams } from '../../input-types/dnn-bridge/dnn-bridge.models';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\nimport { Preview } from '../../input-types/hyperlink/hyperlink-default/hyperlink-default.models';\r\n\r\n@Component({\r\n  selector: 'app-hyperlink-default-expandable-wrapper',\r\n  templateUrl: './hyperlink-default-expandable-wrapper.component.html',\r\n  styleUrls: ['./hyperlink-default-expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line:max-line-length\r\nexport class HyperlinkDefaultExpandableWrapperComponent extends BaseComponent<string> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('backdrop') backdropRef: ElementRef;\r\n  @ViewChild('dialog') dialogRef: ElementRef;\r\n\r\n  open$: Observable<boolean>;\r\n  adamButton$: Observable<boolean>;\r\n  pageButton$: Observable<boolean>;\r\n  preview$ = new BehaviorSubject<Preview>({\r\n    url: '',\r\n    thumbnailUrl: '',\r\n    thumbnailPreviewUrl: '',\r\n    floatingText: '',\r\n    isImage: false,\r\n    isKnownType: false,\r\n    icon: '',\r\n  });\r\n  private dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private fileTypeService: FileTypeService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private zone: NgZone,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.subscription.add(\r\n      this.value$.subscribe(value => {\r\n        this.setLink(value);\r\n      })\r\n    );\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n    this.adamButton$ = this.settings$.pipe(map(settings => settings.Buttons?.includes('adam')));\r\n    this.pageButton$ = this.settings$.pipe(map(settings => settings.Buttons?.includes('page')));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n    this.dropzoneDraggingHelper.attach(this.backdropRef.nativeElement);\r\n    this.dropzoneDraggingHelper.attach(this.dialogRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dropzoneDraggingHelper.detach();\r\n    this.preview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  calculateBottomPixels() {\r\n    return window.innerWidth > 600 ? '100px' : '50px';\r\n  }\r\n\r\n  setValue(event: Event) {\r\n    const newValue = (event.target as HTMLInputElement).value;\r\n    if (this.control.value === newValue) { return; }\r\n    this.control.patchValue(newValue);\r\n    this.control.markAsDirty();\r\n  }\r\n\r\n  expandDialog() {\r\n    if (this.control.disabled) { return; }\r\n    this.editRoutingService.expand(true, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.editRoutingService.expand(false, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  openPagePicker() {\r\n    const settings = this.settings$.value;\r\n    const params: DnnBridgeConnectorParams = {\r\n      CurrentValue: this.control.value,\r\n      FileFilter: (settings.FileFilter != null) ? settings.FileFilter : '',\r\n      Paths: (settings.Paths != null) ? settings.Paths : '',\r\n    };\r\n    this.dnnBridgeService.open('pagepicker', params, this.pagePickerCallback.bind(this));\r\n  }\r\n\r\n  private pagePickerCallback(value: PagePickerResult) {\r\n    // Convert to page:xyz format (if it wasn't cancelled)\r\n    if (!value) { return; }\r\n    this.control.patchValue(`page:${value.id}`);\r\n  }\r\n\r\n  private setLink(value: string) {\r\n    if (!value) { return; }\r\n\r\n    // handle short-ID links like file:17\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    this.dnnBridgeService.getUrlOfId(value, contentType, entityGuid, field).subscribe(path => {\r\n      if (!path) { return; }\r\n      const urlLowered = path.toLowerCase();\r\n      const isFileOrPage = urlLowered.includes('file:') || urlLowered.includes('page:');\r\n      const preview: Preview = {\r\n        url: path,\r\n        floatingText: isFileOrPage ? `.../${path.substring(path.lastIndexOf('/') + 1, path.length)}` : '',\r\n        thumbnailUrl: this.thumbnailUrl(path, 1, true),\r\n        thumbnailPreviewUrl: this.thumbnailUrl(path, 2, false),\r\n        isImage: this.fileTypeService.isImage(path),\r\n        isKnownType: this.fileTypeService.isKnownType(path),\r\n        icon: this.fileTypeService.getIconClass(path),\r\n      };\r\n      this.preview$.next(preview);\r\n    });\r\n  }\r\n\r\n  private thumbnailUrl(url: string, size: number, quote: boolean): string {\r\n    if (size === 1) {\r\n      url = url + '?w=80&h=80&mode=crop';\r\n    }\r\n    if (size === 2) {\r\n      url = url + '?w=500&h=400&mode=max';\r\n    }\r\n    const qt = quote ? '\"' : '';\r\n    return 'url(' + qt + url + qt + ')';\r\n  }\r\n}\r\n","<!-- dialog -->\r\n<div [ngClass]=\"(open$ | async) ? 'c-ew__container' : 'u-display-none'\">\r\n  <div #backdrop class=\"c-ew__backdrop\" (click)=\"closeDialog()\"></div>\r\n  <div #dialog fxLayout=\"column\" class=\"c-ew__dialog mat-elevation-z24 u-border-radius\">\r\n    <div [ngClass]=\"{ 'c-ew__dialog-header mat-elevation-z2': (open$ | async) }\">\r\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"row\">\r\n        <button mat-icon-button class=\"back-arrow\" fxLayoutAlign=\"center center\"\r\n          [matTooltip]=\"'Form.Buttons.Return.Tip' | translate\" (click)=\"closeDialog()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <span fxLayoutAlign=\"center center\" class=\"title mat-display-1\">{{ label$ | async }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div>\r\n      <div [@itemShrinkAnimation]=\"(open$ | async) ? 'closed' : 'open'\">\r\n      </div>\r\n      <div\r\n        class=\"c-ew__dialog-content c-ew__dialog-content--empty u-border-radius-bottom u-add-scrollbar u-hide-scrollbar\"\r\n        [@contentExpandAnimation]=\"{\r\n          value: (open$ | async) ? 'expanded' : 'closed',\r\n          params: { bottomPixels: calculateBottomPixels() }\r\n        }\">\r\n        <ng-container #fieldComponent></ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- preview -->\r\n<div class=\"c-ew__preview-holder\" *ngIf=\"{\r\n  value: value$ | async,\r\n  label: label$ | async,\r\n  required: required$ | async,\r\n  invalid: invalid$ | async,\r\n  items: (adamItems$ | async).slice(0, 9),\r\n  itemsNumber: (adamItems$ | async).length,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <mat-label class=\"c-ew__preview-label c-ew__color--primary\" [ngClass]=\"{\r\n    'mat-caption' : data.itemsNumber > 0,\r\n    'mat-empty' : data.itemsNumber === 0,\r\n    'mat-error' : data.invalid && !config.field.disabled,\r\n    'color__primary' : !data.invalid && !config.field.disabled,\r\n    'color__label-disabled' : config.field.disabled\r\n  }\">\r\n    {{ data.label }} {{ data.required ? '*': '' }}\r\n  </mat-label>\r\n  <div matRipple class=\"c-ew__preview mat-ripple\" [matRippleAnimation]=\"{ enterDuration: 360 }\" (click)=\"expandDialog()\"\r\n    [ngClass]=\"{\r\n      'c-ew__preview--invalid': data.invalid,\r\n      'c-ew__preview--disabled': config.field.disabled\r\n    }\">\r\n    <div [ngClass]=\"data.value ? 'c-ew__preview-container' : 'c-ew__preview-container--empty'\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"2px\" class=\"c-ew__preview-content\">\r\n        <ng-container *ngFor=\"let item of data.items; trackBy: trackByFn\">\r\n          <!-- folders -->\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start start\" *ngIf=\"item.IsFolder\">\r\n            <div class=\"adam-browse-background-icon\">\r\n              <mat-icon svgIcon=\"folder\"></mat-icon>\r\n              <div class=\"adam-short-label mat-caption\">{{ item.Name }}</div>\r\n            </div>\r\n          </div>\r\n          <!-- files -->\r\n          <div *ngIf=\"!item.IsFolder\">\r\n            <div *ngIf=\"item.Type !== 'image'\" class=\"adam-browse-background-icon\">\r\n              <mat-icon *ngIf=\"item._isMaterialIcon\">{{ item._icon }}</mat-icon>\r\n              <mat-icon *ngIf=\"!item._isMaterialIcon\" [svgIcon]=\"item._icon\"></mat-icon>\r\n              <div class=\"adam-short-label mat-caption\">{{ item.Name }}</div>\r\n            </div>\r\n            <div *ngIf=\"item.Type === 'image'\" class=\"adam-browse-background-image\">\r\n              <img data-dz-thumbnail=\"\" alt=\"{{ item.Id }}:{{ item.Name }}\"\r\n                src=\"{{ item.FullPath }}?w=78&h=78&mode=crop\">\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- hints -->\r\n  <div class=\"mat-caption c-ew__preview-hint\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n    <div class=\"c__helper-wrapper--left\">\r\n      <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n    </div>\r\n    <div class=\"c__helper-wrapper--right c-ew__preview-hint-text\" fxHide fxShow.gt-xs>\r\n      <span>{{ 'Fields.Hyperlink.Default.Sponsor' | translate }}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewContainerRef, ViewChild, AfterViewInit, ElementRef, OnDestroy, NgZone, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { ContentExpandAnimation } from '../../../shared/animations/content-expand-animation';\r\nimport { AdamItem } from '../../../../edit-types';\r\nimport { DropzoneDraggingHelper } from '../../../shared/services/dropzone-dragging.helper';\r\nimport { EditRoutingService } from '../../../shared/services/edit-routing.service';\r\nimport { BaseComponent } from '../../input-types/base/base.component';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-hyperlink-library-expandable-wrapper',\r\n  templateUrl: './hyperlink-library-expandable-wrapper.component.html',\r\n  styleUrls: ['./hyperlink-library-expandable-wrapper.component.scss'],\r\n  animations: [ContentExpandAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line:max-line-length\r\nexport class HyperlinkLibraryExpandableWrapperComponent extends BaseComponent<null> implements FieldWrapper, OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { static: true, read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild('backdrop') backdropRef: ElementRef;\r\n  @ViewChild('dialog') dialogRef: ElementRef;\r\n\r\n  open$: Observable<boolean>;\r\n  adamItems$ = new BehaviorSubject<AdamItem[]>([]);\r\n  private dropzoneDraggingHelper: DropzoneDraggingHelper;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private zone: NgZone,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dropzoneDraggingHelper = new DropzoneDraggingHelper(this.zone);\r\n    this.dropzoneDraggingHelper.attach(this.backdropRef.nativeElement);\r\n    this.dropzoneDraggingHelper.attach(this.dialogRef.nativeElement);\r\n    this.subscription.add(\r\n      this.config.adam.items$.subscribe(items => {\r\n        this.adamItems$.next(items);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dropzoneDraggingHelper.detach();\r\n    this.adamItems$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  calculateBottomPixels() {\r\n    return window.innerWidth > 600 ? '100px' : '50px';\r\n  }\r\n\r\n  trackByFn(index: number, item: AdamItem) {\r\n    return item.Id;\r\n  }\r\n\r\n  expandDialog() {\r\n    if (this.config.field.disabled) { return; }\r\n    this.editRoutingService.expand(true, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n\r\n  closeDialog() {\r\n    this.editRoutingService.expand(false, this.config.field.index, this.config.entity.entityGuid);\r\n  }\r\n}\r\n","import 'reflect-metadata';\r\n\r\nexport function InputType(annotation: any) {\r\n  return (target: any) => {\r\n    // Object.defineProperty(target.prototype, 'wrapper', { value: () => annotation.wrapper });\r\n    // const metadata = new Component(annotation);\r\n    Reflect.defineMetadata('inputTypeAnnotations', annotation, target);\r\n  };\r\n}\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <div [formGroup]=\"group\">\r\n    <mat-slide-toggle [formControlName]=\"config.field.name\">{{ label$ | async }}</mat-slide-toggle>\r\n    <app-field-helper-text [config]=\"config\" [group]=\"group\" disableError=\"true\"></app-field-helper-text>\r\n  </div>\r\n\r\n</ng-container>\r\n","import { Component, ChangeDetectionStrategy, OnInit, OnDestroy } from '@angular/core';\r\nimport { combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'boolean-default',\r\n  templateUrl: './boolean-default.component.html',\r\n  styleUrls: ['./boolean-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class BooleanDefaultComponent extends BaseComponent<boolean> implements OnInit, OnDestroy {\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.label$ = combineLatest([this.value$, this.settings$, this.label$]).pipe(\r\n      map(([value, settings, label]) => {\r\n        if (value === true && settings.TitleTrue != null && settings.TitleTrue !== '') {\r\n          return settings.TitleTrue;\r\n        }\r\n        if (value === false && settings.TitleFalse != null && settings.TitleFalse !== '') {\r\n          return settings.TitleFalse;\r\n        }\r\n        return label;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  useTimePicker: useTimePicker$ | async,\r\n  placeholder: placeholder$ | async,\r\n  required: required$ | async,\r\n  disabled: disabled$ | async,\r\n  label: label$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" *ngIf=\"!data.useTimePicker\">\r\n    <input matInput [formControlName]=\"config.field.name\" [matDatepicker]=\"picker\" [placeholder]=\"data.placeholder\"\r\n      [required]=\"data.required\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\" [matTooltip]=\"'Fields.DateTime.Open' | translate\">\r\n    </mat-datepicker-toggle>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n    <mat-label>{{ data.label }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" *ngIf=\"data.useTimePicker\">\r\n    <input matInput [formControlName]=\"config.field.name\" [ngxMatDatetimePicker]=\"picker\"\r\n      [placeholder]=\"data.placeholder\" [required]=\"data.required\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\" [matTooltip]=\"'Fields.DateTime.Open' | translate\">\r\n    </mat-datepicker-toggle>\r\n    <ngx-mat-datetime-picker #picker></ngx-mat-datetime-picker>\r\n    <mat-label>{{ data.label }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n</ng-container>\r\n","import { Component, ChangeDetectionStrategy, OnInit, OnDestroy } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { NgxMatDateAdapter } from '@angular-material-components/datetime-picker';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'datetime-default',\r\n  templateUrl: './datetime-default.component.html',\r\n  styleUrls: ['./datetime-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class DatetimeDefaultComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  useTimePicker$: Observable<boolean>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private translate: TranslateService,\r\n    private dateAdapter: DateAdapter<any>,\r\n    private ngxDateTimeAdapter: NgxMatDateAdapter<any>,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n    const currentLang = this.translate.currentLang;\r\n    this.dateAdapter.setLocale(currentLang);\r\n    this.ngxDateTimeAdapter.setLocale(currentLang);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.useTimePicker$ = this.settings$.pipe(map(settings => settings.UseTimePicker));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'empty-default',\r\n  templateUrl: './empty-default.component.html',\r\n  styleUrls: ['./empty-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EmptyDefaultComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { EavConfig } from '../edit/shared/models/eav-config';\r\n\r\n/**\r\n * Create a new FieldMaskService instance and access result with resolve\r\n * @example\r\n * const mask = new FieldMaskService(\"[FirstName]\", formGroup.controls);\r\n * const maskValue = mask.resolve();\r\n *\r\n * @param mask a string like \"[FirstName] [LastName]\"\r\n * @param model usually FormGroup controls, passed into here\r\n * @param overloadPreCleanValues a function which will \"scrub\" the found field-values\r\n */\r\nexport class FieldMaskService {\r\n  private mask: string;\r\n  private model: { [key: string]: AbstractControl; };\r\n  private fields: string[] = [];\r\n  private value: string;\r\n  private findFields = /\\[.*?\\]/ig;\r\n  private unwrapField = /[\\[\\]]/ig;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    mask: string,\r\n    model: { [key: string]: AbstractControl; },\r\n    private changeEvent: (newValue: string) => any,\r\n    overloadPreCleanValues: (key: string, value: string) => string,\r\n    private eavConfig?: EavConfig,\r\n  ) {\r\n    this.mask = mask;\r\n    this.model = model;\r\n    this.fields = this.fieldList();\r\n\r\n    if (overloadPreCleanValues) {\r\n      this.preClean = overloadPreCleanValues;\r\n    }\r\n\r\n    // bind auto-watch only if needed...\r\n    if (model && changeEvent) {\r\n      this.watchAllFields();\r\n    }\r\n  }\r\n\r\n  /** Resolves a mask to the final value */\r\n  resolve(): string {\r\n    let value = this.mask;\r\n    if (this.eavConfig != null && value != null) {\r\n      value = value.replace('[App:AppId]', this.eavConfig.appId);\r\n      value = value.replace('[App:ZoneId]', this.eavConfig.zoneId);\r\n    }\r\n    this.fields.forEach((e, i) => {\r\n      const replaceValue = this.model.hasOwnProperty(e) && this.model[e] && this.model[e].value ? this.model[e].value : '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      value = value.replace('[' + e + ']', cleaned);\r\n    });\r\n\r\n    return value;\r\n  }\r\n\r\n  /** Retrieves a list of all fields used in the mask */\r\n  fieldList(): string[] {\r\n    const result: string[] = [];\r\n    if (!this.mask) { return result; }\r\n    const matches = this.mask.match(this.findFields);\r\n    if (matches) {\r\n      matches.forEach((e, i) => {\r\n        const staticName = e.replace(this.unwrapField, '');\r\n        result.push(staticName);\r\n      });\r\n    } else { // TODO: ask is this good\r\n      result.push(this.mask);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** Default preClean function */\r\n  private preClean(key: string, value: string): string {\r\n    return value;\r\n  }\r\n\r\n  /** Change-event - will only fire if it really changes */\r\n  private onChange() {\r\n    const maybeNew = this.resolve();\r\n    if (this.value !== maybeNew) {\r\n      this.changeEvent(maybeNew);\r\n    }\r\n    this.value = maybeNew;\r\n  }\r\n\r\n  /** Add watcher and execute onChange */\r\n  private watchAllFields() {\r\n    // add a watch for each field in the field-mask\r\n    this.fields.forEach(field => {\r\n      if (!this.model[field]) { return; }\r\n      const valueSub = this.model[field].valueChanges.subscribe(value => this.onChange());\r\n      this.subscriptions.push(valueSub);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.subscriptions.forEach(subscription => { subscription.unsubscribe(); });\r\n  }\r\n}\r\n","<div [hidden]=\"freeTextMode\">\r\n  <div class=\"ed-field\" fxLayout=\"row\" fxLayoutAlign=\"start end\">\r\n    <div\r\n      [ngClass]=\"(settings.EnableCreate && settings.EntityType && !selectedEntities.length && !settings.AllowMultiValue) ? 'ed-field__field-short' : 'ed-field__field'\">\r\n      <div [hidden]=\"!settings.AllowMultiValue && selectedEntities.length\">\r\n        <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" [ngClass]=\"{\r\n          'mat-form-field-invalid': invalid && touched\r\n        }\">\r\n          <input matInput #autocomplete [placeholder]=\"getPlaceholder()\" [matAutocomplete]=\"auto\"\r\n            [disabled]=\"disabled || !settings.EnableAddExisting\" (blur)=\"control.markAsTouched()\"\r\n            (input)=\"filterSelectionList($event.target.value)\">\r\n          <button mat-icon-button matSuffix [disabled]=\"disabled || !settings.EnableAddExisting\"\r\n            *ngIf=\"!settings.EnableTextEntry\">\r\n            <mat-icon>arrow_drop_down</mat-icon>\r\n          </button>\r\n          <a matSuffix *ngIf=\"settings.EnableTextEntry\" fxLayoutAlign=\"center center\" appClickStopPropagation\r\n            (click)=\"toggleFreeText()\">\r\n            <button mat-icon-button [disabled]=\"disabled\">\r\n              <mat-icon [matTooltip]=\"'Fields.String.Freetext' | translate\">text_fields</mat-icon>\r\n            </button>\r\n            <button mat-icon-button [disabled]=\"disabled\" *ngIf=\"freeTextMode\">\r\n              <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n          </a>\r\n          <mat-label [ngClass]=\"{ 'mat-error': invalid && touched }\">\r\n            {{ settings.AllowMultiValue ? ('Fields.Entity.Choose' | translate) : label }}\r\n            {{ required ? '*': '' }}\r\n          </mat-label>\r\n        </mat-form-field>\r\n\r\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"optionSelected($event)\">\r\n          <mat-option *ngFor=\"let item of filteredEntities\" [value]=\"item.Value\"\r\n            [disabled]=\"isOptionDisabled(item.Value)\">\r\n            <span>{{ item.Text ? item.Text : item.Value }}</span>\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </div>\r\n    </div>\r\n    <div fxLayoutAlign=\"end center\"\r\n      [ngClass]=\"(settings.EnableCreate && settings.EntityType && !selectedEntities.length && !settings.AllowMultiValue) ? 'ed-field__create-icon' : 'ed-field__create-icon-hide'\">\r\n      <!-- create new entity to add to this list -->\r\n      <button mat-icon-button [matTooltip]=\"'Fields.Entity.New' | translate\" [disabled]=\"disabled || disableAddNew\"\r\n        *ngIf=\"settings.EnableCreate && settings.EntityType && !selectedEntities.length && !settings.AllowMultiValue\"\r\n        (click)=\"openNewEntityDialog()\">\r\n        <mat-icon>add_circle_outline</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-form-field *ngIf=\"freeTextMode\" [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n  <input matInput [required]=\"required\" [formControlName]=\"config.field.name\" [placeholder]=\"placeholder\">\r\n\r\n  <a matSuffix appClickStopPropagation (click)=\"toggleFreeText()\">\r\n    <button mat-icon-button [disabled]=\"disabled\">\r\n      <mat-icon>arrow_drop_down</mat-icon>\r\n    </button>\r\n  </a>\r\n  <mat-label>{{ label }}</mat-label>\r\n</mat-form-field>\r\n\r\n<div *ngIf=\"debugEnabled$ | async\">debug: <span (click)=\"insertNull()\">add null-item</span></div>\r\n\r\n<app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n<!-- add new entity -->\r\n<div *ngIf=\"!freeTextMode && settings.EnableCreate && settings.EntityType && settings.AllowMultiValue\">\r\n  <button mat-mini-fab color=\"accent\" [matTooltip]=\"'Fields.Entity.New' | translate\"\r\n    [disabled]=\"disabled || disableAddNew\" (click)=\"openNewEntityDialog()\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, OnChanges, SimpleChanges, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FieldConfigSet } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { SelectedEntity } from '../entity-default/entity-default.models';\r\nimport { GlobalConfigurationService } from '../../../../shared/services/global-configuration.service';\r\n\r\n@Component({\r\n  selector: 'app-entity-default-search',\r\n  templateUrl: './entity-default-search.component.html',\r\n  styleUrls: ['./entity-default-search.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EntityDefaultSearchComponent implements OnInit, OnChanges {\r\n  @ViewChild('autocomplete') autocompleteRef: ElementRef;\r\n\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n  @Input() control: AbstractControl;\r\n  @Input() label: string;\r\n  @Input() placeholder: string;\r\n  @Input() required: boolean;\r\n  @Input() invalid: boolean;\r\n  @Input() touched: boolean;\r\n  @Input() disabled: boolean;\r\n  @Input() freeTextMode: boolean;\r\n  @Input() settings: FieldSettings;\r\n  @Input() error: string;\r\n  @Input() disableAddNew: boolean;\r\n  @Input() selectedEntities: SelectedEntity[];\r\n  @Input() availableEntities: EntityInfo[];\r\n\r\n  @Output() toggleFreeTextMode = new EventEmitter<null>();\r\n  @Output() addSelected = new EventEmitter<string>();\r\n  @Output() editEntity = new EventEmitter<string>();\r\n\r\n  filteredEntities: EntityInfo[] = [];\r\n  debugEnabled$: Observable<boolean>;\r\n\r\n  constructor(private translate: TranslateService, private globalConfigurationService: GlobalConfigurationService) { }\r\n\r\n  ngOnInit() {\r\n    this.debugEnabled$ = this.globalConfigurationService.getDebugEnabled();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const availableEntities: EntityInfo[] = changes.availableEntities?.currentValue;\r\n    if (availableEntities != null) {\r\n      const filter = this.autocompleteRef?.nativeElement.value || '';\r\n      this.filterSelectionList(filter);\r\n    }\r\n  }\r\n\r\n  getPlaceholder() {\r\n    if (this.availableEntities.length) {\r\n      return 'search';\r\n    }\r\n    if (this.error) {\r\n      return this.error;\r\n    }\r\n    return this.translate.instant('Fields.EntityQuery.QueryNoItems');\r\n  }\r\n\r\n  toggleFreeText() {\r\n    if (this.disabled) { return; }\r\n    this.toggleFreeTextMode.emit();\r\n  }\r\n\r\n  filterSelectionList(filter: string) {\r\n    if (filter === '') {\r\n      this.filteredEntities = this.availableEntities;\r\n      return;\r\n    }\r\n    this.filteredEntities = this.availableEntities.filter(option =>\r\n      option.Text\r\n        ? option.Text.toLowerCase().includes(filter.toLowerCase())\r\n        : option.Value.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n\r\n  optionSelected(event: MatAutocompleteSelectedEvent) {\r\n    const selected: string = event.option.value;\r\n    this.addSelected.emit(selected);\r\n    this.autocompleteRef.nativeElement.value = '';\r\n    this.autocompleteRef.nativeElement.blur();\r\n  }\r\n\r\n  insertNull() {\r\n    this.addSelected.emit(null);\r\n  }\r\n\r\n  isOptionDisabled(value: string) {\r\n    const isSelected = !!this.selectedEntities.find(entity => entity.value === value);\r\n    return isSelected;\r\n  }\r\n\r\n  openNewEntityDialog() {\r\n    this.editEntity.emit(null);\r\n  }\r\n}\r\n","<mat-label class=\"field-label\" *ngIf=\"!settings.AllowMultiValue\" [ngClass]=\"{ 'disabled': disabled }\">\r\n  {{ label }} {{ required ? '*': '' }}\r\n</mat-label>\r\n\r\n<div cdkDropList [cdkDropListDisabled]=\"!settings.AllowMultiValue || disabled\" (cdkDropListDropped)=\"drop($event)\"\r\n  [ngClass]=\"{\r\n    'normal-list': !settings.AllowMultiValue,\r\n    'dnd-list': settings.AllowMultiValue\r\n  }\">\r\n  <!-- Normal list usually shows only one item, but can show \"empty slot\" / \"null-item\" in debug mode -->\r\n  <div *ngFor=\"let item of selectedEntities; trackBy: trackByFn; let index = index\" cdkDrag [ngClass]=\"{\r\n      'normal-item': !settings.AllowMultiValue,\r\n      'dnd-item': settings.AllowMultiValue,\r\n      'disabled': disabled\r\n    }\">\r\n    <div class=\"item-title\" [ngClass]=\"{ 'disabled': disabled }\">\r\n      <mat-icon class=\"item-title__icon\" *ngIf=\"settings.AllowMultiValue\" [matTooltipDisabled]=\"disabled\"\r\n        [matTooltip]=\"'Fields.Entity.DragMove' | translate\">\r\n        drag_handle\r\n      </mat-icon>\r\n      <span class=\"item-title__text\" [matTooltip]=\"item.tooltip\">\r\n        {{ item.label }}\r\n      </span>\r\n    </div>\r\n    <div class=\"item-actions\">\r\n      <!-- Disable edit only if it was disabled in the settings, not if disabled by language change -->\r\n      <button mat-icon-button *ngIf=\"settings.EnableEdit && !item.isFreeTextOrNotFound\"\r\n        [matTooltip]=\"'Fields.Entity.Edit' | translate\" [disabled]=\"config.field.disabled\" appMousedownStopPropagation\r\n        (click)=\"edit(item.value)\">\r\n        <mat-icon>edit</mat-icon>\r\n      </button>\r\n      <button mat-icon-button *ngIf=\"settings.EnableDelete && !item.isFreeTextOrNotFound\"\r\n        [matTooltip]=\"'Fields.Entity.Delete' | translate\" [disabled]=\"disabled\" appMousedownStopPropagation\r\n        (click)=\"deleteItem(index, item.value)\">\r\n        <mat-icon>delete</mat-icon>\r\n      </button>\r\n      <button mat-icon-button *ngIf=\"settings.EnableRemove\" [matTooltip]=\"'Fields.Entity.Remove' | translate\"\r\n        [disabled]=\"disabled\" appMousedownStopPropagation (click)=\"removeItem(index)\">\r\n        <mat-icon>{{ settings.AllowMultiValue ? 'clear' : 'arrow_drop_down' }}</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\nimport { FieldConfigSet } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { SelectedEntity, DeleteEntityProps } from '../entity-default/entity-default.models';\r\nimport { ReorderIndexes } from './entity-default-list.models';\r\n\r\n@Component({\r\n  selector: 'app-entity-default-list',\r\n  templateUrl: './entity-default-list.component.html',\r\n  styleUrls: ['./entity-default-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EntityDefaultListComponent {\r\n  @Input() config: FieldConfigSet;\r\n  @Input() label: string;\r\n  @Input() required: boolean;\r\n  @Input() disabled: boolean;\r\n  @Input() freeTextMode: boolean;\r\n  @Input() settings: FieldSettings;\r\n  @Input() selectedEntities: SelectedEntity[];\r\n\r\n  @Output() reorder = new EventEmitter<ReorderIndexes>();\r\n  @Output() removeSelected = new EventEmitter<number>();\r\n  @Output() editEntity = new EventEmitter<string>();\r\n  @Output() deleteEntity = new EventEmitter<DeleteEntityProps>();\r\n\r\n  constructor() { }\r\n\r\n  trackByFn(index: number, item: SelectedEntity) {\r\n    return item.value;\r\n  }\r\n\r\n  drop(event: CdkDragDrop<any[]>) {\r\n    moveItemInArray(this.selectedEntities, event.previousIndex, event.currentIndex);\r\n    const reorderIndexes: ReorderIndexes = {\r\n      previousIndex: event.previousIndex,\r\n      currentIndex: event.currentIndex,\r\n    };\r\n    this.reorder.emit(reorderIndexes);\r\n  }\r\n\r\n  edit(entityGuid: string) {\r\n    this.editEntity.emit(entityGuid);\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this.removeSelected.emit(index);\r\n  }\r\n\r\n  deleteItem(index: number, entityGuid: string) {\r\n    this.deleteEntity.emit({ index, entityGuid });\r\n  }\r\n}\r\n","<!--\r\n  This template is used for all entity like fields,\r\n  e.g. EntityDefault, EntityContentBlocks, EntityQuery, StringDropdownQuery\r\n-->\r\n<ng-container *ngIf=\"{\r\n  label: label$ | async,\r\n  placeholder: placeholder$ | async,\r\n  required: required$ | async,\r\n  invalid: invalid$ | async,\r\n  touched: control.touched,\r\n  disabled: disabled$ | async,\r\n  freeTextMode: freeTextMode$ | async,\r\n  settings: settings$ | async,\r\n  selectedEntities: selectedEntities$ | async,\r\n  availableEntities: config.entityCache$ | async,\r\n  disableAddNew: disableAddNew$ | async,\r\n  isExpanded: isExpanded$ | async,\r\n  error: error$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <app-entity-default-list\r\n    *ngIf=\"!data.freeTextMode && data.selectedEntities.length && (!data.settings.AllowMultiValue || (data.settings.AllowMultiValue && data.isExpanded))\"\r\n    [config]=\"config\" [label]=\"data.label\" [required]=\"data.required\" [disabled]=\"data.disabled\"\r\n    [freeTextMode]=\"data.freeTextMode\" [settings]=\"data.settings\" [selectedEntities]=\"data.selectedEntities\"\r\n    (reorder)=\"reorder($event)\" (removeSelected)=\"removeSelected($event)\" (editEntity)=\"editEntity($event)\"\r\n    (deleteEntity)=\"deleteEntity($event)\">\r\n  </app-entity-default-list>\r\n\r\n  <app-entity-default-search [config]=\"config\" [group]=\"group\" [control]=\"control\" [label]=\"data.label\"\r\n    [placeholder]=\"data.placeholder\" [required]=\"data.required\" [invalid]=\"data.invalid\" [touched]=\"data.touched\"\r\n    [disabled]=\"data.disabled\" [freeTextMode]=\"data.freeTextMode\" [settings]=\"data.settings\"\r\n    [selectedEntities]=\"data.selectedEntities\" [availableEntities]=\"data.availableEntities\"\r\n    [disableAddNew]=\"data.disableAddNew\" [error]=\"data.error\" (toggleFreeTextMode)=\"toggleFreeTextMode()\"\r\n    (addSelected)=\"addSelected($event)\" (editEntity)=\"editEntity($event)\">\r\n  </app-entity-default-search>\r\n</ng-container>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, ViewChild } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { EntityService } from '../../../../shared/services/entity.service';\r\nimport { FieldMaskService } from '../../../../../shared/field-mask.service';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { SelectedEntity, DeleteEntityProps } from './entity-default.models';\r\nimport { EditForm } from '../../../../../ng-dialogs/src/app/shared/models/edit-form.model';\r\nimport { ReorderIndexes } from '../entity-default-list/entity-default-list.models';\r\nimport { EntityDefaultSearchComponent } from '../entity-default-search/entity-default-search.component';\r\nimport { Helper } from '../../../../shared/helpers/helper';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\nimport { calculateSelectedEntities } from './entity-default.helpers';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'entity-default',\r\n  templateUrl: './entity-default.component.html',\r\n  styleUrls: ['./entity-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class EntityDefaultComponent extends BaseComponent<string | string[]> implements OnInit, OnDestroy {\r\n  @ViewChild(EntityDefaultSearchComponent) private entitySearchComponent: EntityDefaultSearchComponent;\r\n\r\n  useQuery = false;\r\n  contentTypeMask: FieldMaskService;\r\n  error$ = new BehaviorSubject('');\r\n  freeTextMode$ = new BehaviorSubject(false);\r\n  disableAddNew$ = new BehaviorSubject(true);\r\n  isExpanded$: Observable<boolean>;\r\n  selectedEntities$: Observable<SelectedEntity[]>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private entityService: EntityService,\r\n    public translate: TranslateService,\r\n    private editRoutingService: EditRoutingService,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.config.entityCache$ = new BehaviorSubject<EntityInfo[]>([]);\r\n\r\n    this.settings$ = new BehaviorSubject<FieldSettings>(null);\r\n    this.subscription.add(\r\n      this.config.field.settings$.pipe(map(settings => this.calculateSettings(settings))).subscribe(settings => {\r\n        this.settings$.next(settings);\r\n      })\r\n    );\r\n    this.selectedEntities$ = combineLatest([this.value$, this.settings$, this.config.entityCache$]).pipe(\r\n      map(([fieldValue, settings, availableEntities]) => {\r\n        const selected = calculateSelectedEntities(fieldValue, settings.Separator, availableEntities, this.translate);\r\n        return selected;\r\n      }),\r\n    );\r\n\r\n    this.isExpanded$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.contentTypeMask?.destroy();\r\n        this.contentTypeMask = new FieldMaskService(\r\n          settings.EntityType,\r\n          this.group.controls,\r\n          !this.useQuery ? this.fetchAvailableEntities.bind(this) : this.updateAddNew.bind(this),\r\n          null,\r\n          this.eavService.eavConfig,\r\n        );\r\n      })\r\n    );\r\n\r\n    if (!this.useQuery) {\r\n      this.fetchAvailableEntities();\r\n    } else {\r\n      this.updateAddNew();\r\n    }\r\n\r\n    this.refreshOnChildClosed();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.settings$.complete();\r\n    this.error$.complete();\r\n    this.freeTextMode$.complete();\r\n    this.disableAddNew$.complete();\r\n    this.config.entityCache$.complete();\r\n    this.contentTypeMask.destroy();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleFreeTextMode() {\r\n    this.freeTextMode$.next(!this.freeTextMode$.value);\r\n  }\r\n\r\n  /** Overridden in subclass */\r\n  calculateSettings(settings: FieldSettings) {\r\n    const fixedSettings = { ...settings };\r\n    if (fixedSettings.EntityType == null) { fixedSettings.EntityType = ''; }\r\n    if (fixedSettings.AllowMultiValue == null) { fixedSettings.AllowMultiValue = false; }\r\n    if (fixedSettings.EnableEdit == null) { fixedSettings.EnableEdit = true; }\r\n    if (fixedSettings.EnableCreate == null) { fixedSettings.EnableCreate = true; }\r\n    if (fixedSettings.EnableAddExisting == null) { fixedSettings.EnableAddExisting = true; }\r\n    if (fixedSettings.EnableRemove == null) { fixedSettings.EnableRemove = true; }\r\n    if (fixedSettings.EnableDelete == null) { fixedSettings.EnableDelete = false; }\r\n    return fixedSettings;\r\n  }\r\n\r\n  /** Overridden in subclass */\r\n  fetchAvailableEntities() {\r\n    this.updateAddNew();\r\n    const contentTypeName = this.contentTypeMask.resolve();\r\n    const enableAddExisting = this.settings$.value.EnableAddExisting;\r\n    // spm TODO: Should this work like this?\r\n    // check if we should get all or only the selected ones...\r\n    // if we can't add, then we only need one...\r\n    const filterText = enableAddExisting ? null : this.control.value;\r\n    this.entityService.getAvailableEntities(filterText, contentTypeName).subscribe(items => {\r\n      this.config.entityCache$.next(items);\r\n    });\r\n  }\r\n\r\n  updateAddNew() {\r\n    const contentTypeName = this.contentTypeMask.resolve();\r\n    this.disableAddNew$.next(!contentTypeName);\r\n  }\r\n\r\n  reorder(reorderIndexes: ReorderIndexes) {\r\n    this.updateValue('reorder', reorderIndexes);\r\n  }\r\n\r\n  addSelected(guid: string) {\r\n    this.updateValue('add', guid);\r\n  }\r\n\r\n  removeSelected(index: number) {\r\n    this.updateValue('delete', index);\r\n  }\r\n\r\n  editEntity(entityGuid: string) {\r\n    let form: EditForm;\r\n    if (entityGuid == null) {\r\n      const contentTypeName = this.contentTypeMask.resolve();\r\n      form = {\r\n        items: [{ ContentTypeName: contentTypeName }],\r\n      };\r\n    } else {\r\n      const entity = this.config.entityCache$.value.find(e => e.Value === entityGuid);\r\n      form = {\r\n        items: [{ EntityId: entity.Id }],\r\n      };\r\n    }\r\n    this.editRoutingService.open(this.config.field.index, this.config.entity.entityGuid, form);\r\n  }\r\n\r\n  deleteEntity(props: DeleteEntityProps) {\r\n    const entity = this.config.entityCache$.value.find(e => e.Value === props.entityGuid);\r\n    const id = entity.Id.toString();\r\n    const title = entity.Text;\r\n    const contentType = this.contentTypeMask.resolve();\r\n\r\n    const confirmed = confirm(this.translate.instant('Data.Delete.Question', { title, id }));\r\n    if (!confirmed) { return; }\r\n\r\n    this.snackBar.open('Deleting...');\r\n    this.entityService.delete(contentType, id, false).subscribe({\r\n      next: () => {\r\n        this.snackBar.open('Deleted', null, { duration: 2000 });\r\n        this.removeSelected(props.index);\r\n        this.fetchAvailableEntities();\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        this.snackBar.dismiss();\r\n        if (!confirm(this.translate.instant('Data.Delete.Question', { title, id }))) { return; }\r\n        this.snackBar.open('Deleting...');\r\n        this.entityService.delete(contentType, id, true).subscribe(res2 => {\r\n          this.snackBar.open('Deleted', null, { duration: 2000 });\r\n          this.removeSelected(props.index);\r\n          this.fetchAvailableEntities();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private refreshOnChildClosed() {\r\n    this.subscription.add(\r\n      this.editRoutingService.childFormClosed().subscribe(() => {\r\n        this.fetchAvailableEntities();\r\n      })\r\n    );\r\n    this.subscription.add(\r\n      this.editRoutingService.childFormResult(this.config.field.index, this.config.entity.entityGuid).subscribe(result => {\r\n        const newItemGuid = Object.keys(result)[0];\r\n        this.addSelected(newItemGuid);\r\n      })\r\n    );\r\n  }\r\n\r\n  private updateValue(action: 'add' | 'delete' | 'reorder', value: string | number | ReorderIndexes) {\r\n    const valueArray: string[] = (typeof this.control.value === 'string')\r\n      ? Helper.convertValueToArray(this.control.value, this.settings$.value.Separator)\r\n      : [...this.control.value];\r\n\r\n    switch (action) {\r\n      case 'add':\r\n        const guid = value as string;\r\n        valueArray.push(guid);\r\n        break;\r\n      case 'delete':\r\n        const index = value as number;\r\n        valueArray.splice(index, 1);\r\n        break;\r\n      case 'reorder':\r\n        const reorderIndexes = value as ReorderIndexes;\r\n        moveItemInArray(valueArray, reorderIndexes.previousIndex, reorderIndexes.currentIndex);\r\n        break;\r\n    }\r\n\r\n    if (typeof this.control.value === 'string') {\r\n      const valueString = Helper.convertArrayToString(valueArray, this.settings$.value.Separator);\r\n      this.control.patchValue(valueString);\r\n    } else {\r\n      this.control.patchValue(valueArray);\r\n    }\r\n\r\n    if (!this.control.dirty) {\r\n      this.control.markAsDirty();\r\n    }\r\n\r\n    if (action === 'delete' && !valueArray.length) {\r\n      setTimeout(() => {\r\n        this.entitySearchComponent.autocompleteRef?.nativeElement.focus();\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  buttons: buttons$ | async,\r\n  settings: settings$ | async,\r\n  value: value$ | async,\r\n  preview: preview$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <ng-container *ngIf=\"open$ | async\">\r\n\r\n    <div class=\"fabs-box\">\r\n      <button mat-mini-fab color=\"accent\" [matTooltip]=\"'Fields.Hyperlink.Default.AdamTip' | translate\"\r\n        *ngIf=\"data.buttons.includes('adam')\" [disabled]=\"data.disabled\" (click)=\"toggleAdam(false, false)\">\r\n        <mat-icon svgIcon=\"appleFilled\"></mat-icon>\r\n      </button>\r\n      <button mat-mini-fab color=\"primary\" [matTooltip]=\"'Fields.Hyperlink.Default.PageTip' | translate\"\r\n        *ngIf=\"data.buttons.includes('page')\" [disabled]=\"data.disabled\" (click)=\"openPagePicker()\">\r\n        <mat-icon svgIcon=\"sitemap\"></mat-icon>\r\n      </button>\r\n      <button mat-mini-fab color=\"primary\" [matTooltip]=\"'Fields.Hyperlink.Default.MoreOptions' | translate\"\r\n        *ngIf=\"data.buttons.includes('more')\" [disabled]=\"data.disabled\" [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n    </div>\r\n\r\n    <mat-menu #menu=\"matMenu\" class=\"menu-box\">\r\n      <button mat-menu-item *ngIf=\"data.settings.ShowAdam\" (click)=\"toggleAdam(false, false)\">\r\n        <mat-icon svgIcon=\"appleFilled\"></mat-icon>\r\n        <span>{{ 'Fields.Hyperlink.Default.MenuAdam' | translate }}</span>\r\n      </button>\r\n      <button mat-menu-item *ngIf=\"data.settings.ShowPagePicker\" (click)=\"openPagePicker()\">\r\n        <mat-icon svgIcon=\"sitemap\"></mat-icon>\r\n        <span>{{ 'Fields.Hyperlink.Default.MenuPage' | translate }}</span>\r\n      </button>\r\n      <button mat-menu-item *ngIf=\"data.settings.ShowImageManager\" (click)=\"toggleAdam(true, true)\">\r\n        <mat-icon svgIcon=\"file-image\"></mat-icon>\r\n        <span>{{ 'Fields.Hyperlink.Default.MenuImage' | translate }}</span>\r\n      </button>\r\n      <button mat-menu-item *ngIf=\"data.settings.ShowFileManager\" (click)=\"toggleAdam(true, false)\">\r\n        <mat-icon svgIcon=\"file\"></mat-icon>\r\n        <span>{{ 'Fields.Hyperlink.Default.MenuDocs' | translate }}</span>\r\n      </button>\r\n    </mat-menu>\r\n\r\n    <!-- content -->\r\n    <div class=\"mdc-layout-grid\">\r\n      <div class=\"mdc-layout-grid__inner\">\r\n        <mat-card class=\"mdc-layout-grid__cell--span-12 hyperlink-card shadow-bottom-z-1\">\r\n          <div class=\"hyperlink-input-link-wrapper\">\r\n            <!-- input -->\r\n            <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n              <input matInput [formControlName]=\"config.field.name\"\r\n                [matTooltip]=\"'Fields.Hyperlink.Default.Tooltip' | translate\" matTooltipPosition=\"above\"\r\n                [placeholder]=\"placeholder$ | async\" [required]=\"required$ | async\" appPasteClipboardImage\r\n                [config]=\"config\" [elementType]=\"'input'\">\r\n              <mat-label>{{ label$ | async }}</mat-label>\r\n            </mat-form-field>\r\n            <!-- link absolutely positioned above input -->\r\n            <div *ngIf=\"data.preview?.floatingText\" class=\"hyperlink-floating\">\r\n              <div class=\"hyperlink-floating__value\">{{ data.value }}</div>\r\n              <div class=\"hyperlink-floating__url-box\">\r\n                <a [href]=\"data.preview.url\" target=\"_blank\" class=\"hyperlink-floating__url\"\r\n                  [matTooltip]=\"data.preview.url\">\r\n                  <span>{{ data.preview.floatingText }}</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"preview-wrapper\" *ngIf=\"data.value && data.preview\">\r\n            <!-- image -->\r\n            <a [href]=\"data.preview.thumbnailUrl\" target=\"_blank\" *ngIf=\"data.preview.isImage\">\r\n              <div class=\"preview-image-box\">\r\n                <img [src]=\"data.preview.thumbnailPreviewUrl\" class=\"preview-image\" />\r\n              </div>\r\n            </a>\r\n            <!-- icon -->\r\n            <a [href]=\"data.preview.url\" target=\"_blank\" [matTooltip]=\"data.preview.url\" matTooltipPosition=\"right\"\r\n              *ngIf=\"!data.preview.isImage\">\r\n              <div class=\"preview-icon-box\">\r\n                <mat-icon *ngIf=\"data.preview.isKnownType\">{{ data.preview.icon }}</mat-icon>\r\n                <mat-icon *ngIf=\"!data.preview.isKnownType\" [svgIcon]=\"data.preview.icon\"></mat-icon>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n\r\n  </ng-container>\r\n</ng-container>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { DnnBridgeService } from '../../../../shared/services/dnn-bridge.service';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { FileTypeService } from '../../../../shared/services/file-type.service';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { PagePickerResult, DnnBridgeConnectorParams } from '../../dnn-bridge/dnn-bridge.models';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { AdamItem, AdamPostResponse } from '../../../../../edit-types';\r\nimport { Preview } from './hyperlink-default.models';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'hyperlink-default',\r\n  templateUrl: './hyperlink-default.component.html',\r\n  styleUrls: ['./hyperlink-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.DropzoneWrapper, WrappersConstants.EavLocalizationWrapper,\r\n  WrappersConstants.HyperlinkDefaultExpandableWrapper, WrappersConstants.AdamAttachWrapper],\r\n})\r\nexport class HyperlinkDefaultComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  buttons$: Observable<string>;\r\n  open$: Observable<boolean>;\r\n  preview$ = new BehaviorSubject<Preview>({\r\n    url: '',\r\n    thumbnailUrl: '',\r\n    thumbnailPreviewUrl: '',\r\n    floatingText: '',\r\n    isImage: false,\r\n    isKnownType: false,\r\n    icon: '',\r\n  });\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private fileTypeService: FileTypeService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.buttons$ = this.settings$.pipe(map(settings => settings.Buttons || 'adam,more'));\r\n    this.open$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.attachAdam(settings);\r\n      })\r\n    );\r\n    this.subscription.add(\r\n      this.value$.subscribe(value => {\r\n        this.setLink(value);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.preview$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  openPagePicker() {\r\n    const settings = this.settings$.value;\r\n    const params: DnnBridgeConnectorParams = {\r\n      CurrentValue: this.control.value,\r\n      FileFilter: (settings.FileFilter != null) ? settings.FileFilter : '',\r\n      Paths: (settings.Paths != null) ? settings.Paths : '',\r\n    };\r\n    this.dnnBridgeService.open('pagepicker', params, this.pagePickerCallback.bind(this));\r\n  }\r\n\r\n  private pagePickerCallback(value: PagePickerResult) {\r\n    // Convert to page:xyz format (if it wasn't cancelled)\r\n    if (!value) { return; }\r\n    this.control.patchValue(`page:${value.id}`);\r\n  }\r\n\r\n  private setLink(value: string) {\r\n    if (!value) { return; }\r\n\r\n    // handle short-ID links like file:17\r\n    const contentType = this.config.entity.header.ContentTypeName;\r\n    const entityGuid = this.config.entity.header.Guid;\r\n    const field = this.config.field.name;\r\n    this.dnnBridgeService.getUrlOfId(value, contentType, entityGuid, field).subscribe(path => {\r\n      if (!path) { return; }\r\n      const urlLowered = path.toLowerCase();\r\n      const isFileOrPage = urlLowered.includes('file:') || urlLowered.includes('page:');\r\n      const preview: Preview = {\r\n        url: path,\r\n        floatingText: isFileOrPage ? `.../${path.substring(path.lastIndexOf('/') + 1, path.length)}` : '',\r\n        thumbnailUrl: this.thumbnailUrl(path),\r\n        thumbnailPreviewUrl: this.thumbnailUrl(path, 2),\r\n        isImage: this.fileTypeService.isImage(path),\r\n        isKnownType: this.fileTypeService.isKnownType(path),\r\n        icon: this.fileTypeService.getIconClass(path),\r\n      };\r\n      this.preview$.next(preview);\r\n    });\r\n  }\r\n\r\n  private thumbnailUrl(link: string, size?: number, quote?: boolean) {\r\n    let result = link;\r\n    if (size === 1) {\r\n      result = result + '?w=72&h=72&mode=crop';\r\n    }\r\n    if (size === 2) {\r\n      result = result + '?w=800&h=800&mode=max';\r\n    }\r\n    const qt = quote ? '\"' : '';\r\n    return qt + result + qt;\r\n  }\r\n\r\n  toggleAdam(usePortalRoot: boolean, showImagesOnly: boolean) {\r\n    this.config.adam.toggle(usePortalRoot, showImagesOnly);\r\n  }\r\n\r\n  private attachAdam(settings: FieldSettings) {\r\n    this.config.adam.onItemClick = (item: AdamItem) => { this.setValue(item); };\r\n    this.config.adam.onItemUpload = (item: AdamPostResponse) => { this.setValue(item); };\r\n    this.config.adam.setConfig({\r\n      rootSubfolder: settings.Paths,\r\n      fileFilter: settings.FileFilter,\r\n      autoLoad: true,\r\n    });\r\n  }\r\n\r\n  private setValue(item: AdamItem | AdamPostResponse) {\r\n    const usePath = this.settings$.value.ServerResourceMapping === 'url';\r\n    if (usePath) {\r\n      this.control.patchValue(item.FullPath);\r\n    } else {\r\n      this.control.patchValue(`file:${item.Id}`);\r\n    }\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n    <input matInput type=\"number\" [formControlName]=\"config.field.name\" [required]=\"required$ | async\"\r\n      [placeholder]=\"placeholder$ | async\" [min]=\"min$ | async\" [max]=\"max$ | async\">\r\n    <mat-label>{{ label$ | async }}</mat-label>\r\n  </mat-form-field>\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'number-default',\r\n  templateUrl: './number-default.component.html',\r\n  styleUrls: ['./number-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class NumberDefaultComponent extends BaseComponent<number> implements OnInit, OnDestroy {\r\n  min$: Observable<number>;\r\n  max$: Observable<number>;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.min$ = this.settings$.pipe(map(settings => settings.Min));\r\n    this.max$ = this.settings$.pipe(map(settings => settings.Max));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  rowCount: rowCount$ | async,\r\n  label: label$ | async,\r\n  placeholder: placeholder$ | async,\r\n  required: required$ | async,\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" [ngClass]=\"{\r\n    'textarea-field': data.rowCount > 1\r\n  }\">\r\n    <input matInput *ngIf=\"data.rowCount <= 1\" [formControlName]=\"config.field.name\" [placeholder]=\"data.placeholder\"\r\n      [required]=\"data.required\">\r\n\r\n    <textarea matInput *ngIf=\"data.rowCount > 1\" [formControlName]=\"config.field.name\" [rows]=\"data.rowCount\"\r\n      [placeholder]=\"data.placeholder\" [required]=\"data.required\">\r\n    </textarea>\r\n\r\n    <mat-label>{{ data.label }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-default',\r\n  templateUrl: './string-default.component.html',\r\n  styleUrls: ['./string-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringDefaultComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  rowCount$: Observable<number>;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.rowCount$ = this.settings$.pipe(map(settings => settings.RowCount || 1));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  required: required$ | async,\r\n  placeholder: placeholder$ | async,\r\n  label: label$ | async,\r\n  disabled: disabled$ | async,\r\n  enableTextEntry: enableTextEntry$ | async,\r\n  dropdownOptions: dropdownOptions$ | async,\r\n  freeTextMode: freeTextMode$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n\r\n    <mat-select *ngIf=\"!data.freeTextMode\" [formControlName]=\"config.field.name\" [required]=\"data.required\"\r\n      [placeholder]=\"data.placeholder\">\r\n      <mat-option *ngFor=\"let option of data.dropdownOptions\" [value]=\"option.value\">\r\n        {{ option.label }}\r\n      </mat-option>\r\n    </mat-select>\r\n\r\n    <input matInput *ngIf=\"data.freeTextMode\" [formControlName]=\"config.field.name\" [required]=\"data.required\"\r\n      [placeholder]=\"data.placeholder\">\r\n\r\n    <button matSuffix mat-icon-button *ngIf=\"data.enableTextEntry\" [disabled]=\"data.disabled\" appClickStopPropagation\r\n      (click)=\"toggleFreeTextMode()\">\r\n      <mat-icon [matTooltip]=\"(data.freeTextMode ? 'Fields.String.Dropdown' : 'Fields.String.Freetext') | translate\">\r\n        {{ data.freeTextMode ? 'arrow_drop_down_circle' : 'text_fields' }}\r\n      </mat-icon>\r\n    </button>\r\n\r\n    <mat-label>{{ data.label }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n</ng-container>\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { Observable, combineLatest, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { DropdownOption } from './string-dropdown.models';\r\nimport { calculateDropdownOptions } from './string-dropdown.helpers';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-dropdown',\r\n  templateUrl: './string-dropdown.component.html',\r\n  styleUrls: ['./string-dropdown.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringDropdownComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  enableTextEntry$: Observable<boolean>;\r\n  dropdownOptions$: Observable<DropdownOption[]>;\r\n  freeTextMode$: Observable<boolean>;\r\n  private toggleFreeText$ = new BehaviorSubject(false);\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.enableTextEntry$ = this.settings$.pipe(map(settings => settings.EnableTextEntry || false));\r\n    this.dropdownOptions$ = combineLatest([this.value$, this.settings$]).pipe(\r\n      map(([value, settings]) => {\r\n        const dropdownOptions = calculateDropdownOptions(value, settings.DropdownValues);\r\n        return dropdownOptions;\r\n      }),\r\n    );\r\n    this.freeTextMode$ = combineLatest([this.enableTextEntry$, this.toggleFreeText$]).pipe(\r\n      map(([enableTextEntry, freeTextMode]) => {\r\n        if (!enableTextEntry) { return false; }\r\n        return freeTextMode;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.toggleFreeText$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggleFreeTextMode() {\r\n    this.toggleFreeText$.next(!this.toggleFreeText$.value);\r\n  }\r\n}\r\n","import { DropdownOption } from './string-dropdown.models';\r\n\r\n/** Takes current value and dropdownValues string from settings and calculates options for dropdown */\r\nexport function calculateDropdownOptions(currentValue: string, dropdownValues: string) {\r\n  let currentValueFound = false;\r\n  let options: DropdownOption[] = [];\r\n  if (dropdownValues) {\r\n    const dropdownValuesArray = dropdownValues.replace(/\\r/g, '').split('\\n');\r\n    options = dropdownValuesArray.map(e => {\r\n      const s = e.split(':');\r\n      const maybeWantedEmptyVal = s[1];\r\n      const key = s.shift();\r\n      const val = s.join(':');\r\n      const option = {\r\n        label: key,\r\n        value: (val || maybeWantedEmptyVal === '') ? val : key\r\n      };\r\n      if (option.value === currentValue) { currentValueFound = true; }\r\n      return option;\r\n    });\r\n  }\r\n  if (!currentValueFound) {\r\n    options.push({\r\n      label: currentValue,\r\n      value: currentValue,\r\n    });\r\n  }\r\n  return options;\r\n}\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { QueryService } from '../../../../shared/services/query.service';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { EntityDefaultComponent } from '../entity-default/entity-default.component';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { EntityService } from '../../../../shared/services/entity.service';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { QueryEntity } from './entity-query.models';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\nimport { FieldMaskService } from '../../../../../shared/field-mask.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'entity-query',\r\n  templateUrl: '../entity-default/entity-default.component.html',\r\n  styleUrls: ['../entity-default/entity-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class EntityQueryComponent extends EntityDefaultComponent implements OnInit, OnDestroy {\r\n  useQuery = true;\r\n  private paramsMask: FieldMaskService;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    entityService: EntityService,\r\n    translate: TranslateService,\r\n    editRoutingService: EditRoutingService,\r\n    snackBar: MatSnackBar,\r\n    private queryService: QueryService,\r\n  ) {\r\n    super(eavService, validationMessagesService, entityService, translate, editRoutingService, snackBar);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.paramsMask?.destroy();\r\n        this.paramsMask = new FieldMaskService(\r\n          settings.UrlParameters,\r\n          this.group.controls,\r\n          this.fetchAvailableEntities.bind(this),\r\n          null,\r\n          this.eavService.eavConfig,\r\n        );\r\n      })\r\n    );\r\n\r\n    this.fetchAvailableEntities();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  calculateSettings(settings: FieldSettings) {\r\n    const fixedSettings = super.calculateSettings(settings);\r\n    if (fixedSettings.Query == null) { fixedSettings.Query = ''; }\r\n    if (fixedSettings.StreamName == null || fixedSettings.StreamName === '') { fixedSettings.StreamName = 'Default'; }\r\n    if (fixedSettings.UrlParameters == null) { fixedSettings.UrlParameters = ''; }\r\n    return fixedSettings;\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  fetchAvailableEntities() {\r\n    const settings = this.settings$.value;\r\n    if (!settings.Query) {\r\n      alert(`No query defined for ${this.config.field.name} - can't load entities`);\r\n      return;\r\n    }\r\n\r\n    const streamName = settings.StreamName;\r\n    const queryUrl = settings.Query.includes('/') ? settings.Query : `${settings.Query}/${streamName}`;\r\n    const params = this.paramsMask.resolve();\r\n\r\n    this.queryService.getAvailableEntities(queryUrl, true, params).subscribe({\r\n      next: (data) => {\r\n        if (!data) {\r\n          this.error$.next(this.translate.instant('Fields.EntityQuery.QueryError'));\r\n          return;\r\n        }\r\n        if (!data[streamName]) {\r\n          this.error$.next(this.translate.instant('Fields.EntityQuery.QueryStreamNotFound') + streamName);\r\n          return;\r\n        }\r\n        const items: EntityInfo[] = data[streamName].map(this.queryEntityMapping.bind(this));\r\n        this.config.entityCache$.next(items);\r\n      },\r\n      error: (error) => {\r\n        console.error(error);\r\n        console.error(`${this.translate.instant('Fields.EntityQuery.QueryError')} - ${error.data}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Overridden in subclass */\r\n  queryEntityMapping(entity: QueryEntity) {\r\n    const entityInfo: EntityInfo = {\r\n      Id: entity.Id,\r\n      Value: entity.Guid,\r\n      Text: entity.Title,\r\n    };\r\n    return entityInfo;\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { EntityQueryComponent } from '../../entity/entity-query/entity-query.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { EntityService } from '../../../../shared/services/entity.service';\r\nimport { QueryService } from '../../../../shared/services/query.service';\r\nimport { QueryEntity } from '../../entity/entity-query/entity-query.models';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-dropdown-query',\r\n  templateUrl: '../../entity/entity-default/entity-default.component.html',\r\n  styleUrls: ['../../entity/entity-default/entity-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class StringDropdownQueryComponent extends EntityQueryComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    entityService: EntityService,\r\n    translate: TranslateService,\r\n    editRoutingService: EditRoutingService,\r\n    snackBar: MatSnackBar,\r\n    queryService: QueryService,\r\n  ) {\r\n    super(eavService, validationMessagesService, entityService, translate, editRoutingService, snackBar, queryService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  calculateSettings(settings: FieldSettings) {\r\n    const fixedSettings = super.calculateSettings(settings);\r\n    if (fixedSettings.Value == null) { fixedSettings.Value = ''; }\r\n    if (fixedSettings.Label == null) { fixedSettings.Label = ''; }\r\n    if (fixedSettings.EnableTextEntry == null) { fixedSettings.EnableTextEntry = false; }\r\n    if (fixedSettings.Separator == null || fixedSettings.Separator === '') { fixedSettings.Separator = ','; }\r\n    return fixedSettings;\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  queryEntityMapping(entity: QueryEntity) {\r\n    const settings = this.settings$.value;\r\n    const entityInfo: EntityInfo = {\r\n      Id: entity.Id,\r\n      Value: entity[settings.Value],\r\n      Text: entity[settings.Label],\r\n    };\r\n    return entityInfo;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  value: value$ | async,\r\n  filteredIcons: filteredIcons$ | async,\r\n  disabled: disabled$ | async,\r\n  previewCss: previewCss$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n    <div class=\"icon-option\">\r\n      <i *ngIf=\"data.value\" class=\"icon-preview {{ data.previewCss }} {{ data.value }}\"></i>\r\n      <input matInput [formControlName]=\"config.field.name\" [placeholder]=\"placeholder$ | async\"\r\n        [required]=\"required$ | async\" [matAutocomplete]=\"auto\">\r\n    </div>\r\n\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n      <cdk-virtual-scroll-viewport itemSize=\"48\" minBufferPx=\"500\" maxBufferPx=\"1000\"\r\n        [style.height.px]=\"data.filteredIcons.length < 6 ? data.filteredIcons.length * 48 : 240\">\r\n        <mat-option *cdkVirtualFor=\"let icon of data.filteredIcons\" [value]=\"icon.class\">\r\n          <div class=\"icon-option\">\r\n            <i class=\"icon-preview {{ data.previewCss }} {{ icon.class }}\"></i>\r\n            <span>{{ icon.label }}</span>\r\n          </div>\r\n        </mat-option>\r\n      </cdk-virtual-scroll-viewport>\r\n    </mat-autocomplete>\r\n\r\n    <mat-label>{{ label$ | async }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { ScriptsLoaderService } from '../../../../shared/services/scripts-loader.service';\r\nimport { IconOption } from './string-font-icon-picker.models';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { findAllIconsInCss } from './string-font-icon-picker.helpers';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-font-icon-picker',\r\n  templateUrl: './string-font-icon-picker.component.html',\r\n  styleUrls: ['./string-font-icon-picker.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringFontIconPickerComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  iconOptions$ = new BehaviorSubject<IconOption[]>([]);\r\n  filteredIcons$: Observable<IconOption[]>;\r\n  previewCss$: Observable<string>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private scriptsLoaderService: ScriptsLoaderService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        const files = settings.Files || '';\r\n        const cssPrefix = settings.CssPrefix || '';\r\n        const showPrefix = settings.ShowPrefix || false;\r\n        // load each file (usually CSS) in the settings\r\n        this.scriptsLoaderService.load(files.split('\\n'), () => {\r\n          const newIconOptions = findAllIconsInCss(cssPrefix, showPrefix);\r\n          this.iconOptions$.next(newIconOptions);\r\n        });\r\n      })\r\n    );\r\n    this.previewCss$ = this.settings$.pipe(map(settings => settings.PreviewCss));\r\n    this.filteredIcons$ = combineLatest([this.value$, this.iconOptions$]).pipe(\r\n      map(([search, iconList]) => {\r\n        // if we have a filter param, use it, otherwise don't filter\r\n        const filtered = search\r\n          ? iconList.filter(icon => icon.search?.includes(search.toLowerCase()) ?? false)\r\n          : iconList;\r\n        return filtered;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.iconOptions$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","import { IconOption, LoadedIcons } from './string-font-icon-picker.models';\r\n\r\n/** Calculates available css classes with className prefix. WARNING: Expensive operation */\r\nexport function findAllIconsInCss(classPrefix: string, showPrefix: boolean) {\r\n  const foundList: IconOption[] = [];\r\n  const duplicateDetector: LoadedIcons = {};\r\n\r\n  if (!classPrefix) { return foundList; }\r\n\r\n  const truncateLabel = showPrefix ? 0 : classPrefix.length - 1;\r\n\r\n  // tslint:disable-next-line:prefer-for-of\r\n  for (let i = 0; i < document.styleSheets.length; i++) {\r\n    const sheet = document.styleSheets[i] as CSSStyleSheet;\r\n    if (!sheet) { continue; }\r\n\r\n    let rules: CSSRuleList;\r\n    try {\r\n      rules = sheet.rules;\r\n    } catch (error) { /* errors happens if browser denies access to css rules */ }\r\n    if (!rules) {\r\n      try {\r\n        rules = sheet.cssRules;\r\n      } catch (error) { /* errors happens if browser denies access to css rules */ }\r\n    }\r\n    if (!rules) { continue; }\r\n\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let j = 0; j < rules.length; j++) {\r\n      const rule = rules[j] as CSSStyleRule;\r\n      if (!(rule.selectorText && rule.selectorText.startsWith(classPrefix))) { continue; }\r\n\r\n      const selector = rule.selectorText;\r\n      const iconClass = selector.substring(0, selector.indexOf(':')).replace('.', '');\r\n      if (duplicateDetector[iconClass]) { continue; }\r\n\r\n      foundList.push({\r\n        rule,\r\n        class: iconClass,\r\n        search: iconClass?.toLowerCase(),\r\n        label: iconClass.substring(truncateLabel),\r\n      });\r\n      duplicateDetector[iconClass] = true;\r\n    }\r\n  }\r\n\r\n  return foundList;\r\n}\r\n","import { TemplateTypes } from './string-template-picker.models';\r\nimport { defaultTokenName, defaultTemplateName } from '../../../../../ng-dialogs/src/app/shared/constants/file-names.constants';\r\n\r\nexport const templateTypes: TemplateTypes = {\r\n  Token: {\r\n    ext: '.html',\r\n    prefix: '',\r\n    suggestion: defaultTokenName,\r\n  },\r\n  'C# Razor': {\r\n    ext: '.cshtml',\r\n    prefix: '_',\r\n    suggestion: defaultTemplateName,\r\n  },\r\n};\r\n","<ng-container *ngIf=\"{\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <div class=\"picker-wrapper\">\r\n    <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n      <mat-select [formControlName]=\"config.field.name\" [required]=\"required$ | async\">\r\n        <mat-option value=\"\">(no file selected)</mat-option>\r\n        <mat-option *ngFor=\"let file of templateOptions$ | async\" [value]=\"file\">\r\n          {{ file }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-label>{{ label$ | async }}</mat-label>\r\n    </mat-form-field>\r\n    <button mat-icon-button matTooltip=\"Create a new file\" [disabled]=\"disabled$ | async\" (click)=\"createTemplate()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { FieldMaskService } from '../../../../../shared/field-mask.service';\r\nimport { AssetsService } from '../../../../shared/services/assets.service';\r\nimport { templateTypes } from './string-template-picker.constants';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-template-picker',\r\n  templateUrl: './string-template-picker.component.html',\r\n  styleUrls: ['./string-template-picker.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringTemplatePickerComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  templateOptions$ = new BehaviorSubject<string[]>([]);\r\n\r\n  private typeWatcher: FieldMaskService;\r\n  private locationWatcher: FieldMaskService;\r\n  private activeSpec = templateTypes.Token;\r\n  private templates: string[] = [];\r\n  private global = false;\r\n  /** Reset only after templates have been fetched once */\r\n  private resetIfNotFound = false;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService, private assetsService: AssetsService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    // set change-watchers to the other values\r\n    this.typeWatcher = new FieldMaskService('[Type]', this.group.controls, this.setFileConfig.bind(this), null);\r\n    this.locationWatcher = new FieldMaskService('[Location]', this.group.controls, this.onLocationChange.bind(this), null);\r\n\r\n    this.setFileConfig(this.typeWatcher.resolve() || 'Token'); // use token setting as default, till the UI tells us otherwise\r\n    this.onLocationChange(this.locationWatcher.resolve() || null); // set initial file list\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.templateOptions$.complete();\r\n    this.typeWatcher.destroy();\r\n    this.locationWatcher.destroy();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private setFileConfig(type: string) {\r\n    this.activeSpec = templateTypes[type];\r\n    this.setTemplateOptions();\r\n  }\r\n\r\n  private onLocationChange(location: string) {\r\n    this.global = (location === 'Host File System');\r\n\r\n    this.assetsService.getAll(this.global).subscribe(templates => {\r\n      this.templates = templates;\r\n      this.resetIfNotFound = true;\r\n      this.setTemplateOptions();\r\n    });\r\n  }\r\n\r\n  private setTemplateOptions() {\r\n    let filtered = this.templates;\r\n    const ext = this.activeSpec.ext;\r\n    // new feature in v11 - '.code.xxx' files shouldn't be shown, they are code-behind\r\n    filtered = filtered.filter(template => !template.includes('.code.'));\r\n    filtered = filtered.filter(template => template.slice(template.length - ext.length) === ext);\r\n    this.templateOptions$.next(filtered);\r\n    const resetValue = this.resetIfNotFound && !filtered.find(template => template === this.control.value);\r\n    if (resetValue) { this.control.patchValue(''); }\r\n  }\r\n\r\n  createTemplate() {\r\n    let name = prompt('Enter new file name', this.activeSpec.suggestion); // todo: i18n\r\n    if (!name) { return; }\r\n\r\n    // 1. check for folders\r\n    let path = '';\r\n    name = name.replace('\\\\', '/');\r\n    const foundSlash = name.lastIndexOf('/');\r\n    if (foundSlash > -1) {\r\n      path = name.substring(0, foundSlash + 1); // path with slash\r\n      name = name.substring(foundSlash + 1);\r\n    }\r\n\r\n    // 2. check if extension already provided, otherwise or if not perfect, just attach default\r\n    if (!name.endsWith(this.activeSpec.ext)) {\r\n      name += this.activeSpec.ext;\r\n    }\r\n\r\n    // 3. check if cshtmls have a \"_\" in the file name (not folder, must be the file name part)\r\n    if (this.activeSpec.prefix !== '' && name[0] !== this.activeSpec.prefix) {\r\n      name = this.activeSpec.prefix + name;\r\n    }\r\n\r\n    const fullPath = path + name;\r\n\r\n    // 4. tell service to create it\r\n    this.assetsService.create(fullPath, this.global).subscribe(res => {\r\n      if (res === false) {\r\n        alert('Server reported that create failed - the file probably already exists'); // todo: i18n\r\n      } else {\r\n        this.templates.push(fullPath);\r\n        this.setTemplateOptions();\r\n        this.control.patchValue(fullPath);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\">\r\n    <input matInput [formControlName]=\"config.field.name\" (blur)=\"clean(true)\" [placeholder]=\"placeholder$ | async\"\r\n      [required]=\"required$ | async\">\r\n    <mat-label>{{ label$ | async }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Helper } from '../../../../shared/helpers/helper';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { FieldMaskService } from '../../../../../shared/field-mask.service';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-url-path',\r\n  templateUrl: './string-url-path.component.html',\r\n  styleUrls: ['./string-url-path.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class StringUrlPathComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  private autoGenerateMask: string;\r\n  private allowSlashes: boolean;\r\n  private fieldMaskService: FieldMaskService;\r\n  /** Blocks external update if field was changed manually and doesn't match external updates. WARNING: Doesn't work on language change */\r\n  private lastAutoCopy = '';\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.autoGenerateMask = settings.AutoGenerateMask || null;\r\n        this.allowSlashes = settings.AllowSlashes || false;\r\n        if (this.fieldMaskService != null) {\r\n          this.fieldMaskService.destroy();\r\n          this.fieldMaskService = null;\r\n        }\r\n        this.fieldMaskService = new FieldMaskService(this.autoGenerateMask, this.group.controls,\r\n          this.onSourcesChanged.bind(this), this.preClean);\r\n      })\r\n    );\r\n\r\n    // set initial value\r\n    this.onSourcesChanged(this.fieldMaskService.resolve());\r\n\r\n    // clean on value change\r\n    this.subscription.add(\r\n      this.control.valueChanges.subscribe(value => {\r\n        this.clean(false);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private onSourcesChanged(newValue: string) {\r\n    const value = this.control.value;\r\n    // don't do anything if the current field is not empty and doesn't have the last copy of the stripped value\r\n    if (value && value !== this.lastAutoCopy) { return; }\r\n\r\n    const cleaned = Helper.stripNonUrlCharacters(newValue, this.allowSlashes, true);\r\n    if (!cleaned) { return; }\r\n    this.lastAutoCopy = cleaned;\r\n    if (value === cleaned) { return; }\r\n    this.control.patchValue(cleaned);\r\n  }\r\n\r\n  private preClean(key: string, value: string) {\r\n    return value.replace('/', '-').replace('\\\\', '-'); // remove slashes which could look like path-parts\r\n  }\r\n\r\n  clean(trimEnd: boolean) {\r\n    const value = this.control.value;\r\n    const cleaned = Helper.stripNonUrlCharacters(value, this.allowSlashes, trimEnd);\r\n    if (value === cleaned) { return; }\r\n    this.control.patchValue(cleaned);\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'custom-default',\r\n  templateUrl: './custom-default.component.html',\r\n  styleUrls: ['./custom-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n})\r\nexport class CustomDefaultComponent extends BaseComponent<null> implements OnInit, OnDestroy {\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","<div class=\"message\">{{ config.field.name }}: Field configuration is incomplete and should be fixed.</div>\r\n","\r\nimport { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { EntityService } from '../../../../shared/services/entity.service';\r\nimport { EntityDefaultComponent } from '../entity-default/entity-default.component';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'entity-content-blocks',\r\n  templateUrl: '../entity-default/entity-default.component.html',\r\n  styleUrls: ['../entity-default/entity-default.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class EntityContentBlockComponent extends EntityDefaultComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    entityService: EntityService,\r\n    translate: TranslateService,\r\n    editRoutingService: EditRoutingService,\r\n    snackBar: MatSnackBar,\r\n  ) {\r\n    super(eavService, validationMessagesService, entityService, translate, editRoutingService, snackBar);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  /** Override function in superclass */\r\n  calculateSettings(settings: FieldSettings) {\r\n    const fixedSettings = super.calculateSettings(settings);\r\n    fixedSettings.AllowMultiValue = false;\r\n    fixedSettings.EnableRemove = true;\r\n    fixedSettings.AllowMultiValue = true;\r\n    fixedSettings.EnableAddExisting = false;\r\n    fixedSettings.EnableCreate = false;\r\n    fixedSettings.EnableEdit = false;\r\n    fixedSettings.EntityType = 'ContentGroupReference';\r\n    return fixedSettings;\r\n  }\r\n}\r\n","import { Component, OnDestroy, ViewChild, ElementRef, Input, NgZone, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { FieldConfigSet } from '../../../../../eav-dynamic-form/model/field-config';\r\nimport { EavService } from '../../../../../shared/services/eav.service';\r\nimport { DnnBridgeService } from '../../../../../shared/services/dnn-bridge.service';\r\nimport { ContentTypeService } from '../../../../../shared/store/ngrx-data/content-type.service';\r\nimport { ConnectorHelper } from './connector.helper';\r\nimport { FeatureService } from '../../../../../shared/store/ngrx-data/feature.service';\r\nimport { InputTypeService } from '../../../../../shared/store/ngrx-data/input-type.service';\r\nimport { EditRoutingService } from '../../../../../shared/services/edit-routing.service';\r\nimport { angularConsoleLog } from '../../../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\n\r\n@Component({\r\n  selector: 'app-connector',\r\n  templateUrl: './connector.component.html',\r\n  styleUrls: ['./connector.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConnectorComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('customElContainer') customElContainerRef: ElementRef;\r\n\r\n  @Input() config: FieldConfigSet;\r\n  @Input() group: FormGroup;\r\n\r\n  private connectorCreator: ConnectorHelper;\r\n\r\n  constructor(\r\n    private eavService: EavService,\r\n    private translateService: TranslateService,\r\n    private contentTypeService: ContentTypeService,\r\n    private inputTypeService: InputTypeService,\r\n    private featureService: FeatureService,\r\n    private editRoutingService: EditRoutingService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private zone: NgZone,\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    const componentTag = history?.state?.componentTag || `field-${this.config.field.inputType}-dialog`;\r\n    angularConsoleLog('Connector created for:', componentTag);\r\n    this.connectorCreator = new ConnectorHelper(\r\n      this.config,\r\n      this.group,\r\n      this.customElContainerRef,\r\n      componentTag,\r\n      this.eavService,\r\n      this.translateService,\r\n      this.contentTypeService,\r\n      this.inputTypeService,\r\n      this.featureService,\r\n      this.editRoutingService,\r\n      this.dnnBridgeService,\r\n      this.zone,\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    angularConsoleLog('Connector destroyed');\r\n    this.connectorCreator.destroy();\r\n  }\r\n}\r\n","<div #customElContainer style=\"height:100%; position:relative;\"></div>\r\n","<ng-container *ngIf=\"{\r\n  loading: loading$ | async,\r\n  isExpanded: isExpanded$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n  <mat-spinner *ngIf=\"data.loading\" color=\"accent\"></mat-spinner>\r\n  <app-connector [config]=\"config\" [group]=\"group\" *ngIf=\"!data.loading && data.isExpanded\"></app-connector>\r\n</ng-container>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { InputType as InputTypeModel } from '../../../../shared/models/eav';\r\nimport { InputTypeService } from '../../../../shared/store/ngrx-data/input-type.service';\r\nimport { ScriptsLoaderService } from '../../../../shared/services/scripts-loader.service';\r\nimport { EditRoutingService } from '../../../../shared/services/edit-routing.service';\r\nimport { angularConsoleLog } from '../../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'external-web-component',\r\n  templateUrl: './external-web-component.component.html',\r\n  styleUrls: ['./external-web-component.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({})\r\nexport class ExternalWebComponentComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  loading$ = new BehaviorSubject(true);\r\n  isExpanded$: Observable<boolean>;\r\n\r\n  constructor(\r\n    eavService: EavService,\r\n    validationMessagesService: ValidationMessagesService,\r\n    private inputTypeService: InputTypeService,\r\n    private scriptsLoaderService: ScriptsLoaderService,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.isExpanded$ = this.editRoutingService.isExpanded(this.config.field.index, this.config.entity.entityGuid);\r\n    this.loadAssets();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private loadAssets() {\r\n    let inputType: InputTypeModel;\r\n    this.inputTypeService.getInputTypeById(this.config.field.inputType).pipe(take(1)).subscribe(type => {\r\n      inputType = type;\r\n    });\r\n\r\n    const assets = inputType.AngularAssets.split('\\n');\r\n    if (assets.length === 0) { return; }\r\n    this.scriptsLoaderService.load(assets, this.assetsLoaded.bind(this));\r\n  }\r\n\r\n  private assetsLoaded() {\r\n    angularConsoleLog('ExternalWebcomponentComponent', this.config.field.name, 'loaded');\r\n    this.loading$.next(false);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { CustomValidators } from '../../../validators/custom-validators';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { FieldSettings } from '../../../../../edit-types';\r\nimport { AdamControl } from './hyperlink-library.models';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'hyperlink-library',\r\n  templateUrl: './hyperlink-library.component.html',\r\n  styleUrls: ['./hyperlink-library.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.DropzoneWrapper, WrappersConstants.EavLocalizationWrapper,\r\n  WrappersConstants.HyperlinkLibraryExpandableWrapper, WrappersConstants.AdamAttachWrapper],\r\n})\r\nexport class HyperlinkLibraryComponent extends BaseComponent<null> implements OnInit, OnDestroy {\r\n  /** Requires more handling that normal subscriptions */\r\n  private adamValidation: Subscription;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.subscription.add(\r\n      this.settings$.subscribe(settings => {\r\n        this.attachAdam(settings);\r\n        this.attachAdamValidator(settings.Required);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.adamValidation?.unsubscribe();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private attachAdam(settings: FieldSettings) {\r\n    this.config.adam.setConfig({\r\n      allowAssetsInRoot: settings.AllowAssetsInRoot,\r\n      autoLoad: true,\r\n      enableSelect: false,\r\n      rootSubfolder: settings.Paths,\r\n      fileFilter: settings.FileFilter,\r\n      folderDepth: settings.FolderDepth || 0,\r\n      metadataContentTypes: settings.MetadataContentTypes,\r\n    });\r\n  }\r\n\r\n  private attachAdamValidator(required: boolean) {\r\n    if (!required) {\r\n      this.adamValidation?.unsubscribe();\r\n      this.control.setValidators(this.config.field.validation);\r\n      return;\r\n    }\r\n\r\n    const validators = [\r\n      ...this.config.field.validation,\r\n      CustomValidators.validateAdam(),\r\n    ];\r\n    this.control.setValidators(validators);\r\n    this.adamValidation = this.config.adam.items$.subscribe(items => {\r\n      (this.control as AdamControl).adamItems = items.length;\r\n      // onlySelf doesn't update form being valid for some reason\r\n      this.control.updateValueAndValidity(/*{ onlySelf: true }*/);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  value: value$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <div [formGroup]=\"group\">\r\n    <mat-slide-toggle [disabled]=\"disabled$ | async\" [checked]=\"data.value\" (toggleChange)=\"toggle()\" [ngClass]=\"{\r\n      'toggle-false': data.value === false,\r\n      'toggle-null': data.value === null\r\n    }\">\r\n      {{ label$ | async }}\r\n    </mat-slide-toggle>\r\n\r\n    <app-field-helper-text [config]=\"config\" [group]=\"group\" disableError=\"true\"></app-field-helper-text>\r\n  </div>\r\n\r\n</ng-container>\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'boolean-tristate',\r\n  templateUrl: './boolean-tristate.component.html',\r\n  styleUrls: ['./boolean-tristate.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class BooleanTristateComponent extends BaseComponent<boolean | ''> implements OnInit, OnDestroy {\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.value$ = this.value$.pipe(map(value => (value === '') ? null : value));\r\n    this.label$ = combineLatest([this.value$, this.settings$, this.label$]).pipe(\r\n      map(([value, settings, label]) => {\r\n        if (value === true && settings.TitleTrue != null && settings.TitleTrue !== '') {\r\n          return settings.TitleTrue;\r\n        }\r\n        if (value === false && settings.TitleFalse != null && settings.TitleFalse !== '') {\r\n          return settings.TitleFalse;\r\n        }\r\n        if (value === null && settings.TitleIndeterminate != null && settings.TitleIndeterminate !== '') {\r\n          return settings.TitleIndeterminate;\r\n        }\r\n        return label;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  toggle() {\r\n    const currentValue: boolean | '' = this.control.value;\r\n    let nextValue: boolean;\r\n    switch (currentValue) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case '':\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.control.patchValue(nextValue);\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"{\r\n  disabled: disabled$ | async,\r\n  showValidation: showValidation$ | async\r\n} as data\">\r\n\r\n  <mat-form-field [formGroup]=\"group\" appearance=\"standard\" color=\"accent\" class=\"textarea-field\">\r\n    <textarea matInput [formControlName]=\"config.field.name\" [rows]=\"rowCount$ | async\"\r\n      [placeholder]=\"placeholder$ | async\" [required]=\"required$ | async\"></textarea>\r\n    <mat-label>{{ label$ | async }}</mat-label>\r\n  </mat-form-field>\r\n\r\n  <app-field-helper-text [config]=\"config\" [group]=\"group\"></app-field-helper-text>\r\n\r\n</ng-container>\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { WrappersConstants } from '../../../../shared/constants/wrappers.constants';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'custom-json-editor',\r\n  templateUrl: './custom-json-editor.component.html',\r\n  styleUrls: ['./custom-json-editor.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@InputType({\r\n  wrapper: [WrappersConstants.EavLocalizationWrapper],\r\n})\r\nexport class CustomJsonEditorComponent extends BaseComponent<string> implements OnInit, OnDestroy {\r\n  rowCount$: Observable<number>;\r\n\r\n  constructor(eavService: EavService, validationMessagesService: ValidationMessagesService) {\r\n    super(eavService, validationMessagesService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.rowCount$ = this.settings$.pipe(map(settings => settings.Rows || 5));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { FieldConfigSet, FieldConfigGroup } from '../../model/field-config';\r\nimport { FieldWrapper } from '../../model/field-wrapper';\r\nimport { InputTypeConstants } from '../../../../ng-dialogs/src/app/content-type-fields/constants/input-type.constants';\r\n\r\n// components\r\nimport { AdamAttachWrapperComponent } from '../../../eav-material-controls/adam/adam-attach-wrapper/adam-attach-wrapper.component';\r\nimport { CollapsibleFieldWrapperComponent } from '../../../eav-material-controls/wrappers/collapsible-field-wrapper/collapsible-field-wrapper.component';\r\nimport { CollapsibleWrapperComponent } from '../../../eav-material-controls/wrappers';\r\nimport { DropzoneWrapperComponent } from '../../../eav-material-controls/adam/dropzone-wrapper/dropzone-wrapper.component';\r\nimport { EavLocalizationComponent } from '../../../eav-material-controls/wrappers/eav-localization-wrapper/eav-localization-wrapper.component';\r\nimport { EntityExpandableWrapperComponent } from '../../../eav-material-controls/wrappers/entity-expandable-wrapper/entity-expandable-wrapper.component';\r\nimport { ExpandableWrapperComponent } from '../../../eav-material-controls/wrappers/expandable-wrapper/expandable-wrapper.component';\r\nimport { HiddenWrapperComponent } from '../../../eav-material-controls/wrappers/hidden-wrapper/hidden-wrapper.component';\r\nimport { HyperlinkDefaultExpandableWrapperComponent } from '../../../eav-material-controls/wrappers/hyperlink-default-expandable-wrapper/hyperlink-default-expandable-wrapper.component';\r\nimport { HyperlinkLibraryExpandableWrapperComponent } from '../../../eav-material-controls/wrappers/hyperlink-library-expandable-wrapper/hyperlink-library-expandable-wrapper.component';\r\nimport { BooleanDefaultComponent } from '../../../eav-material-controls/input-types/boolean/boolean-default/boolean-default.component';\r\nimport { DatetimeDefaultComponent } from '../../../eav-material-controls/input-types/datetime/datetime-default/datetime-default.component';\r\nimport { EmptyDefaultComponent } from '../../../eav-material-controls/input-types/empty/empty-default/empty-default.component';\r\nimport { EntityDefaultComponent } from '../../../eav-material-controls/input-types/entity/entity-default/entity-default.component';\r\nimport { HyperlinkDefaultComponent } from '../../../eav-material-controls/input-types/hyperlink/hyperlink-default/hyperlink-default.component';\r\nimport { NumberDefaultComponent } from '../../../eav-material-controls/input-types/number/number-default/number-default.component';\r\nimport { StringDefaultComponent } from '../../../eav-material-controls/input-types/string/string-default/string-default.component';\r\nimport { StringDropdownComponent } from '../../../eav-material-controls/input-types/string/string-dropdown/string-dropdown.component';\r\nimport { StringDropdownQueryComponent } from '../../../eav-material-controls/input-types/string/string-dropdown-query/string-dropdown-query.component';\r\nimport { StringFontIconPickerComponent } from '../../../eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.component';\r\nimport { StringTemplatePickerComponent } from '../../../eav-material-controls/input-types/string/string-template-picker/string-template-picker.component';\r\nimport { StringUrlPathComponent } from '../../../eav-material-controls/input-types/string/string-url-path/string-url-path.component';\r\nimport { CustomDefaultComponent } from '../../../eav-material-controls/input-types/custom/custom-default/custom-default.component';\r\nimport { EntityContentBlockComponent } from '../../../eav-material-controls/input-types/entity/entity-content-blocks/entity-content-blocks.component';\r\nimport { EntityQueryComponent } from '../../../eav-material-controls/input-types/entity/entity-query/entity-query.component';\r\nimport { ExternalWebComponentComponent } from '../../../eav-material-controls/input-types/custom/external-web-component/external-web-component.component';\r\nimport { HyperlinkLibraryComponent } from '../../../eav-material-controls/input-types/hyperlink/hyperlink-library/hyperlink-library.component';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { BooleanTristateComponent } from '../../../eav-material-controls/input-types/boolean/boolean-tristate/boolean-tristate.component';\r\nimport { CustomJsonEditorComponent } from '../../../eav-material-controls/input-types/custom/custom-json-editor/custom-json-editor.component';\r\n\r\n@Directive({ selector: '[appEavField]' })\r\nexport class EavFieldDirective implements OnInit {\r\n  @Input() private config: FieldConfigSet[];\r\n  @Input() private group: FormGroup;\r\n\r\n  private components: { [key: string]: Type<any> } = {\r\n    'app-adam-attach-wrapper': AdamAttachWrapperComponent,\r\n    'app-collapsible-field-wrapper': CollapsibleFieldWrapperComponent,\r\n    'app-collapsible-wrapper': CollapsibleWrapperComponent,\r\n    'app-dropzone-wrapper': DropzoneWrapperComponent,\r\n    'app-eav-localization-wrapper': EavLocalizationComponent,\r\n    'app-entity-expandable-wrapper': EntityExpandableWrapperComponent,\r\n    'app-expandable-wrapper': ExpandableWrapperComponent,\r\n    'app-hidden-wrapper': HiddenWrapperComponent,\r\n    'app-hyperlink-default-expandable-wrapper': HyperlinkDefaultExpandableWrapperComponent,\r\n    'app-hyperlink-library-expandable-wrapper': HyperlinkLibraryExpandableWrapperComponent,\r\n    'boolean-default': BooleanDefaultComponent,\r\n    'boolean-tristate': BooleanTristateComponent,\r\n    'custom-default': CustomDefaultComponent,\r\n    'custom-json-editor': CustomJsonEditorComponent,\r\n    'datetime-default': DatetimeDefaultComponent,\r\n    'empty-default': EmptyDefaultComponent,\r\n    'entity-content-blocks': EntityContentBlockComponent,\r\n    'entity-default': EntityDefaultComponent,\r\n    'entity-query': EntityQueryComponent,\r\n    'external-web-component': ExternalWebComponentComponent,\r\n    'hyperlink-default': HyperlinkDefaultComponent,\r\n    'hyperlink-library': HyperlinkLibraryComponent,\r\n    'number-default': NumberDefaultComponent,\r\n    'string-default': StringDefaultComponent,\r\n    'string-dropdown': StringDropdownComponent,\r\n    'string-dropdown-query': StringDropdownQueryComponent,\r\n    'string-font-icon-picker': StringFontIconPickerComponent,\r\n    'string-template-picker': StringTemplatePickerComponent,\r\n    'string-url-path': StringUrlPathComponent,\r\n  };\r\n\r\n  constructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) { }\r\n\r\n  ngOnInit() {\r\n    // Clear container\r\n    this.container.clear();\r\n\r\n    this.config.forEach(controlConfiguration => {\r\n      angularConsoleLog('create controlConfiguration', controlConfiguration);\r\n      this.createFieldOrGroup(this.container, controlConfiguration);\r\n    });\r\n  }\r\n\r\n  /** Create all child fields and groups from fieldConfig in container */\r\n  private createFieldOrGroup(container: ViewContainerRef, fieldConfig: FieldConfigSet) {\r\n    const field = fieldConfig.field as FieldConfigGroup;\r\n    if (field.fieldGroup) {\r\n      this.createGroupComponents(container, fieldConfig);\r\n    } else {\r\n      angularConsoleLog('create createFieldOrGroup:', fieldConfig.field.inputType);\r\n      this.createComponent(container, fieldConfig);\r\n    }\r\n  }\r\n\r\n  /** Create group components with group wrappers in container */\r\n  private createGroupComponents(container: ViewContainerRef, fieldConfig: FieldConfigSet) {\r\n    if (fieldConfig.field.wrappers) {\r\n      container = this.createComponentWrappers(container, fieldConfig, fieldConfig.field.wrappers);\r\n    }\r\n    const field = fieldConfig.field as FieldConfigGroup;\r\n    field.fieldGroup.forEach(controlConfiguration => {\r\n      this.createFieldOrGroup(container, controlConfiguration);\r\n    });\r\n  }\r\n\r\n  /** Create component and component wrappers if component exist */\r\n  private createComponent(container: ViewContainerRef, fieldConfig: FieldConfigSet): ComponentRef<any> {\r\n    if (fieldConfig.field.wrappers) {\r\n      container = this.createComponentWrappers(container, fieldConfig, fieldConfig.field.wrappers);\r\n    }\r\n    angularConsoleLog('EavFieldDirective createComponent inputType:', fieldConfig.field.inputType);\r\n    let componentType: Type<any>;\r\n    if (fieldConfig.field.isExternal) {\r\n      componentType = this.readComponentType(InputTypeConstants.ExternalWebComponent);\r\n    } else {\r\n      componentType = this.readComponentType(fieldConfig.field.inputType);\r\n    }\r\n\r\n    // if inputTypeAnnotations of componentType exist then create component\r\n    const inputTypeAnnotations = Reflect.getMetadata('inputTypeAnnotations', componentType);\r\n    if (inputTypeAnnotations) {\r\n      if (inputTypeAnnotations.wrapper) {\r\n        container = this.createComponentWrappers(container, fieldConfig, inputTypeAnnotations.wrapper);\r\n      }\r\n\r\n      const factory = this.resolver.resolveComponentFactory(componentType);\r\n      const ref = container.createComponent(factory);\r\n\r\n      Object.assign(ref.instance, {\r\n        group: this.group,\r\n        config: fieldConfig\r\n      });\r\n\r\n      return ref;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Read component type by selector with ComponentFactoryResolver */\r\n  private readComponentType(selector: string): Type<any> {\r\n    // const factories = Array.from((this.resolver as any)._factories.values());\r\n    // const componentType = (factories.find((x: any) => x.selector === selector) as any).componentType;\r\n    const componentType = this.components[selector];\r\n    if (componentType === undefined) {\r\n      console.error(`Missing component class for: ${selector}`);\r\n      return CustomDefaultComponent;\r\n    }\r\n    return componentType;\r\n  }\r\n\r\n  /** Create wrappers in container */\r\n  private createComponentWrappers(container: ViewContainerRef, fieldConfig: FieldConfigSet, wrappers: string[]): ViewContainerRef {\r\n    wrappers.forEach(wrapperName => {\r\n      container = this.createWrapper(container, fieldConfig, wrapperName);\r\n    });\r\n    return container;\r\n  }\r\n\r\n  /** Create wrapper in container */\r\n  private createWrapper(container: ViewContainerRef, fieldConfig: FieldConfigSet, wrapper: string): ViewContainerRef {\r\n    const componentType = this.readComponentType(wrapper);\r\n\r\n    // create component from component type\r\n    const componentFactory = this.resolver.resolveComponentFactory(componentType);\r\n    const ref: ComponentRef<FieldWrapper> = container.createComponent(componentFactory);\r\n\r\n    Object.assign(ref.instance, {\r\n      group: this.group, // this only need if we have form groups\r\n      config: fieldConfig\r\n    });\r\n\r\n    return ref.instance.fieldComponent;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { FieldConfigSet, FieldConfigGroup } from '../../model/field-config';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\n\r\n@Component({\r\n  selector: 'app-eav-form',\r\n  templateUrl: './eav-form.component.html',\r\n  styleUrls: ['./eav-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EavFormComponent implements OnInit, OnDestroy {\r\n  @Input() config: FieldConfigSet[] = [];\r\n  @Output() private formSubmit = new EventEmitter<void>();\r\n  @Output() private formValueChange = new EventEmitter<any>();\r\n\r\n  form: FormGroup = new FormGroup({});\r\n  private subscription = new Subscription();\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.createControlsInFormGroup(this.config);\r\n\r\n    this.subscription.add(\r\n      this.form.valueChanges.subscribe(val => {\r\n        this.formValueChange.emit(val);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  submitOutside() {\r\n    angularConsoleLog('form save');\r\n    // Use this to emit value out\r\n    this.formSubmit.emit();\r\n  }\r\n\r\n  /**\r\n   * Patch values to formGroup. It accepts an object with control names as keys and will do it's best to\r\n   * match the values to the correct controls in the group.\r\n   * If emitEvent is true, this change will cause a valueChanges event on the FormGroup to be emitted.\r\n   * This defaults to true (as it falls through to updateValueAndValidity)\r\n   */\r\n  patchValue(values: { [key: string]: any }, emitEvent: boolean) {\r\n    this.form.patchValue(values, { emitEvent });\r\n  }\r\n\r\n  /** Check if value in form changed */\r\n  valueIsChanged(values: { [key: string]: any }) {\r\n    let valueIsChanged = false;\r\n\r\n    const valueKeys = Object.keys(values);\r\n    for (const valueKey of valueKeys) {\r\n      if (values[valueKey] !== this.form.value[valueKey]) {\r\n        valueIsChanged = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // spm isn't this always true? Something could be wrong here\r\n    angularConsoleLog('VALUECHANGED:', valueIsChanged, 'VALUES:', values, 'FORM VALUES:', this.form.value);\r\n    return valueIsChanged;\r\n  }\r\n\r\n  /** Create form from configuration */\r\n  private createControlsInFormGroup(fieldConfigArray: FieldConfigSet[]) {\r\n    try {\r\n      fieldConfigArray.forEach(fieldConfig => {\r\n        const field = fieldConfig.field as FieldConfigGroup;\r\n        if (field.fieldGroup) {\r\n          this.createControlsInFormGroup(field.fieldGroup);\r\n        } else {\r\n          this.form.addControl(fieldConfig.field.name, this.createControl(fieldConfig));\r\n        }\r\n      });\r\n      return this.form;\r\n    } catch (error) {\r\n      console.error(`Error creating form controls: ${error}\\nFieldConfig: ${fieldConfigArray}`);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /** Create form control */\r\n  private createControl(config: FieldConfigSet) {\r\n    try {\r\n      const { disabled, validation, initialValue } = config.field;\r\n      return this.formBuilder.control({ disabled, value: initialValue }, validation);\r\n    } catch (error) {\r\n      console.error(`Error creating form control: ${error}\\nConfig: ${config}`);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n}\r\n","<form class=\"dynamic-form\" [formGroup]=\"form\">\r\n  <ng-container appEavField [config]=\"config\" [group]=\"form\">\r\n  </ng-container>\r\n</form>\r\n","<div *ngIf=\"contentType$ | async\">\r\n  <app-eav-form [config]=\"itemFields$ | async\" (formSubmit)=\"submit()\" (formValueChange)=\"formValueChange($event)\">\r\n  </app-eav-form>\r\n</div>\r\n","import { EventEmitter, Input, OnDestroy, OnInit, Output, Component, ViewChild, ChangeDetectionStrategy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Action } from '@ngrx/store';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { ContentType, Item } from '../../shared/models/eav';\r\nimport { ContentTypeService } from '../../shared/store/ngrx-data/content-type.service';\r\nimport { EavFormComponent } from '../../eav-dynamic-form/components/eav-form/eav-form.component';\r\nimport { EavService } from '../../shared/services/eav.service';\r\nimport { FieldConfigSet } from '../../eav-dynamic-form/model/field-config';\r\nimport { ItemService } from '../../shared/store/ngrx-data/item.service';\r\nimport { LocalizationHelper } from '../../shared/helpers/localization-helper';\r\nimport * as fromItems from '../../shared/store/actions/item.actions';\r\nimport { BuildFieldsService } from './build-fields.service';\r\nimport { InputFieldHelper } from '../../shared/helpers/input-field-helper';\r\nimport { LanguageInstanceService } from '../../shared/store/ngrx-data/language-instance.service';\r\n\r\n@Component({\r\n  selector: 'app-item-edit-form',\r\n  templateUrl: './item-edit-form.component.html',\r\n  styleUrls: ['./item-edit-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ItemEditFormComponent implements OnInit, OnDestroy, OnChanges {\r\n  @ViewChild(EavFormComponent) form: EavFormComponent;\r\n  @Input() item: Item;\r\n  @Input() private formId: number;\r\n  @Output() private itemFormValueChange = new EventEmitter<void>();\r\n\r\n  contentType$: Observable<ContentType>;\r\n  itemFields$: Observable<FieldConfigSet[]>;\r\n  currentLanguage: string;\r\n\r\n  private defaultLanguage: string;\r\n  private subscription = new Subscription();\r\n\r\n  constructor(\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private eavService: EavService,\r\n    private actions$: Actions,\r\n    private buildFieldsService: BuildFieldsService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.languageInstanceService.getDefaultLanguage(this.formId).subscribe(defaultLang => {\r\n        this.defaultLanguage = defaultLang;\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.languageInstanceService.getCurrentLanguage(this.formId).subscribe(currentLang => {\r\n        this.currentLanguage = currentLang;\r\n        this.setFormValues();\r\n      })\r\n    );\r\n\r\n    // create input fields from content type\r\n    const contentTypeId = InputFieldHelper.getContentTypeId(this.item);\r\n    this.contentType$ = this.contentTypeService.getContentTypeById(contentTypeId);\r\n    this.itemFields$ = this.buildFieldsService.buildFields(\r\n      this.contentType$,\r\n      this.item,\r\n      this.formId,\r\n      this.currentLanguage,\r\n      this.defaultLanguage,\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.item != null) {\r\n      this.setFormValues();\r\n    }\r\n  }\r\n\r\n  /** Observe is item form is saved */\r\n  formSaveObservable() {\r\n    return this.actions$.pipe(\r\n      ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES),\r\n      filter((action: fromItems.SaveItemAttributesValuesAction) =>\r\n        this.item.entity.id === 0 ? this.item.entity.guid === action.item.entity.guid : this.item.entity.id === action.item.entity.id\r\n      ),\r\n    ) as Observable<Action>;\r\n  }\r\n\r\n  /**\r\n   * Update NGRX/store on form value change\r\n   * @param values key:value list of fields from form\r\n   */\r\n  formValueChange(values: { [key: string]: any }) {\r\n    this.itemService.updateItemAttributesValues(\r\n      this.item.entity.id,\r\n      values,\r\n      this.currentLanguage,\r\n      this.defaultLanguage,\r\n      this.item.entity.guid,\r\n    );\r\n\r\n    this.itemFormValueChange.emit();\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.form.valid || this.checkAreAllControlsDisabled() || (this.item.header.Group && this.item.header.Group.SlotCanBeEmpty)) {\r\n      this.eavService.saveItem(this.item);\r\n    }\r\n  }\r\n\r\n  checkAreAllControlsDisabled() {\r\n    let allDisabled = true;\r\n    const controlKeys = Object.keys(this.form.form.controls);\r\n    for (const key of controlKeys) {\r\n      if (!this.form.form.controls[key].disabled) {\r\n        allDisabled = false;\r\n        break;\r\n      }\r\n    }\r\n    return allDisabled;\r\n  }\r\n\r\n  private setFormValues() {\r\n    if (!this.form) { return; }\r\n\r\n    const formValues: { [name: string]: any } = {};\r\n    Object.keys(this.item.entity.attributes).forEach(attributeKey => {\r\n      formValues[attributeKey] = LocalizationHelper.translate(\r\n        this.currentLanguage,\r\n        this.defaultLanguage,\r\n        this.item.entity.attributes[attributeKey],\r\n        null,\r\n      );\r\n    });\r\n\r\n    // spm true only on language change?\r\n    if (this.form.valueIsChanged(formValues)) {\r\n      // set new values to form\r\n      this.form.patchValue(formValues, false);\r\n    }\r\n    // important to be after patchValue\r\n    this.eavService.formValueChange$.next({\r\n      formId: this.formId,\r\n      entityGuid: this.item.entity.guid,\r\n      entityValues: formValues,\r\n    });\r\n  }\r\n\r\n}\r\n","import { EavValues } from '../eav';\r\nimport { angularConsoleLog } from '../../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\n\r\nexport class Value1<T> {\r\n  [key: string]: T;\r\n\r\n  public static create<T>(eavValues: EavValues<T>): Value1<T> {\r\n    const newValue1: Value1<T> = {};\r\n    angularConsoleLog('eavValues.values.forEach: ', eavValues.values);\r\n    eavValues.values.forEach(eavValue => {\r\n      const allDimensions = eavValue.dimensions.map(d => d.value).join();\r\n      newValue1[allDimensions] = eavValue.value;\r\n    });\r\n    return newValue1;\r\n  }\r\n}\r\n","import { Attribute1 } from './attribute1';\r\nimport { EavAttributes } from '../eav';\r\nimport { Value1 } from './value1';\r\n\r\nexport class Attributes1<T> {\r\n  [key: string]: Attribute1<T>;\r\n\r\n  public static create<T>(eavAttributes: EavAttributes): Attributes1<T> {\r\n    const newAttribute1: Attributes1<T> = new Attributes1<T>();\r\n\r\n    Object.keys(eavAttributes).forEach(eavAttributeKey => {\r\n      const type = eavAttributes[eavAttributeKey].type;\r\n      if (!newAttribute1[type]) { newAttribute1[type] = {}; }\r\n      newAttribute1[type][eavAttributeKey] = Value1.create<T>(eavAttributes[eavAttributeKey]);\r\n    });\r\n    return newAttribute1;\r\n  }\r\n}\r\n","export class Type1 {\r\n    Id: string;\r\n    Name: string;\r\n\r\n    constructor(Id: string, Name: string) {\r\n        this.Id = Id;\r\n        this.Name = Name;\r\n    }\r\n}\r\n","import { EavFor } from '../eav';\r\n\r\nexport class For1 {\r\n  Target: string;\r\n  Number?: number;\r\n  String?: string;\r\n  Guid?: string;\r\n\r\n  constructor(entityFor: EavFor) {\r\n    this.Target = entityFor.Target;\r\n    if (entityFor.Number) {\r\n      this.Number = entityFor.Number;\r\n    }\r\n    if (entityFor.String) {\r\n      this.String = entityFor.String;\r\n    }\r\n    if (entityFor.Guid) {\r\n      this.Guid = entityFor.Guid;\r\n    }\r\n  }\r\n}\r\n","import { Attributes1 } from './attributes1';\r\nimport { Type1 } from './type1';\r\nimport { EavEntity } from '../eav';\r\nimport { For1 } from './for1';\r\n\r\nexport class Entity1 {\r\n  Id: number;\r\n  Version: number;\r\n  Guid: string;\r\n  Type: Type1;\r\n  Attributes: Attributes1<any>;\r\n  Owner: string;\r\n  Metadata: Entity1[];\r\n  For?: For1;\r\n\r\n  constructor(\r\n    Id: number,\r\n    Version: number,\r\n    Guid: string,\r\n    Type: Type1,\r\n    Attributes: Attributes1<any>,\r\n    Owner: string,\r\n    Metadata: Entity1[],\r\n    For?: For1,\r\n  ) {\r\n    this.Id = Id;\r\n    this.Version = Version;\r\n    this.Guid = Guid;\r\n    this.Type = Type;\r\n    this.Attributes = Attributes;\r\n    this.Owner = Owner;\r\n    this.Metadata = Metadata;\r\n    if (For) { this.For = For; }\r\n  }\r\n\r\n  public static create(entity: EavEntity): Entity1 {\r\n    const attributes1 = Attributes1.create(entity.attributes);\r\n    const metaData1 = this.createArray(entity.metadata);\r\n    const for1 = entity.For ? new For1(entity.For) : null;\r\n\r\n    return new Entity1(\r\n      entity.id,\r\n      entity.version,\r\n      entity.guid,\r\n      new Type1(entity.type.id, entity.type.name),\r\n      attributes1,\r\n      entity.owner,\r\n      metaData1,\r\n      for1,\r\n    );\r\n  }\r\n\r\n  public static createArray(eavEntityArray: EavEntity[]): Entity1[] {\r\n    if (!eavEntityArray) { return null; }\r\n    const metaData1Array: Entity1[] = new Array<Entity1>();\r\n    eavEntityArray.forEach(eavEntity => {\r\n      metaData1Array.push(Entity1.create(eavEntity));\r\n    });\r\n    return metaData1Array;\r\n  }\r\n}\r\n","import { Entity1 } from './entity1';\r\n// import { JsonHeader1 } from './json-header1';\r\nimport { Item } from '../eav/item';\r\nimport { EavHeader } from '../eav';\r\n\r\nexport class JsonItem1 {\r\n  // Header: JsonHeader1;\r\n  Header: EavHeader;\r\n  Entity: Entity1;\r\n\r\n  constructor(Header: EavHeader, Entity: Entity1) {\r\n    this.Header = Header;\r\n    this.Entity = Entity;\r\n  }\r\n\r\n  public static create(item: Item): JsonItem1 {\r\n    return new JsonItem1(\r\n      // JsonHeader1.create(item.header),\r\n      item.header,\r\n      Entity1.create(item.entity)\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, Inject, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\n\r\nimport { UnsavedChangesSnackData } from './snack-bar-unsaved-changes.models';\r\n\r\n@Component({\r\n  selector: 'app-snack-bar-unsaved-changes',\r\n  templateUrl: './snack-bar-unsaved-changes.component.html',\r\n  styleUrls: ['./snack-bar-unsaved-changes.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SnackBarUnsavedChangesComponent implements OnInit {\r\n\r\n  constructor(\r\n    private snackRef: MatSnackBarRef<SnackBarUnsavedChangesComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) private snackBarData: UnsavedChangesSnackData,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  saveChanges(save: boolean) {\r\n    this.snackBarData.save = save;\r\n    this.snackRef.dismissWithAction();\r\n  }\r\n}\r\n","<span class=\"error-message\">{{ 'Errors.UnsavedChanges' | translate }}</span>\r\n\r\n<div fxLayoutAlign=\"end end\">\r\n  <button mat-button color=\"accent\" (click)=\"saveChanges(false)\">\r\n    {{ ('General.Buttons.NotSave' | translate).toUpperCase() }}\r\n  </button>\r\n  <button mat-button color=\"accent\" (click)=\"saveChanges(true)\">\r\n    {{ ('General.Buttons.Save' | translate).toUpperCase()}}\r\n  </button>\r\n</div>\r\n","<div class=\"save-errors-container\">\r\n  <div>{{ 'Errors.SaveErrors' | translate }}</div>\r\n  <br />\r\n  <div *ngFor=\"let error of fieldErrors;\">\r\n    <span>{{ error.field }}<span>: {{ error.message | translate }}</span></span>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\n\r\nimport { SaveErrorsSnackData } from './snack-bar-save-errors.models';\r\nimport { FieldErrorMessage } from '../../../shared/models/eav/field-error-message';\r\n\r\n@Component({\r\n  selector: 'app-snack-bar-save-errors',\r\n  templateUrl: './snack-bar-save-errors.component.html',\r\n  styleUrls: ['./snack-bar-save-errors.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SnackBarSaveErrorsComponent implements OnInit {\r\n  fieldErrors: FieldErrorMessage[] = [];\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) private snackBarData: SaveErrorsSnackData) { }\r\n\r\n  ngOnInit() {\r\n    this.fieldErrors = this.snackBarData.fieldErrors;\r\n  }\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Language } from '../../shared/models/eav';\r\n\r\nexport function calculateIsParentDialog(route: ActivatedRoute) {\r\n  let editDialogCount = 0;\r\n  for (const path of route.snapshot.pathFromRoot) {\r\n    if (path.url.length <= 0) { continue; }\r\n    for (const urlSegment of path.url) {\r\n      if (urlSegment.path !== 'edit') { continue; }\r\n      editDialogCount++;\r\n    }\r\n  }\r\n  return editDialogCount === 1;\r\n}\r\n\r\nexport function sortLanguages(primaryLangKey: string, languages: Language[]) {\r\n  if (languages.length === 0) { return languages; }\r\n\r\n  let primaryLang: Language;\r\n  const sameLangs: Language[] = [];\r\n  const otherLangs: Language[] = [];\r\n  for (const language of languages) {\r\n    if (language.key === primaryLangKey) {\r\n      primaryLang = language;\r\n    } else if (language.key.startsWith(primaryLangKey.split('-')[0])) {\r\n      sameLangs.push(language);\r\n    } else {\r\n      otherLangs.push(language);\r\n    }\r\n  }\r\n  sameLangs.sort(alphabetCompare);\r\n  otherLangs.sort(alphabetCompare);\r\n\r\n  if (!primaryLang) {\r\n    return [...sameLangs, ...otherLangs];\r\n  } else {\r\n    return [primaryLang, ...sameLangs, ...otherLangs];\r\n  }\r\n}\r\n\r\nfunction alphabetCompare(a: Language, b: Language) {\r\n  if (a.key < b.key) { return -1; }\r\n  if (a.key > b.key) { return 1; }\r\n  return 0;\r\n}\r\n","export type PublishMode = 'branch' | 'show' | 'hide';\r\n\r\nexport class PublishModeConstants {\r\n  public static readonly Show = 'show';\r\n  public static readonly Hide = 'hide';\r\n  public static readonly Branch = 'branch';\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { PublishMode, PublishModeConstants } from '../../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.constants';\r\n\r\n@Component({\r\n  selector: 'app-save-status-dialog',\r\n  templateUrl: './save-status-dialog.component.html',\r\n  styleUrls: ['./save-status-dialog.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SaveStatusDialogComponent implements OnInit {\r\n  publishMode: PublishMode;\r\n  Modes = PublishModeConstants;\r\n\r\n  constructor(private dialogRef: MatDialogRef<SaveStatusDialogComponent>, @Inject(MAT_DIALOG_DATA) private data: PublishMode) { }\r\n\r\n  ngOnInit() {\r\n    this.publishMode = this.data;\r\n  }\r\n\r\n  setMode(mode: PublishMode) {\r\n    this.dialogRef.close(mode);\r\n  }\r\n}\r\n","<mat-card>\r\n  <div class=\"mat-card__header\">\r\n    <div class=\"mat-card__title\">{{ 'SaveMode.Dialog.Title' | translate }}</div>\r\n    <div class=\"mat-card__description\">{{ 'SaveMode.Dialog.Intro' | translate }}</div>\r\n  </div>\r\n\r\n  <mat-nav-list toggle>\r\n\r\n    <mat-list-item (click)=\"setMode(Modes.Show)\" [ngClass]=\"{ 'mat-list-item-focus': publishMode === Modes.Show }\">\r\n      <mat-icon matListIcon color=\"accent\">visibility</mat-icon>\r\n      <div matLine class=\"mat-list-item__title\">{{ 'SaveMode.Dialog.Show.Title' | translate }}</div>\r\n      <div matLine class=\"mat-list-item__body\">{{ 'SaveMode.Dialog.Show.Body' | translate }}</div>\r\n    </mat-list-item>\r\n\r\n    <mat-list-item (click)=\"setMode(Modes.Hide)\" [ngClass]=\"{ 'mat-list-item-focus': publishMode === Modes.Hide }\">\r\n      <mat-icon matListIcon color=\"accent\">visibility_off</mat-icon>\r\n      <div matLine class=\"mat-list-item__title\">{{ 'SaveMode.Dialog.Hide.Title' | translate }}</div>\r\n      <div matLine class=\"mat-list-item__body\">{{ 'SaveMode.Dialog.Hide.Body' | translate }}</div>\r\n    </mat-list-item>\r\n\r\n    <mat-list-item (click)=\"setMode(Modes.Branch)\" [ngClass]=\"{ 'mat-list-item-focus': publishMode === Modes.Branch }\">\r\n      <mat-icon matListIcon color=\"accent\" svgIcon=\"draft-branch\"></mat-icon>\r\n      <div matLine class=\"mat-list-item__title\">{{ 'SaveMode.Dialog.Branch.Title' | translate }}</div>\r\n      <div matLine class=\"mat-list-item__body\">{{ 'SaveMode.Dialog.Branch.Body' | translate }}</div>\r\n    </mat-list-item>\r\n\r\n  </mat-nav-list>\r\n</mat-card>\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../../../shared/element-event-listener.model';\r\n\r\nexport class MouseScrollHelper {\r\n  private oldScrollBehavior: string;\r\n  private positionX: number;\r\n  private headerDownListener: ElementEventListener;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n    private areButtonsDisabled: () => boolean\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const registerScroll = this.registerScroll.bind(this);\r\n      this.header.addEventListener('pointerdown', registerScroll, { passive: true });\r\n      this.headerDownListener = { element: this.header, type: 'pointerdown', listener: registerScroll };\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.headerDownListener.element.removeEventListener(this.headerDownListener.type, this.headerDownListener.listener);\r\n      this.headerDownListener = null;\r\n      this.eventListeners.forEach(evList => {\r\n        evList.element.removeEventListener(evList.type, evList.listener);\r\n        evList = null;\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n    this.ngZone = null;\r\n    this.header = null;\r\n    this.areButtonsDisabled = null;\r\n  }\r\n\r\n  private registerScroll(event: MouseEvent) {\r\n    const disabled = this.areButtonsDisabled();\r\n    if (disabled || event.button !== 0) { return; }\r\n\r\n    window.getSelection().removeAllRanges();\r\n    this.oldScrollBehavior = getComputedStyle(this.header).getPropertyValue('scroll-behavior');\r\n\r\n    this.header.style.scrollBehavior = 'auto';\r\n    this.positionX = event.pageX;\r\n\r\n    const doScroll = this.doScroll.bind(this);\r\n    const removeScroll = this.removeScroll.bind(this);\r\n    document.addEventListener('pointermove', doScroll, { passive: true });\r\n    document.addEventListener('pointerup', removeScroll, { passive: true });\r\n    document.addEventListener('pointerleave', removeScroll, { passive: true });\r\n    this.eventListeners.push(\r\n      { element: document, type: 'pointermove', listener: doScroll },\r\n      { element: document, type: 'pointerup', listener: removeScroll },\r\n      { element: document, type: 'pointerleave', listener: removeScroll },\r\n    );\r\n  }\r\n\r\n  private removeScroll() {\r\n    this.header.style.scrollBehavior = this.oldScrollBehavior;\r\n\r\n    this.eventListeners.forEach(evList => {\r\n      evList.element.removeEventListener(evList.type, evList.listener);\r\n      evList = null;\r\n    });\r\n    this.eventListeners.splice(0, this.eventListeners.length);\r\n  }\r\n\r\n  private doScroll(event: MouseEvent) {\r\n    const newPositionX = event.pageX;\r\n    if (newPositionX < this.positionX) {\r\n      this.header.scrollLeft += this.positionX - newPositionX;\r\n    } else if (newPositionX > this.positionX) {\r\n      this.header.scrollLeft += -(newPositionX - this.positionX);\r\n    }\r\n    this.positionX = newPositionX;\r\n  }\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../../../shared/element-event-listener.model';\r\n\r\nexport class CenterSelectedHelper {\r\n  private positionX: number;\r\n  private positionY: number;\r\n  private moveThreshold = 2; // Pixels for which header can be scrolled while clicking to still register as click\r\n  private stopClick = false;\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const checkIfMouseMoved = this.checkIfMouseMoved.bind(this);\r\n      document.addEventListener('mouseup', checkIfMouseMoved, { passive: true });\r\n      this.eventListeners.push({ element: document, type: 'mouseup', listener: checkIfMouseMoved });\r\n    });\r\n  }\r\n\r\n  lngButtonDown(event: MouseEvent) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.saveInitialPosition(event);\r\n    });\r\n  }\r\n\r\n  lngButtonClick(event: MouseEvent) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.doMove(event);\r\n    });\r\n  }\r\n\r\n  stopClickIfMouseMoved() {\r\n    return this.stopClick;\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(evList => {\r\n        evList.element.removeEventListener(evList.type, evList.listener);\r\n        evList = null;\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n  }\r\n\r\n  private saveInitialPosition(event: MouseEvent) {\r\n    this.stopClick = false;\r\n    this.positionX = event.pageX;\r\n    this.positionY = event.pageY;\r\n  }\r\n\r\n  private checkIfMouseMoved(event: MouseEvent) {\r\n    if (!this.positionX || !this.positionY) {\r\n      this.stopClick = false;\r\n      return;\r\n    }\r\n    const newPositionX = event.pageX;\r\n    const newPositionY = event.pageY;\r\n\r\n    const newTotal = newPositionX + newPositionY;\r\n    const oldTotal = this.positionX + this.positionY;\r\n\r\n    this.stopClick = Math.abs(oldTotal - newTotal) > this.moveThreshold;\r\n    this.positionX = null;\r\n    this.positionY = null;\r\n  }\r\n\r\n  private doMove(event: MouseEvent) {\r\n    if (this.stopClick) { return; }\r\n\r\n    const button = event.target as HTMLButtonElement;\r\n    const buttonOffset = button.getBoundingClientRect().left;\r\n    const buttonWidth = button.getBoundingClientRect().width;\r\n    const headerOffset = this.header.getBoundingClientRect().left;\r\n    const headerWidth = this.header.getBoundingClientRect().width;\r\n\r\n    const currentPosition = buttonOffset + buttonWidth / 2;\r\n    const moveTo = headerOffset + headerWidth / 2;\r\n\r\n    this.header.scrollLeft += currentPosition - moveTo;\r\n  }\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../../../shared/element-event-listener.model';\r\n\r\nexport class ShowShadowsHelper {\r\n  private maxScrollLeft: number;\r\n  private hidden = 'hidden'; // CSS class which hides shadows\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private header: HTMLElement,\r\n    private leftShadow: HTMLElement,\r\n    private rightShadow: HTMLElement,\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.calculateShadows();\r\n\r\n      const calculateShadows = this.calculateShadows.bind(this);\r\n      this.header.addEventListener('scroll', calculateShadows, { passive: true });\r\n      window.addEventListener('resize', calculateShadows, { passive: true });\r\n      this.eventListeners.push(\r\n        { element: this.header, type: 'scroll', listener: calculateShadows },\r\n        { element: window, type: 'resize', listener: calculateShadows },\r\n      );\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(evList => {\r\n        evList.element.removeEventListener(evList.type, evList.listener);\r\n        evList = null;\r\n      });\r\n      this.eventListeners = null;\r\n    });\r\n    this.ngZone = null;\r\n    this.header = null;\r\n    this.leftShadow = null;\r\n    this.rightShadow = null;\r\n  }\r\n\r\n  private calculateShadows() {\r\n    this.maxScrollLeft = this.header.scrollWidth - this.header.clientWidth;\r\n\r\n    if (this.maxScrollLeft === 0) {\r\n      this.hideBoth();\r\n    } else if (this.header.scrollLeft === 0) {\r\n      this.hideLeft();\r\n    } else if (this.header.scrollLeft === this.maxScrollLeft) {\r\n      this.hideRight();\r\n    } else {\r\n      this.showBoth();\r\n    }\r\n  }\r\n\r\n  private hideBoth() {\r\n    this.leftShadow.classList.add(this.hidden);\r\n    this.rightShadow.classList.add(this.hidden);\r\n  }\r\n\r\n  private hideLeft() {\r\n    this.leftShadow.classList.add(this.hidden);\r\n    this.rightShadow.classList.remove(this.hidden);\r\n  }\r\n\r\n  private hideRight() {\r\n    this.leftShadow.classList.remove(this.hidden);\r\n    this.rightShadow.classList.add(this.hidden);\r\n  }\r\n\r\n  private showBoth() {\r\n    this.leftShadow.classList.remove(this.hidden);\r\n    this.rightShadow.classList.remove(this.hidden);\r\n  }\r\n}\r\n","import { Language } from '../../../../shared/models/eav';\r\n\r\nexport interface LanguageButton extends Language {\r\n  buttonText: string;\r\n}\r\n\r\n/** Calculates properties of language buttons, e.g. name to be desplayed */\r\nexport function calculateLanguageButtons(languages: Language[]): LanguageButton[] {\r\n  const languageButtons: LanguageButton[] = [];\r\n  const regionlessNamesCount: { [key: string]: number } = {};\r\n\r\n  // count the number of repetitions of the same language without region key\r\n  // e.g. English (United States) and English (Australia) are both English\r\n  languages.forEach(language => {\r\n    const regionlessName = removeRegionName(language.name);\r\n    if (regionlessNamesCount[regionlessName]) {\r\n      regionlessNamesCount[regionlessName]++;\r\n    } else {\r\n      regionlessNamesCount[regionlessName] = 1;\r\n    }\r\n  });\r\n\r\n  // if language repeats, append language key to name which will be displayed\r\n  languages.forEach(language => {\r\n    const regionlessName = removeRegionName(language.name);\r\n\r\n    languageButtons.push({\r\n      name: language.name,\r\n      key: language.key,\r\n      buttonText: (regionlessNamesCount[regionlessName] > 1) ? `${regionlessName} (${language.key})` : regionlessName,\r\n    });\r\n  });\r\n\r\n  return languageButtons;\r\n}\r\n\r\n/** Returns name without region, e.g. ENGLISH from English (United Stated) */\r\nfunction removeRegionName(languageName: string): string {\r\n  return languageName.substring(0, languageName.indexOf('(') > 0 ? languageName.indexOf('(') - 1 : 100).toLocaleUpperCase();\r\n}\r\n","<div class=\"scrollable__overlay\" *ngIf=\"{\r\n  currentLanguage: currentLanguage$ | async\r\n} as data\">\r\n  <div #leftShadow class=\"scrollable__overlay--left-shadow\"></div>\r\n  <div #rightShadow class=\"scrollable__overlay--right-shadow\"></div>\r\n  <div #scrollable class=\"scrollable lang-switch\" [matTooltip]=\"'Message.CantSwitchLanguage' | translate\"\r\n    [matTooltipDisabled]=\"!disabled\">\r\n    <button mat-flat-button class=\"lang-switch__button\" *ngFor=\"let langButton of (languageButtons$ | async)\"\r\n      [disabled]=\"disabled && data.currentLanguage !== langButton.key\"\r\n      [color]=\"data.currentLanguage === langButton.key ? 'accent' : 'white'\" (mousedown)=\"lngButtonMouseDown($event)\"\r\n      (click)=\"lngButtonClick($event, langButton)\" [matTooltip]=\"langButton.name\" [matTooltipDisabled]=\"disabled\">\r\n      {{ langButton.buttonText }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, Input, ViewChild, AfterViewInit, ElementRef, OnDestroy, OnInit, NgZone, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Language } from '../../../shared/models/eav';\r\nimport { LanguageService } from '../../../shared/store/ngrx-data/language.service';\r\nimport { LanguageInstanceService } from '../../../shared/store/ngrx-data/language-instance.service';\r\nimport { MouseScrollHelper } from './eav-language-switcher-services/mouse-scroll-helper';\r\nimport { CenterSelectedHelper } from './eav-language-switcher-services/center-selected-helper';\r\nimport { ShowShadowsHelper } from './eav-language-switcher-services/show-shadows-helper';\r\nimport { LanguageButton, calculateLanguageButtons } from './eav-language-switcher-services/eav-language-switcher.helpers';\r\n\r\n@Component({\r\n  selector: 'app-eav-language-switcher',\r\n  templateUrl: './eav-language-switcher.component.html',\r\n  styleUrls: ['./eav-language-switcher.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EavLanguageSwitcherComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('scrollable') private headerRef: ElementRef;\r\n  @ViewChild('leftShadow') private leftShadowRef: ElementRef;\r\n  @ViewChild('rightShadow') private rightShadowRef: ElementRef;\r\n  @Input() private formId: number;\r\n  @Input() disabled: boolean;\r\n\r\n  languageButtons$: Observable<LanguageButton[]>;\r\n  currentLanguage$: Observable<string>;\r\n\r\n  private centerSelectedService: CenterSelectedHelper;\r\n  private mouseScrollHelper: MouseScrollHelper;\r\n  private showShadowsService: ShowShadowsHelper;\r\n\r\n  constructor(\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private ngZone: NgZone,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.languageButtons$ = this.languageService.entities$.pipe(map(langs => calculateLanguageButtons(langs)));\r\n    this.currentLanguage$ = this.languageInstanceService.getCurrentLanguage(this.formId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.showShadowsService = new ShowShadowsHelper(this.ngZone, this.headerRef.nativeElement,\r\n      this.leftShadowRef.nativeElement, this.rightShadowRef.nativeElement);\r\n    this.mouseScrollHelper = new MouseScrollHelper(this.ngZone, this.headerRef.nativeElement, this.areButtonsDisabled.bind(this));\r\n    this.centerSelectedService = new CenterSelectedHelper(this.ngZone, this.headerRef.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.centerSelectedService.destroy();\r\n    this.mouseScrollHelper.destroy();\r\n    this.showShadowsService.destroy();\r\n  }\r\n\r\n  lngButtonMouseDown(event: MouseEvent) {\r\n    this.centerSelectedService.lngButtonDown(event);\r\n  }\r\n\r\n  lngButtonClick(event: MouseEvent, language: Language) {\r\n    if (this.disabled) { return; }\r\n    this.centerSelectedService.lngButtonClick(event);\r\n\r\n    if (!this.centerSelectedService.stopClickIfMouseMoved()) {\r\n      this.languageInstanceService.updateCurrentLanguage(this.formId, language.key);\r\n    }\r\n  }\r\n\r\n  private areButtonsDisabled() {\r\n    return this.disabled;\r\n  }\r\n}\r\n","<mat-card class=\"header\">\r\n  <button mat-icon-button class=\"header__exit-button\" (click)=\"close()\"\r\n    [matTooltip]=\"(isParentDialog ? 'Form.Buttons.Exit.Tip' : 'Form.Buttons.Return.Tip') | translate\">\r\n    <mat-icon>{{ isParentDialog ? 'clear' : 'arrow_back' }}</mat-icon>\r\n  </button>\r\n\r\n  <div class=\"header__langs\">\r\n    <app-eav-language-switcher *ngIf=\"hasLanguages$ | async\" [formId]=\"formId\"\r\n      [disabled]=\"!formsAreValid && !allControlsAreDisabled\">\r\n    </app-eav-language-switcher>\r\n  </div>\r\n\r\n  <button mat-button class=\"header__publish-button\" (click)=\"openSaveStatusDialog()\"\r\n    [matTooltip]=\"'SaveMode.' + publishMode + '.Tip' | translate\">\r\n    <span class=\"header__publish-mode\">\r\n      {{ 'SaveMode.Label' | translate }}\r\n      <b>{{ ('SaveMode.' + publishMode | translate: '').toUpperCase() }}</b>\r\n    </span>\r\n  </button>\r\n</mat-card>\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SaveStatusDialogComponent } from '../../eav-material-controls/dialogs/save-status-dialog/save-status-dialog.component';\r\nimport { LanguageService } from '../../shared/store/ngrx-data/language.service';\r\nimport { PublishMode } from '../multi-item-edit-form/multi-item-edit-form.constants';\r\n\r\n@Component({\r\n  selector: 'app-multi-item-edit-form-header',\r\n  templateUrl: './multi-item-edit-form-header.component.html',\r\n  styleUrls: ['./multi-item-edit-form-header.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultiItemEditFormHeaderComponent implements OnInit {\r\n  @Input() formId: number;\r\n  @Input() formsAreValid: boolean;\r\n  @Input() allControlsAreDisabled: boolean;\r\n  @Input() isParentDialog: boolean;\r\n  @Input() publishMode: PublishMode;\r\n  @Output() private closeDialog = new EventEmitter<null>();\r\n  @Output() private setPublishMode = new EventEmitter<PublishMode>();\r\n\r\n  hasLanguages$: Observable<boolean>;\r\n\r\n  constructor(private dialog: MatDialog, private languageService: LanguageService) { }\r\n\r\n  ngOnInit() {\r\n    this.hasLanguages$ = this.languageService.entities$.pipe(map(languages => languages.length > 0));\r\n  }\r\n\r\n  close() {\r\n    this.closeDialog.emit();\r\n  }\r\n\r\n  openSaveStatusDialog() {\r\n    const dialogRef = this.dialog.open(SaveStatusDialogComponent, {\r\n      panelClass: 'c-save-status-dialog',\r\n      autoFocus: false,\r\n      width: '350px',\r\n      data: this.publishMode\r\n    });\r\n    dialogRef.keydownEvents().subscribe(e => {\r\n      const CTRL_S = e.keyCode === 83 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey);\r\n      if (!CTRL_S) { return; }\r\n      e.preventDefault();\r\n    });\r\n    dialogRef.afterClosed().subscribe((res: PublishMode) => {\r\n      if (res == null) { return; }\r\n      this.setPublishMode.emit(res);\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"{\r\n  showDebugInfo: showDebugInfo$ | async,\r\n  items: items$ | async\r\n} as data\">\r\n\r\n  <mat-card fxLayout=\"column\" fxLayoutAlign=\"center start\" [ngClass]=\"{ 'debug-enabled': data.showDebugInfo }\">\r\n    <div class=\"debug-buttons-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <button mat-icon-button [matTooltip]=\"'General.Buttons.Debug' | translate\" (click)=\"toggleDebugInfo()\">\r\n        <mat-icon>offline_bolt</mat-icon>\r\n      </button>\r\n      <div>2sxc {{ sxcVer }}</div>\r\n      <!-- copy of the button to keep 2sxc version text correctly aligned in the middle -->\r\n      <button mat-icon-button class=\"hidden\">\r\n        <mat-icon>offline_bolt</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div *ngIf=\"data.showDebugInfo\" class=\"debug-info-container\">\r\n      <textarea readonly class=\"debug-dump\">{{ data.items | json }}</textarea>\r\n    </div>\r\n  </mat-card>\r\n</ng-container>\r\n","import { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\nimport { ItemService } from '../../shared/store/ngrx-data/item.service';\r\nimport { Item } from '../../shared/models/eav';\r\ndeclare const sxcVersion: string;\r\n\r\n@Component({\r\n  selector: 'app-multi-item-edit-form-debug',\r\n  templateUrl: './multi-item-edit-form-debug.component.html',\r\n  styleUrls: ['./multi-item-edit-form-debug.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultiItemEditFormDebugComponent implements OnInit, OnDestroy {\r\n  @Output() debugInfoOpened = new EventEmitter<boolean>();\r\n\r\n  sxcVer = sxcVersion.substring(0, sxcVersion.lastIndexOf('\\.'));\r\n  showDebugInfo$ = new BehaviorSubject(false);\r\n  items$: Observable<Item[]>;\r\n\r\n  constructor(private itemService: ItemService) { }\r\n\r\n  ngOnInit() {\r\n    this.items$ = this.itemService.selectAllItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.showDebugInfo$.complete();\r\n  }\r\n\r\n  toggleDebugInfo() {\r\n    this.showDebugInfo$.next(!this.showDebugInfo$.value);\r\n    this.debugInfoOpened.emit(this.showDebugInfo$.value);\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<ng-container *ngIf=\"{\r\n  items: items$ | async,\r\n  formsAreValid: formsAreValid$ | async,\r\n  allControlsAreDisabled: allControlsAreDisabled$ | async,\r\n  publishMode: publishMode$ | async,\r\n  reduceSaveButton: reduceSaveButton$ | async,\r\n  debugEnabled: debugEnabled$ | async,\r\n  debugInfoIsOpen: debugInfoIsOpen$ | async,\r\n  hideHeader: hideHeader$ | async,\r\n  slide: slide$ | async,\r\n  eavConfigLoaded: eavConfigLoaded$ | async\r\n} as data\">\r\n\r\n  <div mat-dialog-container style=\"position: relative\" *ngIf=\"data.eavConfigLoaded\"\r\n    (click)=\"toggleDebugEnabled($event)\">\r\n    <div mat-dialog-actions class=\"form-header-container\" [ngClass]=\"{ 'u-display-none': data.hideHeader }\">\r\n      <app-multi-item-edit-form-header class=\"multi-item-edit-form-header\" [formId]=\"formId\"\r\n        [formsAreValid]=\"data.formsAreValid\" [allControlsAreDisabled]=\"data.allControlsAreDisabled\"\r\n        [isParentDialog]=\"isParentDialog\" [publishMode]=\"data.publishMode\" (closeDialog)=\"closeDialog()\"\r\n        (setPublishMode)=\"setPublishMode($event)\">\r\n      </app-multi-item-edit-form-header>\r\n    </div>\r\n    <div style=\"position: relative\">\r\n      <div mat-dialog-content class=\"u-hide-scrollbar\" [ngClass]=\"{\r\n        'debug-enabled': data.debugEnabled,\r\n        'debug-info-is-open': data.debugInfoIsOpen,\r\n        'hide-header-height-fix': data.hideHeader\r\n      }\">\r\n        <div class=\"mdc-layout-grid\">\r\n          <div class=\"mdc-layout-grid__inner\">\r\n            <div #slideable class=\"mdc-layout-grid__cell--span-12\" [ngClass]=\"data.slide\">\r\n              <div *ngFor=\"let item of data.items; trackBy: trackByFn\">\r\n                <app-item-edit-form [item]=\"item\" [formId]=\"formId\" (itemFormValueChange)=\"formValueChange()\">\r\n                </app-item-edit-form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"c-multi-item-dialog__save-container\">\r\n          <div class=\"c-multi-item-dialog__save-button\">\r\n            <button mat-fab class=\"mat-elevation-z24\" [matTooltip]=\"'Form.Buttons.Save.Tip' | translate\" [ngClass]=\"{\r\n              'mat-fab--compact' : data.reduceSaveButton,\r\n              'mat-fab--extended' : !data.reduceSaveButton,\r\n              'mat-fab--disabled' : !data.formsAreValid && !data.allControlsAreDisabled\r\n            }\" (click)=\"saveAll(true)\">\r\n              <mat-icon>done</mat-icon>\r\n              {{ data.reduceSaveButton ? '' : ('Form.Buttons.Save' | translate).toUpperCase() }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <app-multi-item-edit-form-debug mat-dialog-actions *ngIf=\"data.debugEnabled\"\r\n      (debugInfoOpened)=\"debugInfoOpened($event)\">\r\n    </app-multi-item-edit-form-debug>\r\n  </div>\r\n</ng-container>\r\n","// tslint:disable-next-line:max-line-length\r\nimport { Component, OnInit, QueryList, ViewChildren, ChangeDetectorRef, OnDestroy, AfterViewChecked, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Action } from '@ngrx/store';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, zip, of, Subscription, BehaviorSubject, merge, fromEvent } from 'rxjs';\r\nimport { switchMap, map, tap, catchError, take, pairwise, filter, delay } from 'rxjs/operators';\r\nimport 'reflect-metadata';\r\n\r\nimport * as fromItems from '../../shared/store/actions/item.actions';\r\nimport { Item, Language } from '../../shared/models/eav';\r\nimport { ContentTypeService } from '../../shared/store/ngrx-data/content-type.service';\r\nimport { GlobalConfigurationService } from '../../shared/services/global-configuration.service';\r\nimport { ItemEditFormComponent } from '../item-edit-form/item-edit-form.component';\r\nimport { ItemService } from '../../shared/store/ngrx-data/item.service';\r\nimport { EavService } from '../../shared/services/eav.service';\r\nimport { LanguageService } from '../../shared/store/ngrx-data/language.service';\r\nimport { LanguageInstanceService } from '../../shared/store/ngrx-data/language-instance.service';\r\nimport { ValidationMessagesService } from '../../eav-material-controls/validators/validation-messages-service';\r\nimport { JsonItem1 } from '../../shared/models/json-format-v1';\r\nimport { InputTypeService } from '../../shared/store/ngrx-data/input-type.service';\r\nimport { FeatureService } from '../../shared/store/ngrx-data/feature.service';\r\nimport { SnackBarUnsavedChangesComponent } from '../../eav-material-controls/dialogs/snack-bar-unsaved-changes/snack-bar-unsaved-changes.component';\r\nimport { SnackBarSaveErrorsComponent } from '../../eav-material-controls/dialogs/snack-bar-save-errors/snack-bar-save-errors.component';\r\nimport { FieldErrorMessage } from '../../shared/models/eav/field-error-message';\r\nimport { LoadIconsService } from '../../shared/services/load-icons.service';\r\nimport { sortLanguages, calculateIsParentDialog } from './multi-item-edit-form.helpers';\r\nimport { EditRoutingService } from '../../shared/services/edit-routing.service';\r\nimport { angularConsoleLog } from '../../../ng-dialogs/src/app/shared/helpers/angular-console-log.helper';\r\nimport { UnsavedChangesSnackData } from '../../eav-material-controls/dialogs/snack-bar-unsaved-changes/snack-bar-unsaved-changes.models';\r\nimport { SaveErrorsSnackData } from '../../eav-material-controls/dialogs/snack-bar-save-errors/snack-bar-save-errors.models';\r\nimport { PublishMode, PublishModeConstants } from './multi-item-edit-form.constants';\r\nimport { convertUrlToForm } from '../../../ng-dialogs/src/app/shared/helpers/url-prep.helper';\r\nimport { EditParams } from '../../edit-matcher.models';\r\n\r\n@Component({\r\n  selector: 'app-multi-item-edit-form',\r\n  templateUrl: './multi-item-edit-form.component.html',\r\n  styleUrls: ['./multi-item-edit-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultiItemEditFormComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  @ViewChildren(ItemEditFormComponent) private itemEditFormRefs: QueryList<ItemEditFormComponent>;\r\n  @ViewChild('slideable') private slideableRef: ElementRef<HTMLDivElement>;\r\n\r\n  isParentDialog = calculateIsParentDialog(this.route);\r\n  formId = Math.floor(Math.random() * 99999);\r\n  formsAreValid$ = new BehaviorSubject(false);\r\n  allControlsAreDisabled$ = new BehaviorSubject(true);\r\n  items$: Observable<Item[]>;\r\n\r\n  publishMode$ = new BehaviorSubject<PublishMode>('hide');\r\n  reduceSaveButton$ = new BehaviorSubject(false);\r\n  hideHeader$ = this.languageInstanceService.getHideHeader(this.formId);\r\n  debugEnabled$ = this.globalConfigurationService.getDebugEnabled().pipe(\r\n    tap(debugEnabled => {\r\n      if (this.debugInfoIsOpen$.value && !debugEnabled) {\r\n        this.debugInfoIsOpen$.next(false);\r\n      }\r\n    })\r\n  );\r\n  debugInfoIsOpen$ = new BehaviorSubject(false);\r\n  slide$: Observable<string>;\r\n  eavConfigLoaded$ = new BehaviorSubject(false);\r\n\r\n  private formErrors: { [key: string]: string }[] = [];\r\n  private formsAreDirty: { [key: string]: boolean } = {};\r\n  private formSaveAllObservables$: Observable<Action>[] = [];\r\n  private createMode = false;\r\n  private formIsSaved = false;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<MultiItemEditFormComponent>,\r\n    private actions$: Actions,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private contentTypeService: ContentTypeService,\r\n    private globalConfigurationService: GlobalConfigurationService,\r\n    private eavService: EavService,\r\n    private featureService: FeatureService,\r\n    private inputTypeService: InputTypeService,\r\n    private itemService: ItemService,\r\n    private languageService: LanguageService,\r\n    private languageInstanceService: LanguageInstanceService,\r\n    private snackBar: MatSnackBar,\r\n    private translate: TranslateService,\r\n    private validationMessagesService: ValidationMessagesService,\r\n    private loadIconsService: LoadIconsService,\r\n    private route: ActivatedRoute,\r\n    private editRoutingService: EditRoutingService,\r\n  ) {\r\n    this.editRoutingService.init(this.route, this.formId);\r\n    this.loadIconsService.load();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchFormData();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.attachAllSaveFormObservables();\r\n    this.changeDetectorRef.detectChanges(); // 2020-06-19 SPM TODO: remove when form is stable. ATM a whole lot of stuff breaks without it\r\n    this.initSlider();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.reduceSaveButton$.complete();\r\n    this.debugInfoIsOpen$.complete();\r\n    this.formsAreValid$.complete();\r\n    this.allControlsAreDisabled$.complete();\r\n    this.publishMode$.complete();\r\n    this.eavConfigLoaded$.complete();\r\n    this.subscriptions.forEach(subscription => { subscription.unsubscribe(); });\r\n    this.languageInstanceService.removeLanguageInstance(this.formId);\r\n\r\n    if (this.isParentDialog) {\r\n      // clear the rest of the store\r\n      this.languageInstanceService.clearCache();\r\n      this.languageService.clearCache();\r\n      this.itemService.clearCache();\r\n      this.inputTypeService.clearCache();\r\n      this.featureService.clearCache();\r\n      this.contentTypeService.clearCache();\r\n    }\r\n  }\r\n\r\n  toggleDebugEnabled(event: MouseEvent) {\r\n    const CTRL_SHIFT_ALT_CLICK = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.shiftKey && event.altKey;\r\n    if (CTRL_SHIFT_ALT_CLICK) {\r\n      this.globalConfigurationService.toggleDebugEnabled();\r\n    }\r\n  }\r\n\r\n  /** Close form dialog or if close is disabled show a message */\r\n  closeDialog(saveResult?: any) {\r\n    if (this.dialogRef.disableClose) {\r\n      this.snackBarYouHaveUnsavedChanges();\r\n    } else {\r\n      this.dialogRef.close(this.createMode ? saveResult : undefined);\r\n    }\r\n  }\r\n\r\n  setPublishMode(publishMode: PublishMode) {\r\n    // if publish mode is prohibited, revert to default\r\n    if (this.eavService.eavConfig.versioningOptions[publishMode] == null) {\r\n      publishMode = Object.keys(this.eavService.eavConfig.versioningOptions)[0] as PublishMode;\r\n    }\r\n    this.publishMode$.next(publishMode);\r\n  }\r\n\r\n  trackByFn(index: number, item: Item) {\r\n    return item.entity.id === 0 ? item.entity.guid : item.entity.id;\r\n  }\r\n\r\n  formValueChange() {\r\n    this.checkFormsState();\r\n    this.formErrors = [];\r\n  }\r\n\r\n  /** Save all forms */\r\n  saveAll(close: boolean) {\r\n    this.eavService.forceConnectorSave$.next();\r\n    // start gathering submit data with a timeout to let custom components which run outside Angular zone to save their values\r\n    setTimeout(() => {\r\n      if (this.formsAreValid$.value || this.allControlsAreDisabled$.value) {\r\n        this.itemEditFormRefs.forEach(itemEditFormComponent => {\r\n          itemEditFormComponent.form.submitOutside();\r\n        });\r\n        angularConsoleLog('saveAll', close);\r\n        this.snackBar.open(this.translate.instant('Message.Saving'), null, { duration: 2000 });\r\n        if (close) { this.formIsSaved = true; }\r\n      } else {\r\n        this.calculateAllValidationMessages();\r\n        const fieldErrors: FieldErrorMessage[] = [];\r\n        this.formErrors.forEach(formError => {\r\n          Object.keys(formError).forEach(key => {\r\n            fieldErrors.push({ field: key, message: formError[key] });\r\n          });\r\n        });\r\n        const data: SaveErrorsSnackData = {\r\n          fieldErrors,\r\n        };\r\n        this.snackBar.openFromComponent(SnackBarSaveErrorsComponent, {\r\n          data,\r\n          duration: 5000,\r\n        });\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  debugInfoOpened(opened: boolean) {\r\n    this.debugInfoIsOpen$.next(opened);\r\n  }\r\n\r\n  private fetchFormData() {\r\n    const form = convertUrlToForm((this.route.snapshot.params as EditParams).items);\r\n    const editItems = JSON.stringify(form.items);\r\n    this.eavService.fetchFormData(editItems).subscribe(formData => {\r\n      setTimeout(() => { this.reduceSaveButton$.next(true); }, 5000);\r\n      this.itemService.loadItems(formData.Items);\r\n      // we assume that input type and content type data won't change between loading parent and child forms\r\n      this.inputTypeService.addInputTypes(formData.InputTypes);\r\n      this.contentTypeService.addContentTypes(formData.ContentTypes);\r\n      this.featureService.loadFeatures(formData.Features);\r\n\r\n      this.eavService.setEavConfig(formData.Context);\r\n      this.eavConfigLoaded$.next(true);\r\n      const isoLangCode = this.eavService.eavConfig.lang.split('-')[0];\r\n      this.translate.use(isoLangCode);\r\n      // Load language data only for parent dialog to not overwrite languages when opening child dialogs\r\n      if (this.isParentDialog) {\r\n        const langs = this.eavService.eavConfig.langs;\r\n        const eavLangs: Language[] = Object.keys(langs).map(key => ({ key, name: langs[key] }));\r\n        const sortedLanguages = sortLanguages(this.eavService.eavConfig.langPri, eavLangs);\r\n        this.languageService.loadLanguages(sortedLanguages);\r\n      }\r\n      this.languageInstanceService.addLanguageInstance(this.formId, this.eavService.eavConfig.lang,\r\n        this.eavService.eavConfig.langPri, this.eavService.eavConfig.lang, false);\r\n\r\n      const publishMode: PublishMode = formData.DraftShouldBranch\r\n        ? PublishModeConstants.Branch\r\n        : formData.IsPublished ? PublishModeConstants.Show : PublishModeConstants.Hide;\r\n      this.setPublishMode(publishMode);\r\n\r\n      // if current language !== default language check whether default language has value in all items\r\n      if (this.eavService.eavConfig.lang !== this.eavService.eavConfig.langPri) {\r\n        const valuesExistInDefaultLanguage = this.itemService.valuesExistInDefaultLanguage(\r\n          formData.Items.map(item => (item.Entity.Id === 0 ? item.Entity.Guid : item.Entity.Id)),\r\n          this.eavService.eavConfig.langPri,\r\n          this.inputTypeService,\r\n          this.contentTypeService,\r\n        );\r\n        if (!valuesExistInDefaultLanguage) {\r\n          this.languageInstanceService.updateCurrentLanguage(this.formId, this.eavService.eavConfig.langPri);\r\n          const message = this.translate.instant('Message.SwitchedLanguageToDefault', { language: this.eavService.eavConfig.langPri });\r\n          this.snackBar.open(message, null, { duration: 5000 });\r\n        }\r\n      }\r\n\r\n      this.items$ = this.itemService\r\n        .selectItemsByIdList(formData.Items.map(item => (item.Entity.Id === 0 ? item.Entity.Guid : item.Entity.Id)))\r\n        // spm TODO: added a small delay to calculate fields a bit later than languages to make form opening feel smoother.\r\n        // Remove if calculating fields gets faster\r\n        .pipe(delay(0));\r\n      this.items$.pipe(take(1)).subscribe(items => {\r\n        if (items?.length > 0 && items[0].entity.id === 0) {\r\n          this.createMode = true;\r\n        }\r\n      });\r\n\r\n      this.languageChangeSubscribe();\r\n      this.dialogBackdropClickSubscribe();\r\n      this.saveFormMessagesSubscribe();\r\n      this.formSetValueChangeSubscribe();\r\n    });\r\n  }\r\n\r\n  private initSlider() {\r\n    if (this.slideableRef == null || this.slide$ != null) { return; }\r\n    this.slide$ = merge(\r\n      this.languageInstanceService.getCurrentLanguage(this.formId).pipe(\r\n        pairwise(),\r\n        map(([previousLang, currentLang]) => {\r\n          let languages: Language[];\r\n          this.languageService.entities$.pipe(take(1)).subscribe(langs => {\r\n            languages = langs;\r\n          });\r\n          const previousLangIndex = languages.findIndex(lang => lang.key === previousLang);\r\n          const currentLangIndex = languages.findIndex(lang => lang.key === currentLang);\r\n          const slide = (previousLangIndex > currentLangIndex) ? 'previous' : 'next';\r\n          return slide;\r\n        }),\r\n      ),\r\n      fromEvent(this.slideableRef.nativeElement, 'animationend').pipe(\r\n        filter((event: AnimationEvent) => event.animationName === 'move-next' || event.animationName === 'move-previous'),\r\n        map(() => ''),\r\n        delay(0), // small delay because animationend fires a bit too early\r\n      ),\r\n    );\r\n  }\r\n\r\n  private languageChangeSubscribe() {\r\n    this.subscriptions.push(\r\n      this.languageInstanceService.getCurrentLanguage(this.formId).subscribe(language => {\r\n        this.formErrors = []; // on current language change reset form errors\r\n      }),\r\n    );\r\n  }\r\n\r\n  private dialogBackdropClickSubscribe() {\r\n    this.subscriptions.push(\r\n      fromEvent(window, 'beforeunload').subscribe((event: BeforeUnloadEvent) => {\r\n        if (!this.dialogRef.disableClose) { return; }\r\n        event.preventDefault();\r\n        event.returnValue = ''; // fix for Chrome\r\n        this.snackBarYouHaveUnsavedChanges();\r\n      })\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe(event => {\r\n      this.closeDialog();\r\n    });\r\n\r\n    this.dialogRef.keydownEvents().subscribe(event => {\r\n      const ESCAPE = event.keyCode === 27;\r\n      if (ESCAPE) {\r\n        this.closeDialog();\r\n        return;\r\n      }\r\n      const CTRL_S = (navigator.platform.match('Mac') ? event.metaKey : event.ctrlKey) && event.keyCode === 83;\r\n      if (CTRL_S) {\r\n        event.preventDefault();\r\n        this.saveAll(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Display form messages on form success or form error.\r\n   * Imortant: this is subscribed to an all open dialogs, a forms are distinguished by this.formIsSaved variable.\r\n   * TODO: need to distinguished form by forms data\r\n   */\r\n  private saveFormMessagesSubscribe() {\r\n    this.subscriptions.push(\r\n      this.actions$\r\n        .pipe(ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS))\r\n        .subscribe((action: fromItems.SaveItemAttributesValuesSuccessAction) => {\r\n          this.itemService.updateItemId(action.data);\r\n          angularConsoleLog('success END: ', action.data);\r\n          this.snackBar.open(this.translate.instant('Message.Saved'), null, { duration: 2000 });\r\n          this.dialogRef.disableClose = false;\r\n          if (this.formIsSaved) {\r\n            this.closeDialog(action.data);\r\n          }\r\n        })\r\n    );\r\n    this.subscriptions.push(\r\n      this.actions$\r\n        .pipe(ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES_ERROR))\r\n        .subscribe((action: fromItems.SaveItemAttributesValuesErrorAction) => {\r\n          angularConsoleLog('error END', action.error);\r\n          this.snackBar.open('Error', null, { duration: 2000 });\r\n        })\r\n    );\r\n  }\r\n\r\n  private formSetValueChangeSubscribe() {\r\n    this.subscriptions.push(\r\n      this.eavService.formValueChange$.pipe(\r\n        filter(formSet => formSet.formId === this.formId)\r\n      ).subscribe(formSet => {\r\n        this.checkFormsState();\r\n      })\r\n    );\r\n  }\r\n\r\n  private checkFormsState() {\r\n    if (this.itemEditFormRefs?.length > 0 && this.itemEditFormRefs?.first.currentLanguage) {\r\n      let formsAreValid = true;\r\n      let allControlsAreDisabled = true;\r\n      this.formsAreDirty[this.itemEditFormRefs.first.currentLanguage] = false;\r\n\r\n      this.itemEditFormRefs.forEach(itemEditFormComponent => {\r\n        if (\r\n          itemEditFormComponent.form.form.invalid === true\r\n          && (!itemEditFormComponent.item.header.Group || itemEditFormComponent.item.header.Group.SlotCanBeEmpty === false)\r\n        ) {\r\n          formsAreValid = false;\r\n        }\r\n        if (itemEditFormComponent.form.form.dirty) {\r\n          this.formsAreDirty[itemEditFormComponent.currentLanguage] = true;\r\n        }\r\n        if (!itemEditFormComponent.checkAreAllControlsDisabled()) {\r\n          allControlsAreDisabled = false;\r\n        }\r\n      });\r\n\r\n      if (this.formsAreValid$.value !== formsAreValid) {\r\n        this.formsAreValid$.next(formsAreValid);\r\n      }\r\n\r\n      if (this.allControlsAreDisabled$.value !== allControlsAreDisabled) {\r\n        this.allControlsAreDisabled$.next(allControlsAreDisabled);\r\n      }\r\n    }\r\n    this.dialogRef.disableClose = this.areFormsDirtyAnyLanguage();\r\n  }\r\n\r\n  /** Determine is from is dirty on any language. If any form is dirty we need to ask to save */\r\n  private areFormsDirtyAnyLanguage() {\r\n    let isDirty = false;\r\n    const langKeys = Object.keys(this.formsAreDirty);\r\n    for (const langKey of langKeys) {\r\n      if (this.formsAreDirty[langKey] === true) {\r\n        isDirty = true;\r\n        break;\r\n      }\r\n    }\r\n    return isDirty;\r\n  }\r\n\r\n  /** Fill in all error validation messages from all forms */\r\n  private calculateAllValidationMessages() {\r\n    this.formErrors = [];\r\n    this.itemEditFormRefs?.forEach(itemEditFormComponent => {\r\n      if (!itemEditFormComponent.form.form.invalid) { return; }\r\n      this.formErrors.push(this.validationMessagesService.validateForm(itemEditFormComponent.form.form, false));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach all save form observables from child itemEditFormComponent and\r\n   * subscribe to all observables with one subscribe (observable zip function).\r\n   * It also initially checks the status of the form (invalid, dirty ...)\r\n   */\r\n  private attachAllSaveFormObservables() {\r\n    if (this.formSaveAllObservables$.length === 0) {\r\n      this.itemEditFormRefs?.forEach(itemEditFormComponent => {\r\n        this.formSaveAllObservables$.push(itemEditFormComponent.formSaveObservable());\r\n      });\r\n\r\n      // only called once when a formSaveAllObservables array is filled\r\n      if (this.formSaveAllObservables$.length > 0) {\r\n        this.saveFormSubscribe();\r\n        this.checkFormsState();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** With zip function look all forms submit observables and when all finish save all data */\r\n  private saveFormSubscribe() {\r\n    this.subscriptions.push(\r\n      zip(...this.formSaveAllObservables$)\r\n        .pipe(\r\n          switchMap((actions: fromItems.SaveItemAttributesValuesAction[]) => {\r\n            angularConsoleLog('ZIP ACTIONS ITEM: ', JsonItem1.create(actions[0].item));\r\n            const allItems: JsonItem1[] = [];\r\n            actions.forEach(action => {\r\n              const item = JsonItem1.create(action.item);\r\n              // do not try to save item which doesn't have any fields, nothing could have changed about it\r\n              if (Object.keys(item.Entity.Attributes).length > 0) {\r\n                allItems.push(item);\r\n              }\r\n            });\r\n            const body = {\r\n              Items: allItems,\r\n              IsPublished: this.publishMode$.value === PublishModeConstants.Show,\r\n              DraftShouldBranch: this.publishMode$.value === PublishModeConstants.Branch,\r\n            };\r\n            return this.eavService.saveFormData(JSON.stringify(body)).pipe(\r\n              map(data => {\r\n                this.eavService.saveItemSuccess(data);\r\n              }),\r\n              tap(data => angularConsoleLog('working'))\r\n            );\r\n          }),\r\n          catchError(err => of(this.eavService.saveItemError(err)))\r\n        )\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  /** Open snackbar when snack bar not saved */\r\n  public snackBarYouHaveUnsavedChanges() {\r\n    const data: UnsavedChangesSnackData = {\r\n      save: false,\r\n    };\r\n    const snackBarRef = this.snackBar.openFromComponent(SnackBarUnsavedChangesComponent, {\r\n      data,\r\n      duration: 5000,\r\n    });\r\n\r\n    snackBarRef.onAction().subscribe(() => {\r\n      if (snackBarRef.containerInstance.snackBarConfig.data.save) {\r\n        this.saveAll(true);\r\n      } else {\r\n        this.dialogRef.disableClose = false;\r\n        this.closeDialog();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { ElementEventListener } from '../../../shared/element-event-listener.model';\r\ndeclare const draggingClass: string;\r\ndeclare const windowBodyTimeouts: number[];\r\n\r\nexport class DropzoneDraggingHelper {\r\n  private eventListeners: ElementEventListener[] = [];\r\n\r\n  constructor(private zone: NgZone) { }\r\n\r\n  /** Starts listening for dragover and drop events on a given element */\r\n  attach(htmlEl: HTMLElement) {\r\n    this.zone.runOutsideAngular(() => {\r\n      htmlEl.addEventListener('dragover', dragoverListener, { passive: true });\r\n      htmlEl.addEventListener('drop', dropListener, { passive: true });\r\n\r\n      this.eventListeners.push(\r\n        { element: htmlEl, type: 'dragover', listener: dragoverListener },\r\n        { element: htmlEl, type: 'drop', listener: dropListener },\r\n      );\r\n\r\n      function dragoverListener() {\r\n        clearTimeouts(windowBodyTimeouts); // clear timeouts from global array of timeouts which clear draggingClass from body\r\n        document.body.classList.add(draggingClass);\r\n      }\r\n      function dropListener() {\r\n        document.body.classList.remove(draggingClass);\r\n      }\r\n      function clearTimeouts(timeoutsArray: number[]) {\r\n        for (const timeout of timeoutsArray) {\r\n          clearTimeout(timeout);\r\n        }\r\n        timeoutsArray.splice(0, timeoutsArray.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Removes event listeners from registered elements */\r\n  detach() {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.eventListeners.forEach(eventListener => {\r\n        const element = eventListener.element;\r\n        const type = eventListener.type;\r\n        const listener = eventListener.listener;\r\n        element.removeEventListener(type, listener);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n"],"sourceRoot":"webpack:///"}