{"version":3,"file":"projects_eav-ui_src_app_shared_components_dialog-entry_dialog-entry_component_ts.15902870bec3568d.js","mappings":"mPAgBO,IAAMA,EAAoB,MAA3B,MAAOA,EAIXC,YACUC,EACAC,EACAC,EACAC,EACAC,EACAC,GALAC,KAAAN,SACAM,KAAAL,mBACAK,KAAAJ,SACAI,KAAAH,QACAG,KAAAF,UACAE,KAAAD,oBAER,MAAME,EAAaD,KAAKJ,OAAOM,uBAC/BF,KAAKG,WAAaF,GAAYG,QAAQC,OAAS,EACjD,CAEAC,WACE,MAAMC,EAA6BP,KAAKH,MAAMW,SAASC,KAAKf,OAC5D,GAAoB,MAAhBa,EACF,MAAM,IAAIG,MAAM,wFAElBC,OAAc,eAAgBJ,EAAaK,KAAM,cAAeZ,KAAKF,QAAQe,GAAI,WAAYb,KAAKF,SAElGS,EAAaO,eAAeC,KAAKC,IAG1BhB,KAAKN,OAAeuB,sBAAyBjB,KAAKN,OAAewB,eAClElB,KAAKN,OAAewB,eAAqCC,cAAcC,UAAU,KACjFpB,KAAKqB,oBAAoBd,EAAcS,EAAS,GAGlDhB,KAAKqB,oBAAoBd,EAAcS,EAAS,EAGtD,CAEAM,cACEtB,KAAKuB,UAAUC,OACjB,CAEQH,oBAAoBd,EAA4BS,GAClDT,EAAakB,aACfzB,KAAKF,QAAQ4B,KAAK1B,KAAKH,OAGzBG,KAAKuB,UAAYvB,KAAKN,OAAOiC,KAAKX,EAAW,CAC3CY,WAAW,EACXC,cAAe,kBACfC,mBAAmB,EACnBrB,KAAMT,KAAKG,WACX4B,WAAY,CACV,eACA,gBAAgBxB,EAAayB,YAC7BzB,EAAa0B,cAAgB,iBAAmB,kBAC5C1B,EAAawB,WAAaxB,EAAawB,WAAa,IAI1DG,SAAU,CAAEC,IAAK,KACjBxC,iBAAkBK,KAAKL,mBAGzBK,KAAKuB,UAAUa,cAAchB,UAAWX,KACtCE,OAAc,qBAAsBJ,EAAaK,KAAM,QAASH,GAEhE,MAAM4B,EAAS5B,EACf,GAA2B,MAAvB4B,GAAQC,YAKZ,GAAItC,KAAKH,MAAM0C,aAAaC,QAAU,EACpC,IACEC,OAAOC,OAAOC,MAAMC,WAAWpB,cACjB,MAKhBxB,KAAKJ,OAAOiD,SAAS,CAAC,MADpB7C,KAAKH,MAAMW,SAASsC,IAAIN,OAAS,EACN,CAAEO,WAAY/C,KAAKH,MAAM6C,OAAQrC,MAAOI,GAExC,CAAEsC,WAAY/C,KAAKH,MAAM6C,OAAOA,OAAQrC,MAAOI,SAd5ET,KAAKJ,OAAOiD,SAAS,CAACR,EAAOC,aAcqD,GAItFtC,KAAKD,kBAAkBiD,cACzB,CAACC,SAAAjD,KAAA,mBAAAkD,iBAtFU1D,GAAoB2D,MAAAC,MAAAD,mBAAAE,MAAAF,MAAAE,MAAAF,MAAAG,KAAAH,aAAA,EAAAF,SAAAjD,KAAA,UAAAuD,EAAAC,IAAA,MAApBhE,EAAoBiE,UAAA,uBAAAC,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,WAApBtE,CAAoB","names":["DialogEntryComponent","constructor","dialog","viewContainerRef","router","route","context","changeDetectorRef","this","navigation","getCurrentNavigation","dialogData","extras","state","ngOnInit","dialogConfig","snapshot","data","Error","consoleLogDev","name","id","getComponent","then","component","_dialogAnimatingOpen","_lastDialogRef","afterOpened","subscribe","openDialogComponent","ngOnDestroy","dialogRef","close","initContext","init","open","autoFocus","backdropClass","closeOnNavigation","panelClass","panelSize","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","length","window","parent","$2sxc","totalPopup","navigate","url","relativeTo","markForCheck","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_2__","In1","selectors","decls","vars","template","rf","ctx"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/shared/models';\r\nimport { consoleLogDev } from '../../helpers/console-log-angular.helper';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  styleUrls: ['./dialog-entry.component.scss'],\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  private dialogData: Record<string, any>;\r\n  private dialogRef: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null) {\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n    }\r\n    consoleLogDev('Open dialog:', dialogConfig.name, 'Context id:', this.context.id, 'Context:', this.context);\r\n\r\n    dialogConfig.getComponent().then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      if ((this.dialog as any)._dialogAnimatingOpen && (this.dialog as any)._lastDialogRef) {\r\n        ((this.dialog as any)._lastDialogRef as MatDialogRef<any>).afterOpened().subscribe(() => {\r\n          this.openDialogComponent(dialogConfig, component);\r\n        });\r\n      } else {\r\n        this.openDialogComponent(dialogConfig, component);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    if (dialogConfig.initContext) {\r\n      this.context.init(this.route);\r\n    }\r\n\r\n    this.dialogRef = this.dialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe((data: any) => {\r\n      consoleLogDev('Dialog was closed:', dialogConfig.name, 'Data:', data);\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0) {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      } else {\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n      }\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}