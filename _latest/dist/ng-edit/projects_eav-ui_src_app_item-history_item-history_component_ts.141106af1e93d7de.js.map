{"version":3,"file":"projects_eav-ui_src_app_item-history_item-history_component_ts.141106af1e93d7de.js","mappings":"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","names":["_c0","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","providedIn","factory","overlay","inject","Overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","useFactory","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","passive","MatTooltip","_elementRef","ElementRef","_ngZone","NgZone","_platform","Platform","_ariaDescriber","AriaDescriber","_focusMonitor","FocusMonitor","_dir","Directionality","_injector","Injector","_viewContainerRef","ViewContainerRef","_defaultOptions","optional","_overlayRef","_tooltipInstance","_portal","_position","_positionAtOrigin","_disabled","_tooltipClass","_viewInitialized","_pointerExitEventsInitialized","_tooltipComponent","TooltipComponent","_viewportMargin","_currentPosition","_cssClassPrefix","_ariaDescriptionPending","_dirSubscribed","position","this","value","_updatePosition","show","updatePosition","positionAtOrigin","coerceBooleanProperty","_detach","disabled","isDisabled","hide","_setupPointerEnterEventsIfNeeded","_syncAriaDescription","message","_showDelay","coerceNumberProperty","_hideDelay","_mouseLeaveHideDelay","touchGestures","_message","oldMessage","String","trim","_isTooltipVisible","_updateTooltipMessage","tooltipClass","_setTooltipClass","_passiveListeners","_touchstartTimeout","_destroyed","Subject","_isDestroyed","constructor","defaultOptions","ngAfterViewInit","monitor","pipe","takeUntil","subscribe","origin","run","ngOnDestroy","nativeElement","clearTimeout","dispose","forEach","event","listener","removeEventListener","length","next","complete","removeDescription","stopMonitoring","delay","_cancelPendingAnimations","overlayRef","_createOverlay","ComponentPortal","instance","attach","_triggerElement","afterHidden","isVisible","toggle","undefined","existingStrategy","getConfig","positionStrategy","_origin","scrollableAncestors","get","ScrollDispatcher","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","change","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","direction","panelClass","scrollStrategy","detachments","outsidePointerEvents","_handleBodyInteraction","keydownEvents","keyCode","ESCAPE","hasModifierKey","preventDefault","stopPropagation","disableTooltipInteractivity","addPanelClass","hasAttached","detach","_getOrigin","_getOverlayPosition","withPositions","_addOffset","main","fallback","isLtr","originY","offsetY","originX","offsetX","originPosition","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","afterNextRender","injector","newPosition","classPrefix","removePanelClass","_platformSupportsMouseEvents","push","point","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","touch","targetTouches","clientX","clientY","setTimeout","touchLongPressShowDelay","_addListeners","exitListeners","newTarget","relatedTarget","overlayElement","contains","_wheelListener","touchendListener","listeners","addEventListener","IOS","ANDROID","elementUnderPointer","DOCUMENT","elementFromPoint","element","gestures","style","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","write","describe","static","__ngFactoryType__","i0","type","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","inputs","exportAs","_changeDetectorRef","ChangeDetectorRef","_isMultiline","_showTimeoutId","_hideTimeoutId","_animationsDisabled","_tooltip","_closeOnInteraction","_isVisible","_onHide","_showAnimation","_hideAnimation","animationMode","ANIMATION_MODULE_TYPE","_toggleVisibility","markForCheck","_handleMouseLeave","_finalizeAnimation","_onShow","_isTooltipMultiline","rect","getBoundingClientRect","height","width","_handleAnimationEnd","animationName","toVisible","tooltip","showClass","hideClass","classList","remove","add","getComputedStyle","styles","getPropertyValue","viewQuery","_t","first","$event","decls","vars","consts","template","_r1","dependencies","NgClass","encapsulation","changeDetection","MatTooltipModule","providers","imports","A11yModule","OverlayModule","MatCommonModule","CdkScrollableModule","MatPaginator_Conditional_2_Conditional_3_For_4_Template","pageSizeOption_r3","$implicit","MatPaginator_Conditional_2_Conditional_3_Template","ctx_r1","_changePageSize","selectRef_r4","open","_formFieldAppearance","color","pageSize","_pageSizeLabelId","selectConfig","disableOptionCentering","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","MatPaginator_Conditional_2_Template","_intl","itemsPerPageLabel","MatPaginator_Conditional_6_Template","_r5","_buttonClicked","_previousButtonsDisabled","firstPageLabel","MatPaginator_Conditional_13_Template","_r6","getNumberOfPages","_nextButtonsDisabled","lastPageLabel","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","Math","max","min","token","ɵfac","MAT_PAGINATOR_INTL_PROVIDER","Optional","SkipSelf","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginator","_IdGenerator","getId","_intlChanges","_isInitialized","_initializedStream","ReplaySubject","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","map","p","numberAttribute","hidePageSize","showFirstLastButtons","EventEmitter","initialized","defaults","formFieldAppearance","ngOnInit","unsubscribe","nextPage","hasNextPage","_navigate","previousPage","hasPreviousPage","firstPage","lastPage","maxPageIndex","ceil","previousPageIndex","floor","_emitPageEvent","slice","indexOf","sort","a","b","emit","index","previousIndex","targetIndex","booleanAttribute","outputs","MatFormField","MatSelect","MatOption","MatIconButton","MatPaginatorModule","MatButtonModule","MatSelectModule","calcHistoryAttributes","version","versions","compareWith","currentDataTypes","JSON","parse","Json","Entity","Attributes","previousItem","findLive","liveVersion","VersionNumber","find","v","previousDataTypes","allAttributes","Object","entries","dataType","attributes","keys","attributeName","name","attribute","currentValues","previousValues","calcChangeType","values","calcHistoryValues","allLangKeys","lang","includes","langKey","currentValue","previousValue","oldValue","sortObjectKeys","sortKeysAlphabetically","stringify","obj","reduce","acc","key","e","VersionsService","HttpServiceBase","fetchVersions","entityId","initial","postSignal","params","appId","restore","changeId","http","post","apiUrl","toString","compareChange","attribute_r6","value_r7","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_9_For_2_Conditional_4_Template","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_9_For_2_Conditional_5_Template","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_9_For_2_Template","historyItem_r4","attributeExpandedToggle","versionNumber","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_5_Template","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Conditional_9_Template","expandedAttributes","_r8","changeSetId","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_For_1_Template","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_Conditional_3_Template","isLastVersion","_r3","panelExpandedChange","ItemHistoryComponent_Conditional_14_For_2_Conditional_8_Template","expandedPanels","timeStamp","getLocalDate","ItemHistoryComponent_Conditional_14_For_2_Template","historyItems","_r9","pageChange","ItemHistoryComponent","#versionsService","dialog","route","snackBar","hostClass","transient","#itemId","parseInt","snapshot","paramMap","#page","signal","signalObj","computedObj","getHistoryItems","calcHistoryItems","filteredVersions","ChangeSetId","historyId","HistoryId","TimeStamp","user","User","some","newCompareWith","set","expand","date","Date","newPage","_","duration","close","refreshEdit","i1","i2","i3","ItemHistoryComponent_Conditional_10_Template","ItemHistoryComponent_Conditional_12_Template","ItemHistoryComponent_Conditional_13_Template","ItemHistoryComponent_Conditional_14_Template","ItemHistoryComponent_Conditional_15_Template","tmp_0_0","tmp_2_0","tmp_3_0","tmp_4_0","i4","MatIconModule","i5","MatFormFieldModule","i6","i7","i8","MatOptionModule","MatExpansionModule","i9","i10","DatePipe","TippyDirective"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2022/tooltip.mjs","./node_modules/@angular/material/fesm2022/paginator.mjs","./projects/eav-ui/src/app/item-history/item-history.helpers.ts","./projects/eav-ui/src/app/item-history/services/versions.service.ts","./projects/eav-ui/src/app/item-history/item-history.component.html","./projects/eav-ui/src/app/item-history/item-history.component.ts"],"sourcesContent":["import { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, NgZone, Injector, ViewContainerRef, afterNextRender, Directive, Input, ChangeDetectorRef, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { DOCUMENT, NgClass } from '@angular/common';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, ScrollDispatcher, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _ariaDescriber = inject(AriaDescriber);\n    _focusMonitor = inject(FocusMonitor);\n    _dir = inject(Directionality);\n    _injector = inject(Injector);\n    _viewContainerRef = inject(ViewContainerRef);\n    _defaultOptions = inject(MAT_TOOLTIP_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _overlayRef;\n    _tooltipInstance;\n    _portal;\n    _position = 'below';\n    _positionAtOrigin = false;\n    _disabled = false;\n    _tooltipClass;\n    _viewInitialized = false;\n    _pointerExitEventsInitialized = false;\n    _tooltipComponent = TooltipComponent;\n    _viewportMargin = 8;\n    _currentPosition;\n    _cssClassPrefix = 'mat-mdc';\n    _ariaDescriptionPending;\n    _dirSubscribed = false;\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const isDisabled = coerceBooleanProperty(value);\n        if (this._disabled !== isDisabled) {\n            this._disabled = isDisabled;\n            // If tooltip is disabled, hide immediately.\n            if (isDisabled) {\n                this.hide(0);\n            }\n            else {\n                this._setupPointerEnterEventsIfNeeded();\n            }\n            this._syncAriaDescription(this.message);\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    _showDelay;\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    _hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     */\n    touchGestures = 'auto';\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        const oldMessage = this._message;\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n        }\n        this._syncAriaDescription(oldMessage);\n    }\n    _message = '';\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /** Manually-bound passive event listeners. */\n    _passiveListeners = [];\n    /** Timer started at the last `touchstart` event. */\n    _touchstartTimeout = null;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Whether ngOnDestroyed has been called. */\n    _isDestroyed = false;\n    constructor() {\n        const defaultOptions = this._defaultOptions;\n        if (defaultOptions) {\n            this._showDelay = defaultOptions.showDelay;\n            this._hideDelay = defaultOptions.hideDelay;\n            if (defaultOptions.position) {\n                this.position = defaultOptions.position;\n            }\n            if (defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = defaultOptions.positionAtOrigin;\n            }\n            if (defaultOptions.touchGestures) {\n                this.touchGestures = defaultOptions.touchGestures;\n            }\n            if (defaultOptions.tooltipClass) {\n                this.tooltipClass = defaultOptions.tooltipClass;\n            }\n        }\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        // Optimization: Do not call clearTimeout unless there is an active timer.\n        if (this._touchstartTimeout) {\n            clearTimeout(this._touchstartTimeout);\n        }\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._injector\n            .get(ScrollDispatcher)\n            .getAncestorScrollContainers(this._elementRef);\n        const overlay = this._injector.get(Overlay);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = overlay\n            .position()\n            .flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._injector.get(MAT_TOOLTIP_SCROLL_STRATEGY)(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        if (!this._dirSubscribed) {\n            this._dirSubscribed = true;\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._overlayRef) {\n                    this._updatePosition(this._overlayRef);\n                }\n            });\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            afterNextRender(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            }, {\n                injector: this._injector,\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    if (this._touchstartTimeout) {\n                        clearTimeout(this._touchstartTimeout);\n                    }\n                    const DEFAULT_LONGPRESS_DELAY = 500;\n                    this._touchstartTimeout = setTimeout(() => {\n                        this._touchstartTimeout = null;\n                        this.show(undefined, origin);\n                    }, this._defaultOptions?.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                if (this._touchstartTimeout) {\n                    clearTimeout(this._touchstartTimeout);\n                }\n                this.hide(this._defaultOptions?.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._injector\n                .get(DOCUMENT)\n                .elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    /** Updates the tooltip's ARIA description based on it current state. */\n    _syncAriaDescription(oldMessage) {\n        if (this._ariaDescriptionPending) {\n            return;\n        }\n        this._ariaDescriptionPending = true;\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, oldMessage, 'tooltip');\n        // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n        // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n        // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n        // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n        if (!this._isDestroyed) {\n            afterNextRender({\n                write: () => {\n                    this._ariaDescriptionPending = false;\n                    if (this.message && !this.disabled) {\n                        this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                    }\n                },\n            }, { injector: this._injector });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatTooltip, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.0\", type: MatTooltip, isStandalone: true, selector: \"[matTooltip]\", inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    /* Whether the tooltip text overflows to multiple lines */\n    _isMultiline = false;\n    /** Message to display in the tooltip */\n    message;\n    /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n    tooltipClass;\n    /** The timeout ID of any current timer set to show the tooltip */\n    _showTimeoutId;\n    /** The timeout ID of any current timer set to hide the tooltip */\n    _hideTimeoutId;\n    /** Element that caused the tooltip to open. */\n    _triggerElement;\n    /** Amount of milliseconds to delay the closing sequence. */\n    _mouseLeaveHideDelay;\n    /** Whether animations are currently disabled. */\n    _animationsDisabled;\n    /** Reference to the internal tooltip element. */\n    _tooltip;\n    /** Whether interactions on the page should close the tooltip */\n    _closeOnInteraction = false;\n    /** Whether the tooltip is currently visible. */\n    _isVisible = false;\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    _onHide = new Subject();\n    /** Name of the show animation and the class that toggles it. */\n    _showAnimation = 'mat-mdc-tooltip-show';\n    /** Name of the hide animation and the class that toggles it. */\n    _hideAnimation = 'mat-mdc-tooltip-hide';\n    constructor() {\n        const animationMode = inject(ANIMATION_MODULE_TYPE, { optional: true });\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        if (this._isVisible !== isVisible) {\n            this._isVisible = isVisible;\n            this._changeDetectorRef.markForCheck();\n        }\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: TooltipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.0\", type: TooltipComponent, isStandalone: true, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mdc-plain-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mdc-plain-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mdc-plain-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mdc-plain-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mdc-plain-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mdc-plain-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, imports: [NgClass], template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mdc-plain-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mdc-plain-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mdc-plain-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mdc-plain-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mdc-plain-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mdc-plain-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"] }]\n        }], ctorParameters: () => [], propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n * @deprecated No longer being used, to be removed.\n * @breaking-change 21.0.0\n */\nconst matTooltipAnimations = {\n    // Represents:\n    // trigger('state', [\n    //   state('initial, void, hidden', style({opacity: 0, transform: 'scale(0.8)'})),\n    //   state('visible', style({transform: 'scale(1)'})),\n    //   transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    //   transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    // ])\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: {\n        type: 7,\n        name: 'state',\n        definitions: [\n            {\n                type: 0,\n                name: 'initial, void, hidden',\n                styles: { type: 6, styles: { opacity: 0, transform: 'scale(0.8)' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'visible',\n                styles: { type: 6, styles: { transform: 'scale(1)' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: '* => visible',\n                animation: { type: 4, styles: null, timings: '150ms cubic-bezier(0, 0, 0.2, 1)' },\n                options: null,\n            },\n            {\n                type: 1,\n                expr: '* => hidden',\n                animation: { type: 4, styles: null, timings: '75ms cubic-bezier(0.4, 0, 1, 1)' },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nclass MatTooltipModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.0\", ngImport: i0, type: MatTooltipModule, imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, inject, ChangeDetectorRef, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     */\n    changes = new Subject();\n    /** A label for the page size selector. */\n    itemsPerPageLabel = 'Items per page:';\n    /** A label for the button that increments the current page. */\n    nextPageLabel = 'Next page';\n    /** A label for the button that decrements the current page. */\n    previousPageLabel = 'Previous page';\n    /** A label for the button that moves to the first page. */\n    firstPageLabel = 'First page';\n    /** A label for the button that moves to the last page. */\n    lastPageLabel = 'Last page';\n    /** A label for the range of items within the current page and the length of the whole list. */\n    getRangeLabel = (page, pageSize, length) => {\n        if (length == 0 || pageSize == 0) {\n            return `0 of ${length}`;\n        }\n        length = Math.max(length, 0);\n        const startIndex = page * pageSize;\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n        return `${startIndex + 1} – ${endIndex} of ${length}`;\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n    /** The current page index. */\n    pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * @breaking-change 8.0.0 To be made into a required property.\n     */\n    previousPageIndex;\n    /** The current page size. */\n    pageSize;\n    /** The current total number of items being paged. */\n    length;\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n    _intl = inject(MatPaginatorIntl);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    /** If set, styles the \"page size\" form field with the designated style. */\n    _formFieldAppearance;\n    /** ID for the DOM node containing the paginator's items per page label. */\n    _pageSizeLabelId = inject(_IdGenerator).getId('mat-paginator-page-size-label-');\n    _intlChanges;\n    _isInitialized = false;\n    _initializedStream = new ReplaySubject(1);\n    /**\n     * Theme color of the underlying form controls. This API is supported in M2\n     * themes only,it has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/paginator/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(value || 0, 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    _pageIndex = 0;\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = value || 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    _length = 0;\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(value || 0, 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    _pageSize;\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n        this._updateDisplayedPageSizeOptions();\n    }\n    _pageSizeOptions = [];\n    /** Whether to hide the page size selection UI from the user. */\n    hidePageSize = false;\n    /** Whether to show the first/last buttons UI to the user. */\n    showFirstLastButtons = false;\n    /** Used to configure the underlying `MatSelect` inside the paginator. */\n    selectConfig = {};\n    /** Whether the paginator is disabled. */\n    disabled = false;\n    /** Event emitted when the paginator changes the page size or page index. */\n    page = new EventEmitter();\n    /** Displayed set of page size options. Will be sorted and include current page size. */\n    _displayedPageSizeOptions;\n    /** Emits when the paginator is initialized. */\n    initialized = this._initializedStream;\n    constructor() {\n        const _intl = this._intl;\n        const defaults = inject(MAT_PAGINATOR_DEFAULT_OPTIONS, {\n            optional: true,\n        });\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this.hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this.showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._initializedStream.next();\n    }\n    ngOnDestroy() {\n        this._initializedStream.complete();\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (this.hasNextPage()) {\n            this._navigate(this.pageIndex + 1);\n        }\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (this.hasPreviousPage()) {\n            this._navigate(this.pageIndex - 1);\n        }\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (this.hasPreviousPage()) {\n            this._navigate(0);\n        }\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (this.hasNextPage()) {\n            this._navigate(this.getNumberOfPages() - 1);\n        }\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._isInitialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    /** Navigates to a specific page index. */\n    _navigate(index) {\n        const previousIndex = this.pageIndex;\n        if (index !== previousIndex) {\n            this.pageIndex = index;\n            this._emitPageEvent(previousIndex);\n        }\n    }\n    /**\n     * Callback invoked when one of the navigation buttons is called.\n     * @param targetIndex Index to which the paginator should navigate.\n     * @param isDisabled Whether the button is disabled.\n     */\n    _buttonClicked(targetIndex, isDisabled) {\n        // Note that normally disabled buttons won't dispatch the click event, but the paginator ones\n        // do, because we're using `disabledInteractive` to allow them to be focusable. We need to\n        // check here to avoid the navigation.\n        if (!isDisabled) {\n            this._navigate(targetIndex);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatPaginator, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.2.0\", type: MatPaginator, isStandalone: true, selector: \"mat-paginator\", inputs: { color: \"color\", pageIndex: [\"pageIndex\", \"pageIndex\", numberAttribute], length: [\"length\", \"length\", numberAttribute], pageSize: [\"pageSize\", \"pageSize\", numberAttribute], pageSizeOptions: \"pageSizeOptions\", hidePageSize: [\"hidePageSize\", \"hidePageSize\", booleanAttribute], showFirstLastButtons: [\"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute], selectConfig: \"selectConfig\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { page: \"page\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"_buttonClicked(0, _previousButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"_buttonClicked(pageIndex - 1, _previousButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"_buttonClicked(pageIndex + 1, _nextButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"_buttonClicked(getNumberOfPages() - 1, _nextButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-range-actions .mat-mdc-icon-button[aria-disabled]{color:GrayText}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: MatSelect, selector: \"mat-select\", inputs: [\"aria-describedby\", \"panelClass\", \"disabled\", \"disableRipple\", \"tabIndex\", \"hideSingleSelectionIndicator\", \"placeholder\", \"required\", \"multiple\", \"disableOptionCentering\", \"compareWith\", \"value\", \"aria-label\", \"aria-labelledby\", \"errorStateMatcher\", \"typeaheadDebounceInterval\", \"sortComparator\", \"id\", \"panelWidth\", \"canSelectNullableOptions\"], outputs: [\"openedChange\", \"opened\", \"closed\", \"selectionChange\", \"valueChange\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: MatOption, selector: \"mat-option\", inputs: [\"value\", \"id\", \"disabled\"], outputs: [\"onSelectionChange\"], exportAs: [\"matOption\"] }, { kind: \"component\", type: MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatTooltip, selector: \"[matTooltip]\", inputs: [\"matTooltipPosition\", \"matTooltipPositionAtOrigin\", \"matTooltipDisabled\", \"matTooltipShowDelay\", \"matTooltipHideDelay\", \"matTooltipTouchGestures\", \"matTooltip\", \"matTooltipClass\"], exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip], template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"_buttonClicked(0, _previousButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"_buttonClicked(pageIndex - 1, _previousButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"_buttonClicked(pageIndex + 1, _nextButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"_buttonClicked(getNumberOfPages() - 1, _nextButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-range-actions .mat-mdc-icon-button[aria-disabled]{color:GrayText}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], length: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSize: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showFirstLastButtons: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectConfig: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], page: [{\n                type: Output\n            }] } });\n\nclass MatPaginatorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.0\", ngImport: i0, type: MatPaginatorModule, imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator], exports: [MatPaginator] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n                    exports: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import { CompareWith } from './models/compare-with.model';\r\nimport { HistoryAttribute, HistoryAttributeValue, HistoryItem } from './models/history-item.model';\r\nimport { Version, VersionEntityAttributeValues, VersionJsonParsed } from './models/version.model';\r\n\r\nexport function getHistoryItems(versions: Version[], page: number, pageSize: number, compareWith: CompareWith) {\r\n  if (versions == null || page == null || pageSize == null || compareWith == null)\r\n    return null;\r\n  const filtered = versions.slice((page - 1) * pageSize, page * pageSize);\r\n\r\n  const historyItems = calcHistoryItems(filtered, versions, compareWith);\r\n  return historyItems;\r\n}\r\n\r\nfunction calcHistoryItems(filteredVersions: Version[], versions: Version[], compareWith: CompareWith) {\r\n  return filteredVersions.map(version => ({\r\n    changeSetId: version.ChangeSetId,\r\n    attributes: calcHistoryAttributes(version, versions, compareWith),\r\n    historyId: version.HistoryId,\r\n    timeStamp: version.TimeStamp,\r\n    user: version.User,\r\n    versionNumber: version.VersionNumber,\r\n    isLastVersion: !versions.some(v => v.VersionNumber === version.VersionNumber + 1),\r\n  } satisfies HistoryItem));\r\n}\r\n\r\nfunction calcHistoryAttributes(version: Version, versions: Version[], compareWith: CompareWith) {\r\n  const currentDataTypes = (JSON.parse(version.Json) as VersionJsonParsed).Entity.Attributes;\r\n  const previousItem = compareWith === 'live' ? findLive(versions) : versions.find(v => v.VersionNumber === version.VersionNumber - 1);\r\n  const previousDataTypes = previousItem ? (JSON.parse(previousItem.Json) as VersionJsonParsed).Entity.Attributes : null;\r\n\r\n  const allAttributes: { name: string, dataType: string }[] = [];\r\n  if (currentDataTypes != null) {\r\n    Object.entries(currentDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null)\r\n          return;\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n  if (previousDataTypes != null) {\r\n    Object.entries(previousDataTypes).forEach(([dataType, attributes]) => {\r\n      Object.keys(attributes).forEach(attributeName => {\r\n        if (allAttributes.find(a => a.name === attributeName && a.dataType === dataType) != null)\r\n          return;\r\n        allAttributes.push({ name: attributeName, dataType });\r\n      });\r\n    });\r\n  }\r\n\r\n  const historyAttributes = allAttributes.map(attribute => {\r\n    const currentValues = currentDataTypes?.[attribute.dataType]?.[attribute.name];\r\n    const previousValues = previousDataTypes?.[attribute.dataType]?.[attribute.name];\r\n    return {\r\n      name: attribute.name,\r\n      dataType: attribute.dataType,\r\n      change: calcChangeType(currentValues, previousValues, true),\r\n      values: calcHistoryValues(currentValues, previousValues),\r\n    } satisfies HistoryAttribute;\r\n  });\r\n\r\n  return historyAttributes;\r\n}\r\n\r\nfunction findLive(versions: Version[]) {\r\n  let liveVersion = versions[0];\r\n  for (const version of versions) {\r\n    if (version.VersionNumber <= liveVersion.VersionNumber)\r\n      continue;\r\n    liveVersion = version;\r\n  }\r\n  return liveVersion;\r\n}\r\n\r\nfunction calcHistoryValues(values: VersionEntityAttributeValues, previousValues: VersionEntityAttributeValues) {\r\n  const allLangKeys: string[] = [];\r\n  if (values != null) {\r\n    Object.keys(values).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) return;\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n  if (previousValues != null) {\r\n    Object.keys(previousValues).forEach(lang => {\r\n      if (allLangKeys.includes(lang)) return;\r\n      allLangKeys.push(lang);\r\n    });\r\n  }\r\n\r\n  const historyValues = allLangKeys.map(langKey => {\r\n    const currentValue = values?.[langKey];\r\n    const previousValue = previousValues?.[langKey];\r\n    return {\r\n      langKey,\r\n      value: currentValue,\r\n      oldValue: previousValue,\r\n      change: calcChangeType(currentValue, previousValue),\r\n    } satisfies HistoryAttributeValue;\r\n  });\r\n\r\n  return historyValues;\r\n}\r\n\r\nfunction calcChangeType(currentValue: any, previousValue: any, sortObjectKeys = false) {\r\n  let change: 'new' | 'deleted' | 'changed' | 'none';\r\n\r\n  if (sortObjectKeys) {\r\n    if (typeof currentValue === 'object') {\r\n      currentValue = sortKeysAlphabetically(currentValue);\r\n    }\r\n    if (typeof previousValue === 'object') {\r\n      previousValue = sortKeysAlphabetically(previousValue);\r\n    }\r\n  }\r\n\r\n  change = (currentValue != null && previousValue != null)\r\n    ? (JSON.stringify(currentValue) !== JSON.stringify(previousValue)) ?  'changed' : 'none'\r\n    : (currentValue != null) ? 'new' : 'deleted';\r\n\r\n  return change;\r\n}\r\n\r\nfunction sortKeysAlphabetically(obj: Record<string, any>): Record<string, any> {\r\n  if (typeof obj !== 'object') return obj;\r\n\r\n  return Object.keys(obj)\r\n    .sort()\r\n    .reduce((acc, key) => ({ ...acc, [key]: obj[key] }), {});\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Version } from '../models/version.model';\r\n\r\nconst webApiVersionsGet = 'cms/history/get';\r\nconst webApiVersionsRestore = 'cms/history/restore';\r\n\r\n@Injectable()\r\nexport class VersionsService extends HttpServiceBase {\r\n\r\n  fetchVersions(entityId: number, initial: Version[] = null) {\r\n    return this.postSignal<Version[]>(\r\n      webApiVersionsGet,\r\n      { entityId },\r\n      {\r\n        params: { appId: this.appId },\r\n      },\r\n      initial,\r\n    );\r\n  }\r\n\r\n  restore(entityId: number, changeId: number) {\r\n    return this.http.post<boolean>(\r\n      this.apiUrl(webApiVersionsRestore),\r\n      { entityId },\r\n      {\r\n        params: { appId: this.appId, changeId: changeId.toString() },\r\n      },\r\n    );\r\n  }\r\n}\r\n","<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">Item History</div>\r\n    <button mat-icon-button tippy=\"Close dialog\" (click)=\"dialog.close()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"eav-dialog-content\">\r\n    <p>Check version history for this item and restore the version you need.</p>\r\n    @if (historyItems()?.length > 0) {\r\n      <div class=\"eav-compare-box\">\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field eav-compare-box__dropdown\">\r\n          <mat-select [value]=\"compareWith()\" name=\"Scope\" (selectionChange)=\"compareChange($event.value)\">\r\n            <mat-option value=\"previous\">Compare with: Previous</mat-option>\r\n            <mat-option value=\"live\">Compare with: Live</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    }\r\n    <div>\r\n      @if (historyItems() === null) {\r\n        <div>Loading...</div>\r\n      }\r\n      @if (historyItems()?.length === 0) {\r\n        <div>No previous versions of this item found</div>\r\n      }\r\n      @if (historyItems()?.length > 0) {\r\n        <mat-accordion multi class=\"eav-history-tables\">\r\n          @for (historyItem of historyItems(); track historyItem) {\r\n            <mat-expansion-panel [expanded]=\"expandedPanels[historyItem.versionNumber]\"\r\n              (expandedChange)=\"panelExpandedChange($event, historyItem.versionNumber)\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>Version {{ historyItem.versionNumber }}</mat-panel-title>\r\n                \r\n                <mat-panel-description [tippy]=\"historyItem.timeStamp | date:'yyyy-MM-dd hh:mm UTC':'UTC'\">\r\n                  {{ getLocalDate(historyItem.timeStamp) | date:'yyyy-MM-dd hh:mm' }}\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n              @if (expandedPanels[historyItem.versionNumber]) {\r\n                @for (attribute of historyItem.attributes; track attribute) {\r\n                  <div class=\"eav-table-row\">\r\n                    <div class=\"eav-table-row__main eav-row-main\"\r\n                      (click)=\"attributeExpandedToggle(historyItem.versionNumber, attribute.name)\">\r\n                      <div class=\"eav-row-main__label eav-history-{{ attribute.change }}\">\r\n                        {{ attribute.name }}\r\n                      </div>\r\n                      <div class=\"eav-row-main__value eav-history-{{ attribute.change }}\">\r\n                        @if (!expandedAttributes[historyItem.versionNumber + attribute.name]) {\r\n                          {{ attribute.values[0]?.value }}\r\n                        }\r\n                      </div>\r\n                      <div class=\"eav-row-main__type\">\r\n                        <i>[{{ attribute.dataType }}]</i>\r\n                      </div>\r\n                    </div>\r\n                    @if (expandedAttributes[historyItem.versionNumber + attribute.name]) {\r\n                      <div class=\"eav-table-row__details\">\r\n                        @for (value of attribute.values; track value) {\r\n                          <div class=\"eav-detail-row\">\r\n                            <div class=\"eav-detail-row__label eav-history-{{ value.change }}\">{{ value.langKey }}:</div>\r\n                            <div class=\"eav-detail-row__value\">\r\n                              @if (value.change !== 'changed') {\r\n                                <div class=\"eav-history-{{ value.change }}\">\r\n                                  {{ value.change === 'deleted' ? value.oldValue : value.value }}\r\n                                </div>\r\n                              }\r\n                              @if (value.change === 'changed') {\r\n                                <div class=\"eav-history-new\">{{ value.value }}</div>\r\n                                <div class=\"eav-history-deleted eav-history-deleted__value\">{{ value.oldValue }}</div>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                }\r\n                <div class=\"eav-row-actions\">\r\n                  @if (!historyItem.isLastVersion) {\r\n                    <button mat-raised-button color=\"accent\" (click)=\"restore(historyItem.changeSetId)\">\r\n                      Restore\r\n                    </button>\r\n                  }\r\n                </div>\r\n              }\r\n            </mat-expansion-panel>\r\n          }\r\n        </mat-accordion>\r\n      }\r\n    </div>\r\n    @if (historyItems()?.length > 0) {\r\n      <mat-paginator color=\"accent\" showFirstLastButtons=\"true\" [length]=\"version().length\" [pageSize]=\"pageSize()\"\r\n        [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\">\r\n      </mat-paginator>\r\n    }\r\n  </div>\r\n</div>\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, HostBinding, signal } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { transient } from '../../../../core';\r\nimport { TippyDirective } from '../shared/directives/tippy.directive';\r\nimport { computedObj, signalObj } from '../shared/signals/signal.utilities';\r\nimport { getHistoryItems } from './item-history.helpers';\r\nimport { CompareWith } from './models/compare-with.model';\r\nimport { ItemHistoryResult } from './models/item-history-result.model';\r\nimport { VersionsService } from './services/versions.service';\r\n\r\n@Component({\r\n    selector: 'app-item-history',\r\n    templateUrl: './item-history.component.html',\r\n    styleUrls: ['./item-history.component.scss'],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatExpansionModule,\r\n        MatPaginatorModule,\r\n        DatePipe,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class ItemHistoryComponent {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #versionsService = transient(VersionsService);\r\n\r\n  constructor(\r\n    protected dialog: MatDialogRef<ItemHistoryComponent>,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n  \r\n  #itemId = parseInt(this.route.snapshot.paramMap.get('itemId'), 10);\r\n  version = this.#versionsService.fetchVersions(this.#itemId);\r\n\r\n  pageSizeOptions = [10, 20, 50];\r\n  expandedPanels: Record<string, boolean> = {};\r\n  expandedAttributes: Record<string, boolean> = {};\r\n\r\n\r\n  #page = signal<number>(1);\r\n  pageSize = signalObj<number>('pageSize', this.pageSizeOptions[0]);\r\n  compareWith = signal<CompareWith>('live');\r\n  historyItems = computedObj('historyItems', () => getHistoryItems(this.version(), this.#page(), this.pageSize(), this.compareWith()));\r\n\r\n  compareChange(newCompareWith: CompareWith) {\r\n    this.compareWith.set(newCompareWith);\r\n  }\r\n\r\n  panelExpandedChange(expand: boolean, versionNumber: number) {\r\n    this.expandedPanels[versionNumber] = expand;\r\n  }\r\n\r\n  attributeExpandedToggle(versionNumber: number, name: string) {\r\n    this.expandedAttributes[versionNumber + name] = !this.expandedAttributes[versionNumber + name];\r\n  }\r\n\r\n  getLocalDate(date: string) {\r\n    return new Date(date);\r\n  }\r\n\r\n  pageChange(event: PageEvent) {\r\n    const newPage = event.pageIndex + 1;\r\n    if (newPage !== this.#page()) {\r\n      this.expandedPanels = {};\r\n      this.expandedAttributes = {};\r\n      this.#page.set(newPage);\r\n    }\r\n    this.pageSize.set(event.pageSize);\r\n  }\r\n\r\n  restore(changeId: number) {\r\n    this.snackBar.open('Restoring previous version...');\r\n    this.#versionsService.restore(this.#itemId, changeId).subscribe(_ => {\r\n      this.snackBar.open('Previous version restored. Will reload edit dialog', null, { duration: 3000 });\r\n      this.dialog.close({\r\n        refreshEdit: true,\r\n      } satisfies ItemHistoryResult);\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[0,1]}