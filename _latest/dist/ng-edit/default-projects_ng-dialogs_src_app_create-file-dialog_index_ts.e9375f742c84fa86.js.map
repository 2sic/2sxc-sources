{"version":3,"mappings":"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","names":["SourceService","http","context","dnnContext","this","C","getItem","keyIsShared","_a","toString","viewKey","urlItems","get","$2sxc","apiUrl","webApiAppFile","params","Object","appId","global","isShared","templateIdOrPath","pipe","map","view","Type","toLocaleLowerCase","Extension","post","webApiAppFilesAll","withSubfolders","purpose","type","path","templateKey","webApiAppFileCreate","test","find","_","EntityId","Path","templateId","y","i0","factory","defaultThrottleConfig","leading","trailing","durationSelector","i","operate","source","subscriber","hasValue","sendValue","throttled","isComplete","endThrottling","unsubscribe","send","complete","cleanupThrottling","startThrottle","value","innerFrom","subscribe","OperatorSubscriber","next","closed","MatInputAutofocusDirective","matInput","elementRef","setTimeout","t","focus","toBoolean","autofocusSelectValue","nativeElement","setSelectionRange","length","valueLowerCase","selectors","ctx_r14","ctx_r16","CreateFileDialogComponent","dialogData","dialogRef","sourceService","subscription","Subscription","templates$","BehaviorSubject","loadingPreview$","buildForm","fetchTemplates","buildTemplateVars","result","close","formValues","form","getRawValue","closeDialog","name","finalName","getPredefinedTemplates","controls","response","Default","patchValue","Templates","FormGroup","platform","FormControl","all","s","disabled","Validators","folder","Z","_b","add","combineLatest","valueChanges","startWith","distinctUntilChanged","P","template","Key","suggestedName","r","c","SuggestedFileName","trim","SanitizeHelper","m","d","Prefix","concat","f","Suffix","x","_c","replace","platforms$","platformsMap","templates","forEach","Platforms","keys","purposes$","purposesMap","Purpose","l","filter","I","includes","tap","some","newTemplateKey","preview$","duration","config","arguments","duration$","timer","asyncScheduler","throttle","throttleTime","switchMap","forkJoin","getPreview","of","undefined","templateVars$","preview","platforms","purposes","loadingPreview","Preview","previewValid","IsValid","previewError","Error","MAT_DIALOG_DATA","CreateFileDialogModule","D","Context","imports","CommonModule","SharedComponentsModule","MatButtonModule","MatSelectModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule"],"sources":["./projects/ng-dialogs/src/app/code-editor/services/source.service.ts","./node_modules/rxjs/dist/esm/internal/operators/throttle.js","./projects/ng-dialogs/src/app/shared/directives/mat-input-autofocus.directive.ts","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.component.html","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.component.ts","./node_modules/rxjs/dist/esm/internal/operators/throttleTime.js","./projects/ng-dialogs/src/app/create-file-dialog/create-file-dialog.module.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { webApiAppFile, webApiAppFileCreate, webApiAppFilesAll } from '../../../../../edit/shared/services';\r\nimport { keyIsShared } from '../../shared/constants/session.constants';\r\nimport { SourceItem } from '../../shared/models/edit-form.model';\r\nimport { Context } from '../../shared/services/context';\r\nimport { PredefinedTemplatesResponse } from '../models/predefined-template.model';\r\nimport { Preview } from '../models/preview.models';\r\nimport { SourceView } from '../models/source-view.model';\r\n\r\nexport const webApiAppFilesPredefinedTemplates = 'admin/appfiles/GetTemplates';\r\nexport const webApiAppFilesPreview = 'admin/appfiles/preview';\r\n\r\n@Injectable()\r\nexport class SourceService {\r\n  private isShared = sessionStorage.getItem(keyIsShared) ?? false.toString();\r\n\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  /** ViewKey is templateId or path */\r\n  get(viewKey: string, urlItems: SourceItem[]): Observable<SourceView> {\r\n    return this.http.get<SourceView>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFile), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        global: this.isShared,\r\n        ...this.templateIdOrPath(viewKey, urlItems),\r\n      }\r\n    }).pipe(\r\n      map(view => {\r\n        if (view.Type.toLocaleLowerCase() === 'auto') {\r\n          switch (view.Extension.toLocaleLowerCase()) {\r\n            case '.cs':\r\n            case '.cshtml':\r\n              view.Type = 'Razor';\r\n              break;\r\n            case '.html':\r\n            case '.css':\r\n            case '.js':\r\n              view.Type = 'Token';\r\n              break;\r\n          }\r\n        }\r\n        return view;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** ViewKey is templateId or path */\r\n  save(viewKey: string, view: SourceView, urlItems: SourceItem[]): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFile), view, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        global: this.isShared,\r\n        ...this.templateIdOrPath(viewKey, urlItems),\r\n      },\r\n    });\r\n  }\r\n\r\n  getTemplates(): Observable<string[]> {\r\n    return this.http.get<string[]>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesAll), {\r\n      params: { appId: this.context.appId.toString(), global: this.isShared, withSubfolders: 'true' },\r\n    });\r\n  }\r\n\r\n  getPredefinedTemplates(purpose?: 'Template' | 'Search' | 'Api', type?: 'Token' | 'Razor'): Observable<PredefinedTemplatesResponse> {\r\n    return this.http.get<PredefinedTemplatesResponse>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesPredefinedTemplates), {\r\n      params: {\r\n        ...(purpose && { purpose }),\r\n        ...(type && { type }),\r\n      },\r\n    });\r\n  }\r\n\r\n  getPreview(path: string, templateKey: string): Observable<Preview> {\r\n    return this.http.get<Preview>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFilesPreview), {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        path,\r\n        templateKey,\r\n        global: this.isShared,\r\n      },\r\n    });\r\n  }\r\n\r\n  createTemplate(path: string, templateKey: string): Observable<boolean> {\r\n    return this.http.post<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiAppFileCreate), {}, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        global: this.isShared,\r\n        purpose: 'auto',\r\n        path,\r\n        templateKey,\r\n      },\r\n    });\r\n  }\r\n\r\n  private templateIdOrPath(viewKey: string, urlItems: SourceItem[]) {\r\n    if (/^[0-9]*$/g.test(viewKey)) {\r\n      const path = urlItems.find(i => i.EntityId?.toString() === viewKey)?.Path;\r\n      return {\r\n        templateId: viewKey,\r\n        ...(path != null && { path }),\r\n      };\r\n    } else {\r\n      return { path: viewKey };\r\n    }\r\n  }\r\n}\r\n","import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false,\n};\nexport function throttle(durationSelector, { leading, trailing } = defaultThrottleConfig) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        let sendValue = null;\n        let throttled = null;\n        let isComplete = false;\n        const endThrottling = () => {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        const cleanupThrottling = () => {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        const startThrottle = (value) => (throttled = innerFrom(durationSelector(value)).subscribe(new OperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        const send = () => {\n            if (hasValue) {\n                hasValue = false;\n                const value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, () => {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\n@Directive({ selector: '[appMatInputAutofocus]' })\r\nexport class MatInputAutofocusDirective implements OnInit {\r\n  @Input() autofocusSelectValue: string | boolean | null | undefined = false;\r\n\r\n  constructor(private matInput: MatInput, private elementRef: ElementRef<HTMLInputElement>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.matInput.focus();\r\n\r\n      if (this.toBoolean(this.autofocusSelectValue)) {\r\n        this.elementRef.nativeElement.setSelectionRange(0, this.matInput.value.length);\r\n      }\r\n    });\r\n  }\r\n\r\n  private toBoolean(value: any): boolean | null | undefined {\r\n    if (typeof value === 'boolean') { return value; }\r\n    if (typeof value === 'string') {\r\n      const valueLowerCase = value.toLocaleLowerCase();\r\n      if (valueLowerCase === 'true') { return true; }\r\n      if (valueLowerCase === 'false') { return false; }\r\n      return;\r\n    }\r\n    if (value == null) { return value; }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"templateVars$ | async as data\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box hide-scrollbar\">\r\n      <span>Create</span>\r\n      <span class=\"file-name\">{{\r\n        controls.finalName.value\r\n        || (controls.folder.value ? controls.folder.value.trim() + '/' : '')\r\n        }}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\" class=\"dialog-form\">\r\n    <div class=\"dialog-form-content fancy-scrollbar-light\">\r\n\r\n      <div class=\"field-container multiple\">\r\n        <!-- Platform -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Platform</mat-label>\r\n            <mat-select formControlName=\"platform\">\r\n              <mat-option *ngFor=\"let platform of data.platforms\" [value]=\"platform\">\r\n                {{ platform }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- Purpose -->\r\n        <div class=\"multiple-field\">\r\n          <mat-form-field appearance=\"standard\" color=\"accent\">\r\n            <mat-label>Purpose</mat-label>\r\n            <mat-select formControlName=\"purpose\">\r\n              <mat-option *ngFor=\"let purpose of data.purposes\" [value]=\"purpose\">\r\n                {{ purpose }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Template -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Template</mat-label>\r\n          <mat-select formControlName=\"templateKey\">\r\n            <mat-option *ngFor=\"let template of data.templates\" [value]=\"template.Key\">\r\n              {{ template.Name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- Name -->\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"standard\" color=\"accent\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput type=\"text\" formControlName=\"name\" required appMatInputAutofocus autofocusSelectValue=\"true\">\r\n        </mat-form-field>\r\n        <app-field-hint *ngIf=\"controls.name.touched && controls.name.errors?.required\" [isError]=\"true\">\r\n          This field is required\r\n        </app-field-hint>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"dialog-form-actions\">\r\n      <ng-container *ngIf=\"data.loadingPreview\">\r\n        <mat-spinner mode=\"indeterminate\" diameter=\"20\" color=\"accent\"></mat-spinner>\r\n        <div class=\"spacer\"></div>\r\n      </ng-container>\r\n      <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n      <button mat-raised-button type=\"button\" color=\"accent\"\r\n        [disabled]=\"!form.valid || data.loadingPreview || !data.previewValid\" (click)=\"confirm()\">\r\n        Create\r\n      </button>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"data.preview\">\r\n      <div class=\"preview-label-box\">\r\n        <label class=\"preview-label\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">Preview</label>\r\n      </div>\r\n      <pre class=\"fancy-scrollbar-light\" [ngClass]=\"{ 'disabled': data.loadingPreview }\">{{ data.preview }}</pre>\r\n    </ng-container>\r\n\r\n    <div class=\"preview-error\" *ngIf=\"!data.loadingPreview && data.previewError\">\r\n      {{ data.previewError }}\r\n    </div>\r\n  </form>\r\n</ng-container>\r\n","import { Component, HostBinding, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { asyncScheduler, BehaviorSubject, combineLatest, forkJoin, Observable, of, Subscription, timer } from 'rxjs';\r\nimport { distinctUntilChanged, map, startWith, switchMap, tap, throttleTime } from 'rxjs/operators';\r\nimport { CreateFileDialogData, CreateFileDialogResult, CreateFileFormControls, CreateFileFormValues, CreateFileTemplateVars } from '.';\r\nimport { SanitizeHelper } from '../../../../edit/shared/helpers';\r\nimport { PredefinedTemplate } from '../code-editor/models/predefined-template.model';\r\nimport { Preview } from '../code-editor/models/preview.models';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\n\r\n@Component({\r\n  selector: 'app-create-file-dialog',\r\n  templateUrl: './create-file-dialog.component.html',\r\n  styleUrls: ['./create-file-dialog.component.scss']\r\n})\r\nexport class CreateFileDialogComponent implements OnInit, OnDestroy {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  form: FormGroup;\r\n  controls: CreateFileFormControls;\r\n  templateVars$: Observable<CreateFileTemplateVars>;\r\n\r\n  private all = 'All' as const;\r\n  private templates$: BehaviorSubject<PredefinedTemplate[]>;\r\n  private loadingPreview$: BehaviorSubject<boolean>;\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private dialogData: CreateFileDialogData,\r\n    private dialogRef: MatDialogRef<CreateFileDialogComponent>,\r\n    private sourceService: SourceService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = new Subscription();\r\n    this.templates$ = new BehaviorSubject<PredefinedTemplate[]>([]);\r\n    this.loadingPreview$ = new BehaviorSubject(false);\r\n\r\n    this.buildForm();\r\n    this.fetchTemplates();\r\n    this.buildTemplateVars();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.templates$.complete();\r\n    this.loadingPreview$.complete();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeDialog(result?: CreateFileDialogResult): void {\r\n    this.dialogRef.close(result);\r\n  }\r\n\r\n  confirm(): void {\r\n    const formValues: CreateFileFormValues = this.form.getRawValue();\r\n\r\n    const result: CreateFileDialogResult = {\r\n      name: formValues.finalName,\r\n      templateKey: formValues.templateKey,\r\n    };\r\n    this.closeDialog(result);\r\n  }\r\n\r\n  private fetchTemplates(): void {\r\n    this.sourceService.getPredefinedTemplates(this.dialogData.purpose, this.dialogData.type).subscribe(response => {\r\n      if (this.controls.templateKey.value !== response.Default) {\r\n        this.controls.templateKey.patchValue(response.Default);\r\n      }\r\n      this.templates$.next(response.Templates);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = new FormGroup({\r\n      platform: new FormControl(this.all),\r\n      purpose: new FormControl({ value: this.dialogData.purpose ?? this.all, disabled: this.dialogData.purpose != null }),\r\n      templateKey: new FormControl(null, Validators.required),\r\n      name: new FormControl(null, Validators.required),\r\n      finalName: new FormControl({ value: null, disabled: true }),\r\n      folder: new FormControl({ value: this.dialogData.folder ?? '', disabled: true }),\r\n    });\r\n\r\n    this.controls = this.form.controls as any;\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n        const suggestedName = template?.SuggestedFileName ?? null;\r\n\r\n        if (this.controls.name.value !== suggestedName) {\r\n          this.controls.name.patchValue(suggestedName);\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.templates$,\r\n        this.controls.templateKey.valueChanges.pipe(\r\n          startWith<string>(this.controls.templateKey.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.name.valueChanges.pipe(\r\n          startWith<string>(this.controls.name.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n        this.controls.folder.valueChanges.pipe(\r\n          startWith<string>(this.controls.folder.value),\r\n          distinctUntilChanged(),\r\n        ),\r\n      ]).subscribe(([templates, templateKey, name, folder]) => {\r\n        const template = templates.find(t => t.Key === templateKey);\r\n\r\n        let finalName: string = null;\r\n        if (name) {\r\n          folder = folder.trim();\r\n          name = SanitizeHelper.sanitizePath(name.trim());\r\n          name = `${template?.Prefix ?? ''}${name}${template?.Suffix ?? ''}${template?.Extension ?? ''}`;\r\n          finalName = `${folder ? `${folder}/` : ''}${name}`.replace(/\\/{2,}/g, '/');\r\n        }\r\n\r\n        if (this.controls.finalName.value !== finalName) {\r\n          this.controls.finalName.patchValue(finalName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildTemplateVars(): void {\r\n    const platforms$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const platformsMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          template.Platforms?.forEach(platform => {\r\n            platformsMap[platform] = platform;\r\n          });\r\n        });\r\n        return Object.keys(platformsMap);\r\n      }),\r\n    );\r\n    const purposes$ = this.templates$.pipe(\r\n      map(templates => {\r\n        const purposesMap: Record<string, string> = {\r\n          [this.all]: this.all,\r\n        };\r\n        templates.forEach(template => {\r\n          purposesMap[template.Purpose] = template.Purpose;\r\n        });\r\n        return Object.keys(purposesMap);\r\n      }),\r\n    );\r\n    const templates$ = combineLatest([\r\n      this.templates$,\r\n      this.controls.platform.valueChanges.pipe(\r\n        startWith<string>(this.controls.platform.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.purpose.valueChanges.pipe(\r\n        startWith<string>(this.controls.purpose.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      map(([templates, platform, purpose]) => {\r\n        const filtered = templates.filter(template => {\r\n          const platformMatch = platform === this.all || (template.Platforms?.includes(platform) ?? false);\r\n          const purposeMatch = purpose === this.all || template.Purpose === purpose;\r\n          return platformMatch && purposeMatch;\r\n        });\r\n        return filtered;\r\n      }),\r\n      tap(templates => {\r\n        if (!templates.some(t => t.Key === this.controls.templateKey.value)) {\r\n          const newTemplateKey = templates[0]?.Key ?? null;\r\n          if (this.controls.templateKey.value !== newTemplateKey) {\r\n            this.controls.templateKey.patchValue(newTemplateKey);\r\n          }\r\n        }\r\n      }),\r\n    );\r\n    const preview$ = combineLatest([\r\n      this.controls.finalName.valueChanges.pipe(\r\n        startWith<string>(this.controls.finalName.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n      this.controls.templateKey.valueChanges.pipe(\r\n        startWith<string>(this.controls.templateKey.value),\r\n        distinctUntilChanged(),\r\n      ),\r\n    ]).pipe(\r\n      throttleTime(100, asyncScheduler, { leading: true, trailing: true }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(true);\r\n      }),\r\n      switchMap(([finalName, templateKey]) => {\r\n        return !finalName || !templateKey\r\n          ? of<Preview | undefined>(undefined)\r\n          : forkJoin([\r\n            this.sourceService.getPreview(finalName, templateKey),\r\n            timer(500),\r\n          ]).pipe(map(([preview]) => preview));\r\n      }),\r\n      tap(() => {\r\n        this.loadingPreview$.next(false);\r\n      }),\r\n    );\r\n    this.templateVars$ = combineLatest([platforms$, purposes$, templates$, preview$, this.loadingPreview$]).pipe(\r\n      map(([platforms, purposes, templates, preview, loadingPreview]) => {\r\n        const templateVars: CreateFileTemplateVars = {\r\n          platforms,\r\n          purposes,\r\n          templates,\r\n          loadingPreview,\r\n          preview: preview?.Preview,\r\n          previewValid: preview?.IsValid ?? false,\r\n          previewError: preview?.Error,\r\n        };\r\n        return templateVars;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { defaultThrottleConfig, throttle } from './throttle';\nimport { timer } from '../observable/timer';\nexport function throttleTime(duration, scheduler = asyncScheduler, config = defaultThrottleConfig) {\n    const duration$ = timer(duration, scheduler);\n    return throttle(() => duration$, config);\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CreateFileDialogComponent } from '.';\r\nimport { SourceService } from '../code-editor/services/source.service';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateFileDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentsModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    CreateFileDialogComponent,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    SourceService,\r\n  ],\r\n})\r\nexport class CreateFileDialogModule { }\r\n"],"sourceRoot":"webpack:///","file":"default-projects_ng-dialogs_src_app_create-file-dialog_index_ts.e9375f742c84fa86.js"}