{"version":3,"file":"common.9416c8dd9516ae55.js","mappings":"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","names":["i0","_r1","ctx_r1","openLightspeedFeatureInfo","params","lightSpeedLink","lightSpeedOwner","LightSpeedActionsComponent_Conditional_1_Conditional_1_Template","LightSpeedActionsComponent_Conditional_1_Conditional_2_Template","appHasLightSpeed","lightSpeed","Title","appLightSpeedEnabled","LightSpeedActionsComponent","constructor","this","input","required","features","inject","FeaturesService","lightSpeedEnabled","isEnabled","FeatureNames","LightSpeed","Id","IsEnabled","selectors","inputs","decls","vars","consts","template","rf","ctx","LightSpeedActionsComponent_Conditional_0_Template","LightSpeedActionsComponent_Conditional_1_Template","TippyDirective","MatIconModule","i1","MatBadgeModule","i2","MatRippleModule","i3","encapsulation","AppAdminHelpers","getLightSpeedEditParams","appId","items","EditPrep","newMetadata","eavConstants","appMetadata","ContentTypeName","metadata","app","fieldNamePattern","fieldNameError","CopilotService","webApiEditions","webApiGeneratedCode","http","context","log","classLog","specs","#getCopilotSpecs","getEditions","pipe","map","data","editions","getDefaultEdition","find","e","isDefault","getGenerators","generators","get","_a","toString","defaultOrFirst","#findDefaultEdition","d","description","label","name","replace","shareReplay","factory","ɵfac","generator_r3","version","descriptionHtml","$event","selectedGenerator","CopilotGeneratorComponent_Conditional_9_For_7_Template","CopilotGeneratorComponent_Conditional_9_Conditional_8_Template","sort","tmp_5_0","selectedGenerator$","edition_r5","_r4","selectedEdition","CopilotGeneratorComponent_Conditional_12_For_5_Template","CopilotGeneratorComponent","snackBar","outputType","title","copilotSvc","transient","editions$","generators$","gens","filter","g","ngOnInit","take","subscribe","autoGeneratedCode","edition","generator","console","open","message","timeTaken","duration","CopilotGeneratorComponent_Conditional_9_Template","CopilotGeneratorComponent_Conditional_12_Template","tmp_1_0","tmp_2_0","MatSelectModule","i4","i5","i6","MatButtonModule","i7","MatCardModule","i8","i9","CommonModule","i10","CopilotPageComponent","activatedRoute","snapshot","heading","intro","styles","AgActionsAlwaysRefresh","refresh","AnalyzeSettingsService","HttpServiceBase","getStackSig","part","key","view","stringifyValue","stackSignal","signal","getAndWrite","webApiAppRoot","computed","stackItem","_value","JSON","stringify","Value","getStack","getHttp","stack","__ngFactoryType__","AnalyzeSettingsValueComponent","clipboard","ClipboardService","agInit","value","copy","JsonHelpers","tryParse","copyToClipboard","webApiAppRootApp","AppsListService","getAll","getSignal","zoneId","getInheritable","getPendingApps","create","inheritAppId","templateId","post","apiUrl","installPendingApps","pendingApps","delete","flushCache","getHttpApiUrl","webApiLicSummary","FeaturesConfigService","saveFeatures","featuresStates","getLicenses","getLicensesSig","uploadLicense","file","formData","FormData","append","info","Success","Messages","MessageType","FileUploadMessageTypes","Error","Text","Message","retrieveLicense","ZoneService","getLanguage","initial","toggleLanguage","code","enable","cultureCode","getSystemInfo","getLanguagesPermissions","ContentExportRoutes","path","component","DialogEntryComponent","dialog","initContext","panelSize","panelClass","getComponent","_asyncToGenerator","ContentExportComponent","Promise","all","__webpack_require__","then","bind","ContentExportService","exportContent","values","selectedIds","selectedIdsString","join","url","language","defaultLanguage","contentTypeStaticName","recordExport","resourcesReferences","languageReferences","window","exportJson","typeName","exportEntity","id","prefix","contentImportRoutes","ContentImportComponent","importContentItemDialog","ImportContentItemComponent","contentItemsDialog","ContentItemsComponent","contentItemsRoutes","children","GoToMetadata","getRoutes","loadChildren","m","EditRoutes","editContentTypeFieldsDialog","EditContentTypeFieldsComponent","contentTypeFieldsRoutes","ContentTypeFieldsComponent","GoToPermissions","route","ReservedNamesValidatorDirective","appReservedNames","validate","control","controlValue","toLocaleLowerCase","reservedName","Object","keys","reservedNames","mergeReserved","fields","existingFields","forEach","field","StaticName","provide","NG_VALIDATORS","useExisting","multi","DebugFields","environment","production","logSpecs","markTouched","set","disable","getErrors","pfx","UiControl","moreDisabled","#warningMessages","jsonWarning","formulaWarning","dirty","invalid","touched","disabled","extendName","aIfInList","emptyControl","touchedAndInvalid","setIfChanged","newValue","before","isEqual","#set","markAsTouched","FieldValueHelpers","fieldValuesAreEqual","markAsDirty","patchValue","updateValueAndValidity","errors","l","fnIfInList","r","errorKey","error","formulaMessage","ValidationMsgHelper","messages","getWarnings","_warning","warning","warningKey","x","y","isNaN","Array","isArray","RxHelpers","arraysEqual","getItemValuesChanges","oldValues","newValues","changes","length","undefined","notValid","long","min","max","minNoItems","maxNoItems","pattern","decimals","jsonError","formulaError","validateForm","form","controlKey","entries","controls","importRoutes","ImportAppComponent","historyRoutes","ItemHistoryComponent","webApiContentGroup","ContentGroupService","getItems","item","guid","index","saveItem","entityId","add","removeItem","contentGroup","parent","getList","saveList","resortedList","getHeader","replaceContentDialog","ReplaceContentComponent","replaceContentRoutes","EditRoutesNoHistory","#dialogData","#dialog","matDialog","viewContainerRef","router","changeDetectorRef","injector","navigation","getCurrentNavigation","extras","state","fn","dialogConfig","a","_dialogAnimatingOpen","_lastDialogRef","afterOpened","openDialogComponent","ngOnDestroy","close","svcId","init","autoFocus","backdropClass","closeOnNavigation","showScrollbar","position","top","afterClosed","navRes","navigateUrl","pathFromRoot","$2sxc","totalPopup","navigate","relativeTo","markForCheck","Context","guidRegex","parse","loadScripts","scriptObjects","callback","iteration","newCallback","scrObj","global","test","w","require","src","exportedVar","UpdateEnvVarsFromDialogSettings","appContext","includedApiRoot","Api","new2sxcHeader","env","header","appApi","load","AppScopes","App","Site","Global","DialogService","openCodeFile","isShared","DialogTypeConstants","Develop","Path","editId","hashParams","buildHashParam","keyDialog","keyIsShared","keyItems","buildFullUrl","openQueryDesigner","queryId","PipelineDesigner","keyPipelineId","openAppsManagement","tab","keyZoneId","Zone","keyExtras","openAppAdministration","scope","keyAppId","buildSharedHashParams","keyModuleId","moduleId","keyContentBlockId","contentBlockId","keyPartOfPage","sessionStorage","getItem","keyDebug","rawKey","valueTemp","rawValue","encodeURIComponent","oldHref","keyUrl","oldUrl","URL","newHref","origin","pathname","search","allHashParams","reduce","acc","arrReducer","arr","push","toArray","operate","source","subscriber"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.html","./projects/eav-ui/src/app/admin-shared/lightspeed-action/lightspeed-action.component.ts","./projects/eav-ui/src/app/app-administration/app-admin-helpers.ts","./projects/eav-ui/src/app/app-administration/constants/field-name.patterns.ts","./projects/eav-ui/src/app/app-administration/copilot/copilot-service.ts","./projects/eav-ui/src/app/app-administration/copilot/copilot-generator.component.html","./projects/eav-ui/src/app/app-administration/copilot/copilot-generator.component.ts","./projects/eav-ui/src/app/app-administration/copilot/page/copilot-page.component.ts","./projects/eav-ui/src/app/app-administration/copilot/page/copilot-page.component.html","./projects/eav-ui/src/app/app-administration/queries/ag-actions/ag-actions-component.ts","./projects/eav-ui/src/app/app-administration/services/analyze-settings.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-value/analyze-settings-value.component.html","./projects/eav-ui/src/app/apps-management/services/apps-list.service.ts","./projects/eav-ui/src/app/apps-management/services/features-config.service.ts","./projects/eav-ui/src/app/apps-management/services/zone.service.ts","./projects/eav-ui/src/app/content-export/content-export-dialog.config.ts","./projects/eav-ui/src/app/content-export/content-export.routing.ts","./projects/eav-ui/src/app/content-export/services/content-export.service.ts","./projects/eav-ui/src/app/content-import/content-import-dialog.config.ts","./projects/eav-ui/src/app/content-import/content-import.routing.ts","./projects/eav-ui/src/app/content-items/import-content-item/import-content-item-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items-dialog.config.ts","./projects/eav-ui/src/app/content-items/content-items.routing.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields-dialog.config.ts","./projects/eav-ui/src/app/content-type-fields/content-type-fields.routing.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/reserved-names.directive.ts","./projects/eav-ui/src/app/edit/edit-debug.ts","./projects/eav-ui/src/app/edit/shared/controls/ui-control.ts","./projects/eav-ui/src/app/edit/shared/helpers/field-value.helpers.ts","./projects/eav-ui/src/app/edit/shared/validation/validation-messages.helpers.ts","./projects/eav-ui/src/app/import-app/import-app-dialog.config.ts","./projects/eav-ui/src/app/import-app/import-app.routing.ts","./projects/eav-ui/src/app/item-history/item-history-dialog.config.ts","./projects/eav-ui/src/app/item-history/item-history.routing.ts","./projects/eav-ui/src/app/manage-content-list/services/content-group.service.ts","./projects/eav-ui/src/app/replace-content/replace-content-dialog.config.ts","./projects/eav-ui/src/app/replace-content/replace-content.routing.ts","./projects/eav-ui/src/app/shared/components/dialog-entry/dialog-entry.component.ts","./projects/eav-ui/src/app/shared/constants/guid.constants.ts","./projects/eav-ui/src/app/shared/helpers/json.helpers.ts","./projects/eav-ui/src/app/shared/helpers/load-scripts.helper.ts","./projects/eav-ui/src/app/shared/helpers/update-env-vars-from-dialog-settings.helper.ts","./projects/eav-ui/src/app/shared/models/dialog-context.models.ts","./projects/eav-ui/src/app/shared/services/dialog.service.ts","./node_modules/rxjs/dist/esm/internal/operators/toArray.js"],"sourcesContent":["@if (!lightSpeedEnabled()) {\r\n  <div class=\"eav-grid-action-button disabled\" tippy=\"Lightspeed is disabled\" (click)=\"openLightspeedFeatureInfo()\">\r\n    <mat-icon matBadgeSize=\"small\" matBadge=\"💎\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n  </div>\r\n} @else {\r\n  <div\r\n    class=\"eav-grid-action-button {{ appHasLightSpeed ? '' : 'disabled' }}\"\r\n    matRipple\r\n    [tippy]=\"appHasLightSpeed ? lightSpeed().Title : 'Not yet configured for LightSpeed'\"\r\n  >\r\n    @if (appLightSpeedEnabled) {\r\n      <a class=\"default-link\" [href]=\"'#' + params().lightSpeedLink(lightSpeedOwner())\">\r\n        <mat-icon matBadgeSize=\"small\" matBadge=\"✅\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n      </a>\r\n    } @else {\r\n      <a class=\"default-link\" [href]=\"'#' + params().lightSpeedLink(lightSpeedOwner())\">\r\n        <mat-icon matBadgeSize=\"small\" matBadge=\"⛔\" matBadgePosition=\"below after\" aria-hidden=\"false\"> bolt </mat-icon>\r\n      </a>\r\n    }\r\n  </div>\r\n}\r\n","import { Component, inject, input } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { LightSpeedInfo } from '../../apps-management/models/LightSpeedInfo';\r\nimport { FeatureNames } from '../../features/feature-names';\r\nimport { FeaturesService } from '../../features/features.service';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { LightSpeedActionsParams } from './lightspeed-actions.models';\r\n\r\n/**\r\n * LightSpeedActionsComponent\r\n *\r\n * Specially meant to be used inside an AGGrid action, and receive the parameters from it.\r\n *\r\n */\r\n@Component({\r\n    selector: 'app-lightspeed-action',\r\n    templateUrl: './lightspeed-action.component.html',\r\n    imports: [\r\n        TippyDirective,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n        MatRippleModule,\r\n    ]\r\n})\r\nexport class LightSpeedActionsComponent {\r\n  /** App needed for lightspeed checks */\r\n  lightSpeedOwner = input.required<unknown>();\r\n\r\n  params = input.required<LightSpeedActionsParams>();\r\n\r\n  lightSpeed = input.required<LightSpeedInfo | null>();\r\n\r\n  public features = inject(FeaturesService);\r\n\r\n  constructor() { }\r\n\r\n  protected lightSpeedEnabled = this.features.isEnabled[FeatureNames.LightSpeed]\r\n\r\n  public get appHasLightSpeed(): boolean {\r\n    return this.lightSpeed()?.Id != null;\r\n  }\r\n\r\n  public get appLightSpeedEnabled(): boolean {\r\n    return this.lightSpeed()?.IsEnabled == true;\r\n  }\r\n\r\n  openLightspeedFeatureInfo(): void {\r\n    this.params().openLightspeedFeatureInfo();\r\n  }\r\n}\r\n","import { eavConstants } from '../shared/constants/eav.constants';\r\nimport { EditForm, EditPrep } from '../shared/models/edit-form.model';\r\n\r\nexport class AppAdminHelpers {\r\n  public static getLightSpeedEditParams(appId: number) {\r\n    const form: EditForm = {\r\n      items: [\r\n        EditPrep.newMetadata(appId, eavConstants.appMetadata.LightSpeed.ContentTypeName, eavConstants.metadata.app, true),\r\n      ],\r\n    };\r\n    return form;\r\n  }\r\n}\r\n","export const fieldNamePattern = /^[A-Za-z][A-Za-z0-9]+$/;\r\nexport const fieldNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Context } from '../../shared/services/context';\r\nimport { EditionData, EditionDataDto } from './edition-data';\r\nimport { map, shareReplay } from 'rxjs';\r\nimport { Edition, EditionDto } from './edition';\r\nimport { classLog } from '../../shared/logging';\r\n\r\n@Injectable()\r\nexport class CopilotService {\r\n  \r\n  log = classLog({CopilotService});\r\n\r\n  static webApiEditions: string = 'admin/code/getEditions';\r\n  static webApiGeneratedCode: string = 'admin/code/generateDataModels';\r\n\r\n  public specs = this.#getCopilotSpecs();\r\n\r\n  constructor(private http: HttpClient, private context: Context) { }\r\n\r\n  getEditions() {\r\n    return this.specs.pipe(map(data => data.editions));\r\n  }\r\n\r\n  getDefaultEdition() {\r\n    return this.specs.pipe(map(data => data.editions.find(e => e.isDefault)));\r\n  }\r\n\r\n  getGenerators() {\r\n    return this.specs.pipe(map(data => data.generators));\r\n  }\r\n\r\n  #getCopilotSpecs() {\r\n    return this.http.get<EditionDataDto>(CopilotService.webApiEditions, {\r\n      params: {\r\n        appId: this.context.appId.toString()\r\n      }\r\n    }).pipe(\r\n      map((data) => {\r\n        const defaultOrFirst = this.#findDefaultEdition(data.editions);\r\n        const editions = data.editions.map(d => {\r\n          const isDefault = d == defaultOrFirst;\r\n          return {\r\n            ...d,\r\n            isDefault,\r\n            description: (d.description || \"no description provided\") + (isDefault ? ' ✅' : ''),\r\n            label: `/${d.name}/AppCode/Data`.replace(/\\/\\//g, '/'),\r\n          } as Edition;\r\n        });\r\n\r\n        return { ...data, editions } as EditionData;\r\n      }),\r\n      shareReplay(1),\r\n    );\r\n  }\r\n\r\n  #findDefaultEdition(editions: EditionDto[]): EditionDto {\r\n    return editions.find(d => d.isDefault) ?? editions.find(d => d.name === '') ?? editions[0];\r\n  }\r\n\r\n}","<div class=\"eav-cards-box\">\r\n  <mat-card class=\"eav-card\">\r\n    <mat-card-header class=\"eav-card-header\">\r\n      <mat-card-title>{{ title() }}</mat-card-title>\r\n      <mat-icon>support_agent</mat-icon>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n\r\n      <br>\r\n      <!-- Generator select -->\r\n      @if (generators$ | async; as generators) {\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Generator</mat-label>\r\n          <mat-select required [(value)]=\"selectedGenerator\">\r\n            <mat-select-trigger>\r\n              {{ selectedGenerator }}\r\n            </mat-select-trigger>\r\n              @for (generator of generators.sort() ; track generator) {\r\n                <mat-option [value]=\"generator.name\">\r\n                  <strong>{{ generator.name }} v{{ generator.version }}</strong><br>\r\n                  {{ generator.description }}\r\n                </mat-option>\r\n              }\r\n          </mat-select>\r\n          @if (selectedGenerator$ | async; as selectedGenerator) {\r\n            <mat-hint [innerHTML]=\"selectedGenerator.descriptionHtml\"></mat-hint>\r\n          }\r\n        </mat-form-field>\r\n        <br>\r\n      }\r\n\r\n      <br>\r\n      <!-- Edition select -->\r\n      @if (editions$ | async; as editions) {\r\n        <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n          <mat-label>Select an Edition to generate code for</mat-label>\r\n          <mat-select required [(value)]=\"selectedEdition\">\r\n              @for (edition of editions.sort() ; track edition) {\r\n                <mat-option [value]=\"edition.name\">\r\n                  <strong>{{ edition.label }}</strong> ({{ edition.description }})\r\n                </mat-option>\r\n              }\r\n          </mat-select>\r\n          <mat-hint>\r\n            Editions are managed in the <code>/App_Data/app.json</code> file.\r\n            See <a href=\"https://go.2sxc.org/app-json\" target=\"_blank\">docs</a>.\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      }\r\n\r\n    </mat-card-content>\r\n    <div class=\"eav-card-space-div\"></div>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-button class=\"eav-button__with-icon\" (click)=\"autoGeneratedCode()\">\r\n        <mat-icon class=\"eav-icon\">code</mat-icon>\r\n        <span>Generate Code</span>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { map, take } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { RichResult } from '../../shared/models/rich-result';\r\nimport { Context } from '../../shared/services/context';\r\nimport { CopilotService } from './copilot-service';\r\n\r\n@Component({\r\n    selector: 'app-copilot-generator',\r\n    templateUrl: './copilot-generator.component.html',\r\n    imports: [\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        CommonModule,\r\n    ]\r\n})\r\nexport class CopilotGeneratorComponent {\r\n\r\n  outputType = input<string>();\r\n  title? = input<string>('Copilot Generator');\r\n  private copilotSvc = transient(CopilotService);\r\n\r\n  webApiGeneratedCode: string = 'admin/code/generateDataModels';\r\n  editions$ = this.copilotSvc.getEditions();\r\n\r\n  generators$ = this.copilotSvc.getGenerators()\r\n    .pipe(\r\n      map((gens) => gens.filter(g => g.outputType === this.outputType()))\r\n    );\r\n\r\n  selectedGenerator$ = this.generators$.pipe(map(gens => gens.find(g => g.name === this.selectedGenerator)));\r\n\r\n  selectedGenerator = '';\r\n  selectedEdition = '';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.generators$.pipe(take(1)).subscribe(gens => {\r\n      this.selectedGenerator = gens[0]?.name ?? '';\r\n    });\r\n    this.copilotSvc.specs.pipe(take(1)).subscribe(specs => {\r\n      // this.selectedGenerator = specs.generators[0]?.name ?? '';\r\n      this.selectedEdition = specs.editions.find(e => e.isDefault)?.name ?? '';\r\n    });\r\n  }\r\n\r\n  autoGeneratedCode() {\r\n    this.http.get<RichResult>(this.webApiGeneratedCode, {\r\n      params: {\r\n        appId: this.context.appId.toString(),\r\n        edition: this.selectedEdition,\r\n        generator: this.selectedGenerator,\r\n      }\r\n    }).subscribe(d => {\r\n      console.log(d);\r\n      this.snackBar.open(d.message + `\\n (this took ${d.timeTaken}ms)`, null, { duration: 5000, });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CopilotSpec } from '../copilot-specs';\r\nimport { CopilotGeneratorComponent } from '../copilot-generator.component';\r\n\r\n@Component({\r\n    selector: 'app-data-copilot',\r\n    templateUrl: './copilot-page.component.html',\r\n    styleUrl: './copilot-page.component.scss',\r\n    imports: [\r\n        CopilotGeneratorComponent\r\n    ]\r\n})\r\nexport class CopilotPageComponent {\r\n\r\n  data: CopilotSpec;\r\n\r\n  constructor(activatedRoute: ActivatedRoute) {\r\n    this.data = activatedRoute.snapshot.data as CopilotSpec;\r\n  }\r\n\r\n}\r\n","<div class=\"outer-container\">\r\n  <h1>{{data.heading}}</h1>\r\n  <p>\r\n    {{data.intro}}\r\n  </p>\r\n</div>\r\n\r\n<app-copilot-generator [outputType]=\"data.outputType\" [title]=\"data.title\"></app-copilot-generator>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\n\r\nexport abstract class AgActionsAlwaysRefresh implements ICellRendererAngularComp {\r\n  abstract agInit(params: any): void;\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","import { computed, Injectable, signal, Signal } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Of } from '../../../../../core';\r\nimport { webApiAppRoot } from '../../import-app/services/import-app.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { AnalyzeParts, SettingsStackItem } from '../sub-dialogs/analyze-settings/analyze-settings.models';\r\n\r\n@Injectable()\r\nexport class AnalyzeSettingsService extends HttpServiceBase {\r\n\r\n\r\n  // TEMP, not sure if this are correct\r\n  getStackSig(part: Of<typeof AnalyzeParts>, key?: string, view?: string, stringifyValue = false): Signal<SettingsStackItem[]> {\r\n    const stackSignal = signal<SettingsStackItem[]>([]);\r\n\r\n    this.getAndWrite<SettingsStackItem[]>(webApiAppRoot + 'GetStack', {\r\n      params: {\r\n        appId: this.appId,\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }, stackSignal);\r\n\r\n    return computed(() => stringifyValue\r\n      ? stackSignal().map(stackItem => ({ ...stackItem, _value: JSON.stringify(stackItem.Value) }))\r\n      : stackSignal()\r\n    );\r\n  }\r\n\r\n\r\n  getStack(part: Of<typeof AnalyzeParts>, key?: string, view?: string, stringifyValue = false): Observable<SettingsStackItem[]> {\r\n\r\n    return this.getHttp<SettingsStackItem[]>(webApiAppRoot + 'GetStack', {\r\n      params: {\r\n        appId: this.appId,\r\n        part,\r\n        ...(key && { key }),\r\n        ...(view && { view }),\r\n      },\r\n    }).pipe(\r\n      map(stack => {\r\n\r\n        if (!stringifyValue) { return stack; }\r\n\r\n        for (const stackItem of stack) {\r\n          stackItem._value = JSON.stringify(stackItem.Value);\r\n        }\r\n        return stack;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { JsonHelpers } from '../../../../shared/helpers/json.helpers';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\n\r\n@Component({\r\n    selector: 'app-analyze-settings-value',\r\n    templateUrl: './analyze-settings-value.component.html',\r\n    styleUrls: ['./analyze-settings-value.component.scss'],\r\n    imports: [\r\n        MatRippleModule,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class AnalyzeSettingsValueComponent implements ICellRendererAngularComp {\r\n  value: string;\r\n\r\n  constructor() { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n  \r\n  copy(value: string) {\r\n    value = JsonHelpers.tryParse(value) ?? value;\r\n    this.clipboard.copyToClipboard(value);\r\n  }\r\n}\r\n","<div matRipple class=\"value-box highlight\" [tippy]=\"value\" (click)=\"copy(value)\">\r\n  <span class=\"value\">{{ value }}</span>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { App, PendingApp } from '../models/app.model';\r\n\r\n const webApiAppRootList = 'admin/app/list';\r\n const webApiAppRootInheritableApps = 'admin/app/InheritableApps';\r\n const webApiAppRootPendingApps = 'admin/app/GetPendingApps';\r\n const webApiAppRootApp = 'admin/app/app';\r\n const webApiAppRootInstallPendingApps = 'admin/app/InstallPendingApps';\r\n const webApiAppRootFlushcache = 'admin/app/flushcache';\r\n\r\n@Injectable()\r\nexport class AppsListService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getSignal<App[]>(webApiAppRootList, {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getInheritable() {\r\n    return this.getSignal<App[]>(webApiAppRootInheritableApps, {\r\n      params: { zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  getPendingApps() {\r\n    return this.getSignal<PendingApp[]>(webApiAppRootPendingApps, {\r\n      params: { zoneId: this.zoneId },\r\n    });\r\n  }\r\n\r\n  create(name: string, inheritAppId?: number, templateId?: number) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootApp), {}, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n        name,\r\n        ...(inheritAppId != null && { inheritAppId }),\r\n        ...(templateId != null && { templateId }),\r\n      },\r\n    });\r\n  }\r\n\r\n  installPendingApps(pendingApps: PendingApp[]) {\r\n    return this.http.post<null>(this.apiUrl(webApiAppRootInstallPendingApps), pendingApps, {\r\n      params: {\r\n        zoneId: this.zoneId,\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(appId: number) {\r\n    return this.http.delete<null>(this.apiUrl(webApiAppRootApp), {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n\r\n  flushCache(appId: number) {\r\n    return this.getHttpApiUrl<null>(webApiAppRootFlushcache, {\r\n      params: { zoneId: this.zoneId, appId: appId.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { FeatureState } from '../../features/models';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { License, LicenseDownloadInfo, LicenseUploadInfo } from '../models/license.model';\r\n\r\nconst webAPiLicenseRetrieve = 'sys/license/Retrieve';\r\nconst webApiFeatSaveNew = 'admin/feature/SaveNew';\r\nconst webApiLicSummary = 'sys/license/Summary';\r\nconst webApiUpload = 'sys/license/Upload';\r\n\r\n@Injectable()\r\nexport class FeaturesConfigService extends HttpServiceBase {\r\n\r\n  saveFeatures(featuresStates: FeatureState[]): Observable<null> {\r\n    return this.http.post<null>(this.apiUrl(webApiFeatSaveNew), featuresStates);\r\n  }\r\n\r\n  getLicenses(): Observable<License[]> { // Use new Signals\r\n    return this.getHttpApiUrl<License[]>(webApiLicSummary);\r\n  }\r\n\r\n  getLicensesSig() { // Use new Signals\r\n    return this.getSignal<License[]>(webApiLicSummary);\r\n  }\r\n\r\n  uploadLicense(file: File): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<LicenseUploadInfo>(this.apiUrl(webApiUpload), formData)\r\n      .pipe(\r\n        map(info => ({\r\n          Success: info.Success,\r\n          Messages: [{\r\n            MessageType: info.Success ? FileUploadMessageTypes.Success : FileUploadMessageTypes.Error,\r\n            Text: `License ${info.Success ? 'uploaded' : 'upload failed'}: ${info.Message}`,\r\n          }],\r\n        } satisfies FileUploadResult)),\r\n      );\r\n  }\r\n\r\n  retrieveLicense(): Observable<LicenseDownloadInfo> {\r\n    return this.getHttpApiUrl<LicenseDownloadInfo>(webAPiLicenseRetrieve);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { SiteLanguage, SiteLanguagePermissions } from '../models/site-language.model';\r\nimport { SystemInfoSet } from '../models/system-info.model';\r\n\r\nconst webApiZoneRootGetLanguages = 'admin/zone/GetLanguages';\r\nconst webApiZoneRootSwitchLanguage = 'admin/zone/SwitchLanguage';\r\nconst webApiZoneRootGetSystemInfo = 'admin/zone/GetSystemInfo';\r\nconst webApiAppRootRootlanguages = 'admin/app/languages';\r\n\r\n@Injectable()\r\nexport class ZoneService extends HttpServiceBase {\r\n\r\n  getLanguage(initial: undefined) {\r\n    return this.getSignal<SiteLanguage[]>(webApiZoneRootGetLanguages, {}, initial);\r\n  }\r\n\r\n  toggleLanguage(code: string, enable: boolean) {\r\n    return this.getHttpApiUrl<null>(webApiZoneRootSwitchLanguage, {\r\n      params: { cultureCode: code, enable: enable.toString() },\r\n    });\r\n  }\r\n\r\n  // toggleLanguageSig(code: string, enable: boolean)  {\r\n  //   return this.getSignal<null>(webApiZoneRootSwitchLanguage, {\r\n  //     params: { cultureCode: code, enable: enable.toString() },\r\n  //   });\r\n  // }\r\n\r\n  getSystemInfo(initial: undefined) {\r\n    return this.getSignal<SystemInfoSet>(webApiZoneRootGetSystemInfo, {}, initial);\r\n  }\r\n\r\n  getLanguagesPermissions(initial: undefined) {\r\n    return this.getSignal<SiteLanguagePermissions[]>(webApiAppRootRootlanguages, {\r\n      params: { appId: this.appId },\r\n    }, initial);\r\n  };\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentExportDialog: DialogConfig = {\r\n  name: 'EXPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentExportComponent } = await import('./content-export.component');\r\n    return ContentExportComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentExportDialog } from './content-export-dialog.config';\r\n\r\nexport const ContentExportRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentExportDialog }\r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentExport } from '../models/content-export.model';\r\n\r\nconst webApiEntityRootDownload = 'admin/entity/Download';\r\nconst webApiEntityRootJson = 'admin/entity/Json';\r\nconst webApiTypeRootJson = 'admin/type/Json';\r\nconst webApiTypeRootJsonBundleExport = 'admin/type/JsonBundleExport';\r\nconst webApiTypeRootJsonBundleSave = 'admin/type/BundleSave';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ContentExportService extends HttpServiceBase {\r\n\r\n  exportContent(values: ContentExport, selectedIds: number[]) {\r\n    const selectedIdsString = selectedIds ? '&selectedids=' + selectedIds.join() : '';\r\n    const url = this.apiUrl(webApiEntityRootDownload)\r\n      + '?appId=' + this.appId\r\n      + '&language=' + values.language\r\n      + '&defaultLanguage=' + values.defaultLanguage\r\n      + '&contentType=' + values.contentTypeStaticName\r\n      + '&recordExport=' + values.recordExport\r\n      + '&resourcesReferences=' + values.resourcesReferences\r\n      + '&languageReferences=' + values.languageReferences\r\n      + selectedIdsString;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportJson(typeName: string) {\r\n    const url = this.apiUrl(webApiTypeRootJson)\r\n      + '?appId=' + this.appId\r\n      + '&name=' + typeName;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  exportEntity(id: number, prefix: string, metadata: boolean) {\r\n    const url = this.apiUrl(webApiEntityRootJson)\r\n      + '?appId=' + this.appId\r\n      + '&id=' + id\r\n      + '&prefix=' + prefix\r\n      + '&withMetadata=' + metadata;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentImportDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_TYPE_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentImportComponent } = await import('./content-import.component');\r\n    return ContentImportComponent;\r\n  }\r\n};\r\n\r\nexport interface ContentImportDialogData {\r\n  files?: File[];\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentImportDialog } from './content-import-dialog.config';\r\n\r\nexport const contentImportRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentImportDialog }\r\n  },\r\n];\r\n\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const importContentItemDialog: DialogConfig = {\r\n  name: 'IMPORT_CONTENT_ITEM_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportContentItemComponent: ImportContentItemComponent } = await import('./import-content-item.component');\r\n    return ImportContentItemComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentItemsDialog: DialogConfig = {\r\n  name: 'CONTENT_ITEMS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentItemsComponent } = await import('./content-items.component');\r\n    return ContentItemsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importContentItemDialog } from './import-content-item/import-content-item-dialog.config';\r\nimport { contentItemsDialog } from './content-items-dialog.config';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\n\r\nexport const contentItemsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentItemsDialog },\r\n    children: [\r\n      ...GoToMetadata.getRoutes(),\r\n      {\r\n        path: 'export/:contentTypeStaticName',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'export/:contentTypeStaticName/:selectedIds',\r\n        loadChildren: () => import('../content-export/content-export.routing').then(m => m.ContentExportRoutes)\r\n      },\r\n      {\r\n        path: 'import',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: importContentItemDialog }\r\n      },\r\n      {\r\n        path: ':contentTypeStaticName/import',\r\n        loadChildren: () => import('../content-import/content-import.routing').then(m => m.contentImportRoutes),\r\n        data: { title: 'Import Items' },\r\n      },\r\n      ...EditRoutes,\r\n    ]\r\n  },\r\n];\r\n\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const contentTypeFieldsDialog: DialogConfig = {\r\n  name: 'CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'large',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ContentTypeFieldsComponent } = await import('./content-type-fields.component');\r\n    return ContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { DialogConfig } from '../../shared/models/dialog-config.model';\r\n\r\nexport const editContentTypeFieldsDialog: DialogConfig = {\r\n  name: 'EDIT_CONTENT_TYPE_FIELDS_DIALOG',\r\n  initContext: false,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { EditContentTypeFieldsComponent } = await import('./edit-content-type-fields.component');\r\n    return EditContentTypeFieldsComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { EditRoutes } from '../edit/edit.routing';\r\nimport { GoToMetadata } from '../metadata';\r\nimport { GoToPermissions } from '../permissions/go-to-permissions';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { contentTypeFieldsDialog } from './content-type-fields-dialog.config';\r\nimport { editContentTypeFieldsDialog } from './edit-content-type-fields/edit-content-type-fields-dialog.config';\r\n\r\nexport const contentTypeFieldsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: contentTypeFieldsDialog },\r\n    children: [\r\n      {\r\n        path: 'add/:contentTypeStaticName',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog }\r\n      },\r\n      {\r\n        path: 'update/:contentTypeStaticName/:id/:editMode',\r\n        component: DialogEntryComponent,\r\n        data: { dialog: editContentTypeFieldsDialog },\r\n      },\r\n      ...GoToMetadata.getRoutes(),\r\n      GoToPermissions.route,\r\n      ...EditRoutes,\r\n    ]\r\n  }\r\n];\r\n","import { Directive, input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appReservedNames]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: ReservedNamesValidatorDirective, multi: true },\r\n  ],\r\n})\r\nexport class ReservedNamesValidatorDirective implements Validator {\r\n  appReservedNames = input<Record<string, string>>({});\r\n\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    if (!control.value) { return null; }\r\n\r\n    const controlValue = (control.value as string).toLocaleLowerCase();\r\n    const reservedName = Object.keys(this.appReservedNames()).find(name => name.toLocaleLowerCase() === controlValue);\r\n    return reservedName ? { reservedNames: this.appReservedNames()[reservedName] } : null;\r\n  }\r\n\r\n  static mergeReserved(reservedNames: Record<string, string>, fields: {StaticName: string }[]) {\r\n    const existingFields: Record<string, string> = {};\r\n    fields.forEach(field => {\r\n      existingFields[field.StaticName] = 'this field already exists';\r\n    });\r\n    return {\r\n      ...reservedNames,\r\n      ...existingFields,\r\n    };\r\n  }\r\n\r\n}\r\n","import { environment } from '../../environments/environment';\r\n\r\n/**\r\n * List of fields to debug across the entire application.\r\n * \r\n * Change as you need, but after debugging, best set it back to [].\r\n */\r\nexport const DebugFields: string[] = !environment.production\r\n  // ? ['StringPicker']\r\n  // ? ['NumberInputAddUntillDevisibleBy5']\r\n  // ? ['WysiwygConfiguration']\r\n  // ? ['Items']\r\n  ? ['ViewController']\r\n  // ? ['Title']\r\n  // ? [] // no fields\r\n  // ? ['*'] // all fields\r\n  : [];\r\n","import { AbstractControl } from '@angular/forms';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { DebugFields } from '../../edit-debug';\r\nimport { FieldValueHelpers } from '../helpers/field-value.helpers';\r\nimport { ValidationMsgHelper } from '../validation/validation-messages.helpers';\r\nimport { AbstractControlPro } from '../validation/validation.helpers';\r\n\r\nconst logSpecs = {\r\n  all: true,\r\n  constructor: false,\r\n  markTouched: false,\r\n  set: false,\r\n  disable: false,\r\n  getErrors: true,\r\n  fields: [...DebugFields, '*'],\r\n};\r\n\r\nconst pfx = 'ValidationMessage.';\r\n\r\n/**\r\n * Provides information about the UI Control, but NOT the value.\r\n * It is used to simplify the logic when interacting with the Angular Virtual Form.\r\n */\r\nexport class UiControl {\r\n\r\n  log = classLog({UiControl}, logSpecs);\r\n\r\n  constructor(\r\n    public control: AbstractControl,\r\n    private name = 'unknown',\r\n    private moreDisabled: boolean = false,\r\n  ) {\r\n    // Patch control with dummy object for the nullable case where we're just creating a fake control...\r\n    this.control ??= { dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl;\r\n    this.log.extendName(`[${name}]`);\r\n    this.log.aIfInList('fields', this.name, { moreDisabled }, 'constructor');\r\n  }\r\n\r\n  static emptyControl() {\r\n    return new UiControl({ dirty: false, invalid: false, touched: false, value: null, disabled: false } as AbstractControl);\r\n  }\r\n\r\n  //#region simple direct properties & complex properties\r\n  get dirty() { return this.control.dirty; }\r\n  get invalid() { return this.control.invalid; }\r\n  get touched() { return this.control.touched; }\r\n  get disabled() { return this.control.disabled || this.moreDisabled; }\r\n  get touchedAndInvalid() { return this.control.touched && this.control.invalid; }\r\n  //#endregion\r\n\r\n  //#region methods\r\n\r\n  markTouched(): void {\r\n    this.log.aIfInList('fields', this.name, null, 'markTouched');\r\n    UiControl.markTouched(this.control);\r\n  }\r\n\r\n  setIfChanged(newValue: FieldValue): void {\r\n    const before = this.control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'setIfChanged');\r\n    if (isEqual(newValue, this.control.value)) return;\r\n    this.#set(newValue);\r\n  }\r\n\r\n  /** Use to update form controls value */\r\n  #set(newValue: FieldValue): void {\r\n    const control = this.control;\r\n    const before = control.value;\r\n    this.log.aIfInList('fields', this.name, { before, newValue }, 'set');\r\n\r\n    if (!control.touched)\r\n      control.markAsTouched();\r\n\r\n    if (!control.dirty && !FieldValueHelpers.fieldValuesAreEqual(before, newValue))\r\n      control.markAsDirty();\r\n\r\n    // Note: 2024-10-21 ca. 18.02 we have some timing issues, error always seems to show previous error; maybe fixed now, otherwise revisit\r\n    // Set value must happen at the end, otherwise errors will be late by one cycle\r\n    // for example, they could show \"required\" after the value was\r\n    control.patchValue(newValue);\r\n  }\r\n\r\n  disable(disable: boolean): void {\r\n    this.log.aIfInList('fields', this.name, null, `disable: ${disable}`);\r\n    UiControl.disable(this.control, disable);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region private helpers\r\n\r\n  /** TODO: Try to remove this by assigning controls [formControlName] in [formGroup] */\r\n  static markTouched(control: AbstractControl): void {\r\n    if (control.touched)\r\n      return;\r\n\r\n    control.markAsTouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  /** Disables/enables control if not already disabled/enabled. Use this helper to trigger fewer events on the form */\r\n  static disable(control: AbstractControl, disable: boolean) {\r\n    if (control.disabled === disable)\r\n      return;\r\n\r\n    if (disable)\r\n      control.disable();\r\n    else\r\n      control.enable();\r\n  }\r\n  //#endregion\r\n\r\n  /** Calculates error message */\r\n  getErrors(): string {\r\n    const control = this.control;\r\n    const errors = control.errors;\r\n    const l = this.log.fnIfInList('getErrors', 'fields', this.name, { control, name: this.name });\r\n    if (!control.invalid)\r\n      return l.r('', 'valid');\r\n    if (!control.dirty && !control.touched)\r\n      return l.r('', 'not dirty or touched');\r\n\r\n    for (const errorKey of Object.keys(errors)) {\r\n      const error = (errorKey === 'formulaError')\r\n        ? control.errors['formulaMessage'] ?? ValidationMsgHelper.messages[errorKey]?.(true)\r\n        : ValidationMsgHelper.messages[errorKey]?.(true);\r\n      if (error)\r\n        return l.r(error, 'error found');\r\n    }\r\n\r\n    return l.r('', 'no error');\r\n  }\r\n\r\n  #warningMessages: Record<string, string> = {\r\n    jsonWarning: `${pfx}JsonWarning`,\r\n    formulaWarning: `${pfx}NotValid`,\r\n  };\r\n\r\n  getWarnings(): string {\r\n    const control = this.control as AbstractControlPro;\r\n    if (control._warning == null)\r\n      return '';\r\n    if (!control.dirty && !control.touched)\r\n      return '';\r\n\r\n    let warning = '';\r\n    for (const warningKey of Object.keys(control._warning)) {\r\n      warning = (warningKey === 'formulaWarning')\r\n        ? control._warning['formulaMessage'] ?? this.#warningMessages[warningKey]\r\n        : this.#warningMessages[warningKey];\r\n      if (warning)\r\n        break;\r\n    }\r\n    return warning;\r\n  }\r\n}\r\n","import { FieldValue } from '../../../../../../edit-types/src/FieldValue';\r\nimport { RxHelpers } from '../../../shared/rxJs/rx.helpers';\r\nimport { ItemValuesOfLanguage } from '../../state/item-values-of-language.model';\r\n\r\n\r\nexport class FieldValueHelpers {\r\n  /** Detect if two values are equal, incl. special NaN and Array checks */\r\n  static fieldValuesAreEqual(x: FieldValue, y: FieldValue): boolean {\r\n    if (x === y) return true;\r\n    if (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y)) return true;\r\n    if (Array.isArray(x) && Array.isArray(y) && RxHelpers.arraysEqual(x, y)) return true;\r\n    return false;\r\n  }\r\n\r\n  /** Searches where newValues has values different from oldValues */\r\n  static getItemValuesChanges(oldValues: ItemValuesOfLanguage, newValues: ItemValuesOfLanguage): ItemValuesOfLanguage {\r\n    const changes: ItemValuesOfLanguage = {};\r\n    for (const key of Object.keys(newValues)) {\r\n      const newValue = newValues[key];\r\n      const oldValue = oldValues[key];\r\n      if (FieldValueHelpers.fieldValuesAreEqual(newValue, oldValue))\r\n        continue;\r\n\r\n      changes[key] = newValue;\r\n    }\r\n    return Object.keys(changes).length === 0 ? undefined : changes;\r\n  }\r\n}\r\n","import { UntypedFormGroup } from '@angular/forms';\r\nimport { UiControl } from '../controls/ui-control';\r\n\r\n// prefix for translation keys\r\nconst prefix = 'ValidationMessage.';\r\nconst notValid = 'ValidationMessage.NotValid';\r\n\r\nexport class ValidationMsgHelper {\r\n\r\n  public static messages: Record<string, (long: boolean) => string> = {\r\n    required: (long: boolean) => long ? `${prefix}Required` : `${prefix}RequiredShort` /* short version in snackbar*/,\r\n    min: (long: boolean) => long ? `${prefix}Min` : notValid,\r\n    max: (long: boolean) => long ? `${prefix}Max` : notValid,\r\n    minNoItems: (long: boolean) => long ? `${prefix}MinNoItems` : notValid,\r\n    maxNoItems: (long: boolean) => long ? `${prefix}MaxNoItems` : notValid,\r\n    pattern: (long: boolean) => long ? `${prefix}Pattern` : notValid,\r\n    decimals: (long: boolean) => long ? `${prefix}Decimals` : notValid,\r\n    jsonError: (long: boolean) => long ? `${prefix}JsonError` : notValid,\r\n    formulaError: (long: boolean) => notValid,\r\n  };\r\n\r\n  /** Marks controls as touched to show errors beneath controls and collects error messages */\r\n  static validateForm(form: UntypedFormGroup): Record<string, string> {\r\n    const errors: Record<string, string> = {};\r\n    for (const [controlKey, control] of Object.entries(form.controls)) {\r\n      UiControl.markTouched(control);\r\n\r\n      if (!control.invalid) continue;\r\n\r\n      for (const errorKey of Object.keys(control.errors)) {\r\n        errors[controlKey] = this.messages[errorKey]?.(false);\r\n        if (errors[controlKey]) break;\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const importAppDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppComponent } = await import('./import-app.component');\r\n    return ImportAppComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importAppDialog } from './import-app-dialog.config';\r\n\r\nexport const importRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: importAppDialog }\r\n  }\r\n];\r\n\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const itemHistoryDialog: DialogConfig = {\r\n  name: 'ITEM_HISTORY_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ItemHistoryComponent } = await import('./item-history.component');\r\n    return ItemHistoryComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { itemHistoryDialog } from './item-history-dialog.config';\r\n\r\nexport const historyRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: itemHistoryDialog, title: 'Item History' }\r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { ReplaceConfig } from '../../replace-content/replace-config.model';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { ContentGroup, ContentGroupAdd } from '../models/content-group.model';\r\nimport { GroupHeader } from '../models/group-header.model';\r\n\r\nconst webApiContentGroup = 'cms/contentgroup/';\r\n\r\n@Injectable()\r\nexport class ContentGroupService extends HttpServiceBase {\r\n\r\n  getItems(item: ContentGroup) {\r\n    return this.getHttpApiUrl<ReplaceConfig>(webApiContentGroup + 'replace', {\r\n      params: { appId: this.appId, guid: item.guid, part: item.part, index: item.index.toString() }\r\n    });\r\n  }\r\n\r\n  saveItem(item: ContentGroupAdd) {\r\n    return this.http.post<null>(this.apiUrl(webApiContentGroup + 'replace'), {}, {\r\n      params: { guid: item.guid, part: item.part, index: item.index.toString(), entityId: item.id.toString(), add: `${item.add}` }\r\n    });\r\n  }\r\n\r\n  removeItem(contentGroup: ContentGroup, index: number) {\r\n    // note: the server checks if the part == 'content' and will automatically treat it as a pair with presentation\r\n    return this.http.delete<null>(this.apiUrl('cms/list/delete'), {\r\n      params: { index: index, parent: contentGroup.guid, fields: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getList(contentGroup: ContentGroup) {\r\n    return this.getHttpApiUrl<GroupHeader[]>(webApiContentGroup + 'itemlist', {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  saveList(contentGroup: ContentGroup, resortedList: GroupHeader[]) {\r\n    return this.http.post<boolean>(this.apiUrl(webApiContentGroup + 'itemlist'), resortedList, {\r\n      params: { appId: this.appId, guid: contentGroup.guid, part: contentGroup.part }\r\n    });\r\n  }\r\n\r\n  getHeader(contentGroup: ContentGroup, initial: GroupHeader) {\r\n    return this.getSignal<GroupHeader>(webApiContentGroup + 'header', {\r\n      params: { appId: this.appId, guid: contentGroup.guid }\r\n    }, initial);\r\n  }\r\n\r\n}\r\n","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const replaceContentDialog: DialogConfig = {\r\n  name: 'REPLACE_CONTENT_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ReplaceContentComponent } = await import('./replace-content.component');\r\n    return ReplaceContentComponent;\r\n  }\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { replaceContentDialog } from './replace-content-dialog.config';\r\nimport { EditRoutesNoHistory } from '../edit/edit.routing';\r\n\r\nexport const replaceContentRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DialogEntryComponent,\r\n    data: { dialog: replaceContentDialog },\r\n    children: [\r\n      // Note 2024-07-01 2dm - not sure why it is configured without history, but to be safe I'll keep it for now\r\n      ...EditRoutesNoHistory\r\n    ],\r\n  },\r\n];\r\n","import { ChangeDetectorRef, Component, Injector, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NavigateFormResult } from '../../../edit/routing/edit-routing.service';\r\nimport { classLog } from '../../logging';\r\nimport { DialogConfig } from '../../models/dialog-config.model';\r\nimport { EavWindow } from '../../models/eav-window.model';\r\nimport { Context } from '../../services/context';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n@Component({\r\n  selector: 'app-dialog-entry',\r\n  templateUrl: './dialog-entry.component.html',\r\n  imports: [],\r\n  providers: [\r\n    Context, // this is used in the dialog to get the correct App\r\n  ]\r\n})\r\nexport class DialogEntryComponent implements OnInit, OnDestroy {\r\n  \r\n  log = classLog({DialogEntryComponent});\r\n  \r\n  #dialogData: Record<string, any>;\r\n  #dialog: MatDialogRef<any>;\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private context: Context,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private injector: Injector,\r\n  ) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.#dialogData = navigation?.extras?.state || {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    const l = this.log.fn('ngOnInit');\r\n    const dialogConfig: DialogConfig = this.route.snapshot.data.dialog;\r\n    if (dialogConfig == null)\r\n      throw new Error(`Could not find config for dialog. Did you forget to add DialogConfig to route data?`);\r\n\r\n    l.a('Open dialog: '+ dialogConfig.name, { id: this.context.id, context: this.context });\r\n\r\n    dialogConfig.getComponent(this.injector).then(component => {\r\n      // spm Workaround for \"feature\" where you can't open new dialog while last one is still opening\r\n      // https://github.com/angular/components/commit/728cf1c8ebd49e089f4bae945511bb0918972c26\r\n      const dialog = (this.matDialog as any);\r\n      if (dialog._dialogAnimatingOpen && dialog._lastDialogRef)\r\n        (dialog._lastDialogRef as MatDialogRef<any>).afterOpened()\r\n          .subscribe(() => this.openDialogComponent(dialogConfig, component));\r\n      else\r\n        this.openDialogComponent(dialogConfig, component);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.#dialog.close();\r\n  }\r\n\r\n  private openDialogComponent(dialogConfig: DialogConfig, component: Type<any>) {\r\n    this.log.a(`Open dialog(initContext: ${dialogConfig.initContext})`, { name: dialogConfig.name, 'Contextid:': this.context.log.svcId, 'Context:': this.context });\r\n    if (dialogConfig.initContext)\r\n      this.context.init(this.route);\r\n\r\n    this.#dialog = this.matDialog.open(component, {\r\n      autoFocus: false,\r\n      backdropClass: 'dialog-backdrop',\r\n      closeOnNavigation: false,\r\n      data: this.#dialogData,\r\n      panelClass: [\r\n        'dialog-panel',\r\n        `dialog-panel-${dialogConfig.panelSize}`,\r\n        dialogConfig.showScrollbar ? 'show-scrollbar' : 'no-scrollbar',\r\n        ...(dialogConfig.panelClass ? dialogConfig.panelClass : []),\r\n      ],\r\n      // spm NOTE: position used to force align-items: flex-start; on cdk-global-overlay-wrapper.\r\n      // Real top margin is overwritten in css e.g. dialog-panel-large\r\n      position: { top: '0' },\r\n      viewContainerRef: this.viewContainerRef,\r\n    });\r\n\r\n    this.#dialog.afterClosed().subscribe((data: any) => {\r\n      this.log.a('Dialog was closed - name:' + dialogConfig.name, { data });\r\n\r\n      const navRes = data as NavigateFormResult;\r\n      if (navRes?.navigateUrl != null) {\r\n        this.router.navigate([navRes.navigateUrl]);\r\n        return;\r\n      }\r\n\r\n      if (this.route.pathFromRoot.length <= 3) {\r\n        try {\r\n          window.parent.$2sxc.totalPopup.close();\r\n        } catch (error) { }\r\n        return;\r\n      }\r\n\r\n      if (this.route.snapshot.url.length > 0)\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent, state: data });\r\n      else\r\n        this.router.navigate(['./'], { relativeTo: this.route.parent.parent, state: data });\r\n    });\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","/**\r\n * Do not reuse regex:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test#using_test_on_a_regex_with_the_global_flag\r\n */\r\nexport function guidRegex(): RegExp {\r\n  return /^[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}$/i;\r\n}\r\n","\r\nexport class JsonHelpers {\r\n\r\n  /** Tries to parse string as JSON */\r\n  static tryParse(input: string): any {\r\n    try {\r\n      return JSON.parse(input);\r\n    } catch { }\r\n  }\r\n}\r\n","import { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\nexport function loadScripts(scriptObjects: ScriptObject[], callback: () => void, iteration = 0) {\r\n  const isLast = scriptObjects.length === iteration + 1;\r\n  const newCallback = isLast ? callback : loadScripts.bind(this, scriptObjects, callback, iteration + 1);\r\n  const scrObj = scriptObjects[iteration];\r\n\r\n  const global = typeof scrObj.test === 'string' ? scrObj.test : null;\r\n  const test = typeof scrObj.test === 'function' ? scrObj.test : null;\r\n  const w = window as Record<string, any>;\r\n\r\n  if (global != null && !!w[global]) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  if (test != null && test()) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  window.require([scrObj.src], (exportedVar: any) => {\r\n    if (exportedVar && !w[global]) {\r\n      w[global] = exportedVar;\r\n    }\r\n    newCallback();\r\n  });\r\n}\r\n\r\nexport interface ScriptObject {\r\n  /** window.xxx or a function that returns a boolean */\r\n  test: string | (() => boolean);\r\n  src: string;\r\n}\r\n","import { EnvironmentSpecs } from '@2sic.com/2sxc-typings';\r\nimport { DialogContextApp } from '../models/dialog-context.models';\r\nimport { EavWindow } from '../models/eav-window.model';\r\n\r\ndeclare const window: EavWindow;\r\n\r\n/**\r\n * This ensures that $2sxc is fully initialized with parameters which are provided later on\r\n * The appApi is being added in v12\r\n * It's important because in Oqtane the app-api root is different in from the normal admin-apis\r\n */\r\nexport function UpdateEnvVarsFromDialogSettings(appContext: DialogContextApp): void {\r\n  try {\r\n    const includedApiRoot = appContext?.Api;\r\n    if (!includedApiRoot) return;\r\n\r\n    const old2sxcHeader = (window.$2sxc.env as any).header as EnvironmentSpecs;\r\n    const new2sxcHeader = { ...old2sxcHeader, appApi: includedApiRoot } as EnvironmentSpecs;\r\n    window.$2sxc.env.load(new2sxcHeader);\r\n  } catch { /* ignore */ }\r\n}\r\n","import { Of } from '../../../../../core';\r\nimport { PermissionsCount } from '../../app-administration/models/permissions-count.model';\r\nimport { Language } from './language.model';\r\n\r\nexport interface DialogContextApp {\r\n  /** Root for app APIs and content/query */\r\n  Api: string;\r\n  Folder: string;\r\n  GettingStartedUrl: string;\r\n  Id: number;\r\n  Identifier: string;\r\n  IsContentApp: boolean;\r\n  IsGlobalApp: boolean;\r\n  IsInherited: boolean;\r\n  IsShared: boolean;\r\n  IsSiteApp: boolean;\r\n  Name: string;\r\n  Permissions: PermissionsCount;\r\n  SettingsScope: Of<typeof AppScopes>;\r\n  Url: string;\r\n  SharedUrl: string;\r\n\r\n  /** New app icon */\r\n  Icon: string;\r\n}\r\n\r\nexport interface ApiKeySpecs {\r\n  NameId: string;\r\n  ApiKey: string;\r\n  IsDemo: boolean;\r\n}\r\n\r\nexport const AppScopes = {\r\n  App: 'App',\r\n  Site: 'Site',\r\n  Global: 'Global',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n\r\n\r\nexport interface DialogContextEnable {\r\n  /** Determines if app admin should show app-permissions (true for Apps, false for Content and Global) */\r\n  AppPermissions?: boolean;\r\n  /** Determines if Code editing should be enabled (true for super-users) */\r\n  CodeEditor?: boolean;\r\n  DebugMode: boolean;\r\n  /** True if saving of formulas should be enabled (for edit-ui) */\r\n  FormulaSave?: boolean;\r\n  /** While debug is enabled, this allows some Edit Ui actions even when they are disabled in fields settings */\r\n  OverrideEditRestrictions?: boolean;\r\n  /** Determines if Queries should be enabled (true for Apps) */\r\n  Query?: boolean;\r\n}\r\n\r\nexport interface DialogContextLanguage {\r\n  Current: string;\r\n  List: Language[];\r\n  Primary: string;\r\n}\r\n\r\nexport interface DialogContextPage {\r\n  Id: number;\r\n}\r\n\r\nexport interface DialogContextSite {\r\n  DefaultApp: DialogContextSiteApp;\r\n  Id: number;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSystem {\r\n  DefaultApp: DialogContextSiteApp;\r\n  PrimaryApp: DialogContextSiteApp;\r\n  Url: string;\r\n}\r\n\r\nexport interface DialogContextSiteApp {\r\n  ZoneId: number;\r\n  AppId: number;\r\n}\r\n\r\nexport interface DialogContextUser {\r\n  Email: string;\r\n  Id: number;\r\n  Guid: string;\r\n  IsAnonymous: boolean;\r\n  IsSiteAdmin: boolean;\r\n  IsContentAdmin: boolean;\r\n  IsSystemAdmin: boolean;\r\n  Name: string;\r\n  Username: string;\r\n}\r\n\r\n// export interface DialogContextFeature {\r\n//   NameId: string;\r\n//   Enabled: boolean;\r\n// }\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogTypeConstants } from '../constants/dialog-type.constants';\r\n// tslint:disable-next-line:max-line-length\r\nimport { keyAppId, keyContentBlockId, keyDebug, keyDialog, keyExtras, keyIsShared, keyItems, keyModuleId, keyPartOfPage, keyPipelineId, keyUrl, keyZoneId, prefix } from '../constants/session.constants';\r\nimport { DialogHashParams, ExtrasParam } from '../models/dialog-url-params.model';\r\nimport { EditForm, EditPrep, ViewOrFileIdentifier } from '../models/edit-form.model';\r\nimport { HttpServiceBase } from './http-service-base';\r\n\r\n@Injectable()\r\nexport class DialogService extends HttpServiceBase {\r\n\r\n  openCodeFile(path: string, isShared: boolean, templateId?: number) {\r\n    const dialog = DialogTypeConstants.Develop;\r\n    const form = {\r\n      items: [{\r\n        Path: path,\r\n        ...(templateId != null && EditPrep.editId(templateId)),\r\n      }] as ViewOrFileIdentifier[]\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyIsShared, isShared.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openQueryDesigner(queryId: number) {\r\n    const dialog = DialogTypeConstants.PipelineDesigner;\r\n    const form: EditForm = {\r\n      items: [EditPrep.editId(queryId)],\r\n    };\r\n\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyDialog, dialog),\r\n      ...this.buildHashParam(keyPipelineId, queryId.toString()),\r\n      ...this.buildHashParam(keyItems, JSON.stringify(form.items)),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppsManagement(zoneId: number, tab?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.Zone),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAppAdministration(zoneId: number, appId: number, tab?: string, scope?: string) {\r\n    const extras: ExtrasParam = {\r\n      ...(tab && { tab }),\r\n      ...(scope && { scope }),\r\n    };\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, zoneId.toString()),\r\n      ...this.buildHashParam(keyAppId, appId.toString()),\r\n      ...this.buildHashParam(keyDialog, DialogTypeConstants.App),\r\n      ...(Object.keys(extras).length ? this.buildHashParam(keyExtras, JSON.stringify(extras)) : ''),\r\n    };\r\n    const url = this.buildFullUrl(hashParams);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /** A lot of the link is identical when opening the admin-dialogs in a new window */\r\n  private buildSharedHashParams() {\r\n    const hashParams: DialogHashParams = {\r\n      ...this.buildHashParam(keyZoneId, this.zoneId),\r\n      ...this.buildHashParam(keyAppId, this.appId),\r\n      ...this.buildHashParam(keyModuleId, this.context.moduleId?.toString()),\r\n      ...this.buildHashParam(keyContentBlockId, this.context.contentBlockId?.toString()),\r\n      ...this.buildHashParam(keyPartOfPage),\r\n      ...(sessionStorage.getItem(keyDebug) ? this.buildHashParam(keyDebug) : {}),\r\n    };\r\n    return hashParams;\r\n  }\r\n\r\n  /** Encodes param if necessary */\r\n  private buildHashParam(key: string, value?: string) {\r\n    const rawKey = key.replace(prefix, '');\r\n    const valueTemp = (value != null) ? value : sessionStorage.getItem(key);\r\n    const rawValue = encodeURIComponent(valueTemp);\r\n    const hashParam: DialogHashParams = { [rawKey]: rawValue };\r\n    return hashParam;\r\n  }\r\n\r\n  private buildFullUrl(hashParams: DialogHashParams) {\r\n    const oldHref = sessionStorage.getItem(keyUrl);\r\n    const oldUrl = new URL(oldHref);\r\n    const newHref = oldUrl.origin + oldUrl.pathname + oldUrl.search;\r\n\r\n    const allHashParams: DialogHashParams = {\r\n      ...this.buildSharedHashParams(),\r\n      ...hashParams,\r\n    };\r\n    const hashUrl = Object.entries(allHashParams).reduce((acc, [key, value]) => `${acc}&${key}=${value}`, '').replace('&', '#');\r\n    return newHref + hashUrl;\r\n  }\r\n}\r\n","import { reduce } from './reduce';\nimport { operate } from '../util/lift';\nconst arrReducer = (arr, value) => (arr.push(value), arr);\nexport function toArray() {\n    return operate((source, subscriber) => {\n        reduce(arrReducer, [])(source).subscribe(subscriber);\n    });\n}\n"],"x_google_ignoreList":[46]}