{"version":3,"mappings":"kXAWO,IAAMA,EAAb,MAAM,QACJC,YACUC,EACAC,EACAC,EACAC,GAHAC,YACAA,eACAA,kBACAA,2BAGFA,qBAA8D,GAEtEC,WAAWC,GACTA,OAAK,MAALA,MAAUF,KAAKH,QAAQK,OAClBF,KAAKG,gBAAgBD,KACxBF,KAAKG,gBAAgBD,GAASF,KAAKI,kBAAkBF,GAAOG,QAAKC,KAAY,CAAEC,UAAU,MACpFP,KAAKG,gBAAgBD,GAI9BE,kBAAkBF,GAChB,OAAOF,KAAKJ,KAAKY,IAAoBR,KAAKF,WAAWW,MAAMb,KAAKc,OAAOC,yBAAgC,CACrGC,OAAQ,CAAEV,MAAY,MAALA,IAASF,KAAKH,QAAQK,MAAMW,cAC5CR,QACDS,KAAIC,IACFA,EAAeC,QAAQC,SAASC,KAAOH,EAAeC,QAAQC,SAASC,KAAKC,OAAOC,GAAYA,EAASC,WACjGN,KAETO,OAAIP,IACFf,KAAKD,oBAAoBwB,WAAWR,EAAeC,QAAQQ,OAAOC,4DA3B7D/B,GAAsBgC,2EAAtBhC,EAAsBiC,QAAtBjC,EAAsB,YAAtBA,GAAb","names":["AppDialogConfigService","constructor","http","context","dnnContext","globalConfigService","this","getShared$","appId","dialogSettings$","getDialogSettings","pipe","shareReplay","refCount","get","$2sxc","apiUrl","webApiDialogRoot","params","toString","map","dialogSettings","Context","Language","List","filter","language","IsEnabled","tap","allowDebug","Enable","DebugMode","i0","factory"],"sources":["./projects/eav-ui/src/app/app-administration/services/app-dialog-config.service.ts"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, shareReplay, tap } from 'rxjs';\r\nimport { GlobalConfigService } from '../../edit/shared/store/ngrx-data';\r\nimport { DialogSettings } from '../../shared/models/dialog-settings.model';\r\nimport { Context } from '../../shared/services/context';\r\n\r\nconst webApiDialogRoot = 'admin/dialog/';\r\n\r\n@Injectable()\r\nexport class AppDialogConfigService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private context: Context,\r\n    private dnnContext: DnnContext,\r\n    private globalConfigService: GlobalConfigService,\r\n  ) { }\r\n\r\n  private dialogSettings$: Record<number, Observable<DialogSettings>> = {};\r\n\r\n  getShared$(appId?: number) {\r\n    appId ??= this.context.appId;\r\n    if (!this.dialogSettings$[appId])\r\n      this.dialogSettings$[appId] = this.getDialogSettings(appId).pipe(shareReplay({ refCount: false }));\r\n    return this.dialogSettings$[appId];\r\n    // TODO: probably should add an onDestroy and ensure all subscriptions are killed\r\n  }\r\n\r\n  getDialogSettings(appId?: number) {\r\n    return this.http.get<DialogSettings>(this.dnnContext.$2sxc.http.apiUrl(webApiDialogRoot + 'settings'), {\r\n      params: { appId: appId ?? this.context.appId.toString() },\r\n    }).pipe(\r\n      map(dialogSettings => {\r\n        dialogSettings.Context.Language.List = dialogSettings.Context.Language.List.filter(language => language.IsEnabled);\r\n        return dialogSettings;\r\n      }),\r\n      tap(dialogSettings => {\r\n        this.globalConfigService.allowDebug(dialogSettings.Context.Enable.DebugMode);\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"projects_eav-ui_src_app_app-administration_services_app-dialog-config_service_ts-_ce591.4df4932ac44a1d99.js"}