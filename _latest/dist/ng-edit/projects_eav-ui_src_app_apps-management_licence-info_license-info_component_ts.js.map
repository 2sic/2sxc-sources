{"version":3,"file":"projects_eav-ui_src_app_apps-management_licence-info_license-info_component_ts.js","mappings":"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","sources":["./projects/eav-ui/src/app/apps-management/licence-info/active-features-count.pipe.ts","./projects/eav-ui/src/app/apps-management/licence-info/ag-grid-height.directive.ts","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/feature-details-dialog/feature-details-dialog.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled-reason/features-list-enabled-reason.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-list-enabled/features-list-enabled.component.html","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/features-status/features-status.component.html","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.ts","./projects/eav-ui/src/app/apps-management/licence-info/license-info.component.html","./projects/eav-ui/src/app/apps-management/licence-info/licenses-order.pipe.ts","./projects/eav-ui/src/app/features/expiration-extension.ts","./projects/eav-ui/src/app/shared/routing/dialog-routing.service.ts","./projects/eav-ui/src/app/shared/services/clipboard.service.ts","./projects/eav-ui/src/app/shared/services/service-base.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({\r\n  name: 'activeFeaturesCount',\r\n  standalone: true\r\n})\r\nexport class ActiveFeaturesCountPipe implements PipeTransform {\r\n\r\n  transform(license: License) {\r\n    return `${license.Features.filter(f => f.isEnabled).length}/${license.Features.length}`;\r\n  }\r\n}\r\n","import { Directive, ElementRef, input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAgGridHeight]',\r\n  standalone: true\r\n})\r\nexport class AgGridHeightDirective implements OnChanges {\r\n  itemsCount = input<number>(0);\r\n  headerHeight = input<number>(32);\r\n  rowHeight = input<number>(48);\r\n  maxRows = input<number>(100);\r\n\r\n  /** Fixes a bug where scrollbar appears when then is no overflow */\r\n  private extraHeight = 2;\r\n\r\n  private element: HTMLElement;\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    this.element = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.itemsCount != null) {\r\n      const rows = this.itemsCount() === 0 ? 2 : this.itemsCount() > this.maxRows() ? this.maxRows() : this.itemsCount();\r\n      this.element.style.height = `${this.headerHeight() + rows * this.rowHeight() + this.extraHeight}px`;\r\n    }\r\n  }\r\n}\r\n","import { Component, Inject, input, Optional } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { transient } from '../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { SafeHtmlPipe } from '../../../shared/pipes/safe-html.pipe';\r\nimport { ClipboardService } from '../../../shared/services/clipboard.service';\r\nimport { computedObj } from '../../../shared/signals/signal.utilities';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog.models';\r\n\r\n@Component({\r\n  selector: 'app-feature-details-dialog',\r\n  templateUrl: './feature-details-dialog.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n    SafeHtmlPipe,\r\n    TranslateModule,\r\n  ]\r\n})\r\nexport class FeatureDetailsDialogComponent {\r\n  specs = input<FeatureDetailsDialogData>();\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private dialogSpecs: FeatureDetailsDialogData,\r\n    protected dialog: MatDialogRef<FeatureDetailsDialogComponent>,\r\n  ) { }\r\n\r\n  protected mySpecs = computedObj('mySpecs', () =>  this.specs() ?? this.dialogSpecs );\r\n  protected feature = computedObj('feature', () => this.mySpecs()?.feature);\r\n  protected clipboard = transient(ClipboardService);\r\n}\r\n","@if (feature()) {\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{ feature().name }}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p [innerHtml]=\"feature().description | safeHtml\"></p>\r\n      <!-- Name ID -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">ID:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span (click)=\"clipboard.copyToClipboard(feature().nameId)\">{{ feature().nameId }}</span>\r\n        </div>\r\n      </div>\r\n      <!-- Status -->\r\n      @if (mySpecs().showStatus) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">{{ 'Features.Status' | translate }}:</div>\r\n          <div class=\"eav-info-row__value\">\r\n            <span>{{ (feature().isEnabled ? 'Features.Active' : 'Features.NotActive') | translate }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- GUID -->\r\n      @if (mySpecs().showGuid) {\r\n        <div class=\"eav-info-row\">\r\n          <div class=\"eav-info-row__label\">GUID:</div>\r\n          <div class=\"eav-info-row__value eav_click\">\r\n            <span (click)=\"clipboard.copyToClipboard(feature().guid)\">{{ feature().guid }}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      <!-- Security Rating -->\r\n      <div class=\"eav-info-row\">\r\n        <div class=\"eav-info-row__label\">Security Rating:</div>\r\n        <div class=\"eav-info-row__value\">\r\n          <span>{{ feature().security.Impact + ': ' + feature().security.Message }}</span>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <a [href]=\"feature().link\" target=\"_blank\" mat-raised-button class=\"eav-card-action-button\" color=\"accent\">\r\n        <mat-icon>open_in_new</mat-icon>\r\n        Find out more\r\n      </a>\r\n      @if (mySpecs().showClose != false) {\r\n        <button mat-raised-button class=\"eav-card-action-button\" (click)=\"dialog.close()\">Close</button>\r\n      }\r\n    </mat-card-actions>\r\n  </mat-card>\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled-reason',\r\n  templateUrl: './features-list-enabled-reason.component.html',\r\n  standalone: true,\r\n  imports: [TippyDirective],\r\n})\r\nexport class FeaturesListEnabledReasonComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n  feature: Feature;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n    this.feature = params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div [tippy]=\"feature.enabledReasonDetailed\">{{ value }}</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-features-list-enabled',\r\n  templateUrl: './features-list-enabled.component.html',\r\n  standalone: true,\r\n  imports: [MatIconModule],\r\n})\r\nexport class FeaturesListEnabledComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.value = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"icon-container\">\r\n  <mat-icon>{{ value ? 'check_box' : 'check_box_outline_blank' }}</mat-icon>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { Feature } from '../../../features/models/feature.model';\r\nimport { FeaturesStatusParams } from './features-status.models';\r\nimport { IdFieldParams } from '../../../shared/components/id-field/id-field.models';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-features-status',\r\n  templateUrl: './features-status.component.html',\r\n  styleUrls: ['./features-status.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    NgClass,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class FeaturesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean | null;\r\n  disabled: boolean;\r\n  tooltip: string;\r\n\r\n  private params: ICellRendererParams & FeaturesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & FeaturesStatusParams & IdFieldParams<Feature>): void {\r\n    this.params = params;\r\n    this.value = params.value;\r\n    this.disabled = params.isDisabled(params.data);\r\n    this.tooltip = params.tooltipGetter(params.data);\r\n  }\r\n\r\n  refresh(params: ICellRendererParams & FeaturesStatusParams): boolean {\r\n    this.disabled = this.params.isDisabled(this.params.data);\r\n    return true;\r\n  }\r\n\r\n  toggle(): void {\r\n    const feature: Feature = this.params.data;\r\n    let nextValue: boolean;\r\n    switch (this.value) {\r\n      case false:\r\n        nextValue = null;\r\n        break;\r\n      case null:\r\n        nextValue = true;\r\n        break;\r\n      case true:\r\n        nextValue = false;\r\n        break;\r\n    }\r\n    this.value = nextValue;\r\n    this.params.onToggle(feature, nextValue);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" [tippy]=\"tooltip\" [disabled]=\"disabled\" (change)=\"toggle()\" [ngClass]=\"{\r\n  'toggle-false': value === false,\r\n  'toggle-null': value === null\r\n  }\">\r\n</mat-slide-toggle>\r\n","import { AgGridAngular } from '@ag-grid-community/angular';\r\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { GridOptions, ModuleRegistry } from '@ag-grid-community/core';\r\nimport { AsyncPipe, JsonPipe, NgClass } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, computed, OnInit, signal, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogActions } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { catchError, forkJoin, map, Observable, of, share, startWith, Subject, switchMap, tap, timer } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ExpirationExtension } from '../../features/expiration-extension';\r\nimport { FeatureState } from '../../features/models';\r\nimport { Feature } from '../../features/models/feature.model';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldComponent } from '../../shared/components/id-field/id-field.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { TippyDirective } from '../../shared/directives/tippy.directive';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../shared/routing/dialog-routing.service';\r\nimport { License } from '../models/license.model';\r\nimport { FeaturesConfigService } from '../services/features-config.service';\r\nimport { ActiveFeaturesCountPipe } from './active-features-count.pipe';\r\nimport { AgGridHeightDirective } from './ag-grid-height.directive';\r\nimport { FeatureDetailsDialogComponent } from './feature-details-dialog/feature-details-dialog.component';\r\nimport { FeatureDetailsDialogData } from './feature-details-dialog/feature-details-dialog.models';\r\nimport { FeaturesListEnabledReasonComponent } from './features-list-enabled-reason/features-list-enabled-reason.component';\r\nimport { FeaturesListEnabledComponent } from './features-list-enabled/features-list-enabled.component';\r\nimport { FeaturesStatusComponent } from './features-status/features-status.component';\r\nimport { FeaturesStatusParams } from './features-status/features-status.models';\r\nimport { LicensesOrderPipe } from './licenses-order.pipe';\r\n\r\n@Component({\r\n  selector: 'app-license-info',\r\n  templateUrl: './license-info.component.html',\r\n  styleUrls: ['./license-info.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    NgClass,\r\n    SxcGridModule,\r\n    AgGridHeightDirective,\r\n    MatDialogActions,\r\n    MatButtonModule,\r\n    RouterOutlet,\r\n    AsyncPipe,\r\n    LicensesOrderPipe,\r\n    ActiveFeaturesCountPipe,\r\n    TippyDirective,\r\n    JsonPipe,\r\n  ],\r\n})\r\nexport class LicenseInfoComponent implements OnInit {\r\n  @ViewChild(AgGridAngular) private gridRef?: AgGridAngular;\r\n\r\n  gridOptions = this.#buildGridOptions();\r\n  #refreshLicenses$ = new Subject<void>();\r\n  viewModel$: Observable<LicenseInfoViewModel>;\r\n\r\n  #featuresConfigSvc = transient(FeaturesConfigService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  constructor(\r\n    private matDialog: MatDialog,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  disabled = signal(false);\r\n  #refreshLicensesSig = signal(0);\r\n\r\n  licensesSig = computed(() => {\r\n    const refreshState = this.#refreshLicensesSig();\r\n    this.disabled.set(false);\r\n    return this.#featuresConfigSvc.getLicensesSig();\r\n\r\n  });\r\n  // TODO: @2dg, ask 2dm licensesSig refresh is false\r\n  // licensesSignal = this.#featuresConfigSvc.getLicensesSig(); // Holt das Signal, nicht den Wert\r\n\r\n  // licensesSig2 = computed(() => {\r\n  //   const refreshState = this.#refreshLicensesSig(); // Ein Refresh-Mechanismus\r\n  //   const licenses = this.licensesSignal(); // Holt die Liste der Lizenzen (License[]), nicht das Signal selbst\r\n\r\n  //   this.disabled.set(false);\r\n\r\n  //   // Überprüfen, ob Lizenzen vorhanden sind, bevor sie erweitert werden\r\n  //   if (licenses) {\r\n  //     return licenses.map(l => ({\r\n  //       ...ExpirationExtension.expandLicense(l), // Lizenz erweitern\r\n  //       Features: l.Features.map((f: Feature) => ExpirationExtension.expandFeature(f)), // Features erweitern\r\n  //     }));\r\n  //   }\r\n\r\n  //   // Fallback, falls keine Lizenzen vorhanden sind\r\n  //   return [];\r\n  // });\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.#dialogRouter.doOnDialogClosed(() => {\r\n      this.#refreshLicenses$.next()\r\n      this.#refreshLicensesSig.set(this.#refreshLicensesSig() + 1);\r\n    });\r\n\r\n    this.viewModel$ =\r\n      this.#refreshLicenses$.pipe(\r\n        startWith(undefined),\r\n        switchMap(() => this.#featuresConfigSvc.getLicenses().pipe(catchError(() => of(undefined)))), // Use new http Signals\r\n        tap(() => {\r\n          this.disabled.set(false);\r\n        }),\r\n\r\n        // Fiddle with the data for development tests\r\n        // 2023-11-16 2dm disabled - causes trouble in production\r\n        // @STV - do you still need this? or is this a forgotten debug code?\r\n        // map(licenses => {\r\n        //   var licTesting = licenses[licenses.length - 2];\r\n        //   licTesting.Features[licTesting.Features.length - 1].Expiration = \"2023-08-25\";\r\n        //   return licenses;\r\n        // }),\r\n\r\n        // Expand the data to have pre-calculated texts/states\r\n        map(licenses => licenses.map(l => {\r\n          // const expandedFeatures = l.Features.map(f => ExpirationExtension.expandFeature(f));\r\n          return ({\r\n            ...ExpirationExtension.expandLicense(l),\r\n            Features: l.Features.map(f => ExpirationExtension.expandFeature(f)),\r\n          });\r\n        })),\r\n\r\n        // Share the resulting stream with all subscribers\r\n        share(),\r\n      )\r\n        //])\r\n        .pipe(\r\n          map((licenses) => ({ licenses })),\r\n        );\r\n  }\r\n\r\n  trackLicenses(index: number, license: License): string {\r\n    return license.Guid;\r\n  }\r\n\r\n\r\n  openRegistration(): void {\r\n    const router = this.#dialogRouter.router;\r\n    router.navigate([router.url.replace('license', '') + \"/registration\"]);\r\n  }\r\n\r\n  #showFeatureDetails(feature: Feature): void {\r\n    const data: FeatureDetailsDialogData = {\r\n      feature,\r\n      showGuid: true,\r\n      showStatus: true,\r\n    };\r\n    this.matDialog.open(FeatureDetailsDialogComponent, {\r\n      autoFocus: false,\r\n      data,\r\n      viewContainerRef: this.viewContainerRef,\r\n      width: '600px',\r\n    });\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  #toggleFeature(feature: Feature, enabled: boolean): void {\r\n    this.disabled.set(true);\r\n    const state: FeatureState = {\r\n      FeatureGuid: feature.guid,\r\n      Enabled: enabled,\r\n    };\r\n    forkJoin([this.#featuresConfigSvc.saveFeatures([state]), timer(100)]).subscribe({\r\n      error: () => {\r\n        this.#refreshLicensesSig.set(this.#refreshLicensesSig() + 1);\r\n        this.#refreshLicenses$.next();\r\n      },\r\n      next: () => {\r\n        this.#refreshLicensesSig.set(this.#refreshLicensesSig() + 1);\r\n        this.#refreshLicenses$.next();\r\n      },\r\n    });\r\n  }\r\n\r\n  // Note: @SDV\r\n  // I think this should serve as a good example of how to use the grid\r\n  // 1. eg. with cellDefaults and similar initial objects containing most commonly used options here\r\n  // 2. Also we should probably never add a valueGetter for the simple properties\r\n  // ...not sure why it's even in here, my guess is copy-paste of code which wasn't understood properly\r\n  // 3. I think the header-name should always be the first line, then the field\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.ItemsText,\r\n          headerName: 'ID',\r\n          field: 'nameId',\r\n          width: 200,\r\n          cellClass: 'no-outline',\r\n          cellRenderer: IdFieldComponent,\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<Feature> = {\r\n              tooltipGetter: (feature: Feature) => feature.nameId,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideFlex3,\r\n          headerName: 'Name',\r\n          field: 'name',\r\n          cellClass: 'primary-action highlight'.split(' '),\r\n          onCellClicked: (params) => {\r\n            this.#showFeatureDetails(params.data as Feature);\r\n          },\r\n        },\r\n        {\r\n\r\n          headerName: 'Enabled',\r\n          field: 'isEnabled',\r\n          width: 80,\r\n          cellClass: 'no-outline',\r\n          headerClass: 'dense',\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          cellRenderer: FeaturesListEnabledComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextNarrow,\r\n          headerName: 'Reason',\r\n          field: 'enabledReason',\r\n          cellRenderer: FeaturesListEnabledReasonComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ItemsText,\r\n          headerName: 'Expiration',\r\n          field: 'ExpMessage',\r\n          sortable: false,\r\n          width: 120,\r\n          tooltipValueGetter: (p) => (p.data as Feature & ExpirationExtension)?.expiration,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.ActionsPinnedRight7,\r\n          headerName: '',\r\n          field: 'enabledInConfiguration',\r\n          cellRenderer: FeaturesStatusComponent,\r\n          cellRendererParams: (() => {\r\n            const params: FeaturesStatusParams & IdFieldParams<Feature> = {\r\n              isDisabled: (feature) => !feature.isConfigurable || this.disabled(),\r\n              onToggle: (feature, enabled) => this.#toggleFeature(feature, enabled),\r\n              tooltipGetter: (feature: Feature) => feature.isConfigurable ? \"Toggle off | default | on\" : \"This feature can't be configured\",\r\n            };\r\n            return params;\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\n\r\ninterface LicenseInfoViewModel {\r\n  licenses: (License & ExpirationExtension)[];\r\n}\r\n\r\n\r\n","@if (viewModel$ | async; as vm) {\r\n  <!-- <pre>\r\n    Toast old: {{ vm | json }}\r\n    Toast new: {{ licensesSig()| json }}\r\n  </pre> -->\r\n\r\n  <mat-accordion multi>\r\n    @for (license of vm.licenses| licensesOrder; track trackLicenses($index, license)) {\r\n      <mat-expansion-panel #panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            <mat-icon class=\"panel-icon\" [tippy]=\"license.IsEnabled ? 'License is active' : 'License is not active'\">{{\r\n              license.IsEnabled ? 'check_circle_outline' : 'cancel'\r\n            }}</mat-icon>\r\n            <div>\r\n              <div class=\"panel-title\">\r\n                <span>{{ license.Name }}</span>\r\n                <span class=\"active-features-count\">{{ license | activeFeaturesCount }}</span>\r\n                <span> {{ license.ExpWarningIcon }}</span>\r\n              </div>\r\n              <div class=\"panel-description\" [ngClass]=\"{ expanded: panel.expanded }\">\r\n                {{ license.Description }}\r\n              </div>\r\n            </div>\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        @if (panel.expanded) {\r\n          <ag-grid-angular\r\n            class=\"ag-theme-material\"\r\n            [rowData]=\"license.Features\"\r\n            [gridOptions]=\"gridOptions\"\r\n            appAgGridHeight\r\n            [itemsCount]=\"license.Features?.length\"\r\n          >\r\n          </ag-grid-angular>\r\n        }\r\n      </mat-expansion-panel>\r\n    }\r\n  </mat-accordion>\r\n}\r\n\r\n<mat-dialog-actions align=\"start\">\r\n  <button mat-button class=\"eav-button__with-icon\" tippy=\"Registration\" (click)=\"openRegistration()\">\r\n    <mat-icon class=\"eav-icon\">app_registration</mat-icon>\r\n    <span>Registration</span>\r\n  </button>\r\n</mat-dialog-actions>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { License } from '../models/license.model';\r\n\r\n@Pipe({\r\n    name: 'licensesOrder',\r\n    standalone: true\r\n})\r\nexport class LicensesOrderPipe implements PipeTransform {\r\n\r\n  transform(licenses: License[]): any {\r\n    if (!Array.isArray(licenses)) { return licenses; }\r\n\r\n    const sorted = [...licenses].sort((a: License, b: License) => {\r\n      if (a.Priority < b.Priority) {\r\n        return -1;\r\n      } else if (a.Priority > b.Priority) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    return sorted;\r\n  }\r\n}\r\n","import { License } from '../apps-management/models/license.model';\r\nimport { Feature } from './models';\r\n\r\n/**\r\n * Helper class used in union with other classes to add expiration hints to features.\r\n * It's implemented as a class, so it's easier to bundle static functions.\r\n */\r\nexport class ExpirationExtension {\r\n\r\n  /** The expiration date as a human readable string. Not from the server; generated on the client */\r\n  ExpMessage?: string;\r\n  ExpIcon?: string;\r\n\r\n  ExpWarningIcon?: string;\r\n\r\n  static expandFeature(feature: Feature): Feature & ExpirationExtension {\r\n    return {\r\n      ...feature,\r\n      ...ExpirationExtension.getExpiration(feature?.expiration)\r\n    };\r\n  }\r\n\r\n  static expandLicense(license: License): License & ExpirationExtension {\r\n    // Wrap in Try-Catch to avoid errors in the UI\r\n    try {\r\n      // find the lowest expiration date on the features\r\n      const lowestExpiration = license?.Features?.map(f => f.expiration).sort()[0];\r\n      // if there is no lowest expiration date, skip the rest\r\n      if (lowestExpiration == null) return license;\r\n\r\n      // debugger;\r\n      const withState = {\r\n        ...license,\r\n        ...ExpirationExtension.getExpiration(lowestExpiration),\r\n      };\r\n\r\n      return withState;\r\n    } catch (error) {\r\n      return license;\r\n    }\r\n  }\r\n\r\n  private static getExpiration(dateString: string): ExpirationExtension {\r\n    // Inner helper to create the final result\r\n    const result = (icon: string, text: string) => ({\r\n      ExpMessage: (icon != null ? icon + ' ' : '') + text,\r\n      ExpIcon: icon,\r\n      ExpWarningIcon: icon != '✅' ? icon : null,\r\n    })\r\n    const expires = dateString?.split('T')[0];\r\n    // no valid expiration date\r\n    if (expires == null) return result(null, null);\r\n    // never expires\r\n    if (expires.startsWith('9999')) return result('✅', 'never');\r\n    const expDate = new Date(expires);\r\n    // show \"expired\" if it's over-due\r\n    if (expDate < new Date()) return result('🛑', 'expired');\r\n    // return \"today\" if it's today\r\n    if (expDate.toDateString() === new Date().toDateString()) return result('⚠️', 'today');\r\n    // return \"tomorrow\" if it's tomorrow\r\n    if (expDate.toDateString() === new Date(new Date().setDate(new Date().getDate() + 1)).toDateString()) return result('⚠️', 'tomorrow');\r\n    // Warn if it's within 30 days\r\n    if (expDate < new Date(new Date().setDate(new Date().getDate() + 30))) return result('⚠️', expires);\r\n    // Show special EOY if it's at the end of the year - the most common expiration\r\n    if (expires.endsWith('12-31')) return result('✅', `EOY ${expires.split('-')[0]}`);\r\n    // otherwise: just show the date\r\n    return result('❓', expires);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router } from '@angular/router';\r\nimport { filter, map, pairwise, startWith } from 'rxjs';\r\nimport { classLog } from '../logging';\r\nimport { ServiceBase } from '../services/service-base';\r\n\r\nconst logSpecs = {\r\n  doOnDialogClosed: true,\r\n};\r\n\r\n/**\r\n * Helper to handle dialog routings, especially:\r\n * 1. handling on-child-closed events (it also takes care of subscriptions)\r\n * 2. accessing the router and route - a very common task when you have dialogs\r\n */\r\n@Injectable()\r\nexport class DialogRoutingService extends ServiceBase {\r\n\r\n  log = classLog({ DialogRoutingService }, logSpecs);\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { super(); }\r\n\r\n  get snapshot() { return this.route.snapshot; }\r\n\r\n  get url() { return this.router.url; }\r\n\r\n  getParam(key: string): string {\r\n    return this.route.snapshot.paramMap.get(key);\r\n  }\r\n\r\n  getParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const paramMap = this.route.snapshot.paramMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = paramMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  getQueryParam(key: string): string {\r\n    return this.route.snapshot.queryParamMap.get(key);\r\n  }\r\n\r\n  getQueryParams<K extends string>(keys: K[]): Record<K, string> {\r\n    const queryParamMap = this.route.snapshot.queryParamMap;\r\n    return keys.reduce((acc, key) => {\r\n      acc[key] = queryParamMap.get(key);\r\n      return acc;\r\n    }, {} as Record<string, string>);\r\n  }\r\n\r\n  state<T = any>() { return this.router.getCurrentNavigation().extras?.state as T; }\r\n\r\n  /**\r\n   * Preferred way to register a callback, since the caller doesn't need to worry about subscriptions.\r\n   */\r\n  public doOnDialogClosed(callback: () => void) {\r\n    const l = this.log.fnIf('doOnDialogClosed');\r\n    this.subscriptions.add(\r\n      this.childDialogClosed$().subscribe(() => callback())\r\n    );\r\n    l.end();\r\n  }\r\n\r\n  /**\r\n   * Get the URL for a sub-route of the current route.\r\n   */\r\n  public urlSubRoute(params: string) {\r\n    const tree = this.router.createUrlTree([params], { relativeTo: this.route });\r\n    const routeUrl = this.router.serializeUrl(tree);\r\n    return routeUrl;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a new route.\r\n   * Just looks a bit simpler than the internal array notation.\r\n   */\r\n  public navPath(url: string, extras?: NavigationExtras): Promise<boolean> {\r\n    return this.router.navigate([url], extras);\r\n  }\r\n\r\n  /**\r\n   * Navigate relative to the current route.\r\n   */\r\n  public navRelative(commands: any[], extras?: Omit<NavigationExtras, 'relativeTo'>): Promise<boolean> {\r\n    return this.router.navigate(commands, { ...extras, relativeTo: this.route });\r\n  }\r\n\r\n  childDialogClosed$() {\r\n    return this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      startWith(!!this.route.snapshot.firstChild),\r\n      map(() => !!this.route.snapshot.firstChild),\r\n      pairwise(),\r\n      filter(([hadChildBefore, hasChildNow]) => hadChildBefore && !hasChildNow),\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../helpers/copy-to-clipboard.helper';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ClipboardService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  copyToClipboard(text: string): void {\r\n    copyToClipboard(text);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * Base class for services - just to standardize use of subscriptions.\r\n * Has @Injectable() just to allow it ot use the standard OnDestroy interface.\r\n */\r\n@Injectable()\r\nexport abstract class ServiceBase implements OnDestroy {\r\n\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // TODO: TRY TO GET RID OF THIS. AFAIK it's just used in the mask, which should switch over to signals.\r\n  destroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n"],"names":["ActiveFeaturesCountPipe","transform","license","Features","filter","f","isEnabled","length","pure","standalone","ElementRef","input","SimpleChanges","AgGridHeightDirective","constructor","elementRef","itemsCount","headerHeight","rowHeight","maxRows","extraHeight","element","nativeElement","ngOnChanges","changes","rows","style","height","i0","ɵɵdirectiveInject","selectors","inputs","features","ɵɵNgOnChangesFeature","MatButtonModule","MatCardModule","MAT_DIALOG_DATA","MatDialogRef","MatIconModule","TranslateModule","transient","SafeHtmlPipe","ClipboardService","computedObj","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtextInterpolate","ctx_r1","feature","ɵɵlistener","FeatureDetailsDialogComponent_Conditional_0_Conditional_14_Template_span_click_4_listener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","clipboard","copyToClipboard","guid","FeatureDetailsDialogComponent_Conditional_0_Conditional_26_Template_button_click_0_listener","_r4","dialog","close","ɵɵelement","FeatureDetailsDialogComponent_Conditional_0_Template_span_click_11_listener","_r1","nameId","ɵɵtemplate","FeatureDetailsDialogComponent_Conditional_0_Conditional_13_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_14_Template","FeatureDetailsDialogComponent_Conditional_0_Conditional_26_Template","name","ɵɵproperty","description","ɵɵsanitizeHtml","ɵɵconditional","mySpecs","showStatus","showGuid","security","Impact","Message","link","ɵɵsanitizeUrl","showClose","FeatureDetailsDialogComponent","dialogSpecs","specs","i1","ɵɵStandaloneFeature","decls","vars","consts","template","FeatureDetailsDialogComponent_Template","rf","ctx","FeatureDetailsDialogComponent_Conditional_0_Template","i2","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardTitle","i3","MatAnchor","MatButton","i4","MatIcon","i5","TranslatePipe","encapsulation","TippyDirective","FeaturesListEnabledReasonComponent","agInit","params","value","data","refresh","FeaturesListEnabledReasonComponent_Template","enabledReasonDetailed","FeaturesListEnabledComponent","FeaturesListEnabledComponent_Template","NgClass","MatSlideToggleModule","FeaturesStatusComponent","disabled","isDisabled","tooltip","tooltipGetter","toggle","nextValue","onToggle","FeaturesStatusComponent_Template","FeaturesStatusComponent_Template_mat_slide_toggle_change_0_listener","ɵɵpureFunction2","_c0","MatSlideToggle","styles","AgGridAngular","ClientSideRowModelModule","ModuleRegistry","AsyncPipe","ChangeDetectorRef","computed","signal","ViewContainerRef","MatDialog","MatDialogActions","MatExpansionModule","RouterOutlet","catchError","forkJoin","map","of","share","startWith","Subject","switchMap","tap","timer","ExpirationExtension","ColumnDefinitions","BooleanFilterComponent","IdFieldComponent","defaultGridOptions","SxcGridModule","DialogRoutingService","FeaturesConfigService","LicensesOrderPipe","license_r1","gridOptions","LicenseInfoComponent_Conditional_0_For_2_Conditional_17_Template","IsEnabled","Name","ExpWarningIcon","ɵɵpureFunction1","panel_r3","expanded","Description","ɵɵrepeaterCreate","LicenseInfoComponent_Conditional_0_For_2_Template","ɵɵcomponentInstance","trackLicenses","ɵɵrepeater","licenses","LicenseInfoComponent","refreshLicenses$","featuresConfigSvc","dialogRouter","matDialog","viewContainerRef","changeDetectorRef","buildGridOptions","refreshLicensesSig","licensesSig","refreshState","set","getLicensesSig","registerModules","ngOnInit","doOnDialogClosed","next","viewModel$","pipe","undefined","getLicenses","l","expandLicense","expandFeature","index","Guid","openRegistration","router","navigate","url","replace","showFeatureDetails","#showFeatureDetails","open","autoFocus","width","markForCheck","toggleFeature","#toggleFeature","enabled","state","FeatureGuid","Enabled","saveFeatures","subscribe","error","#buildGridOptions","columnDefs","ItemsText","headerName","field","cellClass","cellRenderer","cellRendererParams","TextWideFlex3","split","onCellClicked","headerClass","sortable","TextNarrow","tooltipValueGetter","p","expiration","ActionsPinnedRight7","isConfigurable","viewQuery","LicenseInfoComponent_Query","LicenseInfoComponent_Conditional_0_Template","LicenseInfoComponent_Template_button_click_3_listener","tmp_0_0","MatAccordion","MatExpansionPanel","MatExpansionPanelHeader","MatExpansionPanelTitle","Array","isArray","sorted","sort","a","b","Priority","getExpiration","lowestExpiration","withState","dateString","result","icon","text","ExpMessage","ExpIcon","expires","startsWith","expDate","Date","toDateString","setDate","getDate","endsWith","ActivatedRoute","NavigationEnd","Router","pairwise","classLog","ServiceBase","logSpecs","route","log","snapshot","getParam","key","paramMap","get","getParams","keys","reduce","acc","getQueryParam","queryParamMap","getQueryParams","getCurrentNavigation","extras","callback","fnIf","subscriptions","add","childDialogClosed$","end","urlSubRoute","tree","createUrlTree","relativeTo","routeUrl","serializeUrl","navPath","navRelative","commands","events","event","firstChild","hadChildBefore","hasChildNow","ɵɵinject","factory","ɵfac","MatSnackBar","snackBar","duration","providedIn","Subscription","ngOnDestroy","destroy","unsubscribe"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}