{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_views-usage_views-usage_component_ts.dd0d711c0ad3f568.js","mappings":"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","names":["webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","constructor","http","context","dnnContext","this","getAll","get","$2sxc","apiUrl","params","appId","toString","delete","id","Id","import","file","formData","FormData","append","post","zoneId","export","url","window","open","getPolymorphism","getUsage","guid","static","t","i0","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_1__","jDH","factory","Éµfac","blockIdValueGetter","data","Block","Guid","moduleIdValueGetter","Module","UsageId","Title","moduleIdClassGetter","value","split","pageIdValueGetter","PageId","pageIdClassGetter","nameClassGetter","onNameClicked","Url","statusCellRenderer","status","IsVisible","IsDeleted","_r1","ctx_r1","copy","tooltip","ViewsUsageIdComponent","snackBar","agInit","idPart","refresh","copyToClipboard","duration","core","VBU","selectors","standalone","features","decls","vars","consts","template","rf","ctx","ViewsUsageIdComponent_Conditional_0_Template","MatRippleModule","MatIconModule","TippyDirective","styles","ViewsUsageStatusFilterComponent","isVisible","isDeleted","filterParams","isFilterActive","doesFilterPass","visiblePassed","deletedPassed","valueGetter","api","colDef","column","columnApi","node","getValue","field","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","$event","MatRadioModule","FormsModule","ViewsUsageComponent","dialogRef","route","gridOptions","buildGridOptions","viewUsage","signal","undefined","viewTooltip","viewsService","transient","ngOnInit","viewGuid","snapshot","paramMap","subscribe","viewUsages","set","buildData","block","Blocks","Modules","length","push","module","Page","Name","Language","CultureCode","Status","Visible","closeDialog","close","defaultGridOptions","columnDefs","ColumnDefinitions","cellRenderer","Number","width","cellClass","TextWide","sort","onCellClicked","sortable","filter","tmp_1_0","MatButtonModule","i4","RouterOutlet","SxcGridModule","i5"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-grid.helpers.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-id/views-usage-id.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage-status-filter/views-usage-status-filter.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.helpers.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/views-usage/views-usage.component.html"],"sourcesContent":["import { Context as DnnContext } from '@2sic.com/sxc-angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { Context } from '../../shared/services/context';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  getAll() {\r\n    return this.http.get<View[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViews), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.get<boolean>(this.dnnContext.$2sxc.http.apiUrl(webApiViewDelete), {\r\n      params: { appId: this.context.appId.toString(), Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.dnnContext.$2sxc.http.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.context.appId.toString(), zoneId: this.context.zoneId.toString() }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.dnnContext.$2sxc.http.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.context.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.http.get<Polymorphism>(this.dnnContext.$2sxc.http.apiUrl(webApiViewPolymorph), {\r\n      params: { appId: this.context.appId.toString() }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.http.get<ViewUsage[]>(this.dnnContext.$2sxc.http.apiUrl(webApiViewUsage), {\r\n      params: { appId: this.context.appId.toString(), guid }\r\n    });\r\n  }\r\n}\r\n","import { CellClassParams, CellClickedEvent, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { ViewUsageData, ViewUsageDataStatus } from '../../models/view-usage-data.model';\r\n\r\nexport function blockIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  return `ID: ${data.Block.Id}\\nGUID: ${data.Block.Guid}`;\r\n}\r\n\r\nexport function moduleIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.Module == null) return;\r\n  return `ID: ${data.Module.Id}\\nUsageId: ${data.Module.UsageId}\\nTitle: ${data.Module.Title}`;\r\n}\r\n\r\nexport function moduleIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function pageIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.PageId == null) return;\r\n  return `ID: ${data.PageId}`;\r\n}\r\n\r\nexport function pageIdClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'id-action no-padding' : ''} no-outline`.split(' ');\r\n}\r\n\r\nexport function nameClassGetter(params: CellClassParams): string[] {\r\n  return `${params.value != null ? 'primary-action highlight' : 'no-outline'}`.split(' ');\r\n}\r\n\r\nexport function onNameClicked(params: CellClickedEvent) {\r\n  if (params.value == null) return;\r\n  const data: ViewUsageData = params.data;\r\n  window.open(data.Url, '_blank');\r\n}\r\n\r\nexport function statusCellRenderer(params: ICellRendererParams) {\r\n  const status: ViewUsageDataStatus = params.value;\r\n  if (status == null) return;\r\n  return `\r\n    <div style=\"height: 100%;display: flex;align-items: center;\">\r\n      ${status.IsVisible ? '<span class=\"material-icons-outlined\">visibility</span>' : '<span class=\"material-icons-outlined\">visibility_off</span>'}\r\n      ${status.IsDeleted ? '<span style=\"margin-left: 8px;\" class=\"material-icons-outlined\">delete</span>' : ''}\r\n    </div>\r\n  `;\r\n}\r\n","@if (id) {\r\n  <div matRipple class=\"id-box highlight\" [tippy]=\"tooltip\" (click)=\"copy()\">\r\n    <span class=\"id\">{{ id }}</span>\r\n    <mat-icon class=\"icon\">file_copy</mat-icon>\r\n  </div>\r\n}","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-id',\r\n  templateUrl: './views-usage-id.component.html',\r\n  styleUrls: ['./views-usage-id.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class ViewsUsageIdComponent implements ICellRendererAngularComp {\r\n  tooltip: string;\r\n  id: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.tooltip = params.value;\r\n    if (this.tooltip == null) return;\r\n    const idPart = this.tooltip.split('\\n')[0];\r\n    this.id = idPart.split(' ')[1];\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams, ValueGetterParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { ViewUsageDataStatus } from '../../../models/view-usage-data.model';\r\nimport { ViewsUsageStatusFilterModel } from './views-usage-status-filter.model';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-status-filter',\r\n  templateUrl: './views-usage-status-filter.component.html',\r\n  styleUrls: ['./views-usage-status-filter.component.scss'],\r\n  standalone: true,\r\n  imports: [MatRadioModule, FormsModule],\r\n})\r\nexport class ViewsUsageStatusFilterComponent implements IFilterAngularComp {\r\n  isVisible = '';\r\n  isDeleted = '';\r\n\r\n  private filterParams: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.filterParams = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.isVisible !== '' || this.isDeleted !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    let visiblePassed = false;\r\n    let deletedPassed = false;\r\n\r\n    const valueGetterParams: ValueGetterParams = {\r\n      api: this.filterParams.api,\r\n      colDef: this.filterParams.colDef,\r\n      column: this.filterParams.column,\r\n      columnApi: this.filterParams.columnApi,\r\n      context: this.filterParams.context,\r\n      data: params.node.data,\r\n      getValue: (field) => params.node.data[field],\r\n      node: params.node,\r\n    };\r\n    const value: ViewUsageDataStatus = this.filterParams.valueGetter(valueGetterParams);\r\n    if (value == null) { return false; }\r\n    if (this.isVisible !== '') {\r\n      visiblePassed = (value.IsVisible == null) ? false : value.IsVisible.toString() === this.isVisible;\r\n    } else {\r\n      visiblePassed = true;\r\n    }\r\n    if (this.isDeleted !== '') {\r\n      deletedPassed = (value.IsDeleted == null) ? false : value.IsDeleted.toString() === this.isDeleted;\r\n    } else {\r\n      deletedPassed = true;\r\n    }\r\n    return visiblePassed && deletedPassed;\r\n  }\r\n\r\n  getModel(): ViewsUsageStatusFilterModel {\r\n    if (!this.isFilterActive()) return;\r\n    return {\r\n      filterType: 'views-usage-status',\r\n      isVisible: this.isVisible,\r\n      isDeleted: this.isDeleted,\r\n    };\r\n  }\r\n\r\n  setModel(model: ViewsUsageStatusFilterModel) {\r\n    this.isVisible = model ? model.isVisible : '';\r\n    this.isDeleted = model ? model.isDeleted : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.filterParams.filterChangedCallback();\r\n  }\r\n}\r\n","<div class=\"title\">Visible</div>\r\n<mat-radio-group [(ngModel)]=\"isVisible\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Visible</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Hidden</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Deleted</div>\r\n<mat-radio-group [(ngModel)]=\"isDeleted\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Is deleted</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Is not deleted</mat-radio-button>\r\n</mat-radio-group>\r\n","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnInit, signal } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\nimport { ViewsService } from '../../services/views.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { blockIdValueGetter, moduleIdClassGetter, moduleIdValueGetter, nameClassGetter, onNameClicked, pageIdClassGetter, pageIdValueGetter, statusCellRenderer } from './views-usage-grid.helpers';\r\nimport { ViewsUsageIdComponent } from './views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from './views-usage-status-filter/views-usage-status-filter.component';\r\nimport { buildData } from './views-usage.helpers';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-views-usage',\r\n  templateUrl: './views-usage.component.html',\r\n  styleUrls: ['./views-usage.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    SxcGridModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class ViewsUsageComponent implements OnInit {\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  viewUsage = signal<ViewUsage>(undefined);\r\n  viewTooltip = signal(undefined);\r\n  data = signal<ViewUsageData[]>(undefined);\r\n\r\n  private viewsService = transient(ViewsService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ViewsUsageComponent>,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const viewGuid = this.route.snapshot.paramMap.get('guid');\r\n    this.viewsService.getUsage(viewGuid).subscribe(viewUsages => {\r\n\r\n      const viewUsage = viewUsages[0];\r\n      this.viewUsage.set(viewUsage);\r\n      const viewTooltip = `ID: ${viewUsage.Id}\\nGUID: ${viewUsage.Guid}`;\r\n      this.viewTooltip.set(viewTooltip);\r\n      const data = buildData(viewUsage);\r\n      this.data.set(data);\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.Id,\r\n          field: 'Block',\r\n          valueGetter: blockIdValueGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Module',\r\n          width: 80,\r\n          valueGetter: moduleIdValueGetter,\r\n          cellClass: moduleIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Number,\r\n          field: 'Page',\r\n          valueGetter: pageIdValueGetter,\r\n          cellClass: pageIdClassGetter,\r\n          cellRenderer: ViewsUsageIdComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          field: 'Name',\r\n          sort: 'asc',\r\n          cellClass: nameClassGetter,\r\n          onCellClicked: onNameClicked,\r\n        },\r\n        {\r\n          field: 'Language',\r\n          width: 90,\r\n          cellClass: 'no-outline',\r\n          sortable: true,\r\n          filter: 'agTextColumnFilter',\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 80,\r\n          cellClass: 'icon no-outline'.split(' '),\r\n          filter: ViewsUsageStatusFilterComponent,\r\n          cellRenderer: statusCellRenderer,\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","import { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\n\r\nexport function buildData(viewUsage: ViewUsage) {\r\n  const data: ViewUsageData[] = [];\r\n  for (const block of viewUsage.Blocks) {\r\n    if (block.Modules.length === 0) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n      });\r\n    }\r\n    for (const module of block.Modules) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n        Module: module,\r\n        PageId: module.Page.Id,\r\n        Name: module.Page.Name,\r\n        Url: module.Page.Url,\r\n        Language: module.Page.CultureCode,\r\n        Status: { IsVisible: module.Page.Visible, IsDeleted: module.IsDeleted },\r\n      });\r\n    }\r\n  }\r\n  return data;\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div [tippy]=\"viewTooltip()\">View: {{ viewUsage()?.Name }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <p class=\"dialog-description\">\r\n    This shows where this view is being used. Read about the\r\n    <a href=\"https://go.2sxc.org/content-in-dnn\" target=\"_blank\">connections between DNN and 2sxc Views</a>\r\n    to make good decisions if you're doing clean-up or just want to better know what this is all about.\r\n    <em>Before you get confused about some things you see here, do read the FAQ on that page.</em>\r\n  </p>\r\n  <router-outlet></router-outlet>\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data()\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n"],"x_google_ignoreList":[]}