{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_edit-content-type_edit-content-type_co-2abec4.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/constants/content-type.patterns.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.html"],"sourcesContent":["/**\r\n * This is for the angular UI.\r\n * Note that since ca. 2023 the last \"-\" literal character must be escaped using \"\\-\"\r\n * because of changes in how browsers handle regular expressions, aka the /v flag.\r\n */\r\nconst contentTypeNameRegEx = /(^[A-Za-z][A-Za-z0-9]*$)|(^@[A-Za-z][A-Za-z0-9\\-]*$)/;\r\nconst typeNameRegExCleaned = contentTypeNameRegEx.toString();\r\nconst removeSlashAtStartAndEnd = typeNameRegExCleaned.substring(1, typeNameRegExCleaned.toString().length - 1);\r\n\r\n/**\r\n * The pattern determines what content-type names are allowed.\r\n * Basically it's A-Z and numbers after the first digit.\r\n * But there are two exceptions:\r\n *  - types describing an input-type begin with an `@` and can also contain `-` chars\r\n *  - types beginning with an `|` are very old type names for data-sources, they can contain anything!\r\n */\r\nexport const contentTypeNamePattern = removeSlashAtStartAndEnd;\r\nexport const contentTypeNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n\r\n// 2020-04-29 2dm - temporarily used this pattern while renaming unique named types containing '|' chars\r\n// export const contentTypeNamePattern = /(^[A-Za-z][A-Za-z0-9]+$)|(^@[A-Za-z][A-Za-z0-9-]*$)|(^\\|.*$)/;\r\n","import { AfterViewInit, Component, HostBinding } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { transient } from '../../../../../../core';\r\nimport { FieldHintComponent } from '../../../shared/components/field-hint/field-hint.component';\r\nimport { dropdownInsertValue } from '../../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { ClickStopPropagationDirective } from '../../../shared/directives/click-stop-propagation.directive';\r\nimport { TippyDirective } from '../../../shared/directives/tippy.directive';\r\nimport { classLog } from '../../../shared/logging';\r\nimport { computedObj, signalObj } from '../../../shared/signals/signal.utilities';\r\nimport { contentTypeNameError, contentTypeNamePattern } from '../../constants/content-type.patterns';\r\nimport { ContentTypeEdit } from '../../models/content-type.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\n\r\n@Component({\r\n    selector: 'app-edit-content-type',\r\n    templateUrl: './edit-content-type.component.html',\r\n    styleUrls: ['./edit-content-type.component.scss'],\r\n    imports: [\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatExpansionModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogActions,\r\n        FieldHintComponent,\r\n        ClickStopPropagationDirective,\r\n        TippyDirective,\r\n    ]\r\n})\r\nexport class EditContentTypeComponent implements AfterViewInit {\r\n\r\n  log = classLog({ EditContentTypeComponent });\r\n\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  #contentTypeSvc = transient(ContentTypesService);\r\n\r\n  /** Parameters in case of rename; scope should always be set as we want to always create in that scope*/\r\n  #scope = this.route.snapshot.parent.paramMap.get('scope');\r\n  #typeNameId = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<EditContentTypeComponent>,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n  ) {\r\n    this.log.a('constructor');\r\n    this.#loadContentTypeOnEdit();\r\n  }\r\n\r\n  #loadContentTypeOnEdit(): void {\r\n    // If we're in new mode, just keep empty values\r\n    if (!this.modeIsEdit)\r\n      return;\r\n\r\n    // Preload infos about the current content type if we're in edit mode (not new)\r\n    this.#contentTypeSvc.retrieveContentType(this.#typeNameId).subscribe(fromHttp => {\r\n      this.contentType.set({\r\n        ...fromHttp,\r\n        ChangeNameId: false,\r\n        NewNameId: fromHttp.NameId,\r\n      } satisfies ContentTypeEdit);\r\n    });\r\n  }\r\n\r\n\r\n  /** RegEx property to use in HTML */\r\n  protected contentTypeNamePattern = contentTypeNamePattern;\r\n  protected contentTypeNameError = contentTypeNameError;\r\n  protected dropdownInsertValue = dropdownInsertValue;\r\n\r\n  protected modeIsEdit = !!this.#typeNameId;\r\n\r\n  protected lockScope = signalObj<boolean>('lockScope', true);\r\n  protected disableAnimation = signalObj<boolean>('disableAnimation', true);\r\n  protected loading = signalObj<boolean>('loading', false);\r\n  protected contentType = signalObj<ContentTypeEdit>('contentType', {\r\n    StaticName: '',\r\n    // TODO: @2pp - use NameId: '', instead of StaticName\r\n    Name: '',\r\n    Description: '',\r\n    Scope: this.#scope,\r\n    ChangeNameId: false,\r\n    NewNameId: '',\r\n  } as ContentTypeEdit);\r\n\r\n  // TODO: @2dg this is a suggestion how to handle http requests in a more signal-like way\r\n  // @2dg note that doing this in the constructor would often be better, but I wanted to prove this way work.\r\n  // Scope Options Http will fire once when data arrives\r\n\r\n  #scopeOptionsHttp = this.#contentTypeSvc.getScopesSig(undefined);\r\n  #scopeOptionsManual = signalObj<ScopeOption[]>('scopeOptionsManual', []);\r\n  protected scopeOptions = computedObj<ScopeOption[]>('scopeOptions', () => {\r\n    const fromHttp = this.#scopeOptionsHttp();\r\n    const manual = this.#scopeOptionsManual();\r\n    return (fromHttp) ? manual.concat(this.#convertScopeOptions(fromHttp)) : manual;\r\n  });\r\n\r\n  #convertScopeOptions(scopeOptions: ScopeOption[]) {\r\n    const newScopes: ScopeOption[] = [];\r\n    scopeOptions.forEach(scopeOption => {\r\n      if (!newScopes.some(scope => scope.value === scopeOption.value))\r\n        newScopes.push(scopeOption);\r\n    });\r\n    if (!newScopes.some(scope => scope.value === this.#scope))\r\n      newScopes.push({\r\n        name: this.#scope,\r\n        value: this.#scope,\r\n      } satisfies ScopeOption);\r\n    return newScopes;\r\n  }\r\n\r\n  // workaround for angular component issue #13870\r\n  ngAfterViewInit() {\r\n    // timeout required to avoid ExpressionChangedAfterItHasBeenCheckedError\r\n    setTimeout(() => this.disableAnimation.set(false));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  changeContentTypeName(newName: string) {\r\n    this.contentType.set({ ...this.contentType(), Name: newName });\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n      if (!this.scopeOptions().some(o => o.value === newScope)) {\r\n        this.#scopeOptionsManual.set([\r\n          {\r\n            name: newScope,\r\n            value: newScope,\r\n          } satisfies ScopeOption,\r\n          ...this.scopeOptions()\r\n        ]);\r\n      }\r\n    }\r\n    this.contentType.set({ ...this.contentType(), Scope: newScope });\r\n  }\r\n\r\n  unlockScope() {\r\n    this.lockScope.set(!this.lockScope());\r\n    if (this.lockScope())\r\n      this.contentType.set({ ...this.contentType(), Scope: this.#scope });\r\n  }\r\n\r\n  save() {\r\n    this.loading.set(true);\r\n    this.snackBar.open('Saving...');\r\n    this.#contentTypeSvc.save(this.contentType()).subscribe(result => {\r\n      this.loading.set(false);\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n}\r\n","<div class=\"eav-dialog\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">{{ modeIsEdit ? 'Edit Content Type' : 'New Content Type' }}</div>\r\n  </div>\r\n  @if (contentType()) {\r\n    <form #ngForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n      <div class=\"eav-dialog-content\">\r\n        <div>\r\n          <div class=\"eav-edit-input\">\r\n            <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n              <mat-label>Name</mat-label>\r\n              <input\r\n                matInput\r\n                type=\"text\"\r\n                required\r\n                [pattern]=\"contentTypeNamePattern\"\r\n                [ngModel]=\"contentType().Name\"\r\n                (ngModelChange)=\"changeContentTypeName($event)\"\r\n                name=\"Name\"\r\n                #name=\"ngModel\"\r\n              />\r\n            </mat-form-field>\r\n            @if (name.touched && name.errors) {\r\n              @if (name.errors.required) {\r\n                <app-field-hint [isError]=\"true\">This field is required</app-field-hint>\r\n              }\r\n              @if (name.errors.pattern) {\r\n                <app-field-hint [isError]=\"true\">{{ contentTypeNameError }}</app-field-hint>\r\n              }\r\n            }\r\n          </div>\r\n          <mat-accordion [@.disabled]=\"disableAnimation()\">\r\n            <mat-expansion-panel>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>Advanced</mat-panel-title>\r\n                <mat-panel-description></mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n              <div class=\"eav-edit-input\">\r\n                <div class=\"eav-form-and-button\">\r\n                  <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                    <mat-label>Scope</mat-label>\r\n                    <mat-select [ngModel]=\"contentType().Scope\" name=\"Scope\" (ngModelChange)=\"changeScope($event)\" [disabled]=\"lockScope()\">\r\n                      @for (scopeOption of scopeOptions(); track scopeOption) {\r\n                        <mat-option [value]=\"scopeOption.value\">\r\n                          {{ scopeOption.name }}\r\n                        </mat-option>\r\n                      }\r\n                      <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <button\r\n                    mat-icon-button\r\n                    type=\"button\"\r\n                    matTextSuffix\r\n                    [tippy]=\"lockScope() ? 'Unlock' : 'Lock'\"\r\n                    class=\"eav-scope-button\"\r\n                    (click)=\"unlockScope()\"\r\n                  >\r\n                    <mat-icon>\r\n                      {{ lockScope() ? 'lock' : 'lock_open' }}\r\n                    </mat-icon>\r\n                  </button>\r\n                </div>\r\n                <app-field-hint>\r\n                  The scope should almost never be changed -\r\n                  <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n                </app-field-hint>\r\n              </div>\r\n              <div class=\"eav-edit-input\">\r\n                <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                  <mat-label>Static Name</mat-label>\r\n                  <input matInput type=\"text\" [ngModel]=\"contentType().NameId\" name=\"StaticName\" disabled />\r\n                </mat-form-field>\r\n              </div>\r\n              @if (contentType().SharedDefId) {\r\n                <div class=\"eav-edit-input\">\r\n                  <h3>Shared Content Type (Ghost)</h3>\r\n                  <p>Note: this can't be edited in the UI, for now if you really know what you're doing, do it in the DB</p>\r\n                  <p>Uses Type Definition of: {{ contentType().SharedDefId }}</p>\r\n                </div>\r\n              }\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!ngForm.form.valid || loading()\">Save</button>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  }\r\n</div>\r\n"],"names":["contentTypeNameRegEx","typeNameRegExCleaned","toString","removeSlashAtStartAndEnd","substring","length","contentTypeNamePattern","contentTypeNameError","FormsModule","MatButtonModule","MatOptionModule","MatDialogActions","MatDialogRef","MatExpansionModule","MatFormFieldModule","MatIconModule","MatInputModule","MatSelectModule","MatSnackBar","ActivatedRoute","transient","FieldHintComponent","dropdownInsertValue","eavConstants","ClickStopPropagationDirective","TippyDirective","classLog","computedObj","signalObj","ContentTypesService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","ɵɵtemplate","EditContentTypeComponent_Conditional_4_Conditional_10_Conditional_0_Template","EditContentTypeComponent_Conditional_4_Conditional_10_Conditional_1_Template","ɵɵconditional","name_r3","errors","required","pattern","scopeOption_r4","value","ɵɵtextInterpolate1","name","contentType","SharedDefId","ɵɵlistener","EditContentTypeComponent_Conditional_4_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","save","EditContentTypeComponent_Conditional_4_Template_input_ngModelChange_8_listener","$event","changeContentTypeName","EditContentTypeComponent_Conditional_4_Conditional_10_Template","ɵɵelement","EditContentTypeComponent_Conditional_4_Template_mat_select_ngModelChange_22_listener","changeScope","ɵɵrepeaterCreate","EditContentTypeComponent_Conditional_4_For_24_Template","ɵɵrepeaterTrackByIdentity","EditContentTypeComponent_Conditional_4_Template_button_click_27_listener","unlockScope","EditContentTypeComponent_Conditional_4_Conditional_39_Template","EditContentTypeComponent_Conditional_4_Template_button_click_41_listener","closeDialog","Name","touched","disableAnimation","Scope","lockScope","ɵɵrepeater","scopeOptions","NameId","ngForm_r5","form","valid","loading","EditContentTypeComponent","contentTypeSvc","scope","typeNameId","constructor","dialog","route","snackBar","log","hostClass","snapshot","parent","paramMap","get","modeIsEdit","StaticName","Description","ChangeNameId","NewNameId","scopeOptionsHttp","getScopesSig","undefined","scopeOptionsManual","fromHttp","manual","concat","convertScopeOptions","a","loadContentTypeOnEdit","#loadContentTypeOnEdit","retrieveContentType","subscribe","set","#convertScopeOptions","newScopes","forEach","scopeOption","some","push","ngAfterViewInit","setTimeout","close","newName","newScope","prompt","scopes","default","o","open","result","duration","document","activeElement","HTMLElement","blur","ɵɵdirectiveInject","i1","i2","i3","selectors","hostVars","hostBindings","EditContentTypeComponent_HostBindings","rf","ctx","ɵɵhostProperty","EditContentTypeComponent_Conditional_4_Template","i4","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","PatternValidator","NgModel","NgForm","i5","MatFormField","MatLabel","MatSuffix","i6","MatInput","i7","MatAccordion","MatExpansionPanel","MatExpansionPanelHeader","MatExpansionPanelTitle","MatExpansionPanelDescription","i8","MatSelect","i9","MatOption","i10","MatButton","MatIconButton","i11","MatIcon","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}