{"version":3,"file":"default-projects_eav-ui_src_app_shared_components_base_component_ts-projects_eav-ui_src_app_s-dc0343.js","mappings":"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","sources":["./projects/eav-ui/src/app/shared/components/base.component.ts","./projects/eav-ui/src/app/shared/directives/base.directive.ts","./projects/eav-ui/src/app/shared/pipes/safe-html.pipe.ts","./node_modules/@angular/material/fesm2022/progress-spinner.mjs"],"sourcesContent":["import { Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * A newer base component, without Log being created / requested.\r\n * This is so it's easier to inherit than the BaseComponent,\r\n * which would make typed log with specs harder to implement.\r\n * \r\n * Note that as with time, we wish to get away from these, as we don't want to use many observables any more.\r\n */\r\n@Component({\r\n  selector: 'app-base-component',\r\n  template: ''\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseComponent implements OnDestroy {\r\n  \r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport abstract class BaseDirective implements OnDestroy {\r\n  /** Holds all subscriptions to be unsubscribed on destroy */\r\n  protected subscriptions = new Subscription();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml', standalone: true })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(html: string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress spinner. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    constructor(_elementRef, animationMode, defaults) {\n        this._elementRef = _elementRef;\n        this._defaultColor = 'primary';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            _elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-app-primary))}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-app-primary))}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n"],"names":["Subscription","BaseComponent","constructor","subscriptions","ngOnDestroy","unsubscribe","selectors","decls","vars","template","BaseComponent_Template","rf","ctx","encapsulation","BaseDirective","DomSanitizer","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","i0","ɵɵdirectiveInject","i1","pure","standalone","InjectionToken","ANIMATION_MODULE_TYPE","numberAttribute","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Inject","Input","ViewChild","NgModule","NgTemplateOutlet","CommonModule","MatCommonModule","_c0","MatProgressSpinner_ng_template_0_Template","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵattribute","_viewBox","ɵɵadvance","ɵɵstyleProp","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","providedIn","factory","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinner","color","_color","_defaultColor","value","_elementRef","animationMode","defaults","_value","_diameter","_noopAnimations","_forceAnimations","mode","nativeElement","nodeName","toLowerCase","strokeWidth","v","Math","max","min","size","_strokeWidth","viewBox","PI","_strokeDashOffset","ɵfac","MatProgressSpinner_Factory","__ngFactoryType__","ElementRef","ɵcmp","ɵɵdefineComponent","type","viewQuery","MatProgressSpinner_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","_determinateCircle","first","hostAttrs","hostVars","hostBindings","MatProgressSpinner_HostBindings","ɵɵclassMap","ɵɵclassProp","inputs","exportAs","features","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","consts","MatProgressSpinner_Template","ɵɵtemplate","ɵɵtemplateRefExtractor","ɵɵnamespaceHTML","ɵɵelementContainer","circle_r2","ɵɵreference","ɵɵproperty","dependencies","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","OnPush","None","imports","undefined","decorators","MatSpinner","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[3]}