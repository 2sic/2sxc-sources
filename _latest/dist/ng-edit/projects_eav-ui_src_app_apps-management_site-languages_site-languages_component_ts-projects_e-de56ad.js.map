{"version":3,"file":"projects_eav-ui_src_app_apps-management_site-languages_site-languages_component_ts-projects_e-de56ad.js","mappings":"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","sources":["./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages-status/site-languages-status.component.html","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.ts","./projects/eav-ui/src/app/apps-management/site-languages/site-languages.component.html","./projects/eav-ui/src/app/import-app/services/import-app.service.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { SiteLanguage } from '../../models/site-language.model';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages-status',\r\n  templateUrl: './site-languages-status.component.html',\r\n  styleUrls: ['./site-languages-status.component.scss'],\r\n  standalone: true,\r\n  imports: [MatSlideToggleModule],\r\n})\r\nexport class SiteLanguagesStatusComponent implements ICellRendererAngularComp {\r\n  value: boolean;\r\n\r\n  private params: ICellRendererParams & SiteLanguagesStatusParams;\r\n\r\n  agInit(params: ICellRendererParams & SiteLanguagesStatusParams): void {\r\n    this.params = params;\r\n    this.value = this.params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  toggleLanguage(event: MatSlideToggleChange): void {\r\n    const language: SiteLanguage = this.params.data;\r\n    this.params.onToggleLanguage(language, event.checked);\r\n  }\r\n}\r\n","<mat-slide-toggle [checked]=\"value\" (change)=\"toggleLanguage($event)\"></mat-slide-toggle>\r\n","import { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\nimport { GridOptions, ModuleRegistry } from '@ag-grid-community/core';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogActions } from '@angular/material/dialog';\r\nimport { catchError, map, Observable, of, share, startWith, Subject, switchMap } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { ColumnDefinitions } from '../../shared/ag-grid/column-definitions';\r\nimport { BooleanFilterComponent } from '../../shared/components/boolean-filter/boolean-filter.component';\r\nimport { IdFieldParams } from '../../shared/components/id-field/id-field.models';\r\nimport { defaultGridOptions } from '../../shared/constants/default-grid-options.constants';\r\nimport { SxcGridModule } from '../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { SiteLanguage } from '../models/site-language.model';\r\nimport { ZoneService } from '../services/zone.service';\r\nimport { SiteLanguagesStatusComponent } from './site-languages-status/site-languages-status.component';\r\nimport { SiteLanguagesStatusParams } from './site-languages-status/site-languages-status.models';\r\n\r\n@Component({\r\n  selector: 'app-site-languages',\r\n  templateUrl: './site-languages.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    MatDialogActions,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class SiteLanguagesComponent implements OnInit, OnDestroy {\r\n  gridOptions = this.#buildGridOptions();\r\n\r\n  #refreshLanguages$ = new Subject<void>();\r\n\r\n  // TODO: @2dg, ask 2dm refresh Signal\r\n  viewModel$: Observable<SiteLanguagesViewModel>;\r\n\r\n  #zoneSvc = transient(ZoneService);\r\n\r\n  constructor() {\r\n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.viewModel$ = this.#refreshLanguages$.pipe(\r\n      startWith(undefined),\r\n      switchMap(() => this.#zoneSvc.getLanguages().pipe(catchError(() => of(undefined)))),\r\n      share(),\r\n      map(languages => {\r\n        return { languages };\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.#refreshLanguages$.complete();\r\n  }\r\n\r\n  #toggleLanguage(language: SiteLanguage, enable: boolean): void {\r\n    this.#zoneSvc.toggleLanguage(language.Code, enable).subscribe({\r\n      error: () => this.#refreshLanguages$.next(),\r\n      next: () => this.#refreshLanguages$.next(),\r\n    });\r\n  }\r\n\r\n  #buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.IdWithDefaultRenderer,\r\n          field: 'Code',\r\n          filter: 'agTextColumnFilter',\r\n          cellRendererParams: (() => {\r\n            const params: IdFieldParams<SiteLanguage> = {\r\n              tooltipGetter: (language: SiteLanguage) => `ID: ${language.Code}`,\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWide,\r\n          headerName: 'Name',\r\n          field: 'Culture',\r\n          sort: 'asc',\r\n          onCellClicked: (params) => {\r\n            const language: SiteLanguage = params.data;\r\n            this.#toggleLanguage(language, !language.IsEnabled);\r\n          },\r\n        },\r\n        {\r\n          field: 'Status',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: BooleanFilterComponent,\r\n          valueGetter: (p: { data: SiteLanguage }) => p.data.IsEnabled,\r\n          cellRenderer: SiteLanguagesStatusComponent,\r\n          cellRendererParams: (() => {\r\n            const params: SiteLanguagesStatusParams = {\r\n              onToggleLanguage: (language, enable) => this.#toggleLanguage(language, enable),\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n\r\ninterface SiteLanguagesViewModel {\r\n  languages: SiteLanguage[];\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n  <div class=\"grid-wrapper mat-tab-grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.languages\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <mat-dialog-actions align=\"end\"></mat-dialog-actions>\r\n  </div>\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { FileUploadMessageTypes, FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\n\r\nexport const webApiAppRoot = 'admin/app/';\r\n\r\n@Injectable()\r\nexport class ImportAppService extends HttpServiceBase {\r\n\r\n  importApp(file: File, changedName: string, retryOnDuplicate = false): Observable<FileUploadResult> {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ?? '');\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiAppRoot + 'Import'), formData, {\r\n      params: { zoneId: this.zoneId }\r\n    }).pipe(\r\n      switchMap(result => {\r\n        if (retryOnDuplicate && result.Messages[0]?.MessageType === FileUploadMessageTypes.Warning) {\r\n          const folderName = prompt(result.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            return this.importApp(file, folderName, true);\r\n          }\r\n        }\r\n        return of(result);\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"names":["MatSlideToggleModule","SiteLanguagesStatusComponent","agInit","params","value","refresh","toggleLanguage","event","language","data","onToggleLanguage","checked","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","SiteLanguagesStatusComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SiteLanguagesStatusComponent_Template_mat_slide_toggle_change_0_listener","$event","ɵɵelementEnd","ɵɵproperty","i1","MatSlideToggle","styles","ClientSideRowModelModule","ModuleRegistry","AsyncPipe","MatDialogActions","catchError","map","of","share","startWith","Subject","switchMap","transient","ColumnDefinitions","BooleanFilterComponent","defaultGridOptions","SxcGridModule","ZoneService","ɵɵelement","ɵɵadvance","languages","ctx_r0","gridOptions","SiteLanguagesComponent","refreshLanguages$","zoneSvc","constructor","buildGridOptions","registerModules","ngOnInit","viewModel$","pipe","undefined","getLanguages","ngOnDestroy","complete","#toggleLanguage","enable","Code","subscribe","error","next","#buildGridOptions","columnDefs","IdWithDefaultRenderer","field","filter","cellRendererParams","tooltipGetter","TextWide","headerName","sort","onCellClicked","IsEnabled","width","headerClass","cellClass","split","sortable","valueGetter","p","cellRenderer","SiteLanguagesComponent_Template","ɵɵtemplate","SiteLanguagesComponent_Conditional_0_Template","ɵɵconditional","tmp_0_0","ɵɵpipeBind1","AgGridAngular","encapsulation","FileUploadMessageTypes","HttpServiceBase","webApiAppRoot","ImportAppService","importApp","file","changedName","retryOnDuplicate","formData","FormData","append","http","post","apiUrl","zoneId","result","Messages","MessageType","Warning","folderName","prompt","Text","__ngFactoryType__","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}