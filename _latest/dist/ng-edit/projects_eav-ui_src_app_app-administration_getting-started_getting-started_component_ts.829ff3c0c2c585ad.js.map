{"version":3,"file":"projects_eav-ui_src_app_app-administration_getting-started_getting-started_component_ts.829ff3c0c2c585ad.js","mappings":"sRAIO,IAAMA,EAAmB,MAA1B,MAAOA,EAEXC,YAAoBC,GAAAC,KAAAD,WAA2B,CAE/CE,UAAUC,GACR,OAAOF,KAAKD,UAAUI,+BAA+BD,EACvD,iDANWL,GAAmBO,MAAAC,KAAA,gEAAnBR,EAAmBS,MAAA,EAAAC,YAAA,YAAnBV,CAAmB,yCCH9BO,MAAA,+CAAuBA,MAAA,MAAAA,MAAA,IAAAI,GAAAJ,OCgBlB,IAAMK,EAAuB,MAA9B,MAAOA,EAVbX,cAYUE,KAAAU,mBAAkBC,KAAUC,KAEpCZ,KAAAa,mBAAqBb,KAAKU,gBAAgBI,cAAcC,QAAKC,KAC3DC,GAAkBA,EAAeC,QAAQC,IAAIC,oEALpCX,EAAuB,oCAAvBA,EAAuBY,UAAA,0BAAAd,YAAA,EAAAe,SAAA,CAAAlB,OAAAmB,MAAA,EAAAC,KAAA,EAAAC,OAAA,uBAAAC,SAAA,SAAAC,EAAAnB,MAAA,EAAAmB,IDjBpCvB,MAAA,EAAAwB,EAAA,6CAAAxB,OAAAyB,EAAAzB,MAAA,IAAAI,EAAAK,qBAAA,KAAAgB,mBCaIC,KACAjC,GAAmBkC,OAAA,6KAGVtB,CAAuB","names":["SafeResourceUrlPipe","constructor","sanitizer","this","transform","resourceUrl","bypassSecurityTrustResourceUrl","i0","i1","pure","standalone","ctx","GettingStartedComponent","dialogConfigSvc","transient","DialogConfigAppService","gettingStartedUrl$","getCurrent$","pipe","map","dialogSettings","Context","App","GettingStartedUrl","selectors","features","decls","vars","consts","template","rf","GettingStartedComponent_Conditional_0_Template","tmp_0_0","AsyncPipe","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/shared/pipes/safe-resource-url.ts","./projects/eav-ui/src/app/app-administration/getting-started/getting-started.component.html","./projects/eav-ui/src/app/app-administration/getting-started/getting-started.component.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeResourceUrl', standalone: true })\r\nexport class SafeResourceUrlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(resourceUrl: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\r\n  }\r\n}\r\n","@if (gettingStartedUrl$ | async; as gettingStartedUrl) {\r\n  <iframe class=\"iframe\" [src]=\"gettingStartedUrl | safeResourceUrl\"></iframe>\r\n}\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { map } from 'rxjs';\r\nimport { transient } from '../../../../../core';\r\nimport { SafeResourceUrlPipe } from '../../shared/pipes/safe-resource-url';\r\nimport { DialogConfigAppService } from '../services/dialog-config-app.service';\r\n\r\n@Component({\r\n  selector: 'app-getting-started',\r\n  templateUrl: './getting-started.component.html',\r\n  styleUrls: ['./getting-started.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    AsyncPipe,\r\n    SafeResourceUrlPipe,\r\n  ],\r\n})\r\nexport class GettingStartedComponent {\r\n\r\n  private dialogConfigSvc = transient(DialogConfigAppService);\r\n\r\n  gettingStartedUrl$ = this.dialogConfigSvc.getCurrent$().pipe(map(\r\n    dialogSettings => dialogSettings.Context.App.GettingStartedUrl\r\n  ));\r\n\r\n\r\n}\r\n"],"x_google_ignoreList":[]}