{"version":3,"sources":["./src/app/app-administration/ag-grid-components/views-usage-id/views-usage-id.component.html","./src/app/app-administration/ag-grid-components/views-usage-id/views-usage-id.component.ts","./src/app/app-administration/ag-grid-components/views-usage-status-filter/views-usage-status-filter.component.ts","./src/app/app-administration/ag-grid-components/views-usage-status-filter/views-usage-status-filter.component.html","./src/app/app-administration/sub-dialogs/views-usage/views-usage-grid.helpers.ts","./src/app/app-administration/sub-dialogs/views-usage/views-usage.component.ts","./src/app/app-administration/sub-dialogs/views-usage/views-usage.helpers.ts","./src/app/app-administration/sub-dialogs/views-usage/views-usage.component.html"],"names":["snackBar","agInit","params","this","tooltip","value","idPart","split","id","refresh","copy","open","duration","ViewsUsageIdComponent","isVisible","isDeleted","isFilterActive","doesFilterPass","visiblePassed","deletedPassed","valueGetter","node","IsVisible","toString","IsDeleted","getModel","filterType","setModel","model","afterGuiAttached","filterChanged","filterChangedCallback","ViewsUsageStatusFilterComponent","blockIdValueGetter","data","Block","Id","Guid","moduleIdValueGetter","Module","UsageId","Title","moduleIdClassGetter","pageIdValueGetter","PageId","pageIdClassGetter","nameClassGetter","onNameClicked","window","Url","statusCellRenderer","status","dialogRef","route","viewsService","viewUsage$","BehaviorSubject","viewTooltip$","data$","modules","gridOptions","frameworkComponents","viewsUsageIdComponent","viewsUsageStatusFilterComponent","columnDefs","headerName","field","width","headerClass","cellClass","cellRenderer","sortable","filter","flex","minWidth","sort","onCellClicked","ngOnInit","viewGuid","snapshot","paramMap","get","getUsage","subscribe","viewUsages","viewUsage","next","Blocks","block","Modules","length","push","Page","Name","Language","CultureCode","Status","Visible","buildData","ngOnDestroy","complete","closeDialog","close","ViewsUsageComponent"],"mappings":"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","file":"views-usage-component.4a8d7338e0d49df12dbc.js","sourcesContent":["<div matRipple class=\"id-box highlight\" [matTooltip]=\"tooltip\" *ngIf=\"id\" (click)=\"copy()\">\r\n  <span class=\"id\">{{ id }}</span>\r\n  <mat-icon class=\"icon\">file_copy</mat-icon>\r\n</div>\r\n","import { ICellRendererParams } from '@ag-grid-community/all-modules';\r\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../shared/helpers/copy-to-clipboard.helper';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-id',\r\n  templateUrl: './views-usage-id.component.html',\r\n  styleUrls: ['./views-usage-id.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ViewsUsageIdComponent implements ICellRendererAngularComp {\r\n  tooltip: string;\r\n  id: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.tooltip = params.value;\r\n    if (this.tooltip == null) { return; }\r\n    const idPart = this.tooltip.split('\\n')[0];\r\n    this.id = idPart.split(' ')[1];\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.tooltip);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","import { IAfterGuiAttachedParams, IDoesFilterPassParams, IFilterParams } from '@ag-grid-community/all-modules';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ViewUsageDataStatus } from '../../models/view-usage-data.model';\r\nimport { ViewsUsageStatusFilterModel } from './views-usage-status-filter.model';\r\n\r\n@Component({\r\n  selector: 'app-views-usage-status-filter',\r\n  templateUrl: './views-usage-status-filter.component.html',\r\n  styleUrls: ['./views-usage-status-filter.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ViewsUsageStatusFilterComponent implements IFilterAngularComp {\r\n  isVisible = '';\r\n  isDeleted = '';\r\n\r\n  private params: IFilterParams;\r\n\r\n  agInit(params: IFilterParams) {\r\n    this.params = params;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.isVisible !== '' || this.isDeleted !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    let visiblePassed = false;\r\n    let deletedPassed = false;\r\n    const value: ViewUsageDataStatus = this.params.valueGetter(params.node);\r\n    if (value == null) { return false; }\r\n    if (this.isVisible !== '') {\r\n      visiblePassed = (value.IsVisible == null) ? false : value.IsVisible.toString() === this.isVisible;\r\n    } else {\r\n      visiblePassed = true;\r\n    }\r\n    if (this.isDeleted !== '') {\r\n      deletedPassed = (value.IsDeleted == null) ? false : value.IsDeleted.toString() === this.isDeleted;\r\n    } else {\r\n      deletedPassed = true;\r\n    }\r\n    return visiblePassed && deletedPassed;\r\n  }\r\n\r\n  getModel(): ViewsUsageStatusFilterModel {\r\n    if (!this.isFilterActive()) { return; }\r\n    return {\r\n      filterType: 'views-usage-status',\r\n      isVisible: this.isVisible,\r\n      isDeleted: this.isDeleted,\r\n    };\r\n  }\r\n\r\n  setModel(model: ViewsUsageStatusFilterModel) {\r\n    this.isVisible = model ? model.isVisible : '';\r\n    this.isDeleted = model ? model.isDeleted : '';\r\n  }\r\n\r\n  afterGuiAttached(params: IAfterGuiAttachedParams) {\r\n  }\r\n\r\n  filterChanged() {\r\n    this.params.filterChangedCallback();\r\n  }\r\n}\r\n","<div class=\"title\">Visible</div>\r\n<mat-radio-group [(ngModel)]=\"isVisible\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Visible</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Hidden</mat-radio-button>\r\n</mat-radio-group>\r\n\r\n<div class=\"title\">Deleted</div>\r\n<mat-radio-group [(ngModel)]=\"isDeleted\" (ngModelChange)=\"filterChanged()\">\r\n  <mat-radio-button value=\"\">All</mat-radio-button>\r\n  <mat-radio-button value=\"true\">Is deleted</mat-radio-button>\r\n  <mat-radio-button value=\"false\">Is not deleted</mat-radio-button>\r\n</mat-radio-group>\r\n","import { CellClassParams, CellClickedEvent, ICellRendererParams, ValueGetterParams } from '@ag-grid-community/all-modules';\r\nimport { ViewUsageData, ViewUsageDataStatus } from '../../models/view-usage-data.model';\r\n\r\nexport function blockIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  return `ID: ${data.Block.Id}\\nGUID: ${data.Block.Guid}`;\r\n}\r\n\r\nexport function moduleIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.Module == null) { return; }\r\n  return `ID: ${data.Module.Id}\\nUsageId: ${data.Module.UsageId}\\nTitle: ${data.Module.Title}`;\r\n}\r\n\r\nexport function moduleIdClassGetter(params: CellClassParams) {\r\n  if (params.value == null) { return 'no-outline'; }\r\n  return 'id-action no-padding no-outline';\r\n}\r\n\r\nexport function pageIdValueGetter(params: ValueGetterParams) {\r\n  const data: ViewUsageData = params.data;\r\n  if (data.PageId == null) { return; }\r\n  return `ID: ${data.PageId}`;\r\n}\r\n\r\nexport function pageIdClassGetter(params: CellClassParams) {\r\n  if (params.value == null) { return 'no-outline'; }\r\n  return 'id-action no-padding no-outline';\r\n}\r\n\r\nexport function nameClassGetter(params: CellClassParams) {\r\n  if (params.value == null) { return 'no-outline'; }\r\n  return 'primary-action highlight';\r\n}\r\n\r\nexport function onNameClicked(params: CellClickedEvent) {\r\n  if (params.value == null) { return; }\r\n  const data: ViewUsageData = params.data;\r\n  window.open(data.Url, '_blank');\r\n}\r\n\r\nexport function statusCellRenderer(params: ICellRendererParams) {\r\n  const status: ViewUsageDataStatus = params.value;\r\n  if (status == null) { return; }\r\n  return `\r\n    <div style=\"height: 100%;display: flex;align-items: center;\">\r\n      ${status.IsVisible ? '<span class=\"material-icons-outlined\">visibility</span>' : '<span class=\"material-icons-outlined\">visibility_off</span>'}\r\n      ${status.IsDeleted ? '<span style=\"margin-left: 8px;\" class=\"material-icons-outlined\">delete</span>' : ''}\r\n    </div>\r\n  `;\r\n}\r\n","import { AllCommunityModules, GridOptions } from '@ag-grid-community/all-modules';\r\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { ViewsUsageIdComponent } from '../../ag-grid-components/views-usage-id/views-usage-id.component';\r\nimport { ViewsUsageStatusFilterComponent } from '../../ag-grid-components/views-usage-status-filter/views-usage-status-filter.component';\r\nimport { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\nimport { ViewsService } from '../../services/views.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { blockIdValueGetter, moduleIdClassGetter, moduleIdValueGetter, nameClassGetter, onNameClicked, pageIdClassGetter, pageIdValueGetter, statusCellRenderer } from './views-usage-grid.helpers';\r\nimport { buildData } from './views-usage.helpers';\r\n\r\n@Component({\r\n  selector: 'app-views-usage',\r\n  templateUrl: './views-usage.component.html',\r\n  styleUrls: ['./views-usage.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ViewsUsageComponent implements OnInit, OnDestroy {\r\n  viewUsage$ = new BehaviorSubject<ViewUsage>(null);\r\n  viewTooltip$ = new BehaviorSubject('');\r\n  data$ = new BehaviorSubject<ViewUsageData[]>(null);\r\n\r\n  modules = AllCommunityModules;\r\n  gridOptions: GridOptions = {\r\n    ...defaultGridOptions,\r\n    frameworkComponents: {\r\n      viewsUsageIdComponent: ViewsUsageIdComponent,\r\n      viewsUsageStatusFilterComponent: ViewsUsageStatusFilterComponent,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'Block', field: 'Block', width: 70, headerClass: 'dense', cellClass: 'id-action no-padding no-outline',\r\n        cellRenderer: 'viewsUsageIdComponent', sortable: true, filter: 'agTextColumnFilter', valueGetter: blockIdValueGetter,\r\n      },\r\n      {\r\n        headerName: 'Module', field: 'Module', width: 76, headerClass: 'dense', cellRenderer: 'viewsUsageIdComponent',\r\n        sortable: true, filter: 'agTextColumnFilter', valueGetter: moduleIdValueGetter, cellClass: moduleIdClassGetter,\r\n      },\r\n      {\r\n        headerName: 'Page', field: 'PageId', width: 70, headerClass: 'dense', cellRenderer: 'viewsUsageIdComponent',\r\n        sortable: true, filter: 'agTextColumnFilter', valueGetter: pageIdValueGetter, cellClass: pageIdClassGetter,\r\n      },\r\n      {\r\n        headerName: 'Name', field: 'Name', flex: 2, minWidth: 250, sortable: true, sort: 'asc', filter: 'agTextColumnFilter',\r\n        cellClass: nameClassGetter, onCellClicked: onNameClicked,\r\n      },\r\n      { headerName: 'Language', field: 'Language', width: 90, cellClass: 'no-outline', sortable: true, filter: 'agTextColumnFilter' },\r\n      {\r\n        headerName: 'Status', field: 'Status', width: 80, cellClass: 'icon no-outline', filter: 'viewsUsageStatusFilterComponent',\r\n        cellRenderer: statusCellRenderer,\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor(private dialogRef: MatDialogRef<ViewsUsageComponent>, private route: ActivatedRoute, private viewsService: ViewsService) { }\r\n\r\n  ngOnInit() {\r\n    const viewGuid = this.route.snapshot.paramMap.get('guid');\r\n    this.viewsService.getUsage(viewGuid).subscribe(viewUsages => {\r\n      const viewUsage = viewUsages[0];\r\n      this.viewUsage$.next(viewUsage);\r\n      const viewTooltip = `ID: ${viewUsage.Id}\\nGUID: ${viewUsage.Guid}`;\r\n      this.viewTooltip$.next(viewTooltip);\r\n      const data = buildData(viewUsage);\r\n      this.data$.next(data);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.viewUsage$.complete();\r\n    this.viewTooltip$.complete();\r\n    this.data$.complete();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { ViewUsageData } from '../../models/view-usage-data.model';\r\nimport { ViewUsage } from '../../models/view-usage.model';\r\n\r\nexport function buildData(viewUsage: ViewUsage) {\r\n  const data: ViewUsageData[] = [];\r\n  for (const block of viewUsage.Blocks) {\r\n    if (block.Modules.length === 0) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n      });\r\n    }\r\n    for (const module of block.Modules) {\r\n      data.push({\r\n        Block: { Id: block.Id, Guid: block.Guid },\r\n        Module: module,\r\n        PageId: module.Page.Id,\r\n        Name: module.Page.Name,\r\n        Url: module.Page.Url,\r\n        Language: module.Page.CultureCode,\r\n        Status: { IsVisible: module.Page.Visible, IsDeleted: module.IsDeleted },\r\n      });\r\n    }\r\n  }\r\n  return data;\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div [matTooltip]=\"viewTooltip$ | async\">View: {{ (viewUsage$ | async)?.Name }}</div>\r\n      <button mat-icon-button matTooltip=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"dialog-description\">\r\n    This shows where this view is being used. Read about the\r\n    <a href=\"https://r.2sxc.org/content-in-dnn\" target=\"_blank\">connections between DNN and 2sxc Views</a>\r\n    to make good decisions if you're doing clean-up or just want to better know what this is all about.\r\n    <em>Before you get confused about some things you see here, do read the FAQ on that page.</em>\r\n  </p>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <div class=\"grid-wrapper\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"data$ | async\" [modules]=\"modules\"\r\n      [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}