{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_analyze-settings_analyze-settings_comp-6cd38e.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.html"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { copyToClipboard } from '../../../../shared/helpers/copy-to-clipboard.helper';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { TippyDirective } from 'projects/eav-ui/src/app/shared/directives/tippy.directive';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-key',\r\n  templateUrl: './analyze-settings-key.component.html',\r\n  styleUrls: ['./analyze-settings-key.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsKeyComponent implements ICellRendererAngularComp {\r\n  key: string;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.key = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  copy() {\r\n    copyToClipboard(this.key);\r\n    this.snackBar.open('Copied to clipboard', null, { duration: 2000 });\r\n  }\r\n}\r\n","<div matRipple class=\"key-box highlight\" [tippy]=\"key\" (click)=\"copy()\">\r\n  <span class=\"key\">{{ key }}</span>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { SettingsStackItem } from '../analyze-settings.models';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results.models';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-total-results',\r\n  templateUrl: './analyze-settings-total-results.component.html',\r\n  styleUrls: ['./analyze-settings-total-results.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsTotalResultsComponent implements ICellRendererAngularComp {\r\n  totalResults: number;\r\n\r\n  private stackItem: SettingsStackItem;\r\n  private params: ICellRendererParams & AnalyzeSettingsTotalResultsParams;\r\n\r\n  agInit(params: ICellRendererParams & AnalyzeSettingsTotalResultsParams): void {\r\n    this.totalResults = params.value;\r\n    this.params = params;\r\n    this.stackItem = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openDetails(): void {\r\n    this.params.openDetails(this.stackItem);\r\n  }\r\n}\r\n","@if (totalResults <= 1) {\r\n  <div class=\"input-component no-click\">\r\n    <div>{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n@if (totalResults > 1) {\r\n  <div matRipple class=\"input-component highlight\" tippy=\"Open details\" (click)=\"openDetails()\">\r\n    <div class=\"text\">{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, Observable } from 'rxjs';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { View } from '../../models';\r\nimport { ViewsService } from '../../services';\r\nimport { AnalyzeSettingsService } from '../../services/analyze-settings.service';\r\nimport { AnalyzeSettingsKeyComponent } from './analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from './analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results/analyze-settings-total-results.models';\r\nimport { AnalyzeSettingsValueComponent } from './analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzePart, AnalyzeSettingsViewModel, SettingsStackItem } from './analyze-settings.models';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { transient } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings',\r\n  templateUrl: './analyze-settings.component.html',\r\n  styleUrls: ['./analyze-settings.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    AsyncPipe,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsComponent implements OnInit, OnDestroy {\r\n  part: AnalyzePart;\r\n  viewModel$: Observable<AnalyzeSettingsViewModel>;\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  private views$: BehaviorSubject<View[]>;\r\n  private selectedView$: BehaviorSubject<string>;\r\n  private stack$: BehaviorSubject<SettingsStackItem[]>;\r\n\r\n  private viewsService = transient(ViewsService);\r\n  private analyzeSettingsService = transient(AnalyzeSettingsService);\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AnalyzeSettingsComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) {\r\n    this.part = this.route.snapshot.paramMap.get('part') as AnalyzePart;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.views$ = new BehaviorSubject<View[]>([]);\r\n    this.selectedView$ = new BehaviorSubject<string>(undefined);\r\n    this.stack$ = new BehaviorSubject<SettingsStackItem[]>([]);\r\n\r\n    this.getViews();\r\n    this.getStack();\r\n\r\n    this.viewModel$ = combineLatest([this.views$, this.selectedView$, this.stack$]).pipe(\r\n      map(([views, selectedView, stack]) => {\r\n        const viewModel: AnalyzeSettingsViewModel = {\r\n          views,\r\n          selectedView,\r\n          stack,\r\n        };\r\n        return viewModel;\r\n      }),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.views$.complete();\r\n    this.selectedView$.complete();\r\n    this.stack$.complete();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeView(viewGuid: string): void {\r\n    this.selectedView$.next(viewGuid);\r\n    this.getStack();\r\n  }\r\n\r\n  private getViews(): void {\r\n    this.viewsService.getAll().subscribe(views => {\r\n      this.views$.next(views);\r\n    });\r\n  }\r\n\r\n  private getStack(): void {\r\n    this.analyzeSettingsService.getStack(this.part, undefined, this.selectedView$.value, true).subscribe(stack => {\r\n      this.stack$.next(stack);\r\n    });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Key',\r\n          field: 'Path',\r\n          cellRenderer: AnalyzeSettingsKeyComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Value',\r\n          field: '_value',\r\n          cellRenderer: AnalyzeSettingsValueComponent,\r\n        },\r\n        {\r\n          field: 'Source',\r\n          ...ColumnDefinitions.TextNarrow,\r\n        },\r\n        {\r\n          headerName: 'Total',\r\n          field: 'TotalResults',\r\n          width: 72,\r\n          headerClass: 'dense',\r\n          cellClass: 'secondary-action no-padding no-outline'.split(' '),\r\n          sortable: true,\r\n          filter: 'agNumberColumnFilter',\r\n          cellRenderer: AnalyzeSettingsTotalResultsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AnalyzeSettingsTotalResultsParams = {\r\n              openDetails: (stackItem) => {\r\n                this.router.navigate([`details/${this.selectedView$.value}/${stackItem.Path}`], { relativeTo: this.route });\r\n              },\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","@if (viewModel$ | async; as vm) {\r\n<div class=\"nav-component-wrapper\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Analyze {{ part }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"padding-class\">\r\n    <p class=\"dialog-description\">\r\n      Settings and Resources are consolidated from many sources. Here you see what the resulting values would be.\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <mat-form-field color=\"accent\" class=\"view-select-box\">\r\n      <mat-label>Merge settings / resources of a View</mat-label>\r\n      <mat-select [ngModel]=\"vm.selectedView\" (ngModelChange)=\"changeView($event)\">\r\n        <mat-option [value]=\"undefined\">No view selected - this is how APIs see the data</mat-option>\r\n        @for (view of vm.views; track view) {\r\n        <mat-option [value]=\"view.Guid\">{{ view.Name }}</mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"grid-wrapper padding-class\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"vm.stack\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n}\r\n"],"names":["MatSnackBar","copyToClipboard","MatRippleModule","TippyDirective","AnalyzeSettingsKeyComponent","constructor","snackBar","agInit","params","key","value","refresh","copy","open","duration","_","i0","ɵɵdirectiveInject","i1","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AnalyzeSettingsKeyComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AnalyzeSettingsKeyComponent_Template_div_click_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","i2","MatRipple","styles","MatIconModule","ctx_r0","totalResults","AnalyzeSettingsTotalResultsComponent_Conditional_1_Template_div_click_0_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","openDetails","AnalyzeSettingsTotalResultsComponent","stackItem","data","AnalyzeSettingsTotalResultsComponent_Template","ɵɵtemplate","AnalyzeSettingsTotalResultsComponent_Conditional_0_Template","AnalyzeSettingsTotalResultsComponent_Conditional_1_Template","ɵɵconditional","MatIcon","MatDialogRef","ActivatedRoute","Router","RouterOutlet","BehaviorSubject","combineLatest","map","defaultGridOptions","ViewsService","AnalyzeSettingsService","AnalyzeSettingsValueComponent","AsyncPipe","MatOptionModule","FormsModule","MatSelectModule","MatFormFieldModule","MatButtonModule","SxcGridModule","ColumnDefinitions","transient","view_r3","Guid","Name","AnalyzeSettingsComponent_Conditional_0_Template_button_click_5_listener","_r1","ctx_r1","closeDialog","ɵɵelement","AnalyzeSettingsComponent_Conditional_0_Template_mat_select_ngModelChange_15_listener","$event","changeView","ɵɵrepeaterCreate","AnalyzeSettingsComponent_Conditional_0_For_19_Template","ɵɵrepeaterTrackByIdentity","ɵɵtextInterpolate1","part","vm_r4","selectedView","undefined","ɵɵrepeater","views","stack","gridOptions","AnalyzeSettingsComponent","dialogRef","route","router","buildGridOptions","viewsService","analyzeSettingsService","snapshot","paramMap","get","ngOnInit","views$","selectedView$","stack$","getViews","getStack","viewModel$","pipe","viewModel","ngOnDestroy","complete","close","viewGuid","next","getAll","subscribe","columnDefs","TextWideActionClass","headerName","field","cellRenderer","TextNarrow","width","headerClass","cellClass","split","sortable","filter","cellRendererParams","navigate","Path","relativeTo","AnalyzeSettingsComponent_Template","AnalyzeSettingsComponent_Conditional_0_Template","tmp_0_0","ɵɵpipeBind1","i3","MatIconButton","i4","i5","MatFormField","MatLabel","i6","MatSelect","i7","MatOption","i8","NgControlStatus","NgModel","i9","AgGridAngular"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}