{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_analyze-settings_analyze-settings_comp-6cd38e.js","mappings":"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","sources":["./projects/eav-ui/src/app/app-administration/services/index.ts","./projects/eav-ui/src/app/app-administration/services/pipelines.service.ts","./projects/eav-ui/src/app/app-administration/services/views.service.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-key/analyze-settings-key.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings-total-results/analyze-settings-total-results.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/analyze-settings/analyze-settings.component.html","./projects/eav-ui/src/app/shared/helpers/file-to-base64.helper.ts"],"sourcesContent":["export * from './dialog-config-global.service';\r\nexport * from './content-types.service';\r\nexport * from './export-app-parts.service';\r\nexport * from './export-app.service';\r\nexport * from './import-app-parts.service';\r\nexport * from './pipelines.service';\r\nexport * from './views.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { from, map, switchMap } from 'rxjs';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { toBase64 } from '../../shared/helpers/file-to-base64.helper';\r\nimport { webApiEntityList } from '../../shared/services/entity.service';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Query } from '../models/query.model';\r\n\r\nconst webApiQueryImport = 'admin/query/import';\r\nconst webApiQueryClone = 'admin/query/Clone';\r\nconst webApiQueryDelete = 'admin/query/Delete';\r\nexport const webApiQueryRun = 'admin/query/Run';\r\nexport const webApiQueryDebugStream = 'admin/query/DebugStream';\r\nexport const webApiQuerySave = 'admin/query/Save';\r\nexport const webApiQueryGet = 'admin/query/Get';\r\nexport const webApiQueryDataSources = 'admin/query/DataSources';\r\n\r\n@Injectable()\r\nexport class PipelinesService extends HttpServiceBase {\r\n\r\n  getAll(contentType: string) {\r\n    return this.getHttpApiUrl<Query[]>(webApiEntityList, {\r\n      params: { appId: this.appId, contentType }\r\n    });\r\n  }\r\n\r\n  importQuery(file: File) {\r\n    return from(toBase64(file)).pipe(\r\n      switchMap(fileBase64 => {\r\n        return this.http.post<boolean>(this.apiUrl(webApiQueryImport), {\r\n          AppId: this.appId,\r\n          ContentBase64: fileBase64,\r\n        });\r\n      }),\r\n      map(success => {\r\n        const result: FileUploadResult = {\r\n          Success: success,\r\n          Messages: [],\r\n        };\r\n        return result;\r\n      }),\r\n    );\r\n  }\r\n\r\n  clonePipeline(id: number) {\r\n    return this.getHttpApiUrl<null>(webApiQueryClone, {\r\n      params: { Id: id.toString(), appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete<boolean>(this.apiUrl(webApiQueryDelete), {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileUploadResult } from '../../shared/components/file-upload-dialog';\r\nimport { HttpServiceBase } from '../../shared/services/http-service-base';\r\nimport { Polymorphism } from '../models/polymorphism.model';\r\nimport { ViewUsage } from '../models/view-usage.model';\r\nimport { View } from '../models/view.model';\r\n\r\nconst webApiViewRoot = 'admin/view/';\r\nconst webApiViews = webApiViewRoot + 'all';\r\nconst webApiViewDelete = webApiViewRoot + 'delete';\r\nconst webApiViewImport = webApiViewRoot + 'import';\r\nconst webApiViewPolymorph = webApiViewRoot + 'polymorphism';\r\nconst webApiViewUsage = webApiViewRoot + 'usage';\r\n\r\n@Injectable()\r\nexport class ViewsService extends HttpServiceBase {\r\n\r\n  getAll() {\r\n    return this.getHttpApiUrl<View[]>(webApiViews, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.getHttpApiUrl<boolean>(webApiViewDelete, {\r\n      params: { appId: this.appId, Id: id.toString() },\r\n    });\r\n  }\r\n\r\n  import(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return this.http.post<FileUploadResult>(this.apiUrl(webApiViewImport), formData, {\r\n      params: { appId: this.appId, zoneId: this.zoneId }\r\n    });\r\n  }\r\n\r\n  export(id: number) {\r\n    const url = this.apiUrl(webApiViewRoot + 'json')\r\n      + '?appId=' + this.appId\r\n      + '&viewId=' + id;\r\n\r\n    window.open(url, '_blank', '');\r\n  }\r\n\r\n  getPolymorphism() {\r\n    return this.getHttpApiUrl<Polymorphism>(webApiViewPolymorph, {\r\n      params: { appId: this.appId }\r\n    });\r\n  }\r\n\r\n  getUsage(guid: string) {\r\n    return this.getHttpApiUrl<ViewUsage[]>(webApiViewUsage, {\r\n      params: { appId: this.appId, guid }\r\n    });\r\n  }\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { transient } from '../../../../../../../core/transient';\r\nimport { TippyDirective } from '../../../../shared/directives/tippy.directive';\r\nimport { ClipboardService } from '../../../../shared/services/clipboard.service';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-key',\r\n  templateUrl: './analyze-settings-key.component.html',\r\n  styleUrls: ['./analyze-settings-key.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatRippleModule,\r\n    TippyDirective,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsKeyComponent implements ICellRendererAngularComp {\r\n  key: string;\r\n\r\n  constructor() { }\r\n\r\n  protected clipboard = transient(ClipboardService);\r\n\r\n  agInit(params: ICellRendererParams) {\r\n    this.key = params.value;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div matRipple class=\"key-box highlight\" [tippy]=\"key\" (click)=\"clipboard.copyToClipboard(key)\">\r\n  <span class=\"key\">{{ key }}</span>\r\n</div>\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { ICellRendererParams } from '@ag-grid-community/core';\r\nimport { Component } from '@angular/core';\r\nimport { SettingsStackItem } from '../analyze-settings.models';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results.models';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings-total-results',\r\n  templateUrl: './analyze-settings-total-results.component.html',\r\n  styleUrls: ['./analyze-settings-total-results.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsTotalResultsComponent implements ICellRendererAngularComp {\r\n  totalResults: number;\r\n\r\n  private stackItem: SettingsStackItem;\r\n  private params: ICellRendererParams & AnalyzeSettingsTotalResultsParams;\r\n\r\n  agInit(params: ICellRendererParams & AnalyzeSettingsTotalResultsParams): void {\r\n    this.totalResults = params.value;\r\n    this.params = params;\r\n    this.stackItem = this.params.data;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  openDetails(): void {\r\n    this.params.openDetails(this.stackItem);\r\n  }\r\n}\r\n","@if (totalResults <= 1) {\r\n  <div class=\"input-component no-click\">\r\n    <div>{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button disabled\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n@if (totalResults > 1) {\r\n  <div matRipple class=\"input-component highlight\" tippy=\"Open details\" (click)=\"openDetails()\">\r\n    <div class=\"text\">{{ totalResults }}</div>\r\n    <div class=\"eav-grid-action-button\">\r\n      <mat-icon>search</mat-icon>\r\n    </div>\r\n  </div>\r\n}","import { GridOptions } from '@ag-grid-community/core';\r\nimport { Component, computed, OnInit, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { Of, transient } from '../../../../../../core';\r\nimport { ColumnDefinitions } from '../../../shared/ag-grid/column-definitions';\r\nimport { defaultGridOptions } from '../../../shared/constants/default-grid-options.constants';\r\nimport { SxcGridModule } from '../../../shared/modules/sxc-grid-module/sxc-grid.module';\r\nimport { DialogRoutingService } from '../../../shared/routing/dialog-routing.service';\r\nimport { View } from '../../models';\r\nimport { ViewsService } from '../../services';\r\nimport { AnalyzeSettingsService } from '../../services/analyze-settings.service';\r\nimport { AnalyzeSettingsKeyComponent } from './analyze-settings-key/analyze-settings-key.component';\r\nimport { AnalyzeSettingsTotalResultsComponent } from './analyze-settings-total-results/analyze-settings-total-results.component';\r\nimport { AnalyzeSettingsTotalResultsParams } from './analyze-settings-total-results/analyze-settings-total-results.models';\r\nimport { AnalyzeSettingsValueComponent } from './analyze-settings-value/analyze-settings-value.component';\r\nimport { AnalyzeParts } from './analyze-settings.models';\r\n\r\n@Component({\r\n  selector: 'app-analyze-settings',\r\n  templateUrl: './analyze-settings.component.html',\r\n  styleUrls: ['./analyze-settings.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    RouterOutlet,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatOptionModule,\r\n    SxcGridModule,\r\n  ],\r\n})\r\nexport class AnalyzeSettingsComponent implements OnInit {\r\n  part: Of<typeof AnalyzeParts>;\r\n  gridOptions = this.buildGridOptions();\r\n\r\n  #viewsSvc = transient(ViewsService);\r\n  #analyzeSettingsSvc = transient(AnalyzeSettingsService);\r\n  #dialogRouter = transient(DialogRoutingService);\r\n\r\n  views = signal<View[]>([]);\r\n  selectedView = signal<string>(undefined);\r\n\r\n  stack = computed(() =>\r\n    this.#analyzeSettingsSvc.getStackSig(this.part, undefined, this.selectedView(), true)\r\n  );\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<AnalyzeSettingsComponent>,\r\n  ) {\r\n    this.part = this.#dialogRouter.getParam('part') as Of<typeof AnalyzeParts>;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getViews();\r\n    this.getStack();\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  changeView(viewGuid: string): void {\r\n    this.selectedView.set(viewGuid);\r\n    this.getStack();\r\n  }\r\n\r\n  private getViews(): void {\r\n    this.#viewsSvc.getAll().subscribe(views => {\r\n      this.views.set(views);\r\n    });\r\n  }\r\n\r\n  private getStack(): void {\r\n    this.stack();\r\n\r\n    // this.#analyzeSettingsSvc.getStack(this.part, undefined, this.selectedView(), true).subscribe(stack => {\r\n    //   this.stack.set(stack);\r\n    // });\r\n  }\r\n\r\n  private buildGridOptions(): GridOptions {\r\n    const gridOptions: GridOptions = {\r\n      ...defaultGridOptions,\r\n      columnDefs: [\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Key',\r\n          field: 'Path',\r\n          cellRenderer: AnalyzeSettingsKeyComponent,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.TextWideActionClass,\r\n          headerName: 'Value',\r\n          field: '_value',\r\n          cellRenderer: AnalyzeSettingsValueComponent,\r\n        },\r\n        {\r\n          field: 'Source',\r\n          ...ColumnDefinitions.TextNarrow,\r\n        },\r\n        {\r\n          ...ColumnDefinitions.Items,\r\n          headerName: 'Total',\r\n          field: 'TotalResults',\r\n          width: 72,\r\n          cellClass: 'no-outline',\r\n          cellRenderer: AnalyzeSettingsTotalResultsComponent,\r\n          cellRendererParams: (() => {\r\n            const params: AnalyzeSettingsTotalResultsParams = {\r\n              openDetails: (stackItem) => {\r\n                this.#dialogRouter.navRelative([`details/${this.selectedView()}/${stackItem.Path}`]);\r\n              },\r\n            };\r\n            return params;\r\n          })(),\r\n        },\r\n      ],\r\n    };\r\n    return gridOptions;\r\n  }\r\n}\r\n","<div class=\"nav-component-wrapper\">\r\n  <div mat-mdc-dialog-title>\r\n    <div class=\"dialog-title-box\">\r\n      <div>Analyze {{ part }}</div>\r\n      <button mat-icon-button tippy=\"Close dialog\" (click)=\"closeDialog()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"padding-class\">\r\n    <p class=\"dialog-description\">\r\n      Settings and Resources are consolidated from many sources. Here you see what the resulting values would be.\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n    <mat-form-field color=\"accent\" class=\"view-select-box\">\r\n      <mat-label>Merge settings / resources of a View</mat-label>\r\n      <mat-select [ngModel]=\"selectedView()\" (ngModelChange)=\"changeView($event)\">\r\n        <mat-option [value]=\"undefined\">No view selected - this is how APIs see the data</mat-option>\r\n        @for (view of views(); track view) {\r\n        <mat-option [value]=\"view.Guid\">{{ view.Name }}</mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"grid-wrapper padding-class\">\r\n    <ag-grid-angular class=\"ag-theme-material\" [rowData]=\"stack()()\" [gridOptions]=\"gridOptions\">\r\n    </ag-grid-angular>\r\n    <div class=\"grid-more-actions-box\"></div>\r\n  </div>\r\n</div>\r\n","export function toBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve((reader.result as string).split(',')[1]);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n\r\nexport function toString(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = error => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["from","map","switchMap","toBase64","webApiEntityList","HttpServiceBase","webApiQueryImport","webApiQueryClone","webApiQueryDelete","webApiQueryRun","webApiQueryDebugStream","webApiQuerySave","webApiQueryGet","webApiQueryDataSources","PipelinesService","getAll","contentType","getHttpApiUrl","params","appId","importQuery","file","pipe","fileBase64","http","post","apiUrl","AppId","ContentBase64","success","result","Success","Messages","clonePipeline","id","Id","toString","delete","__ngFactoryType__","factory","ɵfac","webApiViewRoot","webApiViews","webApiViewDelete","webApiViewImport","webApiViewPolymorph","webApiViewUsage","ViewsService","import","formData","FormData","append","zoneId","export","url","window","open","getPolymorphism","getUsage","guid","MatRippleModule","transient","TippyDirective","ClipboardService","AnalyzeSettingsKeyComponent","constructor","clipboard","agInit","key","value","refresh","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","AnalyzeSettingsKeyComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AnalyzeSettingsKeyComponent_Template_div_click_0_listener","copyToClipboard","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","i1","MatRipple","styles","MatIconModule","ctx_r0","totalResults","AnalyzeSettingsTotalResultsComponent_Conditional_1_Template_div_click_0_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","openDetails","AnalyzeSettingsTotalResultsComponent","stackItem","data","AnalyzeSettingsTotalResultsComponent_Template","ɵɵtemplate","AnalyzeSettingsTotalResultsComponent_Conditional_0_Template","AnalyzeSettingsTotalResultsComponent_Conditional_1_Template","ɵɵconditional","MatIcon","i2","computed","signal","FormsModule","MatButtonModule","MatOptionModule","MatDialogRef","MatFormFieldModule","MatSelectModule","RouterOutlet","ColumnDefinitions","defaultGridOptions","SxcGridModule","DialogRoutingService","AnalyzeSettingsService","AnalyzeSettingsValueComponent","view_r1","Guid","Name","AnalyzeSettingsComponent","viewsSvc","analyzeSettingsSvc","dialogRouter","dialog","gridOptions","buildGridOptions","views","selectedView","undefined","stack","getStackSig","part","getParam","ngOnInit","getViews","getStack","closeDialog","close","changeView","viewGuid","set","subscribe","columnDefs","TextWideActionClass","headerName","field","cellRenderer","TextNarrow","Items","width","cellClass","cellRendererParams","navRelative","Path","ɵɵdirectiveInject","AnalyzeSettingsComponent_Template","AnalyzeSettingsComponent_Template_button_click_5_listener","ɵɵelement","AnalyzeSettingsComponent_Template_mat_select_ngModelChange_15_listener","$event","ɵɵrepeaterCreate","AnalyzeSettingsComponent_For_19_Template","ɵɵrepeaterTrackByIdentity","ɵɵtextInterpolate1","ɵɵrepeater","MatIconButton","i3","i4","MatFormField","MatLabel","i5","MatSelect","i6","MatOption","i7","NgControlStatus","NgModel","i8","AgGridAngular","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","readAsText"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}