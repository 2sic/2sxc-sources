{"version":3,"file":"projects_eav-ui_src_app_app-administration_sub-dialogs_edit-content-type_edit-content-type_co-2abec4.a2325239ece5ceb5.js","mappings":"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","names":["contentTypeNamePattern","i0","ctx_r9","contentTypeNameError","EditContentTypeComponent_ng_container_0_form_5_ng_container_10_app_field_hint_1_Template","EditContentTypeComponent_ng_container_0_form_5_ng_container_10_app_field_hint_2_Template","_r4","errors","required","pattern","scopeOption_r10","value","name","vm_r1","contentType","SharedDefId","_r13","ctx_r12","save","$event","ctx_r14","changeContentTypeName","EditContentTypeComponent_ng_container_0_form_5_ng_container_10_Template","ctx_r15","changeScope","EditContentTypeComponent_ng_container_0_form_5_mat_option_23_Template","ctx_r16","unlockScope","EditContentTypeComponent_ng_container_0_form_5_div_38_Template","ctx_r17","closeDialog","ctx_r2","Name","touched","disableAnimation","Scope","lockScope","scopeOptions","dropdownInsertValue","StaticName","_r3","form","valid","loading","EditContentTypeComponent_ng_container_0_form_5_Template","ctx_r0","contentTypeStaticName","EditContentTypeComponent","_class","constructor","dialogRef","route","contentTypesService","snackBar","this","hostClass","snapshot","paramMap","get","contentType$","BehaviorSubject","lockScope$","scopeOptions$","disableAnimation$","loading$","viewModel$","combineLatest","pipe","map","scope","parent","ngOnInit","retrieveContentType","ChangeStaticName","NewStaticName","of","Description","scopes$","getScopes","subscribe","next","newScopes","forEach","scopeOption","some","push","ngOnDestroy","complete","ngAfterViewInit","setTimeout","close","newName","newScope","prompt","eavConstants","scopes","default","option","open","result","duration","document","activeElement","HTMLElement","blur","i1","i2","i3","i4","selectors","hostVars","hostBindings","rf","ctx","EditContentTypeComponent_ng_container_0_Template","ClickStopPropagationDirective","onClick","event","stopPropagation"],"sourceRoot":"webpack:///","sources":["./projects/eav-ui/src/app/app-administration/constants/content-type.patterns.ts","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.html","./projects/eav-ui/src/app/app-administration/sub-dialogs/edit-content-type/edit-content-type.component.ts","./projects/eav-ui/src/app/shared/directives/click-stop-propagation.directive.ts"],"sourcesContent":["/**\r\n * The pattern determines what content-type names are allowed.\r\n * Basically it's A-Z and numbers after the first digit.\r\n * But there are two exceptions:\r\n *  - types describing an input-type begin with an `@` and can also contain `-` chars\r\n *  - types beginning with an `|` are very old type names for data-sources, they can contain anything!\r\n */\r\nexport const contentTypeNamePattern = /(^[A-Za-z][A-Za-z0-9]+$)|(^@[A-Za-z][A-Za-z0-9-]*$)/;\r\nexport const contentTypeNameError = 'Standard letters and numbers are allowed. Must start with a letter.';\r\n\r\n// 2020-04-29 2dm - temporarily used this pattern while renaming unique named types containing '|' chars\r\n// export const contentTypeNamePattern = /(^[A-Za-z][A-Za-z0-9]+$)|(^@[A-Za-z][A-Za-z0-9-]*$)|(^\\|.*$)/;\r\n","<ng-container *ngIf=\"viewModel$ | async as vm\">\r\n  <div class=\"eav-dialog\">\r\n    <div class=\"eav-dialog-header\">\r\n      <div class=\"eav-dialog-header__title\">{{ contentTypeStaticName ? 'Edit Content Type' : 'New Content Type' }}</div>\r\n    </div>\r\n    <form *ngIf=\"vm.contentType\" #ngForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n      <div class=\"eav-dialog-content\">\r\n        <div>\r\n          <div class=\"eav-edit-input\">\r\n            <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n              <mat-label>Name</mat-label>\r\n              <input matInput type=\"text\" required [pattern]=\"contentTypeNamePattern\" [ngModel]=\"vm.contentType.Name\"\r\n                (ngModelChange)=\"changeContentTypeName($event)\" name=\"Name\" #name=\"ngModel\">\r\n            </mat-form-field>\r\n            <ng-container *ngIf=\"name.touched && name.errors\">\r\n              <app-field-hint *ngIf=\"name.errors.required\" [isError]=\"true\">This field is required</app-field-hint>\r\n              <app-field-hint *ngIf=\"name.errors.pattern\" [isError]=\"true\">{{ contentTypeNameError }}</app-field-hint>\r\n            </ng-container>\r\n          </div>\r\n          <mat-accordion [@.disabled]=\"vm.disableAnimation\">\r\n            <mat-expansion-panel>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>Advanced</mat-panel-title>\r\n                <mat-panel-description></mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n\r\n              <div class=\"eav-edit-input\">\r\n                <div class=\"eav-form-and-button\">\r\n                  <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n                    <mat-label>Scope</mat-label>\r\n                    <mat-select [ngModel]=\"vm.contentType.Scope\" name=\"Scope\" (ngModelChange)=\"changeScope($event)\"\r\n                      [disabled]=\"vm.lockScope\">\r\n                      <mat-option *ngFor=\"let scopeOption of vm.scopeOptions\" [value]=\"scopeOption.value\">\r\n                        {{ scopeOption.name }}\r\n                      </mat-option>\r\n                      <mat-option [value]=\"dropdownInsertValue\">Other...</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <button mat-icon-button type=\"button\" matTextSuffix [tippy]=\"vm.lockScope ? 'Unlock' : 'Lock'\"\r\n                    class=\"eav-scope-button\" (click)=\"unlockScope()\">\r\n                    <mat-icon>\r\n                      {{ vm.lockScope ? 'lock' : 'lock_open' }}\r\n                    </mat-icon>\r\n                  </button>\r\n                </div>\r\n                <app-field-hint>\r\n                  The scope should almost never be changed -\r\n                  <a href=\"https://2sxc.org/help?tag=scope\" target=\"_blank\" appClickStopPropagation>see help</a>\r\n                </app-field-hint>\r\n              </div>\r\n\r\n              <div class=\"eav-edit-input\">\r\n                <mat-form-field color=\"accent\" class=\"eav-form-field\">\r\n                  <mat-label>Static Name</mat-label>\r\n                  <input matInput type=\"text\" [ngModel]=\"vm.contentType.StaticName\" name=\"StaticName\" disabled>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div *ngIf=\"vm.contentType.SharedDefId\" class=\"eav-edit-input\">\r\n                <h3>Shared Content Type (Ghost)</h3>\r\n                <p>Note: this can't be edited in the UI, for now if you really know what you're doing, do it in the DB\r\n                </p>\r\n                <p>Uses Type Definition of: {{ vm.contentType.SharedDefId }}</p>\r\n              </div>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n        <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!ngForm.form.valid || vm.loading\">\r\n          Save\r\n        </button>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  </div>\r\n</ng-container>","import { AfterViewInit, Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, map, of } from 'rxjs';\r\nimport { dropdownInsertValue } from '../../../shared/constants/dropdown-insert-value.constant';\r\nimport { eavConstants, ScopeOption } from '../../../shared/constants/eav.constants';\r\nimport { contentTypeNameError, contentTypeNamePattern } from '../../constants/content-type.patterns';\r\nimport { ContentTypeEdit } from '../../models/content-type.model';\r\nimport { ContentTypesService } from '../../services/content-types.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-content-type',\r\n  templateUrl: './edit-content-type.component.html',\r\n  styleUrls: ['./edit-content-type.component.scss'],\r\n})\r\nexport class EditContentTypeComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n\r\n  contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n  contentTypeNamePattern = contentTypeNamePattern;\r\n  contentTypeNameError = contentTypeNameError;\r\n  dropdownInsertValue = dropdownInsertValue;\r\n\r\n  private contentType$ = new BehaviorSubject<ContentTypeEdit>(null);\r\n  private lockScope$ = new BehaviorSubject(true);\r\n  private scopeOptions$ = new BehaviorSubject<ScopeOption[]>(null);\r\n  private disableAnimation$ = new BehaviorSubject(true);\r\n  private loading$ = new BehaviorSubject(false);\r\n  viewModel$ = combineLatest([this.contentType$, this.lockScope$, this.scopeOptions$, this.disableAnimation$, this.loading$]).pipe(\r\n    map(([contentType, lockScope, scopeOptions, disableAnimation, loading]) =>\r\n      ({ contentType, lockScope, scopeOptions, disableAnimation, loading })),\r\n  );\r\n  private scope = this.route.snapshot.parent.paramMap.get('scope');\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditContentTypeComponent>,\r\n    private route: ActivatedRoute,\r\n    private contentTypesService: ContentTypesService,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const contentType$ = this.contentTypeStaticName\r\n      ? this.contentTypesService.retrieveContentType(this.contentTypeStaticName)\r\n        .pipe(\r\n          map(contentType => {\r\n            const contentTypeEdit: ContentTypeEdit = {\r\n              ...contentType,\r\n              ChangeStaticName: false,\r\n              NewStaticName: contentType.StaticName,\r\n            };\r\n            return contentTypeEdit;\r\n          }),\r\n        )\r\n      : of({\r\n        StaticName: '',\r\n        Name: '',\r\n        Description: '',\r\n        Scope: this.scope,\r\n        ChangeStaticName: false,\r\n        NewStaticName: '',\r\n      } as ContentTypeEdit);\r\n    const scopes$ = this.contentTypesService.getScopes();\r\n    combineLatest([contentType$, scopes$]).subscribe(([contentType, scopeOptions]) => {\r\n      this.contentType$.next(contentType);\r\n\r\n      const newScopes = [...(this.scopeOptions$.value ?? [])];\r\n      scopeOptions.forEach(scopeOption => {\r\n        if (!newScopes.some(scope => scope.value === scopeOption.value)) {\r\n          newScopes.push(scopeOption);\r\n        }\r\n      });\r\n      if (!newScopes.some(scope => scope.value === this.scope)) {\r\n        const newScopeOption: ScopeOption = {\r\n          name: this.scope,\r\n          value: this.scope,\r\n        };\r\n        newScopes.push(newScopeOption);\r\n      }\r\n      this.scopeOptions$.next(newScopes);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentType$.complete();\r\n    this.lockScope$.complete();\r\n    this.scopeOptions$.complete();\r\n    this.disableAnimation$.complete();\r\n    this.loading$.complete();\r\n  }\r\n\r\n  // workaround for angular component issue #13870\r\n  ngAfterViewInit() {\r\n    // timeout required to avoid ExpressionChangedAfterItHasBeenCheckedError\r\n    setTimeout(() => this.disableAnimation$.next(false));\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeContentTypeName(newName: string) {\r\n    this.contentType$.next({ ...this.contentType$.value, Name: newName });\r\n  }\r\n\r\n  changeScope(newScope: string) {\r\n    if (newScope === dropdownInsertValue) {\r\n      newScope = prompt('This is an advanced feature to show content-types of another scope. Don\\'t use this if you don\\'t know what you\\'re doing, as content-types of other scopes are usually hidden for a good reason.') || eavConstants.scopes.default.value;\r\n      if (!this.scopeOptions$.value.some(option => option.value === newScope)) {\r\n        const newScopeOption: ScopeOption = {\r\n          name: newScope,\r\n          value: newScope,\r\n        };\r\n        this.scopeOptions$.next([newScopeOption, ...this.scopeOptions$.value]);\r\n      }\r\n    }\r\n    this.contentType$.next({ ...this.contentType$.value, Scope: newScope });\r\n  }\r\n\r\n  unlockScope() {\r\n    this.lockScope$.next(!this.lockScope$.value);\r\n    if (this.lockScope$.value) {\r\n      this.contentType$.next({ ...this.contentType$.value, Scope: this.scope });\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.loading$.next(true);\r\n    this.snackBar.open('Saving...');\r\n    this.contentTypesService.save(this.contentType$.value).subscribe(result => {\r\n      this.loading$.next(false);\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.closeDialog();\r\n    });\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[appClickStopPropagation]' })\r\nexport class ClickStopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}