{"version":3,"file":"projects_eav-ui_src_app_content-type-fields_edit-content-type-fields_edit-content-type-fields-974b18.js","mappings":"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","sources":["./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields.component.ts","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields.component.html","./projects/eav-ui/src/app/content-type-fields/edit-content-type-fields/edit-content-type-fields.helpers.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.ts","./projects/eav-ui/src/app/shared/components/field-hint/field-hint.component.html","./projects/eav-ui/src/app/shared/fields/data-type-catalog.ts","./projects/eav-ui/src/app/shared/fields/input-type-catalog.ts","./node_modules/rxjs/dist/esm/internal/operators/reduce.js"],"sourcesContent":["import { AsyncPipe, NgClass } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, HostBinding, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogActions, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { BehaviorSubject, catchError, concatMap, filter, forkJoin, map, of, share, switchMap, toArray } from 'rxjs';\r\nimport { Of, transient } from '../../../../../core';\r\nimport { fieldNameError, fieldNamePattern } from '../../app-administration/constants/field-name.patterns';\r\nimport { ContentType } from '../../app-administration/models/content-type.model';\r\nimport { ContentTypesService } from '../../app-administration/services/content-types.service';\r\nimport { BaseComponent } from '../../shared/components/base.component';\r\nimport { FieldHintComponent } from '../../shared/components/field-hint/field-hint.component';\r\nimport { ContentTypesFieldsService } from '../../shared/fields/content-types-fields.service';\r\nimport { DataTypeCatalog } from '../../shared/fields/data-type-catalog';\r\nimport { Field, FieldInputTypeOption } from '../../shared/fields/field.model';\r\nimport { InputTypeCatalog } from '../../shared/fields/input-type-catalog';\r\nimport { calculateTypeIcon, calculateTypeLabel } from '../content-type-fields.helpers';\r\nimport { calculateDataTypes, DataType } from './edit-content-type-fields.helpers';\r\nimport { ReservedNamesValidatorDirective } from './reserved-names.directive';\r\n\r\n@Component({\r\n    selector: 'app-edit-content-type-fields',\r\n    templateUrl: './edit-content-type-fields.component.html',\r\n    styleUrls: ['./edit-content-type-fields.component.scss'],\r\n    imports: [\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        ReservedNamesValidatorDirective,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        MatOptionModule,\r\n        NgClass,\r\n        MatDialogActions,\r\n        MatButtonModule,\r\n        AsyncPipe,\r\n        TranslateModule,\r\n        FieldHintComponent,\r\n    ]\r\n})\r\nexport class EditContentTypeFieldsComponent extends BaseComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  @HostBinding('className') hostClass = 'dialog-component';\r\n  @ViewChild('ngForm', { read: NgForm }) private form: NgForm;\r\n  @ViewChildren('autoFocusInputField') autoFocusInputField!: QueryList<ElementRef>;\r\n\r\n  fields: Partial<Field>[] = [];\r\n  reservedNames: Record<string, string> = {};\r\n  editMode: 'name' | 'inputType';\r\n  dataTypes: DataType[];\r\n  filteredInputTypeOptions: FieldInputTypeOption[][] = [];\r\n  dataTypeHints: string[] = [];\r\n  inputTypeHints: string[] = [];\r\n  fieldNamePattern = fieldNamePattern;\r\n  fieldNameError = fieldNameError;\r\n  findIcon = calculateTypeIcon;\r\n  findLabel = calculateTypeLabel;\r\n  loading$ = new BehaviorSubject(true);\r\n  saving$ = new BehaviorSubject(false);\r\n\r\n  #contentType: ContentType;\r\n  #inputTypeOptions: FieldInputTypeOption[];\r\n\r\n  #contentTypesSvc = transient(ContentTypesService);\r\n  #contentTypesFieldsSvc = transient(ContentTypesFieldsService);\r\n\r\n  constructor(\r\n    protected dialog: MatDialogRef<EditContentTypeFieldsComponent>,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    // private matDialog: MatDialog,\r\n  ) {\r\n    super();\r\n    this.dialog.disableClose = true;\r\n    this.subscriptions.add(\r\n      this.dialog.backdropClick().subscribe(event => {\r\n        if (this.form.dirty) {\r\n          const confirmed = confirm('You have unsaved changes. Are you sure you want to close this dialog?');\r\n          if (!confirmed) return;\r\n        }\r\n        this.dialog.close();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Wait for the inputFields to be available\r\n    if (this.autoFocusInputField) {\r\n      setTimeout(() => {\r\n        this.autoFocusInputField.first.nativeElement.focus();\r\n      }, 250); // Delay execution to ensure the view is fully rendered\r\n    }\r\n  }\r\n\r\n  // 2pp not in use? \r\n  // trackField(index: number, field: Field): string {\r\n  //   return field.StaticName; // Replace with your unique field identifier\r\n  // }\r\n\r\n  ngOnInit() {\r\n    this.editMode = this.route.snapshot.paramMap.get('editMode') as 'name' | 'inputType';\r\n\r\n    const contentTypeStaticName = this.route.snapshot.paramMap.get('contentTypeStaticName');\r\n    const contentType$ = this.#contentTypesSvc.retrieveContentType(contentTypeStaticName).pipe(share());\r\n    const fields$ = contentType$.pipe(switchMap(contentType => this.#contentTypesFieldsSvc.getFields(contentType.StaticName)));\r\n    const dataTypes$ = this.#contentTypesFieldsSvc.typeListRetrieve().pipe(map(rawDataTypes => calculateDataTypes(rawDataTypes)));\r\n    const inputTypes$ = this.#contentTypesFieldsSvc.getInputTypesList();\r\n    const reservedNames$ = this.#contentTypesFieldsSvc.getReservedNames();\r\n\r\n    forkJoin([contentType$, fields$, dataTypes$, inputTypes$, reservedNames$]).subscribe(\r\n      ([contentType, fields, dataTypes, inputTypes, reservedNames]) => {\r\n        this.#contentType = contentType;\r\n        this.dataTypes = dataTypes;\r\n        this.#inputTypeOptions = inputTypes;\r\n        // this.existingFields = fields;\r\n\r\n        this.reservedNames = ReservedNamesValidatorDirective.mergeReserved(reservedNames, fields);\r\n\r\n        if (this.editMode != null) {\r\n          const editFieldId = this.route.snapshot.paramMap.get('id') ? parseInt(this.route.snapshot.paramMap.get('id'), 10) : null;\r\n          const editField = fields.find(field => field.Id === editFieldId);\r\n          if (this.editMode === 'name')\r\n            delete this.reservedNames[editField.StaticName];\r\n          this.fields.push(editField);\r\n        } else {\r\n          for (let i = 1; i <= 8; i++) {\r\n            this.fields.push({\r\n              Id: 0,\r\n              Type: DataTypeCatalog.String,\r\n              InputType: InputTypeCatalog.StringDefault,\r\n              StaticName: '',\r\n              IsTitle: fields.length === 0,\r\n              SortOrder: fields.length + i,\r\n            });\r\n          }\r\n        }\r\n\r\n        for (let i = 0; i < this.fields.length; i++) {\r\n          this.filterInputTypeOptions(i);\r\n          this.calculateHints(i);\r\n        }\r\n\r\n        this.loading$.next(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loading$.complete();\r\n    this.saving$.complete();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  // closeDialog() {\r\n  //   this.dialog.close();\r\n  // }\r\n\r\n  filterInputTypeOptions(index: number) {\r\n    this.filteredInputTypeOptions[index] = this.#inputTypeOptions.filter(\r\n      option => option.dataType === this.fields[index].Type.toLocaleLowerCase()\r\n    );\r\n  }\r\n\r\n  resetInputType(index: number) {\r\n    let defaultInputType = this.fields[index].Type.toLocaleLowerCase() + InputTypeCatalog.DefaultSuffix as Of<typeof InputTypeCatalog>;\r\n    const defaultExists = this.filteredInputTypeOptions[index].some(option => option.inputType === defaultInputType);\r\n    if (!defaultExists)\r\n      defaultInputType = this.filteredInputTypeOptions[index][0].inputType;\r\n    this.fields[index].InputType = defaultInputType;\r\n  }\r\n\r\n  calculateHints(index: number) {\r\n    const selectedDataType = this.dataTypes.find(dataType => dataType.name === this.fields[index].Type);\r\n    const selectedInputType = this.#inputTypeOptions.find(inputTypeOption => inputTypeOption.inputType === this.fields[index].InputType);\r\n    this.dataTypeHints[index] = selectedDataType?.description ?? '';\r\n    this.inputTypeHints[index] = selectedInputType?.isObsolete\r\n      ? `OBSOLETE - ${selectedInputType.obsoleteMessage}`\r\n      : selectedInputType?.description ?? '';\r\n  }\r\n\r\n  getInputTypeOption(inputName: string) {\r\n    return this.#inputTypeOptions.find(option => option.inputType === inputName);\r\n  }\r\n\r\n  // addSharedField() {\r\n  //   this.matDialog.open(AddSharingFieldsComponent, {\r\n  //     autoFocus: false,\r\n  //     width: '1600px',\r\n  //     data: { contentType: this.#contentType, existingFields: this.existingFields }\r\n  //   });\r\n  // }\r\n\r\n  save() {\r\n    this.saving$.next(true);\r\n    this.snackBar.open('Saving...');\r\n\r\n    const doneAndClose = () => {\r\n      this.saving$.next(false);\r\n      this.snackBar.open('Saved', null, { duration: 2000 });\r\n      this.dialog.close();\r\n    }\r\n    if (this.editMode != null) {\r\n      const field = this.fields[0];\r\n      if (this.editMode === 'name') {\r\n        this.#contentTypesFieldsSvc.rename(field.Id, this.#contentType.Id, field.StaticName)\r\n          .subscribe(() => doneAndClose());\r\n      } else if (this.editMode === 'inputType') {\r\n        this.#contentTypesFieldsSvc.updateInputType(field.Id, field.StaticName, field.InputType)\r\n          .subscribe(() => doneAndClose());\r\n      }\r\n    } else {\r\n      of(...this.fields).pipe(\r\n        filter(field => !!field.StaticName),\r\n        concatMap(field =>\r\n          this.#contentTypesFieldsSvc.add(field, this.#contentType.Id).pipe(catchError(error => of(null)))\r\n        ),\r\n        toArray(),\r\n      ).subscribe(() => doneAndClose());\r\n    }\r\n  }\r\n}\r\n","<div class=\"eav-dialog eav-no-scrollbar\">\r\n  <div class=\"eav-dialog-header\">\r\n    <div class=\"eav-dialog-header__title\">\r\n      @if (editMode === undefined) {\r\n        Fields\r\n      }\r\n      @if (editMode === null) {\r\n        Add Fields\r\n      }\r\n      @if (editMode != null) {\r\n        Edit Field\r\n      }\r\n    </div>\r\n  </div>\r\n  @if ((loading$ | async) === false) {\r\n    <form #ngForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n      <div class=\"eav-dialog-content\">\r\n        @for (field of fields; track field; let i = $index) {\r\n          <div class=\"eav-row-container\">\r\n            <div class=\"eav-edit-input\">\r\n              <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                <mat-label>Name</mat-label>\r\n                <input\r\n                  matInput\r\n                  [pattern]=\"fieldNamePattern\"\r\n                  [appReservedNames]=\"reservedNames\"\r\n                  [(ngModel)]=\"field.StaticName\"\r\n                  [name]=\"'StaticName' + i\"\r\n                  #staticName=\"ngModel\"\r\n                  [disabled]=\"editMode === 'inputType'\"\r\n                  #autoFocusInputField\r\n                />\r\n              </mat-form-field>\r\n              @if (staticName.touched && staticName.errors) {\r\n                @if (staticName.errors.pattern) {\r\n                  <app-field-hint [isError]=\"true\">{{ fieldNameError }}</app-field-hint>\r\n                }\r\n                @if (staticName.errors.reservedNames) {\r\n                  <app-field-hint [isError]=\"true\">\r\n                    {{ staticName.errors.reservedNames }}\r\n                  </app-field-hint>\r\n                }\r\n              }\r\n            </div>\r\n            <div class=\"eav-edit-input\">\r\n              <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                <mat-label>Data Type</mat-label>\r\n                <mat-select\r\n                  (selectionChange)=\"filterInputTypeOptions(i); resetInputType(i); calculateHints(i)\"\r\n                  [(ngModel)]=\"field.Type\"\r\n                  [name]=\"'Type' + i\"\r\n                  [disabled]=\"editMode != null\"\r\n                >\r\n                  <mat-select-trigger>\r\n                    <mat-icon class=\"eav-type-icon\">{{ findIcon(field.Type) }}</mat-icon>\r\n                    <span>{{ findLabel(field.Type) }}</span>\r\n                  </mat-select-trigger>\r\n                  @for (dataType of dataTypes; track dataType) {\r\n                    <mat-option [value]=\"dataType.name\">\r\n                      <mat-icon class=\"eav-type-icon\">{{ dataType.icon }}</mat-icon>\r\n                      <span>{{ dataType.label }}</span>\r\n                    </mat-option>\r\n                  }\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <app-field-hint>{{ dataTypeHints[i] }}</app-field-hint>\r\n            </div>\r\n            <div class=\"eav-edit-input\">\r\n              <mat-form-field color=\"accent\" class=\"eav-mat-form-field\">\r\n                <mat-label>Input Type</mat-label>\r\n                <mat-select\r\n                  (selectionChange)=\"calculateHints(i)\"\r\n                  [(ngModel)]=\"field.InputType\"\r\n                  [name]=\"'InputType' + i\"\r\n                  [disabled]=\"editMode === 'name'\"\r\n                >\r\n                  <mat-select-trigger>\r\n                    <span>{{ getInputTypeOption(field.InputType)?.label }}</span>\r\n                    <mat-icon class=\"eav-input-icon\">{{ getInputTypeOption(field.InputType)?.icon }}</mat-icon>\r\n                  </mat-select-trigger>\r\n                  @for (option of filteredInputTypeOptions[i]; track option) {\r\n                    <mat-option [value]=\"option.inputType\" [ngClass]=\"{ 'eav-input-obsolete': option.isObsolete }\">\r\n                      <!-- div is needed here because <mat-option> by default puts mat-icon on the first place if it exists -->\r\n                      <div>\r\n                        <span>{{ option.label }}</span>\r\n                        @if (option.icon) {\r\n                          <mat-icon class=\"eav-input-icon\">{{ option.icon }}</mat-icon>\r\n                        }\r\n                      </div>\r\n                    </mat-option>\r\n                  }\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <app-field-hint>{{ inputTypeHints[i] }}</app-field-hint>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      <!-- Save / cancel buttons -->\r\n      <mat-dialog-actions>\r\n        <div class=\"spacer\"></div>\r\n        <button mat-raised-button type=\"button\" (click)=\"dialog.close()\">Cancel</button>\r\n        <button mat-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!ngForm.form.valid || (saving$ | async)\">Save</button>\r\n      </mat-dialog-actions>\r\n    </form>\r\n  }\r\n</div>\r\n","import { DataTypeCatalog } from '../../shared/fields/data-type-catalog';\r\nimport { calculateTypeIcon, calculateTypeLabel } from '../content-type-fields.helpers';\r\n\r\nconst dataTypeLabels: Record<string, { label: string, description: string }> = {\r\n  Boolean: { label: calculateTypeLabel(DataTypeCatalog.Boolean), description: 'Yes/no or true/false values' },\r\n  Custom: { label: calculateTypeLabel(DataTypeCatalog.Custom), description: 'Use for things like gps-pickers (which writes into multiple fields) or for custom-data which serializes something exotic into the db like an array, a custom json or anything' },\r\n  DateTime: { label: calculateTypeLabel(DataTypeCatalog.DateTime), description: 'For date, time or combined values' },\r\n  Empty: { label: calculateTypeLabel(DataTypeCatalog.Empty), description: 'Use to structure your form' },\r\n  Entity: { label: calculateTypeLabel(DataTypeCatalog.Entity), description: 'One or more other content-items' },\r\n  Hyperlink: { label: calculateTypeLabel(DataTypeCatalog.Hyperlink), description: 'Hyperlink or reference to a picture / file' },\r\n  Number: { label: calculateTypeLabel(DataTypeCatalog.Number), description: 'Any kind of number' },\r\n  String: { label: calculateTypeLabel(DataTypeCatalog.String), description: 'Any kind of text' },\r\n};\r\n\r\nexport interface DataType {\r\n  name: string;\r\n  label: string;\r\n  icon: string;\r\n  description: string;\r\n}\r\n\r\nexport function calculateDataTypes(rawDataTypes: string[]): DataType[] {\r\n  const dataTypes: DataType[] = [];\r\n  for (const rawDataType of rawDataTypes) {\r\n    dataTypes.push({\r\n      name: rawDataType,\r\n      label: dataTypeLabels[rawDataType].label,\r\n      icon: calculateTypeIcon(rawDataType),\r\n      description: dataTypeLabels[rawDataType].description,\r\n    });\r\n  }\r\n  return dataTypes;\r\n}\r\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\r\nimport { Component, input } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n    selector: 'app-field-hint',\r\n    templateUrl: './field-hint.component.html',\r\n    styleUrls: ['./field-hint.component.scss'],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        NgClass,\r\n        NgTemplateOutlet\r\n    ]\r\n})\r\nexport class FieldHintComponent {\r\n  isError = input<boolean>(false);\r\n  isShort = true;\r\n\r\n  constructor() { }\r\n\r\n  toggleIsShort() {\r\n    this.isShort = !this.isShort;\r\n  }\r\n}\r\n","<div class=\"hint-box\" (click)=\"toggleIsShort()\" [ngClass]=\"{ 'hint-box__short': isShort }\">\r\n  @switch (isError()) {\r\n    @case (false) {\r\n      <mat-hint>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-hint>\r\n    }\r\n    @case (true) {\r\n      <mat-error>\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </mat-error>\r\n    }\r\n  }\r\n</div>\r\n\r\n<ng-template #content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n","export const DataTypeCatalog = {\r\n  Boolean: 'Boolean',\r\n  Custom: 'Custom',\r\n  DateTime: 'DateTime',\r\n  Empty: 'Empty',\r\n  Entity: 'Entity',\r\n  Hyperlink: 'Hyperlink',\r\n  Number: 'Number',\r\n  String: 'String',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","export const InputTypeCatalog = {\r\n  // Boolean\r\n  BooleanDefault: 'boolean-default',\r\n  BooleanTristate: 'boolean-tristate',\r\n\r\n  // Custom\r\n  CustomDefault: 'custom-default',\r\n  CustomGps: 'custom-gps',\r\n  CustomJsonEditor: 'custom-json-editor',\r\n\r\n  // Date / Time\r\n  DateTimeDefault: 'datetime-default',\r\n\r\n  DefaultSuffix: '-default',\r\n\r\n  // Empty\r\n  EmptyDefault: 'empty-default',\r\n  EmptyEnd: 'empty-end',\r\n  EmptyMessage: 'empty-message',\r\n\r\n  // Entity - all pickers\r\n  EntityContentBlocks: 'entity-content-blocks',\r\n  EntityDefault: 'entity-default',\r\n  EntityQuery: 'entity-query',\r\n\r\n  // External\r\n  ExternalWebComponent: 'external-web-component',\r\n\r\n  // Hyperlink / File\r\n  HyperlinkDefault: 'hyperlink-default',\r\n  HyperlinkLibrary: 'hyperlink-library',\r\n\r\n  // Numbers\r\n  NumberDefault: 'number-default',\r\n  NumberDropdown: 'number-dropdown', // picker\r\n\r\n  // String\r\n  StringDefault: 'string-default',\r\n  StringDropdown: 'string-dropdown', // picker\r\n  StringDropdownQuery: 'string-dropdown-query', // picker\r\n  StringFontIconPicker: 'string-font-icon-picker',\r\n  StringJson: 'string-json',\r\n  StringTemplatePicker: 'string-template-picker', // picker\r\n  StringUrlPath: 'string-url-path',\r\n  StringWysiwyg: 'string-wysiwyg',\r\n\r\n  /** New Pickers v17.x */\r\n  EntityPicker: 'entity-picker',\r\n  StringPicker: 'string-picker',\r\n  NumberPicker: 'number-picker',\r\n\r\n  /** for all situations where we need a fallback; new v16.04 */\r\n  Unknown: 'unknown',\r\n} as const /* the as const ensures that the keys/values can be strictly checked */;\r\n","import { scanInternals } from './scanInternals';\nimport { operate } from '../util/lift';\nexport function reduce(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n"],"names":["AsyncPipe","NgClass","ElementRef","QueryList","FormsModule","NgForm","MatButtonModule","MatOptionModule","MatDialogActions","MatDialogRef","MatFormFieldModule","MatIconModule","MatInputModule","MatSelectModule","MatSnackBar","ActivatedRoute","TranslateModule","BehaviorSubject","catchError","concatMap","filter","forkJoin","map","of","share","switchMap","toArray","transient","fieldNameError","fieldNamePattern","ContentTypesService","BaseComponent","FieldHintComponent","ContentTypesFieldsService","DataTypeCatalog","InputTypeCatalog","calculateTypeIcon","calculateTypeLabel","calculateDataTypes","ReservedNamesValidatorDirective","i0","ɵɵtext","ɵɵelementStart","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","ɵɵtextInterpolate1","staticName_r5","errors","reservedNames","ɵɵtemplate","EditContentTypeFieldsComponent_Conditional_6_For_4_Conditional_8_Conditional_0_Template","EditContentTypeFieldsComponent_Conditional_6_For_4_Conditional_8_Conditional_1_Template","ɵɵconditional","pattern","dataType_r7","name","icon","label","option_r8","EditContentTypeFieldsComponent_Conditional_6_For_4_For_34_Conditional_4_Template","inputType","ɵɵpureFunction1","_c2","isObsolete","ɵɵtwoWayListener","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_input_ngModelChange_5_listener","$event","field_r4","ɵɵrestoreView","_r3","$implicit","ɵɵtwoWayBindingSet","StaticName","ɵɵresetView","EditContentTypeFieldsComponent_Conditional_6_For_4_Conditional_8_Template","ɵɵlistener","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_selectionChange_13_listener","ɵ$index_19_r6","$index","ɵɵnextContext","filterInputTypeOptions","resetInputType","calculateHints","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_ngModelChange_13_listener","Type","ɵɵrepeaterCreate","EditContentTypeFieldsComponent_Conditional_6_For_4_For_20_Template","ɵɵrepeaterTrackByIdentity","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_selectionChange_27_listener","EditContentTypeFieldsComponent_Conditional_6_For_4_Template_mat_select_ngModelChange_27_listener","InputType","EditContentTypeFieldsComponent_Conditional_6_For_4_For_34_Template","ɵɵtwoWayProperty","editMode","touched","findIcon","findLabel","ɵɵrepeater","dataTypes","dataTypeHints","tmp_31_0","getInputTypeOption","tmp_32_0","filteredInputTypeOptions","inputTypeHints","EditContentTypeFieldsComponent_Conditional_6_Template_form_ngSubmit_0_listener","_r1","save","EditContentTypeFieldsComponent_Conditional_6_For_4_Template","ɵɵelement","EditContentTypeFieldsComponent_Conditional_6_Template_button_click_7_listener","dialog","close","fields","ngForm_r9","form","valid","ɵɵpipeBind1","saving$","EditContentTypeFieldsComponent","contentType","inputTypeOptions","contentTypesSvc","contentTypesFieldsSvc","constructor","route","snackBar","hostClass","loading$","disableClose","subscriptions","add","backdropClick","subscribe","event","dirty","confirmed","confirm","ngAfterViewInit","autoFocusInputField","setTimeout","first","nativeElement","focus","ngOnInit","snapshot","paramMap","get","contentTypeStaticName","contentType$","retrieveContentType","pipe","fields$","getFields","dataTypes$","typeListRetrieve","rawDataTypes","inputTypes$","getInputTypesList","reservedNames$","getReservedNames","inputTypes","mergeReserved","editFieldId","parseInt","editField","find","field","Id","push","i","String","StringDefault","IsTitle","length","SortOrder","next","ngOnDestroy","complete","index","option","dataType","toLocaleLowerCase","defaultInputType","DefaultSuffix","defaultExists","some","selectedDataType","selectedInputType","inputTypeOption","description","obsoleteMessage","inputName","open","doneAndClose","duration","rename","updateInputType","error","ɵɵdirectiveInject","i1","i2","i3","selectors","viewQuery","EditContentTypeFieldsComponent_Query","rf","ctx","ɵɵhostProperty","EditContentTypeFieldsComponent_Conditional_3_Template","EditContentTypeFieldsComponent_Conditional_4_Template","EditContentTypeFieldsComponent_Conditional_5_Template","EditContentTypeFieldsComponent_Conditional_6_Template","undefined","i4","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","PatternValidator","NgModel","i5","MatFormField","MatLabel","i6","MatInput","i7","MatSelect","MatSelectTrigger","i8","MatOption","i9","MatIcon","i10","MatButton","styles","dataTypeLabels","Boolean","Custom","DateTime","Empty","Entity","Hyperlink","Number","rawDataType","NgTemplateOutlet","input","ɵɵelementContainer","FieldHintComponent_Case_1_ng_container_1_Template","content_r2","FieldHintComponent_Case_2_ng_container_1_Template","ɵɵprojection","isError","isShort","toggleIsShort","inputs","ngContentSelectors","_c0","decls","vars","consts","template","FieldHintComponent_Template","FieldHintComponent_Template_div_click_0_listener","FieldHintComponent_Case_1_Template","FieldHintComponent_Case_2_Template","FieldHintComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","_c1","tmp_2_0","MatHint","MatError","BooleanDefault","BooleanTristate","CustomDefault","CustomGps","CustomJsonEditor","DateTimeDefault","EmptyDefault","EmptyEnd","EmptyMessage","EntityContentBlocks","EntityDefault","EntityQuery","ExternalWebComponent","HyperlinkDefault","HyperlinkLibrary","NumberDefault","NumberDropdown","StringDropdown","StringDropdownQuery","StringFontIconPicker","StringJson","StringTemplatePicker","StringUrlPath","StringWysiwyg","EntityPicker","StringPicker","NumberPicker","Unknown","scanInternals","operate","reduce","accumulator","seed","arguments"],"sourceRoot":"webpack:///","x_google_ignoreList":[7]}